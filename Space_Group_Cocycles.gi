#####################################################################
#Space Group No. 47 (Pmmm)
C247 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p47 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
P47 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 48 (Pnnn)
C248 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p48 := [[-1, 0, 0, 1/2], [0, 1, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P48 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 49 (Pccm)
C249 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p49 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P49 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 50 (Pban)
C250 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p50 := [[-1, 0, 0, 1/2], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
P50 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 51 (Pmma)
C251 := [[-1, 0, 0, 1/2], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p51 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
P51 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 52 (Pnna)
C252 := [[-1, 0, 0, 1/2], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p52 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P52 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 53 (Pmna)
C253 := [[-1, 0, 0, 1/2], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C2p53 := [[-1, 0, 0, 1/2], [0, 1, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P53 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 54 (Pcca)
C254 := [[-1, 0, 0, 1/2], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p54 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P54 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 55 (Pbam)
C255 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p55 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 0], [0, 0, 0, 1]];
P55 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 56 (Pccn)
C256 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p56 := [[-1, 0, 0, 0], [0, 1, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P56 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 57 (Pbcm)
C257 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C2p57 := [[-1, 0, 0, 0], [0, 1, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P57 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 58 (Pnnm)
C258 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p58 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P58 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 59 (Pmmn)
C259 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p59 := [[-1, 0, 0, 0], [0, 1, 0, 1/2], [0, 0, -1, 0], [0, 0, 0, 1]];
P59 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 60 (Pbcn)
C260 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C2p60 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P60 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 61 (Pbca)
C261 := [[-1, 0, 0, 1/2], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C2p61 := [[-1, 0, 0, 0], [0, 1, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P61 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 62 (Pnma)
C262 := [[-1, 0, 0, 1/2], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C2p62 := [[-1, 0, 0, 0], [0, 1, 0, 1/2], [0, 0, -1, 0], [0, 0, 0, 1]];
P62 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 63 (Cmcm)
C263 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C2p63 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P63 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 64 (Cmce)
C264 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C2p64 := [[0, 1, 0, 1/2], [1, 0, 0, -1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P64 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 65 (Cmmm)
C265 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p65 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
P65 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 66 (Cccm)
C266 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p66 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P66 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 67 (Cmme)
C267 := [[-1, 0, 0, 1/2], [0, -1, 0, -1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p67 := [[0, 1, 0, 1/2], [1, 0, 0, -1/2], [0, 0, -1, 0], [0, 0, 0, 1]];
P67 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 68 (Ccce)
C268 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p68 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
P68 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 69 (Fmmm)
C269 := [[0, 1, 0, 0], [1, 0, 0, 0], [-1, -1, -1, 0], [0, 0, 0, 1]];
C2p69 := [[0, 0, 1, 0], [-1, -1, -1, 0], [1, 0, 0, 0], [0, 0, 0, 1]];
P69 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 70 (Fddd)
C270 := [[0, 1, 0, 0], [1, 0, 0, 0], [-1, -1, -1, 1/2], [0, 0, 0, 1]];
C2p70 := [[0, 0, 1, 0], [-1, -1, -1, 1/2], [1, 0, 0, 0], [0, 0, 0, 1]];
P70 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 71 (Immm)
C271 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2p71 := [[0, -1, 1, 0], [0, -1, 0, 0], [1, -1, 0, 0], [0, 0, 0, 1]];
P71 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 72 (Ibam)
C272 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2p72 := [[0, -1, 1, 1/2], [0, -1, 0, 1/2], [1, -1, 0, 0], [0, 0, 0, 1]];
P72 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 73 (Ibca)
C273 := [[0, 1, -1, 1/2], [1, 0, -1, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
C2p73 := [[0, -1, 1, 0], [0, -1, 0, 1/2], [1, -1, 0, 1/2], [0, 0, 0, 1]];
P73 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 74 (Imma)
C274 := [[0, 1, -1, 1/2], [1, 0, -1, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
C2p74 := [[0, -1, 1, 1/2], [0, -1, 0, 1], [1, -1, 0, 1/2], [0, 0, 0, 1]];
P74 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 75 (P4)
C275 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C475 := [[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 76 (P4_1)
C276 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C476 := [[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 1/4], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 77 (P4_2)
C277 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C477 := [[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 78 (P4_3)
C278 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C478 := [[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 3/4], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 79 (I4)
C279 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C479 := [[0, 1, 0, 0], [0, 1, -1, 0], [-1, 1, 0, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 80 (I4_1)
C280 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C480 := [[0, 1, 0, 3/4], [0, 1, -1, 1/4], [-1, 1, 0, -1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 81 (P-4)
C281 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C481 := [[0, 1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 82 (I-4)
C282 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C482 := [[0, -1, 0, 0], [0, -1, 1, 0], [1, -1, 0, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 83 (P4/m)
C283 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C483 := [[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
P83 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 84 (P4_2/m)
C284 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C484 := [[0, -1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P84 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 85 (P4/n)
C285 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C485 := [[0, -1, 0, 1/2], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
P85 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 86 (P4_2/n)
C286 := [[-1, 0, 0, -1/2], [0, -1, 0, 1/2], [0, 0, 1, 1], [0, 0, 0, 1]];
C486 := [[0, -1, 0, 0], [1, 0, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P86 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 87 (I4/m)
C287 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C487 := [[0, 1, 0, 0], [0, 1, -1, 0], [-1, 1, 0, 0], [0, 0, 0, 1]];
P87 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 88 (I4_1/a)
C288 := [[0, 1, -1, 1/2], [1, 0, -1, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
C488 := [[0, 1, 0, 1/2], [0, 1, -1, 1], [-1, 1, 0, 1], [0, 0, 0, 1]];
P88 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 89 (P422)
C289 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p89 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2pp89 := [[0, -1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 90 (P42_12)
C290 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p90 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 0], [0, 0, 0, 1]];
C2pp90 := [[0, -1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 91 (P4_122)
C291 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C2p91 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2pp91 := [[0, -1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 1/4], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 92 (P4_12_12)
C292 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C2p92 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 1/4], [0, 0, 0, 1]];
C2pp92 := [[0, -1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 93 (P4_222)
C293 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p93 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2pp93 := [[0, -1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 94 (P4_22_12)
C294 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p94 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
C2pp94 := [[0, -1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 95 (P4_322)
C295 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C2p95 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2pp95 := [[0, -1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 3/4], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 96 (P4_32_12)
C296 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
C2p96 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 3/4], [0, 0, 0, 1]];
C2pp96 := [[0, -1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 97 (I422)
C297 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2p97 := [[0, -1, 1, 0], [0, -1, 0, 0], [1, -1, 0, 0], [0, 0, 0, 1]];
C2pp97 := [[0, -1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 98 (I4_122)
C298 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2p98 := [[0, -1, 1, 3/4], [0, -1, 0, 5/4], [1, -1, 0, 1/2], [0, 0, 0, 1]];
C2pp98 := [[0, -1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 99 (P4mm)
C299 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
Mp99 := [[1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
M99 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 100 (P4bm)
C2100 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
Mp100 := [[1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
M100 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 101 (P4_2cm)
C2101 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
Mp101 := [[1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
M101 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 102 (P4_2nm)
C2102 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
Mp102 := [[1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
M102 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 103 (P4cc)
C2103 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
Mp103 := [[1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
M103 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 104 (P4nc)
C2104 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
Mp104 := [[1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
M104 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 105 (P4_2mc)
C2105 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
Mp105 := [[1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
M105 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 106 (P4_2bc)
C2106 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
Mp106 := [[1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
M106 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 107 (I4mm)
C2107 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
Mp107 := [[0, 1, -1, 0], [0, 1, 0, 0], [-1, 1, 0, 0], [0, 0, 0, 1]];
M107 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 108 (I4cm)
C2108 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
Mp108 := [[0, 1, -1, 1/2], [0, 1, 0, 1/2], [-1, 1, 0, 0], [0, 0, 0, 1]];
M108 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 109 (I4_1md)
C2109 := [[0, 1, -1, 1], [1, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 1]];
Mp109 := [[0, 1, -1, 0], [0, 1, 0, 0], [-1, 1, 0, 0], [0, 0, 0, 1]];
M109 := [[0, 1, 0, 3/4], [1, 0, 0, 5/4], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 110 (I4_1cd)
C2110 := [[0, 1, -1, 1], [1, 0, -1, 1], [0, 0, -1, 1], [0, 0, 0, 1]];
Mp110 := [[0, 1, -1, 1/2], [0, 1, 0, 1/2], [-1, 1, 0, 0], [0, 0, 0, 1]];
M110 := [[0, 1, 0, 1/4], [1, 0, 0, 3/4], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 111 (P-42m)
C2111 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p111 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
M111 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 112 (P-42c)
C2112 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p112 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
M112 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 113 (P-42_1m)
C2113 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p113 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 0], [0, 0, 0, 1]];
M113 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 114 (P-42_1c)
C2114 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p114 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
M114 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 115 (P-4m2)
C2115 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p115 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
M115 := [[1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 116 (P-4c2)
C2116 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p116 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
M116 := [[1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 117 (P-4b2)
C2117 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p117 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, -1, 0], [0, 0, 0, 1]];
M117 := [[1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 118 (P-4n2)
C2118 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p118 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
M118 := [[1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 119 (I-4m2)
C2119 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2p119 := [[0, -1, 0, 0], [-1, 0, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
M119 := [[0, 1, -1, 0], [0, 1, 0, 0], [-1, 1, 0, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 120 (I-4c2)
C2120 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2p120 := [[-1, 0, 1, 1/2], [0, -1, 1, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
M120 := [[0, 1, -1, 1/2], [0, 1, 0, 1/2], [-1, 1, 0, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 121 (I-42m)
C2121 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2p121 := [[0, -1, 1, 0], [0, -1, 0, 0], [1, -1, 0, 0], [0, 0, 0, 1]];
M121 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 122 (I-42d)
C2122 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2p122 := [[0, -1, 1, 3/4], [0, -1, 0, 5/4], [1, -1, 0, 1/2], [0, 0, 0, 1]];
M122 := [[0, 1, 0, 3/4], [1, 0, 0, 1/4], [0, 0, 1, 1/2], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 123 (P4/mmm)
C2123 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p123 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
M123 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
P123 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 124 (P4/mcc)
C2124 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p124 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
M124 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P124 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 125 (P4/nbm)
C2125 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p125 := [[-1, 0, 0, 1/2], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
M125 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
P125 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 126 (P4/nnc)
C2126 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p126 := [[-1, 0, 0, 1/2], [0, 1, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
M126 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P126 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 127 (P4/mbm)
C2127 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p127 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 0], [0, 0, 0, 1]];
M127 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
P127 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 128 (P4/mnc)
C2128 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p128 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
M128 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P128 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 129 (P4/nmm)
C2129 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p129 := [[-1, 0, 0, 0], [0, 1, 0, 1/2], [0, 0, -1, 0], [0, 0, 0, 1]];
M129 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
P129 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 130 (P4/ncc)
C2130 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p130 := [[-1, 0, 0, 0], [0, 1, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
M130 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P130 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 131 (P4_2/mmc)
C2131 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p131 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
M131 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P131 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 132 (P4_2/mcm)
C2132 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p132 := [[-1, 0, 0, 0], [0, 1, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
M132 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
P132 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 133 (P4_2/nbc)
C2133 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p133 := [[-1, 0, 0, 1/2], [0, 1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
M133 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P133 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 134 (P4_2/nnm)
C2134 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p134 := [[-1, 0, 0, 1/2], [0, 1, 0, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
M134 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
P134 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 135 (P4_2/mbc)
C2135 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p135 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 0], [0, 0, 0, 1]];
M135 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P135 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 136 (P4_2/mnm)
C2136 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p136 := [[-1, 0, 0, 1/2], [0, 1, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
M136 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
P136 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 137 (P4_2/nmc)
C2137 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p137 := [[-1, 0, 0, 0], [0, 1, 0, 1/2], [0, 0, -1, 0], [0, 0, 0, 1]];
M137 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P137 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 138 (P4_2/ncm)
C2138 := [[-1, 0, 0, 1/2], [0, -1, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
C2p138 := [[-1, 0, 0, 0], [0, 1, 0, 1/2], [0, 0, -1, 1/2], [0, 0, 0, 1]];
M138 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
P138 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 139 (I4/mmm)
C2139 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2p139 := [[0, -1, 1, 0], [0, -1, 0, 0], [1, -1, 0, 0], [0, 0, 0, 1]];
M139 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
P139 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 140 (I4/mcm)
C2140 := [[0, 1, -1, 0], [1, 0, -1, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
C2p140 := [[0, -1, 1, 1/2], [0, -1, 0, 1/2], [1, -1, 0, 0], [0, 0, 0, 1]];
M140 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 0], [0, 0, 0, 1]];
P140 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 141 (I4_1/amd)
C2141 := [[0, 1, -1, 1/2], [1, 0, -1, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
C2p141 := [[0, -1, 1, 1/2], [0, -1, 0, 1], [1, -1, 0, 1/2], [0, 0, 0, 1]];
M141 := [[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P141 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################
#Space Group No. 142 (I4_1/acd)
C2142 := [[0, 1, -1, 1/2], [1, 0, -1, 0], [0, 0, -1, 1/2], [0, 0, 0, 1]];
C2p142 := [[0, -1, 1, 0], [0, -1, 0, 1/2], [1, -1, 0, 1/2], [0, 0, 0, 1]];
M142 := [[0, 1, 0, 1/2], [1, 0, 0, 1/2], [0, 0, 1, 1/2], [0, 0, 0, 1]];
P142 := [[-1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]];
#####################################################################






#####################################################################
#Space Group No. 47 ( Pmmm)
#####################################################################
Aiin47:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin47:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin47:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axin47:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1;
end;
#####################################################################
Ayin47:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return y1;
end;
#####################################################################
Azin47:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
#####################################################################
#Space Group No. 48 ( Pnnn)
#####################################################################
Aiin48:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin48:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin48:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axyzin48:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
#####################################################################
#Space Group No. 49 ( Pccm)
#####################################################################
Aiin49:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin49:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin49:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axin49:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1;
end;
#####################################################################
Ayin49:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return y1;
end;
#####################################################################
#####################################################################
#Space Group No. 50 ( Pban)
#####################################################################
Aiin50:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin50:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin50:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Azin50:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bphiin50:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b2*c1 + c1*c2 + a2*c1*c2 + b2*c1*c2 + a2*x1 + c2*x1 + c1*x2 + a2*y1 + b2*y1;
end;
#####################################################################
#####################################################################
#Space Group No. 51 ( Pmma)
#####################################################################
Aiin51:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin51:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin51:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Ayin51:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return y1;
end;
#####################################################################
Azin51:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
#####################################################################
#Space Group No. 52 ( Pnna)
#####################################################################
Aiin52:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin52:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin52:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Bphi1in52:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a1*b2 + a1*a2*c1 + a2*b1*c1 + a1*a2*b1*c1 + a1*a2*b2*c1 + a1*b1*b2*c1 + a2*b1*b2*c1 + a2*b1*c2 + b1*b2*c2 + c1*c2 + a2*c1*c2 + a1*a2*c1*c2 + a2*b1*c1*c2 + b2*c1*c2 + a1*b2*c1*c2 + b1*b2*c1*c2 + a2*x1 + a2*b1*x1 + b2*x1 + a1*b2*x1 + a2*b2*x1 + a1*c2*x1 + a2*c2*x1 + b1*c2*x1 + b2*c2*x1 + a1*b1*x2 + a2*b1*x2 + a1*b2*x2 + c1*x2 + a1*c1*x2 + b1*c1*x2 + a1*c2*x2 + b1*c2*x2 + x1*x2 + c2*y1 + a2*z1 + b2*z1 + c2*z1;
end;
#####################################################################
Bphi2in52:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*c1 + b2*c1 + a1*b2*c1 + b1*b2*c1 + a1*b1*c2 + a1*b2*c2 + b1*b2*c2 + c1*c2 + b2*x1 + c2*y1 + c1*y2 + a2*z1 + b2*z1 + c2*z1 + c1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 53 ( Pmna)
#####################################################################
Aiin53:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin53:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin53:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Ayin53:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return y1;
end;
#####################################################################
Bphiin53:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2*b2 + a2*b1*b2 + a1*a2*c1 + a2*b1*c1 + b2*c1 + a1*b2*c1 + b1*b2*c1 + a1*c2 + a1*a2*c2 + b1*c2 + a2*b1*c2 + a1*a2*b2*c2 + a2*b1*b2*c2 + c1*c2 + a2*c1*c2 + a1*a2*c1*c2 + a2*b1*c1*c2 + b2*c1*c2 + a1*b2*c1*c2 + b1*b2*c1*c2 + a2*x1 + c2*x1 + a1*a2*z1 + a2*b1*z1 + b2*z1 + c2*z1 + a1*c2*z1 + a2*c2*z1 + b1*c2*z1 + b2*c2*z1 + a1*a2*z2 + a2*b1*z2 + c1*z2 + a1*c1*z2 + b1*c1*z2 + a1*c2*z2 + b1*c2*z2 + z1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 54 ( Pcca)
#####################################################################
Aiin54:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin54:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin54:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Ayin54:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return y1;
end;
#####################################################################
#####################################################################
#Space Group No. 55 ( Pbam)
#####################################################################
Aiin55:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin55:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin55:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Azin55:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bphiin55:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a1*a2*b1 + b1*c2 + a1*b1*c2 + a1*b2*c2 + b1*b2*c2 + a2*b1*b2*c2 + b2*c1*c2 + b1*b2*c1*c2 + a2*x1 + a2*b1*x1 + c2*x1 + b1*c2*x1 + b2*c2*x1 + a1*x2 + a2*b1*x2 + c1*x2 + b1*c1*x2 + b1*c2*x2 + x1*x2 + a2*y1 + c2*y1;
end;
#####################################################################
#####################################################################
#Space Group No. 56 ( Pccn)
#####################################################################
Aiin56:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin56:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin56:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Bphi1in56:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*b2*c1 + a1*c2 + b1*c2 + a1*b1*c2 + a2*b1*c2 + a1*b2*c2 + a2*x1 + b2*x1 + a2*y1 + b2*y1 + b1*y2;
end;
#####################################################################
Bphi2in56:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a1*a2*b1 + a1*a2*c1 + a2*b1*c1 + b2*c1 + a1*b2*c1 + a2*b2*c1 + b1*b2*c1 + a1*c2 + b1*c2 + a1*b1*c2 + a2*b1*c2 + a1*b2*c2 + b1*b2*c2 + a2*x1 + c2*x1 + a1*x2 + c2*y1 + b2*z1 + c2*z1;
end;
#####################################################################
#####################################################################
#Space Group No. 57 ( Pbcm)
#####################################################################
Aiin57:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin57:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin57:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axin57:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1;
end;
#####################################################################
#####################################################################
#Space Group No. 58 ( Pnnm)
#####################################################################
Aiin58:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin58:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin58:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Bphi1in58:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*b2 + a2*x1 + b1*x2 + a2*y1 + b1*z2;
end;
#####################################################################
Bphi2in58:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return b1*b2*x1 + b1*b2*x2 + x1*x2 + b1*b2*y1 + x2*y1 + b1*b2*y2 + x1*y2 + y1*y2;
end;
#####################################################################
Bphi3in58:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2*b1 + a1*a2*b1*b2 + a2*x1 + b1*b2*x1 + b1*x2 + b1*b2*x2 + x1*x2 + a1*b2*y1 + a2*b2*y1 + x2*y1 + a1*b1*y2 + a1*b2*y2 + x1*y2 + a2*z1 + a1*b2*z1 + a2*b2*z1 + b1*b2*z1 + y2*z1 + b1*z2 + a1*b1*z2 + a1*b2*z2 + b1*b2*z2 + y1*z2 + z1*z2;
end;
#####################################################################
Cin58:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3*b2 + a3*b1*b2 + a1*a3*b1*b2 + a1*a2*a3*b1*b2 + a1*a2*a3*b1*b3 + a1*a3*b2*b3 + a1*a2*a3*b2*b3 + a2*b1*b2*b3 + a2*a3*b1*b2*b3 + a2*a3*b2*c1 + a3*b1*b2*c1 + a1*b2*b3*c1 + a2*b2*b3*c1 + a3*b2*b3*c1 + a2*a3*b2*b3*c1 + a1*b1*b2*b3*c1 + a1*a3*b2*x1 + a3*b1*b2*x1 + a2*b3*x1 + a1*a2*b3*x1 + a2*a3*b3*x1 + a1*b2*b3*x1 + a2*b2*b3*x1 + a3*b2*b3*x1 + a3*b2*c1*x1 + a1*a3*b1*x2 + a1*a3*b2*x2 + a1*a2*b3*x2 + b1*b3*x2 + a2*b1*b3*x2 + a3*b1*b3*x2 + a1*b2*b3*x2 + b3*c1*x2 + a2*b3*c1*x2 + a3*b3*c1*x2 + a1*a2*b1*x3 + a1*a2*a3*b1*x3 + a1*a2*b2*x3 + a1*b1*b2*x3 + a2*a3*b1*b2*x3 + a1*a2*a3*b1*b2*x3 + a1*a2*b3*x3 + a2*b1*b3*x3 + a1*b2*b3*x3 + a2*b2*c1*x3 + a1*a3*b2*c1*x3 + a2*a3*b2*c1*x3 + b1*b2*c1*x3 + a1*a3*b1*b2*c1*x3 + a2*a3*b1*b2*c1*x3 + a2*b3*c1*x3 + a3*b1*b2*y1 + a1*a3*b1*b2*y1 + a1*a2*a3*b1*b2*y1 + b2*b3*y1 + a1*b2*b3*y1 + a2*b2*b3*y1 + a3*b2*b3*y1 + a3*b2*c1*y1 + b2*b3*c1*y1 + a1*a3*b1*x2*y1 + a1*a2*b1*x3*y1 + a2*a3*b1*x3*y1 + a1*a3*b2*x3*y1 + a2*a3*b2*x3*y1 + a1*b2*b3*y2 + b1*b2*b3*y2 + b2*b3*c1*y2 + a1*a3*b1*x3*y2 + a2*a3*b1*x3*y2 + a1*a3*b2*x3*y2 + c1*x3*y2 + b1*b2*y3 + a1*b1*b2*y3 + a2*b1*b2*y3 + a1*b2*b3*y3 + b1*b2*b3*y3 + b1*b2*c1*y3 + b2*b3*c1*y3 + b1*y2*y3 + a2*a3*z1 + a1*a3*b2*z1 + a3*b1*b2*z1 + a1*a2*b3*z1 + a2*a3*b3*z1 + a1*b2*b3*z1 + a2*b2*b3*z1 + a3*b2*b3*z1 + a1*a3*b1*z2 + a1*a3*b2*z2 + a3*b1*b2*z2 + a1*a2*b3*z2 + a1*b1*b3*z2 + a2*b1*b3*z2 + a3*b1*b3*z2 + a1*b2*b3*z2 + a2*b3*c1*z2 + a3*b3*c1*z2 + a3*x1*z2 + b1*x3*z2 + c1*x3*z2 + a3*y1*z2 + a1*a3*b1*y1*z2 + b3*y1*z2 + a1*a2*b1*z3 + a1*a2*a3*b1*z3 + a1*a2*b2*z3 + b1*b2*z3 + a2*b1*b2*z3 + a2*a3*b1*b2*z3 + a1*a2*a3*b1*b2*z3 + a1*a2*b3*z3 + a2*b1*b3*z3 + b1*b2*b3*z3 + a2*b2*c1*z3 + a1*a3*b2*c1*z3 + a2*a3*b2*c1*z3 + a1*a3*b1*b2*c1*z3 + a2*a3*b1*b2*c1*z3 + a2*b3*c1*z3 + b2*b3*c1*z3 + a1*a2*b1*y1*z3 + a2*a3*b1*y1*z3 + a1*a3*b2*y1*z3 + a2*a3*b2*y1*z3 + b1*y2*z3 + a1*a3*b1*y2*z3 + a2*a3*b1*y2*z3 + a1*a3*b2*y2*z3 + c1*y2*z3 + b1*z2*z3 + c1*z2*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 59 ( Pmmn)
#####################################################################
Aiin59:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin59:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin59:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Azin59:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bphiin59:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*b2*c1 + a1*c2 + b1*c2 + a1*b1*c2 + a2*b1*c2 + a1*b2*c2 + a2*x1 + b2*x1 + a2*y1 + b2*y1 + b1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 60 ( Pbcn)
#####################################################################
Aiin60:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin60:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin60:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Bphiin60:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a1*a2*b1 + a2*b1*b2 + a1*a2*b1*b2 + a1*a2*c1 + a2*b1*c1 + b2*c1 + a1*a2*b2*c1 + a1*a2*b1*c2 + c1*c2 + a2*c1*c2 + a1*a2*c1*c2 + a2*x1 + a1*b2*x1 + a2*b2*x1 + c2*x1 + a1*c2*x1 + a2*c2*x1 + b1*x2 + a1*b1*x2 + a1*b2*x2 + c1*x2 + a1*c1*x2 + a1*c2*x2 + x1*x2 + b2*y1 + c2*y1;
end;
#####################################################################
#####################################################################
#Space Group No. 61 ( Pbca)
#####################################################################
Aiin61:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin61:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin61:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Cin61:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3*b1 + a2*a3*b1*b2 + a2*a3*b1*b3 + a2*b1*b2*b3 + a3*b1*b2*b3 + a1*a2*a3*c1 + a1*a2*a3*b2*c1 + a2*a3*b1*b2*c1 + a1*a2*a3*b1*b2*c1 + a2*a3*b3*c1 + a2*b2*b3*c1 + a3*b2*b3*c1 + a2*a3*b1*x1 + a1*a2*a3*b1*x1 + a2*b3*x1 + b2*b3*x1 + a2*a3*c1*x1 + a1*a2*a3*c1*x1 + a1*a3*b2*c1*x1 + a2*a3*b2*c1*x1 + a1*a2*a3*b1*x2 + a2*b1*b3*x2 + a3*b1*b3*x2 + b1*b2*b3*x2 + a1*a2*a3*c1*x2 + a1*a3*b2*c1*x2 + a2*a3*b2*c1*x2 + a2*b3*c1*x2 + a3*b3*c1*x2 + b2*b3*c1*x2 + a2*a3*b1*x3 + a2*b1*b2*x3 + a2*b1*b3*x3 + b1*b2*b3*x3 + a2*a3*c1*x3 + a2*b2*c1*x3 + a2*b3*c1*x3 + b2*b3*c1*x3 + b1*x2*x3 + c1*x2*x3 + a2*a3*b1*y2 + a2*b1*b3*y2 + a3*b1*b3*y2 + b1*b2*b3*y2 + a2*a3*c1*y2 + a2*b3*c1*y2 + a3*b3*c1*y2 + b2*b3*c1*y2 + b1*x3*y2 + c1*x3*y2 + a2*a3*b1*y3 + a2*b1*b2*y3 + a2*b1*b3*y3 + b1*b2*b3*y3 + a2*a3*c1*y3 + a2*b2*c1*y3 + a2*b3*c1*y3 + b2*b3*c1*y3 + b1*x2*y3 + c1*x2*y3 + b1*y2*y3 + c1*y2*y3 + a2*a3*b1*z1 + a1*a2*a3*b1*z1 + a2*a3*c1*z1 + a1*a2*a3*c1*z1 + a2*a3*x1*z1 + a1*a3*x2*z1 + a2*a3*x2*z1 + a1*a2*a3*b1*z2 + a2*b1*b3*z2 + a3*b1*b3*z2 + b1*b2*b3*z2 + a1*a2*a3*c1*z2 + a2*b3*c1*z2 + a3*b3*c1*z2 + b2*b3*c1*z2 + a1*a3*x1*z2 + a2*a3*x1*z2 + a1*a3*x2*z2 + b1*x3*z2 + c1*x3*z2 + b1*y3*z2 + c1*y3*z2 + a2*a3*b1*z3 + a2*b1*b2*z3 + a2*b1*b3*z3 + b1*b2*b3*z3 + a2*a3*c1*z3 + a2*b2*c1*z3 + a2*b3*c1*z3 + b2*b3*c1*z3 + b1*x2*z3 + c1*x2*z3 + b1*y2*z3 + c1*y2*z3 + b1*z2*z3 + c1*z2*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 62 ( Pnma)
#####################################################################
Aiin62:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin62:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin62:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Bphi1in62:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a1*a2*b1 + a1*a2*b2 + a1*b1*b2 + a1*a2*c1 + a2*b1*c1 + a1*b2*c1 + a2*b2*c1 + b1*b2*c2 + a2*c1*c2 + b2*c1*c2 + a2*x1 + b2*x1 + c2*x1 + a1*x2 + b1*x2 + c1*x2 + b2*y1 + c2*y1 + a1*y2 + b1*y2 + c1*y2 + b2*z1;
end;
#####################################################################
Bphi2in62:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*a2*b1 + a1*b2 + a2*b1*b2 + a1*a2*b1*b2 + a1*a2*b1*c1 + b2*c1 + a1*b2*c1 + a2*b2*c1 + b1*b2*c1 + a1*b1*b2*c1 + a2*b1*c2 + b1*b2*c2 + b2*c1*c2 + a2*x1 + a2*b1*x1 + a1*b2*x1 + a2*b2*x1 + a2*c1*x1 + a1*c2*x1 + a2*c2*x1 + b1*x2 + a1*b1*x2 + a2*b1*x2 + a1*b2*x2 + c1*x2 + a1*c1*x2 + a2*c1*x2 + a1*c2*x2 + a1*a2*y1 + a2*b1*y1 + b2*y1 + a1*b2*y1 + a2*b2*y1 + b1*b2*y1 + a2*c1*y1 + b2*c1*y1 + c2*y1 + a1*a2*y2 + b1*y2 + a1*b1*y2 + a2*b1*y2 + a1*b2*y2 + b1*b2*y2 + a2*c1*y2 + b2*c1*y2 + y1*y2 + a2*z1 + a1*a2*z1 + b1*b2*z1 + b2*c1*z1 + a1*c2*z1 + a2*c2*z1 + y2*z1 + a1*z2 + a1*a2*z2 + b1*z2 + b1*b2*z2 + a1*c1*z2 + b2*c1*z2 + a1*c2*z2 + y1*z2 + z1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 63 ( Cmcm)
#####################################################################
Aiin63:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin63:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin63:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axyin63:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Bxyin63:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + b1*x2*y1 + b1*x2*y2 + b1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 64 ( Cmce)
#####################################################################
Aiin64:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin64:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin64:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axyin64:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Cin64:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a2*a3*b1 + a1*a2*a3*b1 + a1*a3*b1*b2 + a2*b1*b3 + a2*a3*b1*b3 + a1*a2*a3*b1*b3 + a1*a3*b2*b3 + a1*a2*a3*b2*b3 + a1*a2*a3*b1*b2*b3 + a2*a3*b1*c1 + a1*a2*a3*b1*c1 + a3*b2*c1 + a1*a3*b2*c1 + a2*a3*b2*c1 + a1*a2*a3*b2*c1 + a2*a3*b1*b2*c1 + a1*a2*a3*b1*b2*c1 + a2*b3*c1 + a1*a2*b3*c1 + a2*a3*b3*c1 + a1*a2*a3*b1*b3*c1 + b2*b3*c1 + a1*b2*b3*c1 + a3*b2*b3*c1 + b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a3*b1*b2*b3*c1 + a1*a3*b1*b2*b3*c1 + a2*a3*b1*b2*b3*c1 + a2*a3*x1 + a3*b2*x1 + a2*a3*b2*x1 + a3*b1*b2*x1 + a2*a3*b1*b2*x1 + a1*a2*a3*b1*b2*x1 + a1*a2*b3*x1 + a2*a3*b3*x1 + a2*a3*b1*b3*x1 + b2*b3*x1 + a3*b2*b3*x1 + a1*a2*b1*b2*b3*x1 + a2*a3*b1*b2*b3*x1 + a1*a2*a3*c1*x1 + a2*a3*b1*c1*x1 + a1*a2*a3*b1*c1*x1 + a3*b2*c1*x1 + a2*a3*b2*c1*x1 + a1*a2*a3*b2*c1*x1 + a1*a3*b1*b2*c1*x1 + a2*a3*b1*b2*c1*x1 + a2*b3*c1*x1 + a1*a2*b3*c1*x1 + a1*a2*b1*b3*c1*x1 + a2*a3*b1*b3*c1*x1 + b2*b3*c1*x1 + a1*a2*b2*b3*c1*x1 + a3*b2*b3*c1*x1 + a2*a3*b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a1*b1*b2*b3*c1*x1 + a2*b1*b2*b3*c1*x1 + a3*b1*b2*b3*c1*x1 + a1*a2*a3*x2 + a2*a3*b1*x2 + a1*a3*b2*x2 + a1*a2*a3*b2*x2 + a3*b1*b2*x2 + a1*a2*a3*b1*b2*x2 + a1*b3*x2 + a1*a3*b3*x2 + a1*a2*a3*b3*x2 + a1*b1*b3*x2 + a2*b1*b3*x2 + b1*b2*b3*x2 + a1*a2*b1*b2*b3*x2 + a3*b1*b2*b3*x2 + a2*a3*b1*b2*b3*x2 + a2*a3*c1*x2 + a1*a2*a3*c1*x2 + a2*a3*b1*c1*x2 + a1*a2*a3*b2*c1*x2 + a2*a3*b1*b2*c1*x2 + b3*c1*x2 + a1*a2*b3*c1*x2 + a3*b3*c1*x2 + a2*a3*b3*c1*x2 + b2*b3*c1*x2 + a1*a2*b2*b3*c1*x2 + a3*b2*b3*c1*x2 + a2*a3*b2*b3*c1*x2 + a3*b1*x1*x2 + a1*a3*b1*b2*x1*x2 + b1*b3*x1*x2 + a1*a2*b1*b3*x1*x2 + a3*b1*b3*x1*x2 + a2*a3*b1*b3*x1*x2 + b1*b2*b3*x1*x2 + a1*b1*b2*b3*x1*x2 + a2*b1*b2*b3*x1*x2 + a3*b1*b2*b3*x1*x2 + a2*b1*x3 + a2*a3*b1*x3 + a1*b2*x3 + b1*b2*x3 + a1*b1*b2*x3 + a1*a2*b1*b2*x3 + a3*b1*b2*x3 + a1*a3*b1*b2*x3 + a1*a2*a3*b1*b2*x3 + a1*a2*b1*b3*x3 + a1*b2*b3*x3 + a1*a3*b2*b3*x3 + a1*a2*a3*b2*b3*x3 + b1*b2*b3*x3 + a2*b1*c1*x3 + a2*b2*c1*x3 + b1*b2*c1*x3 + a2*a3*b3*c1*x3 + a1*a2*b1*b3*x1*x3 + a2*a3*b1*b3*x1*x3 + a1*a2*b2*b3*x1*x3 + a2*a3*b2*b3*x1*x3 + a1*x2*x3 + a1*a2*b2*x2*x3 + a1*a3*b2*x2*x3 + a1*b1*b2*x2*x3 + a2*b1*b2*x2*x3 + a1*a2*b1*b2*x2*x3 + a3*b1*b2*x2*x3 + a1*a3*b1*b2*x2*x3 + a1*b2*b3*x2*x3 + a1*a2*b2*b3*x2*x3 + b1*b2*b3*x2*x3 + b2*b3*c1*x2*x3 + a2*a3*b1*y1 + a1*a2*a3*b1*y1 + a1*a2*a3*b1*b2*y1 + a2*b1*b3*y1 + a1*a2*b1*b3*y1 + a1*a2*b1*b2*b3*y1 + a2*a3*b1*b2*b3*y1 + a2*a3*c1*y1 + a1*a2*a3*b1*c1*y1 + a1*a3*b2*c1*y1 + a2*a3*b2*c1*y1 + a1*a2*a3*b2*c1*y1 + a3*b1*b2*c1*y1 + a1*a3*b1*b2*c1*y1 + a2*a3*b1*b2*c1*y1 + a2*b3*c1*y1 + a2*a3*b3*c1*y1 + a1*a2*b1*b3*c1*y1 + a2*a3*b1*b3*c1*y1 + a1*b2*b3*c1*y1 + a2*b2*b3*c1*y1 + a1*a2*b2*b3*c1*y1 + a2*a3*b2*b3*c1*y1 + b1*b2*b3*c1*y1 + a1*b1*b2*b3*c1*y1 + a2*b1*b2*b3*c1*y1 + a3*b1*b2*b3*c1*y1 + a1*a3*b2*x1*y1 + a3*b1*b2*x1*y1 + a2*b3*x1*y1 + a1*a2*b3*x1*y1 + a2*a3*b3*x1*y1 + b2*b3*x1*y1 + a1*b2*b3*x1*y1 + a2*b2*b3*x1*y1 + a3*b2*b3*x1*y1 + a3*x2*y1 + a3*b1*x2*y1 + a3*b2*x2*y1 + a1*a3*b2*x2*y1 + a3*b1*b2*x2*y1 + a1*a3*b1*b2*x2*y1 + b3*x2*y1 + a1*a2*b3*x2*y1 + a3*b3*x2*y1 + a2*a3*b3*x2*y1 + b1*b3*x2*y1 + a1*a2*b1*b3*x2*y1 + a3*b1*b3*x2*y1 + a2*a3*b1*b3*x2*y1 + b2*b3*x2*y1 + a1*b2*b3*x2*y1 + a2*b2*b3*x2*y1 + a3*b2*b3*x2*y1 + b1*b2*b3*x2*y1 + a1*b1*b2*b3*x2*y1 + a2*b1*b2*b3*x2*y1 + a3*b1*b2*b3*x2*y1 + a1*a2*b3*x3*y1 + a2*a3*b3*x3*y1 + a1*a2*b1*b3*x3*y1 + a2*a3*b1*b3*x3*y1 + a1*a2*b2*b3*x3*y1 + a2*a3*b2*b3*x3*y1 + a1*a3*b1*y2 + a2*a3*b1*y2 + a3*b1*b2*y2 + a2*a3*b1*b2*y2 + a1*a2*a3*b1*b2*y2 + a1*b3*y2 + a1*b1*b3*y2 + a2*b1*b3*y2 + a1*a2*b1*b3*y2 + a3*b1*b3*y2 + a2*a3*b1*b3*y2 + b1*b2*b3*y2 + a1*a2*b1*b2*b3*y2 + a3*b1*b2*b3*y2 + a2*a3*b1*b2*b3*y2 + a2*a3*c1*y2 + a3*b2*c1*y2 + a1*a3*b2*c1*y2 + a1*a2*a3*b2*c1*y2 + a3*b1*b2*c1*y2 + a2*a3*b1*b2*c1*y2 + a3*b3*c1*y2 + a1*b2*b3*c1*y2 + a2*b2*b3*c1*y2 + a1*a2*b2*b3*c1*y2 + a2*a3*b2*b3*c1*y2 + a3*x1*y2 + a1*a3*x1*y2 + a3*b1*x1*y2 + a1*a3*b1*x1*y2 + a1*a3*b2*x1*y2 + a1*a3*b1*b2*x1*y2 + a1*b3*x1*y2 + a2*b3*x1*y2 + a1*a2*b3*x1*y2 + a2*a3*b3*x1*y2 + a1*b1*b3*x1*y2 + a2*b1*b3*x1*y2 + a1*a2*b1*b3*x1*y2 + a2*a3*b1*b3*x1*y2 + b2*b3*x1*y2 + a1*b2*b3*x1*y2 + a2*b2*b3*x1*y2 + a3*b2*b3*x1*y2 + b1*b2*b3*x1*y2 + a1*b1*b2*b3*x1*y2 + a2*b1*b2*b3*x1*y2 + a3*b1*b2*b3*x1*y2 + a1*a3*b1*x2*y2 + a1*a3*b2*x2*y2 + a3*b1*b2*x2*y2 + a1*a2*b3*x2*y2 + b1*b3*x2*y2 + a1*b2*b3*x2*y2 + b3*c1*x2*y2 + a1*x3*y2 + a1*a2*b1*x3*y2 + a1*a3*b1*x3*y2 + a1*a2*b1*b2*x3*y2 + a1*a3*b1*b2*x3*y2 + a1*a2*b3*x3*y2 + b1*b3*x3*y2 + a1*a2*b2*b3*x3*y2 + b1*b2*b3*x3*y2 + b3*c1*x3*y2 + b2*b3*c1*x3*y2 + a1*a3*b1*y1*y2 + a3*b1*b2*y1*y2 + a1*a3*b1*b2*y1*y2 + a1*b1*b3*y1*y2 + a2*b1*b3*y1*y2 + a1*a2*b1*b3*y1*y2 + a2*a3*b1*b3*y1*y2 + b1*b2*b3*y1*y2 + a1*b1*b2*b3*y1*y2 + a2*b1*b2*b3*y1*y2 + a3*b1*b2*b3*y1*y2 + a2*a3*b1*y3 + a1*a2*a3*b1*y3 + a1*b2*y3 + a1*b1*b2*y3 + a2*b1*b2*y3 + a3*b1*b2*y3 + a1*a3*b1*b2*y3 + a2*a3*b1*b2*y3 + a1*a2*a3*b1*b2*y3 + a2*b1*b3*y3 + a2*a3*b1*b3*y3 + a1*b2*b3*y3 + a1*a3*b2*b3*y3 + a1*a2*a3*b2*b3*y3 + b1*b2*b3*y3 + a1*a2*c1*y3 + a2*a3*c1*y3 + a1*a2*a3*c1*y3 + a1*a2*b1*c1*y3 + a2*a3*b1*c1*y3 + b2*c1*y3 + a1*a2*b2*c1*y3 + a1*a3*b2*c1*y3 + b1*b2*c1*y3 + a1*b1*b2*c1*y3 + a2*b1*b2*c1*y3 + a3*b1*b2*c1*y3 + a2*b3*c1*y3 + a1*a2*b3*c1*y3 + a1*b2*b3*c1*y3 + a2*b2*b3*c1*y3 + a3*b2*b3*c1*y3 + a1*a2*x1*y3 + a2*a3*x1*y3 + a1*a2*b1*x1*y3 + a2*a3*b1*x1*y3 + a1*a2*b2*x1*y3 + a2*a3*b2*x1*y3 + a1*a2*b3*x1*y3 + a2*a3*b3*x1*y3 + a1*a2*b1*b3*x1*y3 + a2*a3*b1*b3*x1*y3 + a1*a2*b2*b3*x1*y3 + a2*a3*b2*b3*x1*y3 + a1*a3*x2*y3 + b1*x2*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a1*a2*b1*x2*y3 + a3*b1*x2*y3 + a1*a3*b1*x2*y3 + a1*b2*x2*y3 + a1*a3*b2*x2*y3 + b1*b2*x2*y3 + a1*b1*b2*x2*y3 + a2*b1*b2*x2*y3 + a1*a2*b1*b2*x2*y3 + a3*b1*b2*x2*y3 + a1*a3*b1*b2*x2*y3 + a1*b3*x2*y3 + a1*a2*b3*x2*y3 + b1*b3*x2*y3 + a1*b2*b3*x2*y3 + a1*a2*b2*b3*x2*y3 + b1*b2*b3*x2*y3 + c1*x2*y3 + b2*c1*x2*y3 + b3*c1*x2*y3 + b2*b3*c1*x2*y3 + a1*a2*b1*x3*y3 + a2*a3*b1*x3*y3 + a1*a2*b2*x3*y3 + a1*b1*b2*x3*y3 + a2*b1*b2*x3*y3 + a3*b1*b2*x3*y3 + a1*a2*b3*x3*y3 + a1*b2*b3*x3*y3 + a1*a2*b1*y1*y3 + a2*a3*b1*y1*y3 + a1*a2*b2*y1*y3 + a2*a3*b2*y1*y3 + a1*a2*b1*b3*y1*y3 + a2*a3*b1*b3*y1*y3 + a1*a2*b2*b3*y1*y3 + a2*a3*b2*b3*y1*y3 + a1*y2*y3 + a1*a2*b2*y2*y3 + b1*b2*y2*y3 + a1*a2*b1*b2*y2*y3 + a1*a3*b1*b2*y2*y3 + a1*a2*b2*b3*y2*y3 + b1*b2*b3*y2*y3 + b2*c1*y2*y3 + b2*b3*c1*y2*y3 + a1*a2*a3*b1*z1 + a2*a3*b2*z1 + a3*b1*b2*z1 + a1*a3*b1*b2*z1 + a2*a3*b1*b2*z1 + a1*a2*b3*z1 + a2*a3*b3*z1 + a2*b1*b3*z1 + a1*b2*b3*z1 + a2*b2*b3*z1 + a3*b2*b3*z1 + a1*a3*b2*b3*z1 + a2*a3*b2*b3*z1 + a1*a2*a3*c1*z1 + a2*a3*b1*c1*z1 + a1*a3*b2*c1*z1 + a3*b1*b2*c1*z1 + a2*b3*c1*z1 + a1*a2*b3*c1*z1 + a2*a3*b3*c1*z1 + a1*b2*b3*c1*z1 + a2*b2*b3*c1*z1 + a3*b2*b3*c1*z1 + a2*a3*x1*z1 + a2*a3*b1*x1*z1 + a2*a3*b2*x1*z1 + a1*a2*b3*x1*z1 + a2*a3*b3*x1*z1 + a3*x2*z1 + a1*a3*x2*z1 + a2*a3*x2*z1 + a3*b1*x2*z1 + a3*b2*x2*z1 + a2*a3*b2*x2*z1 + a1*b3*x2*z1 + a2*b3*x2*z1 + a1*a2*b3*x2*z1 + a3*b3*x2*z1 + a2*a3*b3*x2*z1 + a1*a2*b2*x3*z1 + a1*a3*b2*x3*z1 + a1*b1*b2*x3*z1 + a2*b1*b2*x3*z1 + a3*b1*b2*x3*z1 + a1*a2*b3*x3*z1 + a2*a3*b3*x3*z1 + a1*b2*b3*x3*z1 + a2*b2*b3*x3*z1 + a3*b2*b3*x3*z1 + a2*a3*b1*y1*z1 + a2*a3*b2*y1*z1 + a1*a2*b3*y1*z1 + a2*a3*b3*y1*z1 + a2*a3*b2*y2*z1 + a1*a2*b3*y2*z1 + a2*a3*b3*y2*z1 + a1*a2*b2*y3*z1 + a1*a3*b2*y3*z1 + a1*b1*b2*y3*z1 + a2*b1*b2*y3*z1 + a3*b1*b2*y3*z1 + a1*a2*b3*y3*z1 + a2*a3*b3*y3*z1 + a1*b2*b3*y3*z1 + a2*b2*b3*y3*z1 + a3*b2*b3*y3*z1 + a3*b1*z2 + a2*a3*b1*z2 + a1*a2*a3*b1*z2 + a3*b1*b2*z2 + a2*a3*b1*b2*z2 + a1*a2*b3*z2 + a2*b1*b3*z2 + a1*a2*b1*b3*z2 + a1*a3*b1*b3*z2 + a1*b2*b3*z2 + a1*a3*b2*b3*z2 + a3*c1*z2 + a2*a3*c1*z2 + a1*a2*a3*c1*z2 + a2*a3*b1*c1*z2 + a1*a3*b2*c1*z2 + a3*b1*b2*c1*z2 + b3*c1*z2 + a2*b3*c1*z2 + a1*a2*b3*c1*z2 + a2*a3*b3*c1*z2 + a1*b2*b3*c1*z2 + a2*b2*b3*c1*z2 + a3*b2*b3*c1*z2 + a2*a3*x1*z2 + a2*a3*b1*x1*z2 + a2*a3*b2*x1*z2 + a1*a2*b3*x1*z2 + a2*a3*b3*x1*z2 + a1*a3*x2*z2 + a3*b1*x2*z2 + a1*a3*b1*x2*z2 + a1*b3*x2*z2 + a1*a2*b3*x2*z2 + b1*b3*x2*z2 + b3*c1*x2*z2 + b1*x3*z2 + a1*a2*b1*x3*z2 + a1*a3*b1*x3*z2 + a1*a2*b2*x3*z2 + a1*a3*b2*x3*z2 + a1*b1*b2*x3*z2 + a2*b1*b2*x3*z2 + a3*b1*b2*x3*z2 + a1*a2*b3*x3*z2 + b1*b3*x3*z2 + a1*b2*b3*x3*z2 + b3*c1*x3*z2 + a2*a3*b1*y1*z2 + a2*a3*b2*y1*z2 + a1*a2*b3*y1*z2 + a2*a3*b3*y1*z2 + a1*a3*b1*y2*z2 + a1*a2*b3*y2*z2 + b1*b3*y2*z2 + b3*c1*y2*z2 + a1*a2*b1*y3*z2 + a1*a3*b1*y3*z2 + a1*a2*b2*y3*z2 + a1*a3*b2*y3*z2 + a1*b1*b2*y3*z2 + a2*b1*b2*y3*z2 + a3*b1*b2*y3*z2 + a1*a2*b3*y3*z2 + b1*b3*y3*z2 + a1*b2*b3*y3*z2 + c1*y3*z2 + b3*c1*y3*z2 + a2*b1*z3 + a1*a2*b1*z3 + a2*a3*b1*z3 + a1*a2*a3*b1*z3 + a1*a2*b2*z3 + b1*b2*z3 + a1*b1*b2*z3 + a1*a2*b1*b2*z3 + a3*b1*b2*z3 + a2*a3*b1*b2*z3 + a1*a2*b3*z3 + a2*b1*b3*z3 + a1*a2*b1*b3*z3 + a2*a3*b1*b3*z3 + a1*b2*b3*z3 + a1*a2*c1*z3 + a2*a3*c1*z3 + a1*a2*a3*c1*z3 + a2*b1*c1*z3 + a1*a2*b1*c1*z3 + a2*a3*b1*c1*z3 + b2*c1*z3 + a2*b2*c1*z3 + a1*a2*b2*c1*z3 + a1*a3*b2*c1*z3 + a1*b1*b2*c1*z3 + a2*b1*b2*c1*z3 + a3*b1*b2*c1*z3 + a2*b3*c1*z3 + a1*a2*b3*c1*z3 + a2*a3*b3*c1*z3 + a1*b2*b3*c1*z3 + a2*b2*b3*c1*z3 + a3*b2*b3*c1*z3 + a1*a2*x1*z3 + a2*a3*x1*z3 + a1*a2*b1*x1*z3 + a2*a3*b1*x1*z3 + a1*a2*b2*x1*z3 + a2*a3*b2*x1*z3 + a1*a2*b3*x1*z3 + a2*a3*b3*x1*z3 + a1*x2*z3 + a1*a3*x2*z3 + b1*x2*z3 + a1*b1*x2*z3 + a2*b1*x2*z3 + a1*a2*b1*x2*z3 + a3*b1*x2*z3 + a1*a3*b1*x2*z3 + a1*b2*x2*z3 + a1*a2*b2*x2*z3 + b1*b2*x2*z3 + a1*b3*x2*z3 + a1*a2*b3*x2*z3 + b1*b3*x2*z3 + c1*x2*z3 + b2*c1*x2*z3 + b3*c1*x2*z3 + a1*a2*b1*x3*z3 + a2*a3*b1*x3*z3 + a1*a2*b2*x3*z3 + a1*b1*b2*x3*z3 + a2*b1*b2*x3*z3 + a3*b1*b2*x3*z3 + a1*a2*b3*x3*z3 + a1*b2*b3*x3*z3 + a1*a2*b1*y1*z3 + a2*a3*b1*y1*z3 + a1*a2*b2*y1*z3 + a2*a3*b2*y1*z3 + a1*a2*b3*y1*z3 + a2*a3*b3*y1*z3 + a1*a2*b1*y2*z3 + a1*a3*b1*y2*z3 + a1*a2*b2*y2*z3 + b1*b2*y2*z3 + a1*a2*b3*y2*z3 + b1*b3*y2*z3 + b2*c1*y2*z3 + b3*c1*y2*z3 + a1*a2*b1*y3*z3 + a2*a3*b1*y3*z3 + a1*a2*b2*y3*z3 + a1*b1*b2*y3*z3 + a2*b1*b2*y3*z3 + a3*b1*b2*y3*z3 + a1*a2*b3*y3*z3 + a1*b2*b3*y3*z3 + b1*z2*z3 + c1*z2*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 65 ( Cmmm)
#####################################################################
Aiin65:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin65:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin65:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axyin65:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Azin65:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bxyin65:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + b1*x2*y1 + b1*x2*y2 + b1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 66 ( Cccm)
#####################################################################
Aiin66:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin66:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin66:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axyin66:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Bxyin66:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + b1*x2*y1 + b1*x2*y2 + b1*y1*y2;
end;
#####################################################################
Bzxyin66:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return c1*x2 + x2*z1 + y2*z1;
end;
#####################################################################
#####################################################################
#Space Group No. 67 ( Cmme)
#####################################################################
Aiin67:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin67:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin67:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axyin67:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Azin67:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
#####################################################################
#Space Group No. 68 ( Ccce)
#####################################################################
Aiin68:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin68:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin68:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axyin68:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Cin68:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a3*b2 + a1*a2*b3 + a1*b2*b3 + a1*a2*a3*c1 + a3*b2*c1 + a2*a3*b2*c1 + a2*b3*c1 + a1*a2*b3*c1 + a2*a3*b1*b3*c1 + a2*b2*b3*c1 + a3*b2*b3*c1 + a2*a3*b2*b3*c1 + a2*a3*b1*x1 + a3*b2*x1 + a2*a3*b2*x1 + a3*b1*b2*x1 + a1*a3*b1*b2*x1 + a2*b3*x1 + a1*a2*b3*x1 + a2*a3*b3*x1 + a1*a2*b1*b3*x1 + a2*a3*b1*b3*x1 + a1*b2*b3*x1 + a2*b2*b3*x1 + a3*b2*b3*x1 + a1*a3*b2*b3*x1 + a2*a3*b2*b3*x1 + a3*b2*c1*x1 + a2*b1*b3*c1*x1 + a2*b2*b3*c1*x1 + a1*a3*x2 + a1*a3*b2*x2 + a1*b3*x2 + a1*a3*b3*x2 + a3*b1*b3*x2 + a1*a3*b1*b3*x2 + a2*a3*b1*b3*x2 + a1*b2*b3*x2 + a1*a3*b2*b3*x2 + a3*b1*b2*b3*x2 + a3*b2*c1*x2 + b3*c1*x2 + a2*b2*b3*c1*x2 + a3*x1*x2 + a1*a3*x1*x2 + a3*b1*x1*x2 + a1*a3*b1*x1*x2 + b3*x1*x2 + a1*b3*x1*x2 + a1*b1*b3*x1*x2 + b1*b2*b3*x1*x2 + a1*a2*x3 + a2*c1*x3 + a2*a3*c1*x3 + a2*b1*c1*x3 + a2*a3*b1*c1*x3 + a1*b2*c1*x3 + a2*b2*c1*x3 + a3*b2*c1*x3 + a2*a3*b2*c1*x3 + a2*b1*b3*c1*x3 + b2*b3*c1*x3 + a2*b2*b3*c1*x3 + a1*a2*x1*x3 + a2*a3*x1*x3 + a1*a2*b1*x1*x3 + a2*a3*b1*x1*x3 + a2*b2*x1*x3 + a3*b2*x1*x3 + a1*a3*b2*x1*x3 + a2*a3*b2*x1*x3 + b1*b2*x1*x3 + a1*b1*b2*x1*x3 + a2*b3*x1*x3 + a2*b1*b3*x1*x3 + b2*b3*x1*x3 + a1*b2*b3*x1*x3 + a2*b2*b3*x1*x3 + a1*x2*x3 + a1*a3*x2*x3 + b1*x2*x3 + a1*b1*x2*x3 + a2*b1*x2*x3 + a3*b1*x2*x3 + a1*a3*b1*x2*x3 + a2*a3*b1*x2*x3 + a1*b2*x2*x3 + a1*a3*b2*x2*x3 + b1*b2*x2*x3 + a3*b1*b2*x2*x3 + a1*b3*x2*x3 + b1*b3*x2*x3 + a1*b1*b3*x2*x3 + a2*b1*b3*x2*x3 + a1*b2*b3*x2*x3 + b1*b2*b3*x2*x3 + a2*a3*y1 + a2*a3*b1*y1 + a2*a3*b2*y1 + a1*a3*b1*b2*y1 + a2*b3*y1 + a1*a2*b3*y1 + a2*a3*b3*y1 + a2*b1*b3*y1 + a1*a2*b1*b3*y1 + a2*a3*b1*b3*y1 + a1*b2*b3*y1 + a2*b2*b3*y1 + a1*a3*b2*b3*y1 + a2*a3*b2*b3*y1 + a3*b2*c1*y1 + a2*b3*c1*y1 + a2*b1*b3*c1*y1 + a2*b2*b3*c1*y1 + b2*b3*x1*y1 + a1*a3*x2*y1 + a1*a3*b1*x2*y1 + b3*x2*y1 + a1*b3*x2*y1 + b1*b3*x2*y1 + a1*b1*b3*x2*y1 + b2*b3*x2*y1 + b1*b2*b3*x2*y1 + a2*x3*y1 + a1*a2*x3*y1 + a2*a3*x3*y1 + a2*b1*x3*y1 + a1*a2*b1*x3*y1 + a2*a3*b1*x3*y1 + a2*b2*x3*y1 + a1*a3*b2*x3*y1 + a2*a3*b2*x3*y1 + a1*b1*b2*x3*y1 + a2*b3*x3*y1 + a2*b1*b3*x3*y1 + a1*b2*b3*x3*y1 + a2*b2*b3*x3*y1 + a1*a3*b2*y2 + a1*a3*b3*y2 + a1*a3*b1*b3*y2 + a2*a3*b1*b3*y2 + a1*b2*b3*y2 + a1*a3*b2*b3*y2 + a3*b1*b2*b3*y2 + a3*b2*c1*y2 + a2*b3*c1*y2 + a2*b2*b3*c1*y2 + a3*x1*y2 + a1*a3*x1*y2 + a3*b1*x1*y2 + a1*a3*b1*x1*y2 + b3*x1*y2 + a1*b3*x1*y2 + b1*b3*x1*y2 + a1*b1*b3*x1*y2 + b2*b3*x1*y2 + b1*b2*b3*x1*y2 + a1*x3*y2 + a1*a3*x3*y2 + a1*b1*x3*y2 + a2*b1*x3*y2 + a1*a3*b1*x3*y2 + a2*a3*b1*x3*y2 + a1*b2*x3*y2 + a1*a3*b2*x3*y2 + b1*b2*x3*y2 + a3*b1*b2*x3*y2 + a1*b3*x3*y2 + a1*b1*b3*x3*y2 + a2*b1*b3*x3*y2 + a1*b2*b3*x3*y2 + b1*b2*b3*x3*y2 + a1*a3*y1*y2 + a1*a3*b1*y1*y2 + a1*b3*y1*y2 + a1*b1*b3*y1*y2 + b1*b2*b3*y1*y2 + a1*a2*y3 + a2*c1*y3 + a2*a3*c1*y3 + a2*b1*c1*y3 + a2*a3*b1*c1*y3 + a1*b2*c1*y3 + a2*b2*c1*y3 + a3*b2*c1*y3 + a2*a3*b2*c1*y3 + a2*b1*b3*c1*y3 + b2*b3*c1*y3 + a2*b2*b3*c1*y3 + a1*a2*x1*y3 + a2*a3*x1*y3 + a1*a2*b1*x1*y3 + a2*a3*b1*x1*y3 + a2*b2*x1*y3 + a3*b2*x1*y3 + a1*a3*b2*x1*y3 + a2*a3*b2*x1*y3 + b1*b2*x1*y3 + a1*b1*b2*x1*y3 + a2*b3*x1*y3 + a2*b1*b3*x1*y3 + b2*b3*x1*y3 + a1*b2*b3*x1*y3 + a2*b2*b3*x1*y3 + a1*x2*y3 + a1*a3*x2*y3 + b1*x2*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a3*b1*x2*y3 + a1*a3*b1*x2*y3 + a2*a3*b1*x2*y3 + a1*b2*x2*y3 + a1*a3*b2*x2*y3 + b1*b2*x2*y3 + a3*b1*b2*x2*y3 + a1*b3*x2*y3 + b1*b3*x2*y3 + a1*b1*b3*x2*y3 + a2*b1*b3*x2*y3 + a1*b2*b3*x2*y3 + b1*b2*b3*x2*y3 + a2*y1*y3 + a1*a2*y1*y3 + a2*a3*y1*y3 + a2*b1*y1*y3 + a1*a2*b1*y1*y3 + a2*a3*b1*y1*y3 + a2*b2*y1*y3 + a1*a3*b2*y1*y3 + a2*a3*b2*y1*y3 + a1*b1*b2*y1*y3 + a2*b3*y1*y3 + a2*b1*b3*y1*y3 + a1*b2*b3*y1*y3 + a2*b2*b3*y1*y3 + a1*y2*y3 + a1*a3*y2*y3 + a1*b1*y2*y3 + a2*b1*y2*y3 + a1*a3*b1*y2*y3 + a2*a3*b1*y2*y3 + a1*b2*y2*y3 + a1*a3*b2*y2*y3 + b1*b2*y2*y3 + a3*b1*b2*y2*y3 + a1*b3*y2*y3 + a1*b1*b3*y2*y3 + a2*b1*b3*y2*y3 + a1*b2*b3*y2*y3 + b1*b2*b3*y2*y3 + a2*a3*z1 + a3*b2*z1 + a2*x3*z1 + b2*x3*z1 + a2*y3*z1 + b2*y3*z1 + a3*x1*z2 + a1*x3*z2 + a3*y1*z2 + a1*y3*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 69 ( Fmmm)
#####################################################################
Aiin69:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin69:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin69:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axzin69:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + z1;
end;
#####################################################################
Ayzin69:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return y1 + z1;
end;
#####################################################################
Cin69:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return (a2*a3*x1*(1 + x1))/2 + (a2*b3*x1*(1 + x1))/2 + a3*b1*x2 + a2*a3*b1*x2 + a3*b1*b2*x2 + a3*b1*b3*x2 + a2*a3*c1*x2 - 2*a2*a3*b1*c1*x2 + a3*b2*c1*x2 - 2*a3*b1*b2*c1*x2 + a3*b3*c1*x2 - 2*a3*b1*b3*c1*x2 + a3*x1*x2 + a1*a3*x1*x2 + a2*a3*x1*x2 + 2*a3*b1*x1*x2 + 2*a1*a3*b1*x1*x2 + a2*b3*x1*x2 + a3*c1*x1*x2 + a1*a3*c1*x1*x2 - 3*a3*b1*c1*x1*x2 - 2*a1*a3*b1*c1*x1*x2 + (a3*x1*x2*(1 + x2))/2 + (a1*a3*x1*x2*(1 + x2))/2 + (a3*b1*x1*x2*(1 + x2))/2 + a1*a2*x1*x3 + a2*a3*x1*x3 + a1*a2*a3*x1*x3 + a2*b1*x1*x3 + a1*a2*b1*x1*x3 + a2*a3*b1*x1*x3 + a1*a2*b2*x1*x3 + a3*b2*x1*x3 + a2*a3*b2*x1*x3 + a2*b3*x1*x3 + (a2*x1*(1 + x1)*x3)/2 + (a2*a3*x1*(1 + x1)*x3)/2 + (a2*b2*x1*(1 + x1)*x3)/2 + (a3*b2*x1*(1 + x1)*x3)/2 + 3*b1*x2*x3 + 2*a2*b1*x2*x3 + a1*a2*b1*x2*x3 + a3*b1*x2*x3 + a1*b2*x2*x3 + a1*a2*b2*x2*x3 + 2*b1*b2*x2*x3 + a1*b1*b2*x2*x3 + a2*b1*b2*x2*x3 + a2*b1*b3*x2*x3 + b1*b2*b3*x2*x3 + c1*x2*x3 + a3*c1*x2*x3 - 3*b1*c1*x2*x3 - a2*b1*c1*x2*x3 - 2*a3*b1*c1*x2*x3 + a2*b2*c1*x2*x3 - b1*b2*c1*x2*x3 - 2*a2*b1*b2*c1*x2*x3 + a2*b3*c1*x2*x3 - 2*a2*b1*b3*c1*x2*x3 + b2*b3*c1*x2*x3 - 2*b1*b2*b3*c1*x2*x3 + x1*x2*x3 + a1*x1*x2*x3 + a3*x1*x2*x3 + a2*a3*x1*x2*x3 + b1*x1*x2*x3 + a1*b1*x1*x2*x3 + a1*b2*x1*x2*x3 + a2*b2*x1*x2*x3 + a3*b2*x1*x2*x3 + b1*b2*x1*x2*x3 + (b1*x2*(1 + x2)*x3)/2 + (a2*b1*x2*(1 + x2)*x3)/2 + (b1*b2*x2*(1 + x2)*x3)/2 + a2*a3*x1*y1 + a2*b3*x1*y1 + a2*a3*x2*y1 + a3*b1*x2*y1 + a1*a3*b1*x2*y1 + a2*b3*x2*y1 + a1*a3*c1*x2*y1 - a3*b1*c1*x2*y1 - 2*a1*a3*b1*c1*x2*y1 + a1*a3*x1*x2*y1 + a3*b1*x1*x2*y1 + (a1*a3*x2*(1 + x2)*y1)/2 + (a3*b1*x2*(1 + x2)*y1)/2 + a2*x3*y1 + a1*a2*x3*y1 + a2*a3*x3*y1 + a1*a2*a3*x3*y1 + a1*a2*b2*x3*y1 + a1*a3*b2*x3*y1 + a2*b3*x3*y1 + a2*x1*x3*y1 + a1*a2*x1*x3*y1 + a1*b2*x1*x3*y1 + a1*x2*x3*y1 + a1*a2*x2*x3*y1 + b2*x2*x3*y1 + a1*b2*x2*x3*y1 + (a2*a3*y1*(1 + y1))/2 + (a2*b3*y1*(1 + y1))/2 + (a3*b1*x2*y1*(1 + y1))/2 + (a2*x3*y1*(1 + y1))/2 + (a2*a3*x3*y1*(1 + y1))/2 + (a1*b2*x3*y1*(1 + y1))/2 + a2*a3*b1*y2 + a2*b1*b3*y2 + a2*a3*c1*y2 - 2*a2*a3*b1*c1*y2 + a2*b3*c1*y2 - 2*a2*b1*b3*c1*y2 + a3*x1*y2 + a1*a3*x1*y2 + a2*a3*x1*y2 + a3*b1*x1*y2 + a1*a3*b1*x1*y2 + a2*b3*x1*y2 + a1*a3*c1*x1*y2 - 2*a1*a3*b1*c1*x1*y2 + (a3*x1*(1 + x1)*y2)/2 + (a3*b1*x1*(1 + x1)*y2)/2 + a3*b1*b2*x2*y2 + a2*b1*b3*x2*y2 + a3*b1*b3*x2*y2 + a3*b2*c1*x2*y2 - 2*a3*b1*b2*c1*x2*y2 + a2*b3*c1*x2*y2 + a3*b3*c1*x2*y2 - 2*a2*b1*b3*c1*x2*y2 - 2*a3*b1*b3*c1*x2*y2 + a3*b1*x1*x2*y2 + (a3*b1*x2*(1 + x2)*y2)/2 + 2*a1*b1*x3*y2 + a1*b2*x3*y2 + a1*b1*b2*x3*y2 + a2*b1*b3*x3*y2 + a3*b1*b3*x3*y2 - a1*b1*c1*x3*y2 + a1*b2*c1*x3*y2 - 2*a1*b1*b2*c1*x3*y2 + a2*b3*c1*x3*y2 + a3*b3*c1*x3*y2 - 2*a2*b1*b3*c1*x3*y2 - 2*a3*b1*b3*c1*x3*y2 + a2*x1*x3*y2 + a1*b1*x1*x3*y2 + a1*b2*x1*x3*y2 + a1*b1*x2*x3*y2 + a1*b2*x2*x3*y2 + a2*a3*y1*y2 + a3*b1*y1*y2 + 2*a1*a3*b1*y1*y2 + a2*b3*y1*y2 + a3*c1*y1*y2 + a1*a3*c1*y1*y2 - 2*a3*b1*c1*y1*y2 - 2*a1*a3*b1*c1*y1*y2 + a1*a3*x1*y1*y2 + a3*b1*x2*y1*y2 + a2*x3*y1*y2 + a1*a2*x3*y1*y2 + a2*a3*x3*y1*y2 + (a3*y1*(1 + y1)*y2)/2 + (a1*a3*x1*y2*(1 + y2))/2 + (a3*b1*x2*y2*(1 + y2))/2 + (a1*b1*x3*y2*(1 + y2))/2 + (a1*b2*x3*y2*(1 + y2))/2 + (a3*y1*y2*(1 + y2))/2 + (a1*a3*y1*y2*(1 + y2))/2 + a2*x1*y3 + a1*a2*x1*y3 + a1*a2*a3*x1*y3 + a2*b1*x1*y3 + a1*a2*b1*x1*y3 + a2*a3*b1*x1*y3 + a1*b2*x1*y3 + a3*b2*x1*y3 + a2*b3*x1*y3 + (a2*a3*x1*(1 + x1)*y3)/2 + (a1*b2*x1*(1 + x1)*y3)/2 + (a2*b2*x1*(1 + x1)*y3)/2 + (a3*b2*x1*(1 + x1)*y3)/2 + 3*b1*x2*y3 + 2*a1*b1*x2*y3 + 3*a2*b1*x2*y3 + a3*b1*x2*y3 + a1*b2*x2*y3 + a1*b1*b2*x2*y3 + a2*b1*b2*x2*y3 + a3*b1*b3*x2*y3 + c1*x2*y3 + a2*c1*x2*y3 + a3*c1*x2*y3 - 3*b1*c1*x2*y3 - a1*b1*c1*x2*y3 - 3*a2*b1*c1*x2*y3 - 2*a3*b1*c1*x2*y3 + a1*b2*c1*x2*y3 + a2*b2*c1*x2*y3 - 2*a1*b1*b2*c1*x2*y3 - 2*a2*b1*b2*c1*x2*y3 + a3*b3*c1*x2*y3 - 2*a3*b1*b3*c1*x2*y3 + x1*x2*y3 + a1*x1*x2*y3 + a2*x1*x2*y3 + a3*x1*x2*y3 + a2*a3*x1*x2*y3 + b1*x1*x2*y3 + a1*b2*x1*x2*y3 + a2*b2*x1*x2*y3 + a3*b2*x1*x2*y3 + (b1*x2*(1 + x2)*y3)/2 + (a1*b1*x2*(1 + x2)*y3)/2 + (a2*b1*x2*(1 + x2)*y3)/2 + (a1*b2*x2*(1 + x2)*y3)/2 + a2*a3*x1*x3*y3 + a1*a2*b2*x1*x3*y3 + a2*a3*b2*x1*x3*y3 + a1*a2*b1*x2*x3*y3 + a1*b2*x2*x3*y3 + a1*a2*b2*x2*x3*y3 + a1*b1*b2*x2*x3*y3 + a1*a2*y1*y3 + a1*a2*a3*y1*y3 + a1*b2*y1*y3 + a1*a3*b2*y1*y3 + a2*a3*b2*y1*y3 + a2*b3*y1*y3 + a1*a2*x1*y1*y3 + a1*x2*y1*y3 + a2*x2*y1*y3 + a1*a2*x2*y1*y3 + a2*a3*x3*y1*y3 + a1*a2*b2*x3*y1*y3 + a2*a3*b2*x3*y1*y3 + (a2*a3*y1*(1 + y1)*y3)/2 + a2*b1*y2*y3 + a1*a2*b1*y2*y3 + a1*a2*b2*y2*y3 + a2*c1*y2*y3 - 2*a2*b1*c1*y2*y3 + a1*a2*b1*x3*y2*y3 + a1*a2*b2*x3*y2*y3 + a1*a2*y1*y2*y3 + a2*a3*y1*y2*y3 + a1*a3*b1*x2*z1 + a3*x1*x2*z1 + a1*a3*x1*x2*z1 + a3*b1*x1*x2*z1 + a2*b1*x3*z1 + a1*a2*b1*x3*z1 + a2*a3*b1*x3*z1 + a1*b2*x3*z1 + a2*b2*x3*z1 + a1*a3*b2*x3*z1 + a2*a3*b2*x3*z1 + a2*x1*x3*z1 + a1*a2*x1*x3*z1 + a2*a3*x1*x3*z1 + a1*b2*x1*x3*z1 + a2*b2*x1*x3*z1 + a3*b2*x1*x3*z1 + a3*x2*x3*z1 + a2*a3*x2*x3*z1 + a1*b1*x2*x3*z1 + a2*b1*x2*x3*z1 + a1*b2*x2*x3*z1 + a2*b2*x2*x3*z1 + a3*b2*x2*x3*z1 + a1*a3*x2*y1*z1 + a1*a2*x3*y1*z1 + a2*a3*x3*y1*z1 + a1*a3*b1*y2*z1 + a3*x1*y2*z1 + a1*a3*x1*y2*z1 + a3*b1*x1*y2*z1 + a2*a3*x3*y2*z1 + a1*a3*y1*y2*z1 + a2*b1*y3*z1 + a1*a2*b1*y3*z1 + a2*a3*b1*y3*z1 + a1*b2*y3*z1 + a2*b2*y3*z1 + a1*a3*b2*y3*z1 + a2*a3*b2*y3*z1 + a2*x1*y3*z1 + a1*a2*x1*y3*z1 + a2*a3*x1*y3*z1 + a1*b2*x1*y3*z1 + a2*b2*x1*y3*z1 + a3*b2*x1*y3*z1 + a3*x2*y3*z1 + a2*a3*x2*y3*z1 + a1*b1*x2*y3*z1 + a2*b1*x2*y3*z1 + a1*b2*x2*y3*z1 + a2*b2*x2*y3*z1 + a3*b2*x2*y3*z1 + a1*a2*y1*y3*z1 + a2*a3*y1*y3*z1 + a2*a3*y2*y3*z1 + (a3*b1*x2*z1*(1 + z1))/2 + (a1*b2*x3*z1*(1 + z1))/2 + (a2*b2*x3*z1*(1 + z1))/2 + (a3*b2*x3*z1*(1 + z1))/2 + (a3*b1*y2*z1*(1 + z1))/2 + (a1*b2*y3*z1*(1 + z1))/2 + (a2*b2*y3*z1*(1 + z1))/2 + (a3*b2*y3*z1*(1 + z1))/2 + 2*a3*b1*x1*z2 + a1*a3*b1*x1*z2 - a3*b1*c1*x1*z2 + (a3*b1*x1*(1 + x1)*z2)/2 + a3*b1*x2*z2 + a3*b1*b2*x2*z2 + b1*b3*x2*z2 + a2*b1*b3*x2*z2 + a3*b1*b3*x2*z2 + a3*c1*x2*z2 - 2*a3*b1*c1*x2*z2 + a3*b2*c1*x2*z2 - 2*a3*b1*b2*c1*x2*z2 + b3*c1*x2*z2 + a2*b3*c1*x2*z2 + a3*b3*c1*x2*z2 - 2*b1*b3*c1*x2*z2 - 2*a2*b1*b3*c1*x2*z2 - 2*a3*b1*b3*c1*x2*z2 + a1*a3*x1*x2*z2 + (a3*b1*x2*(1 + x2)*z2)/2 + b1*x3*z2 + 2*a1*b1*x3*z2 + a2*b1*x3*z2 + a1*a2*b1*x3*z2 + a3*b1*x3*z2 + a1*a2*b2*x3*z2 + 2*b1*b2*x3*z2 + 2*a1*b1*b2*x3*z2 + a2*b1*b2*x3*z2 + b1*b3*x3*z2 + a3*b1*b3*x3*z2 + b1*b2*b3*x3*z2 + c1*x3*z2 + a3*c1*x3*z2 - 2*b1*c1*x3*z2 - a1*b1*c1*x3*z2 - a2*b1*c1*x3*z2 - 2*a3*b1*c1*x3*z2 + b2*c1*x3*z2 + a1*b2*c1*x3*z2 + a2*b2*c1*x3*z2 - 3*b1*b2*c1*x3*z2 - 2*a1*b1*b2*c1*x3*z2 - 2*a2*b1*b2*c1*x3*z2 + b3*c1*x3*z2 + a3*b3*c1*x3*z2 - 2*b1*b3*c1*x3*z2 - 2*a3*b1*b3*c1*x3*z2 + b2*b3*c1*x3*z2 - 2*b1*b2*b3*c1*x3*z2 + a2*x1*x3*z2 + a1*a2*x1*x3*z2 + a3*x1*x3*z2 + a1*b2*x1*x3*z2 + b1*b2*x1*x3*z2 + a1*b1*x2*x3*z2 + a1*b2*x2*x3*z2 + a3*b1*y1*z2 + a1*a3*b1*y1*z2 - a3*b1*c1*y1*z2 + a3*x1*y1*z2 + a3*b1*x1*y1*z2 + a3*x2*y1*z2 + a1*a3*x2*y1*z2 + a1*x3*y1*z2 + a1*a2*x3*y1*z2 + a3*x3*y1*z2 + a2*b2*x3*y1*z2 + a3*b2*x3*y1*z2 + (a3*b1*y1*(1 + y1)*z2)/2 + a3*b1*y2*z2 + a3*b1*b2*y2*z2 + a2*b1*b3*y2*z2 + a3*b1*b3*y2*z2 + a3*c1*y2*z2 - 2*a3*b1*c1*y2*z2 + a3*b2*c1*y2*z2 - 2*a3*b1*b2*c1*y2*z2 + a2*b3*c1*y2*z2 + a3*b3*c1*y2*z2 - 2*a2*b1*b3*c1*y2*z2 - 2*a3*b1*b3*c1*y2*z2 + a3*x1*y2*z2 + a1*a3*x1*y2*z2 + a3*b1*x1*y2*z2 + a1*a3*y1*y2*z2 + a3*b1*y1*y2*z2 + (a3*b1*y2*(1 + y2)*z2)/2 + b1*y3*z2 + a1*b1*y3*z2 + a2*b1*y3*z2 + a1*a2*b1*y3*z2 + a3*b1*y3*z2 + a1*a2*b2*y3*z2 + a1*b1*b2*y3*z2 + a2*b1*b2*y3*z2 + a3*b1*b3*y3*z2 + a3*c1*y3*z2 - b1*c1*y3*z2 - a1*b1*c1*y3*z2 - a2*b1*c1*y3*z2 - 2*a3*b1*c1*y3*z2 + a1*b2*c1*y3*z2 + a2*b2*c1*y3*z2 - 2*a1*b1*b2*c1*y3*z2 - 2*a2*b1*b2*c1*y3*z2 + a3*b3*c1*y3*z2 - 2*a3*b1*b3*c1*y3*z2 + a1*a2*x1*y3*z2 + b1*x1*y3*z2 + a1*b2*x1*y3*z2 + a2*b2*x1*y3*z2 + a3*b2*x1*y3*z2 + a1*b1*x2*y3*z2 + a1*b2*x2*y3*z2 + a1*b1*x3*y3*z2 + a1*b1*b2*x3*y3*z2 + a1*y1*y3*z2 + a2*y1*y3*z2 + a1*a2*y1*y3*z2 + a1*b1*x3*z1*z2 + a2*b1*x3*z1*z2 + a1*b2*x3*z1*z2 + a2*b2*x3*z1*z2 + a3*b2*x3*z1*z2 + a1*b1*y3*z1*z2 + a2*b1*y3*z1*z2 + a1*b2*y3*z1*z2 + a2*b2*y3*z1*z2 + a3*b2*y3*z1*z2 + (a3*b1*x1*z2*(1 + z2))/2 + (a3*b1*x2*z2*(1 + z2))/2 + (a1*b1*x3*z2*(1 + z2))/2 + (a2*b1*x3*z2*(1 + z2))/2 + (a1*b2*x3*z2*(1 + z2))/2 + (b1*b2*x3*z2*(1 + z2))/2 + (a3*b1*y1*z2*(1 + z2))/2 + (a3*b1*y2*z2*(1 + z2))/2 + (b1*y3*z2*(1 + z2))/2 + (a1*b1*y3*z2*(1 + z2))/2 + (a2*b1*y3*z2*(1 + z2))/2 + (a1*b2*y3*z2*(1 + z2))/2 + a1*b2*x1*z3 + (a1*b2*x1*(1 + x1)*z3)/2 + 3*b1*x2*z3 + 2*a1*b1*x2*z3 + a2*b1*x2*z3 + a3*b1*x2*z3 + a1*b2*x2*z3 + 3*b1*b2*x2*z3 + a1*b1*b2*x2*z3 + b1*b3*x2*z3 + a2*b1*b3*x2*z3 + a3*b1*b3*x2*z3 + b1*b2*b3*x2*z3 + c1*x2*z3 + a2*c1*x2*z3 + a3*c1*x2*z3 - 3*b1*c1*x2*z3 - a1*b1*c1*x2*z3 - 2*a2*b1*c1*x2*z3 - 2*a3*b1*c1*x2*z3 + b2*c1*x2*z3 + a1*b2*c1*x2*z3 - 3*b1*b2*c1*x2*z3 - 2*a1*b1*b2*c1*x2*z3 + b3*c1*x2*z3 + a2*b3*c1*x2*z3 + a3*b3*c1*x2*z3 - 2*b1*b3*c1*x2*z3 - 2*a2*b1*b3*c1*x2*z3 - 2*a3*b1*b3*c1*x2*z3 + b2*b3*c1*x2*z3 - 2*b1*b2*b3*c1*x2*z3 + a1*x1*x2*z3 + b1*x1*x2*z3 + a1*b1*x1*x2*z3 + b1*b2*x1*x2*z3 + (b1*x2*(1 + x2)*z3)/2 + (a1*b1*x2*(1 + x2)*z3)/2 + (a1*b2*x2*(1 + x2)*z3)/2 + (b1*b2*x2*(1 + x2)*z3)/2 + a2*x1*x3*z3 + a1*a2*x1*x3*z3 + b2*x1*x3*z3 + a1*b2*x1*x3*z3 + a2*b2*x1*x3*z3 + a1*a2*b2*x1*x3*z3 + a3*b2*x1*x3*z3 + a2*a3*b2*x1*x3*z3 + a1*x2*x3*z3 + a1*a2*x2*x3*z3 + a1*a2*b1*x2*x3*z3 + a1*a2*b2*x2*x3*z3 + a1*b1*b2*x2*x3*z3 + a1*b2*y1*z3 + a1*b2*x1*y1*z3 + x2*y1*z3 + b2*x2*y1*z3 + a1*b2*x2*y1*z3 + a2*x3*y1*z3 + a1*a2*x3*y1*z3 + b2*x3*y1*z3 + a1*b2*x3*y1*z3 + a2*b2*x3*y1*z3 + a1*a2*b2*x3*y1*z3 + a3*b2*x3*y1*z3 + a2*a3*b2*x3*y1*z3 + (a1*b2*y1*(1 + y1)*z3)/2 + 2*a1*b1*y2*z3 + a2*b1*y2*z3 + a3*b1*y2*z3 + a1*b2*y2*z3 + a1*b1*b2*y2*z3 + a2*b1*b3*y2*z3 + a3*b1*b3*y2*z3 + a2*c1*y2*z3 + a3*c1*y2*z3 - a1*b1*c1*y2*z3 - 2*a2*b1*c1*y2*z3 - 2*a3*b1*c1*y2*z3 + a1*b2*c1*y2*z3 - 2*a1*b1*b2*c1*y2*z3 + a2*b3*c1*y2*z3 + a3*b3*c1*y2*z3 - 2*a2*b1*b3*c1*y2*z3 - 2*a3*b1*b3*c1*y2*z3 + a1*b1*x1*y2*z3 + a1*b2*x1*y2*z3 + a1*b1*x2*y2*z3 + a1*b2*x2*y2*z3 + a1*a2*x3*y2*z3 + a1*b1*x3*y2*z3 + a1*a2*b1*x3*y2*z3 + a1*b2*x3*y2*z3 + a1*a2*b2*x3*y2*z3 + a1*y1*y2*z3 + (a1*b1*y2*(1 + y2)*z3)/2 + (a1*b2*y2*(1 + y2)*z3)/2 + a1*a2*x1*y3*z3 + a1*a2*b2*x1*y3*z3 + a2*a3*b2*x1*y3*z3 + a1*x2*y3*z3 + a1*a2*x2*y3*z3 + a1*b1*x2*y3*z3 + a1*a2*b1*x2*y3*z3 + a1*b2*x2*y3*z3 + a1*a2*b2*x2*y3*z3 + a1*b1*b2*x2*y3*z3 + a2*b1*x3*y3*z3 + a1*a2*y1*y3*z3 + a1*a2*b2*y1*y3*z3 + a2*a3*b2*y1*y3*z3 + a1*a2*y2*y3*z3 + a1*a2*b1*y2*y3*z3 + a1*a2*b2*y2*y3*z3 + b1*b2*z2*z3 + b1*b2*b3*z2*z3 - b1*b2*c1*z2*z3 + b2*b3*c1*z2*z3 - 2*b1*b2*b3*c1*z2*z3 + a2*b2*x1*z2*z3 + a3*b2*x1*z2*z3 + b1*b2*x1*z2*z3 + a1*b1*b2*x3*z2*z3 + a2*b2*y1*z2*z3 + a3*b2*y1*z2*z3 + a1*b1*b2*y3*z2*z3 + (b1*b2*z2*(1 + z2)*z3)/2;
end;
#####################################################################
#####################################################################
#Space Group No. 70 ( Fddd)
#####################################################################
Aiin70:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin70:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin70:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Bxyxzyzin70:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a2*b1*c1 + a2*b1*b2*c1 + a2*x1 + a2*b1*x1 + b2*x1 + a1*b2*x1 + a2*b2*x1 + a2*c1*x1 + a2*b1*x2 + b1*b2*x2 + c1*x2 + a2*c1*x2 + x1*x2 + a2*y1 + a2*b1*y1 + a1*b2*y1 + a2*b2*y1 + a2*c1*y1 + x2*y1 + a2*b1*y2 + a2*c1*y2 + b1*z2 + b1*b2*z2 + x1*z2 + y1*z2;
end;
#####################################################################
Cin70:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a3*b2 + a1*a2*b3 + a1*a3*b2*c1 + a3*b1*b2*c1 + a1*a2*b3*c1 + a1*a2*a3*b3*c1 + a1*b2*b3*c1 + a2*b2*b3*c1 + a2*a3*b2*b3*c1 + a1*a2*a3*b2*b3*c1 + a1*b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a3*b1*b2*b3*c1 + a1*a3*b2*c2 + a3*b1*b2*c2 + a1*a2*b3*c2 + a1*a2*a3*b3*c2 + a1*b1*b3*c2 + a1*a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a1*b2*b3*c2 + a1*a3*b2*b3*c2 + a1*a2*a3*b2*b3*c2 + a1*b1*b2*b3*c2 + a1*a3*b2*c1*c2 + a1*a2*a3*b2*c1*c2 + a1*a3*b3*c1*c2 + a1*a2*a3*b3*c1*c2 + a1*b1*b3*c1*c2 + a1*a2*b1*b3*c1*c2 + a1*a3*b1*b3*c1*c2 + a1*b2*b3*c1*c2 + a2*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + a2*a3*b2*b3*c1*c2 + a1*b1*b2*b3*c1*c2 + a1*a2*b2*c3 + a1*a3*b2*c3 + a1*b1*b2*c3 + a2*b1*b2*c3 + a3*b1*b2*c3 + a1*a2*b3*c3 + a1*b2*b3*c3 + a2*a3*x1 + a2*a3*b1*x1 + a1*a3*b2*x1 + a2*a3*b2*x1 + a3*b1*b2*x1 + a1*a3*b1*b2*x1 + a1*a2*b1*b3*x1 + a2*a3*b1*b3*x1 + a1*b2*b3*x1 + a2*b2*b3*x1 + a3*b2*b3*x1 + a1*a3*b2*b3*x1 + a2*a3*b2*b3*x1 + a2*a3*c1*x1 + a2*a3*b1*c1*x1 + a2*a3*b2*c1*x1 + a1*a2*a3*b2*c1*x1 + a2*a3*b1*b2*c1*x1 + a1*a2*b3*c1*x1 + a2*a3*b3*c1*x1 + a1*a2*a3*b3*c1*x1 + a2*b1*b3*c1*x1 + a2*a3*b1*b3*c1*x1 + b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a1*a3*c2*x1 + a2*a3*c2*x1 + a1*a3*b1*c2*x1 + a2*a3*b1*c2*x1 + a2*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + a1*b3*c2*x1 + a2*b3*c2*x1 + a1*b1*b3*c2*x1 + a2*b1*b3*c2*x1 + a3*b1*b3*c2*x1 + a2*a3*b1*b3*c2*x1 + a1*a2*a3*b1*b3*c2*x1 + a2*a3*b2*b3*c2*x1 + a1*a2*a3*b2*b3*c2*x1 + a1*b1*b2*b3*c2*x1 + a2*b1*b2*b3*c2*x1 + (a2*b3*x1*(1 + x1))/2 + (b2*b3*x1*(1 + x1))/2 + a1*a2*a3*x2 + a3*b1*x2 + a3*b1*b2*x2 + a1*a2*a3*b3*x2 + a1*b2*b3*x2 + a1*a3*b2*b3*x2 + b1*b2*b3*x2 + a2*a3*c1*x2 + a1*a2*a3*c1*x2 + a1*a3*b1*c1*x2 + a2*a3*b2*c1*x2 + a2*b3*c1*x2 + a2*a3*b3*c1*x2 + b1*b3*c1*x2 + a1*b1*b3*c1*x2 + b1*b2*b3*c1*x2 + a1*a2*a3*c2*x2 + a3*b1*c2*x2 + a1*a3*b1*c2*x2 + a3*b1*b2*c2*x2 + a1*b3*c2*x2 + b1*b3*c2*x2 + a2*b1*b3*c2*x2 + a3*b1*b3*c2*x2 + a1*a2*a3*b2*b3*c2*x2 + b1*b2*b3*c2*x2 + a2*b1*b2*b3*c2*x2 + a1*a2*a3*x1*x2 + a1*a3*b1*x1*x2 + a2*a3*b1*x1*x2 + a1*a3*b1*b2*x1*x2 + a2*b3*x1*x2 + a1*a2*b3*x1*x2 + a2*b1*b3*x1*x2 + a1*a2*b1*b3*x1*x2 + a1*a3*b1*b3*x1*x2 + b2*b3*x1*x2 + (a1*a3*x2*(1 + x2))/2 + (a1*a3*b2*x2*(1 + x2))/2 + (a1*b3*x2*(1 + x2))/2 + (a1*a2*b3*x2*(1 + x2))/2 + (a1*a3*b3*x2*(1 + x2))/2 + (b1*b3*x2*(1 + x2))/2 + a1*a2*x3 + a1*a2*a3*x3 + a1*a2*b1*x3 + a2*a3*b1*x3 + a1*a2*b2*x3 + a1*a3*b2*x3 + a1*a2*a3*b2*x3 + b1*b2*x3 + a1*b1*b2*x3 + a1*a2*b3*x3 + a2*b1*b3*x3 + a1*b2*b3*x3 + a1*a2*b2*b3*x3 + a1*a3*b2*b3*x3 + b1*b2*b3*x3 + a1*a2*b1*c1*x3 + a2*a3*b1*c1*x3 + a1*b2*c1*x3 + a2*b2*c1*x3 + a1*a2*b2*c1*x3 + a1*a2*a3*b2*c1*x3 + a1*b1*b2*c1*x3 + a2*b1*b3*c1*x3 + b2*b3*c1*x3 + a1*a2*b2*b3*c1*x3 + a1*a2*a3*b2*b3*c1*x3 + b1*b2*b3*c1*x3 + a1*b1*b2*b3*c1*x3 + a2*b1*b2*b3*c1*x3 + a1*c2*x3 + a1*a2*c2*x3 + a1*a3*c2*x3 + a1*a2*a3*c2*x3 + b1*c2*x3 + a1*b1*c2*x3 + a2*b1*c2*x3 + a3*b1*c2*x3 + a1*b2*c2*x3 + b1*b2*c2*x3 + a1*a2*b3*c2*x3 + a1*a3*b3*c2*x3 + a1*a2*a3*b3*c2*x3 + b1*b3*c2*x3 + a1*b1*b3*c2*x3 + a2*b1*b3*c2*x3 + a3*b1*b3*c2*x3 + a1*b2*b3*c2*x3 + b1*b2*b3*c2*x3 + a2*x1*x3 + a1*a2*x1*x3 + a2*a3*x1*x3 + a1*a2*a3*x1*x3 + a1*a2*b1*x1*x3 + a1*a2*a3*b1*x1*x3 + a1*b2*x1*x3 + a1*a2*b2*x1*x3 + a1*a2*a3*b2*x1*x3 + a1*b1*b2*x1*x3 + a2*b1*b2*x1*x3 + a1*a2*b3*x1*x3 + a1*a2*a3*b3*x1*x3 + a1*a2*b1*b3*x1*x3 + a2*a3*b1*b3*x1*x3 + b2*b3*x1*x3 + a1*b2*b3*x1*x3 + a2*b2*b3*x1*x3 + a1*a2*b2*b3*x1*x3 + a2*a3*b2*b3*x1*x3 + b1*b2*b3*x1*x3 + b1*x2*x3 + a1*b1*x2*x3 + a1*b2*x2*x3 + a1*a2*b2*x2*x3 + a1*a2*a3*b2*x2*x3 + b1*b2*x2*x3 + a2*b1*b2*x2*x3 + b1*b3*x2*x3 + a1*b1*b3*x2*x3 + a1*b2*b3*x2*x3 + a1*a2*b2*b3*x2*x3 + b1*b2*b3*x2*x3 + (a1*a2*x3*(1 + x3))/2 + (a1*a2*a3*x3*(1 + x3))/2 + (b1*b2*x3*(1 + x3))/2 + (a1*a2*b3*x3*(1 + x3))/2 + a1*a3*b2*y1 + a3*b1*b2*y1 + a2*b3*y1 + a1*a2*b3*y1 + a2*a3*b3*y1 + a1*b2*b3*y1 + a2*b2*b3*y1 + a3*b2*b3*y1 + a1*a2*a3*b2*c1*y1 + a1*a2*a3*b3*c1*y1 + b2*b3*c1*y1 + b1*b2*b3*c1*y1 + a1*a3*b2*c2*y1 + a3*b1*b2*c2*y1 + a1*b3*c2*y1 + a2*b3*c2*y1 + a1*a3*b3*c2*y1 + a2*a3*b3*c2*y1 + a1*b1*b3*c2*y1 + a2*b1*b3*c2*y1 + a3*b1*b3*c2*y1 + a1*b1*b2*b3*c2*y1 + a2*b1*b2*b3*c2*y1 + a2*a3*x1*y1 + a2*a3*b1*x1*y1 + a2*a3*b2*x1*y1 + a2*b3*x1*y1 + a1*a2*b3*x1*y1 + a2*a3*b3*x1*y1 + b2*b3*x1*y1 + a1*a3*x2*y1 + a2*a3*x2*y1 + a1*a2*a3*x2*y1 + a1*a3*b2*x2*y1 + a2*a3*b2*x2*y1 + a1*b3*x2*y1 + a2*b3*x2*y1 + a1*a3*b3*x2*y1 + a2*a3*b3*x2*y1 + a1*b1*b3*x2*y1 + b2*b3*x2*y1 + a2*x3*y1 + a2*a3*x3*y1 + a1*b2*x3*y1 + a1*b1*b2*x3*y1 + a2*b1*b2*x3*y1 + b2*b3*x3*y1 + a1*b2*b3*x3*y1 + a2*b2*b3*x3*y1 + b1*b2*b3*x3*y1 + (b2*b3*y1*(1 + y1))/2 + a1*a2*a3*y2 + a3*b1*b2*y2 + a1*a2*b3*y2 + a1*a2*a3*b3*y2 + b1*b3*y2 + a1*b2*b3*y2 + b1*b2*b3*y2 + a1*a3*c1*y2 + a1*a2*a3*c1*y2 + a1*a3*b1*c1*y2 + a1*a3*b2*c1*y2 + a1*b3*c1*y2 + a1*a3*b3*c1*y2 + b1*b3*c1*y2 + a1*b1*b3*c1*y2 + b1*b2*b3*c1*y2 + a1*a3*c2*y2 + a1*a2*a3*c2*y2 + a1*a3*b1*c2*y2 + a1*a3*b2*c2*y2 + a3*b1*b2*c2*y2 + a1*b3*c2*y2 + a1*a3*b3*c2*y2 + a2*b1*b3*c2*y2 + a3*b1*b3*c2*y2 + a2*b1*b2*b3*c2*y2 + a2*a3*x1*y2 + a1*a2*a3*x1*y2 + a2*a3*b1*x1*y2 + a2*a3*b2*x1*y2 + a2*b3*x1*y2 + a2*a3*b3*x1*y2 + b1*b3*x1*y2 + a1*b1*b3*x1*y2 + b2*b3*x1*y2 + a1*a2*x3*y2 + a1*a2*a3*x3*y2 + a1*b1*x3*y2 + a1*b2*x3*y2 + a2*b1*b2*x3*y2 + a1*a2*b3*x3*y2 + a1*a2*a3*b3*x3*y2 + a1*b1*b3*x3*y2 + a1*b2*b3*x3*y2 + b1*b2*b3*x3*y2 + a1*a2*a3*y1*y2 + b1*b3*y1*y2 + a1*b1*b3*y1*y2 + b2*b3*y1*y2 + (b1*b3*y2*(1 + y2))/2 + a1*a2*a3*y3 + a1*a2*b1*y3 + a2*a3*b1*y3 + a1*a2*a3*b2*y3 + a1*b1*b2*y3 + a3*b1*b2*y3 + a2*b1*b3*y3 + a1*b2*b3*y3 + a1*a2*b1*c1*y3 + a2*a3*b1*c1*y3 + a1*b1*b2*c1*y3 + a2*b1*b3*c1*y3 + a1*b1*b2*b3*c1*y3 + a2*b1*b2*b3*c1*y3 + a1*a2*a3*c2*y3 + a3*b1*b2*c2*y3 + a1*a2*a3*b3*c2*y3 + a1*b1*b3*c2*y3 + a2*b1*b3*c2*y3 + a3*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + a1*a2*a3*x1*y3 + a2*a3*b1*x1*y3 + a1*a2*a3*b1*x1*y3 + a2*a3*b2*x1*y3 + a1*a2*a3*b2*x1*y3 + a1*b1*b2*x1*y3 + a2*b1*b2*x1*y3 + a2*a3*b3*x1*y3 + a1*a2*a3*b3*x1*y3 + a1*b2*b3*x1*y3 + a2*b2*b3*x1*y3 + a1*a2*a3*x2*y3 + a1*a2*a3*b2*x2*y3 + b1*b2*x2*y3 + a2*b1*b2*x2*y3 + a1*a2*a3*b3*x2*y3 + b1*b3*x2*y3 + a1*b1*b3*x2*y3 + a1*b2*b3*x2*y3 + a1*a2*a3*b3*x3*y3 + b1*b2*b3*x3*y3 + a2*a3*y1*y3 + a1*b1*b2*y1*y3 + a2*b1*b2*y1*y3 + a1*b2*b3*y1*y3 + a2*b2*b3*y1*y3 + a2*b1*b2*y2*y3 + a1*b1*b3*y2*y3 + a1*b2*b3*y2*y3 + (a1*a2*a3*y3*(1 + y3))/2 + a1*a3*b2*z1 + a1*a3*b1*b2*z1 + a1*a2*b3*z1 + a2*a3*b3*z1 + a1*a2*b1*b3*z1 + a2*a3*b1*b3*z1 + a1*a3*b2*b3*z1 + a2*a3*b2*b3*z1 + a2*a3*b1*c1*z1 + a2*a3*b1*b2*c1*z1 + a2*b3*c1*z1 + a1*a2*b3*c1*z1 + a2*b1*b3*c1*z1 + a2*a3*b1*b3*c1*z1 + a1*a3*b1*c2*z1 + a2*a3*b1*c2*z1 + a1*a3*b2*c2*z1 + a2*a3*b2*c2*z1 + a1*a3*b3*c2*z1 + a1*a2*a3*b3*c2*z1 + a2*a3*b1*b3*c2*z1 + a1*a2*a3*b1*b3*c2*z1 + a2*a3*b2*b3*c2*z1 + a1*a2*a3*b2*b3*c2*z1 + a2*a3*b1*x1*z1 + a2*a3*b2*x1*z1 + a2*b3*x1*z1 + a1*a2*b3*x1*z1 + a2*a3*b3*x1*z1 + a1*a3*b1*x2*z1 + a2*a3*b1*x2*z1 + a2*a3*b2*x2*z1 + a1*a3*b1*b2*x2*z1 + a2*b3*x2*z1 + a2*a3*b3*x2*z1 + a1*b1*b3*x2*z1 + a2*b1*b3*x2*z1 + a1*a2*b1*b3*x2*z1 + a1*a3*b1*b3*x2*z1 + a1*a2*b1*x3*z1 + a1*a2*a3*b1*x3*z1 + a1*a2*b2*x3*z1 + a1*a2*a3*b2*x3*z1 + a2*a3*b3*x3*z1 + a1*a2*a3*b3*x3*z1 + a1*a2*b1*b3*x3*z1 + a2*a3*b1*b3*x3*z1 + a1*a2*b2*b3*x3*z1 + a2*a3*b2*b3*x3*z1 + a2*a3*b1*y1*z1 + a2*a3*b2*y1*z1 + a2*b3*y1*z1 + a1*a2*b3*y1*z1 + a2*a3*b3*y1*z1 + a2*a3*b1*y2*z1 + a2*a3*b2*y2*z1 + a2*b3*y2*z1 + a2*a3*b3*y2*z1 + a2*a3*b1*y3*z1 + a1*a2*a3*b1*y3*z1 + a2*a3*b2*y3*z1 + a1*a2*a3*b2*y3*z1 + a2*a3*b3*y3*z1 + a1*a2*a3*b3*y3*z1 + (a2*b3*z1*(1 + z1))/2 + a1*a3*b2*z2 + a1*a3*b2*b3*z2 + a1*a3*b2*c1*z2 + a1*b3*c1*z2 + a1*a3*b3*c1*z2 + a1*a3*b2*c2*z2 + a1*a3*b3*c2*z2 + a1*a2*a3*b3*c2*z2 + a1*a2*a3*b2*b3*c2*z2 + a1*a3*b2*x1*z2 + a2*a3*b2*x1*z2 + a1*a3*b1*b2*x1*z2 + a1*b3*x1*z2 + a2*b3*x1*z2 + a1*a3*b3*x1*z2 + a2*a3*b3*x1*z2 + a1*b1*b3*x1*z2 + a2*b1*b3*x1*z2 + a1*a2*b1*b3*x1*z2 + a1*a3*b1*b3*x1*z2 + a1*a2*b2*x3*z2 + a1*a2*a3*b2*x3*z2 + a1*a2*a3*b3*x3*z2 + a1*a2*b2*b3*x3*z2 + a1*a3*b2*y1*z2 + a2*a3*b2*y1*z2 + a1*b3*y1*z2 + a2*b3*y1*z2 + a1*a3*b3*y1*z2 + a2*a3*b3*y1*z2 + a1*a2*a3*b2*y3*z2 + a1*a2*a3*b3*y3*z2 + a1*a3*b2*z1*z2 + a1*a3*b1*b2*z1*z2 + a1*b3*z1*z2 + a2*b3*z1*z2 + a1*a2*b3*z1*z2 + a1*a3*b3*z1*z2 + a1*b1*b3*z1*z2 + a2*b1*b3*z1*z2 + a1*a2*b1*b3*z1*z2 + a1*a3*b1*b3*z1*z2 + (a1*a3*b2*z2*(1 + z2))/2 + (a1*b3*z2*(1 + z2))/2 + (a1*a2*b3*z2*(1 + z2))/2 + (a1*a3*b3*z2*(1 + z2))/2 + b1*b2*z3 + a3*b1*b2*z3 + a1*a2*a3*b3*z3 + a1*a2*b2*b3*z3 + a1*a3*b2*b3*z3 + a1*a2*b3*c1*z3 + a1*a2*a3*b3*c1*z3 + a1*a2*b2*b3*c1*z3 + a1*a2*a3*b2*b3*c1*z3 + b1*b2*c2*z3 + a3*b1*b2*c2*z3 + a1*a2*b3*c2*z3 + a1*a3*b3*c2*z3 + a1*a2*a3*b3*c2*z3 + a1*b2*x1*z3 + b1*b2*x1*z3 + a1*a2*b1*b3*x1*z3 + a2*a3*b1*b3*x1*z3 + a1*a2*b2*b3*x1*z3 + a2*a3*b2*b3*x1*z3 + b1*b2*b3*x1*z3 + b1*x2*z3 + a1*b1*x2*z3 + a1*b2*x2*z3 + b1*b2*x2*z3 + a1*a2*b3*x2*z3 + a1*a2*a3*b3*x2*z3 + a1*a2*b2*b3*x2*z3 + b1*b2*b3*x2*z3 + a1*a2*a3*b3*x3*z3 + b1*b2*b3*x3*z3 + a1*b2*y1*z3 + b1*b2*y1*z3 + b1*b2*b3*y1*z3 + a1*b1*y2*z3 + a1*b2*y2*z3 + b1*b2*y2*z3 + a1*a2*b3*y2*z3 + a1*a2*a3*b3*y2*z3 + b1*b2*b3*y2*z3 + b1*b2*y3*z3 + a1*a2*a3*b3*y3*z3 + b1*b2*b3*y3*z3 + a1*a2*b3*z1*z3 + a2*a3*b3*z1*z3 + a1*a2*b1*b3*z1*z3 + a2*a3*b1*b3*z1*z3 + a1*a2*b2*b3*z1*z3 + a2*a3*b2*b3*z1*z3 + a1*a2*b3*z2*z3 + a1*a2*b2*b3*z2*z3 + (b1*b2*z3*(1 + z3))/2 + (a1*a2*b3*z3*(1 + z3))/2;
end;
#####################################################################
#####################################################################
#Space Group No. 71 ( Immm)
#####################################################################
Aiin71:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin71:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin71:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axyzin71:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bphiin71:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*x1 + a2*b1*x1 + a1*b2*x1 + a2*b2*x1 + a2*y1 + a2*b1*y1 + b2*y1 + a1*b2*y1 + a2*b2*y1 + a2*b1*z1 + a1*b2*z1 + a2*b2*z1;
end;
#####################################################################
Bxyzin71:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*x1*x2 + b1*x1*x2 + x1*y2 + a1*x1*y2 + b1*x1*y2 + a1*x2*y2 + b1*x2*y2 + x1*z2 + a1*x1*z2 + b1*x1*z2 + a1*x2*z2 + b1*x2*z2;
end;
#####################################################################
Byxzin71:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*x1*x2 + b1*x2*y1 + x1*y2 + a1*x1*y2 + a1*x2*y2 + b1*x2*y2 + b1*y1*y2 + a1*x1*z2 + a1*x2*z2 + y1*z2 + b1*y1*z2 + b1*y2*z2;
end;
#####################################################################
Cxyzin71:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3*x2 + a1*a2*a3*b1*x2 + (5*a1*a2*b1*b3*x2)/2 + (3*a1*a2*b2*b3*x2)/2 + a1*a2*b1*b2*b3*x2 + a1*a2*a3*c1*x2 - 2*a1*a2*a3*b1*c1*x2 - a1*a2*b1*b3*c1*x2 - a1*a2*b1*b2*b3*c1*x2 + (3*a1*a3*x1*x2)/2 + (3*a1*a2*a3*x1*x2)/2 + 3*a3*b1*x1*x2 + a1*a3*b1*x1*x2 + (5*a2*a3*b1*x1*x2)/2 + 3*a1*a2*a3*b1*x1*x2 + (3*a1*a3*b2*x1*x2)/2 + a1*a2*a3*b2*x1*x2 + (5*a3*b1*b2*x1*x2)/2 + 4*a1*a3*b1*b2*x1*x2 + 2*a2*a3*b1*b2*x1*x2 + a1*a2*a3*b1*b2*x1*x2 + a1*b3*x1*x2 + a1*b1*b3*x1*x2 + (5*a2*b1*b3*x1*x2)/2 + (3*a1*a2*b1*b3*x1*x2)/2 + (3*a1*b2*b3*x1*x2)/2 + (a1*a2*b2*b3*x1*x2)/2 + (5*a1*b1*b2*b3*x1*x2)/2 + (3*a2*b1*b2*b3*x1*x2)/2 + a1*a2*b1*b2*b3*x1*x2 + a1*a2*a3*c1*x1*x2 - a3*b1*c1*x1*x2 - a2*a3*b1*c1*x1*x2 - 3*a1*a2*a3*b1*c1*x1*x2 + a1*a3*b2*c1*x1*x2 + a1*a2*a3*b2*c1*x1*x2 - a3*b1*b2*c1*x1*x2 - 3*a1*a3*b1*b2*c1*x1*x2 - a2*a3*b1*b2*c1*x1*x2 - 2*a1*a2*a3*b1*b2*c1*x1*x2 - a2*b1*b3*c1*x1*x2 - a1*a2*b1*b3*c1*x1*x2 + a1*b2*b3*c1*x1*x2 + a1*a2*b2*b3*c1*x1*x2 - 3*a1*b1*b2*b3*c1*x1*x2 - a2*b1*b2*b3*c1*x1*x2 - 2*a1*a2*b1*b2*b3*c1*x1*x2 + (a1*a3*x1^2*x2)/2 + (a3*b1*x1^2*x2)/2 + (a1*a2*a3*b1*x1^2*x2)/2 + (a1*a2*a3*b2*x1^2*x2)/2 + (a1*a3*b1*b2*x1^2*x2)/2 + (a2*a3*b1*b2*x1^2*x2)/2 + (a1*a2*a3*x2^2)/2 + (a1*a2*b1*b3*x2^2)/2 + a1*a2*b2*b3*x2^2 + (a1*a2*b1*b2*b3*x2^2)/2 + (a1*a2*a3*x1*x2^2)/2 + (a3*b1*x1*x2^2)/2 + (a2*a3*b1*x1*x2^2)/2 + (a1*a2*a3*b1*x1*x2^2)/2 + (a1*a3*b2*x1*x2^2)/2 + (a1*a2*a3*b2*x1*x2^2)/2 + (a3*b1*b2*x1*x2^2)/2 + (a1*a3*b1*b2*x1*x2^2)/2 + (a2*a3*b1*b2*x1*x2^2)/2 + (a2*b1*b3*x1*x2^2)/2 + (a1*a2*b1*b3*x1*x2^2)/2 + (a1*b2*b3*x1*x2^2)/2 + (a1*a2*b2*b3*x1*x2^2)/2 + (a1*b1*b2*b3*x1*x2^2)/2 + (a2*b1*b2*b3*x1*x2^2)/2 + (a1*a2*a3*x2^3)/2 + (a1*a2*b2*b3*x2^3)/2 + (a1*a2*b1*b2*b3*x2^3)/2 + a2*x1*x3 + (3*a1*a2*x1*x3)/2 + a2*a3*x1*x3 + a1*a2*a3*x1*x3 + a2*b1*x1*x3 + (a2*a3*b1*x1*x3)/2 + a1*a2*a3*b1*x1*x3 + (3*a1*b2*x1*x3)/2 + a2*b2*x1*x3 + a1*a2*b2*x1*x3 + (3*a1*a3*b2*x1*x3)/2 + a2*a3*b2*x1*x3 + a1*a2*a3*b2*x1*x3 + a1*b1*b2*x1*x3 + a1*a2*b1*b2*x1*x3 + a1*a3*b1*b2*x1*x3 + (3*a2*a3*b1*b2*x1*x3)/2 + a1*a2*a3*b1*b2*x1*x3 + (3*a1*a2*b3*x1*x3)/2 + a1*a2*a3*b3*x1*x3 + (3*a2*a3*b1*b3*x1*x3)/2 + a1*a2*a3*b1*b3*x1*x3 + (3*a1*a2*b2*b3*x1*x3)/2 + (3*a1*a3*b2*b3*x1*x3)/2 + (3*a1*a2*b1*b2*b3*x1*x3)/2 + (3*a1*a3*b1*b2*b3*x1*x3)/2 + (a1*a2*x1^2*x3)/2 + (a2*a3*b1*x1^2*x3)/2 + (a1*b2*x1^2*x3)/2 + (a1*a3*b2*x1^2*x3)/2 + (a2*a3*b1*b2*x1^2*x3)/2 + (a1*a2*b3*x1^2*x3)/2 + (a2*a3*b1*b3*x1^2*x3)/2 + (a1*a2*b2*b3*x1^2*x3)/2 + (a1*a3*b2*b3*x1^2*x3)/2 + (a1*a2*b1*b2*b3*x1^2*x3)/2 + (a1*a3*b1*b2*b3*x1^2*x3)/2 + a2*a3*b1*x2*x3 + a2*a3*c1*x2*x3 - 2*a2*a3*b1*c1*x2*x3 + a1*a2*x1*x2*x3 + a1*a3*x1*x2*x3 + a3*b1*x1*x2*x3 + a1*a3*b2*x1*x2*x3 + a2*a3*b2*x1*x2*x3 + a3*b1*b2*x1*x2*x3 + a1*a2*b3*x1*x2*x3 + a2*a3*b3*x1*x2*x3 + a2*a3*y1 + (3*a2*b1*b3*y1)/2 + (3*b2*b3*y1)/2 + (3*a1*b2*b3*y1)/2 + (3*a2*b2*b3*y1)/2 + (3*a2*a3*x1*y1)/2 + a2*a3*b1*x1*y1 + (3*a3*b2*x1*y1)/2 + a1*a3*b2*x1*y1 + a2*a3*b2*x1*y1 + (a2*b1*b3*x1*y1)/2 + b2*b3*x1*y1 + (a1*b2*b3*x1*y1)/2 + (a2*b2*b3*x1*y1)/2 + (a2*a3*b1*x1^2*y1)/2 + (a3*b2*x1^2*y1)/2 + (a1*a3*b2*x1^2*y1)/2 + (a2*a3*b2*x1^2*y1)/2 + 2*a3*x2*y1 + 2*a1*a3*x2*y1 + (3*a2*a3*x2*y1)/2 + (3*a1*a2*a3*x2*y1)/2 + (3*a3*b1*x2*y1)/2 + 4*a1*a3*b1*x2*y1 + (5*a2*a3*b1*x2*y1)/2 + 3*a1*a2*a3*b1*x2*y1 + (3*a3*b2*x2*y1)/2 + (3*a1*a3*b2*x2*y1)/2 + a2*a3*b2*x2*y1 + a1*a2*a3*b2*x2*y1 + (3*a3*b1*b2*x2*y1)/2 + 4*a1*a3*b1*b2*x2*y1 + 3*a2*a3*b1*b2*x2*y1 + a1*a2*a3*b1*b2*x2*y1 + b3*x2*y1 + a1*b3*x2*y1 + (3*b1*b3*x2*y1)/2 + a1*b1*b3*x2*y1 + (3*a2*b1*b3*x2*y1)/2 + (3*a1*a2*b1*b3*x2*y1)/2 + b2*b3*x2*y1 + a1*b2*b3*x2*y1 + (a2*b2*b3*x2*y1)/2 + (3*a1*a2*b2*b3*x2*y1)/2 + (b1*b2*b3*x2*y1)/2 + 2*a1*a2*b1*b2*b3*x2*y1 + a3*c1*x2*y1 + a1*a3*c1*x2*y1 + a1*a2*a3*c1*x2*y1 - 2*a3*b1*c1*x2*y1 - 3*a1*a3*b1*c1*x2*y1 - a2*a3*b1*c1*x2*y1 - 3*a1*a2*a3*b1*c1*x2*y1 + a3*b2*c1*x2*y1 + a1*a3*b2*c1*x2*y1 + a2*a3*b2*c1*x2*y1 + a1*a2*a3*b2*c1*x2*y1 - 2*a3*b1*b2*c1*x2*y1 - 3*a1*a3*b1*b2*c1*x2*y1 - 3*a2*a3*b1*b2*c1*x2*y1 - 2*a1*a2*a3*b1*b2*c1*x2*y1 - a1*a2*b1*b3*c1*x2*y1 + a1*a2*b2*b3*c1*x2*y1 - 2*a1*a2*b1*b2*b3*c1*x2*y1 + a1*a3*x1*x2*y1 + a1*a2*a3*x1*x2*y1 + a1*a3*b1*x1*x2*y1 + a3*b2*x1*x2*y1 + a2*a3*b2*x1*x2*y1 + b1*b3*x1*x2*y1 + a2*b1*b3*x1*x2*y1 + a1*a2*b1*b3*x1*x2*y1 + a1*b2*b3*x1*x2*y1 + a1*a2*b2*b3*x1*x2*y1 + a1*b1*b2*b3*x1*x2*y1 + a2*b1*b2*b3*x1*x2*y1 + (a3*x2^2*y1)/2 + (a1*a3*x2^2*y1)/2 + (a1*a2*a3*x2^2*y1)/2 + (a1*a3*b1*x2^2*y1)/2 + (a2*a3*b1*x2^2*y1)/2 + (a1*a2*a3*b1*x2^2*y1)/2 + (a3*b2*x2^2*y1)/2 + (a1*a3*b2*x2^2*y1)/2 + (a2*a3*b2*x2^2*y1)/2 + (a1*a2*a3*b2*x2^2*y1)/2 + (a1*a3*b1*b2*x2^2*y1)/2 + (a2*a3*b1*b2*x2^2*y1)/2 + (a1*a2*b1*b3*x2^2*y1)/2 + (a1*a2*b2*b3*x2^2*y1)/2 + (a2*x3*y1)/2 + (3*a1*a2*x3*y1)/2 + a1*a2*a3*x3*y1 + a2*b1*x3*y1 + (3*a2*a3*b1*x3*y1)/2 + a1*a2*a3*b1*x3*y1 + b2*x3*y1 + (a1*b2*x3*y1)/2 + (a2*b2*x3*y1)/2 + a3*b2*x3*y1 + (a1*a3*b2*x3*y1)/2 + a1*a2*a3*b2*x3*y1 + (b1*b2*x3*y1)/2 + a1*b1*b2*x3*y1 + (a2*b1*b2*x3*y1)/2 + a1*a2*b1*b2*x3*y1 + (a3*b1*b2*x3*y1)/2 + a1*a3*b1*b2*x3*y1 + (a2*a3*b1*b2*x3*y1)/2 + a1*a2*a3*b1*b2*x3*y1 + (3*a2*b3*x3*y1)/2 + (3*a1*a2*b3*x3*y1)/2 + a2*a3*b3*x3*y1 + a1*a2*a3*b3*x3*y1 + (a2*a3*b1*b3*x3*y1)/2 + a1*a2*a3*b1*b3*x3*y1 + (3*a2*b2*b3*x3*y1)/2 + (3*a1*a2*b2*b3*x3*y1)/2 + (3*a3*b2*b3*x3*y1)/2 + (3*a1*a3*b2*b3*x3*y1)/2 + (3*a2*b1*b2*b3*x3*y1)/2 + (3*a1*a2*b1*b2*b3*x3*y1)/2 + (3*a3*b1*b2*b3*x3*y1)/2 + (3*a1*a3*b1*b2*b3*x3*y1)/2 + a2*x1*x3*y1 + a2*a3*b1*x1*x3*y1 + a1*b2*x1*x3*y1 + a1*a2*b2*x1*x3*y1 + a3*b2*x1*x3*y1 + a1*a3*b2*x1*x3*y1 + a2*a3*b1*b2*x1*x3*y1 + a2*b3*x1*x3*y1 + a2*a3*b1*b3*x1*x3*y1 + a1*a2*b1*b2*b3*x1*x3*y1 + a1*a3*b1*b2*b3*x1*x3*y1 + a2*x2*x3*y1 + a1*a2*x2*x3*y1 + a3*x2*x3*y1 + a1*a3*x2*x3*y1 + a3*b1*x2*x3*y1 + a3*b2*x2*x3*y1 + a1*a3*b2*x2*x3*y1 + a2*a3*b2*x2*x3*y1 + a3*b1*b2*x2*x3*y1 + a2*b3*x2*x3*y1 + a1*a2*b3*x2*x3*y1 + a2*a3*b3*x2*x3*y1 + (a2*a3*y1^2)/2 + a2*b1*b3*y1^2 + b2*b3*y1^2 + a1*b2*b3*y1^2 + a2*b2*b3*y1^2 + (a2*a3*x1*y1^2)/2 + (a2*a3*b1*x1*y1^2)/2 + (a1*a3*b2*x1*y1^2)/2 + (a2*a3*b2*x1*y1^2)/2 + (a2*b1*b3*x1*y1^2)/2 + (a1*b2*b3*x1*y1^2)/2 + (a2*b2*b3*x1*y1^2)/2 + (a3*x2*y1^2)/2 + (a1*a3*x2*y1^2)/2 + (a2*a3*x2*y1^2)/2 + (a3*b1*x2*y1^2)/2 + (a1*a3*b1*x2*y1^2)/2 + (a1*a2*a3*b1*x2*y1^2)/2 + (a2*a3*b2*x2*y1^2)/2 + (a1*a2*a3*b2*x2*y1^2)/2 + (a3*b1*b2*x2*y1^2)/2 + (a1*a3*b1*b2*x2*y1^2)/2 + (a2*a3*b1*b2*x2*y1^2)/2 + (b1*b3*x2*y1^2)/2 + (a2*b1*b3*x2*y1^2)/2 + (a2*b2*b3*x2*y1^2)/2 + (b1*b2*b3*x2*y1^2)/2 + (a2*x3*y1^2)/2 + (a1*a2*x3*y1^2)/2 + (a2*a3*b1*x3*y1^2)/2 + (a1*b2*x3*y1^2)/2 + (a2*b2*x3*y1^2)/2 + (a1*a3*b2*x3*y1^2)/2 + (b1*b2*x3*y1^2)/2 + (a2*b1*b2*x3*y1^2)/2 + (a3*b1*b2*x3*y1^2)/2 + (a2*a3*b1*b2*x3*y1^2)/2 + (a2*b3*x3*y1^2)/2 + (a1*a2*b3*x3*y1^2)/2 + (a2*a3*b1*b3*x3*y1^2)/2 + (a2*b2*b3*x3*y1^2)/2 + (a1*a2*b2*b3*x3*y1^2)/2 + (a3*b2*b3*x3*y1^2)/2 + (a1*a3*b2*b3*x3*y1^2)/2 + (a2*b1*b2*b3*x3*y1^2)/2 + (a1*a2*b1*b2*b3*x3*y1^2)/2 + (a3*b1*b2*b3*x3*y1^2)/2 + (a1*a3*b1*b2*b3*x3*y1^2)/2 + (a2*a3*y1^3)/2 + (a2*b1*b3*y1^3)/2 + (b2*b3*y1^3)/2 + (a1*b2*b3*y1^3)/2 + (a2*b2*b3*y1^3)/2 + a1*a3*y2 + a1*a2*a3*y2 + a3*b1*y2 + a1*a3*b1*y2 + a2*a3*b1*y2 + a1*a2*a3*b1*y2 + (5*b1*b3*y2)/2 + (5*a1*b1*b3*y2)/2 + (5*a2*b1*b3*y2)/2 + (5*a1*a2*b1*b3*y2)/2 + (3*a1*b2*b3*y2)/2 + (3*a1*a2*b2*b3*y2)/2 + b1*b2*b3*y2 + a1*b1*b2*b3*y2 + a2*b1*b2*b3*y2 + a1*a2*b1*b2*b3*y2 + a3*c1*y2 + a1*a3*c1*y2 + a2*a3*c1*y2 + a1*a2*a3*c1*y2 - 2*a3*b1*c1*y2 - 2*a1*a3*b1*c1*y2 - 2*a2*a3*b1*c1*y2 - 2*a1*a2*a3*b1*c1*y2 - b1*b3*c1*y2 - a1*b1*b3*c1*y2 - a2*b1*b3*c1*y2 - a1*a2*b1*b3*c1*y2 - b1*b2*b3*c1*y2 - a1*b1*b2*b3*c1*y2 - a2*b1*b2*b3*c1*y2 - a1*a2*b1*b2*b3*c1*y2 + 2*a3*x1*y2 + 2*a1*a3*x1*y2 + (3*a2*a3*x1*y2)/2 + (3*a1*a2*a3*x1*y2)/2 + 4*a3*b1*x1*y2 + 3*a1*a3*b1*x1*y2 + (5*a2*a3*b1*x1*y2)/2 + 3*a1*a2*a3*b1*x1*y2 + (3*a3*b2*x1*y2)/2 + (a1*a3*b2*x1*y2)/2 + a2*a3*b2*x1*y2 + a1*a2*a3*b2*x1*y2 + 3*a3*b1*b2*x1*y2 + 2*a1*a3*b1*b2*x1*y2 + 3*a2*a3*b1*b2*x1*y2 + a1*a2*a3*b1*b2*x1*y2 + b3*x1*y2 + (3*a1*b3*x1*y2)/2 + a1*a2*b3*x1*y2 + a1*a3*b3*x1*y2 + (3*b1*b3*x1*y2)/2 + (3*a1*b1*b3*x1*y2)/2 + (a2*b1*b3*x1*y2)/2 + (5*a1*a2*b1*b3*x1*y2)/2 + (3*a3*b1*b3*x1*y2)/2 + a1*a3*b1*b3*x1*y2 + b2*b3*x1*y2 + a1*b2*b3*x1*y2 + (a2*b2*b3*x1*y2)/2 + (a1*a2*b2*b3*x1*y2)/2 + (3*a1*b1*b2*b3*x1*y2)/2 + (5*a2*b1*b2*b3*x1*y2)/2 + a1*a2*b1*b2*b3*x1*y2 + a3*c1*x1*y2 + a1*a3*c1*x1*y2 + a2*a3*c1*x1*y2 + a1*a2*a3*c1*x1*y2 - 3*a3*b1*c1*x1*y2 - 3*a1*a3*b1*c1*x1*y2 - 2*a2*a3*b1*c1*x1*y2 - 3*a1*a2*a3*b1*c1*x1*y2 + a2*a3*b2*c1*x1*y2 + a1*a2*a3*b2*c1*x1*y2 - a3*b1*b2*c1*x1*y2 - a1*a3*b1*b2*c1*x1*y2 - 3*a2*a3*b1*b2*c1*x1*y2 - 2*a1*a2*a3*b1*b2*c1*x1*y2 - a1*b1*b3*c1*x1*y2 - a1*a2*b1*b3*c1*x1*y2 + a2*b2*b3*c1*x1*y2 + a1*a2*b2*b3*c1*x1*y2 - a1*b1*b2*b3*c1*x1*y2 - 3*a2*b1*b2*b3*c1*x1*y2 - 2*a1*a2*b1*b2*b3*c1*x1*y2 + (a3*x1^2*y2)/2 + (a1*a3*x1^2*y2)/2 + (a3*b1*x1^2*y2)/2 + (a1*a3*b1*x1^2*y2)/2 + (a2*a3*b1*x1^2*y2)/2 + (a1*a2*a3*b1*x1^2*y2)/2 + (a3*b2*x1^2*y2)/2 + (a1*a3*b2*x1^2*y2)/2 + (a2*a3*b2*x1^2*y2)/2 + (a1*a2*a3*b2*x1^2*y2)/2 + (a3*b1*b2*x1^2*y2)/2 + (a1*a3*b1*b2*x1^2*y2)/2 + (a2*a3*b1*b2*x1^2*y2)/2 + (a1*b3*x1^2*y2)/2 + (b1*b3*x1^2*y2)/2 + (a2*b1*b3*x1^2*y2)/2 + (a3*b1*b3*x1^2*y2)/2 + (a1*a3*x2*y2)/2 + a1*a2*a3*x2*y2 + (5*a3*b1*x2*y2)/2 + 2*a1*a3*b1*x2*y2 + a2*a3*b1*x2*y2 + 2*a3*b1*b2*x2*y2 + (3*b1*b3*x2*y2)/2 + a2*b1*b3*x2*y2 + (a1*b2*b3*x2*y2)/2 + a1*a2*b2*b3*x2*y2 + (3*b1*b2*b3*x2*y2)/2 + (5*a1*b1*b2*b3*x2*y2)/2 + (5*a2*b1*b2*b3*x2*y2)/2 + a1*a2*b1*b2*b3*x2*y2 + a3*c1*x2*y2 + a1*a3*c1*x2*y2 + a2*a3*c1*x2*y2 - 3*a3*b1*c1*x2*y2 - 2*a1*a3*b1*c1*x2*y2 - 2*a2*a3*b1*c1*x2*y2 + a3*b2*c1*x2*y2 - 2*a3*b1*b2*c1*x2*y2 - b1*b3*c1*x2*y2 + a1*b2*b3*c1*x2*y2 + a2*b2*b3*c1*x2*y2 - b1*b2*b3*c1*x2*y2 - 3*a1*b1*b2*b3*c1*x2*y2 - 3*a2*b1*b2*b3*c1*x2*y2 + a3*x1*x2*y2 + a1*a3*b1*x1*x2*y2 + a2*a3*b1*x1*x2*y2 + a1*a3*b2*x1*x2*y2 + a2*a3*b2*x1*x2*y2 + a3*b1*b2*x1*x2*y2 + b3*x1*x2*y2 + a1*b3*x1*x2*y2 + a2*b3*x1*x2*y2 + a3*b3*x1*x2*y2 + b1*b3*x1*x2*y2 + (a1*a3*x2^2*y2)/2 + (a1*a2*a3*x2^2*y2)/2 + (a3*b1*x2^2*y2)/2 + (a1*a3*b1*x2^2*y2)/2 + (a3*b1*b2*x2^2*y2)/2 + (a2*b1*b3*x2^2*y2)/2 + (a1*b2*b3*x2^2*y2)/2 + (a1*a2*b2*b3*x2^2*y2)/2 + (a1*b1*b2*b3*x2^2*y2)/2 + (a2*b1*b2*b3*x2^2*y2)/2 + (a1*a2*b1*b2*b3*x2^2*y2)/2 + a3*b1*x3*y2 + a2*a3*b1*x3*y2 + a3*c1*x3*y2 + a2*a3*c1*x3*y2 - 2*a3*b1*c1*x3*y2 - 2*a2*a3*b1*c1*x3*y2 + x1*x3*y2 + a1*x1*x3*y2 + a2*x1*x3*y2 + a1*a2*x1*x3*y2 + a3*x1*x3*y2 + a1*a3*x1*x3*y2 + a3*b1*x1*x3*y2 + a1*a3*b2*x1*x3*y2 + a2*a3*b2*x1*x3*y2 + a3*b1*b2*x1*x3*y2 + b3*x1*x3*y2 + a1*b3*x1*x3*y2 + a2*b3*x1*x3*y2 + a1*a2*b3*x1*x3*y2 + a3*b3*x1*x3*y2 + a2*a3*b3*x1*x3*y2 + a3*y1*y2 + (3*a1*a3*y1*y2)/2 + a2*a3*y1*y2 + (3*a1*a2*a3*y1*y2)/2 + (7*a3*b1*y1*y2)/2 + (5*a2*a3*b1*y1*y2)/2 + 3*a1*a2*a3*b1*y1*y2 + a3*b2*y1*y2 + (a1*a3*b2*y1*y2)/2 + a1*a2*a3*b2*y1*y2 + a3*b1*b2*y1*y2 + 2*a1*a3*b1*b2*y1*y2 + 2*a2*a3*b1*b2*y1*y2 + a1*a2*a3*b1*b2*y1*y2 + (b3*y1*y2)/2 + (3*a1*b3*y1*y2)/2 + a2*b3*y1*y2 + a1*a2*b3*y1*y2 + a3*b3*y1*y2 + a1*a3*b3*y1*y2 + 3*b1*b3*y1*y2 + (3*a1*b1*b3*y1*y2)/2 + (5*a2*b1*b3*y1*y2)/2 + (5*a1*a2*b1*b3*y1*y2)/2 + (a3*b1*b3*y1*y2)/2 + a1*a3*b1*b3*y1*y2 + 2*b2*b3*y1*y2 + (a1*b2*b3*y1*y2)/2 + 2*a2*b2*b3*y1*y2 + (3*a1*a2*b2*b3*y1*y2)/2 + (5*b1*b2*b3*y1*y2)/2 + 2*a1*b1*b2*b3*y1*y2 + 2*a2*b1*b2*b3*y1*y2 + 2*a1*a2*b1*b2*b3*y1*y2 + a3*c1*y1*y2 + a2*a3*c1*y1*y2 + a1*a2*a3*c1*y1*y2 - 3*a3*b1*c1*y1*y2 - 2*a2*a3*b1*c1*y1*y2 - 3*a1*a2*a3*b1*c1*y1*y2 + a1*a2*a3*b2*c1*y1*y2 - a1*a3*b1*b2*c1*y1*y2 - a2*a3*b1*b2*c1*y1*y2 - 2*a1*a2*a3*b1*b2*c1*y1*y2 - b1*b3*c1*y1*y2 - a1*b1*b3*c1*y1*y2 - a2*b1*b3*c1*y1*y2 - a1*a2*b1*b3*c1*y1*y2 + b2*b3*c1*y1*y2 + a1*b2*b3*c1*y1*y2 + a2*b2*b3*c1*y1*y2 + a1*a2*b2*b3*c1*y1*y2 - 2*b1*b2*b3*c1*y1*y2 - 2*a1*b1*b2*b3*c1*y1*y2 - 2*a2*b1*b2*b3*c1*y1*y2 - 2*a1*a2*b1*b2*b3*c1*y1*y2 + a2*a3*x1*y1*y2 + a1*a2*a3*x1*y1*y2 + a1*a3*b1*x1*y1*y2 + a2*a3*b2*x1*y1*y2 + a3*b1*b2*x1*y1*y2 + b3*x1*y1*y2 + a1*b1*b3*x1*y1*y2 + a2*b1*b3*x1*y1*y2 + a1*a2*b1*b3*x1*y1*y2 + a3*b1*b3*x1*y1*y2 + a2*b2*b3*x1*y1*y2 + a1*a2*b2*b3*x1*y1*y2 + a1*b1*b2*b3*x1*y1*y2 + a2*b1*b2*b3*x1*y1*y2 + a3*x2*y1*y2 + a1*a3*x2*y1*y2 + a2*a3*x2*y1*y2 + a3*b1*x2*y1*y2 + a1*a3*b1*x2*y1*y2 + a2*a3*b1*x2*y1*y2 + a3*b2*x2*y1*y2 + a1*a3*b2*x2*y1*y2 + a2*a3*b2*x2*y1*y2 + a3*b1*b2*x2*y1*y2 + a1*b3*x2*y1*y2 + a2*b3*x2*y1*y2 + a3*b3*x2*y1*y2 + a1*b2*b3*x2*y1*y2 + a2*b2*b3*x2*y1*y2 + b1*b2*b3*x2*y1*y2 + a1*b1*b2*b3*x2*y1*y2 + a2*b1*b2*b3*x2*y1*y2 + a1*x3*y1*y2 + a1*a2*x3*y1*y2 + a1*a3*x3*y1*y2 + a3*b1*x3*y1*y2 + a3*b2*x3*y1*y2 + a1*a3*b2*x3*y1*y2 + a2*a3*b2*x3*y1*y2 + a3*b1*b2*x3*y1*y2 + a1*b3*x3*y1*y2 + a1*a2*b3*x3*y1*y2 + a3*b3*x3*y1*y2 + a2*a3*b3*x3*y1*y2 + (a3*y1^2*y2)/2 + (a1*a3*y1^2*y2)/2 + (a2*a3*y1^2*y2)/2 + (a2*a3*b1*y1^2*y2)/2 + (a1*a2*a3*b1*y1^2*y2)/2 + (a1*a3*b2*y1^2*y2)/2 + (a1*a2*a3*b2*y1^2*y2)/2 + (a1*a3*b1*b2*y1^2*y2)/2 + (a2*a3*b1*b2*y1^2*y2)/2 + (b3*y1^2*y2)/2 + (a1*b3*y1^2*y2)/2 + (b1*b3*y1^2*y2)/2 + (a3*b1*b3*y1^2*y2)/2 + (b2*b3*y1^2*y2)/2 + (a2*b2*b3*y1^2*y2)/2 + (b1*b2*b3*y1^2*y2)/2 + (a1*a3*y2^2)/2 + (a1*a2*a3*y2^2)/2 + (b1*b3*y2^2)/2 + (a1*b1*b3*y2^2)/2 + (a2*b1*b3*y2^2)/2 + (a1*a2*b1*b3*y2^2)/2 + a1*b2*b3*y2^2 + a1*a2*b2*b3*y2^2 + (b1*b2*b3*y2^2)/2 + (a1*b1*b2*b3*y2^2)/2 + (a2*b1*b2*b3*y2^2)/2 + (a1*a2*b1*b2*b3*y2^2)/2 + (a3*x1*y2^2)/2 + (a1*a3*x1*y2^2)/2 + (a2*a3*x1*y2^2)/2 + (a1*a2*a3*x1*y2^2)/2 + (a3*b1*x1*y2^2)/2 + (a1*a3*b1*x1*y2^2)/2 + (a1*a2*a3*b1*x1*y2^2)/2 + (a2*a3*b2*x1*y2^2)/2 + (a1*a2*a3*b2*x1*y2^2)/2 + (a3*b1*b2*x1*y2^2)/2 + (a1*a3*b1*b2*x1*y2^2)/2 + (a2*a3*b1*b2*x1*y2^2)/2 + (a1*b1*b3*x1*y2^2)/2 + (a1*a2*b1*b3*x1*y2^2)/2 + (a2*b2*b3*x1*y2^2)/2 + (a1*a2*b2*b3*x1*y2^2)/2 + (a1*b1*b2*b3*x1*y2^2)/2 + (a2*b1*b2*b3*x1*y2^2)/2 + (a1*a2*a3*x2*y2^2)/2 + (a1*a3*b1*x2*y2^2)/2 + (a3*b1*b2*x2*y2^2)/2 + (b1*b3*x2*y2^2)/2 + (a2*b1*b3*x2*y2^2)/2 + (a1*a2*b2*b3*x2*y2^2)/2 + (b1*b2*b3*x2*y2^2)/2 + (a1*a2*b1*b2*b3*x2*y2^2)/2 + (a3*y1*y2^2)/2 + (a2*a3*y1*y2^2)/2 + (a1*a2*a3*y1*y2^2)/2 + (a3*b1*y1*y2^2)/2 + (a1*a2*a3*b1*y1*y2^2)/2 + (a1*a2*a3*b2*y1*y2^2)/2 + (a1*a3*b1*b2*y1*y2^2)/2 + (a2*a3*b1*b2*y1*y2^2)/2 + (b1*b3*y1*y2^2)/2 + (a1*b1*b3*y1*y2^2)/2 + (a2*b1*b3*y1*y2^2)/2 + (a1*a2*b1*b3*y1*y2^2)/2 + (b2*b3*y1*y2^2)/2 + (a1*b2*b3*y1*y2^2)/2 + (a2*b2*b3*y1*y2^2)/2 + (a1*a2*b2*b3*y1*y2^2)/2 + (a1*a3*y2^3)/2 + (a1*a2*a3*y2^3)/2 + (a1*b2*b3*y2^3)/2 + (a1*a2*b2*b3*y2^3)/2 + (b1*b2*b3*y2^3)/2 + (a1*b1*b2*b3*y2^3)/2 + (a2*b1*b2*b3*y2^3)/2 + (a1*a2*b1*b2*b3*y2^3)/2 + (a2*x1*y3)/2 + (a1*a2*x1*y3)/2 + a1*a2*a3*x1*y3 + (a2*b1*x1*y3)/2 + a1*a2*b1*x1*y3 + (3*a2*a3*b1*x1*y3)/2 + a1*a2*a3*b1*x1*y3 + (3*b2*x1*y3)/2 + a1*b2*x1*y3 + a2*b2*x1*y3 + (3*a3*b2*x1*y3)/2 + (3*a1*a3*b2*x1*y3)/2 + a1*a2*a3*b2*x1*y3 + (3*b1*b2*x1*y3)/2 + (3*a2*b1*b2*x1*y3)/2 + (3*a3*b1*b2*x1*y3)/2 + (3*a2*a3*b1*b2*x1*y3)/2 + a1*a2*a3*b1*b2*x1*y3 + (a2*b3*x1*y3)/2 + (a1*a2*b3*x1*y3)/2 + a2*a3*b3*x1*y3 + a1*a2*a3*b3*x1*y3 + (a2*b1*b3*x1*y3)/2 + a1*a2*b1*b3*x1*y3 + (a2*a3*b1*b3*x1*y3)/2 + a1*a2*a3*b1*b3*x1*y3 + (3*b2*b3*x1*y3)/2 + a1*b2*b3*x1*y3 + a2*b2*b3*x1*y3 + (3*a1*a2*b2*b3*x1*y3)/2 + (3*a3*b2*b3*x1*y3)/2 + (a1*a3*b2*b3*x1*y3)/2 + a2*a3*b2*b3*x1*y3 + (3*a1*a2*b1*b2*b3*x1*y3)/2 + (3*a1*a3*b1*b2*b3*x1*y3)/2 + (a2*x1^2*y3)/2 + (a1*a2*x1^2*y3)/2 + (a2*b1*x1^2*y3)/2 + (a2*a3*b1*x1^2*y3)/2 + (b2*x1^2*y3)/2 + (a3*b2*x1^2*y3)/2 + (a1*a3*b2*x1^2*y3)/2 + (b1*b2*x1^2*y3)/2 + (a2*b1*b2*x1^2*y3)/2 + (a3*b1*b2*x1^2*y3)/2 + (a2*a3*b1*b2*x1^2*y3)/2 + (a2*b3*x1^2*y3)/2 + (a1*a2*b3*x1^2*y3)/2 + (a2*b1*b3*x1^2*y3)/2 + (a2*a3*b1*b3*x1^2*y3)/2 + (b2*b3*x1^2*y3)/2 + (a1*a2*b2*b3*x1^2*y3)/2 + (a3*b2*b3*x1^2*y3)/2 + (a1*a3*b2*b3*x1^2*y3)/2 + (a1*a2*b1*b2*b3*x1^2*y3)/2 + (a1*a3*b1*b2*b3*x1^2*y3)/2 + b1*x2*y3 + a3*b1*x2*y3 + a2*a3*b1*x2*y3 + b1*b2*x2*y3 + a3*b1*b2*x2*y3 + a2*b1*b3*x2*y3 + b1*b2*b3*x2*y3 + a3*b1*b2*b3*x2*y3 + c1*x2*y3 + a3*c1*x2*y3 + a2*a3*c1*x2*y3 - 2*b1*c1*x2*y3 - 2*a3*b1*c1*x2*y3 - 2*a2*a3*b1*c1*x2*y3 + b2*c1*x2*y3 + a3*b2*c1*x2*y3 - 2*b1*b2*c1*x2*y3 - 2*a3*b1*b2*c1*x2*y3 + a2*b3*c1*x2*y3 - 2*a2*b1*b3*c1*x2*y3 + b2*b3*c1*x2*y3 + a3*b2*b3*c1*x2*y3 - 2*b1*b2*b3*c1*x2*y3 - 2*a3*b1*b2*b3*c1*x2*y3 + a1*x1*x2*y3 + a2*x1*x2*y3 + a1*a3*x1*x2*y3 + a1*b2*x1*x2*y3 + a2*b2*x1*x2*y3 + a1*a3*b2*x1*x2*y3 + a2*a3*b2*x1*x2*y3 + b3*x1*x2*y3 + a3*b3*x1*x2*y3 + a2*a3*b3*x1*x2*y3 + b1*b3*x1*x2*y3 + a3*b1*b3*x1*x2*y3 + b2*b3*x1*x2*y3 + a3*b2*b3*x1*x2*y3 + b1*b2*b3*x1*x2*y3 + a3*b1*b2*b3*x1*x2*y3 + (a1*a2*y1*y3)/2 + a2*a3*y1*y3 + a1*a2*a3*y1*y3 + (3*a2*b1*y1*y3)/2 + a1*a2*b1*y1*y3 + (a2*a3*b1*y1*y3)/2 + a1*a2*a3*b1*y1*y3 + (3*a2*b2*y1*y3)/2 + a1*a2*b2*y1*y3 + (a3*b2*y1*y3)/2 + (a1*a3*b2*y1*y3)/2 + a2*a3*b2*y1*y3 + a1*a2*a3*b2*y1*y3 + (a2*a3*b1*b2*y1*y3)/2 + a1*a2*a3*b1*b2*y1*y3 + (a1*a2*b3*y1*y3)/2 + a1*a2*a3*b3*y1*y3 + (3*a2*b1*b3*y1*y3)/2 + a1*a2*b1*b3*y1*y3 + (3*a2*a3*b1*b3*y1*y3)/2 + a1*a2*a3*b1*b3*y1*y3 + (b2*b3*y1*y3)/2 + a1*b2*b3*y1*y3 + (a2*b2*b3*y1*y3)/2 + (3*a1*a2*b2*b3*y1*y3)/2 + a3*b2*b3*y1*y3 + (a1*a3*b2*b3*y1*y3)/2 + a2*a3*b2*b3*y1*y3 + (3*a2*b1*b2*b3*y1*y3)/2 + (3*a1*a2*b1*b2*b3*y1*y3)/2 + (3*a3*b1*b2*b3*y1*y3)/2 + (3*a1*a3*b1*b2*b3*y1*y3)/2 + a2*x1*y1*y3 + a2*b1*x1*y1*y3 + a2*a3*b1*x1*y1*y3 + a1*b2*x1*y1*y3 + a1*a2*b2*x1*y1*y3 + a1*a3*b2*x1*y1*y3 + b1*b2*x1*y1*y3 + a2*b1*b2*x1*y1*y3 + a3*b1*b2*x1*y1*y3 + a2*a3*b1*b2*x1*y1*y3 + a2*b3*x1*y1*y3 + a2*b1*b3*x1*y1*y3 + a2*a3*b1*b3*x1*y1*y3 + b2*b3*x1*y1*y3 + a3*b2*b3*x1*y1*y3 + a1*a2*b1*b2*b3*x1*y1*y3 + a1*a3*b1*b2*b3*x1*y1*y3 + x2*y1*y3 + a1*x2*y1*y3 + a2*x2*y1*y3 + a3*x2*y1*y3 + a1*a3*x2*y1*y3 + b2*x2*y1*y3 + a1*b2*x2*y1*y3 + a2*b2*x2*y1*y3 + a3*b2*x2*y1*y3 + a1*a3*b2*x2*y1*y3 + a2*a3*b2*x2*y1*y3 + b3*x2*y1*y3 + a3*b3*x2*y1*y3 + a2*a3*b3*x2*y1*y3 + b1*b3*x2*y1*y3 + a3*b1*b3*x2*y1*y3 + b2*b3*x2*y1*y3 + a3*b2*b3*x2*y1*y3 + b1*b2*b3*x2*y1*y3 + a3*b1*b2*b3*x2*y1*y3 + (a1*a2*y1^2*y3)/2 + (a2*b1*y1^2*y3)/2 + (a2*a3*b1*y1^2*y3)/2 + (a2*b2*y1^2*y3)/2 + (a3*b2*y1^2*y3)/2 + (a1*a3*b2*y1^2*y3)/2 + (a2*a3*b1*b2*y1^2*y3)/2 + (a1*a2*b3*y1^2*y3)/2 + (a2*b1*b3*y1^2*y3)/2 + (a2*a3*b1*b3*y1^2*y3)/2 + (b2*b3*y1^2*y3)/2 + (a2*b2*b3*y1^2*y3)/2 + (a1*a2*b2*b3*y1^2*y3)/2 + (a1*a3*b2*b3*y1^2*y3)/2 + (a2*b1*b2*b3*y1^2*y3)/2 + (a1*a2*b1*b2*b3*y1^2*y3)/2 + (a3*b1*b2*b3*y1^2*y3)/2 + (a1*a3*b1*b2*b3*y1^2*y3)/2 + b1*y2*y3 + a2*a3*b1*y2*y3 + b1*b2*y2*y3 + a3*b1*b2*y2*y3 + b1*b3*y2*y3 + a2*b1*b3*y2*y3 + b1*b2*b3*y2*y3 + a3*b1*b2*b3*y2*y3 + c1*y2*y3 + a2*a3*c1*y2*y3 - 2*b1*c1*y2*y3 - 2*a2*a3*b1*c1*y2*y3 + b2*c1*y2*y3 + a3*b2*c1*y2*y3 - 2*b1*b2*c1*y2*y3 - 2*a3*b1*b2*c1*y2*y3 + b3*c1*y2*y3 + a2*b3*c1*y2*y3 - 2*b1*b3*c1*y2*y3 - 2*a2*b1*b3*c1*y2*y3 + b2*b3*c1*y2*y3 + a3*b2*b3*c1*y2*y3 - 2*b1*b2*b3*c1*y2*y3 - 2*a3*b1*b2*b3*c1*y2*y3 + a1*x1*y2*y3 + a2*x1*y2*y3 + a3*x1*y2*y3 + a1*a3*x1*y2*y3 + a1*b2*x1*y2*y3 + a2*b2*x1*y2*y3 + a1*a3*b2*x1*y2*y3 + a2*a3*b2*x1*y2*y3 + b3*x1*y2*y3 + a2*a3*b3*x1*y2*y3 + b1*b3*x1*y2*y3 + a3*b1*b3*x1*y2*y3 + b2*b3*x1*y2*y3 + a3*b2*b3*x1*y2*y3 + b1*b2*b3*x1*y2*y3 + a3*b1*b2*b3*x1*y2*y3 + y1*y2*y3 + a1*y1*y2*y3 + a2*y1*y2*y3 + a1*a3*y1*y2*y3 + b2*y1*y2*y3 + a1*b2*y1*y2*y3 + a2*b2*y1*y2*y3 + a3*b2*y1*y2*y3 + a1*a3*b2*y1*y2*y3 + a2*a3*b2*y1*y2*y3 + b3*y1*y2*y3 + a2*a3*b3*y1*y2*y3 + b1*b3*y1*y2*y3 + a3*b1*b3*y1*y2*y3 + b2*b3*y1*y2*y3 + a3*b2*b3*y1*y2*y3 + b1*b2*b3*y1*y2*y3 + a3*b1*b2*b3*y1*y2*y3 + (3*a2*a3*x1*z1)/2 + 2*a2*a3*b1*x1*z1 + (a3*b2*x1*z1)/2 + 2*a1*a3*b2*x1*z1 + 2*a2*a3*b2*x1*z1 + a2*b3*x1*z1 + (3*a2*b1*b3*x1*z1)/2 + (3*a1*b2*b3*x1*z1)/2 + (3*a2*b2*b3*x1*z1)/2 + (a2*a3*x1^2*z1)/2 + (a2*a3*b1*x1^2*z1)/2 + (a1*a3*b2*x1^2*z1)/2 + (a2*a3*b2*x1^2*z1)/2 + (a3*x2*z1)/2 + 2*a1*a3*x2*z1 + (3*a2*a3*x2*z1)/2 + (a1*a2*a3*x2*z1)/2 + (a3*b1*x2*z1)/2 + 3*a1*a3*b1*x2*z1 + (7*a2*a3*b1*x2*z1)/2 + 3*a1*a2*a3*b1*x2*z1 + (a3*b2*x2*z1)/2 + (a1*a3*b2*x2*z1)/2 + 2*a2*a3*b2*x2*z1 + 2*a1*a2*a3*b2*x2*z1 + (a3*b1*b2*x2*z1)/2 + 3*a1*a3*b1*b2*x2*z1 + 4*a2*a3*b1*b2*x2*z1 + a1*a2*a3*b1*b2*x2*z1 + a2*b3*x2*z1 + (a1*b1*b3*x2*z1)/2 + a2*b1*b3*x2*z1 + 3*a1*a2*b1*b3*x2*z1 + a1*b2*b3*x2*z1 + (3*a2*b2*b3*x2*z1)/2 + 2*a1*a2*b2*b3*x2*z1 + (3*a1*b1*b2*b3*x2*z1)/2 + (3*a2*b1*b2*b3*x2*z1)/2 + a1*a2*b1*b2*b3*x2*z1 + a1*a3*c1*x2*z1 + a2*a3*c1*x2*z1 - 3*a1*a3*b1*c1*x2*z1 - 3*a2*a3*b1*c1*x2*z1 - a1*a2*a3*b1*c1*x2*z1 + a1*a3*b2*c1*x2*z1 + a2*a3*b2*c1*x2*z1 + a1*a2*a3*b2*c1*x2*z1 - 3*a1*a3*b1*b2*c1*x2*z1 - 3*a2*a3*b1*b2*c1*x2*z1 - 2*a1*a2*a3*b1*b2*c1*x2*z1 - a1*a2*b1*b3*c1*x2*z1 + a1*a2*b2*b3*c1*x2*z1 - 2*a1*a2*b1*b2*b3*c1*x2*z1 + a3*x1*x2*z1 + a2*a3*x1*x2*z1 + a3*b1*x1*x2*z1 + a1*a3*b1*x1*x2*z1 + a2*a3*b2*x1*x2*z1 + a3*b1*b2*x1*x2*z1 + a1*b3*x1*x2*z1 + a2*b1*b3*x1*x2*z1 + a1*a2*b1*b3*x1*x2*z1 + a1*b2*b3*x1*x2*z1 + a1*a2*b2*b3*x1*x2*z1 + a1*b1*b2*b3*x1*x2*z1 + a2*b1*b2*b3*x1*x2*z1 + (a1*a3*x2^2*z1)/2 + (a2*a3*x2^2*z1)/2 + (a1*a3*b1*x2^2*z1)/2 + (a2*a3*b1*x2^2*z1)/2 + (a1*a2*a3*b1*x2^2*z1)/2 + (a1*a3*b2*x2^2*z1)/2 + (a2*a3*b2*x2^2*z1)/2 + (a1*a2*a3*b2*x2^2*z1)/2 + (a1*a3*b1*b2*x2^2*z1)/2 + (a2*a3*b1*b2*x2^2*z1)/2 + (a1*a2*b1*b3*x2^2*z1)/2 + (a1*a2*b2*b3*x2^2*z1)/2 + (a1*a2*x3*z1)/2 + (a2*a3*x3*z1)/2 + a2*b1*x3*z1 + (3*a2*a3*b1*x3*z1)/2 + a1*a2*a3*b1*x3*z1 + a1*b2*x3*z1 + a2*b2*x3*z1 + (a1*a2*b2*x3*z1)/2 + a1*a3*b2*x3*z1 + (3*a2*a3*b2*x3*z1)/2 + a1*b1*b2*x3*z1 + a1*a2*b1*b2*x3*z1 + a1*a3*b1*b2*x3*z1 + (a2*a3*b1*b2*x3*z1)/2 + a1*a2*a3*b1*b2*x3*z1 + (a1*a2*b3*x3*z1)/2 + (a2*a3*b3*x3*z1)/2 + (a2*a3*b1*b3*x3*z1)/2 + a1*a2*a3*b1*b3*x3*z1 + (a1*a2*b2*b3*x3*z1)/2 + (a1*a3*b2*b3*x3*z1)/2 + (a1*a2*b1*b2*b3*x3*z1)/2 + (a1*a3*b1*b2*b3*x3*z1)/2 + a1*a2*x1*x3*z1 + a2*a3*x1*x3*z1 + a1*a2*b2*x1*x3*z1 + a3*b2*x1*x3*z1 + a2*a3*b2*x1*x3*z1 + a1*a2*b3*x1*x3*z1 + a2*a3*b3*x1*x3*z1 + a1*a2*b2*b3*x1*x3*z1 + a1*a3*b2*b3*x1*x3*z1 + a1*a2*x2*x3*z1 + a3*x2*x3*z1 + a1*a3*x2*x3*z1 + a3*b1*x2*x3*z1 + a3*b2*x2*x3*z1 + a1*a3*b2*x2*x3*z1 + a2*a3*b2*x2*x3*z1 + a3*b1*b2*x2*x3*z1 + a1*a2*b3*x2*x3*z1 + a2*a3*b3*x2*x3*z1 + 2*a2*a3*y1*z1 + a3*b2*y1*z1 + a2*b3*y1*z1 + (a2*b1*b3*y1*z1)/2 + (3*b2*b3*y1*z1)/2 + (a1*b2*b3*y1*z1)/2 + (a2*b2*b3*y1*z1)/2 + a2*a3*x1*y1*z1 + a2*a3*b1*x1*y1*z1 + a3*b2*x1*y1*z1 + a1*a3*b2*x1*y1*z1 + a2*a3*b2*x1*y1*z1 + a2*b1*b3*x1*y1*z1 + a1*b2*b3*x1*y1*z1 + a2*b2*b3*x1*y1*z1 + a3*x2*y1*z1 + a2*a3*x2*y1*z1 + a1*a3*b1*x2*y1*z1 + a1*a2*a3*b1*x2*y1*z1 + a3*b2*x2*y1*z1 + a2*a3*b2*x2*y1*z1 + a1*a2*a3*b2*x2*y1*z1 + a1*a3*b1*b2*x2*y1*z1 + a2*a3*b1*b2*x2*y1*z1 + b3*x2*y1*z1 + a1*b3*x2*y1*z1 + b1*b3*x2*y1*z1 + a1*b1*b3*x2*y1*z1 + a2*b2*b3*x2*y1*z1 + a1*b1*b2*b3*x2*y1*z1 + a2*b1*b2*b3*x2*y1*z1 + a2*x3*y1*z1 + a2*a3*x3*y1*z1 + a2*a3*b2*x3*y1*z1 + a2*b3*x3*y1*z1 + a2*a3*b3*x3*y1*z1 + (a2*a3*y1^2*z1)/2 + (a3*b2*y1^2*z1)/2 + (a2*b1*b3*y1^2*z1)/2 + (b2*b3*y1^2*z1)/2 + (a1*b2*b3*y1^2*z1)/2 + (a2*b2*b3*y1^2*z1)/2 + (3*a1*a3*y2*z1)/2 + 2*a2*a3*y2*z1 + (a1*a2*a3*y2*z1)/2 + (5*a3*b1*y2*z1)/2 + a1*a3*b1*y2*z1 + (3*a2*a3*b1*y2*z1)/2 + 3*a1*a2*a3*b1*y2*z1 + (a3*b2*y2*z1)/2 + (3*a1*a3*b2*y2*z1)/2 + 2*a1*a2*a3*b2*y2*z1 + 2*a3*b1*b2*y2*z1 + 3*a1*a3*b1*b2*y2*z1 + 3*a2*a3*b1*b2*y2*z1 + a1*a2*a3*b1*b2*y2*z1 + (3*b3*y2*z1)/2 + (a1*b3*y2*z1)/2 + (3*a2*b3*y2*z1)/2 + (a3*b3*y2*z1)/2 + 2*b1*b3*y2*z1 + (3*a1*b1*b3*y2*z1)/2 + (3*a2*b1*b3*y2*z1)/2 + 2*a1*a2*b1*b3*y2*z1 + (a3*b1*b3*y2*z1)/2 + a1*a3*b1*b3*y2*z1 + (3*b2*b3*y2*z1)/2 + a1*b2*b3*y2*z1 + (a2*b2*b3*y2*z1)/2 + 2*a1*a2*b2*b3*y2*z1 + b1*b2*b3*y2*z1 + (5*a1*b1*b2*b3*y2*z1)/2 + (5*a2*b1*b2*b3*y2*z1)/2 + a1*a2*b1*b2*b3*y2*z1 + a1*a3*c1*y2*z1 + a2*a3*c1*y2*z1 - a3*b1*c1*y2*z1 - 2*a1*a3*b1*c1*y2*z1 - 2*a2*a3*b1*c1*y2*z1 - a1*a2*a3*b1*c1*y2*z1 + a3*b2*c1*y2*z1 + a1*a2*a3*b2*c1*y2*z1 - 2*a3*b1*b2*c1*y2*z1 - a1*a3*b1*b2*c1*y2*z1 - a2*a3*b1*b2*c1*y2*z1 - 2*a1*a2*a3*b1*b2*c1*y2*z1 - b1*b3*c1*y2*z1 - a1*b1*b3*c1*y2*z1 - a2*b1*b3*c1*y2*z1 - a1*a2*b1*b3*c1*y2*z1 + b2*b3*c1*y2*z1 + a1*b2*b3*c1*y2*z1 + a2*b2*b3*c1*y2*z1 + a1*a2*b2*b3*c1*y2*z1 - 2*b1*b2*b3*c1*y2*z1 - 2*a1*b1*b2*b3*c1*y2*z1 - 2*a2*b1*b2*b3*c1*y2*z1 - 2*a1*a2*b1*b2*b3*c1*y2*z1 + a3*x1*y2*z1 + a2*a3*x1*y2*z1 + a1*a3*b1*x1*y2*z1 + a2*a3*b2*x1*y2*z1 + a3*b1*b2*x1*y2*z1 + a2*b3*x1*y2*z1 + a3*b3*x1*y2*z1 + a1*b1*b3*x1*y2*z1 + a1*a2*b1*b3*x1*y2*z1 + a2*b2*b3*x1*y2*z1 + a1*a2*b2*b3*x1*y2*z1 + a1*b1*b2*b3*x1*y2*z1 + a2*b1*b2*b3*x1*y2*z1 + a3*x2*y2*z1 + a1*a3*x2*y2*z1 + a2*a3*x2*y2*z1 + a3*b1*x2*y2*z1 + a1*a3*b1*x2*y2*z1 + a2*a3*b1*x2*y2*z1 + a1*a3*b2*x2*y2*z1 + a2*a3*b2*x2*y2*z1 + a3*b1*b2*x2*y2*z1 + a1*b3*x2*y2*z1 + a2*b3*x2*y2*z1 + a3*b3*x2*y2*z1 + b1*b3*x2*y2*z1 + a1*b1*b3*x2*y2*z1 + a2*b1*b3*x2*y2*z1 + a1*b2*b3*x2*y2*z1 + a2*b2*b3*x2*y2*z1 + x3*y2*z1 + a1*x3*y2*z1 + a2*x3*y2*z1 + a1*a2*x3*y2*z1 + a1*a3*x3*y2*z1 + a3*b1*x3*y2*z1 + a3*b2*x3*y2*z1 + a1*a3*b2*x3*y2*z1 + a2*a3*b2*x3*y2*z1 + a3*b1*b2*x3*y2*z1 + b3*x3*y2*z1 + a1*b3*x3*y2*z1 + a2*b3*x3*y2*z1 + a1*a2*b3*x3*y2*z1 + a3*b3*x3*y2*z1 + a2*a3*b3*x3*y2*z1 + a3*y1*y2*z1 + a2*a3*y1*y2*z1 + a2*a3*b1*y1*y2*z1 + a1*a2*a3*b1*y1*y2*z1 + a1*a3*b2*y1*y2*z1 + a1*a2*a3*b2*y1*y2*z1 + a1*a3*b1*b2*y1*y2*z1 + a2*a3*b1*b2*y1*y2*z1 + a1*b3*y1*y2*z1 + a2*b3*y1*y2*z1 + a3*b3*y1*y2*z1 + a1*b1*b3*y1*y2*z1 + b2*b3*y1*y2*z1 + a2*b2*b3*y1*y2*z1 + a1*b1*b2*b3*y1*y2*z1 + a2*b1*b2*b3*y1*y2*z1 + (a1*a3*y2^2*z1)/2 + (a2*a3*y2^2*z1)/2 + (a3*b1*y2^2*z1)/2 + (a1*a2*a3*b1*y2^2*z1)/2 + (a3*b2*y2^2*z1)/2 + (a1*a2*a3*b2*y2^2*z1)/2 + (a1*a3*b1*b2*y2^2*z1)/2 + (a2*a3*b1*b2*y2^2*z1)/2 + (b1*b3*y2^2*z1)/2 + (a1*b1*b3*y2^2*z1)/2 + (a2*b1*b3*y2^2*z1)/2 + (a1*a2*b1*b3*y2^2*z1)/2 + (b2*b3*y2^2*z1)/2 + (a1*b2*b3*y2^2*z1)/2 + (a2*b2*b3*y2^2*z1)/2 + (a1*a2*b2*b3*y2^2*z1)/2 + (a1*a2*y3*z1)/2 + (a2*a3*y3*z1)/2 + (3*a2*b1*y3*z1)/2 + a1*a2*b1*y3*z1 + (a2*a3*b1*y3*z1)/2 + a1*a2*a3*b1*y3*z1 + (3*a1*b2*y3*z1)/2 + (3*a2*b2*y3*z1)/2 + (a1*a2*b2*y3*z1)/2 + (a2*a3*b2*y3*z1)/2 + (b1*b2*y3*z1)/2 + (a2*b1*b2*y3*z1)/2 + (a3*b1*b2*y3*z1)/2 + (a2*a3*b1*b2*y3*z1)/2 + a1*a2*a3*b1*b2*y3*z1 + (a1*a2*b3*y3*z1)/2 + (a2*a3*b3*y3*z1)/2 + (3*a2*b1*b3*y3*z1)/2 + a1*a2*b1*b3*y3*z1 + (3*a2*a3*b1*b3*y3*z1)/2 + a1*a2*a3*b1*b3*y3*z1 + (b2*b3*y3*z1)/2 + a1*b2*b3*y3*z1 + a2*b2*b3*y3*z1 + (a1*a2*b2*b3*y3*z1)/2 + (a3*b2*b3*y3*z1)/2 + (3*a1*a3*b2*b3*y3*z1)/2 + a2*a3*b2*b3*y3*z1 + (a1*a2*b1*b2*b3*y3*z1)/2 + (a1*a3*b1*b2*b3*y3*z1)/2 + a1*a2*x1*y3*z1 + a2*a3*x1*y3*z1 + a1*b2*x1*y3*z1 + a2*b2*x1*y3*z1 + a1*a2*b2*x1*y3*z1 + a2*a3*b2*x1*y3*z1 + a1*a2*b3*x1*y3*z1 + a2*a3*b3*x1*y3*z1 + a1*a2*b2*b3*x1*y3*z1 + a1*a3*b2*b3*x1*y3*z1 + a1*x2*y3*z1 + a2*x2*y3*z1 + a1*a3*x2*y3*z1 + a1*b2*x2*y3*z1 + a2*b2*x2*y3*z1 + a1*a3*b2*x2*y3*z1 + a2*a3*b2*x2*y3*z1 + a2*a3*b3*x2*y3*z1 + b1*b3*x2*y3*z1 + a3*b1*b3*x2*y3*z1 + b1*b2*b3*x2*y3*z1 + a3*b1*b2*b3*x2*y3*z1 + a2*a3*y1*y3*z1 + b2*y1*y3*z1 + a2*b2*y1*y3*z1 + a3*b2*y1*y3*z1 + a2*a3*b2*y1*y3*z1 + a2*a3*b3*y1*y3*z1 + a1*y2*y3*z1 + a2*y2*y3*z1 + a3*y2*y3*z1 + a1*a3*y2*y3*z1 + a1*b2*y2*y3*z1 + a2*b2*y2*y3*z1 + a1*a3*b2*y2*y3*z1 + a2*a3*b2*y2*y3*z1 + a3*b3*y2*y3*z1 + a2*a3*b3*y2*y3*z1 + b1*b3*y2*y3*z1 + a3*b1*b3*y2*y3*z1 + b1*b2*b3*y2*y3*z1 + a3*b1*b2*b3*y2*y3*z1 + (a2*a3*b1*x1*z1^2)/2 + (a3*b2*x1*z1^2)/2 + (a1*a3*b2*x1*z1^2)/2 + (a2*a3*b2*x1*z1^2)/2 + (a2*b1*b3*x1*z1^2)/2 + (a1*b2*b3*x1*z1^2)/2 + (a2*b2*b3*x1*z1^2)/2 + (a3*x2*z1^2)/2 + (a1*a3*x2*z1^2)/2 + (a1*a2*a3*x2*z1^2)/2 + (a3*b1*x2*z1^2)/2 + (a1*a3*b1*x2*z1^2)/2 + (a1*a2*a3*b1*x2*z1^2)/2 + (a3*b2*x2*z1^2)/2 + (a2*a3*b2*x2*z1^2)/2 + (a1*a2*a3*b2*x2*z1^2)/2 + (a3*b1*b2*x2*z1^2)/2 + (a1*a3*b1*b2*x2*z1^2)/2 + (a2*a3*b1*b2*x2*z1^2)/2 + (a1*b1*b3*x2*z1^2)/2 + (a1*a2*b1*b3*x2*z1^2)/2 + (a2*b2*b3*x2*z1^2)/2 + (a1*a2*b2*b3*x2*z1^2)/2 + (a1*b1*b2*b3*x2*z1^2)/2 + (a2*b1*b2*b3*x2*z1^2)/2 + (a1*a2*x3*z1^2)/2 + (a2*a3*x3*z1^2)/2 + (a2*a3*b1*x3*z1^2)/2 + (a1*a2*b2*x3*z1^2)/2 + (a2*a3*b2*x3*z1^2)/2 + (a2*a3*b1*b2*x3*z1^2)/2 + (a1*a2*b3*x3*z1^2)/2 + (a2*a3*b3*x3*z1^2)/2 + (a2*a3*b1*b3*x3*z1^2)/2 + (a1*a2*b2*b3*x3*z1^2)/2 + (a1*a3*b2*b3*x3*z1^2)/2 + (a1*a2*b1*b2*b3*x3*z1^2)/2 + (a1*a3*b1*b2*b3*x3*z1^2)/2 + (a2*a3*y1*z1^2)/2 + (a3*b2*y1*z1^2)/2 + (a2*a3*y2*z1^2)/2 + (a1*a2*a3*y2*z1^2)/2 + (a2*a3*b1*y2*z1^2)/2 + (a1*a2*a3*b1*y2*z1^2)/2 + (a1*a3*b2*y2*z1^2)/2 + (a1*a2*a3*b2*y2*z1^2)/2 + (a1*a3*b1*b2*y2*z1^2)/2 + (a2*a3*b1*b2*y2*z1^2)/2 + (b3*y2*z1^2)/2 + (a1*b3*y2*z1^2)/2 + (a2*b3*y2*z1^2)/2 + (a3*b3*y2*z1^2)/2 + (b1*b3*y2*z1^2)/2 + (a1*a2*b1*b3*y2*z1^2)/2 + (a3*b1*b3*y2*z1^2)/2 + (a1*b2*b3*y2*z1^2)/2 + (a1*a2*b2*b3*y2*z1^2)/2 + (a1*b1*b2*b3*y2*z1^2)/2 + (a2*b1*b2*b3*y2*z1^2)/2 + (a1*a2*y3*z1^2)/2 + (a2*a3*y3*z1^2)/2 + (a2*b1*y3*z1^2)/2 + (a2*a3*b1*y3*z1^2)/2 + (a1*b2*y3*z1^2)/2 + (a2*b2*y3*z1^2)/2 + (a1*a2*b2*y3*z1^2)/2 + (a2*a3*b2*y3*z1^2)/2 + (b1*b2*y3*z1^2)/2 + (a2*b1*b2*y3*z1^2)/2 + (a3*b1*b2*y3*z1^2)/2 + (a2*a3*b1*b2*y3*z1^2)/2 + (a1*a2*b3*y3*z1^2)/2 + (a2*a3*b3*y3*z1^2)/2 + (a2*b1*b3*y3*z1^2)/2 + (a2*a3*b1*b3*y3*z1^2)/2 + (b2*b3*y3*z1^2)/2 + (a1*a2*b2*b3*y3*z1^2)/2 + (a3*b2*b3*y3*z1^2)/2 + (a1*a3*b2*b3*y3*z1^2)/2 + (a1*a2*b1*b2*b3*y3*z1^2)/2 + (a1*a3*b1*b2*b3*y3*z1^2)/2 + a1*a2*a3*b1*z2 + (3*a1*a2*b1*b3*z2)/2 + (a1*a2*b2*b3*z2)/2 + 3*a1*a2*b1*b2*b3*z2 + a1*a2*a3*c1*z2 - 2*a1*a2*a3*b1*c1*z2 + a1*a2*b2*b3*c1*z2 - 3*a1*a2*b1*b2*b3*c1*z2 + (a3*x1*z2)/2 + (3*a2*a3*x1*z2)/2 + (a1*a2*a3*x1*z2)/2 + (a3*b1*x1*z2)/2 + (5*a1*a3*b1*x1*z2)/2 + (3*a2*a3*b1*x1*z2)/2 + 4*a1*a2*a3*b1*x1*z2 + (a3*b2*x1*z2)/2 + a1*a3*b2*x1*z2 + 2*a2*a3*b2*x1*z2 + 2*a1*a2*a3*b2*x1*z2 + (5*a3*b1*b2*x1*z2)/2 + (5*a1*a3*b1*b2*x1*z2)/2 + 4*a2*a3*b1*b2*x1*z2 + a1*a2*a3*b1*b2*x1*z2 + a1*b3*x1*z2 + a2*b3*x1*z2 + (3*a1*a2*b3*x1*z2)/2 + (3*a1*a3*b3*x1*z2)/2 + (3*a1*b1*b3*x1*z2)/2 + a2*b1*b3*x1*z2 + 2*a1*a2*b1*b3*x1*z2 + (3*a1*a3*b1*b3*x1*z2)/2 + a1*b2*b3*x1*z2 + (3*a2*b2*b3*x1*z2)/2 + (3*a1*a2*b2*b3*x1*z2)/2 + (5*a1*b1*b2*b3*x1*z2)/2 + (7*a2*b1*b2*b3*x1*z2)/2 + a1*a2*b1*b2*b3*x1*z2 + a1*a2*a3*c1*x1*z2 - a1*a3*b1*c1*x1*z2 - 3*a1*a2*a3*b1*c1*x1*z2 + a3*b2*c1*x1*z2 + a2*a3*b2*c1*x1*z2 + a1*a2*a3*b2*c1*x1*z2 - 3*a3*b1*b2*c1*x1*z2 - a1*a3*b1*b2*c1*x1*z2 - 3*a2*a3*b1*b2*c1*x1*z2 - 2*a1*a2*a3*b1*b2*c1*x1*z2 - a1*b1*b3*c1*x1*z2 - a1*a2*b1*b3*c1*x1*z2 + a2*b2*b3*c1*x1*z2 + a1*a2*b2*b3*c1*x1*z2 - a1*b1*b2*b3*c1*x1*z2 - 3*a2*b1*b2*b3*c1*x1*z2 - 2*a1*a2*b1*b2*b3*c1*x1*z2 + (a3*x1^2*z2)/2 + (a2*a3*x1^2*z2)/2 + (a3*b1*x1^2*z2)/2 + (a2*a3*b1*x1^2*z2)/2 + (a1*a2*a3*b1*x1^2*z2)/2 + (a2*a3*b2*x1^2*z2)/2 + (a1*a2*a3*b2*x1^2*z2)/2 + (a2*a3*b1*b2*x1^2*z2)/2 + (a1*a2*b3*x1^2*z2)/2 + (a1*a3*b3*x1^2*z2)/2 + (a1*a2*b1*b3*x1^2*z2)/2 + (a1*a3*b1*b3*x1^2*z2)/2 + (a1*a3*x2*z2)/2 + (5*a3*b1*x2*z2)/2 + 3*a1*a3*b1*x2*z2 + a2*a3*b1*x2*z2 + 3*a3*b1*b2*x2*z2 + (5*a1*b1*b3*x2*z2)/2 + (3*a2*b1*b3*x2*z2)/2 + (5*a1*a2*b1*b3*x2*z2)/2 + (a1*b2*b3*x2*z2)/2 + (a1*a2*b2*b3*x2*z2)/2 + 3*a1*b1*b2*b3*x2*z2 + 3*a2*b1*b2*b3*x2*z2 + 3*a1*a2*b1*b2*b3*x2*z2 + a3*c1*x2*z2 + a1*a3*c1*x2*z2 + a2*a3*c1*x2*z2 - 3*a3*b1*c1*x2*z2 - 2*a1*a3*b1*c1*x2*z2 - 2*a2*a3*b1*c1*x2*z2 + a3*b2*c1*x2*z2 - 2*a3*b1*b2*c1*x2*z2 - a1*b1*b3*c1*x2*z2 - a2*b1*b3*c1*x2*z2 - a1*a2*b1*b3*c1*x2*z2 + a1*b2*b3*c1*x2*z2 + a2*b2*b3*c1*x2*z2 + a1*a2*b2*b3*c1*x2*z2 - 2*a1*b1*b2*b3*c1*x2*z2 - 2*a2*b1*b2*b3*c1*x2*z2 - 2*a1*a2*b1*b2*b3*c1*x2*z2 + a3*x1*x2*z2 + a2*a3*x1*x2*z2 + a1*a2*a3*x1*x2*z2 + a1*a3*b1*x1*x2*z2 + a2*a3*b1*x1*x2*z2 + a1*a3*b2*x1*x2*z2 + a2*a3*b2*x1*x2*z2 + a1*b3*x1*x2*z2 + (a1*a3*x2^2*z2)/2 + (a3*b1*x2^2*z2)/2 + (a1*a3*b1*x2^2*z2)/2 + (a3*b1*b2*x2^2*z2)/2 + (a2*b1*b3*x2^2*z2)/2 + (a1*b2*b3*x2^2*z2)/2 + (a1*a2*b2*b3*x2^2*z2)/2 + (a1*b1*b2*b3*x2^2*z2)/2 + (a2*b1*b2*b3*x2^2*z2)/2 + (a1*a2*b1*b2*b3*x2^2*z2)/2 + a2*a3*b1*x3*z2 + a2*a3*c1*x3*z2 - 2*a2*a3*b1*c1*x3*z2 + a1*a2*x1*x3*z2 + a2*a3*x1*x3*z2 + a3*b2*x1*x3*z2 + a1*a3*b2*x1*x3*z2 + a2*a3*b2*x1*x3*z2 + a3*b1*b2*x1*x3*z2 + a1*a2*b3*x1*x3*z2 + a2*a3*b3*x1*x3*z2 + (3*a1*a3*y1*z2)/2 + 2*a2*a3*y1*z2 + (a1*a2*a3*y1*z2)/2 + a3*b1*y1*z2 + (a1*a3*b1*y1*z2)/2 + (5*a2*a3*b1*y1*z2)/2 + 4*a1*a2*a3*b1*y1*z2 + (3*a3*b2*y1*z2)/2 + a1*a3*b2*y1*z2 + 2*a1*a2*a3*b2*y1*z2 + 2*a3*b1*b2*y1*z2 + (5*a1*a3*b1*b2*y1*z2)/2 + 3*a2*a3*b1*b2*y1*z2 + a1*a2*a3*b1*b2*y1*z2 + b3*y1*z2 + a1*b3*y1*z2 + (a2*b3*y1*z2)/2 + (3*a1*a2*b3*y1*z2)/2 + (3*a3*b3*y1*z2)/2 + (3*a1*a3*b3*y1*z2)/2 + b1*b3*y1*z2 + a1*b1*b3*y1*z2 + 3*a1*a2*b1*b3*y1*z2 + (3*a3*b1*b3*y1*z2)/2 + (3*a1*a3*b1*b3*y1*z2)/2 + (3*b2*b3*y1*z2)/2 + a1*b2*b3*y1*z2 + (a2*b2*b3*y1*z2)/2 + (3*a1*a2*b2*b3*y1*z2)/2 + (b1*b2*b3*y1*z2)/2 + 2*a1*a2*b1*b2*b3*y1*z2 + a2*a3*c1*y1*z2 + a1*a2*a3*c1*y1*z2 - 2*a2*a3*b1*c1*y1*z2 - 3*a1*a2*a3*b1*c1*y1*z2 + a3*b2*c1*y1*z2 + a1*a2*a3*b2*c1*y1*z2 - 2*a3*b1*b2*c1*y1*z2 - a1*a3*b1*b2*c1*y1*z2 - a2*a3*b1*b2*c1*y1*z2 - 2*a1*a2*a3*b1*b2*c1*y1*z2 - a1*a2*b1*b3*c1*y1*z2 + a1*a2*b2*b3*c1*y1*z2 - 2*a1*a2*b1*b2*b3*c1*y1*z2 + a1*a3*x1*y1*z2 + a2*a3*x1*y1*z2 + a1*a2*a3*x1*y1*z2 + a3*b2*x1*y1*z2 + a2*a3*b2*x1*y1*z2 + a1*a3*b1*b2*x1*y1*z2 + b3*x1*y1*z2 + b1*b3*x1*y1*z2 + a1*b1*b3*x1*y1*z2 + a1*a3*b1*b3*x1*y1*z2 + a2*b2*b3*x1*y1*z2 + a1*a2*b2*b3*x1*y1*z2 + a1*b1*b2*b3*x1*y1*z2 + a2*b1*b2*b3*x1*y1*z2 + a3*x2*y1*z2 + a1*a3*x2*y1*z2 + a2*a3*x2*y1*z2 + a3*b1*x2*y1*z2 + a1*a3*b1*x2*y1*z2 + a2*a3*b1*x2*y1*z2 + a3*b2*x2*y1*z2 + a1*a3*b2*x2*y1*z2 + a2*a3*b2*x2*y1*z2 + b3*x2*y1*z2 + a1*b3*x2*y1*z2 + a1*b1*b3*x2*y1*z2 + a2*b1*b3*x2*y1*z2 + a1*b2*b3*x2*y1*z2 + a2*b2*b3*x2*y1*z2 + a2*x3*y1*z2 + a1*a2*x3*y1*z2 + a2*a3*x3*y1*z2 + a1*a3*b2*x3*y1*z2 + a2*a3*b2*x3*y1*z2 + a3*b1*b2*x3*y1*z2 + a2*b3*x3*y1*z2 + a1*a2*b3*x3*y1*z2 + a2*a3*b3*x3*y1*z2 + (a1*a3*y1^2*z2)/2 + (a2*a3*y1^2*z2)/2 + (a1*a3*b1*y1^2*z2)/2 + (a2*a3*b1*y1^2*z2)/2 + (a1*a2*a3*b1*y1^2*z2)/2 + (a1*a2*a3*b2*y1^2*z2)/2 + (a2*a3*b1*b2*y1^2*z2)/2 + (a2*b3*y1^2*z2)/2 + (a1*a2*b3*y1^2*z2)/2 + (a3*b3*y1^2*z2)/2 + (a1*a3*b3*y1^2*z2)/2 + (a1*a2*b1*b3*y1^2*z2)/2 + (a3*b1*b3*y1^2*z2)/2 + (a1*a3*b1*b3*y1^2*z2)/2 + (b2*b3*y1^2*z2)/2 + (a2*b2*b3*y1^2*z2)/2 + (b1*b2*b3*y1^2*z2)/2 + (5*a1*a2*b1*b3*y2*z2)/2 + (a1*b2*b3*y2*z2)/2 + (a1*a2*b2*b3*y2*z2)/2 + (5*b1*b2*b3*y2*z2)/2 + (5*a1*b1*b2*b3*y2*z2)/2 + (5*a2*b1*b2*b3*y2*z2)/2 + 3*a1*a2*b1*b2*b3*y2*z2 - a1*a2*b1*b3*c1*y2*z2 + b2*b3*c1*y2*z2 + a1*b2*b3*c1*y2*z2 + a2*b2*b3*c1*y2*z2 + a1*a2*b2*b3*c1*y2*z2 - 3*b1*b2*b3*c1*y2*z2 - 3*a1*b1*b2*b3*c1*y2*z2 - 3*a2*b1*b2*b3*c1*y2*z2 - 2*a1*a2*b1*b2*b3*c1*y2*z2 + a3*x1*y2*z2 + a2*a3*x1*y2*z2 + a3*b1*x1*y2*z2 + a1*a3*b1*x1*y2*z2 + a1*a2*a3*b1*x1*y2*z2 + a2*a3*b2*x1*y2*z2 + a1*a2*a3*b2*x1*y2*z2 + a1*a3*b1*b2*x1*y2*z2 + a2*a3*b1*b2*x1*y2*z2 + a2*b3*x1*y2*z2 + a3*b3*x1*y2*z2 + b1*b3*x1*y2*z2 + a1*b1*b3*x1*y2*z2 + a1*a2*b1*b3*x1*y2*z2 + a2*b2*b3*x1*y2*z2 + a1*a2*b2*b3*x1*y2*z2 + a1*b1*b2*b3*x1*y2*z2 + a2*b1*b2*b3*x1*y2*z2 + a1*a2*a3*x2*y2*z2 + a1*a3*b1*x2*y2*z2 + a3*b1*b2*x2*y2*z2 + a1*b1*b3*x2*y2*z2 + a1*a2*b2*b3*x2*y2*z2 + a1*b1*b2*b3*x2*y2*z2 + a2*b1*b2*b3*x2*y2*z2 + a1*a2*b1*b2*b3*x2*y2*z2 + a3*y1*y2*z2 + a2*a3*y1*y2*z2 + a1*a2*a3*y1*y2*z2 + a3*b1*y1*y2*z2 + a1*a2*a3*b1*y1*y2*z2 + a1*a2*a3*b2*y1*y2*z2 + a3*b1*b2*y1*y2*z2 + a1*a3*b1*b2*y1*y2*z2 + a2*a3*b1*b2*y1*y2*z2 + a2*b3*y1*y2*z2 + a3*b3*y1*y2*z2 + b1*b3*y1*y2*z2 + a1*a2*b1*b3*y1*y2*z2 + b2*b3*y1*y2*z2 + a1*b2*b3*y1*y2*z2 + a2*b2*b3*y1*y2*z2 + a1*a2*b2*b3*y1*y2*z2 + b1*b2*b3*y1*y2*z2 + a1*b1*b2*b3*y1*y2*z2 + a2*b1*b2*b3*y1*y2*z2 + (a1*b2*b3*y2^2*z2)/2 + (a1*a2*b2*b3*y2^2*z2)/2 + (b1*b2*b3*y2^2*z2)/2 + (a1*b1*b2*b3*y2^2*z2)/2 + (a2*b1*b2*b3*y2^2*z2)/2 + (a1*a2*b1*b2*b3*y2^2*z2)/2 + a2*a3*b1*y3*z2 + b1*b2*y3*z2 + a3*b1*b2*y3*z2 + b1*b3*y3*z2 + a2*b1*b3*y3*z2 + a3*b1*b3*y3*z2 + b1*b2*b3*y3*z2 + a3*b1*b2*b3*y3*z2 + a2*a3*c1*y3*z2 - 2*a2*a3*b1*c1*y3*z2 + b2*c1*y3*z2 + a3*b2*c1*y3*z2 - 2*b1*b2*c1*y3*z2 - 2*a3*b1*b2*c1*y3*z2 + b3*c1*y3*z2 + a2*b3*c1*y3*z2 + a3*b3*c1*y3*z2 - 2*b1*b3*c1*y3*z2 - 2*a2*b1*b3*c1*y3*z2 - 2*a3*b1*b3*c1*y3*z2 + b2*b3*c1*y3*z2 + a3*b2*b3*c1*y3*z2 - 2*b1*b2*b3*c1*y3*z2 - 2*a3*b1*b2*b3*c1*y3*z2 + a2*a3*x1*y3*z2 + a1*b2*x1*y3*z2 + a2*b2*x1*y3*z2 + a1*a3*b2*x1*y3*z2 + a2*a3*b2*x1*y3*z2 + a2*a3*b3*x1*y3*z2 + b1*b2*b3*x1*y3*z2 + a3*b1*b2*b3*x1*y3*z2 + a2*a3*y1*y3*z2 + b2*y1*y3*z2 + a1*b2*y1*y3*z2 + a2*b2*y1*y3*z2 + a3*b2*y1*y3*z2 + a1*a3*b2*y1*y3*z2 + a2*a3*b2*y1*y3*z2 + a2*a3*b3*y1*y3*z2 + b1*b2*b3*y1*y3*z2 + a3*b1*b2*b3*y1*y3*z2 + (a1*a2*a3*z1*z2)/2 + (3*a1*a3*b1*z1*z2)/2 + (a2*a3*b1*z1*z2)/2 + 2*a1*a2*a3*b1*z1*z2 + a1*a2*a3*b2*z1*z2 + (a3*b1*b2*z1*z2)/2 + (5*a1*a3*b1*b2*z1*z2)/2 + 2*a2*a3*b1*b2*z1*z2 + a1*a2*a3*b1*b2*z1*z2 + (a1*a2*b3*z1*z2)/2 + (a1*a3*b3*z1*z2)/2 + a1*b1*b3*z1*z2 + (a2*b1*b3*z1*z2)/2 + (3*a1*a2*b1*b3*z1*z2)/2 + (a1*a3*b1*b3*z1*z2)/2 + (a1*b2*b3*z1*z2)/2 + a1*a2*b2*b3*z1*z2 + (3*a1*b1*b2*b3*z1*z2)/2 + (3*a2*b1*b2*b3*z1*z2)/2 + a1*a2*b1*b2*b3*z1*z2 - a1*a2*a3*b1*c1*z1*z2 + a1*a2*a3*b2*c1*z1*z2 - a1*a3*b1*b2*c1*z1*z2 - a2*a3*b1*b2*c1*z1*z2 - 2*a1*a2*a3*b1*b2*c1*z1*z2 - a1*a2*b1*b3*c1*z1*z2 + a1*a2*b2*b3*c1*z1*z2 - 2*a1*a2*b1*b2*b3*c1*z1*z2 + a1*a3*b1*x1*z1*z2 + a3*b2*x1*z1*z2 + a1*a3*b2*x1*z1*z2 + a2*a3*b2*x1*z1*z2 + a3*b1*b2*x1*z1*z2 + a1*b3*x1*z1*z2 + a1*a2*b3*x1*z1*z2 + a1*a3*b3*x1*z1*z2 + a1*b1*b3*x1*z1*z2 + a1*a2*b1*b3*x1*z1*z2 + a2*b2*b3*x1*z1*z2 + a1*a2*b2*b3*x1*z1*z2 + a1*b1*b2*b3*x1*z1*z2 + a2*b1*b2*b3*x1*z1*z2 + a3*x2*z1*z2 + a1*a3*x2*z1*z2 + a1*a2*a3*x2*z1*z2 + a3*b1*x2*z1*z2 + a1*a3*b1*x2*z1*z2 + a2*a3*b1*x2*z1*z2 + a3*b2*x2*z1*z2 + a1*a3*b2*x2*z1*z2 + a2*a3*b2*x2*z1*z2 + a1*b3*x2*z1*z2 + a1*b1*b3*x2*z1*z2 + a2*b1*b3*x2*z1*z2 + a1*a2*b1*b3*x2*z1*z2 + a1*b2*b3*x2*z1*z2 + a2*b2*b3*x2*z1*z2 + a1*a2*b2*b3*x2*z1*z2 + a1*a2*x3*z1*z2 + a2*a3*x3*z1*z2 + a1*a3*b2*x3*z1*z2 + a2*a3*b2*x3*z1*z2 + a3*b1*b2*x3*z1*z2 + a1*a2*b3*x3*z1*z2 + a2*a3*b3*x3*z1*z2 + a2*a3*y1*z1*z2 + a2*a3*b1*y1*z1*z2 + a1*a2*a3*b1*y1*z1*z2 + a3*b2*y1*z1*z2 + a1*a3*b2*y1*z1*z2 + a1*a2*a3*b2*y1*z1*z2 + a1*a3*b1*b2*y1*z1*z2 + a2*a3*b1*b2*y1*z1*z2 + a1*b3*y1*z1*z2 + b1*b3*y1*z1*z2 + a2*b1*b3*y1*z1*z2 + a1*b2*b3*y1*z1*z2 + a1*b1*b2*b3*y1*z1*z2 + a2*b1*b2*b3*y1*z1*z2 + a2*a3*y2*z1*z2 + a1*a2*a3*y2*z1*z2 + a3*b1*y2*z1*z2 + a1*a2*a3*b1*y2*z1*z2 + a1*a2*a3*b2*y2*z1*z2 + a3*b1*b2*y2*z1*z2 + a1*a3*b1*b2*y2*z1*z2 + a2*a3*b1*b2*y2*z1*z2 + b3*y2*z1*z2 + a2*b3*y2*z1*z2 + a3*b3*y2*z1*z2 + b1*b3*y2*z1*z2 + a2*a3*y3*z1*z2 + a1*b2*y3*z1*z2 + a2*b2*y3*z1*z2 + a1*a3*b2*y3*z1*z2 + a2*a3*b2*y3*z1*z2 + a2*a3*b3*y3*z1*z2 + b2*b3*y3*z1*z2 + a3*b2*b3*y3*z1*z2 + b1*b2*b3*y3*z1*z2 + a3*b1*b2*b3*y3*z1*z2 + (a1*a2*a3*z1^2*z2)/2 + (a1*a3*b1*z1^2*z2)/2 + (a2*a3*b1*z1^2*z2)/2 + (a1*a2*a3*b1*z1^2*z2)/2 + (a1*a2*a3*b2*z1^2*z2)/2 + (a3*b1*b2*z1^2*z2)/2 + (a2*a3*b1*b2*z1^2*z2)/2 + (a1*a2*b3*z1^2*z2)/2 + (a1*a3*b3*z1^2*z2)/2 + (a2*b1*b3*z1^2*z2)/2 + (a1*a3*b1*b3*z1^2*z2)/2 + (a1*b2*b3*z1^2*z2)/2 + (a1*a2*b2*b3*z1^2*z2)/2 + (a1*b1*b2*b3*z1^2*z2)/2 + (a2*b1*b2*b3*z1^2*z2)/2 + (a1*a2*a3*z2^2)/2 + a1*a2*b1*b3*z2^2 + (a1*a2*b2*b3*z2^2)/2 + (a1*a2*b1*b2*b3*z2^2)/2 + (a1*a2*a3*x1*z2^2)/2 + (a1*a3*b1*x1*z2^2)/2 + (a1*a2*a3*b1*x1*z2^2)/2 + (a3*b2*x1*z2^2)/2 + (a2*a3*b2*x1*z2^2)/2 + (a1*a2*a3*b2*x1*z2^2)/2 + (a3*b1*b2*x1*z2^2)/2 + (a1*a3*b1*b2*x1*z2^2)/2 + (a2*a3*b1*b2*x1*z2^2)/2 + (a1*b1*b3*x1*z2^2)/2 + (a1*a2*b1*b3*x1*z2^2)/2 + (a2*b2*b3*x1*z2^2)/2 + (a1*a2*b2*b3*x1*z2^2)/2 + (a1*b1*b2*b3*x1*z2^2)/2 + (a2*b1*b2*b3*x1*z2^2)/2 + (a1*a3*b1*x2*z2^2)/2 + (a3*b1*b2*x2*z2^2)/2 + (a1*b1*b3*x2*z2^2)/2 + (a1*a2*b1*b3*x2*z2^2)/2 + (a1*b1*b2*b3*x2*z2^2)/2 + (a2*b1*b2*b3*x2*z2^2)/2 + (a1*a2*b1*b2*b3*x2*z2^2)/2 + (a2*a3*y1*z2^2)/2 + (a1*a2*a3*y1*z2^2)/2 + (a1*a2*a3*b1*y1*z2^2)/2 + (a3*b2*y1*z2^2)/2 + (a1*a2*a3*b2*y1*z2^2)/2 + (a1*a3*b1*b2*y1*z2^2)/2 + (a2*a3*b1*b2*y1*z2^2)/2 + (a1*a2*b1*b3*y1*z2^2)/2 + (a1*a2*b2*b3*y1*z2^2)/2 + (a1*a2*b1*b3*y2*z2^2)/2 + (a1*a2*b1*b2*b3*y2*z2^2)/2 + (a1*a2*a3*b1*z1*z2^2)/2 + (a1*a2*a3*b2*z1*z2^2)/2 + (a1*a3*b1*b2*z1*z2^2)/2 + (a2*a3*b1*b2*z1*z2^2)/2 + (a1*a2*b1*b3*z1*z2^2)/2 + (a1*a2*b2*b3*z1*z2^2)/2 + (a1*a2*a3*z2^3)/2 + (a1*a2*b1*b3*z2^3)/2 + (a1*a2*b1*b2*b3*z2^3)/2 + (3*a2*x1*z3)/2 + (a1*a2*x1*z3)/2 + a1*a2*a3*x1*z3 + (a1*a2*b1*x1*z3)/2 + a1*a2*a3*b1*x1*z3 + (a1*b2*x1*z3)/2 + (a1*a2*b2*x1*z3)/2 + (a1*a3*b2*x1*z3)/2 + (3*a2*a3*b2*x1*z3)/2 + a1*a2*a3*b2*x1*z3 + a1*b1*b2*x1*z3 + (a1*a2*b1*b2*x1*z3)/2 + (a1*a3*b1*b2*x1*z3)/2 + (3*a2*a3*b1*b2*x1*z3)/2 + a1*a2*a3*b1*b2*x1*z3 + (3*a2*a3*b3*x1*z3)/2 + a1*a2*a3*b3*x1*z3 + (3*a1*a2*b1*b3*x1*z3)/2 + a1*a2*a3*b1*b3*x1*z3 + (3*a1*a2*b2*b3*x1*z3)/2 + (3*a2*a3*b2*b3*x1*z3)/2 + (3*a1*a2*b1*b2*b3*x1*z3)/2 + (3*a1*a3*b1*b2*b3*x1*z3)/2 + (a2*x1^2*z3)/2 + (a1*a2*x1^2*z3)/2 + (a1*a2*b1*x1^2*z3)/2 + (a1*b2*x1^2*z3)/2 + (a1*a2*b2*x1^2*z3)/2 + (a1*a3*b2*x1^2*z3)/2 + (a2*a3*b2*x1^2*z3)/2 + (a1*a2*b1*b2*x1^2*z3)/2 + (a1*a3*b1*b2*x1^2*z3)/2 + (a2*a3*b1*b2*x1^2*z3)/2 + (a2*a3*b3*x1^2*z3)/2 + (a1*a2*b1*b3*x1^2*z3)/2 + (a1*a2*b2*b3*x1^2*z3)/2 + (a2*a3*b2*b3*x1^2*z3)/2 + (a1*a2*b1*b2*b3*x1^2*z3)/2 + (a1*a3*b1*b2*b3*x1^2*z3)/2 + (3*a1*x2*z3)/2 + a1*a2*x2*z3 + (3*a1*a3*x2*z3)/2 + a1*a2*a3*x2*z3 + a1*b1*x2*z3 + (7*a2*b1*x2*z3)/2 + a1*a2*b1*x2*z3 + a1*a3*b1*x2*z3 + a2*a3*b1*x2*z3 + a1*a2*a3*b1*x2*z3 + (3*a1*b2*x2*z3)/2 + (3*a1*a3*b2*x2*z3)/2 + a1*b1*b2*x2*z3 + a1*a3*b1*b2*x2*z3 + a2*a3*b1*b2*x2*z3 + (7*a2*a3*b1*b3*x2*z3)/2 + a2*a3*b1*b2*b3*x2*z3 + a1*c1*x2*z3 + a2*c1*x2*z3 + a1*a3*c1*x2*z3 + a2*a3*c1*x2*z3 - 2*a1*b1*c1*x2*z3 - 3*a2*b1*c1*x2*z3 - 2*a1*a3*b1*c1*x2*z3 - 2*a2*a3*b1*c1*x2*z3 + a1*b2*c1*x2*z3 + a1*a3*b2*c1*x2*z3 + a2*a3*b2*c1*x2*z3 - 2*a1*b1*b2*c1*x2*z3 - 2*a1*a3*b1*b2*c1*x2*z3 - 2*a2*a3*b1*b2*c1*x2*z3 + a2*a3*b3*c1*x2*z3 - 3*a2*a3*b1*b3*c1*x2*z3 + a2*a3*b2*b3*c1*x2*z3 - 2*a2*a3*b1*b2*b3*c1*x2*z3 + a1*x1*x2*z3 + a2*x1*x2*z3 + a1*a2*a3*x1*x2*z3 + a1*b1*x1*x2*z3 + a2*b1*x1*x2*z3 + a3*b1*x1*x2*z3 + a1*a3*b1*x1*x2*z3 + a2*a3*b1*x1*x2*z3 + a3*b1*b2*x1*x2*z3 + a1*a3*b1*b2*x1*x2*z3 + a2*a3*b1*b2*x1*x2*z3 + a1*a2*b3*x1*x2*z3 + a1*a2*a3*b3*x1*x2*z3 + a1*a3*b2*b3*x1*x2*z3 + a2*a3*b2*b3*x1*x2*z3 + a1*a3*b1*b2*b3*x1*x2*z3 + a2*a3*b1*b2*b3*x1*x2*z3 + (a1*x2^2*z3)/2 + (a1*a3*x2^2*z3)/2 + (a2*b1*x2^2*z3)/2 + (a1*b2*x2^2*z3)/2 + (a1*a3*b2*x2^2*z3)/2 + (a2*a3*b1*b3*x2^2*z3)/2 + (a2*y1*z3)/2 + (3*a1*a2*y1*z3)/2 + a1*a2*a3*y1*z3 + a2*b1*y1*z3 + (a1*a2*b1*y1*z3)/2 + a2*a3*b1*y1*z3 + a1*a2*a3*b1*y1*z3 + (3*b2*y1*z3)/2 + (3*a1*b2*y1*z3)/2 + (3*a1*a2*b2*y1*z3)/2 + (3*a3*b2*y1*z3)/2 + (3*a1*a3*b2*y1*z3)/2 + (a2*a3*b2*y1*z3)/2 + a1*a2*a3*b2*y1*z3 + (b1*b2*y1*z3)/2 + a1*b1*b2*y1*z3 + a2*b1*b2*y1*z3 + (a1*a2*b1*b2*y1*z3)/2 + a3*b1*b2*y1*z3 + (a1*a3*b1*b2*y1*z3)/2 + (a2*a3*b1*b2*y1*z3)/2 + a1*a2*a3*b1*b2*y1*z3 + (a2*a3*b3*y1*z3)/2 + a1*a2*a3*b3*y1*z3 + (3*a2*b1*b3*y1*z3)/2 + (3*a1*a2*b1*b3*y1*z3)/2 + a2*a3*b1*b3*y1*z3 + a1*a2*a3*b1*b3*y1*z3 + (3*a2*b2*b3*y1*z3)/2 + (3*a1*a2*b2*b3*y1*z3)/2 + (3*a2*a3*b2*b3*y1*z3)/2 + (3*a2*b1*b2*b3*y1*z3)/2 + (3*a1*a2*b1*b2*b3*y1*z3)/2 + (3*a3*b1*b2*b3*y1*z3)/2 + (3*a1*a3*b1*b2*b3*y1*z3)/2 + a2*x1*y1*z3 + a1*a2*x1*y1*z3 + a2*a3*x1*y1*z3 + a1*a2*b1*x1*y1*z3 + a1*b2*x1*y1*z3 + a1*a2*b2*x1*y1*z3 + a3*b2*x1*y1*z3 + a2*a3*b2*x1*y1*z3 + a1*a2*b1*b2*x1*y1*z3 + a1*a3*b1*b2*x1*y1*z3 + a2*a3*b1*b2*x1*y1*z3 + a2*b3*x1*y1*z3 + a1*a2*b1*b3*x1*y1*z3 + a1*a3*b2*b3*x1*y1*z3 + a2*a3*b2*b3*x1*y1*z3 + a1*a2*b1*b2*b3*x1*y1*z3 + a1*a3*b1*b2*b3*x1*y1*z3 + a1*x2*y1*z3 + a2*x2*y1*z3 + a3*x2*y1*z3 + a2*a3*x2*y1*z3 + a1*a2*a3*x2*y1*z3 + a2*b1*x2*y1*z3 + a3*b1*x2*y1*z3 + a1*a3*b1*x2*y1*z3 + a2*a3*b1*x2*y1*z3 + a1*b2*x2*y1*z3 + a3*b2*x2*y1*z3 + a3*b1*b2*x2*y1*z3 + a1*a3*b1*b2*x2*y1*z3 + a2*a3*b1*b2*x2*y1*z3 + a2*b3*x2*y1*z3 + a1*a2*b3*x2*y1*z3 + a2*a3*b3*x2*y1*z3 + a1*a2*a3*b3*x2*y1*z3 + a1*a3*b1*b3*x2*y1*z3 + a2*a3*b2*b3*x2*y1*z3 + a1*a3*b1*b2*b3*x2*y1*z3 + a2*a3*b1*b2*b3*x2*y1*z3 + (a2*y1^2*z3)/2 + (a1*a2*y1^2*z3)/2 + (a1*a2*b1*y1^2*z3)/2 + (b2*y1^2*z3)/2 + (a1*b2*y1^2*z3)/2 + (a1*a2*b2*y1^2*z3)/2 + (a3*b2*y1^2*z3)/2 + (a1*a3*b2*y1^2*z3)/2 + (a2*a3*b2*y1^2*z3)/2 + (b1*b2*y1^2*z3)/2 + (a1*a2*b1*b2*y1^2*z3)/2 + (a1*a3*b1*b2*y1^2*z3)/2 + (a2*a3*b1*b2*y1^2*z3)/2 + (a2*a3*b3*y1^2*z3)/2 + (a2*b1*b3*y1^2*z3)/2 + (a1*a2*b1*b3*y1^2*z3)/2 + (a2*b2*b3*y1^2*z3)/2 + (a1*a2*b2*b3*y1^2*z3)/2 + (a2*a3*b2*b3*y1^2*z3)/2 + (a2*b1*b2*b3*y1^2*z3)/2 + (a1*a2*b1*b2*b3*y1^2*z3)/2 + (a3*b1*b2*b3*y1^2*z3)/2 + (a1*a3*b1*b2*b3*y1^2*z3)/2 + (a1*y2*z3)/2 + a1*a2*y2*z3 + (a1*a3*y2*z3)/2 + a1*a2*a3*y2*z3 + (3*b1*y2*z3)/2 + 2*a1*b1*y2*z3 + (5*a2*b1*y2*z3)/2 + a1*a2*b1*y2*z3 + a3*b1*y2*z3 + 2*a1*a3*b1*y2*z3 + 2*a2*a3*b1*y2*z3 + a1*a2*a3*b1*y2*z3 + (3*a1*b2*y2*z3)/2 + (3*a1*a3*b2*y2*z3)/2 + b1*b2*y2*z3 + a1*b1*b2*y2*z3 + a1*a3*b1*b2*y2*z3 + a2*a3*b1*b2*y2*z3 + (7*a3*b1*b3*y2*z3)/2 + (7*a2*a3*b1*b3*y2*z3)/2 + a3*b1*b2*b3*y2*z3 + a2*a3*b1*b2*b3*y2*z3 + a1*c1*y2*z3 + a2*c1*y2*z3 + a1*a3*c1*y2*z3 + a2*a3*c1*y2*z3 - b1*c1*y2*z3 - 2*a1*b1*c1*y2*z3 - 3*a2*b1*c1*y2*z3 - 2*a1*a3*b1*c1*y2*z3 - 2*a2*a3*b1*c1*y2*z3 + b2*c1*y2*z3 + a1*b2*c1*y2*z3 + a1*a3*b2*c1*y2*z3 + a2*a3*b2*c1*y2*z3 - 2*b1*b2*c1*y2*z3 - 2*a1*b1*b2*c1*y2*z3 - 2*a1*a3*b1*b2*c1*y2*z3 - 2*a2*a3*b1*b2*c1*y2*z3 + a3*b3*c1*y2*z3 + a2*a3*b3*c1*y2*z3 - 3*a3*b1*b3*c1*y2*z3 - 3*a2*a3*b1*b3*c1*y2*z3 + a3*b2*b3*c1*y2*z3 + a2*a3*b2*b3*c1*y2*z3 - 2*a3*b1*b2*b3*c1*y2*z3 - 2*a2*a3*b1*b2*b3*c1*y2*z3 + a1*x1*y2*z3 + a2*x1*y2*z3 + a3*x1*y2*z3 + a1*a3*x1*y2*z3 + a2*a3*x1*y2*z3 + a1*a2*a3*x1*y2*z3 + a1*b1*x1*y2*z3 + a2*b1*x1*y2*z3 + a3*b1*x1*y2*z3 + a1*a3*b1*x1*y2*z3 + a2*a3*b1*x1*y2*z3 + a3*b1*b2*x1*y2*z3 + a1*a3*b1*b2*x1*y2*z3 + a2*a3*b1*b2*x1*y2*z3 + b3*x1*y2*z3 + a1*b3*x1*y2*z3 + a2*b3*x1*y2*z3 + a1*a2*b3*x1*y2*z3 + a3*b3*x1*y2*z3 + a1*a3*b3*x1*y2*z3 + a2*a3*b3*x1*y2*z3 + a1*a2*a3*b3*x1*y2*z3 + a1*a3*b2*b3*x1*y2*z3 + a2*a3*b2*b3*x1*y2*z3 + a1*a3*b1*b2*b3*x1*y2*z3 + a2*a3*b1*b2*b3*x1*y2*z3 + a1*x2*y2*z3 + a1*a3*x2*y2*z3 + a1*b1*x2*y2*z3 + a2*b1*x2*y2*z3 + a1*a3*b2*x2*y2*z3 + a1*a3*b1*b3*x2*y2*z3 + a2*a3*b1*b3*x2*y2*z3 + a1*a3*b2*b3*x2*y2*z3 + a1*y1*y2*z3 + a2*y1*y2*z3 + a3*y1*y2*z3 + a1*a3*y1*y2*z3 + a1*a2*a3*y1*y2*z3 + b1*y1*y2*z3 + a2*b1*y1*y2*z3 + a3*b1*y1*y2*z3 + a1*a3*b1*y1*y2*z3 + a2*a3*b1*y1*y2*z3 + b2*y1*y2*z3 + a1*b2*y1*y2*z3 + a3*b2*y1*y2*z3 + a3*b1*b2*y1*y2*z3 + a1*a3*b1*b2*y1*y2*z3 + a2*a3*b1*b2*y1*y2*z3 + a1*b3*y1*y2*z3 + a1*a2*b3*y1*y2*z3 + a1*a3*b3*y1*y2*z3 + a1*a2*a3*b3*y1*y2*z3 + a3*b1*b3*y1*y2*z3 + a1*a3*b1*b3*y1*y2*z3 + a3*b2*b3*y1*y2*z3 + a2*a3*b2*b3*y1*y2*z3 + a1*a3*b1*b2*b3*y1*y2*z3 + a2*a3*b1*b2*b3*y1*y2*z3 + (a1*y2^2*z3)/2 + (a1*a3*y2^2*z3)/2 + (b1*y2^2*z3)/2 + (a2*b1*y2^2*z3)/2 + (a1*b2*y2^2*z3)/2 + (a1*a3*b2*y2^2*z3)/2 + (a3*b1*b3*y2^2*z3)/2 + (a2*a3*b1*b3*y2^2*z3)/2 + (3*a1*a2*b1*z1*z3)/2 + a1*a2*a3*b1*z1*z3 + a1*b1*b2*z1*z3 + (3*a1*a2*b1*b2*z1*z3)/2 + (3*a1*a3*b1*b2*z1*z3)/2 + (a2*a3*b1*b2*z1*z3)/2 + a1*a2*a3*b1*b2*z1*z3 + (a1*a2*b1*b3*z1*z3)/2 + a1*a2*a3*b1*b3*z1*z3 + (a1*a2*b2*b3*z1*z3)/2 + (a2*a3*b2*b3*z1*z3)/2 + (a1*a2*b1*b2*b3*z1*z3)/2 + (a1*a3*b1*b2*b3*z1*z3)/2 + a3*b2*x1*z1*z3 + a1*a3*b2*x1*z1*z3 + a2*a3*b2*x1*z1*z3 + a1*a2*b2*b3*x1*z1*z3 + a1*a3*b2*b3*x1*z1*z3 + a3*x2*z1*z3 + a1*a3*x2*z1*z3 + a2*a3*x2*z1*z3 + a1*a2*a3*x2*z1*z3 + a3*b1*x2*z1*z3 + a1*a3*b1*x2*z1*z3 + a2*a3*b1*x2*z1*z3 + a3*b2*x2*z1*z3 + a1*a3*b2*x2*z1*z3 + a2*a3*b2*x2*z1*z3 + a3*b1*b2*x2*z1*z3 + a1*a3*b1*b2*x2*z1*z3 + a2*a3*b1*b2*x2*z1*z3 + a1*a2*b3*x2*z1*z3 + a1*a2*a3*b3*x2*z1*z3 + a1*a3*b1*b3*x2*z1*z3 + a2*a3*b1*b3*x2*z1*z3 + a1*a3*b1*b2*b3*x2*z1*z3 + a2*a3*b1*b2*b3*x2*z1*z3 + a2*a3*y1*z1*z3 + a2*a3*b2*y1*z1*z3 + a2*b3*y1*z1*z3 + a2*a3*b3*y1*z1*z3 + a1*a2*a3*y2*z1*z3 + a3*b1*y2*z1*z3 + a1*a3*b1*y2*z1*z3 + a2*a3*b1*y2*z1*z3 + a3*b2*y2*z1*z3 + a1*a3*b2*y2*z1*z3 + a2*a3*b2*y2*z1*z3 + a3*b1*b2*y2*z1*z3 + a1*a3*b1*b2*y2*z1*z3 + a2*a3*b1*b2*y2*z1*z3 + b3*y2*z1*z3 + a1*b3*y2*z1*z3 + a2*b3*y2*z1*z3 + a1*a2*b3*y2*z1*z3 + a3*b3*y2*z1*z3 + a1*a3*b3*y2*z1*z3 + a2*a3*b3*y2*z1*z3 + a1*a2*a3*b3*y2*z1*z3 + a1*a3*b1*b3*y2*z1*z3 + a2*a3*b1*b3*y2*z1*z3 + a1*a3*b1*b2*b3*y2*z1*z3 + a2*a3*b1*b2*b3*y2*z1*z3 + (a1*a2*b1*z1^2*z3)/2 + (a1*a2*b1*b2*z1^2*z3)/2 + (a1*a3*b1*b2*z1^2*z3)/2 + (a2*a3*b1*b2*z1^2*z3)/2 + (a1*a2*b1*b3*z1^2*z3)/2 + (a1*a2*b2*b3*z1^2*z3)/2 + (a2*a3*b2*b3*z1^2*z3)/2 + (a1*a2*b1*b2*b3*z1^2*z3)/2 + (a1*a3*b1*b2*b3*z1^2*z3)/2 + (3*a2*b1*z2*z3)/2 + a1*a2*b1*z2*z3 + a1*a2*a3*b1*z2*z3 + (a1*b2*z2*z3)/2 + (a1*a3*b2*z2*z3)/2 + a1*b1*b2*z2*z3 + a1*a3*b1*b2*z2*z3 + a2*a3*b1*b2*z2*z3 + (5*a2*a3*b1*b3*z2*z3)/2 + a2*a3*b1*b2*b3*z2*z3 - a2*b1*c1*z2*z3 + a1*b2*c1*z2*z3 + a1*a3*b2*c1*z2*z3 + a2*a3*b2*c1*z2*z3 - 2*a1*b1*b2*c1*z2*z3 - 2*a1*a3*b1*b2*c1*z2*z3 - 2*a2*a3*b1*b2*c1*z2*z3 + a2*a3*b3*c1*z2*z3 - 3*a2*a3*b1*b3*c1*z2*z3 + a2*a3*b2*b3*c1*z2*z3 - 2*a2*a3*b1*b2*b3*c1*z2*z3 + a1*a2*a3*x1*z2*z3 + a1*b1*x1*z2*z3 + a2*b1*x1*z2*z3 + a3*b2*x1*z2*z3 + a1*a3*b2*x1*z2*z3 + a2*a3*b2*x1*z2*z3 + a3*b1*b2*x1*z2*z3 + a1*a3*b1*b2*x1*z2*z3 + a2*a3*b1*b2*x1*z2*z3 + a1*a2*b3*x1*z2*z3 + a1*a2*a3*b3*x1*z2*z3 + a1*a3*b1*b3*x1*z2*z3 + a2*a3*b1*b3*x1*z2*z3 + a1*a3*b1*b2*b3*x1*z2*z3 + a2*a3*b1*b2*b3*x1*z2*z3 + a1*b1*x2*z2*z3 + a1*b2*x2*z2*z3 + a1*a3*b1*b3*x2*z2*z3 + a1*a3*b2*b3*x2*z2*z3 + a2*a3*y1*z2*z3 + a1*a2*a3*y1*z2*z3 + a2*b1*y1*z2*z3 + a1*b2*y1*z2*z3 + a1*a3*b2*y1*z2*z3 + a2*a3*b2*y1*z2*z3 + a3*b1*b2*y1*z2*z3 + a1*a3*b1*b2*y1*z2*z3 + a2*a3*b1*b2*y1*z2*z3 + a2*b3*y1*z2*z3 + a1*a2*b3*y1*z2*z3 + a2*a3*b3*y1*z2*z3 + a1*a2*a3*b3*y1*z2*z3 + a2*a3*b1*b3*y1*z2*z3 + a1*a3*b2*b3*y1*z2*z3 + a1*a3*b1*b2*b3*y1*z2*z3 + a2*a3*b1*b2*b3*y1*z2*z3 + a1*a2*a3*z1*z2*z3 + a3*b1*b2*z1*z2*z3 + a1*a3*b1*b2*z1*z2*z3 + a2*a3*b1*b2*z1*z2*z3 + a1*a2*b3*z1*z2*z3 + a1*a2*a3*b3*z1*z2*z3 + a1*a3*b2*b3*z1*z2*z3 + a2*a3*b2*b3*z1*z2*z3 + a1*a3*b1*b2*b3*z1*z2*z3 + a2*a3*b1*b2*b3*z1*z2*z3 + (a2*b1*z2^2*z3)/2 + (a1*b2*z2^2*z3)/2 + (a1*a3*b2*z2^2*z3)/2 + (a2*a3*b1*b3*z2^2*z3)/2;
end;
#####################################################################
#####################################################################
#Space Group No. 72 ( Ibam)
#####################################################################
Aiin72:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin72:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin72:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axyzin72:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bzxyin72:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*z1 + b1*x2*z1 + y2*z1 + b1*y2*z1 + b1*x2*z2 + b1*y2*z2 + b1*z1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 73 ( Ibca)
#####################################################################
Aiin73:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin73:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin73:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axyzin73:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
#####################################################################
#Space Group No. 74 ( Imma)
#####################################################################
Aiin74:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Acpin74:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acin74:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1;
end;
#####################################################################
Axyzin74:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Byxzin74:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + b1*b2 + a1*a2*b1*b2 + a2*c1 + a1*a2*c1 + a1*b2*c1 + b1*b2*c1 + a1*c2 + b1*c2 + a2*b1*c2 + a2*c1*c2 + b2*c1*c2 + a2*x1 + a2*b1*x1 + a1*b2*x1 + a2*b2*x1 + a2*c1*x1 + a1*c2*x1 + a2*c2*x1 + a1*a2*x2 + b1*x2 + a1*b1*x2 + a1*a2*b2*x2 + b1*b2*x2 + c1*x2 + a1*c1*x2 + a2*c1*x2 + b1*c1*x2 + a1*c2*x2 + b1*c2*x2 + a2*b1*y1 + a2*c1*y1 + a1*c2*y1 + a2*c2*y1 + x2*y1 + a1*x2*y1 + a1*y2 + a1*a2*y2 + a1*b2*y2 + a1*a2*b2*y2 + b1*b2*y2 + c1*y2 + a1*c1*y2 + a2*c1*y2 + b1*c1*y2 + a1*c2*y2 + b1*c2*y2 + a1*x2*y2 + a1*y1*y2 + a2*b1*z1 + b2*z1 + a1*b2*z1 + a2*b2*z1 + a2*c1*z1 + c2*z1 + a1*c2*z1 + a2*c2*z1 + a1*z2 + a1*a2*z2 + a1*b1*z2 + a1*a2*b2*z2 + b1*b2*z2 + a1*c1*z2 + a2*c1*z2 + b1*c1*z2 + a1*c2*z2 + b1*c2*z2 + y1*z2 + a1*y1*z2 + a1*y2*z2;
end;
#####################################################################
Bzxyin74:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a2*b1*b2 + a1*a2*b1*b2 + a2*c1 + a1*a2*c1 + a2*b2*c1 + a1*a2*b2*c1 + a1*b1*b2*c1 + a2*b1*b2*c1 + a1*c2 + a1*a2*b1*c2 + a2*b1*b2*c2 + c1*c2 + a2*c1*c2 + a1*a2*c1*c2 + a2*b1*c1*c2 + b2*c1*c2 + a1*b2*c1*c2 + b1*b2*c1*c2 + a2*x1 + a2*b1*x1 + a1*b2*x1 + a2*b2*x1 + a2*c1*x1 + a1*c2*x1 + a2*c2*x1 + a1*a2*x2 + a1*b2*x2 + a1*b1*b2*x2 + a2*b1*b2*x2 + c1*x2 + a1*c1*x2 + a2*c1*x2 + b1*c1*x2 + a1*b1*c1*x2 + a1*c2*x2 + b1*c2*x2 + a1*b1*c2*x2 + a2*b1*c2*x2 + b1*b2*c2*x2 + a2*b1*y1 + a1*b2*y1 + a2*b2*y1 + a2*c1*y1 + a1*c2*y1 + a2*c2*y1 + a1*y2 + a1*a2*y2 + a1*b2*y2 + a1*b1*b2*y2 + a2*b1*b2*y2 + a1*c1*y2 + a2*c1*y2 + b1*c1*y2 + a1*b1*c1*y2 + a1*c2*y2 + b1*c2*y2 + a1*b1*c2*y2 + a2*b1*c2*y2 + b1*b2*c2*y2 + a2*b1*z1 + a2*c1*z1 + b1*c2*z1 + b2*c2*z1 + x2*z1 + b1*x2*z1 + y2*z1 + b1*y2*z1 + a1*a2*z2 + a1*b1*z2 + a1*b1*b2*z2 + a2*b1*b2*z2 + a2*c1*z2 + a1*b1*c1*z2 + a1*b1*c2*z2 + a2*b1*c2*z2 + b1*b2*c2*z2 + b1*x2*z2 + b1*y2*z2 + b1*z1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 75 ( P4)
#####################################################################
Aqin75:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return b1;
end;
#####################################################################
Axyin75:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return x1 + y1;
end;
#####################################################################
Azin75:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return z1;
end;
#####################################################################
Bdeltain75:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return a1*a2 + a1*b1*b2 + a2*b1*b2;
end;
#####################################################################
Bxyin75:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return (1 - b1)*x2*y1 + b1*(x2 + y1)*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 76 ( P4_1)
#####################################################################
Aqin76:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return b1;
end;
#####################################################################
Axyin76:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return x1 + y1;
end;
#####################################################################
Bxyin76:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return x2*y1 + b1*x2*y1 + b1*x2*y2 + b1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 77 ( P4_2)
#####################################################################
Aqin77:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return b1;
end;
#####################################################################
Axyin77:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return x1 + y1;
end;
#####################################################################
Azin77:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return a1 + z1;
end;
#####################################################################
Bxyin77:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return x2*y1 + b1*x2*y1 + b1*x2*y2 + b1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 78 ( P4_3)
#####################################################################
Aqin78:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return b1;
end;
#####################################################################
Axyin78:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return x1 + y1;
end;
#####################################################################
Bxyin78:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return x2*y1 + b1*x2*y1 + b1*x2*y2 + b1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 79 ( I4)
#####################################################################
Aqin79:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return b1;
end;
#####################################################################
Axyzin79:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain79:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return a1*a2 + a1*b1*b2 + a2*b1*b2;
end;
#####################################################################
B2in79:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return a1*x2 + b1*x2 + a1*b2*x2 + b2*y1 + a1*y2 + b1*y2 + a1*b2*y2 + b1*z2 + a1*b2*z2 + b1*b2*z2;
end;
#####################################################################
B3in79:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return x2*z1 + b1*x2*z1 + y2*z1 + b1*y2*z1 + b1*x2*z2 + b1*y2*z2 + b1*z1*z2;
end;
#####################################################################
C1in79:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];
return b2*b3*x1 + b1*b2*b3*x1 + (a1 + b1)*b2*b3*x1 + 2*b1*(a1 + b1)*b2*b3*x1 + b2^2*b3*x1 + b1^2*b2^2*b3*x1 + (a1 + b1)*b2^2*b3*x1 + b2*(a2 + b2)*b3*x1 + 2*b1*b2*(a2 + b2)*b3*x1 + b2^2*(a2 + b2)*b3*x1 + b2*b3^2*x1 + 2*b1*b2*b3^2*x1 + b1^2*b2*b3^2*x1 + (a1 + b1)*b2*b3^2*x1 + b2^2*b3^2*x1 + b1*b2^2*b3^2*x1 + b1*(a2 + b2)*b3^2*x1 + b2*(a2 + b2)*b3^2*x1 + b1*b2*(a3 + b3)*x1 + b1^2*b2*(a3 + b3)*x1 + b2*b3*(a3 + b3)*x1 + 2*b1*b2*b3*(a3 + b3)*x1 + b2^2*b3*(a3 + b3)*x1 + b2*b3*x1*(1 + x1) + (3*b1*b2*b3*x1*(1 + x1))/2 + (b1^2*b2*b3*x1*(1 + x1))/2 + ((a1 + b1)*b2*b3*x1*(1 + x1))/2 + (3*b2^2*b3*x1*(1 + x1))/2 + (a2 + b2)*b3*x1*(1 + x1) + (b2*(a2 + b2)*b3*x1*(1 + x1))/2 + (b2^2*b3^2*x1*(1 + x1))/2 + ((a2 + b2)*b3^2*x1*(1 + x1))/2 + (b2*(a3 + b3)*x1*(1 + x1))/2 + (b1*b2*(a3 + b3)*x1*(1 + x1))/2 + (b2*b3*(a3 + b3)*x1*(1 + x1))/2 + 3*b1*b3*x1*x2 + 2*b1^2*b3*x1*x2 + 2*(a1 + b1)*b3*x1*x2 + b2*b3*x1*x2 + 4*b1*b2*b3*x1*x2 + 2*b1^2*b2*b3*x1*x2 + 2*(a1 + b1)*b2*b3*x1*x2 + 2*b2^2*b3*x1*x2 + 2*b1*b2^2*b3*x1*x2 + 2*(a2 + b2)*b3*x1*x2 + b2*(a2 + b2)*b3*x1*x2 + b2*b3^2*x1*x2 + b2^2*b3^2*x1*x2 + (a2 + b2)*b3^2*x1*x2 + (a3 + b3)*x1*x2 + b2*(a3 + b3)*x1*x2 + 2*b1*b2*(a3 + b3)*x1*x2 + b1^2*b2*(a3 + b3)*x1*x2 + (a1 + b1)*b2*(a3 + b3)*x1*x2 + 2*b1*b2^2*(a3 + b3)*x1*x2 + b1^2*b2^2*(a3 + b3)*x1*x2 + (a1 + b1)*b2^2*(a3 + b3)*x1*x2 + b1*(a2 + b2)*(a3 + b3)*x1*x2 + b1^2*(a2 + b2)*(a3 + b3)*x1*x2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*x1*x2 + b1*b2*(a2 + b2)*(a3 + b3)*x1*x2 + 2*b3*(a3 + b3)*x1*x2 + b2*b3*(a3 + b3)*x1*x2 + b2^2*x1*x3 + b1*b2^2*x1*x3 + (a2 + b2)*x1*x3 + b1*(a2 + b2)*x1*x3 + b2*(a2 + b2)*x1*x3 + b1*b2*(a2 + b2)*x1*x3 + b2*b3*x1*x3 + b1*b2*b3*x1*x3 + b2*(a3 + b3)*x1*x3 + b2*b3*(a3 + b3)*x1*x3 + b1*b2*b3*y1 + (a1 + b1)*b2*b3*y1 + 2*b1*(a1 + b1)*b2*b3*y1 + b1^2*b2^2*b3*y1 + (a1 + b1)*b2^2*b3*y1 + b2*(a2 + b2)*b3*y1 + 2*b1*b2*(a2 + b2)*b3*y1 + b2^2*(a2 + b2)*b3*y1 + 2*b1*b2*b3^2*y1 + b1^2*b2*b3^2*y1 + (a1 + b1)*b2*b3^2*y1 + b2^2*b3^2*y1 + b1*b2^2*b3^2*y1 + b1*(a2 + b2)*b3^2*y1 + b2*(a2 + b2)*b3^2*y1 + b1*b2*(a3 + b3)*y1 + b1^2*b2*(a3 + b3)*y1 + b2*b3*(a3 + b3)*y1 + 2*b1*b2*b3*(a3 + b3)*y1 + b2^2*b3*(a3 + b3)*y1 + 4*b2*b3*x1*y1 + 2*b1*b2*b3*x1*y1 + b2^2*b3*x1*y1 + b2*(a2 + b2)*b3*x1*y1 + b2^2*b3^2*x1*y1 + (a2 + b2)*b3^2*x1*y1 + b2^2*(a3 + b3)*x1*y1 + (a2 + b2)*(a3 + b3)*x1*y1 + b2*b3*(a3 + b3)*x1*y1 + 2*b3*x2*y1 + 3*b1*b3*x2*y1 + 2*b1^2*b3*x2*y1 + 2*(a1 + b1)*b3*x2*y1 + 3*b2*b3*x2*y1 + 4*b1*b2*b3*x2*y1 + 2*b1^2*b2*b3*x2*y1 + 2*(a1 + b1)*b2*b3*x2*y1 + 2*b2^2*b3*x2*y1 + 2*b1*b2^2*b3*x2*y1 + 2*(a2 + b2)*b3*x2*y1 + b2*(a2 + b2)*b3*x2*y1 + b2*b3^2*x2*y1 + b2^2*b3^2*x2*y1 + (a2 + b2)*b3^2*x2*y1 + (a3 + b3)*x2*y1 + 2*b2*(a3 + b3)*x2*y1 + 2*b1*b2*(a3 + b3)*x2*y1 + b1^2*b2*(a3 + b3)*x2*y1 + (a1 + b1)*b2*(a3 + b3)*x2*y1 + b2^2*(a3 + b3)*x2*y1 + 2*b1*b2^2*(a3 + b3)*x2*y1 + b1^2*b2^2*(a3 + b3)*x2*y1 + (a1 + b1)*b2^2*(a3 + b3)*x2*y1 + (a2 + b2)*(a3 + b3)*x2*y1 + b1*(a2 + b2)*(a3 + b3)*x2*y1 + b1^2*(a2 + b2)*(a3 + b3)*x2*y1 + (a1 + b1)*(a2 + b2)*(a3 + b3)*x2*y1 + b1*b2*(a2 + b2)*(a3 + b3)*x2*y1 + 2*b3*(a3 + b3)*x2*y1 + b2*b3*(a3 + b3)*x2*y1 + b2^2*x3*y1 + b1*b2^2*x3*y1 + (a2 + b2)*x3*y1 + b1*(a2 + b2)*x3*y1 + b2*(a2 + b2)*x3*y1 + b1*b2*(a2 + b2)*x3*y1 + b2*b3*x3*y1 + b1*b2*b3*x3*y1 + b2*(a3 + b3)*x3*y1 + b2*b3*(a3 + b3)*x3*y1 + (3*b2*b3*y1*(1 + y1))/2 + (3*b1*b2*b3*y1*(1 + y1))/2 + (b1^2*b2*b3*y1*(1 + y1))/2 + ((a1 + b1)*b2*b3*y1*(1 + y1))/2 + (3*b2^2*b3*y1*(1 + y1))/2 + (a2 + b2)*b3*y1*(1 + y1) + (b2*(a2 + b2)*b3*y1*(1 + y1))/2 + (b2^2*b3^2*y1*(1 + y1))/2 + ((a2 + b2)*b3^2*y1*(1 + y1))/2 + (b2*(a3 + b3)*y1*(1 + y1))/2 + (b1*b2*(a3 + b3)*y1*(1 + y1))/2 + (b2*b3*(a3 + b3)*y1*(1 + y1))/2 + 3*b1*b3*x1*y2 + 2*b1^2*b3*x1*y2 + 2*(a1 + b1)*b3*x1*y2 + 2*b2*b3*x1*y2 + 4*b1*b2*b3*x1*y2 + 2*b1^2*b2*b3*x1*y2 + 2*(a1 + b1)*b2*b3*x1*y2 + 2*b2^2*b3*x1*y2 + 2*b1*b2^2*b3*x1*y2 + 2*(a2 + b2)*b3*x1*y2 + b2*(a2 + b2)*b3*x1*y2 + b3^2*x1*y2 + b2*b3^2*x1*y2 + b2^2*b3^2*x1*y2 + (a2 + b2)*b3^2*x1*y2 + b1*(a3 + b3)*x1*y2 + b1^2*(a3 + b3)*x1*y2 + (a1 + b1)*(a3 + b3)*x1*y2 + 2*b2*(a3 + b3)*x1*y2 + b1*b2*(a3 + b3)*x1*y2 + b1^2*b2*(a3 + b3)*x1*y2 + (a1 + b1)*b2*(a3 + b3)*x1*y2 + b2^2*(a3 + b3)*x1*y2 + 2*b1*b2^2*(a3 + b3)*x1*y2 + b1^2*b2^2*(a3 + b3)*x1*y2 + (a1 + b1)*b2^2*(a3 + b3)*x1*y2 + (a2 + b2)*(a3 + b3)*x1*y2 + b1*(a2 + b2)*(a3 + b3)*x1*y2 + b1^2*(a2 + b2)*(a3 + b3)*x1*y2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*x1*y2 + b1*b2*(a2 + b2)*(a3 + b3)*x1*y2 + 2*b3*(a3 + b3)*x1*y2 + b2*b3*(a3 + b3)*x1*y2 + 2*b3*y1*y2 + 3*b1*b3*y1*y2 + 2*b1^2*b3*y1*y2 + 2*(a1 + b1)*b3*y1*y2 + 2*b2*b3*y1*y2 + 4*b1*b2*b3*y1*y2 + 2*b1^2*b2*b3*y1*y2 + 2*(a1 + b1)*b2*b3*y1*y2 + 2*b2^2*b3*y1*y2 + 2*b1*b2^2*b3*y1*y2 + 2*(a2 + b2)*b3*y1*y2 + b2*(a2 + b2)*b3*y1*y2 + b3^2*y1*y2 + b2*b3^2*y1*y2 + b2^2*b3^2*y1*y2 + (a2 + b2)*b3^2*y1*y2 + (a3 + b3)*y1*y2 + b1*(a3 + b3)*y1*y2 + b1^2*(a3 + b3)*y1*y2 + (a1 + b1)*(a3 + b3)*y1*y2 + b2*(a3 + b3)*y1*y2 + b1*b2*(a3 + b3)*y1*y2 + b1^2*b2*(a3 + b3)*y1*y2 + (a1 + b1)*b2*(a3 + b3)*y1*y2 + 2*b1*b2^2*(a3 + b3)*y1*y2 + b1^2*b2^2*(a3 + b3)*y1*y2 + (a1 + b1)*b2^2*(a3 + b3)*y1*y2 + b1*(a2 + b2)*(a3 + b3)*y1*y2 + b1^2*(a2 + b2)*(a3 + b3)*y1*y2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*y1*y2 + b1*b2*(a2 + b2)*(a3 + b3)*y1*y2 + 2*b3*(a3 + b3)*y1*y2 + b2*b3*(a3 + b3)*y1*y2 + b2*x1*y3 + b1*b2*x1*y3 + b2^2*x1*y3 + b1*b2^2*x1*y3 + (a2 + b2)*x1*y3 + b1*(a2 + b2)*x1*y3 + b2*(a2 + b2)*x1*y3 + b1*b2*(a2 + b2)*x1*y3 + 2*b2*b3*x1*y3 + b1*b2*b3*x1*y3 + b2*(a3 + b3)*x1*y3 + b2*b3*(a3 + b3)*x1*y3 + b2*y1*y3 + b1*b2*y1*y3 + b2^2*y1*y3 + b1*b2^2*y1*y3 + (a2 + b2)*y1*y3 + b1*(a2 + b2)*y1*y3 + b2*(a2 + b2)*y1*y3 + b1*b2*(a2 + b2)*y1*y3 + 2*b2*b3*y1*y3 + b1*b2*b3*y1*y3 + b2*(a3 + b3)*y1*y3 + b2*b3*(a3 + b3)*y1*y3 + b1*b2*b3*z1 + 2*b1*(a1 + b1)*b2*b3*z1 + b2^2*b3*z1 + b1*b2^2*b3*z1 + b1^2*b2^2*b3*z1 + (a1 + b1)*b2^2*b3*z1 + 2*b1*b2*(a2 + b2)*b3*z1 + b2^2*(a2 + b2)*b3*z1 + b1*b2*b3^2*z1 + b1^2*b2*b3^2*z1 + (a1 + b1)*b2*b3^2*z1 + b2^2*b3^2*z1 + b1*b2^2*b3^2*z1 + b1*(a2 + b2)*b3^2*z1 + b2*(a2 + b2)*b3^2*z1 + b1^2*b2*(a3 + b3)*z1 + 2*b1*b2*b3*(a3 + b3)*z1 + b2^2*b3*(a3 + b3)*z1 + 2*b2*b3*x1*z1 + 2*b1*b2*b3*x1*z1 + (a1 + b1)*b2*b3*x1*z1 + b1*(a1 + b1)*b2*b3*x1*z1 + b2^2*b3*x1*z1 + b2*(a2 + b2)*b3*x1*z1 + b2^2*b3^2*x1*z1 + (a2 + b2)*b3^2*x1*z1 + (a1 + b1)*b2*(a3 + b3)*x1*z1 + b2^2*(a3 + b3)*x1*z1 + b1*b2^2*(a3 + b3)*x1*z1 + b1*(a2 + b2)*(a3 + b3)*x1*z1 + b2*(a2 + b2)*(a3 + b3)*x1*z1 + b2*b3*(a3 + b3)*x1*z1 + b3*x2*z1 + b1*b3*x2*z1 + 2*b1^2*b3*x2*z1 + 2*(a1 + b1)*b3*x2*z1 + b2*b3*x2*z1 + 2*b1*b2*b3*x2*z1 + 2*b1^2*b2*b3*x2*z1 + 2*(a1 + b1)*b2*b3*x2*z1 + 2*b1*b2^2*b3*x2*z1 + 2*(a2 + b2)*b3*x2*z1 + b2*(a2 + b2)*b3*x2*z1 + b2*b3^2*x2*z1 + b2^2*b3^2*x2*z1 + (a2 + b2)*b3^2*x2*z1 + (a3 + b3)*x2*z1 + 2*b2*(a3 + b3)*x2*z1 + b1*b2*(a3 + b3)*x2*z1 + b1^2*b2*(a3 + b3)*x2*z1 + (a1 + b1)*b2*(a3 + b3)*x2*z1 + b2^2*(a3 + b3)*x2*z1 + b1*b2^2*(a3 + b3)*x2*z1 + b1^2*b2^2*(a3 + b3)*x2*z1 + (a1 + b1)*b2^2*(a3 + b3)*x2*z1 + b1^2*(a2 + b2)*(a3 + b3)*x2*z1 + (a1 + b1)*(a2 + b2)*(a3 + b3)*x2*z1 + b2*(a2 + b2)*(a3 + b3)*x2*z1 + b1*b2*(a2 + b2)*(a3 + b3)*x2*z1 + 2*b3*(a3 + b3)*x2*z1 + b2*b3*(a3 + b3)*x2*z1 + b1*b2^2*x3*z1 + b1*(a2 + b2)*x3*z1 + b1*b2*(a2 + b2)*x3*z1 + b1*b2*b3*x3*z1 + b2*(a3 + b3)*x3*z1 + b2*b3*(a3 + b3)*x3*z1 + 2*b2*b3*y1*z1 + 2*b1*b2*b3*y1*z1 + b1^2*b2*b3*y1*z1 + b1*(a1 + b1)*b2*b3*y1*z1 + b2^2*b3*y1*z1 + b2*(a2 + b2)*b3*y1*z1 + b2^2*b3^2*y1*z1 + (a2 + b2)*b3^2*y1*z1 + b1*b2*(a3 + b3)*y1*z1 + (a1 + b1)*b2*(a3 + b3)*y1*z1 + b1*b2^2*(a3 + b3)*y1*z1 + (a2 + b2)*(a3 + b3)*y1*z1 + b1*(a2 + b2)*(a3 + b3)*y1*z1 + b2*(a2 + b2)*(a3 + b3)*y1*z1 + b2*b3*(a3 + b3)*y1*z1 + 3*b3*y2*z1 + b1*b3*y2*z1 + 2*b1^2*b3*y2*z1 + 2*(a1 + b1)*b3*y2*z1 + 2*b1*b2*b3*y2*z1 + 2*b1^2*b2*b3*y2*z1 + 2*(a1 + b1)*b2*b3*y2*z1 + 2*b1*b2^2*b3*y2*z1 + 2*(a2 + b2)*b3*y2*z1 + b2*(a2 + b2)*b3*y2*z1 + b3^2*y2*z1 + b2*b3^2*y2*z1 + b2^2*b3^2*y2*z1 + (a2 + b2)*b3^2*y2*z1 + b1^2*(a3 + b3)*y2*z1 + (a1 + b1)*(a3 + b3)*y2*z1 + 2*b2*(a3 + b3)*y2*z1 + b1^2*b2*(a3 + b3)*y2*z1 + (a1 + b1)*b2*(a3 + b3)*y2*z1 + b1*b2^2*(a3 + b3)*y2*z1 + b1^2*b2^2*(a3 + b3)*y2*z1 + (a1 + b1)*b2^2*(a3 + b3)*y2*z1 + (a2 + b2)*(a3 + b3)*y2*z1 + b1^2*(a2 + b2)*(a3 + b3)*y2*z1 + (a1 + b1)*(a2 + b2)*(a3 + b3)*y2*z1 + b2*(a2 + b2)*(a3 + b3)*y2*z1 + b1*b2*(a2 + b2)*(a3 + b3)*y2*z1 + 2*b3*(a3 + b3)*y2*z1 + b2*b3*(a3 + b3)*y2*z1 + b1*b2*y3*z1 + b1*b2^2*y3*z1 + b1*(a2 + b2)*y3*z1 + b1*b2*(a2 + b2)*y3*z1 + b2*b3*y3*z1 + b1*b2*b3*y3*z1 + b2*(a3 + b3)*y3*z1 + b2*b3*(a3 + b3)*y3*z1 + b1*b2*b3*z1*(1 + z1) + (b1^2*b2*b3*z1*(1 + z1))/2 + ((a1 + b1)*b2*b3*z1*(1 + z1))/2 + (3*b2^2*b3*z1*(1 + z1))/2 + (a2 + b2)*b3*z1*(1 + z1) + (b2*(a2 + b2)*b3*z1*(1 + z1))/2 + (b2^2*b3^2*z1*(1 + z1))/2 + ((a2 + b2)*b3^2*z1*(1 + z1))/2 + (b1*b2*(a3 + b3)*z1*(1 + z1))/2 + (b2*b3*(a3 + b3)*z1*(1 + z1))/2 + 2*b2*b3*x1*z2 + 4*b1*b2*b3*x1*z2 + 2*b1^2*b2*b3*x1*z2 + 2*(a1 + b1)*b2*b3*x1*z2 + b2^2*b3*x1*z2 + 2*b1*b2^2*b3*x1*z2 + b2*(a2 + b2)*b3*x1*z2 + b2^2*b3^2*x1*z2 + (a2 + b2)*b3^2*x1*z2 + b2^2*(a3 + b3)*x1*z2 + 2*b1*b2^2*(a3 + b3)*x1*z2 + b1^2*b2^2*(a3 + b3)*x1*z2 + (a1 + b1)*b2^2*(a3 + b3)*x1*z2 + b1*(a2 + b2)*(a3 + b3)*x1*z2 + b1^2*(a2 + b2)*(a3 + b3)*x1*z2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*x1*z2 + b2*(a2 + b2)*(a3 + b3)*x1*z2 + b1*b2*(a2 + b2)*(a3 + b3)*x1*z2 + b2*b3*(a3 + b3)*x1*z2 + 2*b2*b3*y1*z2 + 4*b1*b2*b3*y1*z2 + 2*b1^2*b2*b3*y1*z2 + 2*(a1 + b1)*b2*b3*y1*z2 + b2^2*b3*y1*z2 + 2*b1*b2^2*b3*y1*z2 + b2*(a2 + b2)*b3*y1*z2 + b2^2*b3^2*y1*z2 + (a2 + b2)*b3^2*y1*z2 + 2*b1*b2^2*(a3 + b3)*y1*z2 + b1^2*b2^2*(a3 + b3)*y1*z2 + (a1 + b1)*b2^2*(a3 + b3)*y1*z2 + (a2 + b2)*(a3 + b3)*y1*z2 + b1*(a2 + b2)*(a3 + b3)*y1*z2 + b1^2*(a2 + b2)*(a3 + b3)*y1*z2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*y1*z2 + b2*(a2 + b2)*(a3 + b3)*y1*z2 + b1*b2*(a2 + b2)*(a3 + b3)*y1*z2 + b2*b3*(a3 + b3)*y1*z2 + 2*b1*b2*b3*z1*z2 + 2*b1^2*b2*b3*z1*z2 + 2*(a1 + b1)*b2*b3*z1*z2 + b2^2*b3*z1*z2 + 2*b1*b2^2*b3*z1*z2 + b2*(a2 + b2)*b3*z1*z2 + b2^2*b3^2*z1*z2 + (a2 + b2)*b3^2*z1*z2 + b1*b2^2*(a3 + b3)*z1*z2 + b1^2*b2^2*(a3 + b3)*z1*z2 + (a1 + b1)*b2^2*(a3 + b3)*z1*z2 + b1^2*(a2 + b2)*(a3 + b3)*z1*z2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*z1*z2 + b1*b2*(a2 + b2)*(a3 + b3)*z1*z2 + b2*b3*(a3 + b3)*z1*z2 + b2*(a2 + b2)*x1*z3 + b1*b2*(a2 + b2)*x1*z3 + b2*b3*x1*z3 + b1*b2*b3*x1*z3 + b2*b3*(a3 + b3)*x1*z3 + b2*(a2 + b2)*y1*z3 + b1*b2*(a2 + b2)*y1*z3 + b2*b3*y1*z3 + b1*b2*b3*y1*z3 + b2*b3*(a3 + b3)*y1*z3 + b1*b2*(a2 + b2)*z1*z3 + b1*b2*b3*z1*z3 + b2*b3*(a3 + b3)*z1*z3;
end;
#####################################################################
C2in79:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];
return b2*b3*x1 + b1*b2*b3*x1 + (a1 + b1)*b2*b3*x1 + 2*b1*(a1 + b1)*b2*b3*x1 + b2^2*b3*x1 + b1^2*b2^2*b3*x1 + (a1 + b1)*b2^2*b3*x1 + b2*(a2 + b2)*b3*x1 + 2*b1*b2*(a2 + b2)*b3*x1 + b2^2*(a2 + b2)*b3*x1 + b2*b3^2*x1 + 2*b1*b2*b3^2*x1 + b1^2*b2*b3^2*x1 + (a1 + b1)*b2*b3^2*x1 + b2^2*b3^2*x1 + b1*b2^2*b3^2*x1 + b1*(a2 + b2)*b3^2*x1 + b2*(a2 + b2)*b3^2*x1 + b1*b2*(a3 + b3)*x1 + b1^2*b2*(a3 + b3)*x1 + b2*b3*(a3 + b3)*x1 + 2*b1*b2*b3*(a3 + b3)*x1 + b2^2*b3*(a3 + b3)*x1 + b2*b3*x1*(1 + x1) + (3*b1*b2*b3*x1*(1 + x1))/2 + (b1^2*b2*b3*x1*(1 + x1))/2 + ((a1 + b1)*b2*b3*x1*(1 + x1))/2 + (3*b2^2*b3*x1*(1 + x1))/2 + (a2 + b2)*b3*x1*(1 + x1) + (b2*(a2 + b2)*b3*x1*(1 + x1))/2 + (b2^2*b3^2*x1*(1 + x1))/2 + ((a2 + b2)*b3^2*x1*(1 + x1))/2 + (b2*(a3 + b3)*x1*(1 + x1))/2 + (b1*b2*(a3 + b3)*x1*(1 + x1))/2 + (b2*b3*(a3 + b3)*x1*(1 + x1))/2 + 3*b1*b3*x1*x2 + 2*b1^2*b3*x1*x2 + 2*(a1 + b1)*b3*x1*x2 + b2*b3*x1*x2 + 4*b1*b2*b3*x1*x2 + 2*b1^2*b2*b3*x1*x2 + 2*(a1 + b1)*b2*b3*x1*x2 + 2*b2^2*b3*x1*x2 + 2*b1*b2^2*b3*x1*x2 + 2*(a2 + b2)*b3*x1*x2 + b1*(a2 + b2)*b3*x1*x2 + b2*(a2 + b2)*b3*x1*x2 + b1*b2*(a2 + b2)*b3*x1*x2 + b2*b3^2*x1*x2 + b2^2*b3^2*x1*x2 + (a2 + b2)*b3^2*x1*x2 + (a3 + b3)*x1*x2 + b1*(a3 + b3)*x1*x2 + (a1 + b1)*(a3 + b3)*x1*x2 + b1*(a1 + b1)*(a3 + b3)*x1*x2 + b1^2*(a1 + b1)*(a3 + b3)*x1*x2 + b2*(a3 + b3)*x1*x2 + 4*b1*b2*(a3 + b3)*x1*x2 + b1^2*b2*(a3 + b3)*x1*x2 + (a1 + b1)*b2*(a3 + b3)*x1*x2 + 2*b1*(a1 + b1)*b2*(a3 + b3)*x1*x2 + 2*b1*b2^2*(a3 + b3)*x1*x2 + b1^2*b2^2*(a3 + b3)*x1*x2 + (a1 + b1)*b2^2*(a3 + b3)*x1*x2 + b1*(a2 + b2)*(a3 + b3)*x1*x2 + b1^2*(a2 + b2)*(a3 + b3)*x1*x2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*x1*x2 + b1*b2*(a2 + b2)*(a3 + b3)*x1*x2 + 2*b3*(a3 + b3)*x1*x2 + b2*b3*(a3 + b3)*x1*x2 + b1*b2*b3*(a3 + b3)*x1*x2 + (b1^2*(a3 + b3)*x1*(1 + x1)*x2)/2 + (b1*(a1 + b1)*(a3 + b3)*x1*(1 + x1)*x2)/2 + (b1*b2*(a3 + b3)*x1*(1 + x1)*x2)/2 + ((a1 + b1)*b2*(a3 + b3)*x1*(1 + x1)*x2)/2 + (b1*(a3 + b3)*x1*x2*(1 + x2))/2 + (b1^2*(a3 + b3)*x1*x2*(1 + x2))/2 + (b1*(a1 + b1)*(a3 + b3)*x1*x2*(1 + x2))/2 + (b1*b2*(a3 + b3)*x1*x2*(1 + x2))/2 + ((a1 + b1)*b2*(a3 + b3)*x1*x2*(1 + x2))/2 + b1*b2*x1*x3 + 2*b1*(a1 + b1)*b2*x1*x3 + b2^2*x1*x3 + 2*b1*b2^2*x1*x3 + b1*(a1 + b1)*b2^2*x1*x3 + 2*(a2 + b2)*x1*x3 + b1*(a2 + b2)*x1*x3 + 2*b2*(a2 + b2)*x1*x3 + 3*b1*b2*(a2 + b2)*x1*x3 + (a1 + b1)*b2*(a2 + b2)*x1*x3 + b1*(a1 + b1)*b2*(a2 + b2)*x1*x3 + b2*b3*x1*x3 + b1*b2*b3*x1*x3 + (a2 + b2)*b3*x1*x3 + 2*b2*(a2 + b2)*b3*x1*x3 + b2^2*(a2 + b2)*b3*x1*x3 + 2*b2*(a3 + b3)*x1*x3 + b2^2*(a3 + b3)*x1*x3 + (a2 + b2)*(a3 + b3)*x1*x3 + b2*(a2 + b2)*(a3 + b3)*x1*x3 + b2*b3*(a3 + b3)*x1*x3 + b1*b2*b3*(a3 + b3)*x1*x3 + b2^2*b3*(a3 + b3)*x1*x3 + b1*(a1 + b1)*x1*x2*x3 + b1*b2*x1*x2*x3 + 2*b1*(a1 + b1)*b2*x1*x2*x3 + b1*b2^2*x1*x2*x3 + b1*(a2 + b2)*x1*x2*x3 + b1*(a1 + b1)*(a2 + b2)*x1*x2*x3 + b1*b2*(a2 + b2)*x1*x2*x3 + b1*b2*x1*x3*(1 + x3) + (b1^2*b2*x1*x3*(1 + x3))/2 + (b2^2*x1*x3*(1 + x3))/2 + (b1^2*x2*x3*(1 + x3))/2 + (b1^2*b2*x2*x3*(1 + x3))/2 + (b1*(a2 + b2)*x2*x3*(1 + x3))/2 + (b1*(a3 + b3)*x2*x3*(1 + x3))/2 + ((a1 + b1)*(a3 + b3)*x2*x3*(1 + x3))/2 + b1*b2*b3*y1 + (a1 + b1)*b2*b3*y1 + 2*b1*(a1 + b1)*b2*b3*y1 + b1^2*b2^2*b3*y1 + (a1 + b1)*b2^2*b3*y1 + b2*(a2 + b2)*b3*y1 + 2*b1*b2*(a2 + b2)*b3*y1 + b2^2*(a2 + b2)*b3*y1 + 2*b1*b2*b3^2*y1 + b1^2*b2*b3^2*y1 + (a1 + b1)*b2*b3^2*y1 + b2^2*b3^2*y1 + b1*b2^2*b3^2*y1 + b1*(a2 + b2)*b3^2*y1 + b2*(a2 + b2)*b3^2*y1 + b1*b2*(a3 + b3)*y1 + b1^2*b2*(a3 + b3)*y1 + b2*b3*(a3 + b3)*y1 + 2*b1*b2*b3*(a3 + b3)*y1 + b2^2*b3*(a3 + b3)*y1 + 5*b2*b3*x1*y1 + 2*b1*b2*b3*x1*y1 + b2^2*b3*x1*y1 + b2*(a2 + b2)*b3*x1*y1 + b2^2*b3^2*x1*y1 + (a2 + b2)*b3^2*x1*y1 + b2^2*(a3 + b3)*x1*y1 + (a2 + b2)*(a3 + b3)*x1*y1 + b2*b3*(a3 + b3)*x1*y1 + (b1*b2*b3*x1*(1 + x1)*y1)/2 + (b2*(a3 + b3)*x1*(1 + x1)*y1)/2 + 2*b3*x2*y1 + 3*b1*b3*x2*y1 + 2*b1^2*b3*x2*y1 + 2*(a1 + b1)*b3*x2*y1 + 3*b2*b3*x2*y1 + 4*b1*b2*b3*x2*y1 + 2*b1^2*b2*b3*x2*y1 + 2*(a1 + b1)*b2*b3*x2*y1 + 2*b2^2*b3*x2*y1 + 2*b1*b2^2*b3*x2*y1 + 2*(a2 + b2)*b3*x2*y1 + b1*(a2 + b2)*b3*x2*y1 + b2*(a2 + b2)*b3*x2*y1 + b1*b2*(a2 + b2)*b3*x2*y1 + b2*b3^2*x2*y1 + b2^2*b3^2*x2*y1 + (a2 + b2)*b3^2*x2*y1 + 2*(a3 + b3)*x2*y1 + 2*b1*(a3 + b3)*x2*y1 + (a1 + b1)*(a3 + b3)*x2*y1 + b1*(a1 + b1)*(a3 + b3)*x2*y1 + b1^2*(a1 + b1)*(a3 + b3)*x2*y1 + 2*b2*(a3 + b3)*x2*y1 + 4*b1*b2*(a3 + b3)*x2*y1 + 2*b1^2*b2*(a3 + b3)*x2*y1 + (a1 + b1)*b2*(a3 + b3)*x2*y1 + 2*b1*(a1 + b1)*b2*(a3 + b3)*x2*y1 + b2^2*(a3 + b3)*x2*y1 + 2*b1*b2^2*(a3 + b3)*x2*y1 + b1^2*b2^2*(a3 + b3)*x2*y1 + (a1 + b1)*b2^2*(a3 + b3)*x2*y1 + (a2 + b2)*(a3 + b3)*x2*y1 + b1*(a2 + b2)*(a3 + b3)*x2*y1 + b1^2*(a2 + b2)*(a3 + b3)*x2*y1 + (a1 + b1)*(a2 + b2)*(a3 + b3)*x2*y1 + b1*b2*(a2 + b2)*(a3 + b3)*x2*y1 + 2*b3*(a3 + b3)*x2*y1 + b2*b3*(a3 + b3)*x2*y1 + b1*b2*b3*(a3 + b3)*x2*y1 + b1*(a3 + b3)*x1*x2*y1 + b2*(a3 + b3)*x1*x2*y1 + (b2*b3*x2*(1 + x2)*y1)/2 + ((a3 + b3)*x2*(1 + x2)*y1)/2 + (b1*(a3 + b3)*x2*(1 + x2)*y1)/2 + (b1^2*(a3 + b3)*x2*(1 + x2)*y1)/2 + (b1*(a1 + b1)*(a3 + b3)*x2*(1 + x2)*y1)/2 + (b2*(a3 + b3)*x2*(1 + x2)*y1)/2 + b1*b2*(a3 + b3)*x2*(1 + x2)*y1 + ((a1 + b1)*b2*(a3 + b3)*x2*(1 + x2)*y1)/2 + b2*x3*y1 + b1*b2*x3*y1 + 2*b1*(a1 + b1)*b2*x3*y1 + 2*b2^2*x3*y1 + b1*b2^2*x3*y1 + b1*(a1 + b1)*b2^2*x3*y1 + 2*(a2 + b2)*x3*y1 + b1*(a2 + b2)*x3*y1 + 3*b2*(a2 + b2)*x3*y1 + 2*b1*b2*(a2 + b2)*x3*y1 + (a1 + b1)*b2*(a2 + b2)*x3*y1 + b1*(a1 + b1)*b2*(a2 + b2)*x3*y1 + b2^2*(a2 + b2)*x3*y1 + 2*b2*b3*x3*y1 + b1*b2*b3*x3*y1 + b2^2*b3*x3*y1 + (a2 + b2)*b3*x3*y1 + 2*b2*(a2 + b2)*b3*x3*y1 + b2*(a3 + b3)*x3*y1 + (a2 + b2)*(a3 + b3)*x3*y1 + b2*b3*(a3 + b3)*x3*y1 + b1*b2*b3*(a3 + b3)*x3*y1 + b2^2*b3*(a3 + b3)*x3*y1 + b1*b2*x1*x3*y1 + b1*x2*x3*y1 + b1*(a1 + b1)*x2*x3*y1 + b1*b2*x2*x3*y1 + 2*b1*(a1 + b1)*b2*x2*x3*y1 + b1*b2^2*x2*x3*y1 + b1*(a1 + b1)*(a2 + b2)*x2*x3*y1 + 2*b2*(a2 + b2)*x2*x3*y1 + b1*b2*(a2 + b2)*x2*x3*y1 + b2^2*b3*x2*x3*y1 + b2*(a2 + b2)*b3*x2*x3*y1 + (a3 + b3)*x2*x3*y1 + 2*b2*(a3 + b3)*x2*x3*y1 + (a2 + b2)*(a3 + b3)*x2*x3*y1 + (b2*x3*(1 + x3)*y1)/2 + b1*b2*x3*(1 + x3)*y1 + (b1^2*b2*x3*(1 + x3)*y1)/2 + (b2^2*x3*(1 + x3)*y1)/2 + (b2*b3*x3*(1 + x3)*y1)/2 + (3*b2*b3*y1*(1 + y1))/2 + (3*b1*b2*b3*y1*(1 + y1))/2 + (b1^2*b2*b3*y1*(1 + y1))/2 + ((a1 + b1)*b2*b3*y1*(1 + y1))/2 + (3*b2^2*b3*y1*(1 + y1))/2 + (a2 + b2)*b3*y1*(1 + y1) + (b2*(a2 + b2)*b3*y1*(1 + y1))/2 + (b2^2*b3^2*y1*(1 + y1))/2 + ((a2 + b2)*b3^2*y1*(1 + y1))/2 + (b2*(a3 + b3)*y1*(1 + y1))/2 + (b1*b2*(a3 + b3)*y1*(1 + y1))/2 + (b2*b3*(a3 + b3)*y1*(1 + y1))/2 + (b1*b2*b3*x1*y1*(1 + y1))/2 + (b2*(a3 + b3)*x1*y1*(1 + y1))/2 + (b1^2*(a3 + b3)*x2*y1*(1 + y1))/2 + (b1*(a1 + b1)*(a3 + b3)*x2*y1*(1 + y1))/2 + (b2*(a3 + b3)*x2*y1*(1 + y1))/2 + b1*b2*(a3 + b3)*x2*y1*(1 + y1) + ((a1 + b1)*b2*(a3 + b3)*x2*y1*(1 + y1))/2 + b3*x1*y2 + 4*b1*b3*x1*y2 + 2*b1^2*b3*x1*y2 + 2*(a1 + b1)*b3*x1*y2 + 3*b2*b3*x1*y2 + 5*b1*b2*b3*x1*y2 + 2*b1^2*b2*b3*x1*y2 + 2*(a1 + b1)*b2*b3*x1*y2 + 2*b2^2*b3*x1*y2 + 2*b1*b2^2*b3*x1*y2 + 2*(a2 + b2)*b3*x1*y2 + b1*(a2 + b2)*b3*x1*y2 + b2*(a2 + b2)*b3*x1*y2 + b1*b2*(a2 + b2)*b3*x1*y2 + b3^2*x1*y2 + b2*b3^2*x1*y2 + b2^2*b3^2*x1*y2 + (a2 + b2)*b3^2*x1*y2 + 3*b1*(a3 + b3)*x1*y2 + 2*b1^2*(a3 + b3)*x1*y2 + 2*(a1 + b1)*(a3 + b3)*x1*y2 + b1*(a1 + b1)*(a3 + b3)*x1*y2 + b1^2*(a1 + b1)*(a3 + b3)*x1*y2 + 2*b2*(a3 + b3)*x1*y2 + 3*b1*b2*(a3 + b3)*x1*y2 + b1^2*b2*(a3 + b3)*x1*y2 + (a1 + b1)*b2*(a3 + b3)*x1*y2 + 2*b1*(a1 + b1)*b2*(a3 + b3)*x1*y2 + b2^2*(a3 + b3)*x1*y2 + 2*b1*b2^2*(a3 + b3)*x1*y2 + b1^2*b2^2*(a3 + b3)*x1*y2 + (a1 + b1)*b2^2*(a3 + b3)*x1*y2 + (a2 + b2)*(a3 + b3)*x1*y2 + b1*(a2 + b2)*(a3 + b3)*x1*y2 + b1^2*(a2 + b2)*(a3 + b3)*x1*y2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*x1*y2 + b1*b2*(a2 + b2)*(a3 + b3)*x1*y2 + 2*b3*(a3 + b3)*x1*y2 + b2*b3*(a3 + b3)*x1*y2 + b1*b2*b3*(a3 + b3)*x1*y2 + (b1*(a3 + b3)*x1*(1 + x1)*y2)/2 + (b1^2*(a3 + b3)*x1*(1 + x1)*y2)/2 + (b1*(a1 + b1)*(a3 + b3)*x1*(1 + x1)*y2)/2 + (b2*(a3 + b3)*x1*(1 + x1)*y2)/2 + (b1*b2*(a3 + b3)*x1*(1 + x1)*y2)/2 + ((a1 + b1)*b2*(a3 + b3)*x1*(1 + x1)*y2)/2 + b2*(a3 + b3)*x1*x2*y2 + (b1*b2*(a3 + b3)*x2*(1 + x2)*y2)/2 + b1*b2*x1*x3*y2 + b1*(a1 + b1)*b2*x1*x3*y2 + b1*b2^2*x1*x3*y2 + b1*(a2 + b2)*x1*x3*y2 + b1*(a1 + b1)*(a2 + b2)*x1*x3*y2 + b1*b2*(a2 + b2)*x1*x3*y2 + (b1*x3*(1 + x3)*y2)/2 + (b1^2*x3*(1 + x3)*y2)/2 + (b1^2*b2*x3*(1 + x3)*y2)/2 + (b1*(a2 + b2)*x3*(1 + x3)*y2)/2 + (b1*(a3 + b3)*x3*(1 + x3)*y2)/2 + ((a1 + b1)*(a3 + b3)*x3*(1 + x3)*y2)/2 + 3*b3*y1*y2 + 4*b1*b3*y1*y2 + 2*b1^2*b3*y1*y2 + 2*(a1 + b1)*b3*y1*y2 + 3*b2*b3*y1*y2 + 5*b1*b2*b3*y1*y2 + 2*b1^2*b2*b3*y1*y2 + 2*(a1 + b1)*b2*b3*y1*y2 + 2*b2^2*b3*y1*y2 + 2*b1*b2^2*b3*y1*y2 + 2*(a2 + b2)*b3*y1*y2 + b1*(a2 + b2)*b3*y1*y2 + b2*(a2 + b2)*b3*y1*y2 + b1*b2*(a2 + b2)*b3*y1*y2 + b3^2*y1*y2 + b2*b3^2*y1*y2 + b2^2*b3^2*y1*y2 + (a2 + b2)*b3^2*y1*y2 + 2*(a3 + b3)*y1*y2 + 2*b1*(a3 + b3)*y1*y2 + 2*b1^2*(a3 + b3)*y1*y2 + 2*(a1 + b1)*(a3 + b3)*y1*y2 + b1*(a1 + b1)*(a3 + b3)*y1*y2 + b1^2*(a1 + b1)*(a3 + b3)*y1*y2 + b2*(a3 + b3)*y1*y2 + 3*b1*b2*(a3 + b3)*y1*y2 + 2*b1^2*b2*(a3 + b3)*y1*y2 + (a1 + b1)*b2*(a3 + b3)*y1*y2 + 2*b1*(a1 + b1)*b2*(a3 + b3)*y1*y2 + 2*b1*b2^2*(a3 + b3)*y1*y2 + b1^2*b2^2*(a3 + b3)*y1*y2 + (a1 + b1)*b2^2*(a3 + b3)*y1*y2 + b1*(a2 + b2)*(a3 + b3)*y1*y2 + b1^2*(a2 + b2)*(a3 + b3)*y1*y2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*y1*y2 + b1*b2*(a2 + b2)*(a3 + b3)*y1*y2 + 2*b3*(a3 + b3)*y1*y2 + b2*b3*(a3 + b3)*y1*y2 + b1*b2*b3*(a3 + b3)*y1*y2 + b1*(a3 + b3)*x1*y1*y2 + b2*(a3 + b3)*x1*y1*y2 + b2*(a3 + b3)*x2*y1*y2 + b2*x3*y1*y2 + b1*(a1 + b1)*b2*x3*y1*y2 + b1*b2^2*x3*y1*y2 + b1*(a1 + b1)*(a2 + b2)*x3*y1*y2 + b2*(a2 + b2)*x3*y1*y2 + b1*b2*(a2 + b2)*x3*y1*y2 + b2*b3*x3*y1*y2 + b2*(a2 + b2)*b3*x3*y1*y2 + b2*(a3 + b3)*x3*y1*y2 + (a2 + b2)*(a3 + b3)*x3*y1*y2 + (b1*(a3 + b3)*y1*(1 + y1)*y2)/2 + (b1^2*(a3 + b3)*y1*(1 + y1)*y2)/2 + (b1*(a1 + b1)*(a3 + b3)*y1*(1 + y1)*y2)/2 + b1*b2*(a3 + b3)*y1*(1 + y1)*y2 + ((a1 + b1)*b2*(a3 + b3)*y1*(1 + y1)*y2)/2 + (b1^2*(a3 + b3)*x1*y2*(1 + y2))/2 + (b1*(a1 + b1)*(a3 + b3)*x1*y2*(1 + y2))/2 + (b2*(a3 + b3)*x1*y2*(1 + y2))/2 + (b1*b2*(a3 + b3)*x1*y2*(1 + y2))/2 + ((a1 + b1)*b2*(a3 + b3)*x1*y2*(1 + y2))/2 + (b1*b2*(a3 + b3)*x2*y2*(1 + y2))/2 + (b2*b3*y1*y2*(1 + y2))/2 + ((a3 + b3)*y1*y2*(1 + y2))/2 + (b1^2*(a3 + b3)*y1*y2*(1 + y2))/2 + (b1*(a1 + b1)*(a3 + b3)*y1*y2*(1 + y2))/2 + b1*b2*(a3 + b3)*y1*y2*(1 + y2) + ((a1 + b1)*b2*(a3 + b3)*y1*y2*(1 + y2))/2 + 2*b2*x1*y3 + 2*b1*b2*x1*y3 + (a1 + b1)*b2*x1*y3 + b1*(a1 + b1)*b2*x1*y3 + 2*b2^2*x1*y3 + 2*b1*b2^2*x1*y3 + b1*(a1 + b1)*b2^2*x1*y3 + (a2 + b2)*x1*y3 + b1*(a2 + b2)*x1*y3 + 3*b2*(a2 + b2)*x1*y3 + 3*b1*b2*(a2 + b2)*x1*y3 + (a1 + b1)*b2*(a2 + b2)*x1*y3 + b1*(a1 + b1)*b2*(a2 + b2)*x1*y3 + 4*b2*b3*x1*y3 + 2*b1*b2*b3*x1*y3 + (a2 + b2)*b3*x1*y3 + 2*b2*(a2 + b2)*b3*x1*y3 + b2^2*(a2 + b2)*b3*x1*y3 + 3*b2*(a3 + b3)*x1*y3 + b2^2*(a3 + b3)*x1*y3 + (a2 + b2)*(a3 + b3)*x1*y3 + b2*(a2 + b2)*(a3 + b3)*x1*y3 + b2*b3*(a3 + b3)*x1*y3 + b1*b2*b3*(a3 + b3)*x1*y3 + b2^2*b3*(a3 + b3)*x1*y3 + b1*x1*x2*y3 + 2*b1*b2*x1*x2*y3 + 2*b1*(a1 + b1)*b2*x1*x2*y3 + b1*b2^2*x1*x2*y3 + b1*(a2 + b2)*x1*x2*y3 + b1*(a1 + b1)*(a2 + b2)*x1*x2*y3 + b1*b2*(a2 + b2)*x1*x2*y3 + b1*b2*x1*x3*y3 + (a1 + b1)*b2*x1*x3*y3 + b1*(a1 + b1)*b2*x1*x3*y3 + b2^2*x1*x3*y3 + b1*(a2 + b2)*x1*x3*y3 + b2*(a2 + b2)*x1*x3*y3 + 2*b2*y1*y3 + 3*b1*b2*y1*y3 + (a1 + b1)*b2*y1*y3 + b1*(a1 + b1)*b2*y1*y3 + b2^2*y1*y3 + b1*b2^2*y1*y3 + b1*(a1 + b1)*b2^2*y1*y3 + (a2 + b2)*y1*y3 + b1*(a2 + b2)*y1*y3 + 3*b2*(a2 + b2)*y1*y3 + 2*b1*b2*(a2 + b2)*y1*y3 + (a1 + b1)*b2*(a2 + b2)*y1*y3 + b1*(a1 + b1)*b2*(a2 + b2)*y1*y3 + b2^2*(a2 + b2)*y1*y3 + 3*b2*b3*y1*y3 + 2*b1*b2*b3*y1*y3 + (a2 + b2)*b3*y1*y3 + 2*b2*(a2 + b2)*b3*y1*y3 + b2*(a3 + b3)*y1*y3 + (a2 + b2)*(a3 + b3)*y1*y3 + b2*b3*(a3 + b3)*y1*y3 + b1*b2*b3*(a3 + b3)*y1*y3 + b2^2*b3*(a3 + b3)*y1*y3 + b1*b2*x1*y1*y3 + b1*x2*y1*y3 + 2*b1*(a1 + b1)*b2*x2*y1*y3 + b1*b2^2*x2*y1*y3 + (a2 + b2)*x2*y1*y3 + b1*(a1 + b1)*(a2 + b2)*x2*y1*y3 + 2*b2*(a2 + b2)*x2*y1*y3 + b1*b2*(a2 + b2)*x2*y1*y3 + b2*b3*x2*y1*y3 + b2^2*b3*x2*y1*y3 + b2*(a2 + b2)*b3*x2*y1*y3 + 2*b2*(a3 + b3)*x2*y1*y3 + (a2 + b2)*(a3 + b3)*x2*y1*y3 + b2*x3*y1*y3 + 2*b1*b2*x3*y1*y3 + (a1 + b1)*b2*x3*y1*y3 + b1*(a1 + b1)*b2*x3*y1*y3 + b2^2*x3*y1*y3 + b1*(a2 + b2)*x3*y1*y3 + b2^2*b3*x3*y1*y3 + b2*(a3 + b3)*x3*y1*y3 + b1*x1*y2*y3 + b1*(a1 + b1)*x1*y2*y3 + 2*b1*b2*x1*y2*y3 + b1*(a1 + b1)*b2*x1*y2*y3 + b1*b2^2*x1*y2*y3 + b1*(a2 + b2)*x1*y2*y3 + b1*(a1 + b1)*(a2 + b2)*x1*y2*y3 + b1*b2*(a2 + b2)*x1*y2*y3 + y1*y2*y3 + b1*(a1 + b1)*y1*y2*y3 + b2*y1*y2*y3 + b1*b2*y1*y2*y3 + b1*(a1 + b1)*b2*y1*y2*y3 + b1*b2^2*y1*y2*y3 + (a2 + b2)*y1*y2*y3 + b1*(a1 + b1)*(a2 + b2)*y1*y2*y3 + b2*(a2 + b2)*y1*y2*y3 + b1*b2*(a2 + b2)*y1*y2*y3 + b2*(a2 + b2)*b3*y1*y2*y3 + (a3 + b3)*y1*y2*y3 + b2*(a3 + b3)*y1*y2*y3 + (a2 + b2)*(a3 + b3)*y1*y2*y3 + b1*b2*x1*y3*(1 + y3) + (b1^2*b2*x1*y3*(1 + y3))/2 + (b2^2*x1*y3*(1 + y3))/2 + b1*x2*y3*(1 + y3) + (b1^2*x2*y3*(1 + y3))/2 + ((a1 + b1)*x2*y3*(1 + y3))/2 + (b1^2*b2*x2*y3*(1 + y3))/2 + (b1*(a2 + b2)*x2*y3*(1 + y3))/2 + (b1*(a3 + b3)*x2*y3*(1 + y3))/2 + ((a1 + b1)*(a3 + b3)*x2*y3*(1 + y3))/2 + (b2*y1*y3*(1 + y3))/2 + b1*b2*y1*y3*(1 + y3) + (b1^2*b2*y1*y3*(1 + y3))/2 + (b2^2*y1*y3*(1 + y3))/2 + (b2*b3*y1*y3*(1 + y3))/2 + (b1*y2*y3*(1 + y3))/2 + (b1^2*y2*y3*(1 + y3))/2 + ((a1 + b1)*y2*y3*(1 + y3))/2 + (b1^2*b2*y2*y3*(1 + y3))/2 + (b1*(a2 + b2)*y2*y3*(1 + y3))/2 + (b1*(a3 + b3)*y2*y3*(1 + y3))/2 + ((a1 + b1)*(a3 + b3)*y2*y3*(1 + y3))/2 + b1*b2*b3*z1 + 2*b1*(a1 + b1)*b2*b3*z1 + b2^2*b3*z1 + b1*b2^2*b3*z1 + b1^2*b2^2*b3*z1 + (a1 + b1)*b2^2*b3*z1 + 2*b1*b2*(a2 + b2)*b3*z1 + b2^2*(a2 + b2)*b3*z1 + b1*b2*b3^2*z1 + b1^2*b2*b3^2*z1 + (a1 + b1)*b2*b3^2*z1 + b2^2*b3^2*z1 + b1*b2^2*b3^2*z1 + b1*(a2 + b2)*b3^2*z1 + b2*(a2 + b2)*b3^2*z1 + b1^2*b2*(a3 + b3)*z1 + 2*b1*b2*b3*(a3 + b3)*z1 + b2^2*b3*(a3 + b3)*z1 + 2*b2*b3*x1*z1 + 2*b1*b2*b3*x1*z1 + 2*(a1 + b1)*b2*b3*x1*z1 + b1*(a1 + b1)*b2*b3*x1*z1 + b2^2*b3*x1*z1 + (a2 + b2)*b3*x1*z1 + 2*b2*(a2 + b2)*b3*x1*z1 + b2^2*b3^2*x1*z1 + (a2 + b2)*b3^2*x1*z1 + b2*(a3 + b3)*x1*z1 + b1*b2*(a3 + b3)*x1*z1 + (a1 + b1)*b2*(a3 + b3)*x1*z1 + b2^2*(a3 + b3)*x1*z1 + b1*b2^2*(a3 + b3)*x1*z1 + b1*(a2 + b2)*(a3 + b3)*x1*z1 + b2*(a2 + b2)*(a3 + b3)*x1*z1 + 2*b2*b3*(a3 + b3)*x1*z1 + b3*x2*z1 + b1*b3*x2*z1 + 2*b1^2*b3*x2*z1 + 2*(a1 + b1)*b3*x2*z1 + b2*b3*x2*z1 + 2*b1*b2*b3*x2*z1 + 2*b1^2*b2*b3*x2*z1 + 2*(a1 + b1)*b2*b3*x2*z1 + 2*b1*b2^2*b3*x2*z1 + 3*(a2 + b2)*b3*x2*z1 + b1*(a2 + b2)*b3*x2*z1 + 2*b2*(a2 + b2)*b3*x2*z1 + b1*b2*(a2 + b2)*b3*x2*z1 + b2*b3^2*x2*z1 + b2^2*b3^2*x2*z1 + (a2 + b2)*b3^2*x2*z1 + (a3 + b3)*x2*z1 + b1*(a3 + b3)*x2*z1 + b1*(a1 + b1)*(a3 + b3)*x2*z1 + 3*b2*(a3 + b3)*x2*z1 + 2*b1*b2*(a3 + b3)*x2*z1 + b1^2*b2*(a3 + b3)*x2*z1 + 2*(a1 + b1)*b2*(a3 + b3)*x2*z1 + b1*(a1 + b1)*b2*(a3 + b3)*x2*z1 + b2^2*(a3 + b3)*x2*z1 + b1*b2^2*(a3 + b3)*x2*z1 + b1^2*b2^2*(a3 + b3)*x2*z1 + (a1 + b1)*b2^2*(a3 + b3)*x2*z1 + b1^2*(a2 + b2)*(a3 + b3)*x2*z1 + (a1 + b1)*(a2 + b2)*(a3 + b3)*x2*z1 + b2*(a2 + b2)*(a3 + b3)*x2*z1 + b1*b2*(a2 + b2)*(a3 + b3)*x2*z1 + 2*b3*(a3 + b3)*x2*z1 + 2*b2*b3*(a3 + b3)*x2*z1 + b1*b2*b3*(a3 + b3)*x2*z1 + b1*(a3 + b3)*x1*x2*z1 + b1^2*(a3 + b3)*x1*x2*z1 + b1*(a1 + b1)*(a3 + b3)*x1*x2*z1 + b1*b2*(a3 + b3)*x1*x2*z1 + (a1 + b1)*b2*(a3 + b3)*x1*x2*z1 + b1*b2*x3*z1 + (a1 + b1)*b2*x3*z1 + 2*b1*(a1 + b1)*b2*x3*z1 + 2*b1*b2^2*x3*z1 + b1*(a1 + b1)*b2^2*x3*z1 + (a2 + b2)*x3*z1 + b1*(a2 + b2)*x3*z1 + b2*(a2 + b2)*x3*z1 + 3*b1*b2*(a2 + b2)*x3*z1 + (a1 + b1)*b2*(a2 + b2)*x3*z1 + b1*(a1 + b1)*b2*(a2 + b2)*x3*z1 + b1*b2*b3*x3*z1 + (a2 + b2)*b3*x3*z1 + 2*b2*(a2 + b2)*b3*x3*z1 + b2^2*(a2 + b2)*b3*x3*z1 + 2*b2*(a3 + b3)*x3*z1 + b2^2*(a3 + b3)*x3*z1 + (a2 + b2)*(a3 + b3)*x3*z1 + b2*(a2 + b2)*(a3 + b3)*x3*z1 + 2*b2*b3*(a3 + b3)*x3*z1 + b1*b2*b3*(a3 + b3)*x3*z1 + b2^2*b3*(a3 + b3)*x3*z1 + b1*b2*x1*x3*z1 + (a1 + b1)*b2*x1*x3*z1 + b2^2*x1*x3*z1 + b2*(a2 + b2)*x1*x3*z1 + b1*(a1 + b1)*x2*x3*z1 + b2*x2*x3*z1 + b1*b2*x2*x3*z1 + 2*b1*(a1 + b1)*b2*x2*x3*z1 + b2^2*x2*x3*z1 + b1*b2^2*x2*x3*z1 + (a2 + b2)*x2*x3*z1 + b1*(a2 + b2)*x2*x3*z1 + b1*(a1 + b1)*(a2 + b2)*x2*x3*z1 + b2*(a2 + b2)*x2*x3*z1 + b1*b2*(a2 + b2)*x2*x3*z1 + b1*b2*x3*(1 + x3)*z1 + (b1^2*b2*x3*(1 + x3)*z1)/2 + (b2^2*x3*(1 + x3)*z1)/2 + 3*b2*b3*y1*z1 + 3*b1*b2*b3*y1*z1 + b1^2*b2*b3*y1*z1 + (a1 + b1)*b2*b3*y1*z1 + b1*(a1 + b1)*b2*b3*y1*z1 + b2^2*b3*y1*z1 + (a2 + b2)*b3*y1*z1 + 2*b2*(a2 + b2)*b3*y1*z1 + b2^2*b3^2*y1*z1 + (a2 + b2)*b3^2*y1*z1 + 2*b2*(a3 + b3)*y1*z1 + 2*b1*b2*(a3 + b3)*y1*z1 + (a1 + b1)*b2*(a3 + b3)*y1*z1 + b1*b2^2*(a3 + b3)*y1*z1 + (a2 + b2)*(a3 + b3)*y1*z1 + b1*(a2 + b2)*(a3 + b3)*y1*z1 + b2*(a2 + b2)*(a3 + b3)*y1*z1 + 2*b2*b3*(a3 + b3)*y1*z1 + b1*b2*b3*x1*y1*z1 + b2*(a3 + b3)*x1*y1*z1 + b1*(a3 + b3)*x2*y1*z1 + b1^2*(a3 + b3)*x2*y1*z1 + b1*(a1 + b1)*(a3 + b3)*x2*y1*z1 + b2*(a3 + b3)*x2*y1*z1 + 2*b1*b2*(a3 + b3)*x2*y1*z1 + (a1 + b1)*b2*(a3 + b3)*x2*y1*z1 + b2*x3*y1*z1 + 2*b1*b2*x3*y1*z1 + (a1 + b1)*b2*x3*y1*z1 + b2^2*x3*y1*z1 + b2*(a2 + b2)*x3*y1*z1 + 3*b3*y2*z1 + 2*b1*b3*y2*z1 + 2*b1^2*b3*y2*z1 + 2*(a1 + b1)*b3*y2*z1 + 3*b1*b2*b3*y2*z1 + 2*b1^2*b2*b3*y2*z1 + 2*(a1 + b1)*b2*b3*y2*z1 + 2*b1*b2^2*b3*y2*z1 + 3*(a2 + b2)*b3*y2*z1 + b1*(a2 + b2)*b3*y2*z1 + 2*b2*(a2 + b2)*b3*y2*z1 + b1*b2*(a2 + b2)*b3*y2*z1 + b3^2*y2*z1 + b2*b3^2*y2*z1 + b2^2*b3^2*y2*z1 + (a2 + b2)*b3^2*y2*z1 + (a3 + b3)*y2*z1 + 2*b1*(a3 + b3)*y2*z1 + b1^2*(a3 + b3)*y2*z1 + (a1 + b1)*(a3 + b3)*y2*z1 + b1*(a1 + b1)*(a3 + b3)*y2*z1 + 4*b2*(a3 + b3)*y2*z1 + 2*b1*b2*(a3 + b3)*y2*z1 + b1^2*b2*(a3 + b3)*y2*z1 + 2*(a1 + b1)*b2*(a3 + b3)*y2*z1 + b1*(a1 + b1)*b2*(a3 + b3)*y2*z1 + b1*b2^2*(a3 + b3)*y2*z1 + b1^2*b2^2*(a3 + b3)*y2*z1 + (a1 + b1)*b2^2*(a3 + b3)*y2*z1 + (a2 + b2)*(a3 + b3)*y2*z1 + b1^2*(a2 + b2)*(a3 + b3)*y2*z1 + (a1 + b1)*(a2 + b2)*(a3 + b3)*y2*z1 + b2*(a2 + b2)*(a3 + b3)*y2*z1 + b1*b2*(a2 + b2)*(a3 + b3)*y2*z1 + 2*b3*(a3 + b3)*y2*z1 + 2*b2*b3*(a3 + b3)*y2*z1 + b1*b2*b3*(a3 + b3)*y2*z1 + b1^2*(a3 + b3)*x1*y2*z1 + b1*(a1 + b1)*(a3 + b3)*x1*y2*z1 + b2*(a3 + b3)*x1*y2*z1 + b1*b2*(a3 + b3)*x1*y2*z1 + (a1 + b1)*b2*(a3 + b3)*x1*y2*z1 + b2*(a3 + b3)*x2*y2*z1 + b1*b2*(a3 + b3)*x2*y2*z1 + b1*b2*x3*y2*z1 + b1*(a1 + b1)*b2*x3*y2*z1 + b2^2*x3*y2*z1 + b1*b2^2*x3*y2*z1 + b1*(a2 + b2)*x3*y2*z1 + b1*(a1 + b1)*(a2 + b2)*x3*y2*z1 + b2*(a2 + b2)*x3*y2*z1 + b1*b2*(a2 + b2)*x3*y2*z1 + b1^2*(a3 + b3)*y1*y2*z1 + b1*(a1 + b1)*(a3 + b3)*y1*y2*z1 + 2*b1*b2*(a3 + b3)*y1*y2*z1 + (a1 + b1)*b2*(a3 + b3)*y1*y2*z1 + b2*y3*z1 + 2*b1*b2*y3*z1 + b1*(a1 + b1)*b2*y3*z1 + b2^2*y3*z1 + 2*b1*b2^2*y3*z1 + b1*(a1 + b1)*b2^2*y3*z1 + b1*(a2 + b2)*y3*z1 + 2*b2*(a2 + b2)*y3*z1 + 3*b1*b2*(a2 + b2)*y3*z1 + (a1 + b1)*b2*(a2 + b2)*y3*z1 + b1*(a1 + b1)*b2*(a2 + b2)*y3*z1 + 2*b2*b3*y3*z1 + 2*b1*b2*b3*y3*z1 + (a2 + b2)*b3*y3*z1 + 2*b2*(a2 + b2)*b3*y3*z1 + b2^2*(a2 + b2)*b3*y3*z1 + 3*b2*(a3 + b3)*y3*z1 + b2^2*(a3 + b3)*y3*z1 + (a2 + b2)*(a3 + b3)*y3*z1 + b2*(a2 + b2)*(a3 + b3)*y3*z1 + 2*b2*b3*(a3 + b3)*y3*z1 + b1*b2*b3*(a3 + b3)*y3*z1 + b2^2*b3*(a3 + b3)*y3*z1 + b2*x1*y3*z1 + b1*b2*x1*y3*z1 + (a1 + b1)*b2*x1*y3*z1 + b2^2*x1*y3*z1 + b2*(a2 + b2)*x1*y3*z1 + x2*y3*z1 + b1*x2*y3*z1 + 2*b2*x2*y3*z1 + 2*b1*b2*x2*y3*z1 + 2*b1*(a1 + b1)*b2*x2*y3*z1 + b2^2*x2*y3*z1 + b1*b2^2*x2*y3*z1 + (a2 + b2)*x2*y3*z1 + b1*(a2 + b2)*x2*y3*z1 + b1*(a1 + b1)*(a2 + b2)*x2*y3*z1 + b2*(a2 + b2)*x2*y3*z1 + b1*b2*(a2 + b2)*x2*y3*z1 + b2*x3*y3*z1 + b1*b2*x3*y3*z1 + (a1 + b1)*b2*x3*y3*z1 + b1*(a1 + b1)*b2*x3*y3*z1 + b2^2*x3*y3*z1 + (a2 + b2)*x3*y3*z1 + b1*(a2 + b2)*x3*y3*z1 + b2*(a2 + b2)*x3*y3*z1 + 2*b1*b2*y1*y3*z1 + (a1 + b1)*b2*y1*y3*z1 + b2^2*y1*y3*z1 + b2*(a2 + b2)*y1*y3*z1 + b1*y2*y3*z1 + b1*(a1 + b1)*y2*y3*z1 + b2*y2*y3*z1 + 2*b1*b2*y2*y3*z1 + b1*(a1 + b1)*b2*y2*y3*z1 + b2^2*y2*y3*z1 + b1*b2^2*y2*y3*z1 + b1*(a2 + b2)*y2*y3*z1 + b1*(a1 + b1)*(a2 + b2)*y2*y3*z1 + b2*(a2 + b2)*y2*y3*z1 + b1*b2*(a2 + b2)*y2*y3*z1 + b1*b2*y3*(1 + y3)*z1 + (b1^2*b2*y3*(1 + y3)*z1)/2 + (b2^2*y3*(1 + y3)*z1)/2 + b1*b2*b3*z1*(1 + z1) + (b1^2*b2*b3*z1*(1 + z1))/2 + ((a1 + b1)*b2*b3*z1*(1 + z1))/2 + (3*b2^2*b3*z1*(1 + z1))/2 + (a2 + b2)*b3*z1*(1 + z1) + (b2*(a2 + b2)*b3*z1*(1 + z1))/2 + (b2^2*b3^2*z1*(1 + z1))/2 + ((a2 + b2)*b3^2*z1*(1 + z1))/2 + (b1*b2*(a3 + b3)*z1*(1 + z1))/2 + (b2*b3*(a3 + b3)*z1*(1 + z1))/2 + (b2*b3*x1*z1*(1 + z1))/2 + ((a3 + b3)*x2*z1*(1 + z1))/2 + (b1*(a3 + b3)*x2*z1*(1 + z1))/2 + (b2*b3*y1*z1*(1 + z1))/2 + ((a3 + b3)*y2*z1*(1 + z1))/2 + (b1*(a3 + b3)*y2*z1*(1 + z1))/2 + 2*b2*b3*x1*z2 + 4*b1*b2*b3*x1*z2 + 2*b1^2*b2*b3*x1*z2 + 2*(a1 + b1)*b2*b3*x1*z2 + b2^2*b3*x1*z2 + 2*b1*b2^2*b3*x1*z2 + (a2 + b2)*b3*x1*z2 + b1*(a2 + b2)*b3*x1*z2 + 2*b2*(a2 + b2)*b3*x1*z2 + b1*b2*(a2 + b2)*b3*x1*z2 + b2^2*b3^2*x1*z2 + (a2 + b2)*b3^2*x1*z2 + b1*(a3 + b3)*x1*z2 + b1^2*(a3 + b3)*x1*z2 + (a1 + b1)*(a3 + b3)*x1*z2 + b1^2*(a1 + b1)*(a3 + b3)*x1*z2 + b2*(a3 + b3)*x1*z2 + 2*b1*b2*(a3 + b3)*x1*z2 + b1^2*b2*(a3 + b3)*x1*z2 + (a1 + b1)*b2*(a3 + b3)*x1*z2 + 2*b1*(a1 + b1)*b2*(a3 + b3)*x1*z2 + b2^2*(a3 + b3)*x1*z2 + 2*b1*b2^2*(a3 + b3)*x1*z2 + b1^2*b2^2*(a3 + b3)*x1*z2 + (a1 + b1)*b2^2*(a3 + b3)*x1*z2 + b1*(a2 + b2)*(a3 + b3)*x1*z2 + b1^2*(a2 + b2)*(a3 + b3)*x1*z2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*x1*z2 + b2*(a2 + b2)*(a3 + b3)*x1*z2 + b1*b2*(a2 + b2)*(a3 + b3)*x1*z2 + 2*b2*b3*(a3 + b3)*x1*z2 + b1*b2*b3*(a3 + b3)*x1*z2 + (b1*(a1 + b1)*(a3 + b3)*x1*(1 + x1)*z2)/2 + ((a1 + b1)*b2*(a3 + b3)*x1*(1 + x1)*z2)/2 + b1^2*(a3 + b3)*x1*x2*z2 + b1*(a1 + b1)*(a3 + b3)*x1*x2*z2 + b1^2*(a1 + b1)*(a3 + b3)*x1*x2*z2 + b1*b2*(a3 + b3)*x1*x2*z2 + (a1 + b1)*b2*(a3 + b3)*x1*x2*z2 + b1*(a1 + b1)*b2*(a3 + b3)*x1*x2*z2 + (b1*(a3 + b3)*x2*(1 + x2)*z2)/2 + (b1^2*(a3 + b3)*x2*(1 + x2)*z2)/2 + (b1*(a1 + b1)*(a3 + b3)*x2*(1 + x2)*z2)/2 + (b1^2*b2*(a3 + b3)*x2*(1 + x2)*z2)/2 + ((a1 + b1)*b2*(a3 + b3)*x2*(1 + x2)*z2)/2 + (a1 + b1)*b2*x1*x3*z2 + b1*(a1 + b1)*b2*x1*x3*z2 + b2^2*x1*x3*z2 + b1*b2^2*x1*x3*z2 + b2*(a2 + b2)*x1*x3*z2 + b1*b2*(a2 + b2)*x1*x3*z2 + (b1*b2*x3*(1 + x3)*z2)/2 + (b1^2*b2*x3*(1 + x3)*z2)/2 + (b1*(a2 + b2)*x3*(1 + x3)*z2)/2 + ((a1 + b1)*(a3 + b3)*x3*(1 + x3)*z2)/2 + 2*b2*b3*y1*z2 + 4*b1*b2*b3*y1*z2 + 2*b1^2*b2*b3*y1*z2 + 2*(a1 + b1)*b2*b3*y1*z2 + b2^2*b3*y1*z2 + 2*b1*b2^2*b3*y1*z2 + (a2 + b2)*b3*y1*z2 + b1*(a2 + b2)*b3*y1*z2 + 2*b2*(a2 + b2)*b3*y1*z2 + b1*b2*(a2 + b2)*b3*y1*z2 + b2^2*b3^2*y1*z2 + (a2 + b2)*b3^2*y1*z2 + (a3 + b3)*y1*z2 + b1*(a3 + b3)*y1*z2 + (a1 + b1)*(a3 + b3)*y1*z2 + b1^2*(a1 + b1)*(a3 + b3)*y1*z2 + 2*b2*(a3 + b3)*y1*z2 + 3*b1*b2*(a3 + b3)*y1*z2 + (a1 + b1)*b2*(a3 + b3)*y1*z2 + 2*b1*(a1 + b1)*b2*(a3 + b3)*y1*z2 + 2*b1*b2^2*(a3 + b3)*y1*z2 + b1^2*b2^2*(a3 + b3)*y1*z2 + (a1 + b1)*b2^2*(a3 + b3)*y1*z2 + (a2 + b2)*(a3 + b3)*y1*z2 + b1*(a2 + b2)*(a3 + b3)*y1*z2 + b1^2*(a2 + b2)*(a3 + b3)*y1*z2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*y1*z2 + b2*(a2 + b2)*(a3 + b3)*y1*z2 + b1*b2*(a2 + b2)*(a3 + b3)*y1*z2 + 2*b2*b3*(a3 + b3)*y1*z2 + b1*b2*b3*(a3 + b3)*y1*z2 + b1*(a3 + b3)*x1*y1*z2 + b2*(a3 + b3)*x1*y1*z2 + b1*(a3 + b3)*x2*y1*z2 + b1^2*(a1 + b1)*(a3 + b3)*x2*y1*z2 + b2*(a3 + b3)*x2*y1*z2 + b1*b2*(a3 + b3)*x2*y1*z2 + b1^2*b2*(a3 + b3)*x2*y1*z2 + b1*(a1 + b1)*b2*(a3 + b3)*x2*y1*z2 + b2*x3*y1*z2 + b1*b2*x3*y1*z2 + (a1 + b1)*b2*x3*y1*z2 + b1*(a1 + b1)*b2*x3*y1*z2 + b2^2*x3*y1*z2 + b1*b2^2*x3*y1*z2 + b1*b2*(a2 + b2)*x3*y1*z2 + b2^2*b3*x3*y1*z2 + b2*(a3 + b3)*x3*y1*z2 + (b1*(a3 + b3)*y1*(1 + y1)*z2)/2 + (b1*(a1 + b1)*(a3 + b3)*y1*(1 + y1)*z2)/2 + (b1*b2*(a3 + b3)*y1*(1 + y1)*z2)/2 + ((a1 + b1)*b2*(a3 + b3)*y1*(1 + y1)*z2)/2 + b1*(a3 + b3)*x1*y2*z2 + b1^2*(a3 + b3)*x1*y2*z2 + b1^2*(a1 + b1)*(a3 + b3)*x1*y2*z2 + b2*(a3 + b3)*x1*y2*z2 + b1*b2*(a3 + b3)*x1*y2*z2 + b1*(a1 + b1)*b2*(a3 + b3)*x1*y2*z2 + b1*(a3 + b3)*y1*y2*z2 + b1*(a1 + b1)*(a3 + b3)*y1*y2*z2 + b1^2*(a1 + b1)*(a3 + b3)*y1*y2*z2 + 2*b1*b2*(a3 + b3)*y1*y2*z2 + b1^2*b2*(a3 + b3)*y1*y2*z2 + (a1 + b1)*b2*(a3 + b3)*y1*y2*z2 + b1*(a1 + b1)*b2*(a3 + b3)*y1*y2*z2 + (b1^2*(a3 + b3)*y2*(1 + y2)*z2)/2 + (b1*(a1 + b1)*(a3 + b3)*y2*(1 + y2)*z2)/2 + (b1*b2*(a3 + b3)*y2*(1 + y2)*z2)/2 + (b1^2*b2*(a3 + b3)*y2*(1 + y2)*z2)/2 + ((a1 + b1)*b2*(a3 + b3)*y2*(1 + y2)*z2)/2 + b2*x1*y3*z2 + b1*b2*x1*y3*z2 + (a1 + b1)*b2*x1*y3*z2 + b1*(a1 + b1)*b2*x1*y3*z2 + b2^2*x1*y3*z2 + b1*b2^2*x1*y3*z2 + b2*(a2 + b2)*x1*y3*z2 + b1*b2*(a2 + b2)*x1*y3*z2 + (a1 + b1)*b2*y1*y3*z2 + b1*(a1 + b1)*b2*y1*y3*z2 + b2^2*y1*y3*z2 + b1*b2^2*y1*y3*z2 + b1*b2*(a2 + b2)*y1*y3*z2 + b2^2*b3*y1*y3*z2 + b2*(a3 + b3)*y1*y3*z2 + (b1*y3*(1 + y3)*z2)/2 + ((a1 + b1)*y3*(1 + y3)*z2)/2 + (b1*b2*y3*(1 + y3)*z2)/2 + (b1^2*b2*y3*(1 + y3)*z2)/2 + (b1*(a2 + b2)*y3*(1 + y3)*z2)/2 + ((a1 + b1)*(a3 + b3)*y3*(1 + y3)*z2)/2 + 2*b1*b2*b3*z1*z2 + 2*b1^2*b2*b3*z1*z2 + 2*(a1 + b1)*b2*b3*z1*z2 + b2^2*b3*z1*z2 + 2*b1*b2^2*b3*z1*z2 + b1*(a2 + b2)*b3*z1*z2 + b2*(a2 + b2)*b3*z1*z2 + b1*b2*(a2 + b2)*b3*z1*z2 + b2^2*b3^2*z1*z2 + (a2 + b2)*b3^2*z1*z2 + (a1 + b1)*(a3 + b3)*z1*z2 + b1*b2*(a3 + b3)*z1*z2 + b1^2*b2*(a3 + b3)*z1*z2 + b1*(a1 + b1)*b2*(a3 + b3)*z1*z2 + b1*b2^2*(a3 + b3)*z1*z2 + b1^2*b2^2*(a3 + b3)*z1*z2 + (a1 + b1)*b2^2*(a3 + b3)*z1*z2 + b1^2*(a2 + b2)*(a3 + b3)*z1*z2 + (a1 + b1)*(a2 + b2)*(a3 + b3)*z1*z2 + b1*b2*(a2 + b2)*(a3 + b3)*z1*z2 + b2*b3*(a3 + b3)*z1*z2 + b1*b2*b3*(a3 + b3)*z1*z2 + (a3 + b3)*x1*z1*z2 + b1*(a3 + b3)*x1*z1*z2 + b1*(a1 + b1)*(a3 + b3)*x1*z1*z2 + (a1 + b1)*b2*(a3 + b3)*x1*z1*z2 + (a3 + b3)*x2*z1*z2 + b1^2*(a3 + b3)*x2*z1*z2 + b1*(a1 + b1)*(a3 + b3)*x2*z1*z2 + b1^2*b2*(a3 + b3)*x2*z1*z2 + (a1 + b1)*b2*(a3 + b3)*x2*z1*z2 + (a1 + b1)*b2*x3*z1*z2 + b1*(a1 + b1)*b2*x3*z1*z2 + b1*b2^2*x3*z1*z2 + b1*b2*(a2 + b2)*x3*z1*z2 + (a3 + b3)*y1*z1*z2 + b1*(a1 + b1)*(a3 + b3)*y1*z1*z2 + b1*b2*(a3 + b3)*y1*z1*z2 + (a1 + b1)*b2*(a3 + b3)*y1*z1*z2 + (a3 + b3)*y2*z1*z2 + b1*(a3 + b3)*y2*z1*z2 + b1^2*(a3 + b3)*y2*z1*z2 + b1*(a1 + b1)*(a3 + b3)*y2*z1*z2 + b1*b2*(a3 + b3)*y2*z1*z2 + b1^2*b2*(a3 + b3)*y2*z1*z2 + (a1 + b1)*b2*(a3 + b3)*y2*z1*z2 + b1*b2*y3*z1*z2 + (a1 + b1)*b2*y3*z1*z2 + b1*(a1 + b1)*b2*y3*z1*z2 + b1*b2^2*y3*z1*z2 + b1*b2*(a2 + b2)*y3*z1*z2 + (b1*(a3 + b3)*z1*(1 + z1)*z2)/2 + ((a3 + b3)*x1*z2*(1 + z2))/2 + (b1*(a3 + b3)*x1*z2*(1 + z2))/2 + (b1*(a1 + b1)*(a3 + b3)*x1*z2*(1 + z2))/2 + ((a1 + b1)*b2*(a3 + b3)*x1*z2*(1 + z2))/2 + (b1*(a3 + b3)*x2*z2*(1 + z2))/2 + (b1^2*(a3 + b3)*x2*z2*(1 + z2))/2 + (b1*(a1 + b1)*(a3 + b3)*x2*z2*(1 + z2))/2 + (b1^2*b2*(a3 + b3)*x2*z2*(1 + z2))/2 + ((a1 + b1)*b2*(a3 + b3)*x2*z2*(1 + z2))/2 + (b2*b3*y1*z2*(1 + z2))/2 + (a3 + b3)*y1*z2*(1 + z2) + (b1*(a1 + b1)*(a3 + b3)*y1*z2*(1 + z2))/2 + (b1*b2*(a3 + b3)*y1*z2*(1 + z2))/2 + ((a1 + b1)*b2*(a3 + b3)*y1*z2*(1 + z2))/2 + (b1^2*(a3 + b3)*y2*z2*(1 + z2))/2 + (b1*(a1 + b1)*(a3 + b3)*y2*z2*(1 + z2))/2 + (b1*b2*(a3 + b3)*y2*z2*(1 + z2))/2 + (b1^2*b2*(a3 + b3)*y2*z2*(1 + z2))/2 + ((a1 + b1)*b2*(a3 + b3)*y2*z2*(1 + z2))/2 + b3*(2*b1*x2 + (a1 + b1)*x2 + b1*b2*x2 + (a1 + b1)*b2*x2 + b2*y1 + 2*b1*y2 + (a1 + b1)*y2 + b1*b2*y2 + (a1 + b1)*b2*y2 + x2*z1 + b1*x2*z1 + y2*z1 + b1*y2*z1 + b1*z2 + (a1 + b1)*b2*z2 + b1*x2*z2 + b1*y2*z2 + b1*z1*z2) + b1*b2*x1*z3 + b1^2*b2*x1*z3 + 2*(a1 + b1)*b2*x1*z3 + 2*b1*(a1 + b1)*b2*x1*z3 + (a1 + b1)*b2^2*x1*z3 + (a2 + b2)*x1*z3 + (a1 + b1)*(a2 + b2)*x1*z3 + b1*(a1 + b1)*(a2 + b2)*x1*z3 + 2*b2*(a2 + b2)*x1*z3 + 3*b1*b2*(a2 + b2)*x1*z3 + (a1 + b1)*b2*(a2 + b2)*x1*z3 + b1*(a1 + b1)*b2*(a2 + b2)*x1*z3 + b2^2*(a2 + b2)*x1*z3 + b2*b3*x1*z3 + b1*b2*b3*x1*z3 + b2*(a2 + b2)*b3*x1*z3 + b2^2*(a2 + b2)*b3*x1*z3 + b2*(a3 + b3)*x1*z3 + b1*b2*(a3 + b3)*x1*z3 + b2^2*(a3 + b3)*x1*z3 + b2*(a2 + b2)*(a3 + b3)*x1*z3 + 2*b2*b3*(a3 + b3)*x1*z3 + b1*b2*b3*(a3 + b3)*x1*z3 + b2^2*b3*(a3 + b3)*x1*z3 + 2*b1*b2*x1*x2*z3 + b1^2*b2*x1*x2*z3 + (a1 + b1)*b2*x1*x2*z3 + b1*(a1 + b1)*b2*x1*x2*z3 + b1*(a2 + b2)*x1*x2*z3 + b1*(a1 + b1)*(a2 + b2)*x1*x2*z3 + b1*b2*(a2 + b2)*x1*x2*z3 + b1*(a1 + b1)*b2^2*x1*x3*z3 + b1*(a1 + b1)*(a2 + b2)*x1*x3*z3 + 2*b2*y1*z3 + 3*b1*b2*y1*z3 + b1^2*b2*y1*z3 + 2*(a1 + b1)*b2*y1*z3 + 2*b1*(a1 + b1)*b2*y1*z3 + b2^2*y1*z3 + (a1 + b1)*b2^2*y1*z3 + b1*(a2 + b2)*y1*z3 + (a1 + b1)*(a2 + b2)*y1*z3 + b1*(a1 + b1)*(a2 + b2)*y1*z3 + 3*b2*(a2 + b2)*y1*z3 + 2*b1*b2*(a2 + b2)*y1*z3 + (a1 + b1)*b2*(a2 + b2)*y1*z3 + b1*(a1 + b1)*b2*(a2 + b2)*y1*z3 + b2^2*(a2 + b2)*y1*z3 + 2*b2*b3*y1*z3 + b1*b2*b3*y1*z3 + 2*b2*(a2 + b2)*b3*y1*z3 + b1*b2*(a3 + b3)*y1*z3 + b2^2*(a3 + b3)*y1*z3 + (a2 + b2)*(a3 + b3)*y1*z3 + 2*b2*b3*(a3 + b3)*y1*z3 + b1*b2*b3*(a3 + b3)*y1*z3 + b2^2*b3*(a3 + b3)*y1*z3 + b2*x1*y1*z3 + b1*b2*x1*y1*z3 + b2*x2*y1*z3 + 3*b1*b2*x2*y1*z3 + b1^2*b2*x2*y1*z3 + (a1 + b1)*b2*x2*y1*z3 + b1*(a1 + b1)*b2*x2*y1*z3 + (a2 + b2)*x2*y1*z3 + b1*(a1 + b1)*(a2 + b2)*x2*y1*z3 + b2*(a2 + b2)*x2*y1*z3 + b1*b2*(a2 + b2)*x2*y1*z3 + b2^2*b3*x2*y1*z3 + b2*(a2 + b2)*b3*x2*y1*z3 + b2*(a3 + b3)*x2*y1*z3 + (a2 + b2)*(a3 + b3)*x2*y1*z3 + b1*b2^2*x3*y1*z3 + b1*(a1 + b1)*b2^2*x3*y1*z3 + b1*(a2 + b2)*x3*y1*z3 + b1*(a1 + b1)*(a2 + b2)*x3*y1*z3 + b2*(a2 + b2)*x3*y1*z3 + b2^2*(a2 + b2)*x3*y1*z3 + b2^2*b3*x3*y1*z3 + b2*(a2 + b2)*b3*x3*y1*z3 + b2^2*(a3 + b3)*x3*y1*z3 + (a2 + b2)*(a3 + b3)*x3*y1*z3 + b1*x1*y2*z3 + b2*x1*y2*z3 + 2*b1*b2*x1*y2*z3 + b1^2*b2*x1*y2*z3 + (a1 + b1)*b2*x1*y2*z3 + b1*(a2 + b2)*x1*y2*z3 + b1*(a1 + b1)*(a2 + b2)*x1*y2*z3 + b1*b2*(a2 + b2)*x1*y2*z3 + b1*y1*y2*z3 + 2*b1*b2*y1*y2*z3 + b1^2*b2*y1*y2*z3 + (a1 + b1)*b2*y1*y2*z3 + b1*(a1 + b1)*(a2 + b2)*y1*y2*z3 + b1*b2*(a2 + b2)*y1*y2*z3 + b2*(a2 + b2)*b3*y1*y2*z3 + (a2 + b2)*(a3 + b3)*y1*y2*z3 + b1*(a1 + b1)*b2*x1*y3*z3 + b1*(a1 + b1)*b2^2*x1*y3*z3 + b1*(a1 + b1)*(a2 + b2)*x1*y3*z3 + b1*b2*y1*y3*z3 + b1*(a1 + b1)*b2*y1*y3*z3 + b1*b2^2*y1*y3*z3 + b1*(a1 + b1)*b2^2*y1*y3*z3 + (a2 + b2)*y1*y3*z3 + b1*(a2 + b2)*y1*y3*z3 + b1*(a1 + b1)*(a2 + b2)*y1*y3*z3 + 2*b2*(a2 + b2)*y1*y3*z3 + b2^2*(a2 + b2)*y1*y3*z3 + b2*(a2 + b2)*b3*y1*y3*z3 + b2*(a3 + b3)*y1*y3*z3 + b2^2*(a3 + b3)*y1*y3*z3 + (a2 + b2)*(a3 + b3)*y1*y3*z3 + b1^2*b2*z1*z3 + (a1 + b1)*b2*z1*z3 + 2*b1*(a1 + b1)*b2*z1*z3 + (a1 + b1)*b2^2*z1*z3 + (a1 + b1)*(a2 + b2)*z1*z3 + b1*(a1 + b1)*(a2 + b2)*z1*z3 + b2*(a2 + b2)*z1*z3 + 3*b1*b2*(a2 + b2)*z1*z3 + (a1 + b1)*b2*(a2 + b2)*z1*z3 + b1*(a1 + b1)*b2*(a2 + b2)*z1*z3 + b2^2*(a2 + b2)*z1*z3 + b1*b2*b3*z1*z3 + b2*(a2 + b2)*b3*z1*z3 + b2^2*(a2 + b2)*b3*z1*z3 + b1*b2*(a3 + b3)*z1*z3 + b2^2*(a3 + b3)*z1*z3 + b2*(a2 + b2)*(a3 + b3)*z1*z3 + b2*b3*(a3 + b3)*z1*z3 + b1*b2*b3*(a3 + b3)*z1*z3 + b2^2*b3*(a3 + b3)*z1*z3 + b2*x1*z1*z3 + (a1 + b1)*b2*x1*z1*z3 + b2*(a2 + b2)*x1*z1*z3 + b2*x2*z1*z3 + b1*b2*x2*z1*z3 + b1^2*b2*x2*z1*z3 + (a1 + b1)*b2*x2*z1*z3 + b1*(a1 + b1)*b2*x2*z1*z3 + (a2 + b2)*x2*z1*z3 + b1*(a2 + b2)*x2*z1*z3 + b1*(a1 + b1)*(a2 + b2)*x2*z1*z3 + b2*(a2 + b2)*x2*z1*z3 + b1*b2*(a2 + b2)*x2*z1*z3 + b1*(a1 + b1)*b2^2*x3*z1*z3 + (a2 + b2)*x3*z1*z3 + b1*(a1 + b1)*(a2 + b2)*x3*z1*z3 + b2*(a2 + b2)*x3*z1*z3 + b2*y1*z1*z3 + b1*b2*y1*z1*z3 + (a1 + b1)*b2*y1*z1*z3 + b2*(a2 + b2)*y1*z1*z3 + y2*z1*z3 + b1*y2*z1*z3 + 2*b2*y2*z1*z3 + b1*b2*y2*z1*z3 + b1^2*b2*y2*z1*z3 + (a1 + b1)*b2*y2*z1*z3 + b1*(a2 + b2)*y2*z1*z3 + b1*(a1 + b1)*(a2 + b2)*y2*z1*z3 + b2*(a2 + b2)*y2*z1*z3 + b1*b2*(a2 + b2)*y2*z1*z3 + b1*(a1 + b1)*b2*y3*z1*z3 + b1*(a1 + b1)*b2^2*y3*z1*z3 + b1*(a1 + b1)*(a2 + b2)*y3*z1*z3 + b2*(a2 + b2)*y3*z1*z3 + b1*x1*z2*z3 + b1^2*x1*z2*z3 + b1*(a1 + b1)*x1*z2*z3 + b2*x1*z2*z3 + 2*b1*b2*x1*z2*z3 + b1^2*b2*x1*z2*z3 + b1*(a1 + b1)*b2*x1*z2*z3 + b2*(a2 + b2)*x1*z2*z3 + b1*b2*(a2 + b2)*x1*z2*z3 + 2*b1*y1*z2*z3 + b1^2*y1*z2*z3 + b1*(a1 + b1)*y1*z2*z3 + b2*y1*z2*z3 + 3*b1*b2*y1*z2*z3 + b1^2*b2*y1*z2*z3 + b1*(a1 + b1)*b2*y1*z2*z3 + (a2 + b2)*y1*z2*z3 + b1*b2*(a2 + b2)*y1*z2*z3 + b2*b3*y1*z2*z3 + b2^2*b3*y1*z2*z3 + (a3 + b3)*y1*z2*z3 + b2*(a3 + b3)*y1*z2*z3 + b1^2*z1*z2*z3 + b1*(a1 + b1)*z1*z2*z3 + b1*b2*z1*z2*z3 + b1^2*b2*z1*z2*z3 + b1*(a1 + b1)*b2*z1*z2*z3 + b1*b2*(a2 + b2)*z1*z2*z3 + (b1^2*b2*x1*z3*(1 + z3))/2 + (b1*x2*z3*(1 + z3))/2 + (b1^2*x2*z3*(1 + z3))/2 + (b1*b2*x2*z3*(1 + z3))/2 + (b1^2*b2*x2*z3*(1 + z3))/2 + (b1*(a2 + b2)*x2*z3*(1 + z3))/2 + (b1*(a3 + b3)*x2*z3*(1 + z3))/2 + ((a1 + b1)*(a3 + b3)*x2*z3*(1 + z3))/2 + (b1^2*b2*y1*z3*(1 + z3))/2 + (b2*b3*y1*z3*(1 + z3))/2 + b1*y2*z3*(1 + z3) + (b1^2*y2*z3*(1 + z3))/2 + (b1*b2*y2*z3*(1 + z3))/2 + (b1^2*b2*y2*z3*(1 + z3))/2 + (b1*(a2 + b2)*y2*z3*(1 + z3))/2 + (b1*(a3 + b3)*y2*z3*(1 + z3))/2 + ((a1 + b1)*(a3 + b3)*y2*z3*(1 + z3))/2 + (b1^2*b2*z1*z3*(1 + z3))/2 + (b1^2*b2*z2*z3*(1 + z3))/2 + (b1*(a2 + b2)*z2*z3*(1 + z3))/2 + ((a1 + b1)*(a3 + b3)*z2*z3*(1 + z3))/2 + (b1*b2 + (a1 + b1)*b2 + b1*(a1 + b1)*b2 + b1*(a2 + b2) + (a1 + b1)*(a2 + b2) + b1*b2*(a2 + b2))*(x3 + y3 + z3);
end;
#####################################################################
#####################################################################
#Space Group No. 80 ( I4_1)
#####################################################################
Aqin80:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return b1;
end;
#####################################################################
Axyzin80:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return a1 + x1 + y1 + z1;
end;
#####################################################################
Bxyzin80:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return a1*b2 + b1*b2 + a1*b1*b2 + a2*b1*b2 + a2*x1 + b2*x1 + a1*x2 + x1*x2 + a2*y1 + b2*y1 + x2*y1 + a1*y2 + x1*y2 + y1*y2 + a2*b1*z1 + b1*b2*z1 + b1*x2*z1 + b1*y2*z1 + a1*z2 + a2*b1*z2 + b1*b2*z2 + x1*z2 + b1*x2*z2 + y1*z2 + b1*y2*z2 + z1*z2 + b1*z1*z2;
end;
#####################################################################
CGAPin80:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];
return 2*b1*b2*b3 + 3*b1^2*b2*b3 + 4*b1*(a1 + b1 - 2*a1*b1)*b2*b3 + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3 + b1*b2^2*b3 + 2*(a1 + b1 - 2*a1*b1)*b2^2*b3 + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3 + 2*b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3 + 2*b1^2*(a2 + b2 - 2*a2*b2)*b3 + 2*b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3 + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3 + 4*b1*b2*(a2 + b2 - 2*a2*b2)*b3 + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3 + 3*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3 + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3 + 2*b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3 + 3*b1*b2^2*(a2 + b2 - 2*a2*b2)*b3 + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3 + 2*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3 + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3 + 2*b1^2*b2*b3^2 + 2*(a1 + b1 - 2*a1*b1)*b2*b3^2 + b1*(a1 + b1 - 2*a1*b1)*b2*b3^2 + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3^2 + 2*b1*b2^2*b3^2 + b1^2*b2^2*b3^2 + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3^2 + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2 + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3^2 + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3^2 + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3^2 + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3^2 + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3^2 + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3^2 + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3^2 + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3) + b1*b2^2*(a3 + b3 - 2*a3*b3) + b1^2*b2^2*(a3 + b3 - 2*a3*b3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3) + b1^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3) + 2*b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3) + b1*b2*b3*(a3 + b3 - 2*a3*b3) + 2*b1^2*b2*b3*(a3 + b3 - 2*a3*b3) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3) + 2*b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3) + 2*b1*b2^2*b3*(a3 + b3 - 2*a3*b3) + 2*b1^2*b2^2*b3*(a3 + b3 - 2*a3*b3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3) + 2*b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3) + 2*b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3) + 2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3) + b1*b2*b3^2*(a3 + b3 - 2*a3*b3) + b1^2*b2*b3^2*(a3 + b3 - 2*a3*b3) + (a1 + b1 - 2*a1*b1)*b2*b3^2*(a3 + b3 - 2*a3*b3) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*b3^2*(a3 + b3 - 2*a3*b3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3^2*(a3 + b3 - 2*a3*b3) + (a1 + b1 - 2*a1*b1)*b2^2*b3^2*(a3 + b3 - 2*a3*b3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3^2*(a3 + b3 - 2*a3*b3) + b1^2*(a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3) + b1*b2*(a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3) + 2*b2*b3*(-a1 - b1 + 2*a1*b1 + x1) + 5*b1*b2*b3*(-a1 - b1 + 2*a1*b1 + x1) + 2*b1^2*b2*b3*(-a1 - b1 + 2*a1*b1 + x1) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1) + 4*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1) + 2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1) + 2*b1^2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1) + 2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1) + 2*b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1) + 2*b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1) + b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1) + 2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1) + b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1) + b2*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + b1*b2*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*b2*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + (a1 + b1 - 2*a1*b1)*b2*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a1 + b1 - 2*a1*b1)*b2*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + b1*b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + b2^2*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + x1) + 2*b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 2*b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + (a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + (a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 2*b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 2*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 2*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 3*b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + 3*b1*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1^2*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + (a1 + b1 - 2*a1*b1)*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b2^2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + (a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b1*(a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b2*(a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1) + b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1) + (b1^2*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + (b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + (b1^2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + ((a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + (b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + ((a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1) + (b2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + (b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + ((a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + (b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + ((a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + (b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + (b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1) + (b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + (b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + ((a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(1 - a1 - b1 + 2*a1*b1 + x1))/2 + b1*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2) + 3*b1*b2*b3*(-a2 - b2 + 2*a2*b2 + x2) + 3*b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + x2) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2) + 4*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + 2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + 2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*b2*b3^2*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*b2*b3^2*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*b2^2*b3^2*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3^2*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + x2) + b1*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + 4*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b1*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2) + b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + 2*(a1 + b1 - 2*a1*b1)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + 2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*b2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + (a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + (a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + (a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + 2*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + x2) + b1*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2) + (b1^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + ((a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + ((a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(1 - a2 - b2 + 2*a2*b2 + x2))/2 + b1*b2*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2^2*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2*b3*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + 4*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + 3*b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*b3^2*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*b3^2*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2^2*b3^2*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*b3^2*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2^2*b3^2*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + 4*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + 3*b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + 3*b1*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*(a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*(a1 + b1 - 2*a1*b1)*b2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + 2*b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + x3) + b1*b2*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3) + (b1^2*b2*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1^2*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1^2*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3) + ((a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + ((a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + ((a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*b2*b3^2*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + (b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + ((a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(1 - a3 - b3 + 2*a3*b3 + x3))/2 + 3*b2*b3*(-a1 - b1 + 2*a1*b1 + y1) + 4*b1*b2*b3*(-a1 - b1 + 2*a1*b1 + y1) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + y1) + 4*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1) + 3*b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1) + 3*b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1) + b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1) + 2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1) + 2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1) + 2*b2*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b2*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 3*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 3*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 3*b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 3*b1*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + b2*(a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + 3*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + 2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + 3*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + 3*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + y1) + b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + 3*b1*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + 2*b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + y1) + b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1) + (b1^2*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + (b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + (b1^2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + ((a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + (b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + ((a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1) + (b2*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + (b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + ((a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + (b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + ((a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + (b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + (b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1) + (b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + (b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + ((a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(1 - a1 - b1 + 2*a1*b1 + y1))/2 + b1*b3*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + y2) + 5*b1*b2*b3*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + y2) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2) + 3*b1*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + 5*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + 2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2^2*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2^2*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 3*b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 4*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2) + b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + (a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + (a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + 3*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*(a1 + b1 - 2*a1*b1)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 4*b1*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 4*b1*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b3^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b3^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2*b3^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2*b3^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 3*b1*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*(a1 + b1 - 2*a1*b1)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + (a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + (a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + (a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + (a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + 2*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + y2) + (b1*b3*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + ((a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + ((a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(1 - a2 - b2 + 2*a2*b2 + y2))/2 + 2*b1*b2*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3) + 3*b1*b2*b3*(-a3 - b3 + 2*a3*b3 + y3) + 3*b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + y3) + 4*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + y3) + 5*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1^2*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3) + 2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + 6*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*b3^2*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1^2*b2*b3^2*(-a3 - b3 + 2*a3*b3 + y3) + 2*(a1 + b1 - 2*a1*b1)*b2*b3^2*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*b3^2*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*b3^2*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + 7*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 3*b1*b2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1^2*b2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*(a1 + b1 - 2*a1*b1)*b2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b2^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 4*b1*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 3*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 3*b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 3*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + 3*b1*b2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*b3^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1^2*b2*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*(a1 + b1 - 2*a1*b1)*b2*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 4*b1*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + 3*b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + 2*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + y3) + (b1*b2*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1^2*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*b2^2*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1^2*b2^2*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + ((a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + ((a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*b2*b3^2*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + (b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + ((a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(1 - a3 - b3 + 2*a3*b3 + y3))/2 + 3*b1*b2*b3*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*b3*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + z1) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1) + 2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1) + b2*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + 3*b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + 3*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + 3*b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a2 + b2 - 2*a2*b2)*b3^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b2*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1^2*b2*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2^2*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + 3*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + 2*b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a1 - b1 + 2*a1*b1 + z1) + b2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1) + (b1*b2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b1^2*b2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + ((a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b1^2*b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + ((a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + ((a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1) + (b2*b3^2*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + ((a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + (b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + ((a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(1 - a1 - b1 + 2*a1*b1 + z1))/2 + b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + z2) + 2*b1*b2*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + z2) + 4*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + z2) + 2*b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + z2) + 2*b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2) + 2*b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3^2*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2^2*b3^2*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3^2*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2) + b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + (a1 + b1 - 2*a1*b1)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + (a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + (a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + (a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + (a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b1*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*b3^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b1*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b1*(a1 + b1 - 2*a1*b1)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + (a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + (a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + (a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*b3^2*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b1*(a1 + b1 - 2*a1*b1)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b1*b2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + 2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b3^2*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b3^2*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b2*b3^2*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3^2*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b2^2*b3^2*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + (a2 + b2 - 2*a2*b2)*b3^2*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b2^2*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + (a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a2 - b2 + 2*a2*b2 + z2) + b1*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2) + (b1^2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2) + b1*b2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2) + b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2) + ((a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2) + ((a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + b1*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2) + ((a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + (b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + (b1*b3^2*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + (b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + (b1*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + (b1*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + (b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2)*(1 - a2 - b2 + 2*a2*b2 + z2))/2 + b3*(a1 + b1 - 2*a1*b1 + x1 + y1 + z1)*(a2 + b2 - 2*a2*b2 + x2 + y2 + z2) + b1*b2^2*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*b3*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + z3) + 3*b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + z3) + 3*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + z3) + 3*b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*b3^2*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*b3^2*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3^2*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3^2*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*b3^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + x1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*(a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + 3*b1*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*b3^2*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + x2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + x3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + 3*b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + y1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + 3*b1*b2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + 3*b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*b3^2*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + y2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2^2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + y3)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + (a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b2*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a1 - b1 + 2*a1*b1 + z1)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1^2*b2*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + 2*b1^2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b3*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + 3*b1^2*b2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*b2^2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2^2*b3*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b3^2*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*b2*b3^2*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(a3 + b3 - 2*a3*b3)*(-a2 - b2 + 2*a2*b2 + z2)*(-a3 - b3 + 2*a3*b3 + z3) + (3*b1*b2*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + b1^2*b2*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3) + b1*(a1 + b1 - 2*a1*b1)*b2*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3) + (b1^2*b2^2*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + ((a1 + b1 - 2*a1*b1)*b2^2*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + (b1^2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + ((a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + b1*b2*(a2 + b2 - 2*a2*b2)*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3) + (3*b1*b2*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + (b1^2*b2*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + ((a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + b1*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3) + (b1^2*(a1 + b1 - 2*a1*b1)*b2*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + b1*b2^2*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3) + (b1*(a1 + b1 - 2*a1*b1)*b2^2*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + (b1^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + ((a1 + b1 - 2*a1*b1)*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + b1*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3) + (b1^2*b2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + (b1*b2^2*(a2 + b2 - 2*a2*b2)*b3*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + (b1*b2*b3^2*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + (b1*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + (b1^2*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + (b1*(a1 + b1 - 2*a1*b1)*b2*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + (b1*b2*(a2 + b2 - 2*a2*b2)*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + (b1*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + ((a1 + b1 - 2*a1*b1)*b2*b3*(a3 + b3 - 2*a3*b3)*(-a3 - b3 + 2*a3*b3 + z3)*(1 - a3 - b3 + 2*a3*b3 + z3))/2 + (a1 + b1 - 2*a1*b1 + x1 + y1 + z1)*(a2 + b2 - 2*a2*b2 + x2 + y2 + z2)*(a3 + b3 - 2*a3*b3 + x3 + y3 + z3);
end;
#####################################################################
#####################################################################
#Space Group No. 81 ( P-4)
#####################################################################
Aqin81:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return b1;
end;
#####################################################################
Axyin81:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return x1 + y1;
end;
#####################################################################
Azin81:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return z1;
end;
#####################################################################
Bdeltain81:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return a1*a2 + b1*b2 + a1*b1*b2 + a2*b1*b2;
end;
#####################################################################
Bxyin81:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return x2*y1 + b1*x2*y1 + b1*x2*y2 + b1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 82 ( I-4)
#####################################################################
Aqin82:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return b1;
end;
#####################################################################
Axyzin82:=function(g1)
local x1,y1,z1,a1,b1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain82:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return a1*a2 + a2*b1 + a1*b2 + a1*b1*b2 + a2*b1*b2;
end;
#####################################################################
B2in82:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return b2*x1 + a1*x2 + a1*b1*x2 + b2*y1 + a1*y2 + b1*y2 + a1*b1*y2 + b2*z1 + b1*z2 + a1*b1*z2;
end;
#####################################################################
Bzxyin82:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];
return x2*z1 + b1*x2*z1 + y2*z1 + b1*y2*z1 + b1*x2*z2 + b1*y2*z2 + b1*z1*z2;
end;
#####################################################################
C1in82:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];
return 2*a2*a3*b1*x1 + 2*a1*a3*b2*x1 + 2*a2*a3*b2*x1 + a3*b1^2*b2*x1 + a3*b1*b2^2*x1 + a2*b1*b3*x1 + a1*b2*b3*x1 + a2*b2*b3*x1 + b1*b2*b3*x1 + 2*a1*b1*b2*b3*x1 + b2^2*b3*x1 + b1*b2^2*b3*x1 + (a2*a3*x1*(1 + x1))/2 + (a3*b2*x1*(1 + x1))/2 + (a3*b1*b2*x1*(1 + x1))/2 + (a3*b2^2*x1*(1 + x1))/2 + (b2*b3*x1*(1 + x1))/2 + (a1*b2*b3*x1*(1 + x1))/2 + (b1*b2*b3*x1*(1 + x1))/2 + (b1^2*b2*b3*x1*(1 + x1))/2 + a3*b1*x2 + 2*a1*a3*b1*x2 + a3*b1^2*x2 + 2*a1*a3*b2*x2 + 2*a3*b1*b2*x2 + 2*a1*a3*b1*b2*x2 + a3*b1^2*b2*x2 + a1*b3*x2 + a1*a2*b3*x2 + a1*a3*b3*x2 + b1*b3*x2 + a1*b1*b3*x2 + a2*b1*b3*x2 + a1*a2*b1*b3*x2 + a3*b1*b3*x2 + a1*a3*b1*b3*x2 + a1*b1^2*b3*x2 + a3*b1^2*b3*x2 + a1*b2*b3*x2 + b1*b2*b3*x2 + b1^2*b2*b3*x2 + a1*b1^2*b2*b3*x2 + a1*b2^2*b3*x2 + b1*b2^2*b3*x2 + a1*b1*b2^2*b3*x2 + a3*x1*x2 + a1*a3*x1*x2 + a2*a3*x1*x2 + a3*b1*x1*x2 + a1*a3*b1*x1*x2 + a3*b1^2*x1*x2 + a1*a3*b1^2*x1*x2 + 2*a3*b2*x1*x2 + a1*a3*b2*x1*x2 + 2*a3*b1*b2*x1*x2 + 2*a1*a3*b1*b2*x1*x2 + a3*b2^2*x1*x2 + a3*b1*b2^2*x1*x2 + a2*b3*x1*x2 + a3*b3*x1*x2 + a1*a3*b3*x1*x2 + b1*b3*x1*x2 + 2*a2*b1*b3*x1*x2 + a1*a2*b1*b3*x1*x2 + 2*a3*b1*b3*x1*x2 + a1*a3*b1*b3*x1*x2 + a3*b1^2*b3*x1*x2 + b2*b3*x1*x2 + a1*b2*b3*x1*x2 + a1*b1*b2*b3*x1*x2 + a2*b1*b2*b3*x1*x2 + b2^2*b3*x1*x2 + b1*b2^2*b3*x1*x2 + a1*b1*b2^2*b3*x1*x2 + (a3*b1*x2*(1 + x2))/2 + (a1*a3*b1*x2*(1 + x2))/2 + (a1*a3*b2*x2*(1 + x2))/2 + (a3*b1*b2*x2*(1 + x2))/2 + (a1*b3*x2*(1 + x2))/2 + (a1*a2*b3*x2*(1 + x2))/2 + (a1*a3*b3*x2*(1 + x2))/2 + (b1*b3*x2*(1 + x2))/2 + (a3*b1*b3*x2*(1 + x2))/2 + (b1^2*b3*x2*(1 + x2))/2 + (a1*b1^2*b3*x2*(1 + x2))/2 + b1*b2*b3*x2*(1 + x2) + (a1*b1*b2*b3*x2*(1 + x2))/2 + (a1*b2^2*b3*x2*(1 + x2))/2 + a2*b1*x3 + a1*a2*b1*x3 + a2*a3*b1*x3 + a1*b2*x3 + a1*a2*b2*x3 + 4*b1*b2*x3 + 2*a1*b1*b2*x3 + 2*a2*b1*b2*x3 + a1*a2*b1*b2*x3 + 2*a3*b1*b2*x3 + a2*a3*b1*b2*x3 + a1*b1^2*b2*x3 + a2*b1^2*b2*x3 + a1*b2^2*x3 + a1*a2*b2^2*x3 + b1*b2^2*x3 + 2*a1*b1*b2^2*x3 + a2*b1*b2^2*x3 + a3*b1*b2^2*x3 + a1*a2*b3*x3 + a2*b1*b3*x3 + a2*a3*b1*b3*x3 + a1*b2*b3*x3 + a1*a2*b2*b3*x3 + a1*b1*b2*b3*x3 + 2*a2*b1*b2*b3*x3 + a3*b1*b2*b3*x3 + a2*a3*b1*b2*b3*x3 + b1*b2^2*b3*x3 + a1*b1*b2^2*b3*x3 + a2*b1*b2^2*b3*x3 + a3*b1*b2^2*b3*x3 + a2*x1*x3 + a2*a3*x1*x3 + a2*b1*x1*x3 + a1*a2*b1*x1*x3 + a2*a3*b1*x1*x3 + a2*b1^2*x1*x3 + a2*a3*b1^2*x1*x3 + b2*x1*x3 + a1*b2*x1*x3 + 2*a2*b2*x1*x3 + a1*a2*b2*x1*x3 + a3*b2*x1*x3 + a1*a3*b2*x1*x3 + b1*b2*x1*x3 + 2*a1*b1*b2*x1*x3 + 2*a2*b1*b2*x1*x3 + a3*b1*b2*x1*x3 + b1^2*b2*x1*x3 + b2^2*x1*x3 + a1*b2^2*x1*x3 + a2*b2^2*x1*x3 + a3*b2^2*x1*x3 + b1^2*b2^2*x1*x3 + a1*b2*b3*x1*x3 + a3*b2*b3*x1*x3 + a1*a3*b2*b3*x1*x3 + a2*a3*b2*b3*x1*x3 + a1*b1*b2*b3*x1*x3 + a3*b1*b2*b3*x1*x3 + a2*b1^2*b2*b3*x1*x3 + a1*b2^2*b3*x1*x3 + a3*b2^2*b3*x1*x3 + a3*b1*b2^2*b3*x1*x3 + b1*x2*x3 + a1*b1*x2*x3 + 2*a2*b1*x2*x3 + a1*a3*b1*x2*x3 + a2*a3*b1*x2*x3 + 2*a1*b2*x2*x3 + a1*a3*b2*x2*x3 + b1*b2*x2*x3 + a1*b1*b2*x2*x3 + a2*b1*b2*x2*x3 + a3*b1*b2*x2*x3 + a1*a3*b1*b2*x2*x3 + a2*a3*b1*b2*x2*x3 + b1^2*b2*x2*x3 + a1*b1^2*b2*x2*x3 + a1*a3*b1^2*b2*x2*x3 + a1*a3*b2^2*x2*x3 + a1*b3*x2*x3 + a1*a2*b3*x2*x3 + a1*b1*b3*x2*x3 + a2*b1*b3*x2*x3 + a3*b1*b3*x2*x3 + a2*a3*b1*b3*x2*x3 + a1*a2*b2*b3*x2*x3 + 2*b1*b2*b3*x2*x3 + a1*b1*b2*b3*x2*x3 + 2*a2*b1*b2*b3*x2*x3 + 2*a1*a2*b1*b2*b3*x2*x3 + a1*a2*b2^2*b3*x2*x3 + b1*b2^2*b3*x2*x3 + a1*b1*b2^2*b3*x2*x3 + a2*b1*b2^2*b3*x2*x3 + a3*b1*b2^2*b3*x2*x3 + a2*a3*x1*x2*x3 + b1*x1*x2*x3 + a1*b1*x1*x2*x3 + a2*b1*x1*x2*x3 + a1*a2*b1*x1*x2*x3 + a3*b1*x1*x2*x3 + a2*b1^2*x1*x2*x3 + a1*a2*b1^2*x1*x2*x3 + b2*x1*x2*x3 + a3*b2*x1*x2*x3 + 2*b1*b2*x1*x2*x3 + a1*b1*b2*x1*x2*x3 + a2*b1*b2*x1*x2*x3 + a1*a2*b1*b2*x1*x2*x3 + a3*b1*b2*x1*x2*x3 + a2*a3*b1*b2*x1*x2*x3 + b1^2*b2*x1*x2*x3 + a1*a3*b2^2*x1*x2*x3 + b1*b2^2*x1*x2*x3 + a3*b1^2*b2^2*x1*x2*x3 + a2*b3*x1*x2*x3 + 2*b1*b3*x1*x2*x3 + a1*b1*b3*x1*x2*x3 + 2*a2*b1*b3*x1*x2*x3 + a1*a2*b1*b3*x1*x2*x3 + a1*b1^2*b3*x1*x2*x3 + b2*b3*x1*x2*x3 + 2*a2*b2*b3*x1*x2*x3 + a1*a2*b2*b3*x1*x2*x3 + a3*b2*b3*x1*x2*x3 + 2*b1*b2*b3*x1*x2*x3 + 2*a1*b1*b2*b3*x1*x2*x3 + a2*b1*b2*b3*x1*x2*x3 + a2*b1^2*b2*b3*x1*x2*x3 + b2^2*b3*x1*x2*x3 + b2*b3^2*x1*x2*x3 + (a2*b1*x3*(1 + x3))/2 + (a1*a2*b1*x3*(1 + x3))/2 + (a2*b1^2*x3*(1 + x3))/2 + (a1*a2*b2*x3*(1 + x3))/2 + b1*b2*x3*(1 + x3) + a1*b1*b2*x3*(1 + x3) + (a2*b1*b2*x3*(1 + x3))/2 + (a3*b1*b2*x3*(1 + x3))/2 + (a1*b2^2*x3*(1 + x3))/2 + (b1*b2^2*x3*(1 + x3))/2 + (b1^2*b2^2*x3*(1 + x3))/2 + (a1*a2*b3*x3*(1 + x3))/2 + (a2*b1*b3*x3*(1 + x3))/2 + (b1*b2*b3*x3*(1 + x3))/2 + (a1*b1*b2*b3*x3*(1 + x3))/2 + (a2*b1*b2*b3*x3*(1 + x3))/2 + (a3*b1*b2*b3*x3*(1 + x3))/2 + 2*a2*a3*b1*y1 + a3*b2*y1 + 2*a1*a3*b2*y1 + 2*a2*a3*b2*y1 + a3*b1^2*b2*y1 + a3*b1*b2^2*y1 + a2*b1*b3*y1 + b2*b3*y1 + a1*b2*b3*y1 + a2*b2*b3*y1 + 2*a1*b1*b2*b3*y1 + b2^2*b3*y1 + b1*b2^2*b3*y1 + a2*a3*x1*y1 + a3*b2*x1*y1 + a3*b1*b2*x1*y1 + a3*b2^2*x1*y1 + a2*b3*x1*y1 + b2*b3*x1*y1 + a1*b2*b3*x1*y1 + b1^2*b2*b3*x1*y1 + b2^2*b3*x1*y1 + a1*a3*x2*y1 + a2*a3*x2*y1 + a3*b1*x2*y1 + a1*a3*b1*x2*y1 + a3*b1^2*x2*y1 + a1*a3*b1^2*x2*y1 + a1*a3*b2*x2*y1 + a3*b1*b2*x2*y1 + 2*a1*a3*b1*b2*x2*y1 + a3*b2^2*x2*y1 + a3*b1*b2^2*x2*y1 + b3*x2*y1 + a1*b3*x2*y1 + a3*b3*x2*y1 + a1*a3*b3*x2*y1 + 2*b1*b3*x2*y1 + a2*b1*b3*x2*y1 + a1*a2*b1*b3*x2*y1 + a1*a3*b1*b3*x2*y1 + a1*b1^2*b3*x2*y1 + a3*b1^2*b3*x2*y1 + a1*b2*b3*x2*y1 + b1*b2*b3*x2*y1 + a1*b1*b2*b3*x2*y1 + a2*b1*b2*b3*x2*y1 + b1^2*b2*b3*x2*y1 + a1*b1*b2^2*b3*x2*y1 + a3*b1*b2*x1*x2*y1 + b1*b3*x1*x2*y1 + a1*b1*b3*x1*x2*y1 + b1^2*b3*x1*x2*y1 + b1*b2*b3*x1*x2*y1 + b1^2*b2*b3*x1*x2*y1 + a2*a3*x3*y1 + a1*a2*b1*x3*y1 + a2*a3*b1*x3*y1 + a2*b1^2*x3*y1 + 2*b2*x3*y1 + 2*a1*b2*x3*y1 + a2*b2*x3*y1 + a1*a2*b2*x3*y1 + a3*b2*x3*y1 + a1*a3*b2*x3*y1 + 2*b1*b2*x3*y1 + a1*b1*b2*x3*y1 + 2*a2*b1*b2*x3*y1 + a3*b1*b2*x3*y1 + a1*b1^2*b2*x3*y1 + a2*b1^2*b2*x3*y1 + a3*b1^2*b2*x3*y1 + a1*b2^2*x3*y1 + a2*b2^2*x3*y1 + b1^2*b2^2*x3*y1 + a2*b3*x3*y1 + a2*b1*b3*x3*y1 + a2*b1^2*b3*x3*y1 + b2*b3*x3*y1 + 2*a1*b2*b3*x3*y1 + a2*b2*b3*x3*y1 + a1*a3*b2*b3*x3*y1 + a2*a3*b2*b3*x3*y1 + b1*b2*b3*x3*y1 + 3*a1*b1*b2*b3*x3*y1 + 2*a2*b1*b2*b3*x3*y1 + a3*b1*b2*b3*x3*y1 + b1^2*b2*b3*x3*y1 + a2*b2^2*b3*x3*y1 + a3*b2^2*b3*x3*y1 + b1*b2^2*b3*x3*y1 + a3*b1*b2^2*b3*x3*y1 + a2*x1*x3*y1 + a1*b2*x1*x3*y1 + a2*b2*x1*x3*y1 + a3*b1*b2*x1*x3*y1 + b1^2*b2*x1*x3*y1 + a3*b2^2*x1*x3*y1 + a2*b3*x1*x3*y1 + 2*b2*b3*x1*x3*y1 + a1*b2*b3*x1*x3*y1 + a2*b2*b3*x1*x3*y1 + b1^2*b2*b3*x1*x3*y1 + a2*x2*x3*y1 + a2*a3*x2*x3*y1 + 2*a2*b1*x2*x3*y1 + a1*a2*b1*x2*x3*y1 + a3*b1*x2*x3*y1 + a1*a2*b1^2*x2*x3*y1 + a1*b2*x2*x3*y1 + a2*b2*x2*x3*y1 + a3*b2*x2*x3*y1 + b1*b2*x2*x3*y1 + a1*b1*b2*x2*x3*y1 + a1*a2*b1*b2*x2*x3*y1 + a3*b1*b2*x2*x3*y1 + a2*a3*b1*b2*x2*x3*y1 + b1^2*b2*x2*x3*y1 + a2*b1^2*b2*x2*x3*y1 + a3*b2^2*x2*x3*y1 + a1*a3*b2^2*x2*x3*y1 + b1*b2^2*x2*x3*y1 + a3*b1^2*b2^2*x2*x3*y1 + 3*b1*b3*x2*x3*y1 + 2*a1*b1*b3*x2*x3*y1 + a1*a2*b1*b3*x2*x3*y1 + a1*b1^2*b3*x2*x3*y1 + a2*b1^2*b3*x2*x3*y1 + b2*b3*x2*x3*y1 + 2*a1*b2*b3*x2*x3*y1 + a2*b2*b3*x2*x3*y1 + a1*a2*b2*b3*x2*x3*y1 + a3*b2*b3*x2*x3*y1 + 2*b1*b2*b3*x2*x3*y1 + 2*a1*b1*b2*b3*x2*x3*y1 + a2*b1*b2*b3*x2*x3*y1 + a2*b1^2*b2*b3*x2*x3*y1 + b2^2*b3*x2*x3*y1 + b2*b3^2*x2*x3*y1 + (a2*a3*y1*(1 + y1))/2 + (a3*b2*y1*(1 + y1))/2 + (a3*b1*b2*y1*(1 + y1))/2 + (a3*b2^2*y1*(1 + y1))/2 + (b2*b3*y1*(1 + y1))/2 + (a1*b2*b3*y1*(1 + y1))/2 + (b1*b2*b3*y1*(1 + y1))/2 + (b1^2*b2*b3*y1*(1 + y1))/2 + 2*a1*a3*b1*y2 + a3*b1^2*y2 + 2*a1*a3*b2*y2 + 3*a3*b1*b2*y2 + 2*a1*a3*b1*b2*y2 + a3*b1^2*b2*y2 + a1*b3*y2 + a1*a2*b3*y2 + a1*a3*b3*y2 + a2*b1*b3*y2 + a1*a2*b1*b3*y2 + a3*b1*b3*y2 + a1*a3*b1*b3*y2 + b1^2*b3*y2 + a1*b1^2*b3*y2 + a3*b1^2*b3*y2 + a1*b2*b3*y2 + b1*b2*b3*y2 + a1*b1^2*b2*b3*y2 + a1*b2^2*b3*y2 + b1*b2^2*b3*y2 + a1*b1*b2^2*b3*y2 + a1*a3*x1*y2 + a2*a3*x1*y2 + a3*b1*x1*y2 + a1*a3*b1*x1*y2 + a3*b1^2*x1*y2 + a1*a3*b1^2*x1*y2 + a3*b2*x1*y2 + a1*a3*b2*x1*y2 + 2*a3*b1*b2*x1*y2 + 2*a1*a3*b1*b2*x1*y2 + a3*b2^2*x1*y2 + a3*b1*b2^2*x1*y2 + b3*x1*y2 + a2*b3*x1*y2 + a1*a3*b3*x1*y2 + 2*b1*b3*x1*y2 + a1*b1*b3*x1*y2 + a2*b1*b3*x1*y2 + a1*a2*b1*b3*x1*y2 + a3*b1*b3*x1*y2 + a1*a3*b1*b3*x1*y2 + a3*b1^2*b3*x1*y2 + b2*b3*x1*y2 + a1*b2*b3*x1*y2 + b1*b2*b3*x1*y2 + a1*b1*b2*b3*x1*y2 + a2*b1*b2*b3*x1*y2 + b1^2*b2*b3*x1*y2 + b2^2*b3*x1*y2 + a1*b1*b2^2*b3*x1*y2 + a1*a3*b1*x2*y2 + a1*a3*b2*x2*y2 + a1*a2*b3*x2*y2 + a1*a3*b3*x2*y2 + a1*b1*b2*b3*x2*y2 + a1*b2^2*b3*x2*y2 + a3*x1*x2*y2 + a3*b1*b2*x1*x2*y2 + b3*x1*x2*y2 + b1*b3*x1*x2*y2 + b2*b3*x1*x2*y2 + b1*b2*b3*x1*x2*y2 + b1^2*b2*b3*x1*x2*y2 + b1*x3*y2 + 2*a1*b1*x3*y2 + a3*b1*x3*y2 + a1*a3*b1*x3*y2 + 2*a2*a3*b1*x3*y2 + b1^2*x3*y2 + a1*b2*x3*y2 + a1*a3*b2*x3*y2 + 2*b1*b2*x3*y2 + 2*a1*b1*b2*x3*y2 + a2*b1*b2*x3*y2 + a1*a3*b1*b2*x3*y2 + a2*a3*b1*b2*x3*y2 + b1^2*b2*x3*y2 + a1*b1^2*b2*x3*y2 + a3*b1^2*b2*x3*y2 + a1*a3*b1^2*b2*x3*y2 + a1*a3*b2^2*x3*y2 + a1*b3*x3*y2 + a1*a2*b3*x3*y2 + 2*b1*b3*x3*y2 + a1*b1*b3*x3*y2 + a2*a3*b1*b3*x3*y2 + a1*b2*b3*x3*y2 + a1*a2*b2*b3*x3*y2 + a1*b1*b2*b3*x3*y2 + 2*a2*b1*b2*b3*x3*y2 + 2*a1*a2*b1*b2*b3*x3*y2 + a3*b1*b2*b3*x3*y2 + a1*b2^2*b3*x3*y2 + a1*a2*b2^2*b3*x3*y2 + b1*b2^2*b3*x3*y2 + a1*b1*b2^2*b3*x3*y2 + a2*b1*b2^2*b3*x3*y2 + a3*b1*b2^2*b3*x3*y2 + x1*x3*y2 + a2*x1*x3*y2 + a3*x1*x3*y2 + a2*a3*x1*x3*y2 + b1*x1*x3*y2 + a2*b1*x1*x3*y2 + a1*a2*b1*x1*x3*y2 + a3*b1*x1*x3*y2 + a1*b1^2*x1*x3*y2 + a1*a2*b1^2*x1*x3*y2 + a3*b2*x1*x3*y2 + a1*a2*b1*b2*x1*x3*y2 + 2*a3*b1*b2*x1*x3*y2 + a2*a3*b1*b2*x1*x3*y2 + b1^2*b2*x1*x3*y2 + a3*b2^2*x1*x3*y2 + a1*a3*b2^2*x1*x3*y2 + b1*b2^2*x1*x3*y2 + a3*b1^2*b2^2*x1*x3*y2 + b3*x1*x3*y2 + a2*b3*x1*x3*y2 + 2*b1*b3*x1*x3*y2 + 2*a1*b1*b3*x1*x3*y2 + a2*b1*b3*x1*x3*y2 + a1*a2*b1*b3*x1*x3*y2 + b1^2*b3*x1*x3*y2 + a1*b1^2*b3*x1*x3*y2 + a1*b2*b3*x1*x3*y2 + a2*b2*b3*x1*x3*y2 + a1*a2*b2*b3*x1*x3*y2 + a3*b2*b3*x1*x3*y2 + b1*b2*b3*x1*x3*y2 + 2*a1*b1*b2*b3*x1*x3*y2 + a2*b1*b2*b3*x1*x3*y2 + b1^2*b2*b3*x1*x3*y2 + a2*b1^2*b2*b3*x1*x3*y2 + b2^2*b3*x1*x3*y2 + b2*b3^2*x1*x3*y2 + b1*x2*x3*y2 + a1*b1*x2*x3*y2 + a2*b1*x2*x3*y2 + a1*b2*x2*x3*y2 + b1*b2*x2*x3*y2 + 2*a2*b1*b2*x2*x3*y2 + b1*b3*x2*x3*y2 + a1*b1*b3*x2*x3*y2 + a2*b1*b3*x2*x3*y2 + 2*a1*b2*b3*x2*x3*y2 + a3*y1*y2 + a1*a3*y1*y2 + a2*a3*y1*y2 + a3*b1*y1*y2 + a1*a3*b1*y1*y2 + a1*a3*b1^2*y1*y2 + a3*b2*y1*y2 + a1*a3*b2*y1*y2 + a3*b1*b2*y1*y2 + 2*a1*a3*b1*b2*y1*y2 + a3*b2^2*y1*y2 + a3*b1*b2^2*y1*y2 + b3*y1*y2 + a1*b3*y1*y2 + a1*a3*b3*y1*y2 + b1*b3*y1*y2 + a1*b1*b3*y1*y2 + 2*a2*b1*b3*y1*y2 + a1*a2*b1*b3*y1*y2 + a3*b1*b3*y1*y2 + a1*a3*b1*b3*y1*y2 + a1*b1^2*b3*y1*y2 + a3*b1^2*b3*y1*y2 + a1*b2*b3*y1*y2 + a1*b1*b2*b3*y1*y2 + a2*b1*b2*b3*y1*y2 + b1^2*b2*b3*y1*y2 + b1*b2^2*b3*y1*y2 + a1*b1*b2^2*b3*y1*y2 + a3*b1*b2*x1*y1*y2 + b3*x1*y1*y2 + a1*b1*b3*x1*y1*y2 + b1^2*b3*x1*y1*y2 + b1*b2*b3*x1*y1*y2 + b1^2*b2*b3*x1*y1*y2 + a3*x2*y1*y2 + a3*b1*b2*x2*y1*y2 + 2*b1*b3*x2*y1*y2 + b1^2*b3*x2*y1*y2 + b2*b3*x2*y1*y2 + b1*b2*b3*x2*y1*y2 + b1^2*b2*b3*x2*y1*y2 + a3*x3*y1*y2 + a2*a3*x3*y1*y2 + 2*b1*x3*y1*y2 + a1*b1*x3*y1*y2 + 2*a2*b1*x3*y1*y2 + a1*a2*b1*x3*y1*y2 + a3*b1*x3*y1*y2 + b1^2*x3*y1*y2 + a1*b1^2*x3*y1*y2 + a2*b1^2*x3*y1*y2 + a1*a2*b1^2*x3*y1*y2 + b2*x3*y1*y2 + a1*b2*x3*y1*y2 + a2*b2*x3*y1*y2 + a3*b2*x3*y1*y2 + 2*b1*b2*x3*y1*y2 + a2*b1*b2*x3*y1*y2 + a1*a2*b1*b2*x3*y1*y2 + 2*a3*b1*b2*x3*y1*y2 + a2*a3*b1*b2*x3*y1*y2 + a2*b1^2*b2*x3*y1*y2 + a1*a3*b2^2*x3*y1*y2 + b1*b2^2*x3*y1*y2 + a3*b1^2*b2^2*x3*y1*y2 + 2*b1*b3*x3*y1*y2 + a1*b1*b3*x3*y1*y2 + a2*b1*b3*x3*y1*y2 + a1*a2*b1*b3*x3*y1*y2 + a1*b1^2*b3*x3*y1*y2 + a2*b1^2*b3*x3*y1*y2 + b2*b3*x3*y1*y2 + a1*b2*b3*x3*y1*y2 + 2*a2*b2*b3*x3*y1*y2 + a1*a2*b2*b3*x3*y1*y2 + a3*b2*b3*x3*y1*y2 + b1*b2*b3*x3*y1*y2 + 2*a1*b1*b2*b3*x3*y1*y2 + a2*b1*b2*b3*x3*y1*y2 + b1^2*b2*b3*x3*y1*y2 + a2*b1^2*b2*b3*x3*y1*y2 + b2^2*b3*x3*y1*y2 + b2*b3^2*x3*y1*y2 + (a1*a3*b1*y2*(1 + y2))/2 + (a1*a3*b2*y2*(1 + y2))/2 + (a3*b1*b2*y2*(1 + y2))/2 + (a1*b3*y2*(1 + y2))/2 + (a1*a2*b3*y2*(1 + y2))/2 + (a1*a3*b3*y2*(1 + y2))/2 + (a3*b1*b3*y2*(1 + y2))/2 + (a1*b1^2*b3*y2*(1 + y2))/2 + (b1*b2*b3*y2*(1 + y2))/2 + (a1*b1*b2*b3*y2*(1 + y2))/2 + (a1*b2^2*b3*y2*(1 + y2))/2 + a2*b1*y3 + a1*a2*b1*y3 + a2*a3*b1*y3 + a1*b2*y3 + a1*a2*b2*y3 + 2*b1*b2*y3 + a1*b1*b2*y3 + 3*a2*b1*b2*y3 + a1*a2*b1*b2*y3 + a3*b1*b2*y3 + a2*a3*b1*b2*y3 + a1*b1^2*b2*y3 + a2*b1^2*b2*y3 + a1*a2*b2^2*y3 + b1*b2^2*y3 + 2*a1*b1*b2^2*y3 + a2*b1*b2^2*y3 + a3*b1*b2^2*y3 + a1*a2*b3*y3 + a2*a3*b1*b3*y3 + a1*a2*b2*b3*y3 + b1*b2*b3*y3 + a1*b1*b2*b3*y3 + a2*b1*b2*b3*y3 + a2*a3*b1*b2*b3*y3 + b1*b2^2*b3*y3 + a1*b1*b2^2*b3*y3 + a2*b1*b2^2*b3*y3 + a3*b1*b2^2*b3*y3 + a2*a3*x1*y3 + a2*b1*x1*y3 + a1*a2*b1*x1*y3 + a2*a3*b1*x1*y3 + a2*a3*b1^2*x1*y3 + 2*a1*b2*x1*y3 + a2*b2*x1*y3 + a1*a2*b2*x1*y3 + a1*a3*b2*x1*y3 + b1*b2*x1*y3 + 2*a1*b1*b2*x1*y3 + 2*a2*b1*b2*x1*y3 + a3*b1*b2*x1*y3 + b2^2*x1*y3 + a1*b2^2*x1*y3 + a2*b2^2*x1*y3 + b1^2*b2^2*x1*y3 + a2*b2*b3*x1*y3 + a1*a3*b2*b3*x1*y3 + a2*a3*b2*b3*x1*y3 + b1*b2*b3*x1*y3 + a1*b1*b2*b3*x1*y3 + a3*b1*b2*b3*x1*y3 + b1^2*b2*b3*x1*y3 + a2*b1^2*b2*b3*x1*y3 + b2^2*b3*x1*y3 + a1*b2^2*b3*x1*y3 + a3*b2^2*b3*x1*y3 + b1*b2^2*b3*x1*y3 + a3*b1*b2^2*b3*x1*y3 + a1*x2*y3 + b1*x2*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a1*a3*b1*x2*y3 + a2*a3*b1*x2*y3 + a1*b1^2*x2*y3 + a1*a3*b1^2*x2*y3 + a1*b2*x2*y3 + a1*a3*b2*x2*y3 + b1*b2*x2*y3 + a3*b1*b2*x2*y3 + a1*a3*b1*b2*x2*y3 + a2*a3*b1*b2*x2*y3 + b1^2*b2*x2*y3 + a1*a3*b1^2*b2*x2*y3 + a1*b3*x2*y3 + a1*a2*b3*x2*y3 + b1*b3*x2*y3 + a1*b1*b3*x2*y3 + a2*a3*b1*b3*x2*y3 + a1*b1^2*b3*x2*y3 + a1*a2*b2*b3*x2*y3 + a1*b1*b2*b3*x2*y3 + 2*a2*b1*b2*b3*x2*y3 + 2*a1*a2*b1*b2*b3*x2*y3 + a1*a2*b2^2*b3*x2*y3 + b1*b2^2*b3*x2*y3 + a1*b1*b2^2*b3*x2*y3 + a2*b1*b2^2*b3*x2*y3 + a3*b1*b2^2*b3*x2*y3 + x1*x2*y3 + a1*x1*x2*y3 + a2*x1*x2*y3 + a3*x1*x2*y3 + a2*a3*x1*x2*y3 + b1*x1*x2*y3 + a2*b1*x1*x2*y3 + a1*a2*b1*x1*x2*y3 + a3*b1*x1*x2*y3 + a1*b1^2*x1*x2*y3 + a2*b1^2*x1*x2*y3 + a1*a2*b1^2*x1*x2*y3 + a3*b2*x1*x2*y3 + 2*a2*b1*b2*x1*x2*y3 + a1*a2*b1*b2*x1*x2*y3 + 2*a3*b1*b2*x1*x2*y3 + a2*a3*b1*b2*x1*x2*y3 + b1^2*b2*x1*x2*y3 + a1*b2^2*x1*x2*y3 + a1*a3*b2^2*x1*x2*y3 + b1*b2^2*x1*x2*y3 + b1^2*b2^2*x1*x2*y3 + a3*b1^2*b2^2*x1*x2*y3 + b3*x1*x2*y3 + a1*b3*x1*x2*y3 + a2*b3*x1*x2*y3 + 3*b1*b3*x1*x2*y3 + 2*a1*b1*b3*x1*x2*y3 + 2*a2*b1*b3*x1*x2*y3 + a1*a2*b1*b3*x1*x2*y3 + b1^2*b3*x1*x2*y3 + a1*b1^2*b3*x1*x2*y3 + 2*b2*b3*x1*x2*y3 + a1*b2*b3*x1*x2*y3 + 2*a2*b2*b3*x1*x2*y3 + a1*a2*b2*b3*x1*x2*y3 + a3*b2*b3*x1*x2*y3 + 2*b1*b2*b3*x1*x2*y3 + 2*a1*b1*b2*b3*x1*x2*y3 + a2*b1*b2*b3*x1*x2*y3 + b1^2*b2*b3*x1*x2*y3 + a2*b1^2*b2*b3*x1*x2*y3 + b2^2*b3*x1*x2*y3 + b2*b3^2*x1*x2*y3 + a1*a2*b1*x3*y3 + a2*a3*b1*x3*y3 + a2*b1^2*x3*y3 + a1*a2*b2*x3*y3 + a1*b1*b2*x3*y3 + a2*b1*b2*x3*y3 + a3*b1^2*b2*x3*y3 + a1*b2^2*x3*y3 + b1*b2^2*x3*y3 + b1^2*b2^2*x3*y3 + a1*a2*b3*x3*y3 + a1*b1*b2*b3*x3*y3 + a2*b1*b2*b3*x3*y3 + a1*b2^2*b3*x3*y3 + b1*b2^2*b3*x3*y3 + a2*x1*x3*y3 + a2*b1*x1*x3*y3 + b2*x1*x3*y3 + a1*b2*x1*x3*y3 + a2*b2*x1*x3*y3 + 2*b1*b2*x1*x3*y3 + a1*b1*b2*x1*x3*y3 + a2*b1*b2*x1*x3*y3 + a3*b1*b2*x1*x3*y3 + a1*b2^2*x1*x3*y3 + a2*b2^2*x1*x3*y3 + a3*b2^2*x1*x3*y3 + b1*b2^2*x1*x3*y3 + b1^2*b2^2*x1*x3*y3 + b2*b3*x1*x3*y3 + 2*b1*b2*b3*x1*x3*y3 + b1^2*b2*b3*x1*x3*y3 + b2^2*b3*x1*x3*y3 + b1*b2^2*b3*x1*x3*y3 + a1*x2*x3*y3 + 2*a1*b1*x2*x3*y3 + a1*b1^2*x2*x3*y3 + 2*a1*b2*x2*x3*y3 + b1*b2*x2*x3*y3 + 2*a1*b1*b2*x2*x3*y3 + b1*b2^2*x2*x3*y3 + a1*b3*x2*x3*y3 + b1*b3*x2*x3*y3 + a1*b1*b3*x2*x3*y3 + a1*b1^2*b3*x2*x3*y3 + 2*a1*b1*b2*b3*x2*x3*y3 + a1*b2^2*b3*x2*x3*y3 + b1*b2^2*b3*x2*x3*y3 + a2*y1*y3 + a2*a3*y1*y3 + 2*a2*b1*y1*y3 + a1*a2*b1*y1*y3 + a2*a3*b1*y1*y3 + a2*b1^2*y1*y3 + b2*y1*y3 + a1*b2*y1*y3 + 2*a2*b2*y1*y3 + a1*a2*b2*y1*y3 + 2*a3*b2*y1*y3 + a1*a3*b2*y1*y3 + 2*b1*b2*y1*y3 + a1*b1*b2*y1*y3 + 2*a2*b1*b2*y1*y3 + a3*b1*b2*y1*y3 + b1^2*b2*y1*y3 + a1*b1^2*b2*y1*y3 + a2*b1^2*b2*y1*y3 + a3*b1^2*b2*y1*y3 + a1*b2^2*y1*y3 + a2*b2^2*y1*y3 + b1^2*b2^2*y1*y3 + a2*b3*y1*y3 + a2*b1*b3*y1*y3 + a2*b1^2*b3*y1*y3 + a1*b2*b3*y1*y3 + 2*a2*b2*b3*y1*y3 + a3*b2*b3*y1*y3 + a1*a3*b2*b3*y1*y3 + a2*a3*b2*b3*y1*y3 + 3*a1*b1*b2*b3*y1*y3 + 2*a2*b1*b2*b3*y1*y3 + a3*b1*b2*b3*y1*y3 + b1^2*b2*b3*y1*y3 + b2^2*b3*y1*y3 + a2*b2^2*b3*y1*y3 + a3*b2^2*b3*y1*y3 + a3*b1*b2^2*b3*y1*y3 + a2*x1*y1*y3 + b2*x1*y1*y3 + a1*b2*x1*y1*y3 + a2*b2*x1*y1*y3 + b1*b2*x1*y1*y3 + a3*b1*b2*x1*y1*y3 + b1^2*b2*x1*y1*y3 + b2^2*x1*y1*y3 + a3*b2^2*x1*y1*y3 + a2*b3*x1*y1*y3 + b2*b3*x1*y1*y3 + a1*b2*b3*x1*y1*y3 + a2*b2*b3*x1*y1*y3 + b1^2*b2*b3*x1*y1*y3 + x2*y1*y3 + a1*x2*y1*y3 + a3*x2*y1*y3 + a2*a3*x2*y1*y3 + b1*x2*y1*y3 + a1*b1*x2*y1*y3 + 2*a2*b1*x2*y1*y3 + a1*a2*b1*x2*y1*y3 + a3*b1*x2*y1*y3 + b1^2*x2*y1*y3 + a1*b1^2*x2*y1*y3 + a1*a2*b1^2*x2*y1*y3 + a1*b2*x2*y1*y3 + a2*b2*x2*y1*y3 + a3*b2*x2*y1*y3 + 2*b1*b2*x2*y1*y3 + a2*b1*b2*x2*y1*y3 + a1*a2*b1*b2*x2*y1*y3 + 2*a3*b1*b2*x2*y1*y3 + a2*a3*b1*b2*x2*y1*y3 + a2*b1^2*b2*x2*y1*y3 + b2^2*x2*y1*y3 + a1*b2^2*x2*y1*y3 + a3*b2^2*x2*y1*y3 + a1*a3*b2^2*x2*y1*y3 + b1*b2^2*x2*y1*y3 + b1^2*b2^2*x2*y1*y3 + a3*b1^2*b2^2*x2*y1*y3 + b3*x2*y1*y3 + a1*b3*x2*y1*y3 + 3*b1*b3*x2*y1*y3 + a1*b1*b3*x2*y1*y3 + a1*a2*b1*b3*x2*y1*y3 + a1*b1^2*b3*x2*y1*y3 + a2*b1^2*b3*x2*y1*y3 + b2*b3*x2*y1*y3 + a1*b2*b3*x2*y1*y3 + a2*b2*b3*x2*y1*y3 + a1*a2*b2*b3*x2*y1*y3 + a3*b2*b3*x2*y1*y3 + 2*b1*b2*b3*x2*y1*y3 + 2*a1*b1*b2*b3*x2*y1*y3 + a2*b1*b2*b3*x2*y1*y3 + b1^2*b2*b3*x2*y1*y3 + a2*b1^2*b2*b3*x2*y1*y3 + b2^2*b3*x2*y1*y3 + b2*b3^2*x2*y1*y3 + a2*x3*y1*y3 + a2*b1*x3*y1*y3 + b2*x3*y1*y3 + a1*b2*x3*y1*y3 + a2*b2*x3*y1*y3 + 3*b1*b2*x3*y1*y3 + a1*b1*b2*x3*y1*y3 + a2*b1*b2*x3*y1*y3 + a3*b1*b2*x3*y1*y3 + b1^2*b2*x3*y1*y3 + b2^2*x3*y1*y3 + a1*b2^2*x3*y1*y3 + a2*b2^2*x3*y1*y3 + a3*b2^2*x3*y1*y3 + b1*b2^2*x3*y1*y3 + b1^2*b2^2*x3*y1*y3 + b2*b3*x3*y1*y3 + b1^2*b2*b3*x3*y1*y3 + b1*b2^2*b3*x3*y1*y3 + a1*y2*y3 + 2*a2*b1*y2*y3 + a1*a3*b1*y2*y3 + 2*a2*a3*b1*y2*y3 + a1*b1^2*y2*y3 + a3*b1^2*y2*y3 + a1*a3*b1^2*y2*y3 + a1*a3*b2*y2*y3 + b1*b2*y2*y3 + a1*b1*b2*y2*y3 + 2*a2*b1*b2*y2*y3 + 2*a3*b1*b2*y2*y3 + a1*a3*b1*b2*y2*y3 + a2*a3*b1*b2*y2*y3 + a3*b1^2*b2*y2*y3 + a1*a3*b1^2*b2*y2*y3 + a1*b3*y2*y3 + a1*a2*b3*y2*y3 + b1*b3*y2*y3 + a1*b1*b3*y2*y3 + a2*b1*b3*y2*y3 + a3*b1*b3*y2*y3 + a2*a3*b1*b3*y2*y3 + b1^2*b3*y2*y3 + a1*b1^2*b3*y2*y3 + a1*b2*b3*y2*y3 + a1*a2*b2*b3*y2*y3 + 3*b1*b2*b3*y2*y3 + a1*b1*b2*b3*y2*y3 + 2*a2*b1*b2*b3*y2*y3 + 2*a1*a2*b1*b2*b3*y2*y3 + a3*b1*b2*b3*y2*y3 + a1*b2^2*b3*y2*y3 + a1*a2*b2^2*b3*y2*y3 + b1*b2^2*b3*y2*y3 + a1*b1*b2^2*b3*y2*y3 + a2*b1*b2^2*b3*y2*y3 + a3*b1*b2^2*b3*y2*y3 + x1*y2*y3 + a1*x1*y2*y3 + a2*a3*x1*y2*y3 + b1*x1*y2*y3 + a1*b1*x1*y2*y3 + a2*b1*x1*y2*y3 + a1*a2*b1*x1*y2*y3 + a3*b1*x1*y2*y3 + b1^2*x1*y2*y3 + a1*a2*b1^2*x1*y2*y3 + b2*x1*y2*y3 + a3*b2*x1*y2*y3 + 2*b1*b2*x1*y2*y3 + a1*b1*b2*x1*y2*y3 + a2*b1*b2*x1*y2*y3 + a1*a2*b1*b2*x1*y2*y3 + a3*b1*b2*x1*y2*y3 + a2*a3*b1*b2*x1*y2*y3 + b1^2*b2*x1*y2*y3 + b2^2*x1*y2*y3 + a1*b2^2*x1*y2*y3 + a3*b2^2*x1*y2*y3 + a1*a3*b2^2*x1*y2*y3 + b1*b2^2*x1*y2*y3 + b1^2*b2^2*x1*y2*y3 + a3*b1^2*b2^2*x1*y2*y3 + b3*x1*y2*y3 + a1*b3*x1*y2*y3 + a2*b3*x1*y2*y3 + 2*b1*b3*x1*y2*y3 + a1*b1*b3*x1*y2*y3 + a2*b1*b3*x1*y2*y3 + a1*a2*b1*b3*x1*y2*y3 + a1*b1^2*b3*x1*y2*y3 + a2*b2*b3*x1*y2*y3 + a1*a2*b2*b3*x1*y2*y3 + a3*b2*b3*x1*y2*y3 + b1*b2*b3*x1*y2*y3 + 2*a1*b1*b2*b3*x1*y2*y3 + a2*b1*b2*b3*x1*y2*y3 + a2*b1^2*b2*b3*x1*y2*y3 + b2^2*b3*x1*y2*y3 + b2*b3^2*x1*y2*y3 + a1*b1*x2*y2*y3 + a2*b1*x2*y2*y3 + a1*b2*x2*y2*y3 + b1*b2*x2*y2*y3 + 2*a2*b1*b2*x2*y2*y3 + b1*b3*x2*y2*y3 + a1*b1*b3*x2*y2*y3 + a2*b1*b3*x2*y2*y3 + 2*a1*b2*b3*x2*y2*y3 + a1*x3*y2*y3 + 2*b1*x3*y2*y3 + 2*a1*b1*x3*y2*y3 + b1^2*x3*y2*y3 + a1*b1^2*x3*y2*y3 + 2*a1*b2*x3*y2*y3 + b1*b2*x3*y2*y3 + 2*a1*b1*b2*x3*y2*y3 + b1*b2^2*x3*y2*y3 + a1*b3*x3*y2*y3 + 2*b1*b3*x3*y2*y3 + a1*b1*b3*x3*y2*y3 + b1^2*b3*x3*y2*y3 + a1*b1^2*b3*x3*y2*y3 + 2*b1*b2*b3*x3*y2*y3 + 2*a1*b1*b2*b3*x3*y2*y3 + a1*b2^2*b3*x3*y2*y3 + b1*b2^2*b3*x3*y2*y3 + a1*y1*y2*y3 + a2*y1*y2*y3 + a2*a3*y1*y2*y3 + b1*y1*y2*y3 + 2*a2*b1*y1*y2*y3 + a1*a2*b1*y1*y2*y3 + a3*b1*y1*y2*y3 + b1^2*y1*y2*y3 + a2*b1^2*y1*y2*y3 + a1*a2*b1^2*y1*y2*y3 + b2*y1*y2*y3 + a1*b2*y1*y2*y3 + a2*b2*y1*y2*y3 + a3*b2*y1*y2*y3 + b1*b2*y1*y2*y3 + a1*b1*b2*y1*y2*y3 + 2*a2*b1*b2*y1*y2*y3 + a1*a2*b1*b2*y1*y2*y3 + a3*b1*b2*y1*y2*y3 + a2*a3*b1*b2*y1*y2*y3 + b1^2*b2*y1*y2*y3 + a2*b1^2*b2*y1*y2*y3 + a1*b2^2*y1*y2*y3 + a1*a3*b2^2*y1*y2*y3 + b1*b2^2*y1*y2*y3 + b1^2*b2^2*y1*y2*y3 + a3*b1^2*b2^2*y1*y2*y3 + a1*b3*y1*y2*y3 + b1*b3*y1*y2*y3 + 2*a1*b1*b3*y1*y2*y3 + a2*b1*b3*y1*y2*y3 + a1*a2*b1*b3*y1*y2*y3 + a1*b1^2*b3*y1*y2*y3 + a2*b1^2*b3*y1*y2*y3 + 2*a1*b2*b3*y1*y2*y3 + 2*a2*b2*b3*y1*y2*y3 + a1*a2*b2*b3*y1*y2*y3 + a3*b2*b3*y1*y2*y3 + b1*b2*b3*y1*y2*y3 + 2*a1*b1*b2*b3*y1*y2*y3 + a2*b1*b2*b3*y1*y2*y3 + a2*b1^2*b2*b3*y1*y2*y3 + b2^2*b3*y1*y2*y3 + b2*b3^2*y1*y2*y3 + a2*b1*y3*(1 + y3) + (a1*a2*b1*y3*(1 + y3))/2 + (a2*b1^2*y3*(1 + y3))/2 + (a1*a2*b2*y3*(1 + y3))/2 + (b1*b2*y3*(1 + y3))/2 + a1*b1*b2*y3*(1 + y3) + (a2*b1*b2*y3*(1 + y3))/2 + (a3*b1*b2*y3*(1 + y3))/2 + (b1^2*b2*y3*(1 + y3))/2 + (a1*b2^2*y3*(1 + y3))/2 + (b1*b2^2*y3*(1 + y3))/2 + (b1^2*b2^2*y3*(1 + y3))/2 + (a1*a2*b3*y3*(1 + y3))/2 + (a2*b1*b3*y3*(1 + y3))/2 + b1*b2*b3*y3*(1 + y3) + (a1*b1*b2*b3*y3*(1 + y3))/2 + (a2*b1*b2*b3*y3*(1 + y3))/2 + (a3*b1*b2*b3*y3*(1 + y3))/2 + 2*a2*a3*b1*z1 + 2*a1*a3*b2*z1 + 2*a2*a3*b2*z1 + 2*a3*b1*b2*z1 + a3*b1^2*b2*z1 + a3*b2^2*z1 + a3*b1*b2^2*z1 + a2*b1*b3*z1 + a1*b2*b3*z1 + a2*b2*b3*z1 + b1*b2*b3*z1 + 2*a1*b1*b2*b3*z1 + b1^2*b2*b3*z1 + b2^2*b3*z1 + b1*b2^2*b3*z1 + a2*a3*x1*z1 + a3*b2*x1*z1 + a3*b1*b2*x1*z1 + a2*b1*b3*x1*z1 + a2*b2*b3*x1*z1 + 2*b1*b2*b3*x1*z1 + b2^2*b3*x1*z1 + b1*b2^2*b3*x1*z1 + a1*a3*x2*z1 + a2*a3*x2*z1 + a3*b1*x2*z1 + a1*a3*b1*x2*z1 + a3*b1^2*x2*z1 + a1*a3*b1^2*x2*z1 + a3*b2*x2*z1 + a1*a3*b2*x2*z1 + a3*b1*b2*x2*z1 + 2*a1*a3*b1*b2*x2*z1 + a3*b1*b2^2*x2*z1 + a1*b1*b3*x2*z1 + 2*a2*b1*b3*x2*z1 + a1*a2*b1*b3*x2*z1 + a1*a3*b1*b3*x2*z1 + a3*b1^2*b3*x2*z1 + a2*b2*b3*x2*z1 + a1*b1*b2*b3*x2*z1 + a2*b1*b2*b3*x2*z1 + b2^2*b3*x2*z1 + b1*b2^2*b3*x2*z1 + a1*b1*b2^2*b3*x2*z1 + a3*x1*x2*z1 + a1*a3*b2*x1*x2*z1 + b3*x1*x2*z1 + a1*b3*x1*x2*z1 + 2*b1*b3*x1*x2*z1 + b1^2*b3*x1*x2*z1 + b2*b3*x1*x2*z1 + a1*b2*b3*x1*x2*z1 + a1*b1*b2*b3*x1*x2*z1 + a1*a2*x3*z1 + a2*a3*x3*z1 + 2*a2*b1*x3*z1 + a1*a2*b1*x3*z1 + a2*b1^2*x3*z1 + a2*a3*b1^2*x3*z1 + a1*b2*x3*z1 + a2*b2*x3*z1 + a1*a2*b2*x3*z1 + a1*a3*b2*x3*z1 + 2*b1*b2*x3*z1 + 2*a1*b1*b2*x3*z1 + 2*a2*b1*b2*x3*z1 + a3*b1*b2*x3*z1 + b1^2*b2*x3*z1 + b2^2*x3*z1 + a1*b2^2*x3*z1 + a2*b2^2*x3*z1 + a3*b2^2*x3*z1 + b1*b2^2*x3*z1 + b1^2*b2^2*x3*z1 + a1*b2*b3*x3*z1 + a1*a3*b2*b3*x3*z1 + a2*a3*b2*b3*x3*z1 + a1*b1*b2*b3*x3*z1 + a2*b1*b2*b3*x3*z1 + a3*b1*b2*b3*x3*z1 + a2*b1^2*b2*b3*x3*z1 + a1*b2^2*b3*x3*z1 + a3*b2^2*b3*x3*z1 + a3*b1*b2^2*b3*x3*z1 + a2*b1*x1*x3*z1 + b2*x1*x3*z1 + a1*b2*x1*x3*z1 + a3*b2*x1*x3*z1 + a1*a3*b2*x1*x3*z1 + a2*a3*b2*x1*x3*z1 + b1*b2*x1*x3*z1 + a1*b1*b2*x1*x3*z1 + a2*b1*b2*x1*x3*z1 + b1^2*b2*x1*x3*z1 + b2^2*x1*x3*z1 + a3*b1*b2^2*x1*x3*z1 + a2*b3*x1*x3*z1 + a2*b1*b3*x1*x3*z1 + b2*b3*x1*x3*z1 + a1*b2*b3*x1*x3*z1 + a2*b2*b3*x1*x3*z1 + b1*b2*b3*x1*x3*z1 + a1*b1*b2*b3*x1*x3*z1 + a2*b1*b2*b3*x1*x3*z1 + a2*x2*x3*z1 + a1*a2*x2*x3*z1 + a3*x2*x3*z1 + a2*a3*x2*x3*z1 + 2*a2*b1*x2*x3*z1 + a1*a2*b1*x2*x3*z1 + a3*b1*x2*x3*z1 + a2*b1^2*x2*x3*z1 + a1*a2*b1^2*x2*x3*z1 + a1*b2*x2*x3*z1 + a1*a2*b2*x2*x3*z1 + a2*a3*b2*x2*x3*z1 + b1*b2*x2*x3*z1 + a2*b1*b2*x2*x3*z1 + a1*a2*b1*b2*x2*x3*z1 + a3*b1*b2*x2*x3*z1 + a2*a3*b1*b2*x2*x3*z1 + b1^2*b2*x2*x3*z1 + a1*b1^2*b2*x2*x3*z1 + b2^2*x2*x3*z1 + a1*a3*b2^2*x2*x3*z1 + b1*b2^2*x2*x3*z1 + a3*b1*b2^2*x2*x3*z1 + a3*b1^2*b2^2*x2*x3*z1 + b3*x2*x3*z1 + a1*b3*x2*x3*z1 + 2*b1*b3*x2*x3*z1 + 2*a1*b1*b3*x2*x3*z1 + 2*a2*b1*b3*x2*x3*z1 + a1*a2*b1*b3*x2*x3*z1 + b1^2*b3*x2*x3*z1 + a1*b1^2*b3*x2*x3*z1 + 3*b2*b3*x2*x3*z1 + a1*b2*b3*x2*x3*z1 + a2*b2*b3*x2*x3*z1 + a1*a2*b2*b3*x2*x3*z1 + a3*b2*b3*x2*x3*z1 + 3*b1*b2*b3*x2*x3*z1 + 2*a1*b1*b2*b3*x2*x3*z1 + 2*a2*b1*b2*b3*x2*x3*z1 + a2*b1^2*b2*b3*x2*x3*z1 + b2^2*b3*x2*x3*z1 + b2*b3^2*x2*x3*z1 + a2*a3*y1*z1 + 2*a3*b2*y1*z1 + a3*b1*b2*y1*z1 + a2*b1*b3*y1*z1 + b2*b3*y1*z1 + a2*b2*b3*y1*z1 + b1*b2*b3*y1*z1 + b2^2*b3*y1*z1 + b1*b2^2*b3*y1*z1 + a3*b2*x1*y1*z1 + b2*b3*x1*y1*z1 + b1*b2*b3*x1*y1*z1 + a3*x2*y1*z1 + a3*b2*x2*y1*z1 + a1*a3*b2*x2*y1*z1 + a3*b1*b2*x2*y1*z1 + b3*x2*y1*z1 + a1*b3*x2*y1*z1 + 2*b1*b3*x2*y1*z1 + a1*b1*b3*x2*y1*z1 + a1*b2*b3*x2*y1*z1 + 2*b1*b2*b3*x2*y1*z1 + a1*b1*b2*b3*x2*y1*z1 + b1^2*b2*b3*x2*y1*z1 + a2*x3*y1*z1 + a2*b1*x3*y1*z1 + b2*x3*y1*z1 + a1*b2*x3*y1*z1 + a2*b2*x3*y1*z1 + 2*a3*b2*x3*y1*z1 + a1*a3*b2*x3*y1*z1 + a2*a3*b2*x3*y1*z1 + b1*b2*x3*y1*z1 + a1*b1*b2*x3*y1*z1 + a2*b1*b2*x3*y1*z1 + a3*b1*b2*x3*y1*z1 + b2^2*x3*y1*z1 + a3*b2^2*x3*y1*z1 + a3*b1*b2^2*x3*y1*z1 + a2*b3*x3*y1*z1 + a2*b1*b3*x3*y1*z1 + 2*b2*b3*x3*y1*z1 + 3*b1*b2*b3*x3*y1*z1 + a1*b1*b2*b3*x3*y1*z1 + a2*b1*b2*b3*x3*y1*z1 + b1^2*b2*b3*x3*y1*z1 + a3*y2*z1 + a1*a3*y2*z1 + a2*a3*y2*z1 + 2*a3*b1*y2*z1 + a1*a3*b1*y2*z1 + a3*b1^2*y2*z1 + a1*a3*b1^2*y2*z1 + 2*a3*b2*y2*z1 + a1*a3*b2*y2*z1 + a3*b1*b2*y2*z1 + 2*a1*a3*b1*b2*y2*z1 + a3*b1*b2^2*y2*z1 + 2*b1*b3*y2*z1 + a2*b1*b3*y2*z1 + a1*a2*b1*b3*y2*z1 + a3*b1*b3*y2*z1 + a1*a3*b1*b3*y2*z1 + a3*b1^2*b3*y2*z1 + a2*b2*b3*y2*z1 + 2*b1*b2*b3*y2*z1 + a1*b1*b2*b3*y2*z1 + a2*b1*b2*b3*y2*z1 + b1^2*b2*b3*y2*z1 + b2^2*b3*y2*z1 + a1*b1*b2^2*b3*y2*z1 + a3*x1*y2*z1 + a3*b2*x1*y2*z1 + a1*a3*b2*x1*y2*z1 + b3*x1*y2*z1 + a1*b3*x1*y2*z1 + b1*b3*x1*y2*z1 + b1^2*b3*x1*y2*z1 + a1*b2*b3*x1*y2*z1 + b1*b2*b3*x1*y2*z1 + a1*b1*b2*b3*x1*y2*z1 + a3*x2*y2*z1 + a3*b2*x2*y2*z1 + a3*b1*b2*x2*y2*z1 + b3*x2*y2*z1 + b1*b3*x2*y2*z1 + 2*b1*b2*b3*x2*y2*z1 + b1^2*b2*b3*x2*y2*z1 + a1*x3*y2*z1 + a1*a2*x3*y2*z1 + a2*a3*x3*y2*z1 + a1*b1*x3*y2*z1 + a1*a2*b1*x3*y2*z1 + a3*b1*x3*y2*z1 + a1*b1^2*x3*y2*z1 + a1*a2*b1^2*x3*y2*z1 + a2*b2*x3*y2*z1 + a1*a2*b2*x3*y2*z1 + a3*b2*x3*y2*z1 + a2*a3*b2*x3*y2*z1 + a1*b1*b2*x3*y2*z1 + a1*a2*b1*b2*x3*y2*z1 + 2*a3*b1*b2*x3*y2*z1 + a2*a3*b1*b2*x3*y2*z1 + a1*b1^2*b2*x3*y2*z1 + b2^2*x3*y2*z1 + a3*b2^2*x3*y2*z1 + a1*a3*b2^2*x3*y2*z1 + b1*b2^2*x3*y2*z1 + a3*b1*b2^2*x3*y2*z1 + a3*b1^2*b2^2*x3*y2*z1 + 2*b3*x3*y2*z1 + a1*b3*x3*y2*z1 + b1*b3*x3*y2*z1 + a1*b1*b3*x3*y2*z1 + a2*b1*b3*x3*y2*z1 + a1*a2*b1*b3*x3*y2*z1 + a1*b1^2*b3*x3*y2*z1 + 2*b2*b3*x3*y2*z1 + 2*a2*b2*b3*x3*y2*z1 + a1*a2*b2*b3*x3*y2*z1 + a3*b2*b3*x3*y2*z1 + 3*b1*b2*b3*x3*y2*z1 + 2*a1*b1*b2*b3*x3*y2*z1 + 2*a2*b1*b2*b3*x3*y2*z1 + b1^2*b2*b3*x3*y2*z1 + a2*b1^2*b2*b3*x3*y2*z1 + b2^2*b3*x3*y2*z1 + b2*b3^2*x3*y2*z1 + a3*y1*y2*z1 + a1*a3*b2*y1*y2*z1 + a3*b1*b2*y1*y2*z1 + b3*y1*y2*z1 + a1*b3*y1*y2*z1 + 2*b1*b3*y1*y2*z1 + a1*b1*b3*y1*y2*z1 + b2*b3*y1*y2*z1 + a1*b2*b3*y1*y2*z1 + b1*b2*b3*y1*y2*z1 + a1*b1*b2*b3*y1*y2*z1 + b1^2*b2*b3*y1*y2*z1 + a1*a2*y3*z1 + a2*a3*y3*z1 + a2*b1*y3*z1 + a1*a2*b1*y3*z1 + a2*a3*b1^2*y3*z1 + b2*y3*z1 + a1*a2*b2*y3*z1 + a1*a3*b2*y3*z1 + b1*b2*y3*z1 + 2*a1*b1*b2*y3*z1 + 2*a2*b1*b2*y3*z1 + a3*b1*b2*y3*z1 + b2^2*y3*z1 + a1*b2^2*y3*z1 + a2*b2^2*y3*z1 + b1*b2^2*y3*z1 + b1^2*b2^2*y3*z1 + b2*b3*y3*z1 + a2*b2*b3*y3*z1 + a3*b2*b3*y3*z1 + a1*a3*b2*b3*y3*z1 + a2*a3*b2*b3*y3*z1 + 2*b1*b2*b3*y3*z1 + a1*b1*b2*b3*y3*z1 + a2*b1*b2*b3*y3*z1 + a3*b1*b2*b3*y3*z1 + b1^2*b2*b3*y3*z1 + a2*b1^2*b2*b3*y3*z1 + b2^2*b3*y3*z1 + a1*b2^2*b3*y3*z1 + a3*b2^2*b3*y3*z1 + b1*b2^2*b3*y3*z1 + a3*b1*b2^2*b3*y3*z1 + a2*b1*x1*y3*z1 + 2*b2*x1*y3*z1 + 2*a1*b2*x1*y3*z1 + a2*b2*x1*y3*z1 + 2*a3*b2*x1*y3*z1 + a1*a3*b2*x1*y3*z1 + a2*a3*b2*x1*y3*z1 + a1*b1*b2*x1*y3*z1 + a2*b1*b2*x1*y3*z1 + b1^2*b2*x1*y3*z1 + b2^2*x1*y3*z1 + b1*b2^2*x1*y3*z1 + a3*b1*b2^2*x1*y3*z1 + a2*b3*x1*y3*z1 + a2*b1*b3*x1*y3*z1 + b2*b3*x1*y3*z1 + a1*b2*b3*x1*y3*z1 + a2*b2*b3*x1*y3*z1 + 2*b1*b2*b3*x1*y3*z1 + a1*b1*b2*b3*x1*y3*z1 + a2*b1*b2*b3*x1*y3*z1 + x2*y3*z1 + a1*a2*x2*y3*z1 + a2*a3*x2*y3*z1 + a1*b1*x2*y3*z1 + 2*a2*b1*x2*y3*z1 + a1*a2*b1*x2*y3*z1 + a3*b1*x2*y3*z1 + a1*b1^2*x2*y3*z1 + a2*b1^2*x2*y3*z1 + a1*a2*b1^2*x2*y3*z1 + a2*b2*x2*y3*z1 + a1*a2*b2*x2*y3*z1 + a3*b2*x2*y3*z1 + a2*a3*b2*x2*y3*z1 + b1*b2*x2*y3*z1 + a1*b1*b2*x2*y3*z1 + 2*a2*b1*b2*x2*y3*z1 + a1*a2*b1*b2*x2*y3*z1 + 2*a3*b1*b2*x2*y3*z1 + a2*a3*b1*b2*x2*y3*z1 + b1^2*b2*x2*y3*z1 + a1*b1^2*b2*x2*y3*z1 + b2^2*x2*y3*z1 + a1*b2^2*x2*y3*z1 + a1*a3*b2^2*x2*y3*z1 + 2*b1*b2^2*x2*y3*z1 + a3*b1*b2^2*x2*y3*z1 + b1^2*b2^2*x2*y3*z1 + a3*b1^2*b2^2*x2*y3*z1 + 2*b3*x2*y3*z1 + a1*b3*x2*y3*z1 + 2*b1*b3*x2*y3*z1 + a1*b1*b3*x2*y3*z1 + 2*a2*b1*b3*x2*y3*z1 + a1*a2*b1*b3*x2*y3*z1 + a1*b1^2*b3*x2*y3*z1 + 2*b2*b3*x2*y3*z1 + a2*b2*b3*x2*y3*z1 + a1*a2*b2*b3*x2*y3*z1 + a3*b2*b3*x2*y3*z1 + 4*b1*b2*b3*x2*y3*z1 + 2*a1*b1*b2*b3*x2*y3*z1 + 2*a2*b1*b2*b3*x2*y3*z1 + b1^2*b2*b3*x2*y3*z1 + a2*b1^2*b2*b3*x2*y3*z1 + b2^2*b3*x2*y3*z1 + b2*b3^2*x2*y3*z1 + a2*b1*x3*y3*z1 + 2*a1*b2*x3*y3*z1 + 2*a2*b2*x3*y3*z1 + a3*b2*x3*y3*z1 + 2*b1*b2*x3*y3*z1 + a1*b1*b2*x3*y3*z1 + a2*b1*b2*x3*y3*z1 + a3*b1*b2*x3*y3*z1 + a1*b2^2*x3*y3*z1 + a2*b2^2*x3*y3*z1 + a3*b2^2*x3*y3*z1 + b1^2*b2^2*x3*y3*z1 + 2*b2*b3*x3*y3*z1 + 3*b1*b2*b3*x3*y3*z1 + b1^2*b2*b3*x3*y3*z1 + b2^2*b3*x3*y3*z1 + b1*b2^2*b3*x3*y3*z1 + a2*y1*y3*z1 + a2*b1*y1*y3*z1 + 2*a1*b2*y1*y3*z1 + 2*a2*b2*y1*y3*z1 + a3*b2*y1*y3*z1 + a1*a3*b2*y1*y3*z1 + a2*a3*b2*y1*y3*z1 + 3*b1*b2*y1*y3*z1 + a1*b1*b2*y1*y3*z1 + a2*b1*b2*y1*y3*z1 + a3*b1*b2*y1*y3*z1 + a3*b2^2*y1*y3*z1 + b1*b2^2*y1*y3*z1 + a3*b1*b2^2*y1*y3*z1 + a2*b3*y1*y3*z1 + a2*b1*b3*y1*y3*z1 + b2*b3*y1*y3*z1 + 2*b1*b2*b3*y1*y3*z1 + a1*b1*b2*b3*y1*y3*z1 + a2*b1*b2*b3*y1*y3*z1 + b1^2*b2*b3*y1*y3*z1 + a1*y2*y3*z1 + a2*y2*y3*z1 + a1*a2*y2*y3*z1 + a3*y2*y3*z1 + a2*a3*y2*y3*z1 + 2*b1*y2*y3*z1 + a1*a2*b1*y2*y3*z1 + a3*b1*y2*y3*z1 + b1^2*y2*y3*z1 + a1*a2*b1^2*y2*y3*z1 + 2*b2*y2*y3*z1 + a1*b2*y2*y3*z1 + 2*a2*b2*y2*y3*z1 + a1*a2*b2*y2*y3*z1 + a2*a3*b2*y2*y3*z1 + 2*b1*b2*y2*y3*z1 + a2*b1*b2*y2*y3*z1 + a1*a2*b1*b2*y2*y3*z1 + a3*b1*b2*y2*y3*z1 + a2*a3*b1*b2*y2*y3*z1 + a1*b1^2*b2*y2*y3*z1 + a1*b2^2*y2*y3*z1 + a3*b2^2*y2*y3*z1 + a1*a3*b2^2*y2*y3*z1 + 2*b1*b2^2*y2*y3*z1 + a3*b1*b2^2*y2*y3*z1 + b1^2*b2^2*y2*y3*z1 + a3*b1^2*b2^2*y2*y3*z1 + b3*y2*y3*z1 + a1*b3*y2*y3*z1 + 2*b1*b3*y2*y3*z1 + 2*a1*b1*b3*y2*y3*z1 + a2*b1*b3*y2*y3*z1 + a1*a2*b1*b3*y2*y3*z1 + b1^2*b3*y2*y3*z1 + a1*b1^2*b3*y2*y3*z1 + 2*b2*b3*y2*y3*z1 + a1*b2*b3*y2*y3*z1 + 2*a2*b2*b3*y2*y3*z1 + a1*a2*b2*b3*y2*y3*z1 + a3*b2*b3*y2*y3*z1 + 2*b1*b2*b3*y2*y3*z1 + 2*a1*b1*b2*b3*y2*y3*z1 + 2*a2*b1*b2*b3*y2*y3*z1 + a2*b1^2*b2*b3*y2*y3*z1 + b2^2*b3*y2*y3*z1 + b2*b3^2*y2*y3*z1 + (a2*a3*z1*(1 + z1))/2 + (a3*b1*b2*z1*(1 + z1))/2 + (a3*b2^2*z1*(1 + z1))/2 + (a2*b3*z1*(1 + z1))/2 + (b2*b3*z1*(1 + z1))/2 + (a1*b2*b3*z1*(1 + z1))/2 + (b1*b2*b3*z1*(1 + z1))/2 + (b1^2*b2*b3*z1*(1 + z1))/2 + (b2^2*b3*z1*(1 + z1))/2 + a3*b1*b2*z2 + 2*a1*a3*b1*b2*z2 + 2*a3*b1^2*b2*z2 + a1*b1*b3*z2 + a1*a2*b1*b3*z2 + a1*a3*b1*b3*z2 + b1^2*b3*z2 + a3*b1^2*b3*z2 + b1*b2*b3*z2 + a1*b1*b2*b3*z2 + b1^2*b2*b3*z2 + a1*b1^2*b2*b3*z2 + a1*b1*b2^2*b3*z2 + a2*a3*x1*z2 + a1*a3*b1*x1*z2 + a1*a3*b1^2*x1*z2 + a3*b2*x1*z2 + 2*a3*b1*b2*x1*z2 + 2*a1*a3*b1*b2*x1*z2 + a3*b1^2*b2*x1*z2 + a3*b1*b2^2*x1*z2 + a1*a3*b3*x1*z2 + b1*b3*x1*z2 + a2*b1*b3*x1*z2 + a1*a2*b1*b3*x1*z2 + a3*b1*b3*x1*z2 + a1*a3*b1*b3*x1*z2 + a3*b1^2*b3*x1*z2 + a2*b2*b3*x1*z2 + a2*b1*b2*b3*x1*z2 + b2^2*b3*x1*z2 + a1*b1*b2^2*b3*x1*z2 + a3*b1^2*x2*z2 + a1*a3*b1^2*x2*z2 + a3*b1*b2*x2*z2 + a3*b1^2*b2*x2*z2 + a1*a2*b3*x2*z2 + a2*b1*b3*x2*z2 + a3*b1*b3*x2*z2 + a3*b1^2*b3*x2*z2 + 2*b1*b2*b3*x2*z2 + a1*b1*b2*b3*x2*z2 + b1^2*b2*b3*x2*z2 + a1*b1^2*b2*b3*x2*z2 + a1*b2^2*b3*x2*z2 + b1*b2^2*b3*x2*z2 + a3*b1*x1*x2*z2 + a3*b2*x1*x2*z2 + a1*a3*b2*x1*x2*z2 + a3*b1^2*b2*x1*x2*z2 + 2*b3*x1*x2*z2 + a2*b3*x1*x2*z2 + a3*b3*x1*x2*z2 + 3*b1*b3*x1*x2*z2 + a1*b1*b3*x1*x2*z2 + b2*b3*x1*x2*z2 + a1*b2*b3*x1*x2*z2 + b1*b2*b3*x1*x2*z2 + a1*b1*b2*b3*x1*x2*z2 + b2^2*b3*x1*x2*z2 + b3^2*x1*x2*z2 + a1*a2*b1*x3*z2 + b1^2*x3*z2 + a1*b1^2*x3*z2 + a3*b1^2*x3*z2 + a1*a3*b1^2*x3*z2 + a2*a3*b1^2*x3*z2 + 3*a1*b1*b2*x3*z2 + a1*a3*b1*b2*x3*z2 + 2*b1^2*b2*x3*z2 + a1*b1^2*b2*x3*z2 + a2*b1^2*b2*x3*z2 + a3*b1^2*b2*x3*z2 + a1*a3*b1^2*b2*x3*z2 + a1*a3*b2^2*x3*z2 + a3*b1*b2^2*x3*z2 + 2*a1*b1*b3*x3*z2 + b1^2*b3*x3*z2 + a1*a2*b2*b3*x3*z2 + a2*b1*b2*b3*x3*z2 + 2*a1*a2*b1*b2*b3*x3*z2 + a3*b1*b2*b3*x3*z2 + a1*a2*b2^2*b3*x3*z2 + b1*b2^2*b3*x3*z2 + a2*b1*b2^2*b3*x3*z2 + a3*b1*b2^2*b3*x3*z2 + x1*x3*z2 + a2*x1*x3*z2 + a3*x1*x3*z2 + a2*a3*x1*x3*z2 + b1*x1*x3*z2 + 2*a1*b1*x1*x3*z2 + a2*b1*x1*x3*z2 + a1*a2*b1*x1*x3*z2 + a2*b1^2*x1*x3*z2 + a1*a2*b1^2*x1*x3*z2 + b2*x1*x3*z2 + a1*b2*x1*x3*z2 + a2*b2*x1*x3*z2 + a1*a3*b2*x1*x3*z2 + a2*a3*b2*x1*x3*z2 + 2*b1*b2*x1*x3*z2 + a1*b1*b2*x1*x3*z2 + a2*b1*b2*x1*x3*z2 + a1*a2*b1*b2*x1*x3*z2 + a3*b1*b2*x1*x3*z2 + a2*a3*b1*b2*x1*x3*z2 + b1^2*b2*x1*x3*z2 + a3*b1^2*b2*x1*x3*z2 + b2^2*x1*x3*z2 + a1*a3*b2^2*x1*x3*z2 + b1*b2^2*x1*x3*z2 + a3*b1^2*b2^2*x1*x3*z2 + b3*x1*x3*z2 + a1*b3*x1*x3*z2 + a3*b3*x1*x3*z2 + 2*b1*b3*x1*x3*z2 + a1*b1*b3*x1*x3*z2 + 2*a2*b1*b3*x1*x3*z2 + a1*a2*b1*b3*x1*x3*z2 + a1*b1^2*b3*x1*x3*z2 + 2*b2*b3*x1*x3*z2 + a1*b2*b3*x1*x3*z2 + a2*b2*b3*x1*x3*z2 + a1*a2*b2*b3*x1*x3*z2 + a3*b2*b3*x1*x3*z2 + 3*b1*b2*b3*x1*x3*z2 + 2*a1*b1*b2*b3*x1*x3*z2 + a2*b1*b2*b3*x1*x3*z2 + b1^2*b2*b3*x1*x3*z2 + a2*b1^2*b2*b3*x1*x3*z2 + b2^2*b3*x1*x3*z2 + b3^2*x1*x3*z2 + b2*b3^2*x1*x3*z2 + b1*x2*x3*z2 + a1*b1*x2*x3*z2 + a2*b1*x2*x3*z2 + b1^2*x2*x3*z2 + a1*b1^2*x2*x3*z2 + a2*b1^2*x2*x3*z2 + a1*b2*x2*x3*z2 + b1*b2*x2*x3*z2 + a1*b1*b2*x2*x3*z2 + a2*b1*b2*x2*x3*z2 + a2*b1^2*b2*x2*x3*z2 + a1*b3*x2*x3*z2 + a1*a2*b3*x2*x3*z2 + b1*b3*x2*x3*z2 + a2*b1*b3*x2*x3*z2 + b1^2*b3*x2*x3*z2 + a1*b2*b3*x2*x3*z2 + 2*b1*b2*b3*x2*x3*z2 + a1*b1*b2*b3*x2*x3*z2 + a2*a3*y1*z2 + a3*b1*y1*z2 + a1*a3*b1*y1*z2 + a3*b1^2*y1*z2 + a1*a3*b1^2*y1*z2 + a3*b2*y1*z2 + a3*b1*b2*y1*z2 + 2*a1*a3*b1*b2*y1*z2 + a3*b1^2*b2*y1*z2 + a3*b1*b2^2*y1*z2 + a2*b3*y1*z2 + a3*b3*y1*z2 + a1*a3*b3*y1*z2 + 2*b1*b3*y1*z2 + 2*a2*b1*b3*y1*z2 + a1*a2*b1*b3*y1*z2 + a3*b1*b3*y1*z2 + a1*a3*b1*b3*y1*z2 + b1^2*b3*y1*z2 + a1*b1^2*b3*y1*z2 + a3*b1^2*b3*y1*z2 + a2*b2*b3*y1*z2 + 2*b1*b2*b3*y1*z2 + a2*b1*b2*b3*y1*z2 + b1*b2^2*b3*y1*z2 + a1*b1*b2^2*b3*y1*z2 + a3*b2*x1*y1*z2 + a3*b1*b2*x1*y1*z2 + b3*x1*y1*z2 + b1*b3*x1*y1*z2 + a1*b1*b3*x1*y1*z2 + b1^2*b3*x1*y1*z2 + b2*b3*x1*y1*z2 + 2*b1*b2*b3*x1*y1*z2 + b1^2*b2*b3*x1*y1*z2 + a3*b1*x2*y1*z2 + 2*a3*b2*x2*y1*z2 + a1*a3*b2*x2*y1*z2 + a3*b1^2*b2*x2*y1*z2 + b3*x2*y1*z2 + a1*b3*x2*y1*z2 + a2*b3*x2*y1*z2 + a3*b3*x2*y1*z2 + 3*b1*b3*x2*y1*z2 + a1*b1*b3*x2*y1*z2 + 2*b2*b3*x2*y1*z2 + a1*b2*b3*x2*y1*z2 + 2*b1*b2*b3*x2*y1*z2 + a1*b1*b2*b3*x2*y1*z2 + b2^2*b3*x2*y1*z2 + b3^2*x2*y1*z2 + x3*y1*z2 + a3*x3*y1*z2 + a2*a3*x3*y1*z2 + 2*b1*x3*y1*z2 + a1*b1*x3*y1*z2 + a1*a2*b1*x3*y1*z2 + a1*a2*b1^2*x3*y1*z2 + 2*b2*x3*y1*z2 + a3*b2*x3*y1*z2 + a1*a3*b2*x3*y1*z2 + a2*a3*b2*x3*y1*z2 + 3*b1*b2*x3*y1*z2 + a1*b1*b2*x3*y1*z2 + a1*a2*b1*b2*x3*y1*z2 + a3*b1*b2*x3*y1*z2 + a2*a3*b1*b2*x3*y1*z2 + a2*b1^2*b2*x3*y1*z2 + a3*b1^2*b2*x3*y1*z2 + b2^2*x3*y1*z2 + a3*b2^2*x3*y1*z2 + a1*a3*b2^2*x3*y1*z2 + b1*b2^2*x3*y1*z2 + a3*b1^2*b2^2*x3*y1*z2 + a3*b3*x3*y1*z2 + 2*b1*b3*x3*y1*z2 + 2*a1*b1*b3*x3*y1*z2 + a1*a2*b1*b3*x3*y1*z2 + a1*b1^2*b3*x3*y1*z2 + a2*b1^2*b3*x3*y1*z2 + 2*b2*b3*x3*y1*z2 + a1*b2*b3*x3*y1*z2 + 2*a2*b2*b3*x3*y1*z2 + a1*a2*b2*b3*x3*y1*z2 + a3*b2*b3*x3*y1*z2 + 2*b1*b2*b3*x3*y1*z2 + 2*a1*b1*b2*b3*x3*y1*z2 + a2*b1*b2*b3*x3*y1*z2 + b1^2*b2*b3*x3*y1*z2 + a2*b1^2*b2*b3*x3*y1*z2 + b2^2*b3*x3*y1*z2 + b3^2*x3*y1*z2 + b2*b3^2*x3*y1*z2 + a1*a3*b1^2*y2*z2 + a3*b1*b2*y2*z2 + a3*b1^2*b2*y2*z2 + a1*a2*b3*y2*z2 + a3*b1*b3*y2*z2 + a1*b1^2*b3*y2*z2 + a3*b1^2*b3*y2*z2 + a1*b1*b2*b3*y2*z2 + a1*b1^2*b2*b3*y2*z2 + a1*b2^2*b3*y2*z2 + a3*x1*y2*z2 + a3*b1*x1*y2*z2 + 2*a3*b2*x1*y2*z2 + a1*a3*b2*x1*y2*z2 + a3*b1*b2*x1*y2*z2 + a3*b1^2*b2*x1*y2*z2 + 2*b3*x1*y2*z2 + a2*b3*x1*y2*z2 + a3*b3*x1*y2*z2 + 3*b1*b3*x1*y2*z2 + a1*b1*b3*x1*y2*z2 + b2*b3*x1*y2*z2 + a1*b2*b3*x1*y2*z2 + b1*b2*b3*x1*y2*z2 + a1*b1*b2*b3*x1*y2*z2 + b1^2*b2*b3*x1*y2*z2 + b2^2*b3*x1*y2*z2 + b3^2*x1*y2*z2 + a1*b3*x2*y2*z2 + b1*b2*b3*x2*y2*z2 + b1^2*x3*y2*z2 + a1*b1^2*x3*y2*z2 + a2*b1^2*x3*y2*z2 + a1*b1*b2*x3*y2*z2 + a2*b1*b2*x3*y2*z2 + b1^2*b2*x3*y2*z2 + a2*b1^2*b2*x3*y2*z2 + a1*a2*b3*x3*y2*z2 + b1*b3*x3*y2*z2 + a1*b1*b3*x3*y2*z2 + b1^2*b3*x3*y2*z2 + a1*b2*b3*x3*y2*z2 + b1*b2*b3*x3*y2*z2 + a1*b1*b2*b3*x3*y2*z2 + a3*y1*y2*z2 + a3*b1*y1*y2*z2 + a3*b2*y1*y2*z2 + a1*a3*b2*y1*y2*z2 + a3*b1*b2*y1*y2*z2 + a3*b1^2*b2*y1*y2*z2 + b3*y1*y2*z2 + a1*b3*y1*y2*z2 + a2*b3*y1*y2*z2 + a3*b3*y1*y2*z2 + 2*b1*b3*y1*y2*z2 + a1*b1*b3*y1*y2*z2 + b1^2*b3*y1*y2*z2 + 2*b2*b3*y1*y2*z2 + a1*b2*b3*y1*y2*z2 + a1*b1*b2*b3*y1*y2*z2 + b1^2*b2*b3*y1*y2*z2 + b2^2*b3*y1*y2*z2 + b3^2*y1*y2*z2 + a1*a2*b1*y3*z2 + b1^2*y3*z2 + a1*b1^2*y3*z2 + a2*b1^2*y3*z2 + a3*b1^2*y3*z2 + a2*a3*b1^2*y3*z2 + 2*a1*b1*b2*y3*z2 + a1*a3*b1*b2*y3*z2 + b1^2*b2*y3*z2 + a2*b1^2*b2*y3*z2 + 2*a3*b1^2*b2*y3*z2 + a1*a3*b1^2*b2*y3*z2 + 2*a1*b1*b3*y3*z2 + a1*b1^2*b3*y3*z2 + a1*a2*b2*b3*y3*z2 + a2*b1*b2*b3*y3*z2 + 2*a1*a2*b1*b2*b3*y3*z2 + a3*b1*b2*b3*y3*z2 + b1^2*b2*b3*y3*z2 + a1*a2*b2^2*b3*y3*z2 + a2*b1*b2^2*b3*y3*z2 + a3*b1*b2^2*b3*y3*z2 + a1*x1*y3*z2 + a2*a3*x1*y3*z2 + 2*b1*x1*y3*z2 + a1*b1*x1*y3*z2 + a2*b1*x1*y3*z2 + a1*a2*b1*x1*y3*z2 + a1*b1^2*x1*y3*z2 + a2*b1^2*x1*y3*z2 + a1*a2*b1^2*x1*y3*z2 + 2*b2*x1*y3*z2 + 2*a1*b2*x1*y3*z2 + 2*a2*b2*x1*y3*z2 + a3*b2*x1*y3*z2 + a1*a3*b2*x1*y3*z2 + a2*a3*b2*x1*y3*z2 + 2*b1*b2*x1*y3*z2 + 2*a2*b1*b2*x1*y3*z2 + a1*a2*b1*b2*x1*y3*z2 + 2*a3*b1*b2*x1*y3*z2 + a2*a3*b1*b2*x1*y3*z2 + 2*b1^2*b2*x1*y3*z2 + a3*b1^2*b2*x1*y3*z2 + b2^2*x1*y3*z2 + a1*b2^2*x1*y3*z2 + a1*a3*b2^2*x1*y3*z2 + b1*b2^2*x1*y3*z2 + b1^2*b2^2*x1*y3*z2 + a3*b1^2*b2^2*x1*y3*z2 + b3*x1*y3*z2 + a3*b3*x1*y3*z2 + b1*b3*x1*y3*z2 + 2*a1*b1*b3*x1*y3*z2 + 2*a2*b1*b3*x1*y3*z2 + a1*a2*b1*b3*x1*y3*z2 + b1^2*b3*x1*y3*z2 + a1*b1^2*b3*x1*y3*z2 + b2*b3*x1*y3*z2 + a2*b2*b3*x1*y3*z2 + a1*a2*b2*b3*x1*y3*z2 + a3*b2*b3*x1*y3*z2 + 3*b1*b2*b3*x1*y3*z2 + 2*a1*b1*b2*b3*x1*y3*z2 + a2*b1*b2*b3*x1*y3*z2 + a2*b1^2*b2*b3*x1*y3*z2 + b2^2*b3*x1*y3*z2 + b3^2*x1*y3*z2 + b2*b3^2*x1*y3*z2 + 2*b1*x2*y3*z2 + a1*b1*x2*y3*z2 + a2*b1*x2*y3*z2 + a1*b1^2*x2*y3*z2 + a2*b1^2*x2*y3*z2 + a1*b2*x2*y3*z2 + a1*b1*b2*x2*y3*z2 + a2*b1*b2*x2*y3*z2 + b1^2*b2*x2*y3*z2 + a2*b1^2*b2*x2*y3*z2 + a1*b3*x2*y3*z2 + a1*a2*b3*x2*y3*z2 + 2*b1*b3*x2*y3*z2 + a2*b1*b3*x2*y3*z2 + a1*b2*b3*x2*y3*z2 + 2*b1*b2*b3*x2*y3*z2 + a1*b1*b2*b3*x2*y3*z2 + a1*b1^2*x3*y3*z2 + b1*b2*x3*y3*z2 + 2*a1*b1*b2*x3*y3*z2 + b1^2*b2*x3*y3*z2 + b1*b2^2*x3*y3*z2 + a1*b1*b3*x3*y3*z2 + a1*b1^2*b3*x3*y3*z2 + b1*b2*b3*x3*y3*z2 + 2*a1*b1*b2*b3*x3*y3*z2 + b1^2*b2*b3*x3*y3*z2 + a1*b2^2*b3*x3*y3*z2 + a1*y1*y3*z2 + a2*y1*y3*z2 + a2*a3*y1*y3*z2 + 2*b1*y1*y3*z2 + 2*a1*b1*y1*y3*z2 + a1*a2*b1*y1*y3*z2 + b1^2*y1*y3*z2 + a1*b1^2*y1*y3*z2 + a1*a2*b1^2*y1*y3*z2 + b2*y1*y3*z2 + a1*b2*y1*y3*z2 + a2*b2*y1*y3*z2 + a1*a3*b2*y1*y3*z2 + a2*a3*b2*y1*y3*z2 + 2*b1*b2*y1*y3*z2 + a2*b1*b2*y1*y3*z2 + a1*a2*b1*b2*y1*y3*z2 + 2*a3*b1*b2*y1*y3*z2 + a2*a3*b1*b2*y1*y3*z2 + 2*b1^2*b2*y1*y3*z2 + a2*b1^2*b2*y1*y3*z2 + a3*b1^2*b2*y1*y3*z2 + a1*b2^2*y1*y3*z2 + a3*b2^2*y1*y3*z2 + a1*a3*b2^2*y1*y3*z2 + b1*b2^2*y1*y3*z2 + b1^2*b2^2*y1*y3*z2 + a3*b1^2*b2^2*y1*y3*z2 + a1*b3*y1*y3*z2 + a3*b3*y1*y3*z2 + 2*b1*b3*y1*y3*z2 + a1*b1*b3*y1*y3*z2 + a1*a2*b1*b3*y1*y3*z2 + a1*b1^2*b3*y1*y3*z2 + a2*b1^2*b3*y1*y3*z2 + 2*b2*b3*y1*y3*z2 + 2*a1*b2*b3*y1*y3*z2 + 2*a2*b2*b3*y1*y3*z2 + a1*a2*b2*b3*y1*y3*z2 + a3*b2*b3*y1*y3*z2 + 2*b1*b2*b3*y1*y3*z2 + 2*a1*b1*b2*b3*y1*y3*z2 + a2*b1*b2*b3*y1*y3*z2 + a2*b1^2*b2*b3*y1*y3*z2 + b2^2*b3*y1*y3*z2 + b3^2*y1*y3*z2 + b2*b3^2*y1*y3*z2 + a1*b1^2*y2*y3*z2 + a2*b1^2*y2*y3*z2 + b1*b2*y2*y3*z2 + a1*b1*b2*y2*y3*z2 + a2*b1*b2*y2*y3*z2 + a2*b1^2*b2*y2*y3*z2 + a1*a2*b3*y2*y3*z2 + a1*b1*b3*y2*y3*z2 + a1*b2*b3*y2*y3*z2 + b1*b2*b3*y2*y3*z2 + a1*b1*b2*b3*y2*y3*z2 + a2*a3*z1*z2 + a1*a3*b1*z1*z2 + a3*b1^2*z1*z2 + a1*a3*b1^2*z1*z2 + 2*a1*a3*b2*z1*z2 + 3*a3*b1*b2*z1*z2 + 2*a1*a3*b1*b2*z1*z2 + a3*b1^2*b2*z1*z2 + a3*b2^2*z1*z2 + a3*b1*b2^2*z1*z2 + a2*b3*z1*z2 + b1*b3*z1*z2 + a1*b1*b3*z1*z2 + a2*b1*b3*z1*z2 + a1*a2*b1*b3*z1*z2 + a1*a3*b1*b3*z1*z2 + a3*b1^2*b3*z1*z2 + b2*b3*z1*z2 + a1*b2*b3*z1*z2 + b1*b2*b3*z1*z2 + a2*b1*b2*b3*z1*z2 + b2^2*b3*z1*z2 + a1*b1*b2^2*b3*z1*z2 + a1*a3*b2*x1*z1*z2 + a3*b1*b2*x1*z1*z2 + b3*x1*z1*z2 + a1*b3*x1*z1*z2 + 2*b1*b3*x1*z1*z2 + b1^2*b3*x1*z1*z2 + a1*b2*b3*x1*z1*z2 + a1*b1*b2*b3*x1*z1*z2 + a3*x2*z1*z2 + a3*b1*x2*z1*z2 + a3*b2*x2*z1*z2 + a1*a3*b2*x2*z1*z2 + a3*b1*b2*x2*z1*z2 + a3*b1^2*b2*x2*z1*z2 + a2*b3*x2*z1*z2 + a3*b3*x2*z1*z2 + 3*b1*b3*x2*z1*z2 + a1*b1*b3*x2*z1*z2 + 2*b2*b3*x2*z1*z2 + a1*b2*b3*x2*z1*z2 + b1*b2*b3*x2*z1*z2 + a1*b1*b2*b3*x2*z1*z2 + b2^2*b3*x2*z1*z2 + b3^2*x2*z1*z2 + a2*x3*z1*z2 + a1*a2*x3*z1*z2 + a3*x3*z1*z2 + a2*a3*x3*z1*z2 + b1*x3*z1*z2 + a1*b1*x3*z1*z2 + a1*a2*b1*x3*z1*z2 + a1*b1^2*x3*z1*z2 + a1*a2*b1^2*x3*z1*z2 + a2*b2*x3*z1*z2 + a1*a2*b2*x3*z1*z2 + a3*b2*x3*z1*z2 + a1*a3*b2*x3*z1*z2 + 2*b1*b2*x3*z1*z2 + a1*b1*b2*x3*z1*z2 + a1*a2*b1*b2*x3*z1*z2 + 2*a3*b1*b2*x3*z1*z2 + a2*a3*b1*b2*x3*z1*z2 + a1*b1^2*b2*x3*z1*z2 + a3*b1^2*b2*x3*z1*z2 + a1*a3*b2^2*x3*z1*z2 + b1*b2^2*x3*z1*z2 + a3*b1*b2^2*x3*z1*z2 + a3*b1^2*b2^2*x3*z1*z2 + a2*b3*x3*z1*z2 + a3*b3*x3*z1*z2 + b1*b3*x3*z1*z2 + 2*a1*b1*b3*x3*z1*z2 + 2*a2*b1*b3*x3*z1*z2 + a1*a2*b1*b3*x3*z1*z2 + b1^2*b3*x3*z1*z2 + a1*b1^2*b3*x3*z1*z2 + b2*b3*x3*z1*z2 + 2*a2*b2*b3*x3*z1*z2 + a1*a2*b2*b3*x3*z1*z2 + a3*b2*b3*x3*z1*z2 + 3*b1*b2*b3*x3*z1*z2 + 2*a1*b1*b2*b3*x3*z1*z2 + 2*a2*b1*b2*b3*x3*z1*z2 + b1^2*b2*b3*x3*z1*z2 + a2*b1^2*b2*b3*x3*z1*z2 + b2^2*b3*x3*z1*z2 + b3^2*x3*z1*z2 + b2*b3^2*x3*z1*z2 + a1*a3*b2*y1*z1*z2 + 2*a3*b1*b2*y1*z1*z2 + b3*y1*z1*z2 + a1*b3*y1*z1*z2 + b1*b3*y1*z1*z2 + a1*b1*b3*y1*z1*z2 + a1*b2*b3*y1*z1*z2 + b1*b2*b3*y1*z1*z2 + a1*b1*b2*b3*y1*z1*z2 + b1^2*b2*b3*y1*z1*z2 + a3*b1*y2*z1*z2 + a3*b2*y2*z1*z2 + a1*a3*b2*y2*z1*z2 + 2*a3*b1*b2*y2*z1*z2 + a3*b1^2*b2*y2*z1*z2 + a2*b3*y2*z1*z2 + a3*b3*y2*z1*z2 + 3*b1*b3*y2*z1*z2 + a1*b1*b3*y2*z1*z2 + b2*b3*y2*z1*z2 + a1*b2*b3*y2*z1*z2 + a1*b1*b2*b3*y2*z1*z2 + b1^2*b2*b3*y2*z1*z2 + b2^2*b3*y2*z1*z2 + b3^2*y2*z1*z2 + y3*z1*z2 + a1*a2*y3*z1*z2 + a2*a3*y3*z1*z2 + a1*a2*b1*y3*z1*z2 + b1^2*y3*z1*z2 + a1*a2*b1^2*y3*z1*z2 + 2*a1*b2*y3*z1*z2 + a2*b2*y3*z1*z2 + a1*a2*b2*y3*z1*z2 + a3*b2*y3*z1*z2 + a1*a3*b2*y3*z1*z2 + 4*b1*b2*y3*z1*z2 + a2*b1*b2*y3*z1*z2 + a1*a2*b1*b2*y3*z1*z2 + 3*a3*b1*b2*y3*z1*z2 + a2*a3*b1*b2*y3*z1*z2 + b1^2*b2*y3*z1*z2 + a1*b1^2*b2*y3*z1*z2 + a3*b1^2*b2*y3*z1*z2 + a1*b2^2*y3*z1*z2 + a1*a3*b2^2*y3*z1*z2 + 2*b1*b2^2*y3*z1*z2 + a3*b1*b2^2*y3*z1*z2 + b1^2*b2^2*y3*z1*z2 + a3*b1^2*b2^2*y3*z1*z2 + a2*b3*y3*z1*z2 + a3*b3*y3*z1*z2 + a1*b1*b3*y3*z1*z2 + 2*a2*b1*b3*y3*z1*z2 + a1*a2*b1*b3*y3*z1*z2 + a1*b1^2*b3*y3*z1*z2 + a1*b2*b3*y3*z1*z2 + 2*a2*b2*b3*y3*z1*z2 + a1*a2*b2*b3*y3*z1*z2 + a3*b2*b3*y3*z1*z2 + 4*b1*b2*b3*y3*z1*z2 + 2*a1*b1*b2*b3*y3*z1*z2 + 2*a2*b1*b2*b3*y3*z1*z2 + a2*b1^2*b2*b3*y3*z1*z2 + b2^2*b3*y3*z1*z2 + b3^2*y3*z1*z2 + b2*b3^2*y3*z1*z2 + (a1*a3*b1*z2*(1 + z2))/2 + (a3*b1^2*z2*(1 + z2))/2 + (a1*a3*b2*z2*(1 + z2))/2 + (a3*b1*b2*z2*(1 + z2))/2 + (a1*b3*z2*(1 + z2))/2 + (a1*a2*b3*z2*(1 + z2))/2 + (a1*a3*b3*z2*(1 + z2))/2 + (a3*b1*b3*z2*(1 + z2))/2 + (a1*b1^2*b3*z2*(1 + z2))/2 + (b1*b2*b3*z2*(1 + z2))/2 + (a1*b1*b2*b3*z2*(1 + z2))/2 + (b1^2*b2*b3*z2*(1 + z2))/2 + (a1*b2^2*b3*z2*(1 + z2))/2 + a1*a2*b1*b2*z3 + a3*b1*b2*z3 + b1^2*b2*z3 + a1*b1^2*b2*z3 + a2*b1^2*b2*z3 + a1*b2^2*z3 + a1*a2*b2^2*z3 + b1*b2^2*z3 + a1*b1*b2^2*z3 + a1*a2*b2*b3*z3 + a1*b1*b2*b3*z3 + a3*b1*b2*b3*z3 + a2*a3*b1*b2*b3*z3 + a1*b1*b2^2*b3*z3 + a2*b1*b2^2*b3*z3 + a1*a2*x1*z3 + a2*b1*x1*z3 + a1*a2*b1*x1*z3 + a2*a3*b1*x1*z3 + a2*b1^2*x1*z3 + a2*a3*b1^2*x1*z3 + 2*a1*b2*x1*z3 + a1*a2*b2*x1*z3 + 2*a1*a3*b2*x1*z3 + a2*a3*b2*x1*z3 + b1*b2*x1*z3 + 2*a1*b1*b2*x1*z3 + 2*a2*b1*b2*x1*z3 + a3*b1*b2*x1*z3 + b1^2*b2*x1*z3 + a2*b1^2*b2*x1*z3 + a3*b1^2*b2*x1*z3 + a1*b2^2*x1*z3 + a2*b2^2*x1*z3 + b1*b2^2*x1*z3 + a3*b1*b2^2*x1*z3 + b1^2*b2^2*x1*z3 + a3*b2*b3*x1*z3 + a1*a3*b2*b3*x1*z3 + a2*a3*b2*b3*x1*z3 + a1*b1*b2*b3*x1*z3 + 2*a3*b1*b2*b3*x1*z3 + b1^2*b2*b3*x1*z3 + a2*b1^2*b2*b3*x1*z3 + a1*b2^2*b3*x1*z3 + a3*b2^2*b3*x1*z3 + a3*b1*b2^2*b3*x1*z3 + a1*x2*z3 + b1*x2*z3 + a2*b1*x2*z3 + a1*a3*b1*x2*z3 + a2*a3*b1*x2*z3 + b1^2*x2*z3 + a1*b1^2*x2*z3 + a1*a2*b1^2*x2*z3 + a1*a3*b2*x2*z3 + b1*b2*x2*z3 + a1*b1*b2*x2*z3 + a1*a3*b1*b2*x2*z3 + a2*a3*b1*b2*x2*z3 + b1^2*b2*x2*z3 + a1*a3*b1^2*b2*x2*z3 + a2*b1*b2^2*x2*z3 + a1*b1^2*b2^2*x2*z3 + a1*a2*b3*x2*z3 + b1*b3*x2*z3 + a3*b1*b3*x2*z3 + a2*a3*b1*b3*x2*z3 + a1*b1^2*b3*x2*z3 + a1*a2*b2*b3*x2*z3 + b1*b2*b3*x2*z3 + a1*b1*b2*b3*x2*z3 + a2*b1*b2*b3*x2*z3 + 2*a1*a2*b1*b2*b3*x2*z3 + a1*a2*b2^2*b3*x2*z3 + b1*b2^2*b3*x2*z3 + a1*b1*b2^2*b3*x2*z3 + a2*b1*b2^2*b3*x2*z3 + a3*b1*b2^2*b3*x2*z3 + a1*a2*x1*x2*z3 + a2*a3*x1*x2*z3 + b1*x1*x2*z3 + a1*b1*x1*x2*z3 + a2*b1*x1*x2*z3 + a1*a2*b1*x1*x2*z3 + a3*b1*x1*x2*z3 + b1^2*x1*x2*z3 + a1*b1^2*x1*x2*z3 + a1*a2*b1^2*x1*x2*z3 + a1*b2*x1*x2*z3 + 2*a2*b2*x1*x2*z3 + a1*a2*b2*x1*x2*z3 + a3*b2*x1*x2*z3 + a1*a3*b2*x1*x2*z3 + b1*b2*x1*x2*z3 + a2*b1*b2*x1*x2*z3 + a1*a2*b1*b2*x1*x2*z3 + 2*a3*b1*b2*x1*x2*z3 + a2*a3*b1*b2*x1*x2*z3 + a1*b1^2*b2*x1*x2*z3 + a2*b1^2*b2*x1*x2*z3 + a3*b1^2*b2*x1*x2*z3 + a1*b2^2*x1*x2*z3 + a1*a3*b2^2*x1*x2*z3 + b1*b2^2*x1*x2*z3 + a1*b1*b2^2*x1*x2*z3 + b1^2*b2^2*x1*x2*z3 + a3*b1^2*b2^2*x1*x2*z3 + 2*b3*x1*x2*z3 + a1*b3*x1*x2*z3 + a3*b3*x1*x2*z3 + 3*b1*b3*x1*x2*z3 + 2*a1*b1*b3*x1*x2*z3 + 2*a2*b1*b3*x1*x2*z3 + a1*a2*b1*b3*x1*x2*z3 + a1*b1^2*b3*x1*x2*z3 + 2*b2*b3*x1*x2*z3 + a1*b2*b3*x1*x2*z3 + 2*a2*b2*b3*x1*x2*z3 + a1*a2*b2*b3*x1*x2*z3 + a3*b2*b3*x1*x2*z3 + 3*b1*b2*b3*x1*x2*z3 + 3*a1*b1*b2*b3*x1*x2*z3 + a2*b1*b2*b3*x1*x2*z3 + b1^2*b2*b3*x1*x2*z3 + a2*b1^2*b2*b3*x1*x2*z3 + b3^2*x1*x2*z3 + b2*b3^2*x1*x2*z3 + a1*b2*x3*z3 + a1*a2*b2*x3*z3 + 2*b1*b2*x3*z3 + a1*b1*b2*x3*z3 + a3*b1*b2*x3*z3 + 2*a1*a3*b1*b2*x3*z3 + b1^2*b2*x3*z3 + a1*b2^2*x3*z3 + a1*a3*b2^2*x3*z3 + b1*b2^2*x3*z3 + a1*b1*b2^2*x3*z3 + a1*a2*b3*x3*z3 + a2*a3*b1*b3*x3*z3 + a1*b1*b2*b3*x3*z3 + a3*b1*b2*b3*x3*z3 + a1*b2^2*b3*x3*z3 + a3*b1*b2^2*b3*x3*z3 + a2*x1*x3*z3 + a2*b1*x1*x3*z3 + b2*x1*x3*z3 + 2*a1*b2*x1*x3*z3 + a2*b2*x1*x3*z3 + a3*b2*x1*x3*z3 + a1*a3*b2*x1*x3*z3 + a2*a3*b2*x1*x3*z3 + 3*b1*b2*x1*x3*z3 + a1*b1*b2*x1*x3*z3 + a3*b1*b2*x1*x3*z3 + a1*b1^2*b2*x1*x3*z3 + a2*b1^2*b2*x1*x3*z3 + a3*b1^2*b2*x1*x3*z3 + a3*b2^2*x1*x3*z3 + b1*b2^2*x1*x3*z3 + a1*b1*b2^2*x1*x3*z3 + a2*b1*b2^2*x1*x3*z3 + 2*b2*b3*x1*x3*z3 + 2*b1*b2*b3*x1*x3*z3 + a1*b1*b2*b3*x1*x3*z3 + a2*b1*b2*b3*x1*x3*z3 + b1^2*b2*b3*x1*x3*z3 + b2^2*b3*x1*x3*z3 + b1*b2^2*b3*x1*x3*z3 + a1*b1*b2*x2*x3*z3 + a2*b1*b2*x2*x3*z3 + a1*b1^2*b2*x2*x3*z3 + a1*b2^2*x2*x3*z3 + a1*b1*b2^2*x2*x3*z3 + a2*b1*b2^2*x2*x3*z3 + b1*b3*x2*x3*z3 + a1*b1*b3*x2*x3*z3 + a2*b1*b3*x2*x3*z3 + a1*b2*b3*x2*x3*z3 + b1*b2*b3*x2*x3*z3 + a1*b1*b2*b3*x2*x3*z3 + a2*b1*b2*b3*x2*x3*z3 + a1*b2^2*b3*x2*x3*z3 + a1*a2*y1*z3 + 2*a2*b1*y1*z3 + a1*a2*b1*y1*z3 + a2*a3*b1*y1*z3 + a1*b2*y1*z3 + a2*b2*y1*z3 + a1*a2*b2*y1*z3 + a3*b2*y1*z3 + 2*a1*a3*b2*y1*z3 + a2*a3*b2*y1*z3 + 3*b1*b2*y1*z3 + a1*b1*b2*y1*z3 + 2*a2*b1*b2*y1*z3 + a3*b1*b2*y1*z3 + 2*b1^2*b2*y1*z3 + a1*b1^2*b2*y1*z3 + a2*b1^2*b2*y1*z3 + a3*b1^2*b2*y1*z3 + b2^2*y1*z3 + a1*b2^2*y1*z3 + a2*b2^2*y1*z3 + b1*b2^2*y1*z3 + a3*b1*b2^2*y1*z3 + b1^2*b2^2*y1*z3 + a2*b3*y1*z3 + a2*b1*b3*y1*z3 + a2*b1^2*b3*y1*z3 + a1*b2*b3*y1*z3 + a2*b2*b3*y1*z3 + a1*a3*b2*b3*y1*z3 + a2*a3*b2*b3*y1*z3 + b1*b2*b3*y1*z3 + 3*a1*b1*b2*b3*y1*z3 + 2*a2*b1*b2*b3*y1*z3 + 2*a3*b1*b2*b3*y1*z3 + a2*b2^2*b3*y1*z3 + a3*b2^2*b3*y1*z3 + b1*b2^2*b3*y1*z3 + a3*b1*b2^2*b3*y1*z3 + 2*b2*x1*y1*z3 + 2*a1*b2*x1*y1*z3 + 2*a2*b2*x1*y1*z3 + a3*b2*x1*y1*z3 + b1*b2*x1*y1*z3 + a3*b1*b2*x1*y1*z3 + 2*b1^2*b2*x1*y1*z3 + a3*b2^2*x1*y1*z3 + a2*b3*x1*y1*z3 + 2*b2*b3*x1*y1*z3 + a1*b2*b3*x1*y1*z3 + a2*b2*b3*x1*y1*z3 + b1^2*b2*b3*x1*y1*z3 + x2*y1*z3 + a1*x2*y1*z3 + a1*a2*x2*y1*z3 + a2*a3*x2*y1*z3 + 2*b1*x2*y1*z3 + 2*a1*b1*x2*y1*z3 + 2*a2*b1*x2*y1*z3 + a1*a2*b1*x2*y1*z3 + a3*b1*x2*y1*z3 + a1*b1^2*x2*y1*z3 + a2*b1^2*x2*y1*z3 + a1*a2*b1^2*x2*y1*z3 + b2*x2*y1*z3 + a1*a2*b2*x2*y1*z3 + a1*a3*b2*x2*y1*z3 + 2*b1*b2*x2*y1*z3 + a1*a2*b1*b2*x2*y1*z3 + 2*a3*b1*b2*x2*y1*z3 + a2*a3*b1*b2*x2*y1*z3 + 2*b1^2*b2*x2*y1*z3 + a1*b1^2*b2*x2*y1*z3 + 2*a2*b1^2*b2*x2*y1*z3 + a3*b1^2*b2*x2*y1*z3 + a1*b2^2*x2*y1*z3 + a3*b2^2*x2*y1*z3 + a1*a3*b2^2*x2*y1*z3 + a1*b1*b2^2*x2*y1*z3 + a3*b1^2*b2^2*x2*y1*z3 + 2*b3*x2*y1*z3 + a2*b3*x2*y1*z3 + a3*b3*x2*y1*z3 + b1*b3*x2*y1*z3 + a1*b1*b3*x2*y1*z3 + a1*a2*b1*b3*x2*y1*z3 + b1^2*b3*x2*y1*z3 + a1*b1^2*b3*x2*y1*z3 + a2*b1^2*b3*x2*y1*z3 + 2*b2*b3*x2*y1*z3 + a1*b2*b3*x2*y1*z3 + a2*b2*b3*x2*y1*z3 + a1*a2*b2*b3*x2*y1*z3 + a3*b2*b3*x2*y1*z3 + 2*b1*b2*b3*x2*y1*z3 + 3*a1*b1*b2*b3*x2*y1*z3 + a2*b1*b2*b3*x2*y1*z3 + a2*b1^2*b2*b3*x2*y1*z3 + b3^2*x2*y1*z3 + b2*b3^2*x2*y1*z3 + a2*x3*y1*z3 + a2*b1*x3*y1*z3 + 2*a1*b2*x3*y1*z3 + a2*b2*x3*y1*z3 + a1*a3*b2*x3*y1*z3 + a2*a3*b2*x3*y1*z3 + 3*b1*b2*x3*y1*z3 + a1*b1*b2*x3*y1*z3 + a3*b1*b2*x3*y1*z3 + 2*b1^2*b2*x3*y1*z3 + a1*b1^2*b2*x3*y1*z3 + a2*b1^2*b2*x3*y1*z3 + a3*b1^2*b2*x3*y1*z3 + a3*b2^2*x3*y1*z3 + 2*b1*b2^2*x3*y1*z3 + a1*b1*b2^2*x3*y1*z3 + a2*b1*b2^2*x3*y1*z3 + b1^2*b2^2*x3*y1*z3 + 2*b2*b3*x3*y1*z3 + b1*b2*b3*x3*y1*z3 + a1*b1*b2*b3*x3*y1*z3 + a2*b1*b2*b3*x3*y1*z3 + b1*b2^2*b3*x3*y1*z3 + a1*y2*z3 + a2*b1*y2*z3 + a3*b1*y2*z3 + a1*a3*b1*y2*z3 + 2*a2*a3*b1*y2*z3 + b1^2*y2*z3 + a2*b1^2*y2*z3 + a1*a2*b1^2*y2*z3 + a1*b2*y2*z3 + a1*a3*b2*y2*z3 + b1*b2*y2*z3 + 2*a2*b1*b2*y2*z3 + a3*b1*b2*y2*z3 + a1*a3*b1*b2*y2*z3 + a2*a3*b1*b2*y2*z3 + a3*b1^2*b2*y2*z3 + a1*a3*b1^2*b2*y2*z3 + 2*b1*b2^2*y2*z3 + a2*b1*b2^2*y2*z3 + b1^2*b2^2*y2*z3 + a1*b1^2*b2^2*y2*z3 + a1*a2*b3*y2*z3 + b1*b3*y2*z3 + a3*b1*b3*y2*z3 + a2*a3*b1*b3*y2*z3 + b1^2*b3*y2*z3 + a1*b1^2*b3*y2*z3 + a1*b2*b3*y2*z3 + a1*a2*b2*b3*y2*z3 + b1*b2*b3*y2*z3 + a1*b1*b2*b3*y2*z3 + a2*b1*b2*b3*y2*z3 + 2*a1*a2*b1*b2*b3*y2*z3 + a3*b1*b2*b3*y2*z3 + a1*b2^2*b3*y2*z3 + a1*a2*b2^2*b3*y2*z3 + a1*b1*b2^2*b3*y2*z3 + a2*b1*b2^2*b3*y2*z3 + a3*b1*b2^2*b3*y2*z3 + x1*y2*z3 + a1*x1*y2*z3 + a1*a2*x1*y2*z3 + a3*x1*y2*z3 + a2*a3*x1*y2*z3 + a2*b1*x1*y2*z3 + a1*a2*b1*x1*y2*z3 + a3*b1*x1*y2*z3 + b1^2*x1*y2*z3 + a2*b1^2*x1*y2*z3 + a1*a2*b1^2*x1*y2*z3 + a2*b2*x1*y2*z3 + a1*a2*b2*x1*y2*z3 + a1*a3*b2*x1*y2*z3 + b1*b2*x1*y2*z3 + a1*b1*b2*x1*y2*z3 + a1*a2*b1*b2*x1*y2*z3 + a3*b1*b2*x1*y2*z3 + a2*a3*b1*b2*x1*y2*z3 + a1*b1^2*b2*x1*y2*z3 + a2*b1^2*b2*x1*y2*z3 + a3*b1^2*b2*x1*y2*z3 + b2^2*x1*y2*z3 + a1*b2^2*x1*y2*z3 + a3*b2^2*x1*y2*z3 + a1*a3*b2^2*x1*y2*z3 + a1*b1*b2^2*x1*y2*z3 + b1^2*b2^2*x1*y2*z3 + a3*b1^2*b2^2*x1*y2*z3 + b3*x1*y2*z3 + a1*b3*x1*y2*z3 + a3*b3*x1*y2*z3 + 2*b1*b3*x1*y2*z3 + a1*b1*b3*x1*y2*z3 + a2*b1*b3*x1*y2*z3 + a1*a2*b1*b3*x1*y2*z3 + b1^2*b3*x1*y2*z3 + a1*b1^2*b3*x1*y2*z3 + 2*b2*b3*x1*y2*z3 + a2*b2*b3*x1*y2*z3 + a1*a2*b2*b3*x1*y2*z3 + a3*b2*b3*x1*y2*z3 + b1*b2*b3*x1*y2*z3 + 3*a1*b1*b2*b3*x1*y2*z3 + a2*b1*b2*b3*x1*y2*z3 + a2*b1^2*b2*b3*x1*y2*z3 + b3^2*x1*y2*z3 + b2*b3^2*x1*y2*z3 + a1*x2*y2*z3 + b1*x2*y2*z3 + a1*b1*x2*y2*z3 + a2*b1*x2*y2*z3 + b1^2*x2*y2*z3 + a1*b2*x2*y2*z3 + 3*b1*b2*x2*y2*z3 + 2*a2*b1*b2*x2*y2*z3 + b1^2*b2*x2*y2*z3 + 2*b1*b2^2*x2*y2*z3 + a1*b3*x2*y2*z3 + 2*b1*b3*x2*y2*z3 + a1*b1*b3*x2*y2*z3 + a2*b1*b3*x2*y2*z3 + b1^2*b3*x2*y2*z3 + 2*a1*b2*b3*x2*y2*z3 + 2*b1*b2*b3*x2*y2*z3 + 2*b1*x3*y2*z3 + 2*a2*b1*x3*y2*z3 + a1*b1*b2*x3*y2*z3 + a2*b1*b2*x3*y2*z3 + b1^2*b2*x3*y2*z3 + a1*b1^2*b2*x3*y2*z3 + a1*b2^2*x3*y2*z3 + a1*b1*b2^2*x3*y2*z3 + a2*b1*b2^2*x3*y2*z3 + b1*b3*x3*y2*z3 + a1*b1*b3*x3*y2*z3 + a2*b1*b3*x3*y2*z3 + a1*b2*b3*x3*y2*z3 + b1*b2*b3*x3*y2*z3 + a1*b1*b2*b3*x3*y2*z3 + a2*b1*b2*b3*x3*y2*z3 + a1*b2^2*b3*x3*y2*z3 + y1*y2*z3 + a1*a2*y1*y2*z3 + a3*y1*y2*z3 + a2*a3*y1*y2*z3 + b1*y1*y2*z3 + a1*b1*y1*y2*z3 + 2*a2*b1*y1*y2*z3 + a1*a2*b1*y1*y2*z3 + a3*b1*y1*y2*z3 + b1^2*y1*y2*z3 + a1*a2*b1^2*y1*y2*z3 + 2*b2*y1*y2*z3 + a1*b2*y1*y2*z3 + a2*b2*y1*y2*z3 + a1*a2*b2*y1*y2*z3 + a3*b2*y1*y2*z3 + a1*a3*b2*y1*y2*z3 + 3*b1*b2*y1*y2*z3 + a1*b1*b2*y1*y2*z3 + a2*b1*b2*y1*y2*z3 + a1*a2*b1*b2*y1*y2*z3 + a3*b1*b2*y1*y2*z3 + a2*a3*b1*b2*y1*y2*z3 + b1^2*b2*y1*y2*z3 + a1*b1^2*b2*y1*y2*z3 + 2*a2*b1^2*b2*y1*y2*z3 + a3*b1^2*b2*y1*y2*z3 + b2^2*y1*y2*z3 + a1*b2^2*y1*y2*z3 + a1*a3*b2^2*y1*y2*z3 + b1*b2^2*y1*y2*z3 + a1*b1*b2^2*y1*y2*z3 + a3*b1^2*b2^2*y1*y2*z3 + b3*y1*y2*z3 + a2*b3*y1*y2*z3 + a3*b3*y1*y2*z3 + 3*b1*b3*y1*y2*z3 + 2*a1*b1*b3*y1*y2*z3 + a2*b1*b3*y1*y2*z3 + a1*a2*b1*b3*y1*y2*z3 + b1^2*b3*y1*y2*z3 + a1*b1^2*b3*y1*y2*z3 + a2*b1^2*b3*y1*y2*z3 + b2*b3*y1*y2*z3 + 2*a1*b2*b3*y1*y2*z3 + 2*a2*b2*b3*y1*y2*z3 + a1*a2*b2*b3*y1*y2*z3 + a3*b2*b3*y1*y2*z3 + 2*b1*b2*b3*y1*y2*z3 + 3*a1*b1*b2*b3*y1*y2*z3 + a2*b1*b2*b3*y1*y2*z3 + b1^2*b2*b3*y1*y2*z3 + a2*b1^2*b2*b3*y1*y2*z3 + b3^2*y1*y2*z3 + b2*b3^2*y1*y2*z3 + a2*a3*b1*y3*z3 + a1*a2*b2*y3*z3 + 2*a1*b1*b2*y3*z3 + 2*a1*a3*b1*b2*y3*z3 + b1^2*b2*y3*z3 + a3*b1^2*b2*y3*z3 + a1*a3*b2^2*y3*z3 + b1*b2^2*y3*z3 + a1*b1*b2^2*y3*z3 + a1*a2*b3*y3*z3 + a2*a3*b1*b3*y3*z3 + a1*b1*b2*b3*y3*z3 + a3*b1*b2^2*b3*y3*z3 + a2*b2*x1*y3*z3 + a1*a3*b2*x1*y3*z3 + a2*a3*b2*x1*y3*z3 + a2*b1*b2*x1*y3*z3 + a1*b1^2*b2*x1*y3*z3 + a2*b1^2*b2*x1*y3*z3 + a3*b1^2*b2*x1*y3*z3 + b2^2*x1*y3*z3 + a1*b2^2*x1*y3*z3 + a2*b2^2*x1*y3*z3 + b1*b2^2*x1*y3*z3 + a1*b1*b2^2*x1*y3*z3 + a2*b1*b2^2*x1*y3*z3 + b1^2*b2^2*x1*y3*z3 + b2*b3*x1*y3*z3 + b1*b2*b3*x1*y3*z3 + a1*b1*b2*b3*x1*y3*z3 + a2*b1*b2*b3*x1*y3*z3 + a1*x2*y3*z3 + 2*a1*b1*x2*y3*z3 + a1*b1^2*x2*y3*z3 + 2*a1*b2*x2*y3*z3 + 3*a1*b1*b2*x2*y3*z3 + a2*b1*b2*x2*y3*z3 + a1*b1^2*b2*x2*y3*z3 + a1*b2^2*x2*y3*z3 + a1*b1*b2^2*x2*y3*z3 + a2*b1*b2^2*x2*y3*z3 + a1*b3*x2*y3*z3 + b1*b3*x2*y3*z3 + 2*a1*b1*b3*x2*y3*z3 + a2*b1*b3*x2*y3*z3 + a1*b1^2*b3*x2*y3*z3 + a1*b2*b3*x2*y3*z3 + 2*b1*b2*b3*x2*y3*z3 + a1*b1*b2*b3*x2*y3*z3 + a2*b1*b2*b3*x2*y3*z3 + b1*b2^2*b3*x2*y3*z3 + 2*a2*b1*x3*y3*z3 + b1^2*b2*x3*y3*z3 + 2*b1*b2*b3*x3*y3*z3 + a2*b2*y1*y3*z3 + a3*b2*y1*y3*z3 + a1*a3*b2*y1*y3*z3 + a2*a3*b2*y1*y3*z3 + b1*b2*y1*y3*z3 + a2*b1*b2*y1*y3*z3 + b1^2*b2*y1*y3*z3 + a1*b1^2*b2*y1*y3*z3 + a2*b1^2*b2*y1*y3*z3 + a3*b1^2*b2*y1*y3*z3 + a1*b2^2*y1*y3*z3 + a2*b2^2*y1*y3*z3 + 2*b1*b2^2*y1*y3*z3 + a1*b1*b2^2*y1*y3*z3 + a2*b1*b2^2*y1*y3*z3 + b2*b3*y1*y3*z3 + 2*b1*b2*b3*y1*y3*z3 + a1*b1*b2*b3*y1*y3*z3 + a2*b1*b2*b3*y1*y3*z3 + b1^2*b2*b3*y1*y3*z3 + a1*y2*y3*z3 + 2*b1*y2*y3*z3 + 2*a1*b1*y2*y3*z3 + 2*a2*b1*y2*y3*z3 + b1^2*y2*y3*z3 + a1*b1^2*y2*y3*z3 + 2*a1*b2*y2*y3*z3 + 2*b1*b2*y2*y3*z3 + 3*a1*b1*b2*y2*y3*z3 + a2*b1*b2*y2*y3*z3 + b1^2*b2*y2*y3*z3 + a1*b1^2*b2*y2*y3*z3 + a1*b2^2*y2*y3*z3 + a1*b1*b2^2*y2*y3*z3 + a2*b1*b2^2*y2*y3*z3 + a1*b3*y2*y3*z3 + 2*b1*b3*y2*y3*z3 + 2*a1*b1*b3*y2*y3*z3 + a2*b1*b3*y2*y3*z3 + b1^2*b3*y2*y3*z3 + a1*b1^2*b3*y2*y3*z3 + a1*b2*b3*y2*y3*z3 + 2*b1*b2*b3*y2*y3*z3 + a1*b1*b2*b3*y2*y3*z3 + a2*b1*b2*b3*y2*y3*z3 + b1*b2^2*b3*y2*y3*z3 + a1*a2*b1*z1*z3 + a2*b1^2*z1*z3 + a2*a3*b1^2*z1*z3 + a1*b2*z1*z3 + a2*b2*z1*z3 + a1*a2*b2*z1*z3 + 2*a1*a3*b2*z1*z3 + a2*a3*b2*z1*z3 + 2*a1*b1*b2*z1*z3 + 3*a2*b1*b2*z1*z3 + 2*a3*b1*b2*z1*z3 + b1^2*b2*z1*z3 + a2*b1^2*b2*z1*z3 + a3*b1^2*b2*z1*z3 + a1*b2^2*z1*z3 + a2*b2^2*z1*z3 + a3*b1*b2^2*z1*z3 + b1^2*b2^2*z1*z3 + a1*a3*b2*b3*z1*z3 + a2*a3*b2*b3*z1*z3 + b1*b2*b3*z1*z3 + a1*b1*b2*b3*z1*z3 + a2*b1*b2*b3*z1*z3 + 2*a3*b1*b2*b3*z1*z3 + b1^2*b2*b3*z1*z3 + a2*b1^2*b2*b3*z1*z3 + a1*b2^2*b3*z1*z3 + a3*b2^2*b3*z1*z3 + a3*b1*b2^2*b3*z1*z3 + b2*x1*z1*z3 + a1*b2*x1*z1*z3 + 2*a3*b2*x1*z1*z3 + a1*a3*b2*x1*z1*z3 + a2*a3*b2*x1*z1*z3 + 2*a1*b1*b2*x1*z1*z3 + 2*a2*b1*b2*x1*z1*z3 + a3*b1*b2*x1*z1*z3 + b1^2*b2*x1*z1*z3 + a3*b1*b2^2*x1*z1*z3 + a2*b3*x1*z1*z3 + a2*b1*b3*x1*z1*z3 + b2*b3*x1*z1*z3 + a1*b2*b3*x1*z1*z3 + a2*b2*b3*x1*z1*z3 + b1*b2*b3*x1*z1*z3 + a1*b1*b2*b3*x1*z1*z3 + a2*b1*b2*b3*x1*z1*z3 + x2*z1*z3 + a1*x2*z1*z3 + a2*x2*z1*z3 + a3*x2*z1*z3 + a2*a3*x2*z1*z3 + 2*b1*x2*z1*z3 + 2*a1*b1*x2*z1*z3 + a2*b1*x2*z1*z3 + a1*a2*b1*x2*z1*z3 + a3*b1*x2*z1*z3 + b1^2*x2*z1*z3 + a1*a2*b1^2*x2*z1*z3 + b2*x2*z1*z3 + a1*b2*x2*z1*z3 + 2*a2*b2*x2*z1*z3 + 2*a1*a2*b2*x2*z1*z3 + a3*b2*x2*z1*z3 + a1*a3*b2*x2*z1*z3 + a2*a3*b2*x2*z1*z3 + b1*b2*x2*z1*z3 + 2*a1*b1*b2*x2*z1*z3 + 2*a2*b1*b2*x2*z1*z3 + a1*a2*b1*b2*x2*z1*z3 + 3*a3*b1*b2*x2*z1*z3 + a2*a3*b1*b2*x2*z1*z3 + 2*a1*b1^2*b2*x2*z1*z3 + a2*b1^2*b2*x2*z1*z3 + a3*b1^2*b2*x2*z1*z3 + a1*a3*b2^2*x2*z1*z3 + a1*b1*b2^2*x2*z1*z3 + a3*b1*b2^2*x2*z1*z3 + b1^2*b2^2*x2*z1*z3 + a3*b1^2*b2^2*x2*z1*z3 + b3*x2*z1*z3 + a1*b3*x2*z1*z3 + a2*b3*x2*z1*z3 + a3*b3*x2*z1*z3 + b1*b3*x2*z1*z3 + 2*a1*b1*b3*x2*z1*z3 + 2*a2*b1*b3*x2*z1*z3 + a1*a2*b1*b3*x2*z1*z3 + b1^2*b3*x2*z1*z3 + a1*b1^2*b3*x2*z1*z3 + 2*b2*b3*x2*z1*z3 + a1*b2*b3*x2*z1*z3 + a2*b2*b3*x2*z1*z3 + a1*a2*b2*b3*x2*z1*z3 + a3*b2*b3*x2*z1*z3 + 3*b1*b2*b3*x2*z1*z3 + 3*a1*b1*b2*b3*x2*z1*z3 + 2*a2*b1*b2*b3*x2*z1*z3 + b1^2*b2*b3*x2*z1*z3 + a2*b1^2*b2*b3*x2*z1*z3 + b3^2*x2*z1*z3 + b2*b3^2*x2*z1*z3 + a2*b1*x3*z1*z3 + b2*x3*z1*z3 + a1*b2*x3*z1*z3 + a2*b2*x3*z1*z3 + a1*a3*b2*x3*z1*z3 + a2*a3*b2*x3*z1*z3 + 3*b1*b2*x3*z1*z3 + 2*a1*b1*b2*x3*z1*z3 + a2*b1*b2*x3*z1*z3 + 2*a3*b1*b2*x3*z1*z3 + a1*b1^2*b2*x3*z1*z3 + a2*b1^2*b2*x3*z1*z3 + a3*b1^2*b2*x3*z1*z3 + b2^2*x3*z1*z3 + a3*b2^2*x3*z1*z3 + b1*b2^2*x3*z1*z3 + a1*b1*b2^2*x3*z1*z3 + a2*b1*b2^2*x3*z1*z3 + 2*b2*b3*x3*z1*z3 + b1*b2*b3*x3*z1*z3 + a1*b1*b2*b3*x3*z1*z3 + a2*b1*b2*b3*x3*z1*z3 + b1^2*b2*b3*x3*z1*z3 + b2^2*b3*x3*z1*z3 + b1*b2^2*b3*x3*z1*z3 + 2*b2*y1*z1*z3 + 2*a1*b2*y1*z1*z3 + 2*a2*b2*y1*z1*z3 + 2*a3*b2*y1*z1*z3 + a1*a3*b2*y1*z1*z3 + a2*a3*b2*y1*z1*z3 + 4*b1*b2*y1*z1*z3 + 2*a1*b1*b2*y1*z1*z3 + 2*a2*b1*b2*y1*z1*z3 + 2*a3*b1*b2*y1*z1*z3 + b1^2*b2*y1*z1*z3 + a3*b2^2*y1*z1*z3 + a3*b1*b2^2*y1*z1*z3 + a2*b3*y1*z1*z3 + a2*b1*b3*y1*z1*z3 + 2*b2*b3*y1*z1*z3 + 3*b1*b2*b3*y1*z1*z3 + a1*b1*b2*b3*y1*z1*z3 + a2*b1*b2*b3*y1*z1*z3 + b1^2*b2*b3*y1*z1*z3 + y2*z1*z3 + a1*y2*z1*z3 + a2*y2*z1*z3 + a2*a3*y2*z1*z3 + 2*b1*y2*z1*z3 + a1*b1*y2*z1*z3 + a2*b1*y2*z1*z3 + a1*a2*b1*y2*z1*z3 + a3*b1*y2*z1*z3 + a1*b1^2*y2*z1*z3 + a2*b1^2*y2*z1*z3 + a1*a2*b1^2*y2*z1*z3 + 2*b2*y2*z1*z3 + a1*b2*y2*z1*z3 + 2*a1*a2*b2*y2*z1*z3 + a3*b2*y2*z1*z3 + a1*a3*b2*y2*z1*z3 + a2*a3*b2*y2*z1*z3 + 3*a1*b1*b2*y2*z1*z3 + a2*b1*b2*y2*z1*z3 + a1*a2*b1*b2*y2*z1*z3 + 2*a3*b1*b2*y2*z1*z3 + a2*a3*b1*b2*y2*z1*z3 + b1^2*b2*y2*z1*z3 + 2*a1*b1^2*b2*y2*z1*z3 + a2*b1^2*b2*y2*z1*z3 + a3*b1^2*b2*y2*z1*z3 + a3*b2^2*y2*z1*z3 + a1*a3*b2^2*y2*z1*z3 + b1*b2^2*y2*z1*z3 + a1*b1*b2^2*y2*z1*z3 + a3*b1*b2^2*y2*z1*z3 + b1^2*b2^2*y2*z1*z3 + a3*b1^2*b2^2*y2*z1*z3 + b3*y2*z1*z3 + a1*b3*y2*z1*z3 + a2*b3*y2*z1*z3 + a3*b3*y2*z1*z3 + 2*b1*b3*y2*z1*z3 + a1*b1*b3*y2*z1*z3 + a2*b1*b3*y2*z1*z3 + a1*a2*b1*b3*y2*z1*z3 + a1*b1^2*b3*y2*z1*z3 + b2*b3*y2*z1*z3 + 2*a2*b2*b3*y2*z1*z3 + a1*a2*b2*b3*y2*z1*z3 + a3*b2*b3*y2*z1*z3 + 2*b1*b2*b3*y2*z1*z3 + 3*a1*b1*b2*b3*y2*z1*z3 + 2*a2*b1*b2*b3*y2*z1*z3 + a2*b1^2*b2*b3*y2*z1*z3 + b3^2*y2*z1*z3 + b2*b3^2*y2*z1*z3 + a1*a3*b2*y3*z1*z3 + a2*a3*b2*y3*z1*z3 + a1*b1*b2*y3*z1*z3 + 2*a2*b1*b2*y3*z1*z3 + a3*b1*b2*y3*z1*z3 + a1*b1^2*b2*y3*z1*z3 + a2*b1^2*b2*y3*z1*z3 + a3*b1^2*b2*y3*z1*z3 + a1*b2^2*y3*z1*z3 + a2*b2^2*y3*z1*z3 + 2*b1*b2^2*y3*z1*z3 + a1*b1*b2^2*y3*z1*z3 + a2*b1*b2^2*y3*z1*z3 + b1^2*b2^2*y3*z1*z3 + b1*b2*b3*y3*z1*z3 + a1*b1*b2*b3*y3*z1*z3 + a2*b1*b2*b3*y3*z1*z3 + a1*a2*b1*z2*z3 + a1*b1^2*z2*z3 + a1*a2*b1^2*z2*z3 + a3*b1^2*z2*z3 + a1*a3*b1^2*z2*z3 + a2*a3*b1^2*z2*z3 + 2*a1*b1*b2*z2*z3 + a2*b1*b2*z2*z3 + a1*a3*b1*b2*z2*z3 + 2*b1^2*b2*z2*z3 + a1*b1^2*b2*z2*z3 + 2*a2*b1^2*b2*z2*z3 + a3*b1^2*b2*z2*z3 + a1*a3*b1^2*b2*z2*z3 + b1*b2^2*z2*z3 + a3*b1*b2^2*z2*z3 + a1*b1^2*b2^2*z2*z3 + a1*b1*b3*z2*z3 + b1^2*b3*z2*z3 + a1*b1^2*b3*z2*z3 + a1*a2*b2*b3*z2*z3 + a2*b1*b2*b3*z2*z3 + 2*a1*a2*b1*b2*b3*z2*z3 + b1^2*b2*b3*z2*z3 + a1*a2*b2^2*b3*z2*z3 + b1*b2^2*b3*z2*z3 + a2*b1*b2^2*b3*z2*z3 + a3*b1*b2^2*b3*z2*z3 + a1*x1*z2*z3 + a1*a2*x1*z2*z3 + a2*a3*x1*z2*z3 + b1*x1*z2*z3 + 2*a1*b1*x1*z2*z3 + a2*b1*x1*z2*z3 + a1*a2*b1*x1*z2*z3 + b1^2*x1*z2*z3 + a1*b1^2*x1*z2*z3 + a1*a2*b1^2*x1*z2*z3 + 2*a1*b2*x1*z2*z3 + a2*b2*x1*z2*z3 + a1*a2*b2*x1*z2*z3 + a3*b2*x1*z2*z3 + a2*a3*b2*x1*z2*z3 + 2*b1*b2*x1*z2*z3 + a2*b1*b2*x1*z2*z3 + a1*a2*b1*b2*x1*z2*z3 + 2*a3*b1*b2*x1*z2*z3 + a2*a3*b1*b2*x1*z2*z3 + a1*b1^2*b2*x1*z2*z3 + a2*b1^2*b2*x1*z2*z3 + b2^2*x1*z2*z3 + a1*b2^2*x1*z2*z3 + a1*a3*b2^2*x1*z2*z3 + b1*b2^2*x1*z2*z3 + a1*b1*b2^2*x1*z2*z3 + b1^2*b2^2*x1*z2*z3 + a3*b1^2*b2^2*x1*z2*z3 + b3*x1*z2*z3 + a2*b3*x1*z2*z3 + 2*b1*b3*x1*z2*z3 + 2*a1*b1*b3*x1*z2*z3 + 2*a2*b1*b3*x1*z2*z3 + a1*a2*b1*b3*x1*z2*z3 + a1*b1^2*b3*x1*z2*z3 + b2*b3*x1*z2*z3 + a2*b2*b3*x1*z2*z3 + a1*a2*b2*b3*x1*z2*z3 + a3*b2*b3*x1*z2*z3 + 2*b1*b2*b3*x1*z2*z3 + 3*a1*b1*b2*b3*x1*z2*z3 + a2*b1*b2*b3*x1*z2*z3 + a2*b1^2*b2*b3*x1*z2*z3 + b2*b3^2*x1*z2*z3 + a1*x2*z2*z3 + b1*x2*z2*z3 + a1*b1*x2*z2*z3 + a2*b1*x2*z2*z3 + a2*b1^2*x2*z2*z3 + a1*b2*x2*z2*z3 + a1*b1*b2*x2*z2*z3 + a2*b1*b2*x2*z2*z3 + b1^2*b2*x2*z2*z3 + a2*b1^2*b2*x2*z2*z3 + b1*b2^2*x2*z2*z3 + b1^2*b2^2*x2*z2*z3 + a1*a2*b3*x2*z2*z3 + 2*b1*b3*x2*z2*z3 + a1*b1*b3*x2*z2*z3 + a2*b1*b3*x2*z2*z3 + b1^2*b3*x2*z2*z3 + a1*b2*b3*x2*z2*z3 + b1*b2*b3*x2*z2*z3 + a1*b1*b2*b3*x2*z2*z3 + b1^2*b2*b3*x2*z2*z3 + b1^2*x3*z2*z3 + a1*b1^2*x3*z2*z3 + a2*b1^2*x3*z2*z3 + b1*b2*x3*z2*z3 + a1*b1*b2*x3*z2*z3 + a2*b1*b2*x3*z2*z3 + b1^2*b2*x3*z2*z3 + a1*b1^2*b2*x3*z2*z3 + b1*b2^2*x3*z2*z3 + a1*b1*b2^2*x3*z2*z3 + a2*b1*b2^2*x3*z2*z3 + b1*b2*b3*x3*z2*z3 + a1*b1*b2*b3*x3*z2*z3 + a2*b1*b2*b3*x3*z2*z3 + a1*b2^2*b3*x3*z2*z3 + y1*z2*z3 + a1*a2*y1*z2*z3 + a2*a3*y1*z2*z3 + a1*b1*y1*z2*z3 + a1*a2*b1*y1*z2*z3 + b1^2*y1*z2*z3 + a1*b1^2*y1*z2*z3 + a2*b1^2*y1*z2*z3 + a1*a2*b1^2*y1*z2*z3 + b2*y1*z2*z3 + a1*b2*y1*z2*z3 + a2*b2*y1*z2*z3 + a1*a2*b2*y1*z2*z3 + a3*b2*y1*z2*z3 + a2*a3*b2*y1*z2*z3 + b1*b2*y1*z2*z3 + a1*a2*b1*b2*y1*z2*z3 + 2*a3*b1*b2*y1*z2*z3 + a2*a3*b1*b2*y1*z2*z3 + b1^2*b2*y1*z2*z3 + a1*b1^2*b2*y1*z2*z3 + 2*a2*b1^2*b2*y1*z2*z3 + b2^2*y1*z2*z3 + a1*b2^2*y1*z2*z3 + a3*b2^2*y1*z2*z3 + a1*a3*b2^2*y1*z2*z3 + a1*b1*b2^2*y1*z2*z3 + a3*b1^2*b2^2*y1*z2*z3 + b3*y1*z2*z3 + a2*b3*y1*z2*z3 + a1*b1*b3*y1*z2*z3 + a1*a2*b1*b3*y1*z2*z3 + b1^2*b3*y1*z2*z3 + a1*b1^2*b3*y1*z2*z3 + a2*b1^2*b3*y1*z2*z3 + b2*b3*y1*z2*z3 + 2*a1*b2*b3*y1*z2*z3 + 2*a2*b2*b3*y1*z2*z3 + a1*a2*b2*b3*y1*z2*z3 + a3*b2*b3*y1*z2*z3 + 2*b1*b2*b3*y1*z2*z3 + 3*a1*b1*b2*b3*y1*z2*z3 + a2*b1*b2*b3*y1*z2*z3 + b1^2*b2*b3*y1*z2*z3 + a2*b1^2*b2*b3*y1*z2*z3 + b2*b3^2*y1*z2*z3 + a2*b1^2*y2*z2*z3 + b1*b2*y2*z2*z3 + a1*b1*b2*y2*z2*z3 + a2*b1*b2*y2*z2*z3 + b1^2*b2*y2*z2*z3 + a2*b1^2*b2*y2*z2*z3 + b1*b2^2*y2*z2*z3 + b1^2*b2^2*y2*z2*z3 + a1*a2*b3*y2*z2*z3 + a1*b2*b3*y2*z2*z3 + a1*b1*b2*b3*y2*z2*z3 + b1^2*b2*b3*y2*z2*z3 + a2*b1^2*y3*z2*z3 + b1*b2*y3*z2*z3 + a1*b1*b2*y3*z2*z3 + a2*b1*b2*y3*z2*z3 + 2*b1^2*b2*y3*z2*z3 + a1*b1^2*b2*y3*z2*z3 + b1*b2^2*y3*z2*z3 + a1*b1*b2^2*y3*z2*z3 + a2*b1*b2^2*y3*z2*z3 + a1*b1*b3*y3*z2*z3 + a1*b1^2*b3*y3*z2*z3 + b1*b2*b3*y3*z2*z3 + a1*b1*b2*b3*y3*z2*z3 + a2*b1*b2*b3*y3*z2*z3 + b1^2*b2*b3*y3*z2*z3 + a2*a3*z1*z2*z3 + a1*b1*z1*z2*z3 + a2*b1*z1*z2*z3 + a1*a2*b1*z1*z2*z3 + b1^2*z1*z2*z3 + a1*b1^2*z1*z2*z3 + a2*b1^2*z1*z2*z3 + a1*a2*b1^2*z1*z2*z3 + b2*z1*z2*z3 + 2*a1*b2*z1*z2*z3 + a2*b2*z1*z2*z3 + 2*a1*a2*b2*z1*z2*z3 + a3*b2*z1*z2*z3 + b1*b2*z1*z2*z3 + 3*a1*b1*b2*z1*z2*z3 + a2*b1*b2*z1*z2*z3 + a1*a2*b1*b2*z1*z2*z3 + 2*a3*b1*b2*z1*z2*z3 + a2*a3*b1*b2*z1*z2*z3 + 2*b1^2*b2*z1*z2*z3 + 2*a1*b1^2*b2*z1*z2*z3 + a2*b1^2*b2*z1*z2*z3 + b2^2*z1*z2*z3 + a1*a3*b2^2*z1*z2*z3 + b1*b2^2*z1*z2*z3 + a1*b1*b2^2*z1*z2*z3 + a3*b1*b2^2*z1*z2*z3 + b1^2*b2^2*z1*z2*z3 + a3*b1^2*b2^2*z1*z2*z3 + b1*b3*z1*z2*z3 + 2*a1*b1*b3*z1*z2*z3 + 2*a2*b1*b3*z1*z2*z3 + a1*a2*b1*b3*z1*z2*z3 + b1^2*b3*z1*z2*z3 + a1*b1^2*b3*z1*z2*z3 + 2*b2*b3*z1*z2*z3 + 2*a2*b2*b3*z1*z2*z3 + a1*a2*b2*b3*z1*z2*z3 + a3*b2*b3*z1*z2*z3 + 4*b1*b2*b3*z1*z2*z3 + 3*a1*b1*b2*b3*z1*z2*z3 + 2*a2*b1*b2*b3*z1*z2*z3 + a2*b1^2*b2*b3*z1*z2*z3 + b2*b3^2*z1*z2*z3 + (a2*b1*z3*(1 + z3))/2 + (a1*a2*b1*z3*(1 + z3))/2 + (a2*b1^2*z3*(1 + z3))/2 + (a1*b2*z3*(1 + z3))/2 + (a1*a2*b2*z3*(1 + z3))/2 + 2*b1*b2*z3*(1 + z3) + a1*b1*b2*z3*(1 + z3) + a2*b1*b2*z3*(1 + z3) + (b1^2*b2*z3*(1 + z3))/2 + (b1*b2^2*z3*(1 + z3))/2 + (b1^2*b2^2*z3*(1 + z3))/2 + (a1*a2*b3*z3*(1 + z3))/2 + (a2*b1*b3*z3*(1 + z3))/2 + b1*b2*b3*z3*(1 + z3) + (a1*b1*b2*b3*z3*(1 + z3))/2 + (a2*b1*b2*b3*z3*(1 + z3))/2 + (a3*b1*b2*b3*z3*(1 + z3))/2;
end;
#####################################################################
C2in82:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];
return a2*a3*x1 + 3*a2*a3*b1*x1 + a3*b2*x1 + 3*a1*a3*b2*x1 + 3*a2*a3*b2*x1 + a3*b1*b2*x1 + 2*a3*b1^2*b2*x1 + a3*b1*b2^2*x1 + a2*b3*x1 + a2*b1*b3*x1 + b2*b3*x1 + a1*b2*b3*x1 + 2*a2*b2*b3*x1 + a3*b2*b3*x1 + b1*b2*b3*x1 + 3*a1*b1*b2*b3*x1 + b2^2*b3*x1 + b1*b2^2*b3*x1 + (a2*a3*x1*(1 + x1))/2 + (a3*b2*x1*(1 + x1))/2 + (a3*b1*b2*x1*(1 + x1))/2 + (a3*b2^2*x1*(1 + x1))/2 + (a2*b3*x1*(1 + x1))/2 + (b2*b3*x1*(1 + x1))/2 + (a1*b2*b3*x1*(1 + x1))/2 + b1*b2*b3*x1*(1 + x1) + (b1^2*b2*b3*x1*(1 + x1))/2 + b1*b2*b3*x1^2*(1 + x1) + (b2^2*b3*x1^2*(1 + x1))/2 + 2*a3*b1*x2 + 2*a1*a3*b1*x2 + a3*b1^2*x2 + 2*a1*a3*b2*x2 + 2*a3*b1*b2*x2 + 2*a1*a3*b1*b2*x2 + a3*b1^2*b2*x2 + a1*b3*x2 + a1*a2*b3*x2 + a1*a3*b3*x2 + b1*b3*x2 + a1*b1*b3*x2 + a2*b1*b3*x2 + a1*a2*b1*b3*x2 + 2*a3*b1*b3*x2 + a1*a3*b1*b3*x2 + a1*b1^2*b3*x2 + a3*b1^2*b3*x2 + a1*b2*b3*x2 + b1*b2*b3*x2 + b1^2*b2*b3*x2 + a1*b1^2*b2*b3*x2 + a1*b2^2*b3*x2 + b1*b2^2*b3*x2 + a1*b1*b2^2*b3*x2 + a3*x1*x2 + 2*a1*a3*x1*x2 + a2*a3*x1*x2 + 2*a3*b1*x1*x2 + a1*a3*b1*x1*x2 + 2*a3*b1^2*x1*x2 + a1*a3*b1^2*x1*x2 + 2*a3*b2*x1*x2 + 2*a1*a3*b2*x1*x2 + 4*a3*b1*b2*x1*x2 + 2*a1*a3*b1*b2*x1*x2 + a3*b1^2*b2*x1*x2 + a3*b2^2*x1*x2 + a3*b1*b2^2*x1*x2 + a1*b3*x1*x2 + 2*a2*b3*x1*x2 + a1*a2*b3*x1*x2 + a3*b3*x1*x2 + a1*a3*b3*x1*x2 + 3*b1*b3*x1*x2 + 2*a1*b1*b3*x1*x2 + 4*a2*b1*b3*x1*x2 + 2*a1*a2*b1*b3*x1*x2 + 3*a3*b1*b3*x1*x2 + a1*a3*b1*b3*x1*x2 + b1^2*b3*x1*x2 + a1*b1^2*b3*x1*x2 + a3*b1^2*b3*x1*x2 + b2*b3*x1*x2 + 2*a1*b2*b3*x1*x2 + b1*b2*b3*x1*x2 + 2*a1*b1*b2*b3*x1*x2 + 2*a2*b1*b2*b3*x1*x2 + a3*b1*b2*b3*x1*x2 + b2^2*b3*x1*x2 + b1*b2^2*b3*x1*x2 + a1*b1*b2^2*b3*x1*x2 + (a1*b3*x1*(1 + x1)*x2)/2 + (a1*a2*b3*x1*(1 + x1)*x2)/2 + (b1*b3*x1*(1 + x1)*x2)/2 + (a1*b1*b3*x1*(1 + x1)*x2)/2 + (a1*b2*b3*x1*(1 + x1)*x2)/2 + (b1*b2*b3*x1*(1 + x1)*x2)/2 + (a1*b1*b2*b3*x1*(1 + x1)*x2)/2 + (b2^2*b3*x1*(1 + x1)*x2)/2 + (a3*b1*x2*(1 + x2))/2 + (a1*a3*b1*x2*(1 + x2))/2 + (a1*a3*b2*x2*(1 + x2))/2 + (a3*b1*b2*x2*(1 + x2))/2 + (a1*b3*x2*(1 + x2))/2 + (a1*a2*b3*x2*(1 + x2))/2 + (a1*a3*b3*x2*(1 + x2))/2 + (b1*b3*x2*(1 + x2))/2 + (a3*b1*b3*x2*(1 + x2))/2 + (b1^2*b3*x2*(1 + x2))/2 + (a1*b1^2*b3*x2*(1 + x2))/2 + (3*b1*b2*b3*x2*(1 + x2))/2 + (a1*b1*b2*b3*x2*(1 + x2))/2 + (a1*b2^2*b3*x2*(1 + x2))/2 + (a1*b3*x1*x2*(1 + x2))/2 + (a1*a2*b3*x1*x2*(1 + x2))/2 + (b1*b3*x1*x2*(1 + x2))/2 + (a1*b1*b3*x1*x2*(1 + x2))/2 + (a1*b2*b3*x1*x2*(1 + x2))/2 + b1*b2*b3*x1*x2*(1 + x2) + (a1*b1*b2*b3*x1*x2*(1 + x2))/2 + (b2^2*b3*x1*x2*(1 + x2))/2 + (b1*b2*b3*x2^2*(1 + x2))/2 + a2*b1*x3 + a1*a2*b1*x3 + a2*a3*b1*x3 + a1*b2*x3 + a1*a2*b2*x3 + 4*b1*b2*x3 + 2*a1*b1*b2*x3 + 2*a2*b1*b2*x3 + a1*a2*b1*b2*x3 + 2*a3*b1*b2*x3 + a2*a3*b1*b2*x3 + a1*b1^2*b2*x3 + a2*b1^2*b2*x3 + a1*b2^2*x3 + a1*a2*b2^2*x3 + b1*b2^2*x3 + 2*a1*b1*b2^2*x3 + a2*b1*b2^2*x3 + a3*b1*b2^2*x3 + a1*a2*b3*x3 + a2*b1*b3*x3 + a2*a3*b1*b3*x3 + a1*b2*b3*x3 + a1*a2*b2*b3*x3 + a1*b1*b2*b3*x3 + 2*a2*b1*b2*b3*x3 + a3*b1*b2*b3*x3 + a2*a3*b1*b2*b3*x3 + b1*b2^2*b3*x3 + a1*b1*b2^2*b3*x3 + a2*b1*b2^2*b3*x3 + a3*b1*b2^2*b3*x3 + a2*x1*x3 + 2*a2*a3*x1*x3 + 2*a2*b1*x1*x3 + a1*a2*b1*x1*x3 + a2*a3*b1*x1*x3 + a2*b1^2*x1*x3 + a2*a3*b1^2*x1*x3 + 2*b2*x1*x3 + a1*b2*x1*x3 + 2*a2*b2*x1*x3 + 2*a1*a2*b2*x1*x3 + 2*a3*b2*x1*x3 + a1*a3*b2*x1*x3 + 2*b1*b2*x1*x3 + 3*a1*b1*b2*x1*x3 + 4*a2*b1*b2*x1*x3 + a3*b1*b2*x1*x3 + 2*b1^2*b2*x1*x3 + 2*b2^2*x1*x3 + 2*a1*b2^2*x1*x3 + 2*a2*b2^2*x1*x3 + a3*b2^2*x1*x3 + b1^2*b2^2*x1*x3 + a2*b3*x1*x3 + a2*a3*b3*x1*x3 + b2*b3*x1*x3 + a1*b2*b3*x1*x3 + a2*b2*b3*x1*x3 + 2*a3*b2*b3*x1*x3 + a1*a3*b2*b3*x1*x3 + a2*a3*b2*b3*x1*x3 + b1*b2*b3*x1*x3 + a1*b1*b2*b3*x1*x3 + 2*a3*b1*b2*b3*x1*x3 + a2*b1^2*b2*b3*x1*x3 + a1*b2^2*b3*x1*x3 + 2*a3*b2^2*b3*x1*x3 + a3*b1*b2^2*b3*x1*x3 + (b1*b2*x1*(1 + x1)*x3)/2 + (b2^2*x1*(1 + x1)*x3)/2 + 2*b1*x2*x3 + a1*b1*x2*x3 + 2*a2*b1*x2*x3 + a3*b1*x2*x3 + a1*a3*b1*x2*x3 + a2*a3*b1*x2*x3 + 2*a1*b2*x2*x3 + a1*a3*b2*x2*x3 + b1*b2*x2*x3 + a1*b1*b2*x2*x3 + a2*b1*b2*x2*x3 + a3*b1*b2*x2*x3 + a1*a3*b1*b2*x2*x3 + a2*a3*b1*b2*x2*x3 + b1^2*b2*x2*x3 + a1*b1^2*b2*x2*x3 + a1*a3*b1^2*b2*x2*x3 + a1*a3*b2^2*x2*x3 + a1*b3*x2*x3 + a1*a2*b3*x2*x3 + b1*b3*x2*x3 + a1*b1*b3*x2*x3 + a2*b1*b3*x2*x3 + 2*a3*b1*b3*x2*x3 + a2*a3*b1*b3*x2*x3 + a1*a2*b2*b3*x2*x3 + 2*b1*b2*b3*x2*x3 + a1*b1*b2*b3*x2*x3 + 2*a2*b1*b2*b3*x2*x3 + 2*a1*a2*b1*b2*b3*x2*x3 + a1*a2*b2^2*b3*x2*x3 + b1*b2^2*b3*x2*x3 + a1*b1*b2^2*b3*x2*x3 + a2*b1*b2^2*b3*x2*x3 + a3*b1*b2^2*b3*x2*x3 + a2*a3*x1*x2*x3 + b1*x1*x2*x3 + a1*b1*x1*x2*x3 + 2*a2*b1*x1*x2*x3 + a1*a2*b1*x1*x2*x3 + a3*b1*x1*x2*x3 + a2*b1^2*x1*x2*x3 + a1*a2*b1^2*x1*x2*x3 + b2*x1*x2*x3 + a2*b2*x1*x2*x3 + a3*b2*x1*x2*x3 + a2*a3*b2*x1*x2*x3 + 3*b1*b2*x1*x2*x3 + a1*b1*b2*x1*x2*x3 + a2*b1*b2*x1*x2*x3 + a1*a2*b1*b2*x1*x2*x3 + a3*b1*b2*x1*x2*x3 + a2*a3*b1*b2*x1*x2*x3 + b1^2*b2*x1*x2*x3 + b2^2*x1*x2*x3 + a1*a3*b2^2*x1*x2*x3 + 2*b1*b2^2*x1*x2*x3 + a3*b1^2*b2^2*x1*x2*x3 + 2*a2*b3*x1*x2*x3 + a2*a3*b3*x1*x2*x3 + 2*b1*b3*x1*x2*x3 + a1*b1*b3*x1*x2*x3 + 2*a2*b1*b3*x1*x2*x3 + a1*a2*b1*b3*x1*x2*x3 + a1*b1^2*b3*x1*x2*x3 + 2*b2*b3*x1*x2*x3 + 4*a2*b2*b3*x1*x2*x3 + a1*a2*b2*b3*x1*x2*x3 + 2*a3*b2*b3*x1*x2*x3 + 3*b1*b2*b3*x1*x2*x3 + 2*a1*b1*b2*b3*x1*x2*x3 + a2*b1*b2*b3*x1*x2*x3 + a2*b1^2*b2*b3*x1*x2*x3 + 2*b2^2*b3*x1*x2*x3 + a2*b2^2*b3*x1*x2*x3 + b2*b3^2*x1*x2*x3 + (a2*b1*x3*(1 + x3))/2 + (a1*a2*b1*x3*(1 + x3))/2 + (a2*b1^2*x3*(1 + x3))/2 + (a1*a2*b2*x3*(1 + x3))/2 + b1*b2*x3*(1 + x3) + a1*b1*b2*x3*(1 + x3) + (a2*b1*b2*x3*(1 + x3))/2 + (a3*b1*b2*x3*(1 + x3))/2 + (a1*b2^2*x3*(1 + x3))/2 + (b1*b2^2*x3*(1 + x3))/2 + (b1^2*b2^2*x3*(1 + x3))/2 + (a1*a2*b3*x3*(1 + x3))/2 + (a2*b1*b3*x3*(1 + x3))/2 + (b1*b2*b3*x3*(1 + x3))/2 + (a1*b1*b2*b3*x3*(1 + x3))/2 + (a2*b1*b2*b3*x3*(1 + x3))/2 + (a3*b1*b2*b3*x3*(1 + x3))/2 + (b1*b2*x1*x3*(1 + x3))/2 + (b1^2*b2*x1*x3*(1 + x3))/2 + (b1*b2*b3*x1*x3*(1 + x3))/2 + (b2^2*b3*x1*x3*(1 + x3))/2 + (a1*a2*x2*x3*(1 + x3))/2 + (a1*a3*x2*x3*(1 + x3))/2 + (a1*b1*b2*x2*x3*(1 + x3))/2 + a2*a3*y1 + 3*a2*a3*b1*y1 + 3*a3*b2*y1 + 3*a1*a3*b2*y1 + 3*a2*a3*b2*y1 + a3*b1*b2*y1 + 2*a3*b1^2*b2*y1 + a3*b1*b2^2*y1 + a2*b3*y1 + a2*b1*b3*y1 + 2*b2*b3*y1 + a1*b2*b3*y1 + 2*a2*b2*b3*y1 + a3*b2*b3*y1 + b1*b2*b3*y1 + 3*a1*b1*b2*b3*y1 + b2^2*b3*y1 + b1*b2^2*b3*y1 + a2*a3*x1*y1 + 2*a3*b2*x1*y1 + a3*b1*b2*x1*y1 + a3*b2^2*x1*y1 + a2*b3*x1*y1 + 3*b2*b3*x1*y1 + a1*b2*b3*x1*y1 + b1*b2*b3*x1*y1 + b1^2*b2*b3*x1*y1 + b2^2*b3*x1*y1 + (a2*b3*x1*(1 + x1)*y1)/2 + (b2*b3*x1*(1 + x1)*y1)/2 + (b1*b2*b3*x1*(1 + x1)*y1)/2 + (b2^2*b3*x1*(1 + x1)*y1)/2 + a3*x2*y1 + 2*a1*a3*x2*y1 + a2*a3*x2*y1 + 2*a3*b1*x2*y1 + a1*a3*b1*x2*y1 + 2*a3*b1^2*x2*y1 + a1*a3*b1^2*x2*y1 + a3*b2*x2*y1 + 2*a1*a3*b2*x2*y1 + 3*a3*b1*b2*x2*y1 + 2*a1*a3*b1*b2*x2*y1 + a3*b1^2*b2*x2*y1 + a3*b2^2*x2*y1 + a3*b1*b2^2*x2*y1 + 2*b3*x2*y1 + 2*a1*b3*x2*y1 + a1*a2*b3*x2*y1 + a3*b3*x2*y1 + a1*a3*b3*x2*y1 + 2*b1*b3*x2*y1 + 2*a1*b1*b3*x2*y1 + 2*a2*b1*b3*x2*y1 + 2*a1*a2*b1*b3*x2*y1 + a3*b1*b3*x2*y1 + a1*a3*b1*b3*x2*y1 + 2*a1*b1^2*b3*x2*y1 + a3*b1^2*b3*x2*y1 + b2*b3*x2*y1 + 2*a1*b2*b3*x2*y1 + 3*b1*b2*b3*x2*y1 + 2*a1*b1*b2*b3*x2*y1 + 2*a2*b1*b2*b3*x2*y1 + a3*b1*b2*b3*x2*y1 + b1^2*b2*b3*x2*y1 + a1*b1*b2^2*b3*x2*y1 + a3*b1*b2*x1*x2*y1 + b3*x1*x2*y1 + a2*b3*x1*x2*y1 + b1*b3*x1*x2*y1 + a1*b1*b3*x1*x2*y1 + b1^2*b3*x1*x2*y1 + b2*b3*x1*x2*y1 + b1*b2*b3*x1*x2*y1 + b1^2*b2*b3*x1*x2*y1 + b2^2*b3*x1*x2*y1 + (a3*x2*(1 + x2)*y1)/2 + (b3*x2*(1 + x2)*y1)/2 + (a1*b3*x2*(1 + x2)*y1)/2 + (a2*b3*x2*(1 + x2)*y1)/2 + (a1*a2*b3*x2*(1 + x2)*y1)/2 + (a1*b1*b3*x2*(1 + x2)*y1)/2 + b2*b3*x2*(1 + x2)*y1 + (a1*b2*b3*x2*(1 + x2)*y1)/2 + (b1*b2*b3*x2*(1 + x2)*y1)/2 + (a1*b1*b2*b3*x2*(1 + x2)*y1)/2 + (b2^2*b3*x2*(1 + x2)*y1)/2 + 2*a2*a3*x3*y1 + a2*b1*x3*y1 + a1*a2*b1*x3*y1 + a2*a3*b1*x3*y1 + a2*b1^2*x3*y1 + 3*b2*x3*y1 + 4*a1*b2*x3*y1 + 2*a2*b2*x3*y1 + a1*a2*b2*x3*y1 + 2*a3*b2*x3*y1 + a1*a3*b2*x3*y1 + a2*a3*b2*x3*y1 + 2*b1*b2*x3*y1 + 2*a1*b1*b2*x3*y1 + 4*a2*b1*b2*x3*y1 + a3*b1*b2*x3*y1 + b1^2*b2*x3*y1 + a1*b1^2*b2*x3*y1 + a2*b1^2*b2*x3*y1 + a3*b1^2*b2*x3*y1 + 2*a1*b2^2*x3*y1 + 2*a2*b2^2*x3*y1 + b1^2*b2^2*x3*y1 + 2*a2*b3*x3*y1 + a2*a3*b3*x3*y1 + a2*b1*b3*x3*y1 + a2*b1^2*b3*x3*y1 + b2*b3*x3*y1 + 2*a1*b2*b3*x3*y1 + 2*a2*b2*b3*x3*y1 + a3*b2*b3*x3*y1 + a1*a3*b2*b3*x3*y1 + a2*a3*b2*b3*x3*y1 + 2*b1*b2*b3*x3*y1 + 3*a1*b1*b2*b3*x3*y1 + 2*a2*b1*b2*b3*x3*y1 + 2*a3*b1*b2*b3*x3*y1 + b1^2*b2*b3*x3*y1 + b2^2*b3*x3*y1 + 2*a2*b2^2*b3*x3*y1 + 2*a3*b2^2*b3*x3*y1 + b1*b2^2*b3*x3*y1 + a3*b1*b2^2*b3*x3*y1 + a2*x1*x3*y1 + a1*b2*x1*x3*y1 + a2*b2*x1*x3*y1 + b1*b2*x1*x3*y1 + a3*b1*b2*x1*x3*y1 + b1^2*b2*x1*x3*y1 + b2^2*x1*x3*y1 + a3*b2^2*x1*x3*y1 + a2*b3*x1*x3*y1 + 2*b2*b3*x1*x3*y1 + a1*b2*b3*x1*x3*y1 + a2*b2*b3*x1*x3*y1 + b1^2*b2*b3*x1*x3*y1 + x2*x3*y1 + a1*x2*x3*y1 + 2*a2*x2*x3*y1 + a1*a2*x2*x3*y1 + a3*x2*x3*y1 + 2*a2*a3*x2*x3*y1 + 3*a2*b1*x2*x3*y1 + a1*a2*b1*x2*x3*y1 + a3*b1*x2*x3*y1 + a1*a2*b1^2*x2*x3*y1 + b2*x2*x3*y1 + 2*a1*b2*x2*x3*y1 + a2*b2*x2*x3*y1 + 2*a3*b2*x2*x3*y1 + a2*a3*b2*x2*x3*y1 + 2*b1*b2*x2*x3*y1 + a1*b1*b2*x2*x3*y1 + a1*a2*b1*b2*x2*x3*y1 + a3*b1*b2*x2*x3*y1 + a2*a3*b1*b2*x2*x3*y1 + b1^2*b2*x2*x3*y1 + a2*b1^2*b2*x2*x3*y1 + b2^2*x2*x3*y1 + a3*b2^2*x2*x3*y1 + a1*a3*b2^2*x2*x3*y1 + 2*b1*b2^2*x2*x3*y1 + a3*b1^2*b2^2*x2*x3*y1 + a2*b3*x2*x3*y1 + a2*a3*b3*x2*x3*y1 + 3*b1*b3*x2*x3*y1 + 2*a1*b1*b3*x2*x3*y1 + a1*a2*b1*b3*x2*x3*y1 + a1*b1^2*b3*x2*x3*y1 + a2*b1^2*b3*x2*x3*y1 + 3*b2*b3*x2*x3*y1 + 2*a1*b2*b3*x2*x3*y1 + 2*a2*b2*b3*x2*x3*y1 + a1*a2*b2*b3*x2*x3*y1 + 2*a3*b2*b3*x2*x3*y1 + 3*b1*b2*b3*x2*x3*y1 + 2*a1*b1*b2*b3*x2*x3*y1 + a2*b1*b2*b3*x2*x3*y1 + a2*b1^2*b2*b3*x2*x3*y1 + b2^2*b3*x2*x3*y1 + a2*b2^2*b3*x2*x3*y1 + b2*b3^2*x2*x3*y1 + (b1^2*b2*x3*(1 + x3)*y1)/2 + (b2*b3*x3*(1 + x3)*y1)/2 + (b1*b2*b3*x3*(1 + x3)*y1)/2 + (b2^2*b3*x3*(1 + x3)*y1)/2 + (a2*a3*y1*(1 + y1))/2 + (a3*b2*y1*(1 + y1))/2 + (a3*b1*b2*y1*(1 + y1))/2 + (a3*b2^2*y1*(1 + y1))/2 + (a2*b3*y1*(1 + y1))/2 + (b2*b3*y1*(1 + y1))/2 + (a1*b2*b3*y1*(1 + y1))/2 + b1*b2*b3*y1*(1 + y1) + (b1^2*b2*b3*y1*(1 + y1))/2 + (a2*b3*x1*y1*(1 + y1))/2 + (b2*b3*x1*y1*(1 + y1))/2 + (b1*b2*b3*x1*y1*(1 + y1))/2 + (b2^2*b3*x1*y1*(1 + y1))/2 + (b3*x2*y1*(1 + y1))/2 + (a1*b3*x2*y1*(1 + y1))/2 + (a2*b3*x2*y1*(1 + y1))/2 + (a1*a2*b3*x2*y1*(1 + y1))/2 + (a1*b1*b3*x2*y1*(1 + y1))/2 + (b2*b3*x2*y1*(1 + y1))/2 + (a1*b2*b3*x2*y1*(1 + y1))/2 + (a1*b1*b2*b3*x2*y1*(1 + y1))/2 + (b2^2*b3*x2*y1*(1 + y1))/2 + (b1*b2*x3*y1*(1 + y1))/2 + (b2^2*x3*y1*(1 + y1))/2 + b1*b2*b3*y1^2*(1 + y1) + (b2^2*b3*y1^2*(1 + y1))/2 + a3*b1*y2 + 2*a1*a3*b1*y2 + a3*b1^2*y2 + 2*a1*a3*b2*y2 + 3*a3*b1*b2*y2 + 2*a1*a3*b1*b2*y2 + a3*b1^2*b2*y2 + a1*b3*y2 + a1*a2*b3*y2 + a1*a3*b3*y2 + a2*b1*b3*y2 + a1*a2*b1*b3*y2 + 2*a3*b1*b3*y2 + a1*a3*b1*b3*y2 + b1^2*b3*y2 + a1*b1^2*b3*y2 + a3*b1^2*b3*y2 + a1*b2*b3*y2 + b1*b2*b3*y2 + a1*b1^2*b2*b3*y2 + a1*b2^2*b3*y2 + b1*b2^2*b3*y2 + a1*b1*b2^2*b3*y2 + 2*a1*a3*x1*y2 + a2*a3*x1*y2 + 2*a3*b1*x1*y2 + a1*a3*b1*x1*y2 + 2*a3*b1^2*x1*y2 + a1*a3*b1^2*x1*y2 + a3*b2*x1*y2 + 2*a1*a3*b2*x1*y2 + 4*a3*b1*b2*x1*y2 + 2*a1*a3*b1*b2*x1*y2 + a3*b1^2*b2*x1*y2 + a3*b2^2*x1*y2 + a3*b1*b2^2*x1*y2 + 2*b3*x1*y2 + 2*a2*b3*x1*y2 + a1*a2*b3*x1*y2 + a3*b3*x1*y2 + a1*a3*b3*x1*y2 + 3*b1*b3*x1*y2 + 2*a1*b1*b3*x1*y2 + 2*a2*b1*b3*x1*y2 + 2*a1*a2*b1*b3*x1*y2 + 2*a3*b1*b3*x1*y2 + a1*a3*b1*b3*x1*y2 + a1*b1^2*b3*x1*y2 + a3*b1^2*b3*x1*y2 + 2*b2*b3*x1*y2 + 2*a1*b2*b3*x1*y2 + 2*b1*b2*b3*x1*y2 + 2*a1*b1*b2*b3*x1*y2 + 2*a2*b1*b2*b3*x1*y2 + a3*b1*b2*b3*x1*y2 + b1^2*b2*b3*x1*y2 + 2*b2^2*b3*x1*y2 + a1*b1*b2^2*b3*x1*y2 + (a2*b3*x1*(1 + x1)*y2)/2 + (a1*a2*b3*x1*(1 + x1)*y2)/2 + (a1*b1*b3*x1*(1 + x1)*y2)/2 + (b2*b3*x1*(1 + x1)*y2)/2 + (a1*b2*b3*x1*(1 + x1)*y2)/2 + (a1*b1*b2*b3*x1*(1 + x1)*y2)/2 + (b2^2*b3*x1*(1 + x1)*y2)/2 + a1*a3*b1*x2*y2 + a1*a3*b2*x2*y2 + a1*a2*b3*x2*y2 + a1*a3*b3*x2*y2 + a1*b1*b2*b3*x2*y2 + a1*b2^2*b3*x2*y2 + a3*x1*x2*y2 + a3*b2*x1*x2*y2 + a3*b1*b2*x1*x2*y2 + b3*x1*x2*y2 + a3*b3*x1*x2*y2 + b1*b3*x1*x2*y2 + 3*b2*b3*x1*x2*y2 + 2*b1*b2*b3*x1*x2*y2 + b1^2*b2*b3*x1*x2*y2 + (b1*b3*x2*(1 + x2)*y2)/2 + 2*b1*x3*y2 + 2*a1*b1*x3*y2 + 2*a3*b1*x3*y2 + a1*a3*b1*x3*y2 + 2*a2*a3*b1*x3*y2 + b1^2*x3*y2 + a1*b2*x3*y2 + a1*a3*b2*x3*y2 + 2*b1*b2*x3*y2 + 2*a1*b1*b2*x3*y2 + a2*b1*b2*x3*y2 + a1*a3*b1*b2*x3*y2 + a2*a3*b1*b2*x3*y2 + b1^2*b2*x3*y2 + a1*b1^2*b2*x3*y2 + a3*b1^2*b2*x3*y2 + a1*a3*b1^2*b2*x3*y2 + a1*a3*b2^2*x3*y2 + a1*b3*x3*y2 + a1*a2*b3*x3*y2 + 3*b1*b3*x3*y2 + a1*b1*b3*x3*y2 + a3*b1*b3*x3*y2 + a2*a3*b1*b3*x3*y2 + a1*b2*b3*x3*y2 + a1*a2*b2*b3*x3*y2 + a1*b1*b2*b3*x3*y2 + 2*a2*b1*b2*b3*x3*y2 + 2*a1*a2*b1*b2*b3*x3*y2 + a3*b1*b2*b3*x3*y2 + a1*b2^2*b3*x3*y2 + a1*a2*b2^2*b3*x3*y2 + b1*b2^2*b3*x3*y2 + a1*b1*b2^2*b3*x3*y2 + a2*b1*b2^2*b3*x3*y2 + a3*b1*b2^2*b3*x3*y2 + 2*x1*x3*y2 + 2*a2*x1*x3*y2 + a3*x1*x3*y2 + a2*a3*x1*x3*y2 + b1*x1*x3*y2 + a2*b1*x1*x3*y2 + a1*a2*b1*x1*x3*y2 + a3*b1*x1*x3*y2 + a1*b1^2*x1*x3*y2 + a1*a2*b1^2*x1*x3*y2 + a2*b2*x1*x3*y2 + 2*a3*b2*x1*x3*y2 + a2*a3*b2*x1*x3*y2 + a1*a2*b1*b2*x1*x3*y2 + 2*a3*b1*b2*x1*x3*y2 + a2*a3*b1*b2*x1*x3*y2 + b1^2*b2*x1*x3*y2 + b2^2*x1*x3*y2 + a3*b2^2*x1*x3*y2 + a1*a3*b2^2*x1*x3*y2 + 2*b1*b2^2*x1*x3*y2 + a3*b1^2*b2^2*x1*x3*y2 + 2*b3*x1*x3*y2 + 2*a2*b3*x1*x3*y2 + a3*b3*x1*x3*y2 + a2*a3*b3*x1*x3*y2 + 2*b1*b3*x1*x3*y2 + 2*a1*b1*b3*x1*x3*y2 + a2*b1*b3*x1*x3*y2 + a1*a2*b1*b3*x1*x3*y2 + b1^2*b3*x1*x3*y2 + a1*b1^2*b3*x1*x3*y2 + b2*b3*x1*x3*y2 + a1*b2*b3*x1*x3*y2 + 3*a2*b2*b3*x1*x3*y2 + a1*a2*b2*b3*x1*x3*y2 + 2*a3*b2*b3*x1*x3*y2 + 2*b1*b2*b3*x1*x3*y2 + 2*a1*b1*b2*b3*x1*x3*y2 + a2*b1*b2*b3*x1*x3*y2 + b1^2*b2*b3*x1*x3*y2 + a2*b1^2*b2*b3*x1*x3*y2 + b2^2*b3*x1*x3*y2 + a2*b2^2*b3*x1*x3*y2 + b2*b3^2*x1*x3*y2 + b1*x2*x3*y2 + a1*b1*x2*x3*y2 + a2*b1*x2*x3*y2 + a1*b2*x2*x3*y2 + b1*b2*x2*x3*y2 + 2*a2*b1*b2*x2*x3*y2 + b1*b3*x2*x3*y2 + a1*b1*b3*x2*x3*y2 + a2*b1*b3*x2*x3*y2 + 2*a1*b2*b3*x2*x3*y2 + (a1*x3*(1 + x3)*y2)/2 + (a1*a2*x3*(1 + x3)*y2)/2 + (a1*a3*x3*(1 + x3)*y2)/2 + (b1*b2*x3*(1 + x3)*y2)/2 + (a1*b1*b2*x3*(1 + x3)*y2)/2 + 2*a3*y1*y2 + 2*a1*a3*y1*y2 + a2*a3*y1*y2 + 2*a3*b1*y1*y2 + a1*a3*b1*y1*y2 + a3*b1^2*y1*y2 + a1*a3*b1^2*y1*y2 + 2*a3*b2*y1*y2 + 2*a1*a3*b2*y1*y2 + 3*a3*b1*b2*y1*y2 + 2*a1*a3*b1*b2*y1*y2 + a3*b1^2*b2*y1*y2 + a3*b2^2*y1*y2 + a3*b1*b2^2*y1*y2 + 2*b3*y1*y2 + a1*b3*y1*y2 + a1*a2*b3*y1*y2 + a3*b3*y1*y2 + a1*a3*b3*y1*y2 + b1*b3*y1*y2 + 2*a1*b1*b3*y1*y2 + 4*a2*b1*b3*y1*y2 + 2*a1*a2*b1*b3*y1*y2 + 2*a3*b1*b3*y1*y2 + a1*a3*b1*b3*y1*y2 + b1^2*b3*y1*y2 + 2*a1*b1^2*b3*y1*y2 + a3*b1^2*b3*y1*y2 + 2*a1*b2*b3*y1*y2 + 2*a1*b1*b2*b3*y1*y2 + 2*a2*b1*b2*b3*y1*y2 + a3*b1*b2*b3*y1*y2 + b1^2*b2*b3*y1*y2 + b2^2*b3*y1*y2 + b1*b2^2*b3*y1*y2 + a1*b1*b2^2*b3*y1*y2 + a3*b1*b2*x1*y1*y2 + b3*x1*y1*y2 + a2*b3*x1*y1*y2 + a1*b1*b3*x1*y1*y2 + b1^2*b3*x1*y1*y2 + b2*b3*x1*y1*y2 + b1*b2*b3*x1*y1*y2 + b1^2*b2*b3*x1*y1*y2 + b2^2*b3*x1*y1*y2 + a3*x2*y1*y2 + a3*b2*x2*y1*y2 + a3*b1*b2*x2*y1*y2 + a3*b3*x2*y1*y2 + 2*b1*b3*x2*y1*y2 + b1^2*b3*x2*y1*y2 + 3*b2*b3*x2*y1*y2 + 2*b1*b2*b3*x2*y1*y2 + b1^2*b2*b3*x2*y1*y2 + x3*y1*y2 + a2*x3*y1*y2 + a1*a2*x3*y1*y2 + a3*x3*y1*y2 + 2*a2*a3*x3*y1*y2 + 2*b1*x3*y1*y2 + a1*b1*x3*y1*y2 + 2*a2*b1*x3*y1*y2 + a1*a2*b1*x3*y1*y2 + a3*b1*x3*y1*y2 + b1^2*x3*y1*y2 + a1*b1^2*x3*y1*y2 + a2*b1^2*x3*y1*y2 + a1*a2*b1^2*x3*y1*y2 + b2*x3*y1*y2 + a1*b2*x3*y1*y2 + 2*a2*b2*x3*y1*y2 + 2*a3*b2*x3*y1*y2 + a2*a3*b2*x3*y1*y2 + 2*b1*b2*x3*y1*y2 + a2*b1*b2*x3*y1*y2 + a1*a2*b1*b2*x3*y1*y2 + 2*a3*b1*b2*x3*y1*y2 + a2*a3*b1*b2*x3*y1*y2 + a2*b1^2*b2*x3*y1*y2 + b2^2*x3*y1*y2 + a1*a3*b2^2*x3*y1*y2 + 2*b1*b2^2*x3*y1*y2 + a3*b1^2*b2^2*x3*y1*y2 + b3*x3*y1*y2 + a2*b3*x3*y1*y2 + a3*b3*x3*y1*y2 + a2*a3*b3*x3*y1*y2 + 2*b1*b3*x3*y1*y2 + a1*b1*b3*x3*y1*y2 + a2*b1*b3*x3*y1*y2 + a1*a2*b1*b3*x3*y1*y2 + a1*b1^2*b3*x3*y1*y2 + a2*b1^2*b3*x3*y1*y2 + 2*b2*b3*x3*y1*y2 + a1*b2*b3*x3*y1*y2 + 3*a2*b2*b3*x3*y1*y2 + a1*a2*b2*b3*x3*y1*y2 + 2*a3*b2*b3*x3*y1*y2 + 2*b1*b2*b3*x3*y1*y2 + 2*a1*b1*b2*b3*x3*y1*y2 + a2*b1*b2*b3*x3*y1*y2 + b1^2*b2*b3*x3*y1*y2 + a2*b1^2*b2*b3*x3*y1*y2 + b2^2*b3*x3*y1*y2 + a2*b2^2*b3*x3*y1*y2 + b2*b3^2*x3*y1*y2 + (a1*a2*b3*y1*(1 + y1)*y2)/2 + (b1*b3*y1*(1 + y1)*y2)/2 + (a1*b1*b3*y1*(1 + y1)*y2)/2 + (a1*b2*b3*y1*(1 + y1)*y2)/2 + (b1*b2*b3*y1*(1 + y1)*y2)/2 + (a1*b1*b2*b3*y1*(1 + y1)*y2)/2 + (b2^2*b3*y1*(1 + y1)*y2)/2 + (a1*a3*b1*y2*(1 + y2))/2 + (a1*a3*b2*y2*(1 + y2))/2 + (a3*b1*b2*y2*(1 + y2))/2 + (a1*b3*y2*(1 + y2))/2 + (a1*a2*b3*y2*(1 + y2))/2 + (a1*a3*b3*y2*(1 + y2))/2 + (a3*b1*b3*y2*(1 + y2))/2 + (a1*b1^2*b3*y2*(1 + y2))/2 + b1*b2*b3*y2*(1 + y2) + (a1*b1*b2*b3*y2*(1 + y2))/2 + (a1*b2^2*b3*y2*(1 + y2))/2 + (a2*b3*x1*y2*(1 + y2))/2 + (a1*a2*b3*x1*y2*(1 + y2))/2 + (a1*b1*b3*x1*y2*(1 + y2))/2 + (b2*b3*x1*y2*(1 + y2))/2 + (a1*b2*b3*x1*y2*(1 + y2))/2 + (b1*b2*b3*x1*y2*(1 + y2))/2 + (a1*b1*b2*b3*x1*y2*(1 + y2))/2 + (b2^2*b3*x1*y2*(1 + y2))/2 + (b1*b3*x2*y2*(1 + y2))/2 + (a3*y1*y2*(1 + y2))/2 + (a1*a2*b3*y1*y2*(1 + y2))/2 + (b1*b3*y1*y2*(1 + y2))/2 + (a1*b1*b3*y1*y2*(1 + y2))/2 + (b2*b3*y1*y2*(1 + y2))/2 + (a1*b2*b3*y1*y2*(1 + y2))/2 + b1*b2*b3*y1*y2*(1 + y2) + (a1*b1*b2*b3*y1*y2*(1 + y2))/2 + (b2^2*b3*y1*y2*(1 + y2))/2 + (b1*b2*b3*y2^2*(1 + y2))/2 + a2*b1*y3 + a1*a2*b1*y3 + a2*a3*b1*y3 + a1*b2*y3 + a1*a2*b2*y3 + 2*b1*b2*y3 + a1*b1*b2*y3 + 3*a2*b1*b2*y3 + a1*a2*b1*b2*y3 + a3*b1*b2*y3 + a2*a3*b1*b2*y3 + a1*b1^2*b2*y3 + a2*b1^2*b2*y3 + a1*a2*b2^2*y3 + b1*b2^2*y3 + 2*a1*b1*b2^2*y3 + a2*b1*b2^2*y3 + a3*b1*b2^2*y3 + a1*a2*b3*y3 + a2*a3*b1*b3*y3 + a1*a2*b2*b3*y3 + b1*b2*b3*y3 + a1*b1*b2*b3*y3 + a2*b1*b2*b3*y3 + a2*a3*b1*b2*b3*y3 + b1*b2^2*b3*y3 + a1*b1*b2^2*b3*y3 + a2*b1*b2^2*b3*y3 + a3*b1*b2^2*b3*y3 + a2*x1*y3 + 2*a2*a3*x1*y3 + 2*a2*b1*x1*y3 + a1*a2*b1*x1*y3 + a2*a3*b1*x1*y3 + a2*a3*b1^2*x1*y3 + b2*x1*y3 + 3*a1*b2*x1*y3 + a2*b2*x1*y3 + 2*a1*a2*b2*x1*y3 + a3*b2*x1*y3 + a1*a3*b2*x1*y3 + 2*b1*b2*x1*y3 + 3*a1*b1*b2*x1*y3 + 4*a2*b1*b2*x1*y3 + a3*b1*b2*x1*y3 + b1^2*b2*x1*y3 + b2^2*x1*y3 + 2*a1*b2^2*x1*y3 + 2*a2*b2^2*x1*y3 + b1^2*b2^2*x1*y3 + a2*a3*b3*x1*y3 + b2*b3*x1*y3 + 2*a2*b2*b3*x1*y3 + a3*b2*b3*x1*y3 + a1*a3*b2*b3*x1*y3 + a2*a3*b2*b3*x1*y3 + 3*b1*b2*b3*x1*y3 + a1*b1*b2*b3*x1*y3 + 2*a3*b1*b2*b3*x1*y3 + b1^2*b2*b3*x1*y3 + a2*b1^2*b2*b3*x1*y3 + 2*b2^2*b3*x1*y3 + a1*b2^2*b3*x1*y3 + 2*a3*b2^2*b3*x1*y3 + b1*b2^2*b3*x1*y3 + a3*b1*b2^2*b3*x1*y3 + (b1*b2*x1*(1 + x1)*y3)/2 + (b2^2*x1*(1 + x1)*y3)/2 + a1*x2*y3 + b1*x2*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a3*b1*x2*y3 + a1*a3*b1*x2*y3 + a2*a3*b1*x2*y3 + a1*b1^2*x2*y3 + a1*a3*b1^2*x2*y3 + a1*b2*x2*y3 + a1*a3*b2*x2*y3 + b1*b2*x2*y3 + a3*b1*b2*x2*y3 + a1*a3*b1*b2*x2*y3 + a2*a3*b1*b2*x2*y3 + b1^2*b2*x2*y3 + a1*a3*b1^2*b2*x2*y3 + a1*b3*x2*y3 + a1*a2*b3*x2*y3 + b1*b3*x2*y3 + a1*b1*b3*x2*y3 + a3*b1*b3*x2*y3 + a2*a3*b1*b3*x2*y3 + a1*b1^2*b3*x2*y3 + a1*a2*b2*b3*x2*y3 + a1*b1*b2*b3*x2*y3 + 2*a2*b1*b2*b3*x2*y3 + 2*a1*a2*b1*b2*b3*x2*y3 + a1*a2*b2^2*b3*x2*y3 + b1*b2^2*b3*x2*y3 + a1*b1*b2^2*b3*x2*y3 + a2*b1*b2^2*b3*x2*y3 + a3*b1*b2^2*b3*x2*y3 + x1*x2*y3 + a1*x1*x2*y3 + a2*x1*x2*y3 + a3*x1*x2*y3 + a2*a3*x1*x2*y3 + 2*b1*x1*x2*y3 + 2*a2*b1*x1*x2*y3 + a1*a2*b1*x1*x2*y3 + a3*b1*x1*x2*y3 + a1*b1^2*x1*x2*y3 + a2*b1^2*x1*x2*y3 + a1*a2*b1^2*x1*x2*y3 + 2*a3*b2*x1*x2*y3 + a2*a3*b2*x1*x2*y3 + b1*b2*x1*x2*y3 + 2*a2*b1*b2*x1*x2*y3 + a1*a2*b1*b2*x1*x2*y3 + 2*a3*b1*b2*x1*x2*y3 + a2*a3*b1*b2*x1*x2*y3 + b1^2*b2*x1*x2*y3 + b2^2*x1*x2*y3 + a1*b2^2*x1*x2*y3 + a1*a3*b2^2*x1*x2*y3 + 2*b1*b2^2*x1*x2*y3 + b1^2*b2^2*x1*x2*y3 + a3*b1^2*b2^2*x1*x2*y3 + b3*x1*x2*y3 + a1*b3*x1*x2*y3 + a2*b3*x1*x2*y3 + a3*b3*x1*x2*y3 + a2*a3*b3*x1*x2*y3 + 3*b1*b3*x1*x2*y3 + 2*a1*b1*b3*x1*x2*y3 + 2*a2*b1*b3*x1*x2*y3 + a1*a2*b1*b3*x1*x2*y3 + b1^2*b3*x1*x2*y3 + a1*b1^2*b3*x1*x2*y3 + 4*b2*b3*x1*x2*y3 + a1*b2*b3*x1*x2*y3 + 4*a2*b2*b3*x1*x2*y3 + a1*a2*b2*b3*x1*x2*y3 + 2*a3*b2*b3*x1*x2*y3 + 3*b1*b2*b3*x1*x2*y3 + 2*a1*b1*b2*b3*x1*x2*y3 + a2*b1*b2*b3*x1*x2*y3 + b1^2*b2*b3*x1*x2*y3 + a2*b1^2*b2*b3*x1*x2*y3 + b2^2*b3*x1*x2*y3 + a2*b2^2*b3*x1*x2*y3 + b2*b3^2*x1*x2*y3 + a1*a2*b1*x3*y3 + a2*a3*b1*x3*y3 + a2*b1^2*x3*y3 + a1*a2*b2*x3*y3 + a1*b1*b2*x3*y3 + a2*b1*b2*x3*y3 + a3*b1^2*b2*x3*y3 + a1*b2^2*x3*y3 + b1*b2^2*x3*y3 + b1^2*b2^2*x3*y3 + a1*a2*b3*x3*y3 + a1*b1*b2*b3*x3*y3 + a2*b1*b2*b3*x3*y3 + a1*b2^2*b3*x3*y3 + b1*b2^2*b3*x3*y3 + 2*a2*x1*x3*y3 + 2*a2*b1*x1*x3*y3 + b2*x1*x3*y3 + a1*b2*x1*x3*y3 + a2*b2*x1*x3*y3 + a3*b2*x1*x3*y3 + 4*b1*b2*x1*x3*y3 + a1*b1*b2*x1*x3*y3 + a2*b1*b2*x1*x3*y3 + a3*b1*b2*x1*x3*y3 + b1^2*b2*x1*x3*y3 + a1*b2^2*x1*x3*y3 + a2*b2^2*x1*x3*y3 + a3*b2^2*x1*x3*y3 + b1*b2^2*x1*x3*y3 + b1^2*b2^2*x1*x3*y3 + 3*b2*b3*x1*x3*y3 + 3*b1*b2*b3*x1*x3*y3 + b1^2*b2*b3*x1*x3*y3 + b2^2*b3*x1*x3*y3 + b1*b2^2*b3*x1*x3*y3 + a1*x2*x3*y3 + 2*a1*b1*x2*x3*y3 + a1*b1^2*x2*x3*y3 + 2*a1*b2*x2*x3*y3 + b1*b2*x2*x3*y3 + 2*a1*b1*b2*x2*x3*y3 + b1*b2^2*x2*x3*y3 + a1*b3*x2*x3*y3 + b1*b3*x2*x3*y3 + a1*b1*b3*x2*x3*y3 + a1*b1^2*b3*x2*x3*y3 + 2*a1*b1*b2*b3*x2*x3*y3 + a1*b2^2*b3*x2*x3*y3 + b1*b2^2*b3*x2*x3*y3 + 2*a2*y1*y3 + 2*a2*a3*y1*y3 + 3*a2*b1*y1*y3 + a1*a2*b1*y1*y3 + a2*a3*b1*y1*y3 + a2*b1^2*y1*y3 + 2*b2*y1*y3 + 3*a1*b2*y1*y3 + 4*a2*b2*y1*y3 + a1*a2*b2*y1*y3 + 2*a3*b2*y1*y3 + a1*a3*b2*y1*y3 + a2*a3*b2*y1*y3 + 4*b1*b2*y1*y3 + 2*a1*b1*b2*y1*y3 + 4*a2*b1*b2*y1*y3 + a3*b1*b2*y1*y3 + 2*b1^2*b2*y1*y3 + a1*b1^2*b2*y1*y3 + a2*b1^2*b2*y1*y3 + a3*b1^2*b2*y1*y3 + b2^2*y1*y3 + 2*a1*b2^2*y1*y3 + 2*a2*b2^2*y1*y3 + b1^2*b2^2*y1*y3 + a2*b3*y1*y3 + a2*a3*b3*y1*y3 + a2*b1*b3*y1*y3 + a2*b1^2*b3*y1*y3 + 2*b2*b3*y1*y3 + a1*b2*b3*y1*y3 + 3*a2*b2*b3*y1*y3 + 2*a3*b2*b3*y1*y3 + a1*a3*b2*b3*y1*y3 + a2*a3*b2*b3*y1*y3 + 2*b1*b2*b3*y1*y3 + 3*a1*b1*b2*b3*y1*y3 + 2*a2*b1*b2*b3*y1*y3 + 2*a3*b1*b2*b3*y1*y3 + b1^2*b2*b3*y1*y3 + 2*b2^2*b3*y1*y3 + 2*a2*b2^2*b3*y1*y3 + 2*a3*b2^2*b3*y1*y3 + a3*b1*b2^2*b3*y1*y3 + a2*x1*y1*y3 + b2*x1*y1*y3 + a1*b2*x1*y1*y3 + a2*b2*x1*y1*y3 + 2*b1*b2*x1*y1*y3 + a3*b1*b2*x1*y1*y3 + b1^2*b2*x1*y1*y3 + 2*b2^2*x1*y1*y3 + a3*b2^2*x1*y1*y3 + a2*b3*x1*y1*y3 + b2*b3*x1*y1*y3 + a1*b2*b3*x1*y1*y3 + a2*b2*b3*x1*y1*y3 + b1^2*b2*b3*x1*y1*y3 + x2*y1*y3 + a1*x2*y1*y3 + a1*a2*x2*y1*y3 + a3*x2*y1*y3 + 2*a2*a3*x2*y1*y3 + 2*b1*x2*y1*y3 + a1*b1*x2*y1*y3 + 3*a2*b1*x2*y1*y3 + a1*a2*b1*x2*y1*y3 + a3*b1*x2*y1*y3 + b1^2*x2*y1*y3 + a1*b1^2*x2*y1*y3 + a1*a2*b1^2*x2*y1*y3 + b2*x2*y1*y3 + 2*a1*b2*x2*y1*y3 + 2*a2*b2*x2*y1*y3 + a3*b2*x2*y1*y3 + a2*a3*b2*x2*y1*y3 + 3*b1*b2*x2*y1*y3 + a2*b1*b2*x2*y1*y3 + a1*a2*b1*b2*x2*y1*y3 + 2*a3*b1*b2*x2*y1*y3 + a2*a3*b1*b2*x2*y1*y3 + a2*b1^2*b2*x2*y1*y3 + 2*b2^2*x2*y1*y3 + a1*b2^2*x2*y1*y3 + a3*b2^2*x2*y1*y3 + a1*a3*b2^2*x2*y1*y3 + 2*b1*b2^2*x2*y1*y3 + b1^2*b2^2*x2*y1*y3 + a3*b1^2*b2^2*x2*y1*y3 + b3*x2*y1*y3 + a1*b3*x2*y1*y3 + a3*b3*x2*y1*y3 + a2*a3*b3*x2*y1*y3 + 3*b1*b3*x2*y1*y3 + a1*b1*b3*x2*y1*y3 + a1*a2*b1*b3*x2*y1*y3 + a1*b1^2*b3*x2*y1*y3 + a2*b1^2*b3*x2*y1*y3 + 3*b2*b3*x2*y1*y3 + a1*b2*b3*x2*y1*y3 + 2*a2*b2*b3*x2*y1*y3 + a1*a2*b2*b3*x2*y1*y3 + 2*a3*b2*b3*x2*y1*y3 + 3*b1*b2*b3*x2*y1*y3 + 2*a1*b1*b2*b3*x2*y1*y3 + a2*b1*b2*b3*x2*y1*y3 + b1^2*b2*b3*x2*y1*y3 + a2*b1^2*b2*b3*x2*y1*y3 + 2*b2^2*b3*x2*y1*y3 + a2*b2^2*b3*x2*y1*y3 + b2*b3^2*x2*y1*y3 + 2*a2*x3*y1*y3 + 2*a2*b1*x3*y1*y3 + 2*b2*x3*y1*y3 + 2*a1*b2*x3*y1*y3 + 2*a2*b2*x3*y1*y3 + 5*b1*b2*x3*y1*y3 + a1*b1*b2*x3*y1*y3 + a2*b1*b2*x3*y1*y3 + a3*b1*b2*x3*y1*y3 + 2*b1^2*b2*x3*y1*y3 + b2^2*x3*y1*y3 + a1*b2^2*x3*y1*y3 + a2*b2^2*x3*y1*y3 + a3*b2^2*x3*y1*y3 + b1*b2^2*x3*y1*y3 + b1^2*b2^2*x3*y1*y3 + 3*b2*b3*x3*y1*y3 + b1*b2*b3*x3*y1*y3 + b1^2*b2*b3*x3*y1*y3 + b2^2*b3*x3*y1*y3 + b1*b2^2*b3*x3*y1*y3 + (b1*b2*y1*(1 + y1)*y3)/2 + (b2^2*y1*(1 + y1)*y3)/2 + a1*y2*y3 + 2*a2*b1*y2*y3 + a3*b1*y2*y3 + a1*a3*b1*y2*y3 + 2*a2*a3*b1*y2*y3 + a1*b1^2*y2*y3 + a3*b1^2*y2*y3 + a1*a3*b1^2*y2*y3 + a1*a3*b2*y2*y3 + b1*b2*y2*y3 + a1*b1*b2*y2*y3 + 2*a2*b1*b2*y2*y3 + 2*a3*b1*b2*y2*y3 + a1*a3*b1*b2*y2*y3 + a2*a3*b1*b2*y2*y3 + a3*b1^2*b2*y2*y3 + a1*a3*b1^2*b2*y2*y3 + a1*b3*y2*y3 + a1*a2*b3*y2*y3 + b1*b3*y2*y3 + a1*b1*b3*y2*y3 + a2*b1*b3*y2*y3 + 2*a3*b1*b3*y2*y3 + a2*a3*b1*b3*y2*y3 + b1^2*b3*y2*y3 + a1*b1^2*b3*y2*y3 + a1*b2*b3*y2*y3 + a1*a2*b2*b3*y2*y3 + 3*b1*b2*b3*y2*y3 + a1*b1*b2*b3*y2*y3 + 2*a2*b1*b2*b3*y2*y3 + 2*a1*a2*b1*b2*b3*y2*y3 + a3*b1*b2*b3*y2*y3 + a1*b2^2*b3*y2*y3 + a1*a2*b2^2*b3*y2*y3 + b1*b2^2*b3*y2*y3 + a1*b1*b2^2*b3*y2*y3 + a2*b1*b2^2*b3*y2*y3 + a3*b1*b2^2*b3*y2*y3 + x1*y2*y3 + a1*x1*y2*y3 + a2*x1*y2*y3 + a2*a3*x1*y2*y3 + b1*x1*y2*y3 + a1*b1*x1*y2*y3 + a2*b1*x1*y2*y3 + a1*a2*b1*x1*y2*y3 + a3*b1*x1*y2*y3 + b1^2*x1*y2*y3 + a1*a2*b1^2*x1*y2*y3 + 2*b2*x1*y2*y3 + a3*b2*x1*y2*y3 + a2*a3*b2*x1*y2*y3 + 2*b1*b2*x1*y2*y3 + a1*b1*b2*x1*y2*y3 + a2*b1*b2*x1*y2*y3 + a1*a2*b1*b2*x1*y2*y3 + a3*b1*b2*x1*y2*y3 + a2*a3*b1*b2*x1*y2*y3 + b1^2*b2*x1*y2*y3 + 2*b2^2*x1*y2*y3 + a1*b2^2*x1*y2*y3 + a3*b2^2*x1*y2*y3 + a1*a3*b2^2*x1*y2*y3 + 2*b1*b2^2*x1*y2*y3 + b1^2*b2^2*x1*y2*y3 + a3*b1^2*b2^2*x1*y2*y3 + b3*x1*y2*y3 + a1*b3*x1*y2*y3 + a2*b3*x1*y2*y3 + a2*a3*b3*x1*y2*y3 + 2*b1*b3*x1*y2*y3 + a1*b1*b3*x1*y2*y3 + a2*b1*b3*x1*y2*y3 + a1*a2*b1*b3*x1*y2*y3 + a1*b1^2*b3*x1*y2*y3 + 3*a2*b2*b3*x1*y2*y3 + a1*a2*b2*b3*x1*y2*y3 + 2*a3*b2*b3*x1*y2*y3 + 2*b1*b2*b3*x1*y2*y3 + 2*a1*b1*b2*b3*x1*y2*y3 + a2*b1*b2*b3*x1*y2*y3 + a2*b1^2*b2*b3*x1*y2*y3 + 2*b2^2*b3*x1*y2*y3 + a2*b2^2*b3*x1*y2*y3 + b2*b3^2*x1*y2*y3 + a1*b1*x2*y2*y3 + a2*b1*x2*y2*y3 + a1*b2*x2*y2*y3 + b1*b2*x2*y2*y3 + 2*a2*b1*b2*x2*y2*y3 + b1*b3*x2*y2*y3 + a1*b1*b3*x2*y2*y3 + a2*b1*b3*x2*y2*y3 + 2*a1*b2*b3*x2*y2*y3 + a1*x3*y2*y3 + 2*b1*x3*y2*y3 + 2*a1*b1*x3*y2*y3 + b1^2*x3*y2*y3 + a1*b1^2*x3*y2*y3 + 2*a1*b2*x3*y2*y3 + b1*b2*x3*y2*y3 + 2*a1*b1*b2*x3*y2*y3 + b1*b2^2*x3*y2*y3 + a1*b3*x3*y2*y3 + 2*b1*b3*x3*y2*y3 + a1*b1*b3*x3*y2*y3 + b1^2*b3*x3*y2*y3 + a1*b1^2*b3*x3*y2*y3 + 2*b1*b2*b3*x3*y2*y3 + 2*a1*b1*b2*b3*x3*y2*y3 + a1*b2^2*b3*x3*y2*y3 + b1*b2^2*b3*x3*y2*y3 + y1*y2*y3 + 2*a1*y1*y2*y3 + a2*y1*y2*y3 + a1*a2*y1*y2*y3 + a3*y1*y2*y3 + 2*a2*a3*y1*y2*y3 + b1*y1*y2*y3 + 2*a2*b1*y1*y2*y3 + a1*a2*b1*y1*y2*y3 + a3*b1*y1*y2*y3 + b1^2*y1*y2*y3 + a2*b1^2*y1*y2*y3 + a1*a2*b1^2*y1*y2*y3 + 2*b2*y1*y2*y3 + a1*b2*y1*y2*y3 + a2*b2*y1*y2*y3 + a3*b2*y1*y2*y3 + a2*a3*b2*y1*y2*y3 + b1*b2*y1*y2*y3 + a1*b1*b2*y1*y2*y3 + 2*a2*b1*b2*y1*y2*y3 + a1*a2*b1*b2*y1*y2*y3 + a3*b1*b2*y1*y2*y3 + a2*a3*b1*b2*y1*y2*y3 + b1^2*b2*y1*y2*y3 + a2*b1^2*b2*y1*y2*y3 + b2^2*y1*y2*y3 + a1*b2^2*y1*y2*y3 + a1*a3*b2^2*y1*y2*y3 + 2*b1*b2^2*y1*y2*y3 + b1^2*b2^2*y1*y2*y3 + a3*b1^2*b2^2*y1*y2*y3 + a1*b3*y1*y2*y3 + a2*a3*b3*y1*y2*y3 + b1*b3*y1*y2*y3 + 2*a1*b1*b3*y1*y2*y3 + a2*b1*b3*y1*y2*y3 + a1*a2*b1*b3*y1*y2*y3 + a1*b1^2*b3*y1*y2*y3 + a2*b1^2*b3*y1*y2*y3 + b2*b3*y1*y2*y3 + 2*a1*b2*b3*y1*y2*y3 + 3*a2*b2*b3*y1*y2*y3 + a1*a2*b2*b3*y1*y2*y3 + 2*a3*b2*b3*y1*y2*y3 + 2*b1*b2*b3*y1*y2*y3 + 2*a1*b1*b2*b3*y1*y2*y3 + a2*b1*b2*b3*y1*y2*y3 + a2*b1^2*b2*b3*y1*y2*y3 + 2*b2^2*b3*y1*y2*y3 + a2*b2^2*b3*y1*y2*y3 + b2*b3^2*y1*y2*y3 + a2*b1*y3*(1 + y3) + (a1*a2*b1*y3*(1 + y3))/2 + (a2*b1^2*y3*(1 + y3))/2 + (a1*a2*b2*y3*(1 + y3))/2 + (b1*b2*y3*(1 + y3))/2 + a1*b1*b2*y3*(1 + y3) + (a2*b1*b2*y3*(1 + y3))/2 + (a3*b1*b2*y3*(1 + y3))/2 + (b1^2*b2*y3*(1 + y3))/2 + (a1*b2^2*y3*(1 + y3))/2 + (b1*b2^2*y3*(1 + y3))/2 + (b1^2*b2^2*y3*(1 + y3))/2 + (a1*a2*b3*y3*(1 + y3))/2 + (a2*b1*b3*y3*(1 + y3))/2 + b1*b2*b3*y3*(1 + y3) + (a1*b1*b2*b3*y3*(1 + y3))/2 + (a2*b1*b2*b3*y3*(1 + y3))/2 + (a3*b1*b2*b3*y3*(1 + y3))/2 + (b1*b2*x1*y3*(1 + y3))/2 + (b1^2*b2*x1*y3*(1 + y3))/2 + (b1*b2*b3*x1*y3*(1 + y3))/2 + (b2^2*b3*x1*y3*(1 + y3))/2 + (a1*a2*x2*y3*(1 + y3))/2 + (a1*a3*x2*y3*(1 + y3))/2 + (a1*b1*b2*x2*y3*(1 + y3))/2 + (b1*b3*x2*y3*(1 + y3))/2 + (a3*b1*b3*x2*y3*(1 + y3))/2 + (b1^2*b2*y1*y3*(1 + y3))/2 + (b2*b3*y1*y3*(1 + y3))/2 + (b1*b2*b3*y1*y3*(1 + y3))/2 + (b2^2*b3*y1*y3*(1 + y3))/2 + (a1*y2*y3*(1 + y3))/2 + (a1*a2*y2*y3*(1 + y3))/2 + (a1*a3*y2*y3*(1 + y3))/2 + (b1*b2*y2*y3*(1 + y3))/2 + (a1*b1*b2*y2*y3*(1 + y3))/2 + (b1*b3*y2*y3*(1 + y3))/2 + (a3*b1*b3*y2*y3*(1 + y3))/2 + 3*a2*a3*b1*z1 + a3*b2*z1 + 3*a1*a3*b2*z1 + 3*a2*a3*b2*z1 + 2*a3*b1*b2*z1 + 2*a3*b1^2*b2*z1 + a3*b2^2*z1 + a3*b1*b2^2*z1 + a2*b1*b3*z1 + 2*a1*b2*b3*z1 + 2*a2*b2*b3*z1 + a3*b2*b3*z1 + 2*b1*b2*b3*z1 + 3*a1*b1*b2*b3*z1 + b1^2*b2*b3*z1 + 2*b2^2*b3*z1 + b1*b2^2*b3*z1 + a2*a3*x1*z1 + 2*a3*b2*x1*z1 + 2*a3*b1*b2*x1*z1 + a2*b1*b3*x1*z1 + b2*b3*x1*z1 + a1*b2*b3*x1*z1 + 2*a2*b2*b3*x1*z1 + a3*b2*b3*x1*z1 + 3*b1*b2*b3*x1*z1 + 2*b2^2*b3*x1*z1 + b1*b2^2*b3*x1*z1 + (b2*b3*x1*(1 + x1)*z1)/2 + b1*b2*b3*x1*(1 + x1)*z1 + (b2^2*b3*x1*(1 + x1)*z1)/2 + 2*a1*a3*x2*z1 + a2*a3*x2*z1 + a3*b1*x2*z1 + a1*a3*b1*x2*z1 + 2*a3*b1^2*x2*z1 + a1*a3*b1^2*x2*z1 + 2*a3*b2*x2*z1 + 2*a1*a3*b2*x2*z1 + 2*a3*b1*b2*x2*z1 + 2*a1*a3*b1*b2*x2*z1 + a3*b1^2*b2*x2*z1 + a3*b1*b2^2*x2*z1 + b1*b3*x2*z1 + 3*a1*b1*b3*x2*z1 + 4*a2*b1*b3*x2*z1 + 2*a1*a2*b1*b3*x2*z1 + a3*b1*b3*x2*z1 + a1*a3*b1*b3*x2*z1 + a1*b1^2*b3*x2*z1 + a3*b1^2*b3*x2*z1 + b2*b3*x2*z1 + 2*a2*b2*b3*x2*z1 + a3*b2*b3*x2*z1 + 2*b1*b2*b3*x2*z1 + a1*b1*b2*b3*x2*z1 + 2*a2*b1*b2*b3*x2*z1 + a3*b1*b2*b3*x2*z1 + 2*b2^2*b3*x2*z1 + b1*b2^2*b3*x2*z1 + a1*b1*b2^2*b3*x2*z1 + a3*x1*x2*z1 + a1*a3*b2*x1*x2*z1 + b3*x1*x2*z1 + 2*a1*b3*x1*x2*z1 + a1*a2*b3*x1*x2*z1 + 3*b1*b3*x1*x2*z1 + a1*b1*b3*x1*x2*z1 + b1^2*b3*x1*x2*z1 + 2*b2*b3*x1*x2*z1 + 2*a1*b2*b3*x1*x2*z1 + b1*b2*b3*x1*x2*z1 + 2*a1*b1*b2*b3*x1*x2*z1 + b2^2*b3*x1*x2*z1 + (a1*b3*x2*(1 + x2)*z1)/2 + (a1*a2*b3*x2*(1 + x2)*z1)/2 + (a1*b1*b3*x2*(1 + x2)*z1)/2 + (b2*b3*x2*(1 + x2)*z1)/2 + (a1*b2*b3*x2*(1 + x2)*z1)/2 + b1*b2*b3*x2*(1 + x2)*z1 + (a1*b1*b2*b3*x2*(1 + x2)*z1)/2 + (b2^2*b3*x2*(1 + x2)*z1)/2 + a2*x3*z1 + a1*a2*x3*z1 + 2*a2*a3*x3*z1 + 3*a2*b1*x3*z1 + a1*a2*b1*x3*z1 + a2*b1^2*x3*z1 + a2*a3*b1^2*x3*z1 + b2*x3*z1 + 2*a1*b2*x3*z1 + 3*a2*b2*x3*z1 + 2*a1*a2*b2*x3*z1 + a3*b2*x3*z1 + a1*a3*b2*x3*z1 + 3*b1*b2*x3*z1 + 3*a1*b1*b2*x3*z1 + 4*a2*b1*b2*x3*z1 + a3*b1*b2*x3*z1 + 2*b1^2*b2*x3*z1 + b2^2*x3*z1 + 2*a1*b2^2*x3*z1 + 2*a2*b2^2*x3*z1 + a3*b2^2*x3*z1 + a2*a3*b2^2*x3*z1 + b1*b2^2*x3*z1 + b1^2*b2^2*x3*z1 + a2*b3*x3*z1 + a2*a3*b3*x3*z1 + b2*b3*x3*z1 + a1*b2*b3*x3*z1 + 2*a2*b2*b3*x3*z1 + a1*a3*b2*b3*x3*z1 + 2*a2*a3*b2*b3*x3*z1 + b1*b2*b3*x3*z1 + a1*b1*b2*b3*x3*z1 + a2*b1*b2*b3*x3*z1 + 2*a3*b1*b2*b3*x3*z1 + a2*b1^2*b2*b3*x3*z1 + a1*b2^2*b3*x3*z1 + a2*b2^2*b3*x3*z1 + 2*a3*b2^2*b3*x3*z1 + a3*b1*b2^2*b3*x3*z1 + a2*b1*x1*x3*z1 + b2*x1*x3*z1 + a1*b2*x1*x3*z1 + a3*b2*x1*x3*z1 + a1*a3*b2*x1*x3*z1 + a2*a3*b2*x1*x3*z1 + b1*b2*x1*x3*z1 + a1*b1*b2*x1*x3*z1 + a2*b1*b2*x1*x3*z1 + b1^2*b2*x1*x3*z1 + b2^2*x1*x3*z1 + a3*b1*b2^2*x1*x3*z1 + a2*b3*x1*x3*z1 + a2*b1*b3*x1*x3*z1 + 2*b2*b3*x1*x3*z1 + a1*b2*b3*x1*x3*z1 + a2*b2*b3*x1*x3*z1 + b1*b2*b3*x1*x3*z1 + a1*b1*b2*b3*x1*x3*z1 + a2*b1*b2*b3*x1*x3*z1 + 2*a2*x2*x3*z1 + a1*a2*x2*x3*z1 + a3*x2*x3*z1 + a2*a3*x2*x3*z1 + 3*a2*b1*x2*x3*z1 + a1*a2*b1*x2*x3*z1 + a3*b1*x2*x3*z1 + a2*b1^2*x2*x3*z1 + a1*a2*b1^2*x2*x3*z1 + b2*x2*x3*z1 + a1*b2*x2*x3*z1 + a2*b2*x2*x3*z1 + a1*a2*b2*x2*x3*z1 + 2*a2*a3*b2*x2*x3*z1 + 2*b1*b2*x2*x3*z1 + a2*b1*b2*x2*x3*z1 + a1*a2*b1*b2*x2*x3*z1 + a3*b1*b2*x2*x3*z1 + a2*a3*b1*b2*x2*x3*z1 + b1^2*b2*x2*x3*z1 + a1*b1^2*b2*x2*x3*z1 + b2^2*x2*x3*z1 + a1*a3*b2^2*x2*x3*z1 + 2*b1*b2^2*x2*x3*z1 + a3*b1*b2^2*x2*x3*z1 + a3*b1^2*b2^2*x2*x3*z1 + b3*x2*x3*z1 + a1*b3*x2*x3*z1 + a2*b3*x2*x3*z1 + a2*a3*b3*x2*x3*z1 + 2*b1*b3*x2*x3*z1 + 2*a1*b1*b3*x2*x3*z1 + 2*a2*b1*b3*x2*x3*z1 + a1*a2*b1*b3*x2*x3*z1 + b1^2*b3*x2*x3*z1 + a1*b1^2*b3*x2*x3*z1 + 5*b2*b3*x2*x3*z1 + a1*b2*b3*x2*x3*z1 + 3*a2*b2*b3*x2*x3*z1 + a1*a2*b2*b3*x2*x3*z1 + 2*a3*b2*b3*x2*x3*z1 + 4*b1*b2*b3*x2*x3*z1 + 2*a1*b1*b2*b3*x2*x3*z1 + 2*a2*b1*b2*b3*x2*x3*z1 + a2*b1^2*b2*b3*x2*x3*z1 + 2*b2^2*b3*x2*x3*z1 + a2*b2^2*b3*x2*x3*z1 + b2*b3^2*x2*x3*z1 + (a2*a3*b2*x3*(1 + x3)*z1)/2 + (b1^2*b2*x3*(1 + x3)*z1)/2 + (a2*a3*b3*x3*(1 + x3)*z1)/2 + (b2*b3*x3*(1 + x3)*z1)/2 + (a2*b2*b3*x3*(1 + x3)*z1)/2 + (b1*b2*b3*x3*(1 + x3)*z1)/2 + (b2^2*b3*x3*(1 + x3)*z1)/2 + (a2*b2^2*b3*x3*(1 + x3)*z1)/2 + a2*a3*y1*z1 + 4*a3*b2*y1*z1 + 2*a3*b1*b2*y1*z1 + a2*b1*b3*y1*z1 + 2*b2*b3*y1*z1 + a1*b2*b3*y1*z1 + 2*a2*b2*b3*y1*z1 + a3*b2*b3*y1*z1 + b1*b2*b3*y1*z1 + 2*b2^2*b3*y1*z1 + b1*b2^2*b3*y1*z1 + a3*b2*x1*y1*z1 + a2*b3*x1*y1*z1 + 3*b2*b3*x1*y1*z1 + 2*b1*b2*b3*x1*y1*z1 + b2^2*b3*x1*y1*z1 + a3*x2*y1*z1 + a3*b2*x2*y1*z1 + a1*a3*b2*x2*y1*z1 + a3*b1*b2*x2*y1*z1 + 2*b3*x2*y1*z1 + a1*b3*x2*y1*z1 + a2*b3*x2*y1*z1 + 2*b1*b3*x2*y1*z1 + a1*b1*b3*x2*y1*z1 + 2*b2*b3*x2*y1*z1 + a1*b2*b3*x2*y1*z1 + 2*b1*b2*b3*x2*y1*z1 + a1*b1*b2*b3*x2*y1*z1 + b1^2*b2*b3*x2*y1*z1 + b2^2*b3*x2*y1*z1 + a2*x3*y1*z1 + a2*b1*x3*y1*z1 + b2*x3*y1*z1 + a1*b2*x3*y1*z1 + a2*b2*x3*y1*z1 + 2*a3*b2*x3*y1*z1 + a1*a3*b2*x3*y1*z1 + a2*a3*b2*x3*y1*z1 + b1*b2*x3*y1*z1 + a1*b1*b2*x3*y1*z1 + a2*b1*b2*x3*y1*z1 + a3*b1*b2*x3*y1*z1 + b2^2*x3*y1*z1 + a3*b2^2*x3*y1*z1 + a3*b1*b2^2*x3*y1*z1 + a2*b3*x3*y1*z1 + a2*b1*b3*x3*y1*z1 + 3*b2*b3*x3*y1*z1 + 3*b1*b2*b3*x3*y1*z1 + a1*b1*b2*b3*x3*y1*z1 + a2*b1*b2*b3*x3*y1*z1 + b1^2*b2*b3*x3*y1*z1 + (a2*b3*y1*(1 + y1)*z1)/2 + b2*b3*y1*(1 + y1)*z1 + (b1*b2*b3*y1*(1 + y1)*z1)/2 + (b2^2*b3*y1*(1 + y1)*z1)/2 + a3*y2*z1 + 2*a1*a3*y2*z1 + a2*a3*y2*z1 + 2*a3*b1*y2*z1 + a1*a3*b1*y2*z1 + 2*a3*b1^2*y2*z1 + a1*a3*b1^2*y2*z1 + 3*a3*b2*y2*z1 + 2*a1*a3*b2*y2*z1 + 2*a3*b1*b2*y2*z1 + 2*a1*a3*b1*b2*y2*z1 + a3*b1^2*b2*y2*z1 + a3*b1*b2^2*y2*z1 + a2*b3*y2*z1 + a3*b3*y2*z1 + 2*b1*b3*y2*z1 + a1*b1*b3*y2*z1 + 2*a2*b1*b3*y2*z1 + 2*a1*a2*b1*b3*y2*z1 + 2*a3*b1*b3*y2*z1 + a1*a3*b1*b3*y2*z1 + b1^2*b3*y2*z1 + a1*b1^2*b3*y2*z1 + a3*b1^2*b3*y2*z1 + 2*a2*b2*b3*y2*z1 + a3*b2*b3*y2*z1 + 3*b1*b2*b3*y2*z1 + a1*b1*b2*b3*y2*z1 + 2*a2*b1*b2*b3*y2*z1 + a3*b1*b2*b3*y2*z1 + b1^2*b2*b3*y2*z1 + b2^2*b3*y2*z1 + a1*b1*b2^2*b3*y2*z1 + a3*x1*y2*z1 + a3*b2*x1*y2*z1 + a1*a3*b2*x1*y2*z1 + b3*x1*y2*z1 + a1*b3*x1*y2*z1 + a2*b3*x1*y2*z1 + a1*a2*b3*x1*y2*z1 + b1*b3*x1*y2*z1 + a1*b1*b3*x1*y2*z1 + b1^2*b3*x1*y2*z1 + 2*b2*b3*x1*y2*z1 + 2*a1*b2*b3*x1*y2*z1 + b1*b2*b3*x1*y2*z1 + 2*a1*b1*b2*b3*x1*y2*z1 + b2^2*b3*x1*y2*z1 + a3*x2*y2*z1 + 2*a3*b2*x2*y2*z1 + a3*b1*b2*x2*y2*z1 + b3*x2*y2*z1 + a3*b3*x2*y2*z1 + 2*b1*b3*x2*y2*z1 + b2*b3*x2*y2*z1 + 3*b1*b2*b3*x2*y2*z1 + b1^2*b2*b3*x2*y2*z1 + x3*y2*z1 + a1*x3*y2*z1 + a2*x3*y2*z1 + a1*a2*x3*y2*z1 + a2*a3*x3*y2*z1 + a1*b1*x3*y2*z1 + a1*a2*b1*x3*y2*z1 + a3*b1*x3*y2*z1 + a1*b1^2*x3*y2*z1 + a1*a2*b1^2*x3*y2*z1 + 2*a2*b2*x3*y2*z1 + a1*a2*b2*x3*y2*z1 + 2*a3*b2*x3*y2*z1 + a2*a3*b2*x3*y2*z1 + a1*b1*b2*x3*y2*z1 + a1*a2*b1*b2*x3*y2*z1 + 2*a3*b1*b2*x3*y2*z1 + a2*a3*b1*b2*x3*y2*z1 + a1*b1^2*b2*x3*y2*z1 + b2^2*x3*y2*z1 + a3*b2^2*x3*y2*z1 + a1*a3*b2^2*x3*y2*z1 + 2*b1*b2^2*x3*y2*z1 + a3*b1*b2^2*x3*y2*z1 + a3*b1^2*b2^2*x3*y2*z1 + 3*b3*x3*y2*z1 + a1*b3*x3*y2*z1 + a2*b3*x3*y2*z1 + a3*b3*x3*y2*z1 + b1*b3*x3*y2*z1 + a1*b1*b3*x3*y2*z1 + a2*b1*b3*x3*y2*z1 + a1*a2*b1*b3*x3*y2*z1 + a1*b1^2*b3*x3*y2*z1 + 2*b2*b3*x3*y2*z1 + 3*a2*b2*b3*x3*y2*z1 + a1*a2*b2*b3*x3*y2*z1 + 2*a3*b2*b3*x3*y2*z1 + 4*b1*b2*b3*x3*y2*z1 + 2*a1*b1*b2*b3*x3*y2*z1 + 2*a2*b1*b2*b3*x3*y2*z1 + b1^2*b2*b3*x3*y2*z1 + a2*b1^2*b2*b3*x3*y2*z1 + b2^2*b3*x3*y2*z1 + b2*b3^2*x3*y2*z1 + a3*y1*y2*z1 + a1*a3*b2*y1*y2*z1 + a3*b1*b2*y1*y2*z1 + b3*y1*y2*z1 + a1*b3*y1*y2*z1 + a2*b3*y1*y2*z1 + 2*b1*b3*y1*y2*z1 + a1*b1*b3*y1*y2*z1 + 3*b2*b3*y1*y2*z1 + a1*b2*b3*y1*y2*z1 + b1*b2*b3*y1*y2*z1 + a1*b1*b2*b3*y1*y2*z1 + b1^2*b2*b3*y1*y2*z1 + b2^2*b3*y1*y2*z1 + (a3*b2*y2*(1 + y2)*z1)/2 + (b3*y2*(1 + y2)*z1)/2 + (a1*a2*b3*y2*(1 + y2)*z1)/2 + (a3*b3*y2*(1 + y2)*z1)/2 + (b1*b3*y2*(1 + y2)*z1)/2 + (a1*b1*b3*y2*(1 + y2)*z1)/2 + (b2*b3*y2*(1 + y2)*z1)/2 + (a1*b2*b3*y2*(1 + y2)*z1)/2 + (b1*b2*b3*y2*(1 + y2)*z1)/2 + (a1*b1*b2*b3*y2*(1 + y2)*z1)/2 + a1*a2*y3*z1 + 2*a2*a3*y3*z1 + 2*a2*b1*y3*z1 + a1*a2*b1*y3*z1 + a2*a3*b1^2*y3*z1 + 2*b2*y3*z1 + 2*a1*b2*y3*z1 + 2*a2*b2*y3*z1 + 2*a1*a2*b2*y3*z1 + a3*b2*y3*z1 + a1*a3*b2*y3*z1 + 4*b1*b2*y3*z1 + 3*a1*b1*b2*y3*z1 + 4*a2*b1*b2*y3*z1 + a3*b1*b2*y3*z1 + b1^2*b2*y3*z1 + b2^2*y3*z1 + 2*a1*b2^2*y3*z1 + a2*b2^2*y3*z1 + a3*b2^2*y3*z1 + a2*a3*b2^2*y3*z1 + b1*b2^2*y3*z1 + b1^2*b2^2*y3*z1 + a2*a3*b3*y3*z1 + 3*b2*b3*y3*z1 + 2*a2*b2*b3*y3*z1 + 2*a3*b2*b3*y3*z1 + a1*a3*b2*b3*y3*z1 + 2*a2*a3*b2*b3*y3*z1 + 4*b1*b2*b3*y3*z1 + a1*b1*b2*b3*y3*z1 + a2*b1*b2*b3*y3*z1 + 2*a3*b1*b2*b3*y3*z1 + b1^2*b2*b3*y3*z1 + a2*b1^2*b2*b3*y3*z1 + b2^2*b3*y3*z1 + a1*b2^2*b3*y3*z1 + a2*b2^2*b3*y3*z1 + 2*a3*b2^2*b3*y3*z1 + b1*b2^2*b3*y3*z1 + a3*b1*b2^2*b3*y3*z1 + a2*b1*x1*y3*z1 + 2*b2*x1*y3*z1 + 2*a1*b2*x1*y3*z1 + a2*b2*x1*y3*z1 + 2*a3*b2*x1*y3*z1 + a1*a3*b2*x1*y3*z1 + a2*a3*b2*x1*y3*z1 + a1*b1*b2*x1*y3*z1 + a2*b1*b2*x1*y3*z1 + b1^2*b2*x1*y3*z1 + b2^2*x1*y3*z1 + b1*b2^2*x1*y3*z1 + a3*b1*b2^2*x1*y3*z1 + a2*b3*x1*y3*z1 + a2*b1*b3*x1*y3*z1 + 2*b2*b3*x1*y3*z1 + a1*b2*b3*x1*y3*z1 + a2*b2*b3*x1*y3*z1 + 2*b1*b2*b3*x1*y3*z1 + a1*b1*b2*b3*x1*y3*z1 + a2*b1*b2*b3*x1*y3*z1 + 2*x2*y3*z1 + a2*x2*y3*z1 + a1*a2*x2*y3*z1 + a2*a3*x2*y3*z1 + b1*x2*y3*z1 + a1*b1*x2*y3*z1 + 3*a2*b1*x2*y3*z1 + a1*a2*b1*x2*y3*z1 + a3*b1*x2*y3*z1 + a1*b1^2*x2*y3*z1 + a2*b1^2*x2*y3*z1 + a1*a2*b1^2*x2*y3*z1 + b2*x2*y3*z1 + a2*b2*x2*y3*z1 + a1*a2*b2*x2*y3*z1 + 2*a3*b2*x2*y3*z1 + 2*a2*a3*b2*x2*y3*z1 + 2*b1*b2*x2*y3*z1 + a1*b1*b2*x2*y3*z1 + 2*a2*b1*b2*x2*y3*z1 + a1*a2*b1*b2*x2*y3*z1 + 2*a3*b1*b2*x2*y3*z1 + a2*a3*b1*b2*x2*y3*z1 + b1^2*b2*x2*y3*z1 + a1*b1^2*b2*x2*y3*z1 + b2^2*x2*y3*z1 + a1*b2^2*x2*y3*z1 + a1*a3*b2^2*x2*y3*z1 + 3*b1*b2^2*x2*y3*z1 + a3*b1*b2^2*x2*y3*z1 + b1^2*b2^2*x2*y3*z1 + a3*b1^2*b2^2*x2*y3*z1 + 2*b3*x2*y3*z1 + a1*b3*x2*y3*z1 + a3*b3*x2*y3*z1 + a2*a3*b3*x2*y3*z1 + 2*b1*b3*x2*y3*z1 + a1*b1*b3*x2*y3*z1 + 2*a2*b1*b3*x2*y3*z1 + a1*a2*b1*b3*x2*y3*z1 + a1*b1^2*b3*x2*y3*z1 + 3*b2*b3*x2*y3*z1 + 3*a2*b2*b3*x2*y3*z1 + a1*a2*b2*b3*x2*y3*z1 + 2*a3*b2*b3*x2*y3*z1 + 5*b1*b2*b3*x2*y3*z1 + 2*a1*b1*b2*b3*x2*y3*z1 + 2*a2*b1*b2*b3*x2*y3*z1 + b1^2*b2*b3*x2*y3*z1 + a2*b1^2*b2*b3*x2*y3*z1 + b2^2*b3*x2*y3*z1 + a2*b2^2*b3*x2*y3*z1 + b2*b3^2*x2*y3*z1 + 2*a2*b1*x3*y3*z1 + b2*x3*y3*z1 + 2*a1*b2*x3*y3*z1 + 2*a2*b2*x3*y3*z1 + 2*a3*b2*x3*y3*z1 + 3*b1*b2*x3*y3*z1 + a1*b1*b2*x3*y3*z1 + a2*b1*b2*x3*y3*z1 + a3*b1*b2*x3*y3*z1 + b1^2*b2*x3*y3*z1 + a1*b2^2*x3*y3*z1 + a2*b2^2*x3*y3*z1 + a3*b2^2*x3*y3*z1 + b1^2*b2^2*x3*y3*z1 + 3*b2*b3*x3*y3*z1 + 4*b1*b2*b3*x3*y3*z1 + b1^2*b2*b3*x3*y3*z1 + b2^2*b3*x3*y3*z1 + b1*b2^2*b3*x3*y3*z1 + a2*y1*y3*z1 + a2*b1*y1*y3*z1 + 2*a1*b2*y1*y3*z1 + 2*a2*b2*y1*y3*z1 + a3*b2*y1*y3*z1 + a1*a3*b2*y1*y3*z1 + a2*a3*b2*y1*y3*z1 + 3*b1*b2*y1*y3*z1 + a1*b1*b2*y1*y3*z1 + a2*b1*b2*y1*y3*z1 + a3*b1*b2*y1*y3*z1 + a3*b2^2*y1*y3*z1 + b1*b2^2*y1*y3*z1 + a3*b1*b2^2*y1*y3*z1 + a2*b3*y1*y3*z1 + a2*b1*b3*y1*y3*z1 + 2*b2*b3*y1*y3*z1 + 2*b1*b2*b3*y1*y3*z1 + a1*b1*b2*b3*y1*y3*z1 + a2*b1*b2*b3*y1*y3*z1 + b1^2*b2*b3*y1*y3*z1 + a1*y2*y3*z1 + 2*a2*y2*y3*z1 + a1*a2*y2*y3*z1 + a3*y2*y3*z1 + a2*a3*y2*y3*z1 + 2*b1*y2*y3*z1 + a1*a2*b1*y2*y3*z1 + a3*b1*y2*y3*z1 + b1^2*y2*y3*z1 + a1*a2*b1^2*y2*y3*z1 + 2*b2*y2*y3*z1 + a1*b2*y2*y3*z1 + 3*a2*b2*y2*y3*z1 + a1*a2*b2*y2*y3*z1 + a3*b2*y2*y3*z1 + a2*a3*b2*y2*y3*z1 + 2*b1*b2*y2*y3*z1 + a2*b1*b2*y2*y3*z1 + a1*a2*b1*b2*y2*y3*z1 + a3*b1*b2*y2*y3*z1 + a2*a3*b1*b2*y2*y3*z1 + a1*b1^2*b2*y2*y3*z1 + a1*b2^2*y2*y3*z1 + a3*b2^2*y2*y3*z1 + a1*a3*b2^2*y2*y3*z1 + 3*b1*b2^2*y2*y3*z1 + a3*b1*b2^2*y2*y3*z1 + b1^2*b2^2*y2*y3*z1 + a3*b1^2*b2^2*y2*y3*z1 + 2*b3*y2*y3*z1 + a1*b3*y2*y3*z1 + a2*b3*y2*y3*z1 + a3*b3*y2*y3*z1 + 2*b1*b3*y2*y3*z1 + 2*a1*b1*b3*y2*y3*z1 + a2*b1*b3*y2*y3*z1 + a1*a2*b1*b3*y2*y3*z1 + b1^2*b3*y2*y3*z1 + a1*b1^2*b3*y2*y3*z1 + 2*b2*b3*y2*y3*z1 + a1*b2*b3*y2*y3*z1 + 3*a2*b2*b3*y2*y3*z1 + a1*a2*b2*b3*y2*y3*z1 + 2*a3*b2*b3*y2*y3*z1 + 3*b1*b2*b3*y2*y3*z1 + 2*a1*b1*b2*b3*y2*y3*z1 + 2*a2*b1*b2*b3*y2*y3*z1 + a2*b1^2*b2*b3*y2*y3*z1 + b2^2*b3*y2*y3*z1 + b2*b3^2*y2*y3*z1 + (b2*y3*(1 + y3)*z1)/2 + (a2*b2*y3*(1 + y3)*z1)/2 + (a3*b2*y3*(1 + y3)*z1)/2 + (a2*a3*b2*y3*(1 + y3)*z1)/2 + (b1^2*b2*y3*(1 + y3)*z1)/2 + (a2*b3*y3*(1 + y3)*z1)/2 + (a2*a3*b3*y3*(1 + y3)*z1)/2 + (a2*b2*b3*y3*(1 + y3)*z1)/2 + (b1*b2*b3*y3*(1 + y3)*z1)/2 + (a2*b2^2*b3*y3*(1 + y3)*z1)/2 + (a2*a3*z1*(1 + z1))/2 + (a3*b1*b2*z1*(1 + z1))/2 + (a3*b2^2*z1*(1 + z1))/2 + a2*b3*z1*(1 + z1) + (b2*b3*z1*(1 + z1))/2 + (a1*b2*b3*z1*(1 + z1))/2 + b1*b2*b3*z1*(1 + z1) + (b1^2*b2*b3*z1*(1 + z1))/2 + (b2^2*b3*z1*(1 + z1))/2 + b1*b2*b3*x1*z1*(1 + z1) + (b2^2*b3*x1*z1*(1 + z1))/2 + (a1*b3*x2*z1*(1 + z1))/2 + (a1*a2*b3*x2*z1*(1 + z1))/2 + (a1*b1*b3*x2*z1*(1 + z1))/2 + (a1*b2*b3*x2*z1*(1 + z1))/2 + (b1*b2*b3*x2*z1*(1 + z1))/2 + (a1*b1*b2*b3*x2*z1*(1 + z1))/2 + (b2^2*b3*x2*z1*(1 + z1))/2 + (b2*x3*z1*(1 + z1))/2 + (b1*b2*x3*z1*(1 + z1))/2 + (b2^2*x3*z1*(1 + z1))/2 + (a2*b3*y1*z1*(1 + z1))/2 + (b2*b3*y1*z1*(1 + z1))/2 + (b1*b2*b3*y1*z1*(1 + z1))/2 + (b2^2*b3*y1*z1*(1 + z1))/2 + (a2*b3*y2*z1*(1 + z1))/2 + (a1*a2*b3*y2*z1*(1 + z1))/2 + (b1*b3*y2*z1*(1 + z1))/2 + (a1*b1*b3*y2*z1*(1 + z1))/2 + (b2*b3*y2*z1*(1 + z1))/2 + (a1*b2*b3*y2*z1*(1 + z1))/2 + (a1*b1*b2*b3*y2*z1*(1 + z1))/2 + (b2^2*b3*y2*z1*(1 + z1))/2 + (b2*y3*z1*(1 + z1))/2 + (b1*b2*y3*z1*(1 + z1))/2 + (b2^2*y3*z1*(1 + z1))/2 + (b2*b3*z1^2*(1 + z1))/2 + b1*b2*b3*z1^2*(1 + z1) + (b2^2*b3*z1^2*(1 + z1))/2 + a3*b1*z2 + a3*b1*b2*z2 + 2*a1*a3*b1*b2*z2 + 2*a3*b1^2*b2*z2 + a1*b1*b3*z2 + a1*a2*b1*b3*z2 + a3*b1*b3*z2 + a1*a3*b1*b3*z2 + b1^2*b3*z2 + a3*b1^2*b3*z2 + b1*b2*b3*z2 + a1*b1*b2*b3*z2 + b1^2*b2*b3*z2 + a1*b1^2*b2*b3*z2 + a1*b1*b2^2*b3*z2 + a2*a3*x1*z2 + a1*a3*b1*x1*z2 + a1*a3*b1^2*x1*z2 + 2*a3*b2*x1*z2 + a1*a3*b2*x1*z2 + 4*a3*b1*b2*x1*z2 + 2*a1*a3*b1*b2*x1*z2 + 2*a3*b1^2*b2*x1*z2 + a3*b1*b2^2*x1*z2 + a1*a3*b3*x1*z2 + b1*b3*x1*z2 + 2*a2*b1*b3*x1*z2 + 2*a1*a2*b1*b3*x1*z2 + 2*a3*b1*b3*x1*z2 + a1*a3*b1*b3*x1*z2 + a1*b1^2*b3*x1*z2 + a3*b1^2*b3*x1*z2 + b2*b3*x1*z2 + 2*a2*b2*b3*x1*z2 + a3*b2*b3*x1*z2 + b1*b2*b3*x1*z2 + 2*a2*b1*b2*b3*x1*z2 + a3*b1*b2*b3*x1*z2 + 2*b2^2*b3*x1*z2 + a1*b1*b2^2*b3*x1*z2 + (b3*x1*(1 + x1)*z2)/2 + (a1*b3*x1*(1 + x1)*z2)/2 + (a1*a2*b3*x1*(1 + x1)*z2)/2 + b1*b3*x1*(1 + x1)*z2 + a1*b1*b3*x1*(1 + x1)*z2 + (a2*b1*b3*x1*(1 + x1)*z2)/2 + (b1^2*b3*x1*(1 + x1)*z2)/2 + (b2*b3*x1*(1 + x1)*z2)/2 + (a1*b2*b3*x1*(1 + x1)*z2)/2 + (b1*b2*b3*x1*(1 + x1)*z2)/2 + (a1*b1*b2*b3*x1*(1 + x1)*z2)/2 + (b2^2*b3*x1*(1 + x1)*z2)/2 + a3*b1^2*x2*z2 + a1*a3*b1^2*x2*z2 + a3*b1*b2*x2*z2 + a3*b1^2*b2*x2*z2 + a1*a2*b3*x2*z2 + a2*b1*b3*x2*z2 + a3*b1*b3*x2*z2 + a3*b1^2*b3*x2*z2 + 2*b1*b2*b3*x2*z2 + a1*b1*b2*b3*x2*z2 + b1^2*b2*b3*x2*z2 + a1*b1^2*b2*b3*x2*z2 + a1*b2^2*b3*x2*z2 + b1*b2^2*b3*x2*z2 + a3*x1*x2*z2 + a3*b1*x1*x2*z2 + 2*a3*b2*x1*x2*z2 + a1*a3*b2*x1*x2*z2 + a3*b1^2*b2*x1*x2*z2 + 2*b3*x1*x2*z2 + a1*b3*x1*x2*z2 + 2*a2*b3*x1*x2*z2 + a1*a2*b3*x1*x2*z2 + 2*a3*b3*x1*x2*z2 + 5*b1*b3*x1*x2*z2 + 3*a1*b1*b3*x1*x2*z2 + a2*b1*b3*x1*x2*z2 + a1*a2*b1*b3*x1*x2*z2 + b1^2*b3*x1*x2*z2 + a1*b1^2*b3*x1*x2*z2 + 2*b2*b3*x1*x2*z2 + 2*a1*b2*b3*x1*x2*z2 + 3*b1*b2*b3*x1*x2*z2 + 2*a1*b1*b2*b3*x1*x2*z2 + b2^2*b3*x1*x2*z2 + b3^2*x1*x2*z2 + b1*b3*x2*(1 + x2)*z2 + (a2*b1*b3*x2*(1 + x2)*z2)/2 + (b1^2*b3*x2*(1 + x2)*z2)/2 + (b1*b2*b3*x2*(1 + x2)*z2)/2 + b1*x3*z2 + a1*a2*b1*x3*z2 + a3*b1*x3*z2 + b1^2*x3*z2 + a1*b1^2*x3*z2 + a3*b1^2*x3*z2 + a1*a3*b1^2*x3*z2 + a2*a3*b1^2*x3*z2 + 3*a1*b1*b2*x3*z2 + a1*a3*b1*b2*x3*z2 + 2*b1^2*b2*x3*z2 + a1*b1^2*b2*x3*z2 + a2*b1^2*b2*x3*z2 + a3*b1^2*b2*x3*z2 + a1*a3*b1^2*b2*x3*z2 + a1*a3*b2^2*x3*z2 + a3*b1*b2^2*x3*z2 + b1*b3*x3*z2 + 2*a1*b1*b3*x3*z2 + a3*b1*b3*x3*z2 + b1^2*b3*x3*z2 + a1*a2*b2*b3*x3*z2 + a2*b1*b2*b3*x3*z2 + 2*a1*a2*b1*b2*b3*x3*z2 + a3*b1*b2*b3*x3*z2 + a1*a2*b2^2*b3*x3*z2 + b1*b2^2*b3*x3*z2 + a2*b1*b2^2*b3*x3*z2 + a3*b1*b2^2*b3*x3*z2 + x1*x3*z2 + 2*a2*x1*x3*z2 + 2*a3*x1*x3*z2 + a2*a3*x1*x3*z2 + b1*x1*x3*z2 + 2*a1*b1*x1*x3*z2 + a2*b1*x1*x3*z2 + a1*a2*b1*x1*x3*z2 + a2*b1^2*x1*x3*z2 + a1*a2*b1^2*x1*x3*z2 + b2*x1*x3*z2 + a1*b2*x1*x3*z2 + 2*a2*b2*x1*x3*z2 + a3*b2*x1*x3*z2 + a1*a3*b2*x1*x3*z2 + 2*a2*a3*b2*x1*x3*z2 + 4*b1*b2*x1*x3*z2 + a1*b1*b2*x1*x3*z2 + a2*b1*b2*x1*x3*z2 + a1*a2*b1*b2*x1*x3*z2 + a3*b1*b2*x1*x3*z2 + a2*a3*b1*b2*x1*x3*z2 + 2*b1^2*b2*x1*x3*z2 + a3*b1^2*b2*x1*x3*z2 + b2^2*x1*x3*z2 + a1*a3*b2^2*x1*x3*z2 + 2*b1*b2^2*x1*x3*z2 + a3*b1^2*b2^2*x1*x3*z2 + b3*x1*x3*z2 + a1*b3*x1*x3*z2 + a2*b3*x1*x3*z2 + 2*a3*b3*x1*x3*z2 + a2*a3*b3*x1*x3*z2 + 2*b1*b3*x1*x3*z2 + a1*b1*b3*x1*x3*z2 + 2*a2*b1*b3*x1*x3*z2 + a1*a2*b1*b3*x1*x3*z2 + a1*b1^2*b3*x1*x3*z2 + 3*b2*b3*x1*x3*z2 + a1*b2*b3*x1*x3*z2 + 3*a2*b2*b3*x1*x3*z2 + a1*a2*b2*b3*x1*x3*z2 + 2*a3*b2*b3*x1*x3*z2 + 4*b1*b2*b3*x1*x3*z2 + 2*a1*b1*b2*b3*x1*x3*z2 + a2*b1*b2*b3*x1*x3*z2 + b1^2*b2*b3*x1*x3*z2 + a2*b1^2*b2*b3*x1*x3*z2 + b2^2*b3*x1*x3*z2 + a2*b2^2*b3*x1*x3*z2 + b3^2*x1*x3*z2 + b2*b3^2*x1*x3*z2 + b1*x2*x3*z2 + a1*b1*x2*x3*z2 + a2*b1*x2*x3*z2 + b1^2*x2*x3*z2 + a1*b1^2*x2*x3*z2 + a2*b1^2*x2*x3*z2 + a1*b2*x2*x3*z2 + b1*b2*x2*x3*z2 + a1*b1*b2*x2*x3*z2 + a2*b1*b2*x2*x3*z2 + a2*b1^2*b2*x2*x3*z2 + a1*b3*x2*x3*z2 + a1*a2*b3*x2*x3*z2 + b1*b3*x2*x3*z2 + a2*b1*b3*x2*x3*z2 + b1^2*b3*x2*x3*z2 + a1*b2*b3*x2*x3*z2 + 2*b1*b2*b3*x2*x3*z2 + a1*b1*b2*b3*x2*x3*z2 + (a1*a2*x3*(1 + x3)*z2)/2 + (a1*a3*x3*(1 + x3)*z2)/2 + (b1*x3*(1 + x3)*z2)/2 + (a1*b1*x3*(1 + x3)*z2)/2 + (a2*b1*x3*(1 + x3)*z2)/2 + (a3*b1*x3*(1 + x3)*z2)/2 + (b1*b2*x3*(1 + x3)*z2)/2 + (a1*b1*b2*x3*(1 + x3)*z2)/2 + a2*a3*y1*z2 + a3*b1*y1*z2 + a1*a3*b1*y1*z2 + a3*b1^2*y1*z2 + a1*a3*b1^2*y1*z2 + 3*a3*b2*y1*z2 + a1*a3*b2*y1*z2 + 3*a3*b1*b2*y1*z2 + 2*a1*a3*b1*b2*y1*z2 + 2*a3*b1^2*b2*y1*z2 + a3*b1*b2^2*y1*z2 + a2*b3*y1*z2 + a3*b3*y1*z2 + a1*a3*b3*y1*z2 + 2*b1*b3*y1*z2 + 4*a2*b1*b3*y1*z2 + 2*a1*a2*b1*b3*y1*z2 + 2*a3*b1*b3*y1*z2 + a1*a3*b1*b3*y1*z2 + 2*b1^2*b3*y1*z2 + 2*a1*b1^2*b3*y1*z2 + a3*b1^2*b3*y1*z2 + b2*b3*y1*z2 + 2*a2*b2*b3*y1*z2 + a3*b2*b3*y1*z2 + 3*b1*b2*b3*y1*z2 + 2*a2*b1*b2*b3*y1*z2 + a3*b1*b2*b3*y1*z2 + b2^2*b3*y1*z2 + b1*b2^2*b3*y1*z2 + a1*b1*b2^2*b3*y1*z2 + a3*b2*x1*y1*z2 + a3*b1*b2*x1*y1*z2 + b3*x1*y1*z2 + a2*b3*x1*y1*z2 + b1*b3*x1*y1*z2 + a1*b1*b3*x1*y1*z2 + b1^2*b3*x1*y1*z2 + 3*b2*b3*x1*y1*z2 + 2*b1*b2*b3*x1*y1*z2 + b1^2*b2*b3*x1*y1*z2 + b2^2*b3*x1*y1*z2 + a3*x2*y1*z2 + a3*b1*x2*y1*z2 + 3*a3*b2*x2*y1*z2 + a1*a3*b2*x2*y1*z2 + a3*b1^2*b2*x2*y1*z2 + 2*b3*x2*y1*z2 + 2*a1*b3*x2*y1*z2 + a2*b3*x2*y1*z2 + a1*a2*b3*x2*y1*z2 + 2*a3*b3*x2*y1*z2 + 3*b1*b3*x2*y1*z2 + 3*a1*b1*b3*x2*y1*z2 + a1*a2*b1*b3*x2*y1*z2 + a1*b1^2*b3*x2*y1*z2 + 4*b2*b3*x2*y1*z2 + 2*a1*b2*b3*x2*y1*z2 + 3*b1*b2*b3*x2*y1*z2 + 2*a1*b1*b2*b3*x2*y1*z2 + b2^2*b3*x2*y1*z2 + b3^2*x2*y1*z2 + x3*y1*z2 + a2*x3*y1*z2 + 2*a3*x3*y1*z2 + a2*a3*x3*y1*z2 + 2*b1*x3*y1*z2 + a1*b1*x3*y1*z2 + a1*a2*b1*x3*y1*z2 + a1*a2*b1^2*x3*y1*z2 + 3*b2*x3*y1*z2 + a1*b2*x3*y1*z2 + a3*b2*x3*y1*z2 + a1*a3*b2*x3*y1*z2 + 2*a2*a3*b2*x3*y1*z2 + 5*b1*b2*x3*y1*z2 + a1*b1*b2*x3*y1*z2 + a1*a2*b1*b2*x3*y1*z2 + a3*b1*b2*x3*y1*z2 + a2*a3*b1*b2*x3*y1*z2 + b1^2*b2*x3*y1*z2 + a2*b1^2*b2*x3*y1*z2 + a3*b1^2*b2*x3*y1*z2 + b2^2*x3*y1*z2 + a3*b2^2*x3*y1*z2 + a1*a3*b2^2*x3*y1*z2 + 2*b1*b2^2*x3*y1*z2 + a3*b1^2*b2^2*x3*y1*z2 + a2*b3*x3*y1*z2 + 2*a3*b3*x3*y1*z2 + a2*a3*b3*x3*y1*z2 + 2*b1*b3*x3*y1*z2 + 2*a1*b1*b3*x3*y1*z2 + a1*a2*b1*b3*x3*y1*z2 + a1*b1^2*b3*x3*y1*z2 + a2*b1^2*b3*x3*y1*z2 + 3*b2*b3*x3*y1*z2 + a1*b2*b3*x3*y1*z2 + 4*a2*b2*b3*x3*y1*z2 + a1*a2*b2*b3*x3*y1*z2 + 2*a3*b2*b3*x3*y1*z2 + 3*b1*b2*b3*x3*y1*z2 + 2*a1*b1*b2*b3*x3*y1*z2 + a2*b1*b2*b3*x3*y1*z2 + b1^2*b2*b3*x3*y1*z2 + a2*b1^2*b2*b3*x3*y1*z2 + 2*b2^2*b3*x3*y1*z2 + a2*b2^2*b3*x3*y1*z2 + b3^2*x3*y1*z2 + b2*b3^2*x3*y1*z2 + (a1*b3*y1*(1 + y1)*z2)/2 + (a2*b3*y1*(1 + y1)*z2)/2 + (a1*a2*b3*y1*(1 + y1)*z2)/2 + a1*b1*b3*y1*(1 + y1)*z2 + (a2*b1*b3*y1*(1 + y1)*z2)/2 + (b1^2*b3*y1*(1 + y1)*z2)/2 + b2*b3*y1*(1 + y1)*z2 + (a1*b2*b3*y1*(1 + y1)*z2)/2 + (a1*b1*b2*b3*y1*(1 + y1)*z2)/2 + (b2^2*b3*y1*(1 + y1)*z2)/2 + a1*a3*b1^2*y2*z2 + a3*b1*b2*y2*z2 + a3*b1^2*b2*y2*z2 + a1*a2*b3*y2*z2 + a3*b1*b3*y2*z2 + a1*b1^2*b3*y2*z2 + a3*b1^2*b3*y2*z2 + a1*b1*b2*b3*y2*z2 + a1*b1^2*b2*b3*y2*z2 + a1*b2^2*b3*y2*z2 + 2*a3*x1*y2*z2 + a3*b1*x1*y2*z2 + 2*a3*b2*x1*y2*z2 + a1*a3*b2*x1*y2*z2 + a3*b1*b2*x1*y2*z2 + a3*b1^2*b2*x1*y2*z2 + 3*b3*x1*y2*z2 + 2*a2*b3*x1*y2*z2 + a3*b3*x1*y2*z2 + 3*b1*b3*x1*y2*z2 + a1*b1*b3*x1*y2*z2 + a1*a2*b1*b3*x1*y2*z2 + a1*b1^2*b3*x1*y2*z2 + 2*b2*b3*x1*y2*z2 + a1*b2*b3*x1*y2*z2 + 2*b1*b2*b3*x1*y2*z2 + a1*b1*b2*b3*x1*y2*z2 + b1^2*b2*b3*x1*y2*z2 + 2*b2^2*b3*x1*y2*z2 + b3^2*x1*y2*z2 + a1*b3*x2*y2*z2 + b1*b2*b3*x2*y2*z2 + b1^2*x3*y2*z2 + a1*b1^2*x3*y2*z2 + a2*b1^2*x3*y2*z2 + a1*b1*b2*x3*y2*z2 + a2*b1*b2*x3*y2*z2 + b1^2*b2*x3*y2*z2 + a2*b1^2*b2*x3*y2*z2 + a1*a2*b3*x3*y2*z2 + b1*b3*x3*y2*z2 + a1*b1*b3*x3*y2*z2 + b1^2*b3*x3*y2*z2 + a1*b2*b3*x3*y2*z2 + b1*b2*b3*x3*y2*z2 + a1*b1*b2*b3*x3*y2*z2 + 2*a3*y1*y2*z2 + a3*b1*y1*y2*z2 + a3*b2*y1*y2*z2 + a1*a3*b2*y1*y2*z2 + a3*b1*b2*y1*y2*z2 + a3*b1^2*b2*y1*y2*z2 + 2*b3*y1*y2*z2 + a1*b3*y1*y2*z2 + 2*a2*b3*y1*y2*z2 + a3*b3*y1*y2*z2 + 2*b1*b3*y1*y2*z2 + a1*b1*b3*y1*y2*z2 + a2*b1*b3*y1*y2*z2 + a1*a2*b1*b3*y1*y2*z2 + 2*b1^2*b3*y1*y2*z2 + a1*b1^2*b3*y1*y2*z2 + 3*b2*b3*y1*y2*z2 + a1*b2*b3*y1*y2*z2 + b1*b2*b3*y1*y2*z2 + a1*b1*b2*b3*y1*y2*z2 + b1^2*b2*b3*y1*y2*z2 + 2*b2^2*b3*y1*y2*z2 + b3^2*y1*y2*z2 + (a2*b1*b3*y2*(1 + y2)*z2)/2 + (b1^2*b3*y2*(1 + y2)*z2)/2 + a1*a2*b1*y3*z2 + a3*b1*y3*z2 + b1^2*y3*z2 + a1*b1^2*y3*z2 + a2*b1^2*y3*z2 + a3*b1^2*y3*z2 + a2*a3*b1^2*y3*z2 + 2*a1*b1*b2*y3*z2 + a1*a3*b1*b2*y3*z2 + b1^2*b2*y3*z2 + a2*b1^2*b2*y3*z2 + 2*a3*b1^2*b2*y3*z2 + a1*a3*b1^2*b2*y3*z2 + 2*a1*b1*b3*y3*z2 + a3*b1*b3*y3*z2 + a1*b1^2*b3*y3*z2 + a1*a2*b2*b3*y3*z2 + a2*b1*b2*b3*y3*z2 + 2*a1*a2*b1*b2*b3*y3*z2 + a3*b1*b2*b3*y3*z2 + b1^2*b2*b3*y3*z2 + a1*a2*b2^2*b3*y3*z2 + a2*b1*b2^2*b3*y3*z2 + a3*b1*b2^2*b3*y3*z2 + a1*x1*y3*z2 + a2*x1*y3*z2 + a3*x1*y3*z2 + a2*a3*x1*y3*z2 + 2*b1*x1*y3*z2 + a1*b1*x1*y3*z2 + a2*b1*x1*y3*z2 + a1*a2*b1*x1*y3*z2 + a1*b1^2*x1*y3*z2 + a2*b1^2*x1*y3*z2 + a1*a2*b1^2*x1*y3*z2 + 3*b2*x1*y3*z2 + 2*a1*b2*x1*y3*z2 + 2*a2*b2*x1*y3*z2 + a3*b2*x1*y3*z2 + a1*a3*b2*x1*y3*z2 + 2*a2*a3*b2*x1*y3*z2 + 4*b1*b2*x1*y3*z2 + 2*a2*b1*b2*x1*y3*z2 + a1*a2*b1*b2*x1*y3*z2 + 2*a3*b1*b2*x1*y3*z2 + a2*a3*b1*b2*x1*y3*z2 + 3*b1^2*b2*x1*y3*z2 + a3*b1^2*b2*x1*y3*z2 + b2^2*x1*y3*z2 + a1*b2^2*x1*y3*z2 + a1*a3*b2^2*x1*y3*z2 + 2*b1*b2^2*x1*y3*z2 + b1^2*b2^2*x1*y3*z2 + a3*b1^2*b2^2*x1*y3*z2 + 2*b3*x1*y3*z2 + a3*b3*x1*y3*z2 + a2*a3*b3*x1*y3*z2 + b1*b3*x1*y3*z2 + 2*a1*b1*b3*x1*y3*z2 + 2*a2*b1*b3*x1*y3*z2 + a1*a2*b1*b3*x1*y3*z2 + b1^2*b3*x1*y3*z2 + a1*b1^2*b3*x1*y3*z2 + b2*b3*x1*y3*z2 + 3*a2*b2*b3*x1*y3*z2 + a1*a2*b2*b3*x1*y3*z2 + 2*a3*b2*b3*x1*y3*z2 + 4*b1*b2*b3*x1*y3*z2 + 2*a1*b1*b2*b3*x1*y3*z2 + a2*b1*b2*b3*x1*y3*z2 + a2*b1^2*b2*b3*x1*y3*z2 + 2*b2^2*b3*x1*y3*z2 + a2*b2^2*b3*x1*y3*z2 + b3^2*x1*y3*z2 + b2*b3^2*x1*y3*z2 + 2*b1*x2*y3*z2 + a1*b1*x2*y3*z2 + a2*b1*x2*y3*z2 + a1*b1^2*x2*y3*z2 + a2*b1^2*x2*y3*z2 + a1*b2*x2*y3*z2 + a1*b1*b2*x2*y3*z2 + a2*b1*b2*x2*y3*z2 + b1^2*b2*x2*y3*z2 + a2*b1^2*b2*x2*y3*z2 + a1*b3*x2*y3*z2 + a1*a2*b3*x2*y3*z2 + 2*b1*b3*x2*y3*z2 + a2*b1*b3*x2*y3*z2 + a1*b2*b3*x2*y3*z2 + 2*b1*b2*b3*x2*y3*z2 + a1*b1*b2*b3*x2*y3*z2 + a1*b1^2*x3*y3*z2 + b1*b2*x3*y3*z2 + 2*a1*b1*b2*x3*y3*z2 + b1^2*b2*x3*y3*z2 + b1*b2^2*x3*y3*z2 + a1*b1*b3*x3*y3*z2 + a1*b1^2*b3*x3*y3*z2 + b1*b2*b3*x3*y3*z2 + 2*a1*b1*b2*b3*x3*y3*z2 + b1^2*b2*b3*x3*y3*z2 + a1*b2^2*b3*x3*y3*z2 + a1*y1*y3*z2 + 2*a2*y1*y3*z2 + a3*y1*y3*z2 + a2*a3*y1*y3*z2 + 2*b1*y1*y3*z2 + 2*a1*b1*y1*y3*z2 + a1*a2*b1*y1*y3*z2 + b1^2*y1*y3*z2 + a1*b1^2*y1*y3*z2 + a1*a2*b1^2*y1*y3*z2 + b2*y1*y3*z2 + 2*a1*b2*y1*y3*z2 + 2*a2*b2*y1*y3*z2 + a3*b2*y1*y3*z2 + a1*a3*b2*y1*y3*z2 + 2*a2*a3*b2*y1*y3*z2 + 4*b1*b2*y1*y3*z2 + a2*b1*b2*y1*y3*z2 + a1*a2*b1*b2*y1*y3*z2 + 2*a3*b1*b2*y1*y3*z2 + a2*a3*b1*b2*y1*y3*z2 + 3*b1^2*b2*y1*y3*z2 + a2*b1^2*b2*y1*y3*z2 + a3*b1^2*b2*y1*y3*z2 + a1*b2^2*y1*y3*z2 + a3*b2^2*y1*y3*z2 + a1*a3*b2^2*y1*y3*z2 + 2*b1*b2^2*y1*y3*z2 + b1^2*b2^2*y1*y3*z2 + a3*b1^2*b2^2*y1*y3*z2 + b3*y1*y3*z2 + a1*b3*y1*y3*z2 + a3*b3*y1*y3*z2 + a2*a3*b3*y1*y3*z2 + 2*b1*b3*y1*y3*z2 + a1*b1*b3*y1*y3*z2 + a1*a2*b1*b3*y1*y3*z2 + a1*b1^2*b3*y1*y3*z2 + a2*b1^2*b3*y1*y3*z2 + 2*b2*b3*y1*y3*z2 + 2*a1*b2*b3*y1*y3*z2 + 4*a2*b2*b3*y1*y3*z2 + a1*a2*b2*b3*y1*y3*z2 + 2*a3*b2*b3*y1*y3*z2 + 3*b1*b2*b3*y1*y3*z2 + 2*a1*b1*b2*b3*y1*y3*z2 + a2*b1*b2*b3*y1*y3*z2 + a2*b1^2*b2*b3*y1*y3*z2 + b2^2*b3*y1*y3*z2 + a2*b2^2*b3*y1*y3*z2 + b3^2*y1*y3*z2 + b2*b3^2*y1*y3*z2 + a1*b1^2*y2*y3*z2 + a2*b1^2*y2*y3*z2 + b1*b2*y2*y3*z2 + a1*b1*b2*y2*y3*z2 + a2*b1*b2*y2*y3*z2 + a2*b1^2*b2*y2*y3*z2 + a1*a2*b3*y2*y3*z2 + a1*b1*b3*y2*y3*z2 + a1*b2*b3*y2*y3*z2 + b1*b2*b3*y2*y3*z2 + a1*b1*b2*b3*y2*y3*z2 + (a1*a2*y3*(1 + y3)*z2)/2 + (a1*a3*y3*(1 + y3)*z2)/2 + (b1*y3*(1 + y3)*z2)/2 + (a1*b1*y3*(1 + y3)*z2)/2 + (a2*b1*y3*(1 + y3)*z2)/2 + (a3*b1*y3*(1 + y3)*z2)/2 + (b1*b2*y3*(1 + y3)*z2)/2 + (a1*b1*b2*y3*(1 + y3)*z2)/2 + (b1*b3*y3*(1 + y3)*z2)/2 + (a3*b1*b3*y3*(1 + y3)*z2)/2 + a2*a3*z1*z2 + a1*a3*b1*z1*z2 + a3*b1^2*z1*z2 + a1*a3*b1^2*z1*z2 + 3*a1*a3*b2*z1*z2 + 4*a3*b1*b2*z1*z2 + 2*a1*a3*b1*b2*z1*z2 + 2*a3*b1^2*b2*z1*z2 + a3*b2^2*z1*z2 + a3*b1*b2^2*z1*z2 + 2*a2*b3*z1*z2 + a1*a2*b3*z1*z2 + 2*b1*b3*z1*z2 + 2*a1*b1*b3*z1*z2 + 3*a2*b1*b3*z1*z2 + 2*a1*a2*b1*b3*z1*z2 + a3*b1*b3*z1*z2 + a1*a3*b1*b3*z1*z2 + b1^2*b3*z1*z2 + a1*b1^2*b3*z1*z2 + a3*b1^2*b3*z1*z2 + b2*b3*z1*z2 + 2*a1*b2*b3*z1*z2 + b1*b2*b3*z1*z2 + a1*b1*b2*b3*z1*z2 + 2*a2*b1*b2*b3*z1*z2 + a3*b1*b2*b3*z1*z2 + b2^2*b3*z1*z2 + a1*b1*b2^2*b3*z1*z2 + a1*a3*b2*x1*z1*z2 + a3*b1*b2*x1*z1*z2 + 2*b3*x1*z1*z2 + 2*a1*b3*x1*z1*z2 + a1*a2*b3*x1*z1*z2 + 4*b1*b3*x1*z1*z2 + 2*a1*b1*b3*x1*z1*z2 + a2*b1*b3*x1*z1*z2 + 2*b1^2*b3*x1*z1*z2 + 2*a1*b2*b3*x1*z1*z2 + b1*b2*b3*x1*z1*z2 + 2*a1*b1*b2*b3*x1*z1*z2 + b2^2*b3*x1*z1*z2 + 2*a3*x2*z1*z2 + a3*b1*x2*z1*z2 + 2*a3*b2*x2*z1*z2 + a1*a3*b2*x2*z1*z2 + a3*b1*b2*x2*z1*z2 + a3*b1^2*b2*x2*z1*z2 + a1*b3*x2*z1*z2 + 2*a2*b3*x2*z1*z2 + a1*a2*b3*x2*z1*z2 + 2*a3*b3*x2*z1*z2 + 5*b1*b3*x2*z1*z2 + 3*a1*b1*b3*x2*z1*z2 + a2*b1*b3*x2*z1*z2 + a1*a2*b1*b3*x2*z1*z2 + b1^2*b3*x2*z1*z2 + a1*b1^2*b3*x2*z1*z2 + 2*b2*b3*x2*z1*z2 + 2*a1*b2*b3*x2*z1*z2 + 3*b1*b2*b3*x2*z1*z2 + 2*a1*b1*b2*b3*x2*z1*z2 + b2^2*b3*x2*z1*z2 + b3^2*x2*z1*z2 + 2*a2*x3*z1*z2 + a1*a2*x3*z1*z2 + 2*a3*x3*z1*z2 + a2*a3*x3*z1*z2 + b1*x3*z1*z2 + a1*b1*x3*z1*z2 + a1*a2*b1*x3*z1*z2 + a1*b1^2*x3*z1*z2 + a1*a2*b1^2*x3*z1*z2 + b2*x3*z1*z2 + 2*a2*b2*x3*z1*z2 + a1*a2*b2*x3*z1*z2 + 2*a3*b2*x3*z1*z2 + a1*a3*b2*x3*z1*z2 + a2*a3*b2*x3*z1*z2 + 3*b1*b2*x3*z1*z2 + a1*b1*b2*x3*z1*z2 + a1*a2*b1*b2*x3*z1*z2 + 2*a3*b1*b2*x3*z1*z2 + a2*a3*b1*b2*x3*z1*z2 + b1^2*b2*x3*z1*z2 + a1*b1^2*b2*x3*z1*z2 + a3*b1^2*b2*x3*z1*z2 + b2^2*x3*z1*z2 + a1*a3*b2^2*x3*z1*z2 + 2*b1*b2^2*x3*z1*z2 + a3*b1*b2^2*x3*z1*z2 + a3*b1^2*b2^2*x3*z1*z2 + 2*a2*b3*x3*z1*z2 + 2*a3*b3*x3*z1*z2 + a2*a3*b3*x3*z1*z2 + b1*b3*x3*z1*z2 + 2*a1*b1*b3*x3*z1*z2 + 2*a2*b1*b3*x3*z1*z2 + a1*a2*b1*b3*x3*z1*z2 + b1^2*b3*x3*z1*z2 + a1*b1^2*b3*x3*z1*z2 + b2*b3*x3*z1*z2 + 4*a2*b2*b3*x3*z1*z2 + a1*a2*b2*b3*x3*z1*z2 + 2*a3*b2*b3*x3*z1*z2 + 4*b1*b2*b3*x3*z1*z2 + 2*a1*b1*b2*b3*x3*z1*z2 + 2*a2*b1*b2*b3*x3*z1*z2 + b1^2*b2*b3*x3*z1*z2 + a2*b1^2*b2*b3*x3*z1*z2 + b2^2*b3*x3*z1*z2 + a2*b2^2*b3*x3*z1*z2 + b3^2*x3*z1*z2 + b2*b3^2*x3*z1*z2 + a1*a3*b2*y1*z1*z2 + 2*a3*b1*b2*y1*z1*z2 + b3*y1*z1*z2 + a1*b3*y1*z1*z2 + a2*b3*y1*z1*z2 + b1*b3*y1*z1*z2 + a1*b1*b3*y1*z1*z2 + b2*b3*y1*z1*z2 + a1*b2*b3*y1*z1*z2 + b1*b2*b3*y1*z1*z2 + a1*b1*b2*b3*y1*z1*z2 + b1^2*b2*b3*y1*z1*z2 + b2^2*b3*y1*z1*z2 + a3*y2*z1*z2 + a3*b1*y2*z1*z2 + a3*b2*y2*z1*z2 + a1*a3*b2*y2*z1*z2 + 2*a3*b1*b2*y2*z1*z2 + a3*b1^2*b2*y2*z1*z2 + b3*y2*z1*z2 + 2*a2*b3*y2*z1*z2 + a3*b3*y2*z1*z2 + 3*b1*b3*y2*z1*z2 + a1*b1*b3*y2*z1*z2 + a1*a2*b1*b3*y2*z1*z2 + a1*b1^2*b3*y2*z1*z2 + 3*b2*b3*y2*z1*z2 + a1*b2*b3*y2*z1*z2 + b1*b2*b3*y2*z1*z2 + a1*b1*b2*b3*y2*z1*z2 + b1^2*b2*b3*y2*z1*z2 + 2*b2^2*b3*y2*z1*z2 + b3^2*y2*z1*z2 + y3*z1*z2 + a2*y3*z1*z2 + a1*a2*y3*z1*z2 + a3*y3*z1*z2 + a2*a3*y3*z1*z2 + a1*a2*b1*y3*z1*z2 + b1^2*y3*z1*z2 + a1*a2*b1^2*y3*z1*z2 + 2*b2*y3*z1*z2 + 2*a1*b2*y3*z1*z2 + a2*b2*y3*z1*z2 + a1*a2*b2*y3*z1*z2 + a3*b2*y3*z1*z2 + a1*a3*b2*y3*z1*z2 + a2*a3*b2*y3*z1*z2 + 5*b1*b2*y3*z1*z2 + a2*b1*b2*y3*z1*z2 + a1*a2*b1*b2*y3*z1*z2 + 3*a3*b1*b2*y3*z1*z2 + a2*a3*b1*b2*y3*z1*z2 + 2*b1^2*b2*y3*z1*z2 + a1*b1^2*b2*y3*z1*z2 + a3*b1^2*b2*y3*z1*z2 + b2^2*y3*z1*z2 + a1*b2^2*y3*z1*z2 + a1*a3*b2^2*y3*z1*z2 + 3*b1*b2^2*y3*z1*z2 + a3*b1*b2^2*y3*z1*z2 + b1^2*b2^2*y3*z1*z2 + a3*b1^2*b2^2*y3*z1*z2 + b3*y3*z1*z2 + a2*b3*y3*z1*z2 + a3*b3*y3*z1*z2 + a2*a3*b3*y3*z1*z2 + a1*b1*b3*y3*z1*z2 + 2*a2*b1*b3*y3*z1*z2 + a1*a2*b1*b3*y3*z1*z2 + a1*b1^2*b3*y3*z1*z2 + b2*b3*y3*z1*z2 + a1*b2*b3*y3*z1*z2 + 4*a2*b2*b3*y3*z1*z2 + a1*a2*b2*b3*y3*z1*z2 + 2*a3*b2*b3*y3*z1*z2 + 5*b1*b2*b3*y3*z1*z2 + 2*a1*b1*b2*b3*y3*z1*z2 + 2*a2*b1*b2*b3*y3*z1*z2 + a2*b1^2*b2*b3*y3*z1*z2 + 2*b2^2*b3*y3*z1*z2 + a2*b2^2*b3*y3*z1*z2 + b3^2*y3*z1*z2 + b2*b3^2*y3*z1*z2 + (a1*b3*z1*(1 + z1)*z2)/2 + (a1*a2*b3*z1*(1 + z1)*z2)/2 + (b1*b3*z1*(1 + z1)*z2)/2 + a1*b1*b3*z1*(1 + z1)*z2 + (a2*b1*b3*z1*(1 + z1)*z2)/2 + (b1^2*b3*z1*(1 + z1)*z2)/2 + (b2*b3*z1*(1 + z1)*z2)/2 + (a1*b2*b3*z1*(1 + z1)*z2)/2 + (b1*b2*b3*z1*(1 + z1)*z2)/2 + (a1*b1*b2*b3*z1*(1 + z1)*z2)/2 + (b2^2*b3*z1*(1 + z1)*z2)/2 + (a1*a3*b1*z2*(1 + z2))/2 + (a3*b1^2*z2*(1 + z2))/2 + (a1*a3*b2*z2*(1 + z2))/2 + (a3*b1*b2*z2*(1 + z2))/2 + (a1*b3*z2*(1 + z2))/2 + (a1*a2*b3*z2*(1 + z2))/2 + (a1*a3*b3*z2*(1 + z2))/2 + (b1*b3*z2*(1 + z2))/2 + (a3*b1*b3*z2*(1 + z2))/2 + (a1*b1^2*b3*z2*(1 + z2))/2 + b1*b2*b3*z2*(1 + z2) + (a1*b1*b2*b3*z2*(1 + z2))/2 + (b1^2*b2*b3*z2*(1 + z2))/2 + (a1*b2^2*b3*z2*(1 + z2))/2 + (b3*x1*z2*(1 + z2))/2 + (a1*b3*x1*z2*(1 + z2))/2 + (a1*a2*b3*x1*z2*(1 + z2))/2 + b1*b3*x1*z2*(1 + z2) + a1*b1*b3*x1*z2*(1 + z2) + (a2*b1*b3*x1*z2*(1 + z2))/2 + (b1^2*b3*x1*z2*(1 + z2))/2 + (a1*b2*b3*x1*z2*(1 + z2))/2 + b1*b2*b3*x1*z2*(1 + z2) + (a1*b1*b2*b3*x1*z2*(1 + z2))/2 + (b2^2*b3*x1*z2*(1 + z2))/2 + b1*b3*x2*z2*(1 + z2) + (a2*b1*b3*x2*z2*(1 + z2))/2 + (b1^2*b3*x2*z2*(1 + z2))/2 + (b1*b2*b3*x2*z2*(1 + z2))/2 + (a3*y1*z2*(1 + z2))/2 + (a1*b3*y1*z2*(1 + z2))/2 + (a2*b3*y1*z2*(1 + z2))/2 + (a1*a2*b3*y1*z2*(1 + z2))/2 + a1*b1*b3*y1*z2*(1 + z2) + (a2*b1*b3*y1*z2*(1 + z2))/2 + (b1^2*b3*y1*z2*(1 + z2))/2 + b2*b3*y1*z2*(1 + z2) + (a1*b2*b3*y1*z2*(1 + z2))/2 + (b1*b2*b3*y1*z2*(1 + z2))/2 + (a1*b1*b2*b3*y1*z2*(1 + z2))/2 + (b2^2*b3*y1*z2*(1 + z2))/2 + (a2*b1*b3*y2*z2*(1 + z2))/2 + (b1^2*b3*y2*z2*(1 + z2))/2 + (a1*b3*z1*z2*(1 + z2))/2 + (a1*a2*b3*z1*z2*(1 + z2))/2 + (b1*b3*z1*z2*(1 + z2))/2 + a1*b1*b3*z1*z2*(1 + z2) + (a2*b1*b3*z1*z2*(1 + z2))/2 + (b1^2*b3*z1*z2*(1 + z2))/2 + (b2*b3*z1*z2*(1 + z2))/2 + (a1*b2*b3*z1*z2*(1 + z2))/2 + b1*b2*b3*z1*z2*(1 + z2) + (a1*b1*b2*b3*z1*z2*(1 + z2))/2 + (b2^2*b3*z1*z2*(1 + z2))/2 + (b1*b3*z2^2*(1 + z2))/2 + (b1*b2*b3*z2^2*(1 + z2))/2 + a1*a2*b1*b2*z3 + a3*b1*b2*z3 + b1^2*b2*z3 + a1*b1^2*b2*z3 + a2*b1^2*b2*z3 + a1*b2^2*z3 + a1*a2*b2^2*z3 + b1*b2^2*z3 + a1*b1*b2^2*z3 + a1*a2*b2*b3*z3 + a1*b1*b2*b3*z3 + a3*b1*b2*b3*z3 + a2*a3*b1*b2*b3*z3 + a1*b1*b2^2*b3*z3 + a2*b1*b2^2*b3*z3 + 2*a1*a2*x1*z3 + a2*b1*x1*z3 + a1*a2*b1*x1*z3 + a2*a3*b1*x1*z3 + a2*b1^2*x1*z3 + a2*a3*b1^2*x1*z3 + b2*x1*z3 + 2*a1*b2*x1*z3 + 2*a2*b2*x1*z3 + 2*a1*a2*b2*x1*z3 + a3*b2*x1*z3 + 2*a1*a3*b2*x1*z3 + a2*a3*b2*x1*z3 + 2*b1*b2*x1*z3 + 3*a1*b1*b2*x1*z3 + 4*a2*b1*b2*x1*z3 + 2*a3*b1*b2*x1*z3 + b1^2*b2*x1*z3 + a2*b1^2*b2*x1*z3 + a3*b1^2*b2*x1*z3 + a1*b2^2*x1*z3 + 2*a2*b2^2*x1*z3 + a3*b2^2*x1*z3 + 2*b1*b2^2*x1*z3 + a3*b1*b2^2*x1*z3 + b1^2*b2^2*x1*z3 + a2*a3*b3*x1*z3 + b2*b3*x1*z3 + a2*b2*b3*x1*z3 + 2*a3*b2*b3*x1*z3 + a1*a3*b2*b3*x1*z3 + a2*a3*b2*b3*x1*z3 + 2*b1*b2*b3*x1*z3 + a1*b1*b2*b3*x1*z3 + 3*a3*b1*b2*b3*x1*z3 + b1^2*b2*b3*x1*z3 + a2*b1^2*b2*b3*x1*z3 + a1*b2^2*b3*x1*z3 + 2*a3*b2^2*b3*x1*z3 + a3*b1*b2^2*b3*x1*z3 + (b2*x1*(1 + x1)*z3)/2 + (b1*b2*x1*(1 + x1)*z3)/2 + (b2^2*x1*(1 + x1)*z3)/2 + a1*x2*z3 + b1*x2*z3 + a2*b1*x2*z3 + a1*a3*b1*x2*z3 + a2*a3*b1*x2*z3 + b1^2*x2*z3 + a1*b1^2*x2*z3 + a1*a2*b1^2*x2*z3 + a1*a3*b2*x2*z3 + b1*b2*x2*z3 + a1*b1*b2*x2*z3 + a1*a3*b1*b2*x2*z3 + a2*a3*b1*b2*x2*z3 + b1^2*b2*x2*z3 + a1*a3*b1^2*b2*x2*z3 + a2*b1*b2^2*x2*z3 + a1*b1^2*b2^2*x2*z3 + a1*a2*b3*x2*z3 + b1*b3*x2*z3 + 2*a3*b1*b3*x2*z3 + a2*a3*b1*b3*x2*z3 + a1*b1^2*b3*x2*z3 + a1*a2*b2*b3*x2*z3 + b1*b2*b3*x2*z3 + a1*b1*b2*b3*x2*z3 + a2*b1*b2*b3*x2*z3 + 2*a1*a2*b1*b2*b3*x2*z3 + a1*a2*b2^2*b3*x2*z3 + b1*b2^2*b3*x2*z3 + a1*b1*b2^2*b3*x2*z3 + a2*b1*b2^2*b3*x2*z3 + a3*b1*b2^2*b3*x2*z3 + x1*x2*z3 + a2*x1*x2*z3 + a1*a2*x1*x2*z3 + a3*x1*x2*z3 + a2*a3*x1*x2*z3 + 2*b1*x1*x2*z3 + a1*b1*x1*x2*z3 + 2*a2*b1*x1*x2*z3 + a1*a2*b1*x1*x2*z3 + a3*b1*x1*x2*z3 + b1^2*x1*x2*z3 + a1*b1^2*x1*x2*z3 + a1*a2*b1^2*x1*x2*z3 + 2*b2*x1*x2*z3 + a1*b2*x1*x2*z3 + 2*a2*b2*x1*x2*z3 + a1*a2*b2*x1*x2*z3 + 2*a3*b2*x1*x2*z3 + a1*a3*b2*x1*x2*z3 + a2*a3*b2*x1*x2*z3 + 3*b1*b2*x1*x2*z3 + a2*b1*b2*x1*x2*z3 + a1*a2*b1*b2*x1*x2*z3 + 2*a3*b1*b2*x1*x2*z3 + a2*a3*b1*b2*x1*x2*z3 + a1*b1^2*b2*x1*x2*z3 + a2*b1^2*b2*x1*x2*z3 + a3*b1^2*b2*x1*x2*z3 + b2^2*x1*x2*z3 + a1*b2^2*x1*x2*z3 + a2*b2^2*x1*x2*z3 + a3*b2^2*x1*x2*z3 + a1*a3*b2^2*x1*x2*z3 + 2*b1*b2^2*x1*x2*z3 + a1*b1*b2^2*x1*x2*z3 + b1^2*b2^2*x1*x2*z3 + a3*b1^2*b2^2*x1*x2*z3 + 3*b3*x1*x2*z3 + a1*b3*x1*x2*z3 + 2*a3*b3*x1*x2*z3 + a2*a3*b3*x1*x2*z3 + 3*b1*b3*x1*x2*z3 + 2*a1*b1*b3*x1*x2*z3 + 2*a2*b1*b3*x1*x2*z3 + a1*a2*b1*b3*x1*x2*z3 + a1*b1^2*b3*x1*x2*z3 + 4*b2*b3*x1*x2*z3 + a1*b2*b3*x1*x2*z3 + 3*a2*b2*b3*x1*x2*z3 + a1*a2*b2*b3*x1*x2*z3 + 3*a3*b2*b3*x1*x2*z3 + 4*b1*b2*b3*x1*x2*z3 + 3*a1*b1*b2*b3*x1*x2*z3 + a2*b1*b2*b3*x1*x2*z3 + b1^2*b2*b3*x1*x2*z3 + a2*b1^2*b2*b3*x1*x2*z3 + b2^2*b3*x1*x2*z3 + a2*b2^2*b3*x1*x2*z3 + b3^2*x1*x2*z3 + b2*b3^2*x1*x2*z3 + a1*b2*x3*z3 + a1*a2*b2*x3*z3 + 2*b1*b2*x3*z3 + a1*b1*b2*x3*z3 + a3*b1*b2*x3*z3 + 2*a1*a3*b1*b2*x3*z3 + b1^2*b2*x3*z3 + a1*b2^2*x3*z3 + a1*a3*b2^2*x3*z3 + b1*b2^2*x3*z3 + a1*b1*b2^2*x3*z3 + a1*a2*b3*x3*z3 + a2*a3*b1*b3*x3*z3 + a1*b1*b2*b3*x3*z3 + a3*b1*b2*b3*x3*z3 + a1*b2^2*b3*x3*z3 + a3*b1*b2^2*b3*x3*z3 + 2*a2*x1*x3*z3 + 2*a2*b1*x1*x3*z3 + 2*b2*x1*x3*z3 + 2*a1*b2*x1*x3*z3 + 2*a2*b2*x1*x3*z3 + 2*a3*b2*x1*x3*z3 + a1*a3*b2*x1*x3*z3 + a2*a3*b2*x1*x3*z3 + 5*b1*b2*x1*x3*z3 + a1*b1*b2*x1*x3*z3 + a2*b1*b2*x1*x3*z3 + a3*b1*b2*x1*x3*z3 + a1*b1^2*b2*x1*x3*z3 + a2*b1^2*b2*x1*x3*z3 + a3*b1^2*b2*x1*x3*z3 + b2^2*x1*x3*z3 + 2*a3*b2^2*x1*x3*z3 + 2*b1*b2^2*x1*x3*z3 + a1*b1*b2^2*x1*x3*z3 + a2*b1*b2^2*x1*x3*z3 + 4*b2*b3*x1*x3*z3 + a3*b2*b3*x1*x3*z3 + 3*b1*b2*b3*x1*x3*z3 + a1*b1*b2*b3*x1*x3*z3 + a2*b1*b2*b3*x1*x3*z3 + b1^2*b2*b3*x1*x3*z3 + b2^2*b3*x1*x3*z3 + b1*b2^2*b3*x1*x3*z3 + a1*b1*b2*x2*x3*z3 + a2*b1*b2*x2*x3*z3 + a1*b1^2*b2*x2*x3*z3 + a1*b2^2*x2*x3*z3 + a1*b1*b2^2*x2*x3*z3 + a2*b1*b2^2*x2*x3*z3 + b1*b3*x2*x3*z3 + a1*b1*b3*x2*x3*z3 + a2*b1*b3*x2*x3*z3 + a1*b2*b3*x2*x3*z3 + b1*b2*b3*x2*x3*z3 + a1*b1*b2*b3*x2*x3*z3 + a2*b1*b2*b3*x2*x3*z3 + a1*b2^2*b3*x2*x3*z3 + a2*y1*z3 + a1*a2*y1*z3 + a2*a3*y1*z3 + 2*a2*b1*y1*z3 + a1*a2*b1*y1*z3 + a2*a3*b1*y1*z3 + 2*b2*y1*z3 + 2*a1*b2*y1*z3 + 3*a2*b2*y1*z3 + a1*a2*b2*y1*z3 + 3*a3*b2*y1*z3 + 2*a1*a3*b2*y1*z3 + 2*a2*a3*b2*y1*z3 + 3*b1*b2*y1*z3 + 2*a1*b1*b2*y1*z3 + 4*a2*b1*b2*y1*z3 + 2*a3*b1*b2*y1*z3 + 2*b1^2*b2*y1*z3 + a1*b1^2*b2*y1*z3 + a2*b1^2*b2*y1*z3 + a3*b1^2*b2*y1*z3 + 2*b2^2*y1*z3 + 2*a1*b2^2*y1*z3 + a2*b2^2*y1*z3 + 2*b1*b2^2*y1*z3 + a3*b1*b2^2*y1*z3 + b1^2*b2^2*y1*z3 + a2*b3*y1*z3 + a2*a3*b3*y1*z3 + a2*b1*b3*y1*z3 + a2*b1^2*b3*y1*z3 + b2*b3*y1*z3 + a1*b2*b3*y1*z3 + 3*a2*b2*b3*y1*z3 + a3*b2*b3*y1*z3 + a1*a3*b2*b3*y1*z3 + a2*a3*b2*b3*y1*z3 + 3*b1*b2*b3*y1*z3 + 3*a1*b1*b2*b3*y1*z3 + 2*a2*b1*b2*b3*y1*z3 + 3*a3*b1*b2*b3*y1*z3 + 2*a2*b2^2*b3*y1*z3 + 2*a3*b2^2*b3*y1*z3 + b1*b2^2*b3*y1*z3 + a3*b1*b2^2*b3*y1*z3 + 3*b2*x1*y1*z3 + 2*a1*b2*x1*y1*z3 + 2*a2*b2*x1*y1*z3 + a3*b2*x1*y1*z3 + 2*b1*b2*x1*y1*z3 + a3*b1*b2*x1*y1*z3 + 2*b1^2*b2*x1*y1*z3 + b2^2*x1*y1*z3 + a3*b2^2*x1*y1*z3 + a2*b3*x1*y1*z3 + 2*b2*b3*x1*y1*z3 + a1*b2*b3*x1*y1*z3 + a2*b2*b3*x1*y1*z3 + b1^2*b2*b3*x1*y1*z3 + 2*x2*y1*z3 + a1*x2*y1*z3 + a2*x2*y1*z3 + 2*a1*a2*x2*y1*z3 + a3*x2*y1*z3 + 2*a2*a3*x2*y1*z3 + 3*b1*x2*y1*z3 + 2*a1*b1*x2*y1*z3 + 3*a2*b1*x2*y1*z3 + a1*a2*b1*x2*y1*z3 + a3*b1*x2*y1*z3 + a1*b1^2*x2*y1*z3 + a2*b1^2*x2*y1*z3 + a1*a2*b1^2*x2*y1*z3 + b2*x2*y1*z3 + 2*a1*b2*x2*y1*z3 + 2*a2*b2*x2*y1*z3 + a1*a2*b2*x2*y1*z3 + a3*b2*x2*y1*z3 + a1*a3*b2*x2*y1*z3 + a2*a3*b2*x2*y1*z3 + 4*b1*b2*x2*y1*z3 + a1*a2*b1*b2*x2*y1*z3 + 2*a3*b1*b2*x2*y1*z3 + a2*a3*b1*b2*x2*y1*z3 + 2*b1^2*b2*x2*y1*z3 + a1*b1^2*b2*x2*y1*z3 + 2*a2*b1^2*b2*x2*y1*z3 + a3*b1^2*b2*x2*y1*z3 + b2^2*x2*y1*z3 + a1*b2^2*x2*y1*z3 + a2*b2^2*x2*y1*z3 + 2*a3*b2^2*x2*y1*z3 + a1*a3*b2^2*x2*y1*z3 + b1*b2^2*x2*y1*z3 + a1*b1*b2^2*x2*y1*z3 + a3*b1^2*b2^2*x2*y1*z3 + 3*b3*x2*y1*z3 + a2*b3*x2*y1*z3 + 2*a3*b3*x2*y1*z3 + a2*a3*b3*x2*y1*z3 + b1*b3*x2*y1*z3 + a1*b1*b3*x2*y1*z3 + a1*a2*b1*b3*x2*y1*z3 + b1^2*b3*x2*y1*z3 + a1*b1^2*b3*x2*y1*z3 + a2*b1^2*b3*x2*y1*z3 + 3*b2*b3*x2*y1*z3 + a1*b2*b3*x2*y1*z3 + 3*a2*b2*b3*x2*y1*z3 + a1*a2*b2*b3*x2*y1*z3 + 3*a3*b2*b3*x2*y1*z3 + 3*b1*b2*b3*x2*y1*z3 + 3*a1*b1*b2*b3*x2*y1*z3 + a2*b1*b2*b3*x2*y1*z3 + a2*b1^2*b2*b3*x2*y1*z3 + a2*b2^2*b3*x2*y1*z3 + b3^2*x2*y1*z3 + b2*b3^2*x2*y1*z3 + 2*a2*x3*y1*z3 + a1*a2*x3*y1*z3 + a2*a3*x3*y1*z3 + 2*a2*b1*x3*y1*z3 + 3*a1*b2*x3*y1*z3 + a2*b2*x3*y1*z3 + 2*a3*b2*x3*y1*z3 + a1*a3*b2*x3*y1*z3 + a2*a3*b2*x3*y1*z3 + 5*b1*b2*x3*y1*z3 + a1*b1*b2*x3*y1*z3 + a2*b1*b2*x3*y1*z3 + a3*b1*b2*x3*y1*z3 + 2*b1^2*b2*x3*y1*z3 + a1*b1^2*b2*x3*y1*z3 + a2*b1^2*b2*x3*y1*z3 + a3*b1^2*b2*x3*y1*z3 + a1*b2^2*x3*y1*z3 + a2*b2^2*x3*y1*z3 + a3*b2^2*x3*y1*z3 + 3*b1*b2^2*x3*y1*z3 + a1*b1*b2^2*x3*y1*z3 + a2*b1*b2^2*x3*y1*z3 + b1^2*b2^2*x3*y1*z3 + 3*b2*b3*x3*y1*z3 + a2*b2*b3*x3*y1*z3 + a3*b2*b3*x3*y1*z3 + 2*b1*b2*b3*x3*y1*z3 + a1*b1*b2*b3*x3*y1*z3 + a2*b1*b2*b3*x3*y1*z3 + b2^2*b3*x3*y1*z3 + b1*b2^2*b3*x3*y1*z3 + (b2*y1*(1 + y1)*z3)/2 + (b1*b2*y1*(1 + y1)*z3)/2 + (b2^2*y1*(1 + y1)*z3)/2 + a1*y2*z3 + a2*b1*y2*z3 + a3*b1*y2*z3 + a1*a3*b1*y2*z3 + 2*a2*a3*b1*y2*z3 + b1^2*y2*z3 + a2*b1^2*y2*z3 + a1*a2*b1^2*y2*z3 + a1*b2*y2*z3 + a1*a3*b2*y2*z3 + b1*b2*y2*z3 + 2*a2*b1*b2*y2*z3 + a3*b1*b2*y2*z3 + a1*a3*b1*b2*y2*z3 + a2*a3*b1*b2*y2*z3 + a3*b1^2*b2*y2*z3 + a1*a3*b1^2*b2*y2*z3 + 2*b1*b2^2*y2*z3 + a2*b1*b2^2*y2*z3 + b1^2*b2^2*y2*z3 + a1*b1^2*b2^2*y2*z3 + a1*a2*b3*y2*z3 + b1*b3*y2*z3 + 2*a3*b1*b3*y2*z3 + a2*a3*b1*b3*y2*z3 + b1^2*b3*y2*z3 + a1*b1^2*b3*y2*z3 + a1*b2*b3*y2*z3 + a1*a2*b2*b3*y2*z3 + b1*b2*b3*y2*z3 + a1*b1*b2*b3*y2*z3 + a2*b1*b2*b3*y2*z3 + 2*a1*a2*b1*b2*b3*y2*z3 + a3*b1*b2*b3*y2*z3 + a1*b2^2*b3*y2*z3 + a1*a2*b2^2*b3*y2*z3 + a1*b1*b2^2*b3*y2*z3 + a2*b1*b2^2*b3*y2*z3 + a3*b1*b2^2*b3*y2*z3 + x1*y2*z3 + a1*x1*y2*z3 + a1*a2*x1*y2*z3 + 2*a3*x1*y2*z3 + a2*a3*x1*y2*z3 + a2*b1*x1*y2*z3 + a1*a2*b1*x1*y2*z3 + a3*b1*x1*y2*z3 + b1^2*x1*y2*z3 + a2*b1^2*x1*y2*z3 + a1*a2*b1^2*x1*y2*z3 + a2*b2*x1*y2*z3 + a1*a2*b2*x1*y2*z3 + a1*a3*b2*x1*y2*z3 + a2*a3*b2*x1*y2*z3 + b1*b2*x1*y2*z3 + a1*b1*b2*x1*y2*z3 + a1*a2*b1*b2*x1*y2*z3 + a3*b1*b2*x1*y2*z3 + a2*a3*b1*b2*x1*y2*z3 + a1*b1^2*b2*x1*y2*z3 + a2*b1^2*b2*x1*y2*z3 + a3*b1^2*b2*x1*y2*z3 + b2^2*x1*y2*z3 + a1*b2^2*x1*y2*z3 + a2*b2^2*x1*y2*z3 + 2*a3*b2^2*x1*y2*z3 + a1*a3*b2^2*x1*y2*z3 + b1*b2^2*x1*y2*z3 + a1*b1*b2^2*x1*y2*z3 + b1^2*b2^2*x1*y2*z3 + a3*b1^2*b2^2*x1*y2*z3 + 2*b3*x1*y2*z3 + a1*b3*x1*y2*z3 + a3*b3*x1*y2*z3 + a2*a3*b3*x1*y2*z3 + 2*b1*b3*x1*y2*z3 + a1*b1*b3*x1*y2*z3 + a2*b1*b3*x1*y2*z3 + a1*a2*b1*b3*x1*y2*z3 + b1^2*b3*x1*y2*z3 + a1*b1^2*b3*x1*y2*z3 + 3*b2*b3*x1*y2*z3 + 2*a2*b2*b3*x1*y2*z3 + a1*a2*b2*b3*x1*y2*z3 + 3*a3*b2*b3*x1*y2*z3 + 2*b1*b2*b3*x1*y2*z3 + 3*a1*b1*b2*b3*x1*y2*z3 + a2*b1*b2*b3*x1*y2*z3 + a2*b1^2*b2*b3*x1*y2*z3 + a2*b2^2*b3*x1*y2*z3 + b3^2*x1*y2*z3 + b2*b3^2*x1*y2*z3 + a1*x2*y2*z3 + b1*x2*y2*z3 + a1*b1*x2*y2*z3 + a2*b1*x2*y2*z3 + b1^2*x2*y2*z3 + a1*b2*x2*y2*z3 + 3*b1*b2*x2*y2*z3 + 2*a2*b1*b2*x2*y2*z3 + b1^2*b2*x2*y2*z3 + 2*b1*b2^2*x2*y2*z3 + a1*b3*x2*y2*z3 + 2*b1*b3*x2*y2*z3 + a1*b1*b3*x2*y2*z3 + a2*b1*b3*x2*y2*z3 + b1^2*b3*x2*y2*z3 + 2*a1*b2*b3*x2*y2*z3 + 2*b1*b2*b3*x2*y2*z3 + 2*b1*x3*y2*z3 + 2*a2*b1*x3*y2*z3 + a1*b1*b2*x3*y2*z3 + a2*b1*b2*x3*y2*z3 + b1^2*b2*x3*y2*z3 + a1*b1^2*b2*x3*y2*z3 + a1*b2^2*x3*y2*z3 + a1*b1*b2^2*x3*y2*z3 + a2*b1*b2^2*x3*y2*z3 + b1*b3*x3*y2*z3 + a1*b1*b3*x3*y2*z3 + a2*b1*b3*x3*y2*z3 + a1*b2*b3*x3*y2*z3 + b1*b2*b3*x3*y2*z3 + a1*b1*b2*b3*x3*y2*z3 + a2*b1*b2*b3*x3*y2*z3 + a1*b2^2*b3*x3*y2*z3 + y1*y2*z3 + 2*a1*a2*y1*y2*z3 + 2*a3*y1*y2*z3 + 2*a2*a3*y1*y2*z3 + b1*y1*y2*z3 + a1*b1*y1*y2*z3 + 2*a2*b1*y1*y2*z3 + a1*a2*b1*y1*y2*z3 + a3*b1*y1*y2*z3 + b1^2*y1*y2*z3 + a1*a2*b1^2*y1*y2*z3 + 3*b2*y1*y2*z3 + 2*a1*b2*y1*y2*z3 + 2*a2*b2*y1*y2*z3 + a1*a2*b2*y1*y2*z3 + 2*a3*b2*y1*y2*z3 + a1*a3*b2*y1*y2*z3 + a2*a3*b2*y1*y2*z3 + 3*b1*b2*y1*y2*z3 + a1*b1*b2*y1*y2*z3 + a2*b1*b2*y1*y2*z3 + a1*a2*b1*b2*y1*y2*z3 + a3*b1*b2*y1*y2*z3 + a2*a3*b1*b2*y1*y2*z3 + b1^2*b2*y1*y2*z3 + a1*b1^2*b2*y1*y2*z3 + 2*a2*b1^2*b2*y1*y2*z3 + a3*b1^2*b2*y1*y2*z3 + b2^2*y1*y2*z3 + a1*b2^2*y1*y2*z3 + a2*b2^2*y1*y2*z3 + a3*b2^2*y1*y2*z3 + a1*a3*b2^2*y1*y2*z3 + 2*b1*b2^2*y1*y2*z3 + a1*b1*b2^2*y1*y2*z3 + a3*b1^2*b2^2*y1*y2*z3 + 2*b3*y1*y2*z3 + a2*b3*y1*y2*z3 + a3*b3*y1*y2*z3 + a2*a3*b3*y1*y2*z3 + 3*b1*b3*y1*y2*z3 + 2*a1*b1*b3*y1*y2*z3 + a2*b1*b3*y1*y2*z3 + a1*a2*b1*b3*y1*y2*z3 + b1^2*b3*y1*y2*z3 + a1*b1^2*b3*y1*y2*z3 + a2*b1^2*b3*y1*y2*z3 + b2*b3*y1*y2*z3 + 2*a1*b2*b3*y1*y2*z3 + 4*a2*b2*b3*y1*y2*z3 + a1*a2*b2*b3*y1*y2*z3 + 3*a3*b2*b3*y1*y2*z3 + 3*b1*b2*b3*y1*y2*z3 + 3*a1*b1*b2*b3*y1*y2*z3 + a2*b1*b2*b3*y1*y2*z3 + b1^2*b2*b3*y1*y2*z3 + a2*b1^2*b2*b3*y1*y2*z3 + a2*b2^2*b3*y1*y2*z3 + b3^2*y1*y2*z3 + b2*b3^2*y1*y2*z3 + a2*a3*b1*y3*z3 + a1*a2*b2*y3*z3 + 2*a1*b1*b2*y3*z3 + 2*a1*a3*b1*b2*y3*z3 + b1^2*b2*y3*z3 + a3*b1^2*b2*y3*z3 + a1*a3*b2^2*y3*z3 + b1*b2^2*y3*z3 + a1*b1*b2^2*y3*z3 + a1*a2*b3*y3*z3 + a2*a3*b1*b3*y3*z3 + a1*b1*b2*b3*y3*z3 + a3*b1*b2^2*b3*y3*z3 + 2*a2*b2*x1*y3*z3 + a1*a3*b2*x1*y3*z3 + a2*a3*b2*x1*y3*z3 + 2*a2*b1*b2*x1*y3*z3 + a1*b1^2*b2*x1*y3*z3 + a2*b1^2*b2*x1*y3*z3 + a3*b1^2*b2*x1*y3*z3 + b2^2*x1*y3*z3 + a1*b2^2*x1*y3*z3 + a2*b2^2*x1*y3*z3 + a3*b2^2*x1*y3*z3 + 2*b1*b2^2*x1*y3*z3 + a1*b1*b2^2*x1*y3*z3 + a2*b1*b2^2*x1*y3*z3 + b1^2*b2^2*x1*y3*z3 + 2*b2*b3*x1*y3*z3 + a3*b2*b3*x1*y3*z3 + 2*b1*b2*b3*x1*y3*z3 + a1*b1*b2*b3*x1*y3*z3 + a2*b1*b2*b3*x1*y3*z3 + b2^2*b3*x1*y3*z3 + a1*x2*y3*z3 + 2*a1*b1*x2*y3*z3 + a1*b1^2*x2*y3*z3 + 2*a1*b2*x2*y3*z3 + 3*a1*b1*b2*x2*y3*z3 + a2*b1*b2*x2*y3*z3 + a1*b1^2*b2*x2*y3*z3 + a1*b2^2*x2*y3*z3 + a1*b1*b2^2*x2*y3*z3 + a2*b1*b2^2*x2*y3*z3 + a1*b3*x2*y3*z3 + b1*b3*x2*y3*z3 + 2*a1*b1*b3*x2*y3*z3 + a2*b1*b3*x2*y3*z3 + a1*b1^2*b3*x2*y3*z3 + a1*b2*b3*x2*y3*z3 + 2*b1*b2*b3*x2*y3*z3 + a1*b1*b2*b3*x2*y3*z3 + a2*b1*b2*b3*x2*y3*z3 + b1*b2^2*b3*x2*y3*z3 + 2*a2*b1*x3*y3*z3 + b1^2*b2*x3*y3*z3 + 2*b1*b2*b3*x3*y3*z3 + a1*a2*y1*y3*z3 + a2*a3*y1*y3*z3 + 2*b2*y1*y3*z3 + 2*a1*b2*y1*y3*z3 + 2*a2*b2*y1*y3*z3 + 3*a3*b2*y1*y3*z3 + a1*a3*b2*y1*y3*z3 + a2*a3*b2*y1*y3*z3 + b1*b2*y1*y3*z3 + 2*a2*b1*b2*y1*y3*z3 + b1^2*b2*y1*y3*z3 + a1*b1^2*b2*y1*y3*z3 + a2*b1^2*b2*y1*y3*z3 + a3*b1^2*b2*y1*y3*z3 + b2^2*y1*y3*z3 + 2*a1*b2^2*y1*y3*z3 + 2*a2*b2^2*y1*y3*z3 + 3*b1*b2^2*y1*y3*z3 + a1*b1*b2^2*y1*y3*z3 + a2*b1*b2^2*y1*y3*z3 + b2*b3*y1*y3*z3 + a2*b2*b3*y1*y3*z3 + a3*b2*b3*y1*y3*z3 + 3*b1*b2*b3*y1*y3*z3 + a1*b1*b2*b3*y1*y3*z3 + a2*b1*b2*b3*y1*y3*z3 + b1^2*b2*b3*y1*y3*z3 + b2^2*b3*y1*y3*z3 + a1*y2*y3*z3 + 2*b1*y2*y3*z3 + 2*a1*b1*y2*y3*z3 + 2*a2*b1*y2*y3*z3 + b1^2*y2*y3*z3 + a1*b1^2*y2*y3*z3 + 2*a1*b2*y2*y3*z3 + 2*b1*b2*y2*y3*z3 + 3*a1*b1*b2*y2*y3*z3 + a2*b1*b2*y2*y3*z3 + b1^2*b2*y2*y3*z3 + a1*b1^2*b2*y2*y3*z3 + a1*b2^2*y2*y3*z3 + a1*b1*b2^2*y2*y3*z3 + a2*b1*b2^2*y2*y3*z3 + a1*b3*y2*y3*z3 + 2*b1*b3*y2*y3*z3 + 2*a1*b1*b3*y2*y3*z3 + a2*b1*b3*y2*y3*z3 + b1^2*b3*y2*y3*z3 + a1*b1^2*b3*y2*y3*z3 + a1*b2*b3*y2*y3*z3 + 2*b1*b2*b3*y2*y3*z3 + a1*b1*b2*b3*y2*y3*z3 + a2*b1*b2*b3*y2*y3*z3 + b1*b2^2*b3*y2*y3*z3 + a1*a2*z1*z3 + a1*a2*b1*z1*z3 + a2*b1^2*z1*z3 + a2*a3*b1^2*z1*z3 + 2*a1*b2*z1*z3 + a2*b2*z1*z3 + 2*a1*a2*b2*z1*z3 + 2*a1*a3*b2*z1*z3 + 2*a2*a3*b2*z1*z3 + 3*a1*b1*b2*z1*z3 + 5*a2*b1*b2*z1*z3 + 3*a3*b1*b2*z1*z3 + b1^2*b2*z1*z3 + a2*b1^2*b2*z1*z3 + a3*b1^2*b2*z1*z3 + a1*b2^2*z1*z3 + 2*a2*b2^2*z1*z3 + a3*b2^2*z1*z3 + a2*a3*b2^2*z1*z3 + b1*b2^2*z1*z3 + a3*b1*b2^2*z1*z3 + b1^2*b2^2*z1*z3 + a2*b2*b3*z1*z3 + a1*a3*b2*b3*z1*z3 + 2*a2*a3*b2*b3*z1*z3 + 3*b1*b2*b3*z1*z3 + a1*b1*b2*b3*z1*z3 + a2*b1*b2*b3*z1*z3 + 3*a3*b1*b2*b3*z1*z3 + b1^2*b2*b3*z1*z3 + a2*b1^2*b2*b3*z1*z3 + a1*b2^2*b3*z1*z3 + 2*a3*b2^2*b3*z1*z3 + a3*b1*b2^2*b3*z1*z3 + 2*b2*x1*z1*z3 + a1*b2*x1*z1*z3 + 2*a3*b2*x1*z1*z3 + a1*a3*b2*x1*z1*z3 + a2*a3*b2*x1*z1*z3 + 2*a1*b1*b2*x1*z1*z3 + 2*a2*b1*b2*x1*z1*z3 + a3*b1*b2*x1*z1*z3 + b1^2*b2*x1*z1*z3 + a3*b1*b2^2*x1*z1*z3 + a2*b3*x1*z1*z3 + a2*b1*b3*x1*z1*z3 + 2*b2*b3*x1*z1*z3 + a1*b2*b3*x1*z1*z3 + a2*b2*b3*x1*z1*z3 + b1*b2*b3*x1*z1*z3 + a1*b1*b2*b3*x1*z1*z3 + a2*b1*b2*b3*x1*z1*z3 + x2*z1*z3 + a1*x2*z1*z3 + a2*x2*z1*z3 + 2*a3*x2*z1*z3 + a2*a3*x2*z1*z3 + 3*b1*x2*z1*z3 + 2*a1*b1*x2*z1*z3 + 2*a2*b1*x2*z1*z3 + a1*a2*b1*x2*z1*z3 + a3*b1*x2*z1*z3 + b1^2*x2*z1*z3 + a1*a2*b1^2*x2*z1*z3 + b2*x2*z1*z3 + a1*b2*x2*z1*z3 + 2*a2*b2*x2*z1*z3 + 2*a1*a2*b2*x2*z1*z3 + 2*a3*b2*x2*z1*z3 + a1*a3*b2*x2*z1*z3 + 2*a2*a3*b2*x2*z1*z3 + 3*b1*b2*x2*z1*z3 + 2*a1*b1*b2*x2*z1*z3 + 2*a2*b1*b2*x2*z1*z3 + a1*a2*b1*b2*x2*z1*z3 + 3*a3*b1*b2*x2*z1*z3 + a2*a3*b1*b2*x2*z1*z3 + 2*a1*b1^2*b2*x2*z1*z3 + a2*b1^2*b2*x2*z1*z3 + a3*b1^2*b2*x2*z1*z3 + a2*b2^2*x2*z1*z3 + a3*b2^2*x2*z1*z3 + a1*a3*b2^2*x2*z1*z3 + b1*b2^2*x2*z1*z3 + a1*b1*b2^2*x2*z1*z3 + a3*b1*b2^2*x2*z1*z3 + b1^2*b2^2*x2*z1*z3 + a3*b1^2*b2^2*x2*z1*z3 + 2*b3*x2*z1*z3 + a1*b3*x2*z1*z3 + a2*b3*x2*z1*z3 + 2*a3*b3*x2*z1*z3 + a2*a3*b3*x2*z1*z3 + b1*b3*x2*z1*z3 + 2*a1*b1*b3*x2*z1*z3 + 2*a2*b1*b3*x2*z1*z3 + a1*a2*b1*b3*x2*z1*z3 + b1^2*b3*x2*z1*z3 + a1*b1^2*b3*x2*z1*z3 + 3*b2*b3*x2*z1*z3 + a1*b2*b3*x2*z1*z3 + 2*a2*b2*b3*x2*z1*z3 + a1*a2*b2*b3*x2*z1*z3 + 3*a3*b2*b3*x2*z1*z3 + 4*b1*b2*b3*x2*z1*z3 + 3*a1*b1*b2*b3*x2*z1*z3 + 2*a2*b1*b2*b3*x2*z1*z3 + b1^2*b2*b3*x2*z1*z3 + a2*b1^2*b2*b3*x2*z1*z3 + b2^2*b3*x2*z1*z3 + a2*b2^2*b3*x2*z1*z3 + b3^2*x2*z1*z3 + b2*b3^2*x2*z1*z3 + 2*a2*b1*x3*z1*z3 + 2*b2*x3*z1*z3 + a1*b2*x3*z1*z3 + a2*b2*x3*z1*z3 + a3*b2*x3*z1*z3 + a1*a3*b2*x3*z1*z3 + 2*a2*a3*b2*x3*z1*z3 + 5*b1*b2*x3*z1*z3 + 2*a1*b1*b2*x3*z1*z3 + 2*a2*b1*b2*x3*z1*z3 + 2*a3*b1*b2*x3*z1*z3 + a1*b1^2*b2*x3*z1*z3 + a2*b1^2*b2*x3*z1*z3 + a3*b1^2*b2*x3*z1*z3 + b2^2*x3*z1*z3 + 2*a3*b2^2*x3*z1*z3 + a2*a3*b2^2*x3*z1*z3 + 2*b1*b2^2*x3*z1*z3 + a1*b1*b2^2*x3*z1*z3 + a2*b1*b2^2*x3*z1*z3 + a2*a3*b3*x3*z1*z3 + 3*b2*b3*x3*z1*z3 + a3*b2*b3*x3*z1*z3 + a2*a3*b2*b3*x3*z1*z3 + 2*b1*b2*b3*x3*z1*z3 + a1*b1*b2*b3*x3*z1*z3 + a2*b1*b2*b3*x3*z1*z3 + b1^2*b2*b3*x3*z1*z3 + b2^2*b3*x3*z1*z3 + b1*b2^2*b3*x3*z1*z3 + 3*b2*y1*z1*z3 + 2*a1*b2*y1*z1*z3 + 2*a2*b2*y1*z1*z3 + 2*a3*b2*y1*z1*z3 + a1*a3*b2*y1*z1*z3 + a2*a3*b2*y1*z1*z3 + 4*b1*b2*y1*z1*z3 + 2*a1*b1*b2*y1*z1*z3 + 2*a2*b1*b2*y1*z1*z3 + 2*a3*b1*b2*y1*z1*z3 + b1^2*b2*y1*z1*z3 + a3*b2^2*y1*z1*z3 + a3*b1*b2^2*y1*z1*z3 + a2*b3*y1*z1*z3 + a2*b1*b3*y1*z1*z3 + 3*b2*b3*y1*z1*z3 + 3*b1*b2*b3*y1*z1*z3 + a1*b1*b2*b3*y1*z1*z3 + a2*b1*b2*b3*y1*z1*z3 + b1^2*b2*b3*y1*z1*z3 + y2*z1*z3 + a1*y2*z1*z3 + a2*y2*z1*z3 + a3*y2*z1*z3 + a2*a3*y2*z1*z3 + 2*b1*y2*z1*z3 + a1*b1*y2*z1*z3 + a2*b1*y2*z1*z3 + a1*a2*b1*y2*z1*z3 + a3*b1*y2*z1*z3 + a1*b1^2*y2*z1*z3 + a2*b1^2*y2*z1*z3 + a1*a2*b1^2*y2*z1*z3 + 2*b2*y2*z1*z3 + a1*b2*y2*z1*z3 + 2*a1*a2*b2*y2*z1*z3 + a3*b2*y2*z1*z3 + a1*a3*b2*y2*z1*z3 + a2*a3*b2*y2*z1*z3 + 3*a1*b1*b2*y2*z1*z3 + a2*b1*b2*y2*z1*z3 + a1*a2*b1*b2*y2*z1*z3 + 2*a3*b1*b2*y2*z1*z3 + a2*a3*b1*b2*y2*z1*z3 + b1^2*b2*y2*z1*z3 + 2*a1*b1^2*b2*y2*z1*z3 + a2*b1^2*b2*y2*z1*z3 + a3*b1^2*b2*y2*z1*z3 + a3*b2^2*y2*z1*z3 + a1*a3*b2^2*y2*z1*z3 + 2*b1*b2^2*y2*z1*z3 + a1*b1*b2^2*y2*z1*z3 + a3*b1*b2^2*y2*z1*z3 + b1^2*b2^2*y2*z1*z3 + a3*b1^2*b2^2*y2*z1*z3 + 2*b3*y2*z1*z3 + a1*b3*y2*z1*z3 + a2*b3*y2*z1*z3 + a3*b3*y2*z1*z3 + 2*b1*b3*y2*z1*z3 + a1*b1*b3*y2*z1*z3 + a2*b1*b3*y2*z1*z3 + a1*a2*b1*b3*y2*z1*z3 + a1*b1^2*b3*y2*z1*z3 + b2*b3*y2*z1*z3 + 3*a2*b2*b3*y2*z1*z3 + a1*a2*b2*b3*y2*z1*z3 + 2*a3*b2*b3*y2*z1*z3 + 3*b1*b2*b3*y2*z1*z3 + 3*a1*b1*b2*b3*y2*z1*z3 + 2*a2*b1*b2*b3*y2*z1*z3 + a2*b1^2*b2*b3*y2*z1*z3 + b2^2*b3*y2*z1*z3 + b3^2*y2*z1*z3 + b2*b3^2*y2*z1*z3 + a1*a3*b2*y3*z1*z3 + a2*a3*b2*y3*z1*z3 + a1*b1*b2*y3*z1*z3 + 3*a2*b1*b2*y3*z1*z3 + a3*b1*b2*y3*z1*z3 + a1*b1^2*b2*y3*z1*z3 + a2*b1^2*b2*y3*z1*z3 + a3*b1^2*b2*y3*z1*z3 + a1*b2^2*y3*z1*z3 + 2*a2*b2^2*y3*z1*z3 + a2*a3*b2^2*y3*z1*z3 + 3*b1*b2^2*y3*z1*z3 + a1*b1*b2^2*y3*z1*z3 + a2*b1*b2^2*y3*z1*z3 + b1^2*b2^2*y3*z1*z3 + a2*a3*b2*b3*y3*z1*z3 + 2*b1*b2*b3*y3*z1*z3 + a1*b1*b2*b3*y3*z1*z3 + a2*b1*b2*b3*y3*z1*z3 + a2*b2^2*b3*y3*z1*z3 + (b1*b2*z1*(1 + z1)*z3)/2 + (b2^2*z1*(1 + z1)*z3)/2 + a1*a2*b1*z2*z3 + a1*b1^2*z2*z3 + a1*a2*b1^2*z2*z3 + a3*b1^2*z2*z3 + a1*a3*b1^2*z2*z3 + a2*a3*b1^2*z2*z3 + 2*a1*b1*b2*z2*z3 + a2*b1*b2*z2*z3 + a1*a3*b1*b2*z2*z3 + 2*b1^2*b2*z2*z3 + a1*b1^2*b2*z2*z3 + 2*a2*b1^2*b2*z2*z3 + a3*b1^2*b2*z2*z3 + a1*a3*b1^2*b2*z2*z3 + b1*b2^2*z2*z3 + a3*b1*b2^2*z2*z3 + a1*b1^2*b2^2*z2*z3 + a1*b1*b3*z2*z3 + a3*b1*b3*z2*z3 + b1^2*b3*z2*z3 + a1*b1^2*b3*z2*z3 + a1*a2*b2*b3*z2*z3 + a2*b1*b2*b3*z2*z3 + 2*a1*a2*b1*b2*b3*z2*z3 + b1^2*b2*b3*z2*z3 + a1*a2*b2^2*b3*z2*z3 + b1*b2^2*b3*z2*z3 + a2*b1*b2^2*b3*z2*z3 + a3*b1*b2^2*b3*z2*z3 + a1*x1*z2*z3 + a1*a2*x1*z2*z3 + a2*a3*x1*z2*z3 + 2*b1*x1*z2*z3 + 2*a1*b1*x1*z2*z3 + a2*b1*x1*z2*z3 + a1*a2*b1*x1*z2*z3 + 2*b1^2*x1*z2*z3 + a1*b1^2*x1*z2*z3 + a1*a2*b1^2*x1*z2*z3 + b2*x1*z2*z3 + 2*a1*b2*x1*z2*z3 + a2*b2*x1*z2*z3 + a1*a2*b2*x1*z2*z3 + a3*b2*x1*z2*z3 + 2*a2*a3*b2*x1*z2*z3 + 4*b1*b2*x1*z2*z3 + a2*b1*b2*x1*z2*z3 + a1*a2*b1*b2*x1*z2*z3 + 2*a3*b1*b2*x1*z2*z3 + a2*a3*b1*b2*x1*z2*z3 + b1^2*b2*x1*z2*z3 + a1*b1^2*b2*x1*z2*z3 + a2*b1^2*b2*x1*z2*z3 + 2*b2^2*x1*z2*z3 + a1*b2^2*x1*z2*z3 + a2*b2^2*x1*z2*z3 + a3*b2^2*x1*z2*z3 + a1*a3*b2^2*x1*z2*z3 + 2*b1*b2^2*x1*z2*z3 + a1*b1*b2^2*x1*z2*z3 + b1^2*b2^2*x1*z2*z3 + a3*b1^2*b2^2*x1*z2*z3 + b3*x1*z2*z3 + a2*b3*x1*z2*z3 + a2*a3*b3*x1*z2*z3 + 2*b1*b3*x1*z2*z3 + 2*a1*b1*b3*x1*z2*z3 + 2*a2*b1*b3*x1*z2*z3 + a1*a2*b1*b3*x1*z2*z3 + a1*b1^2*b3*x1*z2*z3 + 2*b2*b3*x1*z2*z3 + 2*a2*b2*b3*x1*z2*z3 + a1*a2*b2*b3*x1*z2*z3 + 3*a3*b2*b3*x1*z2*z3 + 3*b1*b2*b3*x1*z2*z3 + 3*a1*b1*b2*b3*x1*z2*z3 + a2*b1*b2*b3*x1*z2*z3 + a2*b1^2*b2*b3*x1*z2*z3 + a2*b2^2*b3*x1*z2*z3 + b2*b3^2*x1*z2*z3 + a1*x2*z2*z3 + b1*x2*z2*z3 + a1*b1*x2*z2*z3 + a2*b1*x2*z2*z3 + a2*b1^2*x2*z2*z3 + a1*b2*x2*z2*z3 + a1*b1*b2*x2*z2*z3 + a2*b1*b2*x2*z2*z3 + b1^2*b2*x2*z2*z3 + a2*b1^2*b2*x2*z2*z3 + b1*b2^2*x2*z2*z3 + b1^2*b2^2*x2*z2*z3 + a1*a2*b3*x2*z2*z3 + 2*b1*b3*x2*z2*z3 + a1*b1*b3*x2*z2*z3 + a2*b1*b3*x2*z2*z3 + b1^2*b3*x2*z2*z3 + a1*b2*b3*x2*z2*z3 + b1*b2*b3*x2*z2*z3 + a1*b1*b2*b3*x2*z2*z3 + b1^2*b2*b3*x2*z2*z3 + b1^2*x3*z2*z3 + a1*b1^2*x3*z2*z3 + a2*b1^2*x3*z2*z3 + b1*b2*x3*z2*z3 + a1*b1*b2*x3*z2*z3 + a2*b1*b2*x3*z2*z3 + b1^2*b2*x3*z2*z3 + a1*b1^2*b2*x3*z2*z3 + b1*b2^2*x3*z2*z3 + a1*b1*b2^2*x3*z2*z3 + a2*b1*b2^2*x3*z2*z3 + b1*b2*b3*x3*z2*z3 + a1*b1*b2*b3*x3*z2*z3 + a2*b1*b2*b3*x3*z2*z3 + a1*b2^2*b3*x3*z2*z3 + 2*y1*z2*z3 + a1*y1*z2*z3 + a2*y1*z2*z3 + a1*a2*y1*z2*z3 + a3*y1*z2*z3 + a2*a3*y1*z2*z3 + b1*y1*z2*z3 + a1*b1*y1*z2*z3 + a1*a2*b1*y1*z2*z3 + 2*b1^2*y1*z2*z3 + a1*b1^2*y1*z2*z3 + a2*b1^2*y1*z2*z3 + a1*a2*b1^2*y1*z2*z3 + 3*b2*y1*z2*z3 + 2*a1*b2*y1*z2*z3 + 2*a2*b2*y1*z2*z3 + a1*a2*b2*y1*z2*z3 + 2*a3*b2*y1*z2*z3 + 2*a2*a3*b2*y1*z2*z3 + 3*b1*b2*y1*z2*z3 + a1*a2*b1*b2*y1*z2*z3 + 2*a3*b1*b2*y1*z2*z3 + a2*a3*b1*b2*y1*z2*z3 + 2*b1^2*b2*y1*z2*z3 + a1*b1^2*b2*y1*z2*z3 + 2*a2*b1^2*b2*y1*z2*z3 + 2*b2^2*y1*z2*z3 + a1*b2^2*y1*z2*z3 + a2*b2^2*y1*z2*z3 + 2*a3*b2^2*y1*z2*z3 + a1*a3*b2^2*y1*z2*z3 + b1*b2^2*y1*z2*z3 + a1*b1*b2^2*y1*z2*z3 + a3*b1^2*b2^2*y1*z2*z3 + b3*y1*z2*z3 + a2*b3*y1*z2*z3 + a2*a3*b3*y1*z2*z3 + a1*b1*b3*y1*z2*z3 + a1*a2*b1*b3*y1*z2*z3 + b1^2*b3*y1*z2*z3 + a1*b1^2*b3*y1*z2*z3 + a2*b1^2*b3*y1*z2*z3 + b2*b3*y1*z2*z3 + 2*a1*b2*b3*y1*z2*z3 + 3*a2*b2*b3*y1*z2*z3 + a1*a2*b2*b3*y1*z2*z3 + 3*a3*b2*b3*y1*z2*z3 + 3*b1*b2*b3*y1*z2*z3 + 3*a1*b1*b2*b3*y1*z2*z3 + a2*b1*b2*b3*y1*z2*z3 + b1^2*b2*b3*y1*z2*z3 + a2*b1^2*b2*b3*y1*z2*z3 + b2^2*b3*y1*z2*z3 + a2*b2^2*b3*y1*z2*z3 + b2*b3^2*y1*z2*z3 + a2*b1^2*y2*z2*z3 + b1*b2*y2*z2*z3 + a1*b1*b2*y2*z2*z3 + a2*b1*b2*y2*z2*z3 + b1^2*b2*y2*z2*z3 + a2*b1^2*b2*y2*z2*z3 + b1*b2^2*y2*z2*z3 + b1^2*b2^2*y2*z2*z3 + a1*a2*b3*y2*z2*z3 + a1*b2*b3*y2*z2*z3 + a1*b1*b2*b3*y2*z2*z3 + b1^2*b2*b3*y2*z2*z3 + a2*b1^2*y3*z2*z3 + b1*b2*y3*z2*z3 + a1*b1*b2*y3*z2*z3 + a2*b1*b2*y3*z2*z3 + 2*b1^2*b2*y3*z2*z3 + a1*b1^2*b2*y3*z2*z3 + b1*b2^2*y3*z2*z3 + a1*b1*b2^2*y3*z2*z3 + a2*b1*b2^2*y3*z2*z3 + a1*b1*b3*y3*z2*z3 + a1*b1^2*b3*y3*z2*z3 + b1*b2*b3*y3*z2*z3 + a1*b1*b2*b3*y3*z2*z3 + a2*b1*b2*b3*y3*z2*z3 + b1^2*b2*b3*y3*z2*z3 + a2*a3*z1*z2*z3 + a1*b1*z1*z2*z3 + a2*b1*z1*z2*z3 + a1*a2*b1*z1*z2*z3 + 2*b1^2*z1*z2*z3 + a1*b1^2*z1*z2*z3 + a2*b1^2*z1*z2*z3 + a1*a2*b1^2*z1*z2*z3 + b2*z1*z2*z3 + 2*a1*b2*z1*z2*z3 + a2*b2*z1*z2*z3 + 2*a1*a2*b2*z1*z2*z3 + a3*b2*z1*z2*z3 + a2*a3*b2*z1*z2*z3 + 2*b1*b2*z1*z2*z3 + 3*a1*b1*b2*z1*z2*z3 + a2*b1*b2*z1*z2*z3 + a1*a2*b1*b2*z1*z2*z3 + 2*a3*b1*b2*z1*z2*z3 + a2*a3*b1*b2*z1*z2*z3 + 3*b1^2*b2*z1*z2*z3 + 2*a1*b1^2*b2*z1*z2*z3 + a2*b1^2*b2*z1*z2*z3 + b2^2*z1*z2*z3 + a2*b2^2*z1*z2*z3 + a3*b2^2*z1*z2*z3 + a1*a3*b2^2*z1*z2*z3 + 2*b1*b2^2*z1*z2*z3 + a1*b1*b2^2*z1*z2*z3 + a3*b1*b2^2*z1*z2*z3 + b1^2*b2^2*z1*z2*z3 + a3*b1^2*b2^2*z1*z2*z3 + a2*a3*b3*z1*z2*z3 + b1*b3*z1*z2*z3 + 2*a1*b1*b3*z1*z2*z3 + 2*a2*b1*b3*z1*z2*z3 + a1*a2*b1*b3*z1*z2*z3 + b1^2*b3*z1*z2*z3 + a1*b1^2*b3*z1*z2*z3 + 2*b2*b3*z1*z2*z3 + 3*a2*b2*b3*z1*z2*z3 + a1*a2*b2*b3*z1*z2*z3 + 3*a3*b2*b3*z1*z2*z3 + 5*b1*b2*b3*z1*z2*z3 + 3*a1*b1*b2*b3*z1*z2*z3 + 2*a2*b1*b2*b3*z1*z2*z3 + a2*b1^2*b2*b3*z1*z2*z3 + a2*b2^2*b3*z1*z2*z3 + b2*b3^2*z1*z2*z3 + (a2*b1*z3*(1 + z3))/2 + (a1*a2*b1*z3*(1 + z3))/2 + (a2*b1^2*z3*(1 + z3))/2 + (a1*b2*z3*(1 + z3))/2 + (a1*a2*b2*z3*(1 + z3))/2 + 2*b1*b2*z3*(1 + z3) + a1*b1*b2*z3*(1 + z3) + a2*b1*b2*z3*(1 + z3) + (b1^2*b2*z3*(1 + z3))/2 + (b1*b2^2*z3*(1 + z3))/2 + (b1^2*b2^2*z3*(1 + z3))/2 + (a1*a2*b3*z3*(1 + z3))/2 + (a2*b1*b3*z3*(1 + z3))/2 + b1*b2*b3*z3*(1 + z3) + (a1*b1*b2*b3*z3*(1 + z3))/2 + (a2*b1*b2*b3*z3*(1 + z3))/2 + (a3*b1*b2*b3*z3*(1 + z3))/2 + (b1^2*b2*x1*z3*(1 + z3))/2 + (b2*b3*x1*z3*(1 + z3))/2 + (b1*b2*b3*x1*z3*(1 + z3))/2 + (b2^2*b3*x1*z3*(1 + z3))/2 + (a1*a2*x2*z3*(1 + z3))/2 + (a1*a3*x2*z3*(1 + z3))/2 + (b1*x2*z3*(1 + z3))/2 + (b1*b2*x2*z3*(1 + z3))/2 + (a1*b1*b2*x2*z3*(1 + z3))/2 + (b1*b2*y1*z3*(1 + z3))/2 + (b1^2*b2*y1*z3*(1 + z3))/2 + (b1*b2*b3*y1*z3*(1 + z3))/2 + (b2^2*b3*y1*z3*(1 + z3))/2 + (a1*y2*z3*(1 + z3))/2 + (a1*a2*y2*z3*(1 + z3))/2 + (a1*a3*y2*z3*(1 + z3))/2 + (b1*y2*z3*(1 + z3))/2 + (a1*b1*b2*y2*z3*(1 + z3))/2 + (a2*a3*b2*z1*z3*(1 + z3))/2 + (b1*b2*z1*z3*(1 + z3))/2 + (b1^2*b2*z1*z3*(1 + z3))/2 + (b2^2*z1*z3*(1 + z3))/2 + (a2*b2^2*z1*z3*(1 + z3))/2 + (a3*b2^2*z1*z3*(1 + z3))/2 + (a2*a3*b3*z1*z3*(1 + z3))/2 + (a3*b2*b3*z1*z3*(1 + z3))/2 + (b1*b2*b3*z1*z3*(1 + z3))/2 + (a2*b2^2*b3*z1*z3*(1 + z3))/2 + (a1*a2*z2*z3*(1 + z3))/2 + (a1*a3*z2*z3*(1 + z3))/2 + (b1*z2*z3*(1 + z3))/2 + (a1*b1*z2*z3*(1 + z3))/2 + (a2*b1*z2*z3*(1 + z3))/2 + (a3*b1*z2*z3*(1 + z3))/2 + (a1*b1*b2*z2*z3*(1 + z3))/2;
end;
#####################################################################
#####################################################################
#Space Group No. 83 ( P4/m)
#####################################################################
Aiin83:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Aqin83:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Axyin83:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Azin83:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain83:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b1*b2 + a2*b1*b2 + c1*c2;
end;
#####################################################################
Bxyin83:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return (1 - b1)*x2*y1 + b1*(x2 + y1)*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 84 ( P4_2/m)
#####################################################################
Aiin84:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Aqin84:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Axyin84:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Bdeltain84:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b1*b2 + a2*b1*b2 + c1*c2;
end;
#####################################################################
Bczin84:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + b1*b2*c1 + a1*c2 + b1*c2 + b1*b2*c2 + b2*z1;
end;
#####################################################################
Bxyin84:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + b1*x2*y1 + b1*x2*y2 + b1*y1*y2;
end;
#####################################################################
Bzxyin84:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*x1 + b1*c2*x1 + b2*c2*x1 + a2*y1 + c2*y1 + b1*c2*y1 + b2*c2*y1 + x1*z2 + y1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 85 ( P4/n)
#####################################################################
Aiin85:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Aqin85:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Azin85:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain85:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b1*b2 + a2*b1*b2 + c1*c2;
end;
#####################################################################
Bcxyin85:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return b1*b2 + a2*b2*c1 + b1*c2 + c1*c2 + a2*x1 + b2*x1 + b1*b2*x1 + a2*y1 + b1*b2*y1;
end;
#####################################################################
#####################################################################
#Space Group No. 86 ( P4_2/n)
#####################################################################
Aiin86:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Aqin86:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Axyzin86:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain86:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b1*b2 + a2*b1*b2 + c1*c2;
end;
#####################################################################
#####################################################################
#Space Group No. 87 ( I4/m)
#####################################################################
Aiin87:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Aqin87:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Axyzin87:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain87:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b1*b2 + a2*b1*b2 + c1*c2;
end;
#####################################################################
Bphiin87:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1*x1 + b2*x1 + a1*b2*x1 + a2*b2*x1 + a2*b1*y1 + a1*b2*y1 + a2*b2*y1 + a2*z1 + a2*b1*z1 + a1*b2*z1 + a2*b2*z1 + b1*b2*z1;
end;
#####################################################################
Bxyzin87:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return b1*x1*x2 + b1*x2*y1 + b1*x1*y2 + b1*y1*y2 + x1*z2 + b1*x1*z2 + b1*x2*z2 + y1*z2 + b1*y1*z2 + b1*y2*z2;
end;
#####################################################################
CGAPin87:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return b2*(b3 + c3)*x1 + b1*(a3 + b3)*x2 + b1*(a1 + b1)*(a3 + b3)*x2 + 2*b1*b3*(b1 + c1)*x2 + b2*b3*(b1 + c1)*x2 + (a3 + b3)*(b1 + c1)*x2 + b1*(a3 + b3)*(b1 + c1)*x2 + b1*b3*(b2 + c2)*x2 + b1*(b3 + c3)*x2 + 3*(a1 + b1)*(b3 + c3)*x2 + b1*(a1 + b1)*(b3 + c3)*x2 + 2*b1*b2*(b3 + c3)*x2 + b1*b3*(b3 + c3)*x2 + b3*(b1 + c1)*x1*x2 + b1*b3*(b1 + c1)*x1*x2 + b3*(b2 + c2)*x1*x2 + (b3 + c3)*x1*x2 + b1*(b3 + c3)*x1*x2 + b2*(b3 + c3)*x1*x2 + b3*(b3 + c3)*x1*x2 + (b1*b3*x2*(1 + x2))/2 + (b1*(a3 + b3)*x2*(1 + x2))/2 + b3*x1*x2*(1 + x2) + (b1*b3*x1*x2*(1 + x2))/2 + 2*b2*(b1 + c1)*x3 + b1*b2*(b1 + c1)*x3 + (a2 + b2)*(b1 + c1)*x3 + b1*(a2 + b2)*(b1 + c1)*x3 + b2*(a2 + b2)*(b1 + c1)*x3 + b2*b3*(b1 + c1)*x3 + b1*b2*(b2 + c2)*x3 + b1*(a2 + b2)*(b2 + c2)*x3 + (a1 + b1)*b2*(b3 + c3)*x3 + b1*(a1 + b1)*b2*(b3 + c3)*x3 + b1*(a2 + b2)*(b3 + c3)*x3 + (a1 + b1)*(a2 + b2)*(b3 + c3)*x3 + b1*b2*(a2 + b2)*(b3 + c3)*x3 + (a1 + b1)*b2*x1*x3 + b1*(a1 + b1)*b2*x1*x3 + (a2 + b2)*x1*x3 + b1*(a2 + b2)*x1*x3 + (a1 + b1)*(a2 + b2)*x1*x3 + b2*(a2 + b2)*x1*x3 + b1*b2*(a2 + b2)*x1*x3 + 3*b2*(b1 + c1)*x1*x3 + (a2 + b2)*(b1 + c1)*x1*x3 + b2*b3*(b1 + c1)*x1*x3 + 3*b2*(b2 + c2)*x1*x3 + (a2 + b2)*(b2 + c2)*x1*x3 + b2*b3*(b2 + c2)*x1*x3 + 2*b2*(b3 + c3)*x1*x3 + (a2 + b2)*(b3 + c3)*x1*x3 + b2*x1*(1 + x1)*x3 + (3*(a2 + b2)*x1*(1 + x1)*x3)/2 + (b2*(a2 + b2)*x1*(1 + x1)*x3)/2 + (3*b2*b3*x1*(1 + x1)*x3)/2 + (a1 + b1)*b2*x2*x3 + b1*(a1 + b1)*b2*x2*x3 + b1*(a2 + b2)*x2*x3 + (a1 + b1)*(a2 + b2)*x2*x3 + b1*b2*(a2 + b2)*x2*x3 + 3*(b1 + c1)*x2*x3 + 3*b1*(b1 + c1)*x2*x3 + 2*(a1 + b1)*(b1 + c1)*x2*x3 + 5*b2*(b1 + c1)*x2*x3 + (a1 + b1)*b2*(b1 + c1)*x2*x3 + (a2 + b2)*(b1 + c1)*x2*x3 + b2*(a2 + b2)*(b1 + c1)*x2*x3 + b3*(b1 + c1)*x2*x3 + b1*b3*(b1 + c1)*x2*x3 + (a1 + b1)*b3*(b1 + c1)*x2*x3 + b2*b3*(b1 + c1)*x2*x3 + 3*b1*(b2 + c2)*x2*x3 + 2*(a1 + b1)*(b2 + c2)*x2*x3 + (a1 + b1)*b2*(b2 + c2)*x2*x3 + b1*b3*(b2 + c2)*x2*x3 + (a1 + b1)*b3*(b2 + c2)*x2*x3 + b1*(b3 + c3)*x2*x3 + (a1 + b1)*b2*(b3 + c3)*x2*x3 + b1*b3*(b3 + c3)*x2*x3 + (a1 + b1)*b3*(b3 + c3)*x2*x3 + x1*x2*x3 + 5*b2*x1*x2*x3 + 2*(a2 + b2)*x1*x2*x3 + b2*(a2 + b2)*x1*x2*x3 + 2*b3*x1*x2*x3 + 2*b2*b3*x1*x2*x3 + (b1*b2*x3*(1 + x3))/2 + ((a1 + b1)*b2*x3*(1 + x3))/2 + (b1*(a1 + b1)*b2*x3*(1 + x3))/2 + b1*(a2 + b2)*x3*(1 + x3) + ((a1 + b1)*(a2 + b2)*x3*(1 + x3))/2 + (b1*b2*(a2 + b2)*x3*(1 + x3))/2 + (3*b2*x1*x3*(1 + x3))/2 + (a2 + b2)*x1*x3*(1 + x3) + (b2*b3*x1*x3*(1 + x3))/2 + b1*x2*x3*(1 + x3) + (a1 + b1)*x2*x3*(1 + x3) + b2*(b3 + c3)*y1 + 2*b3*(b1 + c1)*x2*y1 + b1*b3*(b1 + c1)*x2*y1 + (a1 + b1)*(b3 + c3)*x2*y1 + b3*x2*(1 + x2)*y1 + (b1*b3*x2*(1 + x2)*y1)/2 + 3*b2*x3*y1 + (a1 + b1)*b2*x3*y1 + b1*(a1 + b1)*b2*x3*y1 + (a2 + b2)*x3*y1 + b1*(a2 + b2)*x3*y1 + (a1 + b1)*(a2 + b2)*x3*y1 + 4*b2*(a2 + b2)*x3*y1 + b1*b2*(a2 + b2)*x3*y1 + 2*b2*(b1 + c1)*x3*y1 + 2*(a2 + b2)*(b1 + c1)*x3*y1 + b2*b3*(b1 + c1)*x3*y1 + 2*b2*(b2 + c2)*x3*y1 + 2*(a2 + b2)*(b2 + c2)*x3*y1 + b2*b3*(b2 + c2)*x3*y1 + (a2 + b2)*(b3 + c3)*x3*y1 + 3*b2*x1*x3*y1 + 3*(a2 + b2)*x1*x3*y1 + b2*(a2 + b2)*x1*x3*y1 + 3*b2*b3*x1*x3*y1 + 3*x2*x3*y1 + 9*b2*x2*x3*y1 + 4*(a2 + b2)*x2*x3*y1 + b2*(a2 + b2)*x2*x3*y1 + 2*b3*x2*x3*y1 + 2*b2*b3*x2*x3*y1 + b2*x3*(1 + x3)*y1 + (3*(a2 + b2)*x3*(1 + x3)*y1)/2 + (b2*b3*x3*(1 + x3)*y1)/2 + b2*x3*y1*(1 + y1) + (3*(a2 + b2)*x3*y1*(1 + y1))/2 + (b2*(a2 + b2)*x3*y1*(1 + y1))/2 + (3*b2*b3*x3*y1*(1 + y1))/2 + 2*b1*(a3 + b3)*y2 + b1*(a1 + b1)*(a3 + b3)*y2 + 2*b1*b3*(b1 + c1)*y2 + b2*b3*(b1 + c1)*y2 + (a3 + b3)*(b1 + c1)*y2 + b1*(a3 + b3)*(b1 + c1)*y2 + b1*b3*(b2 + c2)*y2 + b1*(b3 + c3)*y2 + 2*(a1 + b1)*(b3 + c3)*y2 + b1*(a1 + b1)*(b3 + c3)*y2 + 2*b1*b2*(b3 + c3)*y2 + b1*b3*(b3 + c3)*y2 + b3*(b1 + c1)*x1*y2 + b1*b3*(b1 + c1)*x1*y2 + b3*(b2 + c2)*x1*y2 + b1*(b3 + c3)*x1*y2 + b2*(b3 + c3)*x1*y2 + b3*(b3 + c3)*x1*y2 + b1*b3*x2*y2 + b1*(a3 + b3)*x2*y2 + b1*(b3 + c3)*x2*y2 + (a1 + b1)*(b3 + c3)*x2*y2 + 2*b3*x1*x2*y2 + b1*b3*x1*x2*y2 + b1*b2*x3*y2 + (a1 + b1)*b2*x3*y2 + b1*(a1 + b1)*b2*x3*y2 + 2*b1*(a2 + b2)*x3*y2 + (a1 + b1)*(a2 + b2)*x3*y2 + b1*b2*(a2 + b2)*x3*y2 + 2*(b1 + c1)*x3*y2 + 3*b1*(b1 + c1)*x3*y2 + 2*(a1 + b1)*(b1 + c1)*x3*y2 + 5*b2*(b1 + c1)*x3*y2 + (a1 + b1)*b2*(b1 + c1)*x3*y2 + (a2 + b2)*(b1 + c1)*x3*y2 + b2*(a2 + b2)*(b1 + c1)*x3*y2 + 2*b3*(b1 + c1)*x3*y2 + b1*b3*(b1 + c1)*x3*y2 + (a1 + b1)*b3*(b1 + c1)*x3*y2 + b2*b3*(b1 + c1)*x3*y2 + 3*b1*(b2 + c2)*x3*y2 + 2*(a1 + b1)*(b2 + c2)*x3*y2 + (a1 + b1)*b2*(b2 + c2)*x3*y2 + b1*b3*(b2 + c2)*x3*y2 + (a1 + b1)*b3*(b2 + c2)*x3*y2 + b1*(b3 + c3)*x3*y2 + (a1 + b1)*b2*(b3 + c3)*x3*y2 + b1*b3*(b3 + c3)*x3*y2 + (a1 + b1)*b3*(b3 + c3)*x3*y2 + x1*x3*y2 + 5*b2*x1*x3*y2 + 2*(a2 + b2)*x1*x3*y2 + b2*(a2 + b2)*x1*x3*y2 + 2*b3*x1*x3*y2 + 2*b2*b3*x1*x3*y2 + b1*x3*(1 + x3)*y2 + (a1 + b1)*x3*(1 + x3)*y2 + 2*b3*(b1 + c1)*y1*y2 + b1*b3*(b1 + c1)*y1*y2 + (a1 + b1)*(b3 + c3)*y1*y2 + 2*b3*x2*y1*y2 + b1*b3*x2*y1*y2 + x3*y1*y2 + 6*b2*x3*y1*y2 + 3*(a2 + b2)*x3*y1*y2 + b2*(a2 + b2)*x3*y1*y2 + 2*b3*x3*y1*y2 + 2*b2*b3*x3*y1*y2 + (b1*b3*y2*(1 + y2))/2 + (b1*(a3 + b3)*y2*(1 + y2))/2 + b3*x1*y2*(1 + y2) + (b1*b3*x1*y2*(1 + y2))/2 + b3*y1*y2*(1 + y2) + (b1*b3*y1*y2*(1 + y2))/2 + 2*b2*(b1 + c1)*y3 + b1*b2*(b1 + c1)*y3 + (a2 + b2)*(b1 + c1)*y3 + b1*(a2 + b2)*(b1 + c1)*y3 + b2*(a2 + b2)*(b1 + c1)*y3 + b2*b3*(b1 + c1)*y3 + b1*b2*(b2 + c2)*y3 + b1*(a2 + b2)*(b2 + c2)*y3 + (a1 + b1)*b2*(b3 + c3)*y3 + b1*(a1 + b1)*b2*(b3 + c3)*y3 + b1*(a2 + b2)*(b3 + c3)*y3 + (a1 + b1)*(a2 + b2)*(b3 + c3)*y3 + b1*b2*(a2 + b2)*(b3 + c3)*y3 + (a1 + b1)*b2*x1*y3 + b1*(a1 + b1)*b2*x1*y3 + b1*(a2 + b2)*x1*y3 + (a1 + b1)*(a2 + b2)*x1*y3 + b2*(a2 + b2)*x1*y3 + b1*b2*(a2 + b2)*x1*y3 + 3*b2*(b1 + c1)*x1*y3 + (a2 + b2)*(b1 + c1)*x1*y3 + b2*b3*(b1 + c1)*x1*y3 + 3*b2*(b2 + c2)*x1*y3 + (a2 + b2)*(b2 + c2)*x1*y3 + b2*b3*(b2 + c2)*x1*y3 + 2*b2*(b3 + c3)*x1*y3 + (a2 + b2)*(b3 + c3)*x1*y3 + (3*b2*x1*(1 + x1)*y3)/2 + (3*(a2 + b2)*x1*(1 + x1)*y3)/2 + (b2*(a2 + b2)*x1*(1 + x1)*y3)/2 + (3*b2*b3*x1*(1 + x1)*y3)/2 + (a1 + b1)*b2*x2*y3 + b1*(a1 + b1)*b2*x2*y3 + b1*(a2 + b2)*x2*y3 + (a1 + b1)*(a2 + b2)*x2*y3 + b1*b2*(a2 + b2)*x2*y3 + 2*(b1 + c1)*x2*y3 + 2*b1*(b1 + c1)*x2*y3 + (a1 + b1)*(b1 + c1)*x2*y3 + 4*b2*(b1 + c1)*x2*y3 + (a1 + b1)*b2*(b1 + c1)*x2*y3 + (a2 + b2)*(b1 + c1)*x2*y3 + b2*(a2 + b2)*(b1 + c1)*x2*y3 + b3*(b1 + c1)*x2*y3 + b1*b3*(b1 + c1)*x2*y3 + (a1 + b1)*b3*(b1 + c1)*x2*y3 + b2*b3*(b1 + c1)*x2*y3 + 2*b1*(b2 + c2)*x2*y3 + (a1 + b1)*(b2 + c2)*x2*y3 + (a1 + b1)*b2*(b2 + c2)*x2*y3 + b1*b3*(b2 + c2)*x2*y3 + (a1 + b1)*b3*(b2 + c2)*x2*y3 + b1*(b3 + c3)*x2*y3 + (a1 + b1)*b2*(b3 + c3)*x2*y3 + b1*b3*(b3 + c3)*x2*y3 + (a1 + b1)*b3*(b3 + c3)*x2*y3 + 4*b2*x1*x2*y3 + 2*(a2 + b2)*x1*x2*y3 + b2*(a2 + b2)*x1*x2*y3 + 2*b3*x1*x2*y3 + 2*b2*b3*x1*x2*y3 + (a1 + b1)*b2*x3*y3 + b1*(a1 + b1)*b2*x3*y3 + b1*(a2 + b2)*x3*y3 + (a1 + b1)*(a2 + b2)*x3*y3 + b1*b2*(a2 + b2)*x3*y3 + 2*b2*(b1 + c1)*x3*y3 + 3*b2*x1*x3*y3 + 2*(a2 + b2)*x1*x3*y3 + b2*b3*x1*x3*y3 + 6*b2*y1*y3 + (a1 + b1)*b2*y1*y3 + b1*(a1 + b1)*b2*y1*y3 + b1*(a2 + b2)*y1*y3 + (a1 + b1)*(a2 + b2)*y1*y3 + 4*b2*(a2 + b2)*y1*y3 + b1*b2*(a2 + b2)*y1*y3 + 2*b2*(b1 + c1)*y1*y3 + 2*(a2 + b2)*(b1 + c1)*y1*y3 + b2*b3*(b1 + c1)*y1*y3 + 2*b2*(b2 + c2)*y1*y3 + 2*(a2 + b2)*(b2 + c2)*y1*y3 + b2*b3*(b2 + c2)*y1*y3 + (a2 + b2)*(b3 + c3)*y1*y3 + 2*b2*x1*y1*y3 + 3*(a2 + b2)*x1*y1*y3 + b2*(a2 + b2)*x1*y1*y3 + 3*b2*b3*x1*y1*y3 + 8*b2*x2*y1*y3 + 4*(a2 + b2)*x2*y1*y3 + b2*(a2 + b2)*x2*y1*y3 + 2*b3*x2*y1*y3 + 2*b2*b3*x2*y1*y3 + 5*b2*x3*y1*y3 + 2*(a2 + b2)*x3*y1*y3 + b2*b3*x3*y1*y3 + (3*b2*y1*(1 + y1)*y3)/2 + (3*(a2 + b2)*y1*(1 + y1)*y3)/2 + (b2*(a2 + b2)*y1*(1 + y1)*y3)/2 + (3*b2*b3*y1*(1 + y1)*y3)/2 + b1*y2*y3 + b1*b2*y2*y3 + (a1 + b1)*b2*y2*y3 + b1*(a1 + b1)*b2*y2*y3 + 2*b1*(a2 + b2)*y2*y3 + (a1 + b1)*(a2 + b2)*y2*y3 + b1*b2*(a2 + b2)*y2*y3 + 2*b1*(b1 + c1)*y2*y3 + (a1 + b1)*(b1 + c1)*y2*y3 + 6*b2*(b1 + c1)*y2*y3 + (a1 + b1)*b2*(b1 + c1)*y2*y3 + (a2 + b2)*(b1 + c1)*y2*y3 + b2*(a2 + b2)*(b1 + c1)*y2*y3 + 2*b3*(b1 + c1)*y2*y3 + b1*b3*(b1 + c1)*y2*y3 + (a1 + b1)*b3*(b1 + c1)*y2*y3 + b2*b3*(b1 + c1)*y2*y3 + 2*b1*(b2 + c2)*y2*y3 + (a1 + b1)*(b2 + c2)*y2*y3 + (a1 + b1)*b2*(b2 + c2)*y2*y3 + b1*b3*(b2 + c2)*y2*y3 + (a1 + b1)*b3*(b2 + c2)*y2*y3 + b1*(b3 + c3)*y2*y3 + (a1 + b1)*b2*(b3 + c3)*y2*y3 + b1*b3*(b3 + c3)*y2*y3 + (a1 + b1)*b3*(b3 + c3)*y2*y3 + 6*b2*x1*y2*y3 + 2*(a2 + b2)*x1*y2*y3 + b2*(a2 + b2)*x1*y2*y3 + 2*b3*x1*y2*y3 + 2*b2*b3*x1*y2*y3 + y1*y2*y3 + 7*b2*y1*y2*y3 + 3*(a2 + b2)*y1*y2*y3 + b2*(a2 + b2)*y1*y2*y3 + 2*b3*y1*y2*y3 + 2*b2*b3*y1*y2*y3 + (b1*b2*y3*(1 + y3))/2 + ((a1 + b1)*b2*y3*(1 + y3))/2 + (b1*(a1 + b1)*b2*y3*(1 + y3))/2 + b1*(a2 + b2)*y3*(1 + y3) + ((a1 + b1)*(a2 + b2)*y3*(1 + y3))/2 + (b1*b2*(a2 + b2)*y3*(1 + y3))/2 + (3*b2*x1*y3*(1 + y3))/2 + (a2 + b2)*x1*y3*(1 + y3) + (b2*b3*x1*y3*(1 + y3))/2 + (b1*x2*y3*(1 + y3))/2 + ((a1 + b1)*x2*y3*(1 + y3))/2 + b2*y1*y3*(1 + y3) + (3*(a2 + b2)*y1*y3*(1 + y3))/2 + (b2*b3*y1*y3*(1 + y3))/2 + (b1*y2*y3*(1 + y3))/2 + ((a1 + b1)*y2*y3*(1 + y3))/2 + b3*x2*z1 + b1*(a3 + b3)*x2*z1 + 2*b3*(b1 + c1)*x2*z1 + b1*b3*(b1 + c1)*x2*z1 + b3*(b2 + c2)*x2*z1 + (b3 + c3)*x2*z1 + b1*(b3 + c3)*x2*z1 + b2*(b3 + c3)*x2*z1 + b3*(b3 + c3)*x2*z1 + b3*x1*x2*z1 + (3*b3*x2*(1 + x2)*z1)/2 + (b1*b3*x2*(1 + x2)*z1)/2 + (a1 + b1)*b2*x3*z1 + b1*(a1 + b1)*b2*x3*z1 + (a2 + b2)*x3*z1 + b1*(a2 + b2)*x3*z1 + (a1 + b1)*(a2 + b2)*x3*z1 + b2*(a2 + b2)*x3*z1 + b1*b2*(a2 + b2)*x3*z1 + 4*b2*(b1 + c1)*x3*z1 + (a2 + b2)*(b1 + c1)*x3*z1 + 2*b2*b3*(b1 + c1)*x3*z1 + 4*b2*(b2 + c2)*x3*z1 + (a2 + b2)*(b2 + c2)*x3*z1 + 2*b2*b3*(b2 + c2)*x3*z1 + 3*b2*(b3 + c3)*x3*z1 + (a2 + b2)*(b3 + c3)*x3*z1 + b2*b3*(b3 + c3)*x3*z1 + 3*b2*x1*x3*z1 + b1*b2*x1*x3*z1 + 3*(a2 + b2)*x1*x3*z1 + b2*(a2 + b2)*x1*x3*z1 + 2*b2*b3*x1*x3*z1 + x2*x3*z1 + 5*b2*x2*x3*z1 + 2*(a2 + b2)*x2*x3*z1 + b2*(a2 + b2)*x2*x3*z1 + 2*b3*x2*x3*z1 + 2*b2*b3*x2*x3*z1 + (3*b2*x3*(1 + x3)*z1)/2 + (a2 + b2)*x3*(1 + x3)*z1 + (b2*b3*x3*(1 + x3)*z1)/2 + b3*x2*y1*z1 + 4*b2*x3*y1*z1 + b1*b2*x3*y1*z1 + 3*(a2 + b2)*x3*y1*z1 + b2*(a2 + b2)*x3*y1*z1 + 2*b2*b3*x3*y1*z1 + b3*y2*z1 + b1*(a3 + b3)*y2*z1 + 2*b3*(b1 + c1)*y2*z1 + b1*b3*(b1 + c1)*y2*z1 + b3*(b2 + c2)*y2*z1 + b1*(b3 + c3)*y2*z1 + b2*(b3 + c3)*y2*z1 + b3*(b3 + c3)*y2*z1 + b3*x1*y2*z1 + 3*b3*x2*y2*z1 + b1*b3*x2*y2*z1 + x3*y2*z1 + 5*b2*x3*y2*z1 + 2*(a2 + b2)*x3*y2*z1 + b2*(a2 + b2)*x3*y2*z1 + 2*b3*x3*y2*z1 + 2*b2*b3*x3*y2*z1 + b3*y1*y2*z1 + (3*b3*y2*(1 + y2)*z1)/2 + (b1*b3*y2*(1 + y2)*z1)/2 + (a1 + b1)*b2*y3*z1 + b1*(a1 + b1)*b2*y3*z1 + b1*(a2 + b2)*y3*z1 + (a1 + b1)*(a2 + b2)*y3*z1 + b2*(a2 + b2)*y3*z1 + b1*b2*(a2 + b2)*y3*z1 + 4*b2*(b1 + c1)*y3*z1 + (a2 + b2)*(b1 + c1)*y3*z1 + 2*b2*b3*(b1 + c1)*y3*z1 + 4*b2*(b2 + c2)*y3*z1 + (a2 + b2)*(b2 + c2)*y3*z1 + 2*b2*b3*(b2 + c2)*y3*z1 + 3*b2*(b3 + c3)*y3*z1 + (a2 + b2)*(b3 + c3)*y3*z1 + b2*b3*(b3 + c3)*y3*z1 + 4*b2*x1*y3*z1 + b1*b2*x1*y3*z1 + 3*(a2 + b2)*x1*y3*z1 + b2*(a2 + b2)*x1*y3*z1 + 2*b2*b3*x1*y3*z1 + 4*b2*x2*y3*z1 + 2*(a2 + b2)*x2*y3*z1 + b2*(a2 + b2)*x2*y3*z1 + 2*b3*x2*y3*z1 + 2*b2*b3*x2*y3*z1 + 3*b2*x3*y3*z1 + 2*(a2 + b2)*x3*y3*z1 + b2*b3*x3*y3*z1 + 3*b2*y1*y3*z1 + b1*b2*y1*y3*z1 + 3*(a2 + b2)*y1*y3*z1 + b2*(a2 + b2)*y1*y3*z1 + 2*b2*b3*y1*y3*z1 + 6*b2*y2*y3*z1 + 2*(a2 + b2)*y2*y3*z1 + b2*(a2 + b2)*y2*y3*z1 + 2*b3*y2*y3*z1 + 2*b2*b3*y2*y3*z1 + (3*b2*y3*(1 + y3)*z1)/2 + (a2 + b2)*y3*(1 + y3)*z1 + (b2*b3*y3*(1 + y3)*z1)/2 + (b2*b3*z1*(1 + z1))/2 + b2*x3*z1*(1 + z1) + (3*(a2 + b2)*x3*z1*(1 + z1))/2 + (b2*(a2 + b2)*x3*z1*(1 + z1))/2 + (3*b2*b3*x3*z1*(1 + z1))/2 + (3*b2*y3*z1*(1 + z1))/2 + (3*(a2 + b2)*y3*z1*(1 + z1))/2 + (b2*(a2 + b2)*y3*z1*(1 + z1))/2 + (3*b2*b3*y3*z1*(1 + z1))/2 + b3*(2*b2 + c2)*(x1 + y1 + z1) + (a1 + b1)*(a3 + b3)*z2 + b1*(a1 + b1)*(a3 + b3)*z2 + 2*b1*b3*(b1 + c1)*z2 + b2*b3*(b1 + c1)*z2 + b1*(a3 + b3)*(b1 + c1)*z2 + b1*b3*(b2 + c2)*z2 + b1*(b3 + c3)*z2 + 2*(a1 + b1)*(b3 + c3)*z2 + 2*b1*b2*(b3 + c3)*z2 + b1*b3*(b3 + c3)*z2 + b3*(b1 + c1)*x1*z2 + b1*b3*(b1 + c1)*x1*z2 + b3*(b2 + c2)*x1*z2 + b1*(b3 + c3)*x1*z2 + b2*(b3 + c3)*x1*z2 + b3*(b3 + c3)*x1*z2 + (3*b3*x1*(1 + x1)*z2)/2 + b1*b3*x2*z2 + 2*b3*(b1 + c1)*x2*z2 + b1*(b3 + c3)*x2*z2 + (a1 + b1)*(b3 + c3)*x2*z2 + b1*(a1 + b1)*(b3 + c3)*x2*z2 + 2*b3*x1*x2*z2 + b1*b3*x1*x2*z2 + (a1 + b1)*b2*x3*z2 + b1*(a1 + b1)*b2*x3*z2 + b1*(a2 + b2)*x3*z2 + (a1 + b1)*(a2 + b2)*x3*z2 + b1*b2*(a2 + b2)*x3*z2 + 3*(a1 + b1)*(b1 + c1)*x3*z2 + 5*b2*(b1 + c1)*x3*z2 + b1*b2*(b1 + c1)*x3*z2 + (a1 + b1)*b2*(b1 + c1)*x3*z2 + 2*(a2 + b2)*(b1 + c1)*x3*z2 + b2*(a2 + b2)*(b1 + c1)*x3*z2 + (a1 + b1)*b3*(b1 + c1)*x3*z2 + b2*b3*(b1 + c1)*x3*z2 + 3*(a1 + b1)*(b2 + c2)*x3*z2 + b1*b2*(b2 + c2)*x3*z2 + (a1 + b1)*b2*(b2 + c2)*x3*z2 + (a1 + b1)*b3*(b2 + c2)*x3*z2 + (a1 + b1)*(b3 + c3)*x3*z2 + b1*b2*(b3 + c3)*x3*z2 + (a1 + b1)*b2*(b3 + c3)*x3*z2 + (a1 + b1)*b3*(b3 + c3)*x3*z2 + 4*b2*x1*x3*z2 + 3*(a2 + b2)*x1*x3*z2 + b2*(a2 + b2)*x1*x3*z2 + b3*x1*x3*z2 + 2*b2*b3*x1*x3*z2 + (a1 + b1)*x3*(1 + x3)*z2 + 2*b3*(b1 + c1)*y1*z2 + b1*b3*(b1 + c1)*y1*z2 + b1*(b3 + c3)*y1*z2 + (a1 + b1)*(b3 + c3)*y1*z2 + 3*b3*x1*y1*z2 + 2*b3*x2*y1*z2 + b1*b3*x2*y1*z2 + 6*b2*x3*y1*z2 + 3*(a2 + b2)*x3*y1*z2 + b2*(a2 + b2)*x3*y1*z2 + b3*x3*y1*z2 + 2*b2*b3*x3*y1*z2 + (3*b3*y1*(1 + y1)*z2)/2 + b1*b3*y2*z2 + 2*b3*(b1 + c1)*y2*z2 + b1*(b3 + c3)*y2*z2 + b1*(a1 + b1)*(b3 + c3)*y2*z2 + 2*b3*x1*y2*z2 + b1*b3*x1*y2*z2 + 2*b3*y1*y2*z2 + b1*b3*y1*y2*z2 + (a1 + b1)*b2*y3*z2 + b1*(a1 + b1)*b2*y3*z2 + b1*(a2 + b2)*y3*z2 + (a1 + b1)*(a2 + b2)*y3*z2 + b1*b2*(a2 + b2)*y3*z2 + 2*(a1 + b1)*(b1 + c1)*y3*z2 + 4*b2*(b1 + c1)*y3*z2 + b1*b2*(b1 + c1)*y3*z2 + (a1 + b1)*b2*(b1 + c1)*y3*z2 + 2*(a2 + b2)*(b1 + c1)*y3*z2 + b2*(a2 + b2)*(b1 + c1)*y3*z2 + (a1 + b1)*b3*(b1 + c1)*y3*z2 + b2*b3*(b1 + c1)*y3*z2 + 2*(a1 + b1)*(b2 + c2)*y3*z2 + b1*b2*(b2 + c2)*y3*z2 + (a1 + b1)*b2*(b2 + c2)*y3*z2 + (a1 + b1)*b3*(b2 + c2)*y3*z2 + (a1 + b1)*(b3 + c3)*y3*z2 + b1*b2*(b3 + c3)*y3*z2 + (a1 + b1)*b2*(b3 + c3)*y3*z2 + (a1 + b1)*b3*(b3 + c3)*y3*z2 + 5*b2*x1*y3*z2 + 3*(a2 + b2)*x1*y3*z2 + b2*(a2 + b2)*x1*y3*z2 + b3*x1*y3*z2 + 2*b2*b3*x1*y3*z2 + 7*b2*y1*y3*z2 + 3*(a2 + b2)*y1*y3*z2 + b2*(a2 + b2)*y1*y3*z2 + b3*y1*y3*z2 + 2*b2*b3*y1*y3*z2 + ((a1 + b1)*y3*(1 + y3)*z2)/2 + b3*z1*z2 + (a3 + b3)*z1*z2 + b1*(a3 + b3)*z1*z2 + 3*b3*(b1 + c1)*z1*z2 + b1*b3*(b1 + c1)*z1*z2 + 2*b3*(b2 + c2)*z1*z2 + b1*(b3 + c3)*z1*z2 + 2*b2*(b3 + c3)*z1*z2 + 2*b3*(b3 + c3)*z1*z2 + b3*x1*z1*z2 + b3*x2*z1*z2 + b1*b3*x2*z1*z2 + 4*b2*x3*z1*z2 + 3*(a2 + b2)*x3*z1*z2 + b2*(a2 + b2)*x3*z1*z2 + b3*x3*z1*z2 + 2*b2*b3*x3*z1*z2 + b3*y1*z1*z2 + b3*y2*z1*z2 + b1*b3*y2*z1*z2 + 5*b2*y3*z1*z2 + 3*(a2 + b2)*y3*z1*z2 + b2*(a2 + b2)*y3*z1*z2 + b3*y3*z1*z2 + 2*b2*b3*y3*z1*z2 + (3*b3*z1*(1 + z1)*z2)/2 + (b1*b3*z2*(1 + z2))/2 + (b1*(a3 + b3)*z2*(1 + z2))/2 + b3*x1*z2*(1 + z2) + (b1*b3*x1*z2*(1 + z2))/2 + b3*y1*z2*(1 + z2) + (b1*b3*y1*z2*(1 + z2))/2 + (3*b3*z1*z2*(1 + z2))/2 + (b1*b3*z1*z2*(1 + z2))/2 + b2*(b1 + c1)*z3 + 2*(a2 + b2)*(b1 + c1)*z3 + b1*(a2 + b2)*(b1 + c1)*z3 + b2*(a2 + b2)*(b1 + c1)*z3 + b2*b3*(b1 + c1)*z3 + b1*(a2 + b2)*(b2 + c2)*z3 + (a1 + b1)*b2*(b3 + c3)*z3 + b1*(a1 + b1)*b2*(b3 + c3)*z3 + b1*(a2 + b2)*(b3 + c3)*z3 + (a1 + b1)*(a2 + b2)*(b3 + c3)*z3 + b1*b2*(a2 + b2)*(b3 + c3)*z3 + (a1 + b1)*b2*x1*z3 + b1*(a1 + b1)*b2*x1*z3 + b1*(a2 + b2)*x1*z3 + (a1 + b1)*(a2 + b2)*x1*z3 + b1*b2*(a2 + b2)*x1*z3 + 3*b2*(b1 + c1)*x1*z3 + (a2 + b2)*(b1 + c1)*x1*z3 + b2*b3*(b1 + c1)*x1*z3 + 3*b2*(b2 + c2)*x1*z3 + (a2 + b2)*(b2 + c2)*x1*z3 + b2*b3*(b2 + c2)*x1*z3 + 3*b2*(b3 + c3)*x1*z3 + (a2 + b2)*(b3 + c3)*x1*z3 + (3*b2*x1*(1 + x1)*z3)/2 + (a2 + b2)*x1*(1 + x1)*z3 + (b2*(a2 + b2)*x1*(1 + x1)*z3)/2 + (3*b2*b3*x1*(1 + x1)*z3)/2 + (a1 + b1)*b2*x2*z3 + b1*(a1 + b1)*b2*x2*z3 + b1*(a2 + b2)*x2*z3 + (a1 + b1)*(a2 + b2)*x2*z3 + b1*b2*(a2 + b2)*x2*z3 + 4*(b1 + c1)*x2*z3 + 4*b1*(b1 + c1)*x2*z3 + 4*(a1 + b1)*(b1 + c1)*x2*z3 + 6*b2*(b1 + c1)*x2*z3 + (a1 + b1)*b2*(b1 + c1)*x2*z3 + b2*(a2 + b2)*(b1 + c1)*x2*z3 + 2*b3*(b1 + c1)*x2*z3 + 2*b1*b3*(b1 + c1)*x2*z3 + (a1 + b1)*b3*(b1 + c1)*x2*z3 + b2*b3*(b1 + c1)*x2*z3 + 4*b1*(b2 + c2)*x2*z3 + 4*(a1 + b1)*(b2 + c2)*x2*z3 + (a1 + b1)*b2*(b2 + c2)*x2*z3 + 2*b1*b3*(b2 + c2)*x2*z3 + (a1 + b1)*b3*(b2 + c2)*x2*z3 + (a1 + b1)*b2*(b3 + c3)*x2*z3 + 2*b1*b3*(b3 + c3)*x2*z3 + (a1 + b1)*b3*(b3 + c3)*x2*z3 + 2*x1*x2*z3 + 2*b1*x1*x2*z3 + (a1 + b1)*x1*x2*z3 + 6*b2*x1*x2*z3 + b1*b2*x1*x2*z3 + (a2 + b2)*x1*x2*z3 + b2*(a2 + b2)*x1*x2*z3 + 3*b3*x1*x2*z3 + b1*b3*x1*x2*z3 + 2*b2*b3*x1*x2*z3 + (a1 + b1)*b2*x3*z3 + b1*(a1 + b1)*b2*x3*z3 + 2*b1*(a2 + b2)*x3*z3 + (a1 + b1)*(a2 + b2)*x3*z3 + 2*b1*b2*(a2 + b2)*x3*z3 + 6*b2*(b1 + c1)*x3*z3 + 2*(a2 + b2)*(b1 + c1)*x3*z3 + 6*b2*x1*x3*z3 + 3*(a2 + b2)*x1*x3*z3 + b2*b3*x1*x3*z3 + (a1 + b1)*b2*y1*z3 + b1*(a1 + b1)*b2*y1*z3 + 3*(a2 + b2)*y1*z3 + b1*(a2 + b2)*y1*z3 + (a1 + b1)*(a2 + b2)*y1*z3 + 3*b2*(a2 + b2)*y1*z3 + b1*b2*(a2 + b2)*y1*z3 + b2*(b1 + c1)*y1*z3 + 2*(a2 + b2)*(b1 + c1)*y1*z3 + b2*b3*(b1 + c1)*y1*z3 + b2*(b2 + c2)*y1*z3 + 2*(a2 + b2)*(b2 + c2)*y1*z3 + b2*b3*(b2 + c2)*y1*z3 + b2*(b3 + c3)*y1*z3 + (a2 + b2)*(b3 + c3)*y1*z3 + 4*b2*x1*y1*z3 + 2*(a2 + b2)*x1*y1*z3 + b2*(a2 + b2)*x1*y1*z3 + 3*b2*b3*x1*y1*z3 + x2*y1*z3 + 2*b1*x2*y1*z3 + (a1 + b1)*x2*y1*z3 + 8*b2*x2*y1*z3 + b1*b2*x2*y1*z3 + 3*(a2 + b2)*x2*y1*z3 + b2*(a2 + b2)*x2*y1*z3 + 3*b3*x2*y1*z3 + b1*b3*x2*y1*z3 + 2*b2*b3*x2*y1*z3 + 8*b2*x3*y1*z3 + 4*(a2 + b2)*x3*y1*z3 + b2*(a2 + b2)*x3*y1*z3 + b2*b3*x3*y1*z3 + (3*b2*y1*(1 + y1)*z3)/2 + (a2 + b2)*y1*(1 + y1)*z3 + (b2*(a2 + b2)*y1*(1 + y1)*z3)/2 + (3*b2*b3*y1*(1 + y1)*z3)/2 + (a1 + b1)*b2*y2*z3 + b1*(a1 + b1)*b2*y2*z3 + 2*b1*(a2 + b2)*y2*z3 + (a1 + b1)*(a2 + b2)*y2*z3 + b1*b2*(a2 + b2)*y2*z3 + 4*b1*(b1 + c1)*y2*z3 + 4*(a1 + b1)*(b1 + c1)*y2*z3 + 6*b2*(b1 + c1)*y2*z3 + (a1 + b1)*b2*(b1 + c1)*y2*z3 + b2*(a2 + b2)*(b1 + c1)*y2*z3 + 3*b3*(b1 + c1)*y2*z3 + 2*b1*b3*(b1 + c1)*y2*z3 + (a1 + b1)*b3*(b1 + c1)*y2*z3 + b2*b3*(b1 + c1)*y2*z3 + 4*b1*(b2 + c2)*y2*z3 + 4*(a1 + b1)*(b2 + c2)*y2*z3 + (a1 + b1)*b2*(b2 + c2)*y2*z3 + 2*b1*b3*(b2 + c2)*y2*z3 + (a1 + b1)*b3*(b2 + c2)*y2*z3 + (a1 + b1)*b2*(b3 + c3)*y2*z3 + 2*b1*b3*(b3 + c3)*y2*z3 + (a1 + b1)*b3*(b3 + c3)*y2*z3 + x1*y2*z3 + 2*b1*x1*y2*z3 + (a1 + b1)*x1*y2*z3 + 6*b2*x1*y2*z3 + b1*b2*x1*y2*z3 + (a2 + b2)*x1*y2*z3 + b2*(a2 + b2)*x1*y2*z3 + 3*b3*x1*y2*z3 + b1*b3*x1*y2*z3 + 2*b2*b3*x1*y2*z3 + 2*b1*y1*y2*z3 + (a1 + b1)*y1*y2*z3 + 6*b2*y1*y2*z3 + b1*b2*y1*y2*z3 + 2*(a2 + b2)*y1*y2*z3 + b2*(a2 + b2)*y1*y2*z3 + 3*b3*y1*y2*z3 + b1*b3*y1*y2*z3 + 2*b2*b3*y1*y2*z3 + (a1 + b1)*b2*y3*z3 + b1*(a1 + b1)*b2*y3*z3 + b1*(a2 + b2)*y3*z3 + (a1 + b1)*(a2 + b2)*y3*z3 + 2*b1*b2*(a2 + b2)*y3*z3 + 6*b2*(b1 + c1)*y3*z3 + 2*(a2 + b2)*(b1 + c1)*y3*z3 + 4*b2*x1*y3*z3 + 3*(a2 + b2)*x1*y3*z3 + b2*b3*x1*y3*z3 + 8*b2*y1*y3*z3 + 5*(a2 + b2)*y1*y3*z3 + b2*(a2 + b2)*y1*y3*z3 + b2*b3*y1*y3*z3 + (a1 + b1)*b2*z1*z3 + b1*(a1 + b1)*b2*z1*z3 + b1*(a2 + b2)*z1*z3 + (a1 + b1)*(a2 + b2)*z1*z3 + b1*b2*(a2 + b2)*z1*z3 + 5*b2*(b1 + c1)*z1*z3 + (a2 + b2)*(b1 + c1)*z1*z3 + 2*b2*b3*(b1 + c1)*z1*z3 + 5*b2*(b2 + c2)*z1*z3 + (a2 + b2)*(b2 + c2)*z1*z3 + 2*b2*b3*(b2 + c2)*z1*z3 + 3*b2*(b3 + c3)*z1*z3 + (a2 + b2)*(b3 + c3)*z1*z3 + b2*b3*(b3 + c3)*z1*z3 + 2*b2*x1*z1*z3 + b1*b2*x1*z1*z3 + 2*(a2 + b2)*x1*z1*z3 + b2*(a2 + b2)*x1*z1*z3 + 2*b2*b3*x1*z1*z3 + 2*x2*z1*z3 + b1*x2*z1*z3 + (a1 + b1)*x2*z1*z3 + 5*b2*x2*z1*z3 + b1*b2*x2*z1*z3 + (a2 + b2)*x2*z1*z3 + b2*(a2 + b2)*x2*z1*z3 + 2*b3*x2*z1*z3 + b1*b3*x2*z1*z3 + 2*b2*b3*x2*z1*z3 + 6*b2*x3*z1*z3 + 3*(a2 + b2)*x3*z1*z3 + b2*b3*x3*z1*z3 + 3*b2*y1*z1*z3 + b1*b2*y1*z1*z3 + 2*(a2 + b2)*y1*z1*z3 + b2*(a2 + b2)*y1*z1*z3 + 2*b2*b3*y1*z1*z3 + y2*z1*z3 + b1*y2*z1*z3 + (a1 + b1)*y2*z1*z3 + 5*b2*y2*z1*z3 + b1*b2*y2*z1*z3 + (a2 + b2)*y2*z1*z3 + b2*(a2 + b2)*y2*z1*z3 + 2*b3*y2*z1*z3 + b1*b3*y2*z1*z3 + 2*b2*b3*y2*z1*z3 + 4*b2*y3*z1*z3 + 3*(a2 + b2)*y3*z1*z3 + b2*b3*y3*z1*z3 + (3*b2*z1*(1 + z1)*z3)/2 + (a2 + b2)*z1*(1 + z1)*z3 + (b2*(a2 + b2)*z1*(1 + z1)*z3)/2 + (3*b2*b3*z1*(1 + z1)*z3)/2 + (a1 + b1)*b2*z2*z3 + b1*(a1 + b1)*b2*z2*z3 + b1*(a2 + b2)*z2*z3 + (a1 + b1)*(a2 + b2)*z2*z3 + b1*b2*(a2 + b2)*z2*z3 + (b1 + c1)*z2*z3 + b1*(b1 + c1)*z2*z3 + 5*(a1 + b1)*(b1 + c1)*z2*z3 + 5*b2*(b1 + c1)*z2*z3 + b1*b2*(b1 + c1)*z2*z3 + (a1 + b1)*b2*(b1 + c1)*z2*z3 + (a2 + b2)*(b1 + c1)*z2*z3 + b2*(a2 + b2)*(b1 + c1)*z2*z3 + b1*b3*(b1 + c1)*z2*z3 + (a1 + b1)*b3*(b1 + c1)*z2*z3 + b2*b3*(b1 + c1)*z2*z3 + b1*(b2 + c2)*z2*z3 + 5*(a1 + b1)*(b2 + c2)*z2*z3 + b1*b2*(b2 + c2)*z2*z3 + (a1 + b1)*b2*(b2 + c2)*z2*z3 + b1*b3*(b2 + c2)*z2*z3 + (a1 + b1)*b3*(b2 + c2)*z2*z3 + b1*(b3 + c3)*z2*z3 + (a1 + b1)*(b3 + c3)*z2*z3 + b1*b2*(b3 + c3)*z2*z3 + (a1 + b1)*b2*(b3 + c3)*z2*z3 + b1*b3*(b3 + c3)*z2*z3 + (a1 + b1)*b3*(b3 + c3)*z2*z3 + 2*b1*x1*z2*z3 + (a1 + b1)*x1*z2*z3 + 3*b2*x1*z2*z3 + b1*b2*x1*z2*z3 + 2*(a2 + b2)*x1*z2*z3 + b2*(a2 + b2)*x1*z2*z3 + b3*x1*z2*z3 + b1*b3*x1*z2*z3 + 2*b2*b3*x1*z2*z3 + 5*y1*z2*z3 + 2*b1*y1*z2*z3 + (a1 + b1)*y1*z2*z3 + 5*b2*y1*z2*z3 + b1*b2*y1*z2*z3 + 2*(a2 + b2)*y1*z2*z3 + b2*(a2 + b2)*y1*z2*z3 + b3*y1*z2*z3 + b1*b3*y1*z2*z3 + 2*b2*b3*y1*z2*z3 + b1*z1*z2*z3 + (a1 + b1)*z1*z2*z3 + 4*b2*z1*z2*z3 + b1*b2*z1*z2*z3 + 2*(a2 + b2)*z1*z2*z3 + b2*(a2 + b2)*z1*z2*z3 + 2*b3*z1*z2*z3 + b1*b3*z1*z2*z3 + 2*b2*b3*z1*z2*z3 + ((a1 + b1)*b2*z3*(1 + z3))/2 + (b1*(a1 + b1)*b2*z3*(1 + z3))/2 + b1*(a2 + b2)*z3*(1 + z3) + ((a1 + b1)*(a2 + b2)*z3*(1 + z3))/2 + (b1*b2*(a2 + b2)*z3*(1 + z3))/2 + 2*b2*x1*z3*(1 + z3) + (a2 + b2)*x1*z3*(1 + z3) + (b2*b3*x1*z3*(1 + z3))/2 + 2*b1*x2*z3*(1 + z3) + 2*(a1 + b1)*x2*z3*(1 + z3) + b2*y1*z3*(1 + z3) + (3*(a2 + b2)*y1*z3*(1 + z3))/2 + (b2*b3*y1*z3*(1 + z3))/2 + 2*b1*y2*z3*(1 + z3) + 2*(a1 + b1)*y2*z3*(1 + z3) + 2*b2*z1*z3*(1 + z3) + (a2 + b2)*z1*z3*(1 + z3) + (b2*b3*z1*z3*(1 + z3))/2 + 2*(a1 + b1)*z2*z3*(1 + z3) + b1*b2*(x3 + y3 + z3) + ((a1 + b1)*b2 + b1*(a1 + b1)*b2 + b1*(a2 + b2) + (a1 + b1)*(a2 + b2) + b1*b2*(a2 + b2) + (b1 + c1)*(3*b2 + c2))*(x3 + y3 + z3);
end;
#####################################################################
#####################################################################
#Space Group No. 88 ( I4_1/a)
#####################################################################
Aiin88:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Aqin88:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Bdeltain88:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b1*b2 + a2*b1*b2 + b2*c1 + b1*c2 + c1*c2;
end;
#####################################################################
Bxyzin88:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*a2*b1 + a1*b2 + b1*b2 + a2*b1*b2 + a1*a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*b2*c1 + a1*b1*b2*c1 + a1*c2 + a1*b1*c2 + a2*b1*c2 + a1*b2*c2 + c1*c2 + b1*b2*c1*c2 + a2*b1*x1 + a1*a2*b1*x1 + a1*b2*x1 + a2*b2*x1 + a2*b1*b2*x1 + a1*a2*b1*b2*x1 + a2*c1*x1 + a2*b1*c1*x1 + a1*a2*b1*c1*x1 + a2*b2*c1*x1 + a1*a2*b2*c1*x1 + b1*b2*c1*x1 + c2*x1 + b1*c2*x1 + b2*c2*x1 + b1*x2 + a1*b1*x2 + a1*a2*b2*x2 + b1*b2*x2 + a2*b1*b2*x2 + a1*a2*b1*b2*x2 + a2*c1*x2 + b1*c1*x2 + a2*b1*c1*x2 + a2*b2*c1*x2 + a1*a2*b2*c1*x2 + a2*b1*b2*c1*x2 + a1*a2*b1*b2*c1*x2 + b1*c2*x2 + x1*x2 + b1*x1*x2 + a1*b1*x1*x2 + a2*b1*x1*x2 + a1*b1*b2*x1*x2 + a2*b1*b2*x1*x2 + a2*b1*y1 + a2*c1*y1 + b1*b2*c1*y1 + c2*y1 + b1*c2*y1 + b2*c2*y1 + x2*y1 + b1*x2*y1 + b1*y2 + a1*b1*y2 + a2*b1*y2 + a1*a2*b1*y2 + a1*b2*y2 + a1*a2*b2*y2 + b1*b2*y2 + a1*b1*b2*y2 + a2*b1*b2*y2 + c1*y2 + a2*c1*y2 + b1*c1*y2 + a1*a2*b1*c1*y2 + a2*b1*b2*c1*y2 + a1*a2*b1*b2*c1*y2 + b1*c2*y2 + x1*y2 + b1*x1*y2 + a1*b1*x1*y2 + a2*b1*x1*y2 + a1*b1*b2*x1*y2 + a2*b1*b2*x1*y2 + a1*b1*x2*y2 + a2*b1*x2*y2 + a1*b1*b2*x2*y2 + a2*b1*b2*x2*y2 + y1*y2 + b1*y1*y2 + b1*b2*z1 + a2*b2*c1*z1 + a1*a2*b2*c1*z1 + a2*b1*b2*c1*z1 + a1*a2*b1*b2*c1*z1 + c2*z1 + b1*c2*z1 + b2*c2*z1 + a2*b1*x1*z1 + a1*b2*x1*z1 + a2*b2*x1*z1 + x2*z1 + a1*b1*x2*z1 + a1*a2*b1*x2*z1 + a2*b2*x2*z1 + a1*a2*b2*x2*z1 + a1*b1*b2*x2*z1 + a2*b1*b2*x2*z1 + y2*z1 + a2*b1*y2*z1 + a1*a2*b1*y2*z1 + a1*b2*y2*z1 + a1*a2*b2*y2*z1 + a1*b1*b2*y2*z1 + a2*b1*b2*y2*z1 + a1*z2 + a2*b1*z2 + a1*a2*b1*z2 + a1*b1*b2*z2 + a1*a2*b1*b2*z2 + c1*z2 + b1*c1*z2 + a2*b1*c1*z2 + a2*b2*c1*z2 + a1*a2*b2*c1*z2 + b1*b2*c1*z2 + a2*b1*b2*c1*z2 + a1*a2*b1*b2*c1*z2 + b1*c2*z2 + b1*x1*z2 + a1*b2*x1*z2 + a2*b2*x1*z2 + a1*b1*b2*x1*z2 + a2*b1*b2*x1*z2 + b1*x2*z2 + a1*b1*x2*z2 + a1*a2*b1*x2*z2 + a1*a2*b2*x2*z2 + a1*b1*b2*x2*z2 + a2*b1*b2*x2*z2 + b1*y1*z2 + b1*y2*z2 + a1*b1*y2*z2 + a1*a2*b1*y2*z2 + a1*b2*y2*z2 + a1*a2*b2*y2*z2 + z1*z2 + a1*b1*z1*z2 + a1*a2*b1*z1*z2 + a1*b2*z1*z2 + a1*a2*b2*z1*z2;
end;
#####################################################################
Cin88:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a2*b1*b2*b3 + a1*a2*b1*b2*b3 + a1*a2*a3*c1 + a2*a3*b1*c1 + a1*a2*a3*b1*c1 + a3*b1*b2*c1 + a1*a3*b1*b2*c1 + a2*b1*b3*c1 + a1*a2*b2*b3*c1 + a2*b1*b2*b3*c1 + a3*b1*b2*b3*c1 + a1*a2*a3*c2 + a1*a2*a3*b1*c2 + a1*a3*b2*c2 + a1*a2*a3*b2*c2 + a3*b1*b2*c2 + a1*a2*b3*c2 + a1*b1*b3*c2 + a1*a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a2*a3*b1*b3*c2 + a1*b2*b3*c2 + a1*a2*b2*b3*c2 + a1*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a1*a3*b1*b2*b3*c2 + a2*a3*b1*b2*b3*c2 + a1*a2*a3*c1*c2 + a3*b1*c1*c2 + a1*a3*b1*c1*c2 + a3*b2*c1*c2 + a1*a3*b2*c1*c2 + a2*a3*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a2*b3*c1*c2 + a1*a2*b3*c1*c2 + a1*a3*b3*c1*c2 + a2*a3*b3*c1*c2 + a1*b1*b3*c1*c2 + a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + a1*b2*b3*c1*c2 + a2*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + a2*a3*b2*b3*c1*c2 + b3*(a1*a2 + a1*b1*b2 + a2*b1*b2 + b2*c1 + b1*c2 + c1*c2) + a1*a2*b1*c3 + a1*a2*a3*b1*c3 + a1*a2*a3*b2*c3 + a1*b1*b2*c3 + a2*b1*b2*c3 + a3*b1*b2*c3 + a1*b2*b3*c3 + a1*b1*b2*b3*c3 + a2*b1*b2*b3*c3 + a1*a2*b1*b2*b3*c3 + a3*b1*b2*b3*c3 + a1*a3*b1*b2*b3*c3 + a1*a2*a3*c1*c3 + a2*b1*c1*c3 + a1*a2*b1*c1*c3 + b1*b2*c1*c3 + a1*b1*b2*c1*c3 + a1*a3*b1*b2*c1*c3 + a1*a2*b2*b3*c1*c3 + a1*a3*b2*b3*c1*c3 + b1*b2*b3*c1*c3 + a1*c2*c3 + a1*a2*a3*c2*c3 + a1*b1*c2*c3 + a3*b1*c2*c3 + a1*a3*b1*c2*c3 + a1*b2*c2*c3 + a2*a3*b1*b2*c2*c3 + a1*b3*c2*c3 + a1*a2*b3*c2*c3 + a2*b1*b3*c2*c3 + a1*a2*b1*b3*c2*c3 + a3*b1*b3*c2*c3 + a1*a3*b1*b3*c2*c3 + a1*b2*b3*c2*c3 + a1*a2*b2*b3*c2*c3 + b1*b2*b3*c2*c3 + a2*c1*c2*c3 + a2*a3*c1*c2*c3 + a2*a3*b1*c1*c2*c3 + b2*c1*c2*c3 + a3*b2*c1*c2*c3 + a2*a3*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + a1*b3*c1*c2*c3 + a2*b3*c1*c2*c3 + a1*a2*b3*c1*c2*c3 + a1*a3*b3*c1*c2*c3 + b2*b3*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + a2*b2*b3*c1*c2*c3 + b1*b2*b3*c1*c2*c3 + a1*b1*b2*b3*c1*c2*c3 + a3*b2*x1 + a1*a3*b1*b2*x1 + a2*a3*b1*b2*x1 + a1*a2*a3*b1*b2*x1 + a2*b1*b3*x1 + a1*a3*b2*b3*x1 + a2*a3*b2*b3*x1 + b1*b2*b3*x1 + a2*a3*c1*x1 + a2*a3*b1*c1*x1 + a1*a3*b2*c1*x1 + a2*a3*b2*c1*x1 + a1*a2*a3*b2*c1*x1 + a3*b1*b2*c1*x1 + a2*b1*b3*c1*x1 + b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a1*b1*b2*b3*c1*x1 + a2*b1*b2*b3*c1*x1 + a3*b1*b2*b3*c1*x1 + a1*a2*a3*c2*x1 + a3*b1*c2*x1 + a1*a3*b1*c2*x1 + a2*a3*b1*c2*x1 + a3*b2*c2*x1 + a1*a3*b2*c2*x1 + a1*a2*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + a1*b3*c2*x1 + a2*b3*c2*x1 + a1*a2*b3*c2*x1 + a3*b3*c2*x1 + a2*a3*b3*c2*x1 + b1*b3*c2*x1 + a1*b1*b3*c2*x1 + a2*b1*b3*c2*x1 + a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a1*b2*b3*c2*x1 + a2*b2*b3*c2*x1 + a3*b2*b3*c2*x1 + a3*c1*c2*x1 + a1*a3*c1*c2*x1 + a1*b3*c1*c2*x1 + b1*b3*c1*c2*x1 + a1*b1*b3*c1*c2*x1 + b2*b3*c1*c2*x1 + a1*b2*b3*c1*c2*x1 + a2*c3*x1 + a1*a2*c3*x1 + a2*a3*c3*x1 + a1*a2*b1*c3*x1 + a2*a3*b1*c3*x1 + a1*b2*c3*x1 + a2*b2*c3*x1 + b1*b2*c3*x1 + a1*b2*b3*c3*x1 + a3*b2*b3*c3*x1 + a2*b1*b2*b3*c3*x1 + a3*b1*b2*b3*c3*x1 + b2*c1*c3*x1 + a1*b2*c1*c3*x1 + a1*b1*b2*c1*c3*x1 + b1*b2*b3*c1*c3*x1 + a3*c2*c3*x1 + a1*a3*c2*c3*x1 + a2*a3*c2*c3*x1 + b1*c2*c3*x1 + b2*c2*c3*x1 + a3*b1*b2*c2*c3*x1 + b3*c2*c3*x1 + a1*b3*c2*c3*x1 + a2*b3*c2*c3*x1 + a3*b3*c2*c3*x1 + a1*b1*b3*c2*c3*x1 + a2*b1*b3*c2*c3*x1 + a3*b1*b3*c2*c3*x1 + b2*b3*c2*c3*x1 + a1*b2*b3*c2*c3*x1 + a2*b2*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + (a3*b2*x1*(1 + x1))/2 + (a3*b1*b2*x1*(1 + x1))/2 + (a2*b3*x1*(1 + x1))/2 + (b2*b3*x1*(1 + x1))/2 + (a1*b2*b3*x1*(1 + x1))/2 + (a2*b2*b3*x1*(1 + x1))/2 + (a3*b2*b3*x1*(1 + x1))/2 + (b3*c2*x1*(1 + x1))/2 + (b1*b3*c2*x1*(1 + x1))/2 + (b2*c3*x1*(1 + x1))/2 + (b1*b2*c3*x1*(1 + x1))/2 + (b2*b3*c3*x1*(1 + x1))/2 + a3*b1*b2*x2 + a2*a3*b1*b2*x2 + a1*b3*x2 + a1*b1*b3*x2 + a3*b1*b3*x2 + a1*b2*b3*x2 + b1*b2*b3*x2 + a1*b1*b2*b3*x2 + a2*b1*b2*b3*x2 + a3*b1*b2*b3*x2 + a3*c1*x2 + a1*a3*c1*x2 + a2*a3*c1*x2 + a3*b1*c1*x2 + a1*a3*b1*c1*x2 + a2*a3*b2*c1*x2 + b3*c1*x2 + a1*b3*c1*x2 + a3*b3*c1*x2 + b1*b3*c1*x2 + a1*b1*b3*c1*x2 + b2*b3*c1*x2 + a2*b2*b3*c1*x2 + a3*b2*b3*c1*x2 + a3*b1*c2*x2 + b1*b3*c2*x2 + a1*b2*b3*c2*x2 + a1*b1*b2*b3*c2*x2 + a1*a3*c1*c2*x2 + a3*b1*c1*c2*x2 + a1*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a1*b2*b3*c1*c2*x2 + b1*b2*b3*c1*c2*x2 + a1*c3*x2 + a1*a2*c3*x2 + b1*c3*x2 + a2*b1*c3*x2 + a1*a2*b1*c3*x2 + a1*b2*c3*x2 + a1*b1*b2*c3*x2 + b1*b3*c3*x2 + b1*b2*b3*c3*x2 + a2*c1*c3*x2 + a1*a2*c1*c3*x2 + a3*c1*c3*x2 + a1*a3*c1*c3*x2 + b1*c1*c3*x2 + a2*b1*c1*c3*x2 + a3*b1*c1*c3*x2 + b2*c1*c3*x2 + a1*b2*c1*c3*x2 + b1*b2*c1*c3*x2 + b3*c1*c3*x2 + a1*b1*b3*c1*c3*x2 + a1*b2*b3*c1*c3*x2 + b1*b2*b3*c1*c3*x2 + a1*b3*c2*c3*x2 + b1*b3*c2*c3*x2 + a1*b1*b3*c2*c3*x2 + a3*x1*x2 + a1*a3*x1*x2 + a1*a2*a3*x1*x2 + a2*a3*b1*x1*x2 + a1*a3*b2*x1*x2 + a2*a3*b1*b2*x1*x2 + a1*b3*x1*x2 + a3*b3*x1*x2 + a2*b2*b3*x1*x2 + a3*b2*b3*x1*x2 + a3*c2*x1*x2 + a3*b1*c2*x1*x2 + b3*c2*x1*x2 + b1*b3*c2*x1*x2 + b2*b3*c2*x1*x2 + b1*b2*b3*c2*x1*x2 + a1*c3*x1*x2 + a2*c3*x1*x2 + a3*c3*x1*x2 + b2*c3*x1*x2 + a1*b2*c3*x1*x2 + a2*b1*x3 + a2*a3*b1*x3 + a2*b1*b2*x3 + a2*a3*b1*b2*x3 + a2*c1*x3 + a2*a3*c1*x3 + b2*c1*x3 + a2*b2*c1*x3 + a3*b2*c1*x3 + a2*a3*b2*c1*x3 + a1*c2*x3 + a1*a2*c2*x3 + a1*a3*c2*x3 + a1*a3*b1*c2*x3 + a1*b2*c2*x3 + a1*a2*b2*c2*x3 + a1*a3*b2*c2*x3 + a1*b3*c2*x3 + a1*b1*b3*c2*x3 + a1*b2*b3*c2*x3 + a1*a3*c1*c2*x3 + b1*c1*c2*x3 + a2*b1*c1*c2*x3 + a3*b1*c1*c2*x3 + b1*b2*c1*c2*x3 + a2*b1*b2*c1*c2*x3 + a3*b1*b2*c1*c2*x3 + a1*b3*c1*c2*x3 + b1*b3*c1*c2*x3 + b1*b2*b3*c1*c2*x3 + a1*a2*c3*x3 + a1*b2*c3*x3 + a1*a2*b2*c3*x3 + b1*b2*c3*x3 + a3*b1*b2*c3*x3 + b1*b2*b3*c3*x3 + a2*b1*c1*c3*x3 + b2*c1*c3*x3 + a3*b2*c1*c3*x3 + b1*b2*c1*c3*x3 + a2*b1*b2*c1*c3*x3 + b2*b3*c1*c3*x3 + a1*a3*c2*c3*x3 + b1*c2*c3*x3 + a3*b1*c2*c3*x3 + a3*b1*b2*c2*c3*x3 + a1*b3*c2*c3*x3 + b1*b3*c2*c3*x3 + b1*b2*b3*c2*c3*x3 + a1*a2*x1*x3 + a1*a2*a3*x1*x3 + b2*x1*x3 + a1*b2*x1*x3 + a2*b2*x1*x3 + a1*a2*b2*x1*x3 + a3*b2*x1*x3 + a1*a3*b2*x1*x3 + b1*b2*x1*x3 + a3*b1*b2*x1*x3 + a2*b2*b3*x1*x3 + a1*a2*b2*b3*x1*x3 + a3*c2*x1*x3 + a3*b1*c2*x1*x3 + b3*c2*x1*x3 + b1*b3*c2*x1*x3 + a3*b2*c3*x1*x3 + b2*b3*c3*x1*x3 + a3*b2*y1 + a3*b1*b2*y1 + a1*a3*b1*b2*y1 + a1*a2*a3*b1*b2*y1 + a2*b1*b3*y1 + b2*b3*y1 + a3*b2*b3*y1 + a1*a3*b2*b3*y1 + a2*a3*b2*b3*y1 + b1*b2*b3*y1 + a2*a3*c1*y1 + a2*a3*b1*c1*y1 + a3*b2*c1*y1 + a1*a3*b2*c1*y1 + a1*a2*a3*b2*c1*y1 + a3*b1*b2*c1*y1 + a2*b1*b3*c1*y1 + a1*b1*b2*b3*c1*y1 + a2*b1*b2*b3*c1*y1 + a3*b1*b2*b3*c1*y1 + a2*a3*c2*y1 + a1*a2*a3*c2*y1 + a1*a3*b1*c2*y1 + a2*a3*b1*c2*y1 + a1*a3*b2*c2*y1 + a2*a3*b2*c2*y1 + a1*a2*a3*b2*c2*y1 + a3*b1*b2*c2*y1 + b3*c2*y1 + a1*b3*c2*y1 + a1*a2*b3*c2*y1 + a3*b3*c2*y1 + a2*a3*b3*c2*y1 + b1*b3*c2*y1 + a1*b1*b3*c2*y1 + a2*b1*b3*c2*y1 + a3*b1*b3*c2*y1 + b2*b3*c2*y1 + a1*b2*b3*c2*y1 + a2*b2*b3*c2*y1 + a3*b2*b3*c2*y1 + a1*a3*c1*c2*y1 + a1*b3*c1*c2*y1 + a1*b1*b3*c1*c2*y1 + a1*b2*b3*c1*c2*y1 + a2*c3*y1 + a1*a2*c3*y1 + a2*a3*c3*y1 + a2*b1*c3*y1 + a1*a2*b1*c3*y1 + a2*a3*b1*c3*y1 + a1*b2*c3*y1 + a2*b2*c3*y1 + b2*b3*c3*y1 + a1*b2*b3*c3*y1 + a3*b2*b3*c3*y1 + a2*b1*b2*b3*c3*y1 + a3*b1*b2*b3*c3*y1 + b2*c1*c3*y1 + a1*b2*c1*c3*y1 + b1*b2*c1*c3*y1 + a1*b1*b2*c1*c3*y1 + b1*b2*b3*c1*c3*y1 + a1*a3*c2*c3*y1 + a2*a3*c2*c3*y1 + b1*c2*c3*y1 + b2*c2*c3*y1 + a3*b1*b2*c2*c3*y1 + b3*c2*c3*y1 + a1*b3*c2*c3*y1 + a2*b3*c2*c3*y1 + a3*b3*c2*c3*y1 + b1*b3*c2*c3*y1 + a1*b1*b3*c2*c3*y1 + a2*b1*b3*c2*c3*y1 + a3*b1*b3*c2*c3*y1 + a1*b2*b3*c2*c3*y1 + a2*b2*b3*c2*c3*y1 + b1*b2*b3*c2*c3*y1 + a2*a3*x1*y1 + a2*b3*x1*y1 + a2*b2*b3*x1*y1 + a3*b2*b3*x1*y1 + b1*b2*b3*x1*y1 + b3*c2*x1*y1 + b1*b3*c2*x1*y1 + b1*b2*c3*x1*y1 + b2*b3*c3*x1*y1 + a1*a3*x2*y1 + a2*a3*x2*y1 + a1*a2*a3*x2*y1 + a2*a3*b1*x2*y1 + a3*b2*x2*y1 + a1*a3*b2*x2*y1 + a2*a3*b1*b2*x2*y1 + b3*x2*y1 + a1*b3*x2*y1 + a3*b3*x2*y1 + a2*b2*b3*x2*y1 + a3*b2*b3*x2*y1 + a3*c2*x2*y1 + a3*b1*c2*x2*y1 + b3*c2*x2*y1 + b1*b3*c2*x2*y1 + b2*b3*c2*x2*y1 + b1*b2*b3*c2*x2*y1 + c3*x2*y1 + a1*c3*x2*y1 + a2*c3*x2*y1 + a3*c3*x2*y1 + a1*b2*c3*x2*y1 + a2*x3*y1 + a1*a2*x3*y1 + a2*a3*x3*y1 + a1*a2*a3*x3*y1 + a1*b2*x3*y1 + a1*a2*b2*x3*y1 + a1*a3*b2*x3*y1 + b1*b2*x3*y1 + a3*b1*b2*x3*y1 + a1*a2*b2*b3*x3*y1 + a3*c2*x3*y1 + a3*b1*c2*x3*y1 + b3*c2*x3*y1 + b1*b3*c2*x3*y1 + a3*b2*c3*x3*y1 + b2*b3*c3*x3*y1 + (a3*b2*y1*(1 + y1))/2 + (a3*b1*b2*y1*(1 + y1))/2 + (a2*b3*y1*(1 + y1))/2 + (a1*b2*b3*y1*(1 + y1))/2 + (a2*b2*b3*y1*(1 + y1))/2 + (a3*b2*b3*y1*(1 + y1))/2 + (b3*c2*y1*(1 + y1))/2 + (b1*b3*c2*y1*(1 + y1))/2 + (b2*c3*y1*(1 + y1))/2 + (b1*b2*c3*y1*(1 + y1))/2 + (b2*b3*c3*y1*(1 + y1))/2 + a1*b3*y2 + a1*b1*b3*y2 + a3*b1*b3*y2 + a1*b2*b3*y2 + a1*b1*b2*b3*y2 + a2*b1*b2*b3*y2 + a3*b1*b2*b3*y2 + a3*c1*y2 + a1*a3*c1*y2 + a2*a3*c1*y2 + a1*a3*b1*c1*y2 + a3*b2*c1*y2 + b3*c1*y2 + a1*b3*c1*y2 + a3*b3*c1*y2 + a1*b1*b3*c1*y2 + b2*b3*c1*y2 + a2*b2*b3*c1*y2 + a3*b2*b3*c1*y2 + a1*b2*b3*c2*y2 + a1*b1*b2*b3*c2*y2 + a1*a3*c1*c2*y2 + a3*b1*c1*c2*y2 + a1*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a1*b2*b3*c1*c2*y2 + b1*b2*b3*c1*c2*y2 + a1*c3*y2 + a1*a2*c3*y2 + a1*b1*c3*y2 + a1*a2*b1*c3*y2 + a1*b2*c3*y2 + a1*b1*b2*c3*y2 + b1*b3*c3*y2 + b1*b2*b3*c3*y2 + c1*c3*y2 + a1*c1*c3*y2 + a1*a2*c1*c3*y2 + a1*a3*c1*c3*y2 + b1*c1*c3*y2 + a2*b1*c1*c3*y2 + a3*b1*c1*c3*y2 + b2*c1*c3*y2 + a1*b2*c1*c3*y2 + b1*b2*c1*c3*y2 + b3*c1*c3*y2 + b1*b3*c1*c3*y2 + a1*b1*b3*c1*c3*y2 + b2*b3*c1*c3*y2 + a1*b2*b3*c1*c3*y2 + b1*b2*b3*c1*c3*y2 + a1*b3*c2*c3*y2 + a1*b1*b3*c2*c3*y2 + a3*x1*y2 + a1*a3*x1*y2 + a2*a3*x1*y2 + a1*a2*a3*x1*y2 + a3*b1*x1*y2 + a2*a3*b1*x1*y2 + a3*b2*x1*y2 + a1*a3*b2*x1*y2 + a3*b1*b2*x1*y2 + a2*a3*b1*b2*x1*y2 + b3*x1*y2 + a1*b3*x1*y2 + a3*b3*x1*y2 + b2*b3*x1*y2 + a1*b2*b3*x1*y2 + a2*b2*b3*x1*y2 + a3*b2*b3*x1*y2 + a3*c2*x1*y2 + a3*b1*c2*x1*y2 + b3*c2*x1*y2 + b1*b3*c2*x1*y2 + b2*b3*c2*x1*y2 + b1*b2*b3*c2*x1*y2 + a1*c3*x1*y2 + a2*c3*x1*y2 + a3*c3*x1*y2 + a1*b2*c3*x1*y2 + a1*a3*y1*y2 + a1*a2*a3*y1*y2 + a3*b1*y1*y2 + a2*a3*b1*y1*y2 + a1*a3*b2*y1*y2 + a3*b1*b2*y1*y2 + a2*a3*b1*b2*y1*y2 + a1*b3*y1*y2 + a3*b3*y1*y2 + a1*b2*b3*y1*y2 + a2*b2*b3*y1*y2 + a3*b2*b3*y1*y2 + a3*c2*y1*y2 + a3*b1*c2*y1*y2 + b3*c2*y1*y2 + b1*b3*c2*y1*y2 + b2*b3*c2*y1*y2 + b1*b2*b3*c2*y1*y2 + c3*y1*y2 + a1*c3*y1*y2 + a2*c3*y1*y2 + a3*c3*y1*y2 + b2*c3*y1*y2 + a1*b2*c3*y1*y2 + a1*c2*y3 + a1*a2*c2*y3 + a1*a3*c2*y3 + a1*b1*c2*y3 + a1*a3*b1*c2*y3 + a1*b2*c2*y3 + a1*a2*b2*c2*y3 + a1*a3*b2*c2*y3 + a1*b3*c2*y3 + a1*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + a1*c1*c2*y3 + a1*a3*c1*c2*y3 + b1*c1*c2*y3 + a2*b1*c1*c2*y3 + a3*b1*c1*c2*y3 + b1*b2*c1*c2*y3 + a2*b1*b2*c1*c2*y3 + a3*b1*b2*c1*c2*y3 + a1*b3*c1*c2*y3 + b1*b3*c1*c2*y3 + b1*b2*b3*c1*c2*y3 + a1*a2*c3*y3 + a1*a2*b2*c3*y3 + b1*b2*c3*y3 + a3*b1*b2*c3*y3 + b1*b2*b3*c3*y3 + a2*b1*c1*c3*y3 + b2*c1*c3*y3 + a3*b2*c1*c3*y3 + a2*b1*b2*c1*c3*y3 + b2*b3*c1*c3*y3 + a1*c2*c3*y3 + a1*a3*c2*c3*y3 + b1*c2*c3*y3 + a3*b1*c2*c3*y3 + b1*b2*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + a1*b3*c2*c3*y3 + b1*b3*c2*c3*y3 + b1*b2*b3*c2*c3*y3 + a2*a3*x1*y3 + a1*a2*a3*x1*y3 + b2*x1*y3 + a1*b2*x1*y3 + a2*b2*x1*y3 + a1*a2*b2*x1*y3 + a3*b2*x1*y3 + a1*a3*b2*x1*y3 + b2*b3*x1*y3 + a1*b2*b3*x1*y3 + a2*b2*b3*x1*y3 + a1*a2*b2*b3*x1*y3 + c2*x1*y3 + a3*c2*x1*y3 + b1*c2*x1*y3 + a3*b1*c2*x1*y3 + b3*c2*x1*y3 + b1*b3*c2*x1*y3 + b2*c3*x1*y3 + a3*b2*c3*x1*y3 + b2*b3*c3*x1*y3 + a1*a2*a3*y1*y3 + a1*b2*y1*y3 + a1*a2*b2*y1*y3 + a1*a3*b2*y1*y3 + a1*b2*b3*y1*y3 + a1*a2*b2*b3*y1*y3 + c2*y1*y3 + a3*c2*y1*y3 + b1*c2*y1*y3 + a3*b1*c2*y1*y3 + b3*c2*y1*y3 + b1*b3*c2*y1*y3 + b2*c3*y1*y3 + a3*b2*c3*y1*y3 + b2*b3*c3*y1*y3 + a1*a3*b1*b2*z1 + a2*a3*b1*b2*z1 + a1*a2*a3*b1*b2*z1 + a1*b2*b3*z1 + a2*b2*b3*z1 + a1*a3*b2*b3*z1 + a2*a3*b2*b3*z1 + a2*b1*b2*b3*z1 + a2*a3*b1*c1*z1 + a1*a3*b2*c1*z1 + a1*a2*a3*b2*c1*z1 + a2*a3*b1*b2*c1*z1 + a2*b3*c1*z1 + a2*b1*b3*c1*z1 + a1*b2*b3*c1*z1 + a2*b2*b3*c1*z1 + a3*b2*b3*c1*z1 + a1*b1*b2*b3*c1*z1 + a2*b1*b2*b3*c1*z1 + a3*b1*b2*b3*c1*z1 + a1*a2*a3*c2*z1 + a3*b1*c2*z1 + a1*a3*b1*c2*z1 + a3*b2*c2*z1 + a1*a3*b2*c2*z1 + a2*a3*b2*c2*z1 + a1*a2*a3*b2*c2*z1 + a2*a3*b1*b2*c2*z1 + a2*b3*c2*z1 + a1*a2*b3*c2*z1 + a2*a3*b3*c2*z1 + b1*b3*c2*z1 + a3*b1*b3*c2*z1 + b2*b3*c2*z1 + a2*b2*b3*c2*z1 + a3*b2*b3*c2*z1 + a1*a3*c1*c2*z1 + a3*b1*c1*c2*z1 + b1*b3*c1*c2*z1 + a1*b1*b3*c1*c2*z1 + a1*b2*b3*c1*c2*z1 + b1*b2*b3*c1*c2*z1 + a1*a2*b1*c3*z1 + a2*a3*b1*c3*z1 + a1*b2*c3*z1 + a2*b2*c3*z1 + a1*b1*b2*c3*z1 + a1*b2*b3*c3*z1 + a2*b2*b3*c3*z1 + a2*b1*b2*b3*c3*z1 + a3*b1*b2*b3*c3*z1 + a1*b1*b2*c1*c3*z1 + b2*b3*c1*c3*z1 + b1*b2*b3*c1*c3*z1 + c2*c3*z1 + a1*a3*c2*c3*z1 + a2*a3*c2*c3*z1 + b1*c2*c3*z1 + a3*b1*c2*c3*z1 + b2*c2*c3*z1 + a3*b2*c2*c3*z1 + a3*b1*b2*c2*c3*z1 + a1*b1*b3*c2*c3*z1 + a2*b1*b3*c2*c3*z1 + a3*b1*b3*c2*c3*z1 + b2*b3*c2*c3*z1 + a1*b2*b3*c2*c3*z1 + a2*b2*b3*c2*c3*z1 + a2*a3*b1*x1*z1 + a1*a3*b2*x1*z1 + a2*a3*b2*x1*z1 + a3*b1*b2*x1*z1 + a2*b3*x1*z1 + a1*b2*b3*x1*z1 + a2*b2*b3*x1*z1 + a3*b2*b3*x1*z1 + b1*b2*b3*x1*z1 + a1*b1*b2*b3*x1*z1 + a3*c2*x1*z1 + b2*b3*c2*x1*z1 + b1*b2*c3*x1*z1 + b2*b3*c3*x1*z1 + a1*a3*x2*z1 + a1*a2*a3*x2*z1 + a3*b1*x2*z1 + a3*b2*x2*z1 + a1*a3*b2*x2*z1 + a2*a3*b2*x2*z1 + a3*b1*b2*x2*z1 + a2*a3*b1*b2*x2*z1 + b3*x2*z1 + a1*b3*x2*z1 + a3*b3*x2*z1 + b1*b3*x2*z1 + a2*b2*b3*x2*z1 + a3*b2*b3*x2*z1 + a3*b1*c2*x2*z1 + b1*b3*c2*x2*z1 + b1*b2*b3*c2*x2*z1 + c3*x2*z1 + a1*c3*x2*z1 + a2*c3*x2*z1 + a3*c3*x2*z1 + b1*c3*x2*z1 + a1*b2*c3*x2*z1 + b1*b2*c3*x2*z1 + a2*x3*z1 + a1*a2*x3*z1 + a2*a3*x3*z1 + a1*a2*a3*x3*z1 + a2*b1*x3*z1 + a2*a3*b1*x3*z1 + b2*x3*z1 + a1*b2*x3*z1 + a1*a2*b2*x3*z1 + a3*b2*x3*z1 + a1*a3*b2*x3*z1 + a2*b1*b2*x3*z1 + a1*a2*b2*b3*x3*z1 + a2*b1*b2*b3*x3*z1 + a3*b1*c2*x3*z1 + b1*b3*c2*x3*z1 + a3*b2*c3*x3*z1 + b2*b3*c3*x3*z1 + a2*a3*y1*z1 + a2*a3*b1*y1*z1 + a1*a3*b2*y1*z1 + a2*a3*b2*y1*z1 + a2*b3*y1*z1 + b2*b3*y1*z1 + a2*b2*b3*y1*z1 + a3*b2*b3*y1*z1 + b1*b2*b3*y1*z1 + a1*b1*b2*b3*y1*z1 + a3*c2*y1*z1 + b2*b3*c2*y1*z1 + b2*c3*y1*z1 + b1*b2*c3*y1*z1 + b2*b3*c3*y1*z1 + a3*y2*z1 + a1*a3*y2*z1 + a2*a3*y2*z1 + a1*a2*a3*y2*z1 + a3*b2*y2*z1 + a1*a3*b2*y2*z1 + a2*a3*b2*y2*z1 + a2*a3*b1*b2*y2*z1 + a1*b3*y2*z1 + a3*b3*y2*z1 + b1*b3*y2*z1 + a1*b2*b3*y2*z1 + a2*b2*b3*y2*z1 + a3*b2*b3*y2*z1 + b1*b2*b3*y2*z1 + a3*b1*c2*y2*z1 + b1*b3*c2*y2*z1 + b1*b2*b3*c2*y2*z1 + c3*y2*z1 + a1*c3*y2*z1 + a2*c3*y2*z1 + a3*c3*y2*z1 + b1*c3*y2*z1 + b2*c3*y2*z1 + a1*b2*c3*y2*z1 + b1*b2*c3*y2*z1 + a1*a2*a3*y3*z1 + a2*a3*b1*y3*z1 + a1*b2*y3*z1 + a1*a2*b2*y3*z1 + a1*a3*b2*y3*z1 + b1*b2*y3*z1 + a2*b1*b2*y3*z1 + a3*b1*b2*y3*z1 + a1*b2*b3*y3*z1 + a1*a2*b2*b3*y3*z1 + b1*b2*b3*y3*z1 + a2*b1*b2*b3*y3*z1 + b1*c2*y3*z1 + a3*b1*c2*y3*z1 + b1*b3*c2*y3*z1 + b2*c3*y3*z1 + a3*b2*c3*y3*z1 + b2*b3*c3*y3*z1 + (a3*b1*b2*z1*(1 + z1))/2 + (a2*b3*z1*(1 + z1))/2 + (a1*b2*b3*z1*(1 + z1))/2 + (a2*b2*b3*z1*(1 + z1))/2 + (a3*b2*b3*z1*(1 + z1))/2 + (b1*b2*b3*z1*(1 + z1))/2 + (b1*b3*c2*z1*(1 + z1))/2 + (b1*b2*c3*z1*(1 + z1))/2 + (b2*b3*c3*z1*(1 + z1))/2 + a1*b1*b2*b3*z2 + a1*a3*b1*c1*z2 + a1*b1*b3*c1*z2 + a1*b1*b3*c2*z2 + a1*b1*b2*b3*c2*z2 + a1*a3*c1*c2*z2 + a1*b2*b3*c1*c2*z2 + a1*a2*b1*c3*z2 + a1*a2*c1*c3*z2 + a1*a3*c1*c3*z2 + a1*b1*b3*c1*c3*z2 + a1*b2*b3*c1*c3*z2 + a1*b1*b3*c2*c3*z2 + a1*a2*a3*x1*z2 + a2*a3*b1*x1*z2 + a2*a3*b2*x1*z2 + a2*a3*b1*b2*x1*z2 + a2*b3*x1*z2 + a1*b2*b3*x1*z2 + a2*b2*b3*x1*z2 + a3*b2*b3*x1*z2 + b1*b2*b3*x1*z2 + a3*c2*x1*z2 + a3*b1*c2*x1*z2 + b2*b3*c2*x1*z2 + b1*b2*b3*c2*x1*z2 + a1*b2*c3*x1*z2 + b1*b2*c3*x1*z2 + b2*b3*c3*x1*z2 + a2*a3*y1*z2 + a1*a2*a3*y1*z2 + a2*a3*b1*y1*z2 + a2*a3*b2*y1*z2 + a2*a3*b1*b2*y1*z2 + a2*b3*y1*z2 + b2*b3*y1*z2 + a1*b2*b3*y1*z2 + a2*b2*b3*y1*z2 + a3*b2*b3*y1*z2 + b1*b2*b3*y1*z2 + a3*c2*y1*z2 + a3*b1*c2*y1*z2 + b2*b3*c2*y1*z2 + b1*b2*b3*c2*y1*z2 + b2*c3*y1*z2 + a1*b2*c3*y1*z2 + b1*b2*c3*y1*z2 + b2*b3*c3*y1*z2 + a1*a2*a3*z1*z2 + a2*a3*b1*b2*z1*z2 + a2*b3*z1*z2 + a1*b2*b3*z1*z2 + a2*b2*b3*z1*z2 + a3*b2*b3*z1*z2 + a3*b1*c2*z1*z2 + b1*b2*b3*c2*z1*z2 + a1*b2*c3*z1*z2 + b2*b3*c3*z1*z2 + a1*a3*b1*c2*z3 + a1*a2*b2*c2*z3 + a1*a3*b2*c2*z3 + a1*a3*c1*c2*z3 + a2*b1*b2*c1*c2*z3 + a3*b1*b2*c1*c2*z3 + a1*a2*b2*c3*z3 + a2*b1*b2*c1*c3*z3 + a1*a3*c2*c3*z3 + a3*b1*b2*c2*c3*z3 + a2*a3*x1*z3 + a1*a2*a3*x1*z3 + a2*b2*b3*x1*z3 + a1*a2*b2*b3*x1*z3 + a3*c2*x1*z3 + a3*b1*c2*x1*z3 + a3*b2*c3*x1*z3 + a1*a2*a3*y1*z3 + a1*a2*b2*b3*y1*z3 + a3*c2*y1*z3 + a3*b1*c2*y1*z3 + a3*b2*c3*y1*z3 + a1*a2*a3*z1*z3 + a2*a3*b1*z1*z3 + a1*a2*b2*b3*z1*z3 + a2*b1*b2*b3*z1*z3 + a3*b1*c2*z1*z3 + a3*b2*c3*z1*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 89 ( P422)
#####################################################################
Acpin89:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acppin89:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin89:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Azin89:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain89:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + b2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
Bxyin89:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return (1 - c1)*x2*y1 + c1*(x2 + y1)*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 90 ( P42_12)
#####################################################################
Acpin90:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acppin90:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Azin90:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain90:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + b2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
Bphiin90:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return b1*b2 + a2*b1*b2 + b1*c2 + b1*b2*c2 + a2*x1 + b2*x1 + b2*c1*x1 + c2*x1 + a2*y1 + b2*c1*y1 + c2*y1;
end;
#####################################################################
CGAPin90:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3 + a1*a2*a3*b2 + a3*b1*b2 + a1*a3*b1*b2 + a1*a2*a3*b1*b2 + a1*a2*b3 + a2*b1*b3 + a1*a2*b1*b3 + a2*a3*b1*b3 + a1*a2*b2*b3 + a1*a3*b2*b3 + a1*a2*a3*b2*b3 + a2*b1*b2*b3 + a3*b1*b2*b3 + a1*a3*b1*b2*b3 + a2*a3*b1*b2*b3 + a1*a2*a3*b1*b2*b3 + a2*a3*b1*c1 + a2*a3*b2*c1 + a1*a2*a3*b2*c1 + a1*a3*b1*b2*c1 + a2*a3*b1*b2*c1 + a1*a2*b3*c1 + a2*a3*b3*c1 + a2*b1*b3*c1 + a1*b2*b3*c1 + a2*b2*b3*c1 + a3*b2*b3*c1 + a1*a3*b2*b3*c1 + a2*a3*b2*b3*c1 + a1*a2*a3*b2*b3*c1 + b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a3*b1*b2*b3*c1 + a2*a3*b1*b2*b3*c1 + a1*a3*c2 + a3*b1*c2 + a2*a3*b1*c2 + a1*a3*b1*b2*c2 + a1*b3*c2 + a1*a2*b3*c2 + a1*b1*b3*c2 + a2*b1*b3*c2 + a1*b2*b3*c2 + a1*a2*b2*b3*c2 + a1*a3*b2*b3*c2 + a2*a3*b1*b2*b3*c2 + a3*b1*c1*c2 + a1*a3*b2*c1*c2 + a2*a3*b2*c1*c2 + a1*a2*a3*b2*c1*c2 + a2*a3*b1*b2*c1*c2 + a1*b3*c1*c2 + a2*b3*c1*c2 + a3*b3*c1*c2 + b1*b3*c1*c2 + a1*b1*b3*c1*c2 + a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + a1*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + a2*a3*b2*b3*c1*c2 + a1*a2*a3*b2*b3*c1*c2 + a2*b1*b2*b3*c1*c2 + a2*a3*b1*b2*b3*c1*c2 + a2*b1*c3 + a2*a3*b1*c3 + a1*b2*c3 + b1*b2*c3 + a1*a2*b1*b2*c3 + a1*a3*b1*b2*c3 + a2*b1*b3*c3 + a1*a2*b2*b3*c3 + a1*a3*b2*b3*c3 + a1*b1*b2*b3*c3 + a2*b1*b2*b3*c3 + a1*a3*b1*b2*b3*c3 + a2*a3*b1*b2*b3*c3 + a1*b2*c1*c3 + a1*a3*b2*c1*c3 + a2*a3*b2*c1*c3 + a1*a2*a3*b2*c1*c3 + a1*b1*b2*c1*c3 + a2*a3*b1*b2*c1*c3 + a2*b3*c1*c3 + a2*b1*b3*c1*c3 + b2*b3*c1*c3 + a1*b2*b3*c1*c3 + a2*b2*b3*c1*c3 + a3*b2*b3*c1*c3 + a1*a3*b2*b3*c1*c3 + a2*a3*b2*b3*c1*c3 + a1*a2*a3*b2*b3*c1*c3 + b1*b2*b3*c1*c3 + a2*a3*b1*b2*b3*c1*c3 + a1*b1*c2*c3 + a2*b1*c2*c3 + a3*b1*c2*c3 + a1*b2*c2*c3 + b1*b2*c2*c3 + a1*b1*b2*c2*c3 + a2*b1*b2*c2*c3 + a1*b1*b3*c2*c3 + a3*b1*b3*c2*c3 + b1*b2*b3*c2*c3 + b2*c1*c2*c3 + b3*c1*c2*c3 + a3*b1*b2*x1 + a2*b3*x1 + a1*a2*b3*x1 + a2*a3*b3*x1 + a2*b1*b3*x1 + a1*b2*b3*x1 + a3*b2*c1*x1 + a2*b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a1*a3*b2*c2*x1 + a2*a3*b2*c2*x1 + a1*a3*b1*b2*c2*x1 + b3*c2*x1 + a1*b3*c2*x1 + a2*b3*c2*x1 + a1*a2*b3*c2*x1 + a3*b3*c2*x1 + a1*a3*b3*c2*x1 + b1*b3*c2*x1 + a1*b1*b3*c2*x1 + a1*a2*b1*b3*c2*x1 + a1*a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a3*b2*b3*c2*x1 + a2*a3*b2*b3*c2*x1 + a1*b1*b2*b3*c2*x1 + a3*b2*c1*c2*x1 + a2*a3*b2*c1*c2*x1 + b3*c1*c2*x1 + a1*b3*c1*c2*x1 + a3*b2*b3*c1*c2*x1 + a2*a3*b2*b3*c1*c2*x1 + a2*c3*x1 + b2*c3*x1 + a1*b2*c3*x1 + a2*b2*c3*x1 + a1*a2*b2*c3*x1 + a1*a3*b2*c3*x1 + a2*a3*b2*c3*x1 + b1*b2*c3*x1 + a1*b1*b2*c3*x1 + a1*a2*b1*b2*c3*x1 + a1*a3*b1*b2*c3*x1 + a1*a2*b3*c3*x1 + a2*a3*b3*c3*x1 + a1*a2*b1*b3*c3*x1 + b2*b3*c3*x1 + a1*b2*b3*c3*x1 + a3*b2*b3*c3*x1 + a1*a3*b2*b3*c3*x1 + b1*b2*b3*c3*x1 + a3*b1*b2*b3*c3*x1 + a2*c1*c3*x1 + b2*c1*c3*x1 + a2*b2*c1*c3*x1 + a3*b2*c1*c3*x1 + a2*a3*b2*c1*c3*x1 + b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a3*b2*b3*c1*c3*x1 + a2*a3*b2*b3*c1*c3*x1 + c2*c3*x1 + a1*c2*c3*x1 + a2*c2*c3*x1 + b1*c2*c3*x1 + a1*b1*c2*c3*x1 + b2*c2*c3*x1 + a1*b2*c2*c3*x1 + a2*b2*c2*c3*x1 + b1*b2*c2*c3*x1 + a2*b3*c2*c3*x1 + a1*b1*b3*c2*c3*x1 + b2*b3*c2*c3*x1 + a1*b2*b3*c2*c3*x1 + a1*b1*b2*b3*c2*c3*x1 + b2*b3*c1*c2*c3*x1 + a3*b1*x2 + a1*a3*b2*x2 + a3*b1*b2*x2 + a1*a3*b1*b2*x2 + a1*b3*x2 + a1*a3*b3*x2 + b1*b3*x2 + a1*b1*b3*x2 + a2*b1*b3*x2 + a1*a2*b1*b3*x2 + a1*a3*b1*b3*x2 + a1*b2*b3*x2 + a3*b2*c1*x2 + a1*a3*b2*c1*x2 + a1*a2*b3*c1*x2 + a3*b3*c1*x2 + a1*a3*b3*c1*x2 + a1*b1*b3*c1*x2 + a3*b1*b3*c1*x2 + b2*b3*c1*x2 + a1*b2*b3*c1*x2 + a2*b2*b3*c1*x2 + a3*b2*b3*c1*x2 + a1*a3*c2*x2 + a1*a3*b2*c2*x2 + a3*b1*b2*c2*x2 + a1*a3*b1*b2*c2*x2 + a1*b3*c2*x2 + a1*a2*b3*c2*x2 + a1*a3*b3*c2*x2 + b1*b3*c2*x2 + a2*b1*b3*c2*x2 + a1*a2*b1*b3*c2*x2 + a3*b1*b3*c2*x2 + a1*a3*b1*b3*c2*x2 + a1*b2*b3*c2*x2 + b1*b2*b3*c2*x2 + a3*b1*c1*c2*x2 + a1*a3*b2*c1*c2*x2 + a1*b3*c1*c2*x2 + a1*a2*b3*c1*c2*x2 + a1*a3*b3*c1*c2*x2 + b1*b2*b3*c1*c2*x2 + a1*c3*x2 + a1*a2*c3*x2 + a1*a3*c3*x2 + a1*b1*c3*x2 + a1*b2*c3*x2 + a1*a2*b2*c3*x2 + a1*a3*b2*c3*x2 + b1*b2*c3*x2 + a1*b1*b2*c3*x2 + a2*b1*b2*c3*x2 + a1*a2*b1*b2*c3*x2 + a3*b1*b2*c3*x2 + a1*a3*b1*b2*c3*x2 + a1*a2*b3*c3*x2 + a2*b1*b3*c3*x2 + a1*a2*b1*b3*c3*x2 + a3*b1*b3*c3*x2 + a1*b2*b3*c3*x2 + a1*a3*b2*b3*c3*x2 + b1*b2*b3*c3*x2 + a3*b1*b2*b3*c3*x2 + a1*b1*c1*c3*x2 + a2*b1*c1*c3*x2 + a3*b1*c1*c3*x2 + a1*b2*c1*c3*x2 + a1*a2*b2*c1*c3*x2 + a1*a3*b2*c1*c3*x2 + a2*b3*c1*c3*x2 + a1*a2*b3*c1*c3*x2 + a3*b3*c1*c3*x2 + a1*a3*b3*c1*c3*x2 + b1*b3*c1*c3*x2 + b1*b2*b3*c1*c3*x2 + a3*b1*b2*b3*c1*c3*x2 + a1*c2*c3*x2 + b1*c2*c3*x2 + a1*b1*c2*c3*x2 + a1*b2*c2*c3*x2 + b1*b2*c2*c3*x2 + a1*b3*c2*c3*x2 + b1*b3*c2*c3*x2 + a1*b1*b3*c2*c3*x2 + a1*b2*b3*c2*c3*x2 + b1*b2*b3*c2*c3*x2 + a1*b1*b2*b3*c2*c3*x2 + b1*c1*c2*c3*x2 + b2*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + a1*b3*c1*c2*c3*x2 + b1*b3*c1*c2*c3*x2 + b2*b3*c1*c2*c3*x2 + a1*b2*b3*c1*c2*c3*x2 + b3*x1*x2 + a3*c2*x1*x2 + b3*c2*x1*x2 + c3*x1*x2 + a2*c3*x1*x2 + a3*c3*x1*x2 + b2*c1*c3*x1*x2 + a3*b3*c1*c3*x1*x2 + b3*c2*c3*x1*x2 + c1*c2*c3*x1*x2 + a1*a2*x3 + a2*b1*x3 + a1*a2*b1*x3 + a1*a3*b2*x3 + a1*a2*b1*b2*x3 + a3*b1*b2*x3 + a1*a3*b1*b2*x3 + a1*a2*b1*b3*x3 + a2*a3*b1*b3*x3 + a1*a3*b2*b3*x3 + b1*b2*b3*x3 + a1*b2*c1*x3 + a2*b2*c1*x3 + a1*a2*b2*c1*x3 + a3*b2*c1*x3 + a1*a3*b2*c1*x3 + b1*b2*c1*x3 + a2*b1*b2*c1*x3 + a1*a2*b3*c1*x3 + a2*a3*b3*c1*x3 + a2*b1*b3*c1*x3 + a3*b2*b3*c1*x3 + a3*b1*b2*b3*c1*x3 + a1*a2*c2*x3 + a1*a3*c2*x3 + b1*c2*x3 + a1*b1*c2*x3 + a1*b1*b2*c2*x3 + a3*b1*b2*c2*x3 + a1*b3*c2*x3 + a1*a3*b3*c2*x3 + a1*b1*b3*c2*x3 + a3*b1*b3*c2*x3 + a1*b1*b2*b3*c2*x3 + b1*c1*c2*x3 + a2*b1*c1*c2*x3 + a3*b1*c1*c2*x3 + b2*c1*c2*x3 + a1*b2*c1*c2*x3 + a1*a2*b2*c1*c2*x3 + a1*a3*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a1*b3*c1*c2*x3 + a1*a2*b3*c1*c2*x3 + a1*a3*b3*c1*c2*x3 + b1*b3*c1*c2*x3 + a3*b2*b3*c1*c2*x3 + b1*b2*b3*c1*c2*x3 + a1*a2*c3*x3 + a2*b1*c3*x3 + a1*a2*b2*c3*x3 + a1*a3*b2*c3*x3 + a1*b1*b2*c3*x3 + a2*b1*b2*c3*x3 + a1*a2*b1*b2*c3*x3 + a1*a3*b1*b2*c3*x3 + a1*a2*b3*c3*x3 + a2*b1*b3*c3*x3 + a1*a2*b1*b3*c3*x3 + a2*a3*b1*b3*c3*x3 + a1*b2*b3*c3*x3 + a1*a3*b2*b3*c3*x3 + b1*b2*b3*c3*x3 + b2*c1*c3*x3 + a2*b2*c1*c3*x3 + a1*a2*b2*c1*c3*x3 + a1*a3*b2*c1*c3*x3 + a2*b3*c1*c3*x3 + a1*a2*b3*c1*c3*x3 + a2*a3*b3*c1*c3*x3 + b2*b3*c1*c3*x3 + a3*b2*b3*c1*c3*x3 + b1*b2*b3*c1*c3*x3 + a3*b1*b2*b3*c1*c3*x3 + b1*c2*c3*x3 + a1*b2*c2*c3*x3 + b1*b2*c2*c3*x3 + a2*b1*b2*c2*c3*x3 + a3*b1*b2*c2*c3*x3 + a1*b3*c2*c3*x3 + a1*a3*b3*c2*c3*x3 + a1*b1*b3*c2*c3*x3 + a2*b1*b3*c2*c3*x3 + a3*b1*b3*c2*c3*x3 + a1*b2*b3*c2*c3*x3 + b1*b2*b3*c2*c3*x3 + a1*b1*b2*b3*c2*c3*x3 + b1*c1*c2*c3*x3 + b2*c1*c2*c3*x3 + a2*b2*c1*c2*c3*x3 + a1*a2*b2*c1*c2*c3*x3 + a3*b2*c1*c2*c3*x3 + a1*a3*b2*c1*c2*c3*x3 + b1*b2*c1*c2*c3*x3 + a2*b1*b2*c1*c2*c3*x3 + a3*b1*b2*c1*c2*c3*x3 + b3*c1*c2*c3*x3 + a2*b3*c1*c2*c3*x3 + a1*a2*b3*c1*c2*c3*x3 + a3*b3*c1*c2*c3*x3 + a1*a3*b3*c1*c2*c3*x3 + a2*b1*b3*c1*c2*c3*x3 + a3*b1*b3*c1*c2*c3*x3 + a3*b2*b3*c1*c2*c3*x3 + b1*b2*b3*c1*c2*c3*x3 + b2*x1*x3 + a2*c1*x1*x3 + a3*c2*x1*x3 + a2*b2*c2*x1*x3 + a3*b2*c2*x1*x3 + b3*c2*x1*x3 + a2*b3*c2*x1*x3 + a3*b3*c2*x1*x3 + b2*b3*c2*x1*x3 + c1*c2*x1*x3 + b2*c1*c2*x1*x3 + a2*b2*c1*c2*x1*x3 + a3*b2*c1*c2*x1*x3 + b3*c1*c2*x1*x3 + a2*b3*c1*c2*x1*x3 + a3*b3*c1*c2*x1*x3 + b2*b3*c1*c2*x1*x3 + a2*c3*x1*x3 + b2*c1*c3*x1*x3 + b2*c2*c3*x1*x3 + a2*b2*c2*c3*x1*x3 + a3*b2*c2*c3*x1*x3 + a2*b3*c2*c3*x1*x3 + a3*b3*c2*c3*x1*x3 + b2*b3*c2*c3*x1*x3 + a2*b2*c1*c2*c3*x1*x3 + a3*b2*c1*c2*c3*x1*x3 + b3*c1*c2*c3*x1*x3 + a2*b3*c1*c2*c3*x1*x3 + a3*b3*c1*c2*c3*x1*x3 + b2*b3*c1*c2*c3*x1*x3 + a3*b2*y1 + a1*a2*b3*y1 + a2*a3*b3*y1 + a3*b2*b3*y1 + a3*b2*c1*y1 + b2*b3*c1*y1 + a2*b2*b3*c1*y1 + a1*a3*b2*c2*y1 + a1*a3*b1*b2*c2*y1 + a1*b3*c2*y1 + a1*a2*b3*c2*y1 + a1*a3*b3*c2*y1 + a1*b1*b3*c2*y1 + a1*a2*b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + b2*b3*c2*y1 + a1*b1*b2*b3*c2*y1 + a3*b2*c1*c2*y1 + a2*a3*b2*c1*c2*y1 + b3*c1*c2*y1 + a1*b3*c1*c2*y1 + a3*b2*b3*c1*c2*y1 + a2*a3*b2*b3*c1*c2*y1 + b2*c3*y1 + a2*b2*c3*y1 + a1*a2*b2*c3*y1 + a1*a3*b2*c3*y1 + a1*b1*b2*c3*y1 + a1*a2*b1*b2*c3*y1 + a1*a3*b1*b2*c3*y1 + a2*b3*c3*y1 + a1*a2*b3*c3*y1 + a2*a3*b3*c3*y1 + a1*a2*b1*b3*c3*y1 + b2*b3*c3*y1 + a1*b2*b3*c3*y1 + a1*a3*b2*b3*c3*y1 + a2*a3*b2*b3*c3*y1 + a2*c1*c3*y1 + a2*b2*c1*c3*y1 + a3*b2*c1*c3*y1 + a2*a3*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a3*b2*b3*c1*c3*y1 + a2*a3*b2*b3*c1*c3*y1 + c2*c3*y1 + a1*c2*c3*y1 + a2*c2*c3*y1 + a1*b1*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + b3*c2*c3*y1 + a2*b3*c2*c3*y1 + a1*b1*b3*c2*c3*y1 + a1*b2*b3*c2*c3*y1 + a1*b1*b2*b3*c2*c3*y1 + b2*b3*c1*c2*c3*y1 + a3*b2*c2*x1*y1 + b3*c2*x1*y1 + a2*b3*c2*x1*y1 + a3*b3*c2*x1*y1 + b2*b3*c2*x1*y1 + b2*c3*x1*y1 + a2*b2*c3*x1*y1 + a3*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + c2*c3*x1*y1 + b3*c2*c3*x1*y1 + b2*b3*c2*c3*x1*y1 + b3*x2*y1 + a3*c2*x2*y1 + b3*c2*x2*y1 + c3*x2*y1 + a2*c3*x2*y1 + a3*c3*x2*y1 + b2*c3*x2*y1 + a3*b3*c3*x2*y1 + b2*c1*c3*x2*y1 + a3*b3*c1*c3*x2*y1 + c2*c3*x2*y1 + b3*c2*c3*x2*y1 + c1*c2*c3*x2*y1 + a2*x3*y1 + b2*x3*y1 + a2*c1*x3*y1 + c2*x3*y1 + a3*c2*x3*y1 + b2*c2*x3*y1 + c1*c2*x3*y1 + b2*c1*c2*x3*y1 + a2*b2*c1*c2*x3*y1 + a3*b2*c1*c2*x3*y1 + b3*c1*c2*x3*y1 + a2*b3*c1*c2*x3*y1 + a3*b3*c1*c2*x3*y1 + b2*b3*c1*c2*x3*y1 + a2*c3*x3*y1 + b2*c3*x3*y1 + b2*c1*c3*x3*y1 + b2*c2*c3*x3*y1 + b3*c2*c3*x3*y1 + a2*b2*c1*c2*c3*x3*y1 + a3*b2*c1*c2*c3*x3*y1 + b3*c1*c2*c3*x3*y1 + a2*b3*c1*c2*c3*x3*y1 + a3*b3*c1*c2*c3*x3*y1 + b2*b3*c1*c2*c3*x3*y1 + a1*a2*b3*y2 + a3*b1*b2*c1*y2 + a2*b3*c1*y2 + b1*b3*c1*y2 + a1*b1*b3*c1*y2 + a2*b1*b3*c1*y2 + a1*b2*b3*c1*y2 + a2*b2*b3*c1*y2 + a3*b2*b3*c1*y2 + b1*b2*b3*c1*y2 + a1*a3*c2*y2 + a3*b1*c2*y2 + a1*a3*b2*c2*y2 + a1*a3*b1*b2*c2*y2 + a1*a2*b3*c2*y2 + a1*a3*b3*c2*y2 + b1*b3*c2*y2 + a1*b1*b3*c2*y2 + a1*a2*b1*b3*c2*y2 + a1*a3*b1*b3*c2*y2 + a1*b1*b2*b3*c2*y2 + a3*b1*c1*c2*y2 + a3*b2*c1*c2*y2 + a3*b1*b2*c1*c2*y2 + a1*b3*c1*c2*y2 + a2*b3*c1*c2*y2 + a3*b3*c1*c2*y2 + a2*b1*b3*c1*c2*y2 + a3*b1*b3*c1*c2*y2 + b1*b2*b3*c1*c2*y2 + a1*a2*c3*y2 + a1*a3*c3*y2 + b1*c3*y2 + a1*b1*c3*y2 + a2*b1*c3*y2 + a3*b1*c3*y2 + a1*a2*b2*c3*y2 + a1*a3*b2*c3*y2 + a1*b1*b2*c3*y2 + a1*a2*b1*b2*c3*y2 + a1*a3*b1*b2*c3*y2 + a1*a2*b3*c3*y2 + a1*a2*b1*b3*c3*y2 + a1*b2*b3*c3*y2 + a1*a3*b2*b3*c3*y2 + a1*b1*c1*c3*y2 + a2*b1*c1*c3*y2 + a3*b1*c1*c3*y2 + b2*c1*c3*y2 + a1*b2*c1*c3*y2 + a2*b2*c1*c3*y2 + a3*b2*c1*c3*y2 + b1*b2*c1*c3*y2 + a2*b1*b2*c1*c3*y2 + a3*b1*b2*c1*c3*y2 + b1*b3*c1*c3*y2 + a2*b1*b3*c1*c3*y2 + a3*b1*b3*c1*c3*y2 + b1*b2*b3*c1*c3*y2 + a3*b1*b2*b3*c1*c3*y2 + a1*c2*c3*y2 + a1*b1*c2*c3*y2 + a1*b2*c2*c3*y2 + a1*b3*c2*c3*y2 + b1*b3*c2*c3*y2 + a1*b1*b3*c2*c3*y2 + a1*b2*b3*c2*c3*y2 + a1*b1*b2*b3*c2*c3*y2 + b1*c1*c2*c3*y2 + b2*c1*c2*c3*y2 + b1*b2*c1*c2*c3*y2 + b3*c1*c2*c3*y2 + b1*b2*b3*c1*c2*c3*y2 + a3*c2*x1*y2 + a3*b2*c2*x1*y2 + a2*b3*c2*x1*y2 + a3*b3*c2*x1*y2 + b2*b3*c2*x1*y2 + a3*b2*c1*c2*x1*y2 + b3*c1*c2*x1*y2 + a2*b3*c1*c2*x1*y2 + a3*b3*c1*c2*x1*y2 + b2*b3*c1*c2*x1*y2 + a2*c3*x1*y2 + a3*c3*x1*y2 + b2*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + a2*b3*c3*x1*y2 + c1*c3*x1*y2 + b2*c1*c3*x1*y2 + a2*b2*c1*c3*x1*y2 + a3*b2*c1*c3*x1*y2 + a2*b3*c1*c3*x1*y2 + c2*c3*x1*y2 + b2*b3*c2*c3*x1*y2 + c1*c2*c3*x1*y2 + b3*c1*c2*c3*x1*y2 + b2*b3*c1*c2*c3*x1*y2 + a3*c2*y1*y2 + b3*c2*y1*y2 + a3*b2*c1*c2*y1*y2 + b3*c1*c2*y1*y2 + a2*b3*c1*c2*y1*y2 + a3*b3*c1*c2*y1*y2 + b2*b3*c1*c2*y1*y2 + c3*y1*y2 + a2*c3*y1*y2 + a3*c3*y1*y2 + c1*c3*y1*y2 + b2*c1*c3*y1*y2 + a2*b2*c1*c3*y1*y2 + a3*b2*c1*c3*y1*y2 + a2*b3*c1*c3*y1*y2 + b3*c2*c3*y1*y2 + c1*c2*c3*y1*y2 + b3*c1*c2*c3*y1*y2 + b2*b3*c1*c2*c3*y1*y2 + a1*a2*y3 + a1*a2*b1*y3 + a1*a2*b2*y3 + a1*a2*b3*y3 + a2*b1*c1*y3 + a2*b2*c1*y3 + a3*b1*b2*c1*y3 + a2*b3*c1*y3 + a3*b2*b3*c1*y3 + a1*a2*c2*y3 + a1*a3*c2*y3 + a1*b1*c2*y3 + a3*b1*c2*y3 + a1*b2*c2*y3 + a1*b1*b2*c2*y3 + a2*b1*b2*c2*y3 + b1*b3*c2*y3 + a2*b1*b3*c2*y3 + a3*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + b1*b2*b3*c2*y3 + a2*b1*c1*c2*y3 + a3*b1*c1*c2*y3 + a1*b2*c1*c2*y3 + a2*b2*c1*c2*y3 + a3*b2*c1*c2*y3 + a2*b1*b2*c1*c2*y3 + a3*b1*b2*c1*c2*y3 + a1*b3*c1*c2*y3 + a2*b3*c1*c2*y3 + a3*b3*c1*c2*y3 + b1*b3*c1*c2*y3 + a2*b1*b3*c1*c2*y3 + a3*b1*b3*c1*c2*y3 + b1*b2*b3*c1*c2*y3 + a1*a2*c3*y3 + a2*b1*c3*y3 + a1*b2*c3*y3 + a1*a2*b2*c3*y3 + a1*a3*b2*c3*y3 + b1*b2*c3*y3 + a1*b1*b2*c3*y3 + a1*a2*b1*b2*c3*y3 + a3*b1*b2*c3*y3 + a1*a3*b1*b2*c3*y3 + a1*a2*b3*c3*y3 + a1*a2*b1*b3*c3*y3 + a1*b2*b3*c3*y3 + a1*a3*b2*b3*c3*y3 + b2*c1*c3*y3 + a3*b2*c1*c3*y3 + b1*b2*c1*c3*y3 + a2*b1*b2*c1*c3*y3 + a3*b1*b2*c1*c3*y3 + a2*b1*b3*c1*c3*y3 + b2*b3*c1*c3*y3 + a3*b2*b3*c1*c3*y3 + b1*b2*b3*c1*c3*y3 + a3*b1*b2*b3*c1*c3*y3 + a1*b2*c2*c3*y3 + b1*b2*c2*c3*y3 + a2*b1*b2*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + a1*b3*c2*c3*y3 + a1*b1*b3*c2*c3*y3 + a2*b1*b3*c2*c3*y3 + a1*b2*b3*c2*c3*y3 + a1*b1*b2*b3*c2*c3*y3 + a3*b1*b2*b3*c2*c3*y3 + b1*c1*c2*c3*y3 + b2*c1*c2*c3*y3 + a2*b2*c1*c2*c3*y3 + a1*a2*b2*c1*c2*c3*y3 + a3*b2*c1*c2*c3*y3 + a1*a3*b2*c1*c2*c3*y3 + b1*b2*c1*c2*c3*y3 + a2*b1*b2*c1*c2*c3*y3 + a3*b1*b2*c1*c2*c3*y3 + a1*b3*c1*c2*c3*y3 + a2*b3*c1*c2*c3*y3 + a1*a2*b3*c1*c2*c3*y3 + a3*b3*c1*c2*c3*y3 + a1*a3*b3*c1*c2*c3*y3 + b1*b3*c1*c2*c3*y3 + a2*b1*b3*c1*c2*c3*y3 + a3*b1*b3*c1*c2*c3*y3 + b2*b3*c1*c2*c3*y3 + a1*b2*b3*c1*c2*c3*y3 + a2*x1*y3 + a2*c1*x1*y3 + c2*x1*y3 + a3*c2*x1*y3 + b2*c2*x1*y3 + c1*c2*x1*y3 + b2*c1*c2*x1*y3 + a2*c3*x1*y3 + b2*c3*x1*y3 + a2*b2*c3*x1*y3 + a3*b2*c3*x1*y3 + a2*b3*c3*x1*y3 + b2*c1*c3*x1*y3 + a2*b2*c1*c3*x1*y3 + a3*b2*c1*c3*x1*y3 + a2*b3*c1*c3*x1*y3 + b2*c2*c3*x1*y3 + a2*b2*c2*c3*x1*y3 + a3*b2*c2*c3*x1*y3 + b3*c2*c3*x1*y3 + a2*b3*c2*c3*x1*y3 + a2*b2*c1*c2*c3*x1*y3 + a3*b2*c1*c2*c3*x1*y3 + a2*b3*c1*c2*c3*x1*y3 + a3*b3*c1*c2*c3*x1*y3 + a2*c1*y1*y3 + a3*c2*y1*y3 + c1*c2*y1*y3 + b2*c1*c2*y1*y3 + a2*c3*y1*y3 + b2*c1*c3*y1*y3 + a2*b2*c1*c3*y1*y3 + a3*b2*c1*c3*y1*y3 + a2*b3*c1*c3*y1*y3 + b2*c2*c3*y1*y3 + b3*c2*c3*y1*y3 + a3*b3*c2*c3*y1*y3 + a2*b2*c1*c2*c3*y1*y3 + a3*b2*c1*c2*c3*y1*y3 + a2*b3*c1*c2*c3*y1*y3 + a3*b3*c1*c2*c3*y1*y3;
end;
#####################################################################
#####################################################################
#Space Group No. 91 ( P4_122)
#####################################################################
Acpin91:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acppin91:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin91:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Bxyin91:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + c1*x2*y1 + c1*x2*y2 + c1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 92 ( P4_12_12)
#####################################################################
Acpin92:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acppin92:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Bphiin92:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*x1 + b2*c1*x1 + b1*x2 + b1*c1*x2 + b2*c1*x2 + a2*y1 + b2*c1*y1 + b1*c1*y2 + b2*c1*y2;
end;
#####################################################################
CGAPin92:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a3*b1*b2 + a1*a2*b1*b3 + a1*a2*a3*b1*b3 + a1*a2*a3*b2*b3 + a2*b1*b2*b3 + a1*a2*a3*b1*b2*b3 + a1*a2*a3*b1*c1 + a1*a2*a3*b2*c1 + a3*b1*b2*c1 + a2*a3*b1*b2*c1 + a1*a2*b3*c1 + a1*a2*a3*b3*c1 + a1*a2*b1*b3*c1 + a1*b2*b3*c1 + a1*a2*b2*b3*c1 + a1*a3*b2*b3*c1 + a1*b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a1*a2*b1*b2*b3*c1 + a3*b1*b2*b3*c1 + a2*a3*b1*b2*b3*c1 + a1*a3*b1*c2 + a1*a2*a3*b1*c2 + a1*a3*b2*c2 + a1*a2*a3*b2*c2 + a2*a3*b1*b2*c2 + a1*a2*a3*b1*b2*c2 + a1*a2*a3*b3*c2 + a2*b1*b3*c2 + a1*a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a1*a2*a3*b1*b3*c2 + a1*b2*b3*c2 + a1*a3*b2*b3*c2 + a1*b1*b2*b3*c2 + a2*a3*b1*b2*b3*c2 + a3*b1*c1*c2 + a1*a3*b1*c1*c2 + a3*b2*c1*c2 + a2*a3*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a2*b1*b3*c1*c2 + a1*a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + a1*a3*b1*b3*c1*c2 + a2*a3*b1*b3*c1*c2 + a3*b2*b3*c1*c2 + a2*a3*b2*b3*c1*c2 + a1*b1*b2*b3*c1*c2 + a3*b1*b2*b3*c1*c2 + a1*a3*b1*b2*b3*c1*c2 + a2*a3*b1*b2*b3*c1*c2 + a1*a2*b1*c3 + a1*a2*b2*c3 + a1*a3*b2*c3 + a1*a2*a3*b2*c3 + a1*b1*b2*c3 + a2*b1*b2*c3 + a1*a3*b1*b2*c3 + a2*a3*b1*b2*c3 + a1*a2*b3*c3 + a1*a2*a3*b3*c3 + a1*b2*b3*c3 + a1*a3*b2*b3*c3 + a2*b1*b2*b3*c3 + a1*a3*b1*b2*b3*c3 + a2*a3*b1*b2*b3*c3 + a1*a2*a3*b1*b2*b3*c3 + a2*b1*c1*c3 + a2*a3*b1*c1*c3 + a1*b2*c1*c3 + b1*b2*c1*c3 + a1*b1*b2*c1*c3 + a2*b1*b2*c1*c3 + a1*a2*b3*c1*c3 + a2*b1*b3*c1*c3 + a1*a2*b1*b3*c1*c3 + b1*b2*b3*c1*c3 + a3*b1*b2*b3*c1*c3 + a2*a3*b1*b2*b3*c1*c3 + a1*a2*b1*c2*c3 + a3*b1*c2*c3 + a1*a3*b1*c2*c3 + a2*a3*b1*c2*c3 + a1*a2*b1*b2*c2*c3 + a1*a2*b3*c2*c3 + a2*b1*b3*c2*c3 + a3*b1*b3*c2*c3 + a1*a3*b1*b3*c2*c3 + a2*a3*b1*b3*c2*c3 + a2*b1*b2*b3*c2*c3 + 2*c1*c2*c3 + a3*b2*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + b1*b2*b3*c1*c2*c3 + a1*b1*b2*b3*c1*c2*c3 + a2*a3*b1*x1 + a2*a3*b1*b2*x1 + a2*b3*x1 + a2*b1*b3*x1 + a1*a2*b1*b3*x1 + a2*a3*b1*b3*x1 + b2*b3*x1 + a1*b1*b2*b3*x1 + a2*b1*b2*b3*x1 + a3*b1*b2*b3*x1 + a2*a3*b1*c1*x1 + a1*a3*b2*c1*x1 + a3*b1*b2*c1*x1 + a2*a3*b1*b2*c1*x1 + a2*b3*c1*x1 + a1*a2*b3*c1*x1 + a2*a3*b3*c1*x1 + a1*a2*b1*b3*c1*x1 + a2*a3*b1*b3*c1*x1 + b2*b3*c1*x1 + a1*b1*b2*b3*c1*x1 + a2*b1*b2*b3*c1*x1 + a3*b1*b2*b3*c1*x1 + a3*b1*c2*x1 + a1*a3*b1*c2*x1 + a2*a3*b1*c2*x1 + a1*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + a2*a3*b1*b2*c2*x1 + a2*b3*c2*x1 + a1*a2*b3*c2*x1 + a2*a3*b3*c2*x1 + b1*b3*c2*x1 + a1*b1*b3*c2*x1 + a1*a2*b1*b3*c2*x1 + a2*a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a1*b2*b3*c2*x1 + a3*b2*b3*c2*x1 + b1*b2*b3*c2*x1 + a1*b1*b2*b3*c2*x1 + a2*b1*b2*b3*c2*x1 + a3*b1*b2*b3*c2*x1 + a3*b1*c1*c2*x1 + a1*a3*b1*c1*c2*x1 + a3*b1*b2*c1*c2*x1 + a1*a3*b1*b2*c1*c2*x1 + b1*b3*c1*c2*x1 + a1*b1*b3*c1*c2*x1 + a2*b1*b3*c1*c2*x1 + a1*a2*b1*b3*c1*c2*x1 + a3*b1*b3*c1*c2*x1 + a1*a3*b1*b3*c1*c2*x1 + b2*b3*c1*c2*x1 + a1*b2*b3*c1*c2*x1 + a3*b2*b3*c1*c2*x1 + a3*b1*b2*b3*c1*c2*x1 + a2*b1*c3*x1 + b2*c3*x1 + a1*b2*c3*x1 + a2*b2*c3*x1 + a1*a2*b2*c3*x1 + a3*b2*c3*x1 + a2*a3*b2*c3*x1 + a1*a2*b1*b2*c3*x1 + a3*b1*b2*c3*x1 + a2*a3*b1*b2*c3*x1 + a1*a2*b3*c3*x1 + a2*a3*b3*c3*x1 + a2*b1*b3*c3*x1 + a1*a2*b1*b3*c3*x1 + a3*b2*b3*c3*x1 + b1*b2*b3*c3*x1 + a1*b1*b2*b3*c3*x1 + a2*b1*b2*b3*c3*x1 + a2*b1*c1*c3*x1 + b2*c1*c3*x1 + a2*b2*c1*c3*x1 + a3*b2*c1*c3*x1 + a1*a3*b2*c1*c3*x1 + a2*a3*b2*c1*c3*x1 + a1*b1*b2*c1*c3*x1 + a3*b1*b2*c1*c3*x1 + a1*a3*b1*b2*c1*c3*x1 + a2*a3*b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + a1*b2*b3*c1*c3*x1 + a2*b2*b3*c1*c3*x1 + a3*b2*b3*c1*c3*x1 + a1*a3*b2*b3*c1*c3*x1 + a2*a3*b2*b3*c1*c3*x1 + a1*b1*b2*b3*c1*c3*x1 + a2*b1*b2*b3*c1*c3*x1 + a3*b1*b2*b3*c1*c3*x1 + b1*c2*c3*x1 + a1*b1*c2*c3*x1 + a1*a2*b1*c2*c3*x1 + a3*b1*c2*c3*x1 + a1*a3*b1*c2*c3*x1 + b2*c2*c3*x1 + a1*b2*c2*c3*x1 + a2*b2*c2*c3*x1 + a3*b2*c2*c3*x1 + a1*a3*b2*c2*c3*x1 + a2*a3*b2*c2*c3*x1 + a2*b1*b2*c2*c3*x1 + a1*a2*b1*b2*c2*c3*x1 + a2*a3*b1*b2*c2*c3*x1 + a2*b3*c2*c3*x1 + a1*a2*b1*b3*c2*c3*x1 + a3*b1*b3*c2*c3*x1 + a1*a3*b1*b3*c2*c3*x1 + a2*b2*b3*c2*c3*x1 + a3*b2*b3*c2*c3*x1 + a1*a3*b2*b3*c2*c3*x1 + a2*a3*b2*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + a1*b1*b2*b3*c2*c3*x1 + a2*b1*b2*b3*c2*c3*x1 + a3*b1*b2*b3*c2*c3*x1 + b2*c1*c2*c3*x1 + a3*b2*c1*c2*c3*x1 + b1*b2*c1*c2*c3*x1 + a3*b1*b2*c1*c2*c3*x1 + a3*b2*b3*c1*c2*c3*x1 + a2*a3*b1*x2 + a1*a3*b2*x2 + a3*b1*b2*x2 + a1*a3*b1*b2*x2 + a2*b1*b3*x2 + a1*a2*b1*b3*x2 + a2*a3*b1*b3*x2 + a1*a3*b2*b3*x2 + a2*a3*b1*c1*x2 + a1*a3*b2*c1*x2 + a2*a3*b2*c1*x2 + a3*b1*b2*c1*x2 + a1*a3*b1*b2*c1*x2 + a2*b1*b3*c1*x2 + a1*a2*b1*b3*c1*x2 + a2*a3*b1*b3*c1*x2 + b2*b3*c1*x2 + a3*b2*b3*c1*x2 + a1*a3*b2*b3*c1*x2 + a2*a3*b2*b3*c1*x2 + a3*b1*c2*x2 + a1*a3*b1*c2*x2 + a2*a3*b1*c2*x2 + a3*b1*b2*c2*x2 + a1*a2*b3*c2*x2 + b1*b3*c2*x2 + a1*b1*b3*c2*x2 + a2*b1*b3*c2*x2 + a3*b1*b3*c2*x2 + a1*a3*b1*b3*c2*x2 + a2*a3*b1*b3*c2*x2 + a1*b2*b3*c2*x2 + a1*a3*b2*b3*c2*x2 + a1*b1*b2*b3*c2*x2 + a3*b1*c1*c2*x2 + a2*a3*b1*c1*c2*x2 + a3*b2*c1*c2*x2 + a3*b1*b2*c1*c2*x2 + a2*a3*b1*b2*c1*c2*x2 + b1*b3*c1*c2*x2 + a2*b1*b3*c1*c2*x2 + a1*a2*b1*b3*c1*c2*x2 + a3*b1*b3*c1*c2*x2 + a2*a3*b1*b3*c1*c2*x2 + b2*b3*c1*c2*x2 + a3*b2*b3*c1*c2*x2 + a2*b1*c3*x2 + a1*b2*c3*x2 + a1*a2*b2*c3*x2 + a1*a3*b2*c3*x2 + b1*b2*c3*x2 + a1*b1*b2*c3*x2 + a2*b1*b2*c3*x2 + a3*b1*b2*c3*x2 + a1*a2*b3*c3*x2 + b1*b3*c3*x2 + a1*b1*b3*c3*x2 + a3*b1*b3*c3*x2 + a1*a3*b1*b3*c3*x2 + a1*a3*b2*b3*c3*x2 + b1*b2*b3*c3*x2 + a3*b1*b2*b3*c3*x2 + a2*b1*c1*c3*x2 + a3*b2*c1*c3*x2 + b1*b3*c1*c3*x2 + a3*b1*b3*c1*c3*x2 + a3*b2*b3*c1*c3*x2 + a3*b1*b2*b3*c1*c3*x2 + b1*c2*c3*x2 + a1*b1*c2*c3*x2 + a1*a2*b1*c2*c3*x2 + a3*b1*c2*c3*x2 + a1*a3*b1*c2*c3*x2 + a1*b2*c2*c3*x2 + a1*a3*b2*c2*c3*x2 + a2*b1*b2*c2*c3*x2 + a1*a2*b1*b2*c2*c3*x2 + a2*a3*b1*b2*c2*c3*x2 + b1*b3*c2*c3*x2 + a1*b1*b3*c2*c3*x2 + a1*a2*b1*b3*c2*c3*x2 + a3*b1*b3*c2*c3*x2 + a1*a3*b1*b3*c2*c3*x2 + a1*a3*b2*b3*c2*c3*x2 + a1*b1*b2*b3*c2*c3*x2 + a3*b1*b2*b3*c2*c3*x2 + b1*c1*c2*c3*x2 + a3*b1*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + a3*b1*b2*c1*c2*c3*x2 + b1*b3*c1*c2*c3*x2 + a3*b1*b3*c1*c2*c3*x2 + b1*b2*b3*c1*c2*c3*x2 + a3*b1*b2*b3*c1*c2*c3*x2 + a3*b1*c1*c2*x1*x2 + a3*b2*c1*c2*x1*x2 + a1*b3*c1*c2*x1*x2 + a2*b3*c1*c2*x1*x2 + a3*b3*c1*c2*x1*x2 + b2*b3*c1*c2*x1*x2 + b3*c1*c3*x1*x2 + a3*b3*c1*c3*x1*x2 + a1*b1*c1*c2*c3*x1*x2 + a2*b1*c1*c2*c3*x1*x2 + a3*b1*c1*c2*c3*x1*x2 + b2*c1*c2*c3*x1*x2 + a1*b2*c1*c2*c3*x1*x2 + a2*b2*c1*c2*c3*x1*x2 + a3*b2*c1*c2*c3*x1*x2 + b1*b2*c1*c2*c3*x1*x2 + a1*b3*c1*c2*c3*x1*x2 + a2*b3*c1*c2*c3*x1*x2 + a3*b3*c1*c2*c3*x1*x2 + b2*b3*c1*c2*c3*x1*x2 + a1*a2*b1*x3 + a2*a3*b1*x3 + a1*a3*b2*x3 + b1*b2*x3 + a2*b1*b2*x3 + a1*a2*b1*b2*x3 + a3*b1*b2*x3 + a1*a3*b1*b2*x3 + a2*b1*b3*x3 + a1*a2*b1*b3*x3 + a2*a3*b1*b3*x3 + a1*a3*b2*b3*x3 + a1*a2*b1*c1*x3 + a2*a3*b1*c1*x3 + a1*a3*b2*c1*x3 + a2*a3*b2*c1*x3 + b1*b2*c1*x3 + a2*b1*b2*c1*x3 + a1*a2*b1*b2*c1*x3 + a3*b1*b2*c1*x3 + a1*a3*b1*b2*c1*x3 + a2*b1*b3*c1*x3 + a1*a2*b1*b3*c1*x3 + a2*a3*b1*b3*c1*x3 + b2*b3*c1*x3 + a3*b2*b3*c1*x3 + a1*a3*b2*b3*c1*x3 + a2*a3*b2*b3*c1*x3 + a1*a2*b1*c2*x3 + a2*a3*b1*c2*x3 + a1*a3*b2*c2*x3 + b1*b2*c2*x3 + a2*b1*b2*c2*x3 + a1*a2*b1*b2*c2*x3 + a3*b1*b2*c2*x3 + a1*a3*b1*b2*c2*x3 + a2*b1*b3*c2*x3 + a1*a2*b1*b3*c2*x3 + a2*a3*b1*b3*c2*x3 + a1*a3*b2*b3*c2*x3 + a1*a3*b2*c1*c2*x3 + a2*a3*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a3*b1*b2*c1*c2*x3 + a1*a3*b1*b2*c1*c2*x3 + a2*a3*b1*b2*c1*c2*x3 + b2*b3*c1*c2*x3 + a3*b2*b3*c1*c2*x3 + a1*a3*b2*b3*c1*c2*x3 + a2*a3*b2*b3*c1*c2*x3 + a2*b1*b2*b3*c1*c2*x3 + a2*b1*c3*x3 + a1*b2*c3*x3 + a1*a2*b2*c3*x3 + a1*a3*b2*c3*x3 + b1*b2*c3*x3 + a1*b1*b2*c3*x3 + a2*b1*b2*c3*x3 + a3*b1*b2*c3*x3 + a1*a2*b3*c3*x3 + a1*b2*b3*c3*x3 + a2*b1*c1*c3*x3 + a3*b2*c1*c3*x3 + a3*b2*b3*c1*c3*x3 + b1*b2*b3*c1*c3*x3 + a2*b1*c2*c3*x3 + a1*b2*c2*c3*x3 + a1*a3*b2*c2*c3*x3 + b1*b2*c2*c3*x3 + a3*b1*b2*c2*c3*x3 + a1*a3*b1*b2*c2*c3*x3 + a2*a3*b1*b2*c2*c3*x3 + a1*b2*b3*c2*c3*x3 + a1*a3*b2*b3*c2*c3*x3 + a1*b1*b2*b3*c2*c3*x3 + a2*b1*b2*b3*c2*c3*x3 + a3*b2*c1*c2*c3*x3 + b1*b2*c1*c2*c3*x3 + a3*b1*b2*c1*c2*c3*x3 + a3*b2*b3*c1*c2*c3*x3 + a3*b1*b2*b3*c1*c2*c3*x3 + c1*c2*x2*x3 + a1*b1*c1*c2*x2*x3 + a2*b1*c1*c2*x2*x3 + a3*b1*c1*c2*x2*x3 + b2*c1*c2*x2*x3 + a1*b2*c1*c2*x2*x3 + a2*b2*c1*c2*x2*x3 + a3*b2*c1*c2*x2*x3 + b1*b2*c1*c2*x2*x3 + a1*b3*c1*c2*x2*x3 + a2*b3*c1*c2*x2*x3 + a3*b3*c1*c2*x2*x3 + b2*b3*c1*c2*x2*x3 + a1*b1*c2*c3*x2*x3 + a2*b1*c2*c3*x2*x3 + a3*b1*c2*c3*x2*x3 + a1*b2*c2*c3*x2*x3 + a1*b3*c2*c3*x2*x3 + b1*b3*c2*c3*x2*x3 + b2*c1*c2*c3*x2*x3 + b1*b2*c1*c2*c3*x2*x3 + b3*c1*c2*c3*x2*x3 + b1*b3*c1*c2*c3*x2*x3 + a1*a3*b2*y1 + a1*a2*b3*y1 + a2*a3*b3*y1 + a1*a3*b2*c1*y1 + a2*b3*c1*y1 + a1*a2*b3*c1*y1 + a2*a3*b3*c1*y1 + b2*b3*c1*y1 + a1*a3*b2*c2*y1 + a1*a3*b1*b2*c2*y1 + a2*b3*c2*y1 + a1*a2*b3*c2*y1 + a2*a3*b3*c2*y1 + a1*a2*b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + a1*b1*b2*b3*c2*y1 + a1*a3*b1*c1*c2*y1 + a1*a3*b1*b2*c1*c2*y1 + a1*b1*b3*c1*c2*y1 + a1*a2*b1*b3*c1*c2*y1 + a1*a3*b1*b3*c1*c2*y1 + b2*b3*c1*c2*y1 + a1*b2*b3*c1*c2*y1 + a3*b2*b3*c1*c2*y1 + a1*b1*b2*b3*c1*c2*y1 + a1*b2*c3*y1 + a1*a2*b2*c3*y1 + a1*a3*b2*c3*y1 + a1*b1*b2*c3*y1 + a1*a2*b1*b2*c3*y1 + a1*a3*b1*b2*c3*y1 + a2*b3*c3*y1 + a1*a2*b3*c3*y1 + a2*a3*b3*c3*y1 + a1*a2*b1*b3*c3*y1 + a1*b2*b3*c3*y1 + a2*b2*b3*c3*y1 + a1*a3*b2*b3*c3*y1 + a2*a3*b2*b3*c3*y1 + b2*c1*c3*y1 + a2*b2*c1*c3*y1 + a3*b2*c1*c3*y1 + a1*a3*b2*c1*c3*y1 + a2*a3*b2*c1*c3*y1 + b1*b2*c1*c3*y1 + a1*b1*b2*c1*c3*y1 + a2*b1*b2*c1*c3*y1 + a3*b1*b2*c1*c3*y1 + a1*a3*b1*b2*c1*c3*y1 + a2*a3*b1*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a1*b2*b3*c1*c3*y1 + a2*b2*b3*c1*c3*y1 + a3*b2*b3*c1*c3*y1 + a1*a3*b2*b3*c1*c3*y1 + a2*a3*b2*b3*c1*c3*y1 + b1*b2*b3*c1*c3*y1 + a1*b1*b2*b3*c1*c3*y1 + a2*b1*b2*b3*c1*c3*y1 + a1*b1*c2*c3*y1 + a1*a2*b1*c2*c3*y1 + a1*a3*b1*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + a1*a3*b2*c2*c3*y1 + a2*a3*b2*c2*c3*y1 + a2*b1*b2*c2*c3*y1 + a1*a2*b1*b2*c2*c3*y1 + a2*a3*b1*b2*c2*c3*y1 + a2*b3*c2*c3*y1 + a1*a2*b1*b3*c2*c3*y1 + a1*a3*b1*b3*c2*c3*y1 + a2*b2*b3*c2*c3*y1 + a1*a3*b2*b3*c2*c3*y1 + a2*a3*b2*b3*c2*c3*y1 + a1*b1*b2*b3*c2*c3*y1 + a2*b1*b2*b3*c2*c3*y1 + b2*c1*c2*c3*y1 + a3*b2*c1*c2*c3*y1 + b1*b2*c1*c2*c3*y1 + a3*b1*b2*c1*c2*c3*y1 + a3*b2*b3*c1*c2*c3*y1 + b1*b2*b3*c1*c2*c3*y1 + a3*b2*c2*x1*y1 + a2*b3*c2*x1*y1 + a3*b3*c2*x1*y1 + b2*b3*c2*x1*y1 + a3*b1*c1*c2*x1*y1 + a3*b2*c1*c2*x1*y1 + a1*b3*c1*c2*x1*y1 + a2*b3*c1*c2*x1*y1 + a3*b3*c1*c2*x1*y1 + b2*b3*c1*c2*x1*y1 + b2*c3*x1*y1 + a2*b2*c3*x1*y1 + a3*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + a1*b1*c2*c3*x1*y1 + a2*b1*c2*c3*x1*y1 + a3*b1*c2*c3*x1*y1 + a1*b2*c2*c3*x1*y1 + a2*b2*c2*c3*x1*y1 + a3*b2*c2*c3*x1*y1 + a1*b3*c2*c3*x1*y1 + a2*b3*c2*c3*x1*y1 + a3*b3*c2*c3*x1*y1 + b1*b3*c2*c3*x1*y1 + b2*c1*c2*c3*x1*y1 + b1*b2*c1*c2*c3*x1*y1 + b3*c1*c2*c3*x1*y1 + b1*b3*c1*c2*c3*x1*y1 + b3*c3*x2*y1 + a3*b3*c3*x2*y1 + b3*c1*c3*x2*y1 + a3*b3*c1*c3*x2*y1 + a1*b1*c2*c3*x2*y1 + a2*b1*c2*c3*x2*y1 + a3*b1*c2*c3*x2*y1 + a1*b2*c2*c3*x2*y1 + a2*b2*c2*c3*x2*y1 + a3*b2*c2*c3*x2*y1 + b3*c2*c3*x2*y1 + a1*b3*c2*c3*x2*y1 + a2*b3*c2*c3*x2*y1 + a3*b3*c2*c3*x2*y1 + b1*b3*c2*c3*x2*y1 + b2*b3*c2*c3*x2*y1 + a1*b1*c1*c2*c3*x2*y1 + a2*b1*c1*c2*c3*x2*y1 + a3*b1*c1*c2*c3*x2*y1 + a1*b2*c1*c2*c3*x2*y1 + a2*b2*c1*c2*c3*x2*y1 + a3*b2*c1*c2*c3*x2*y1 + b3*c1*c2*c3*x2*y1 + a1*b3*c1*c2*c3*x2*y1 + a2*b3*c1*c2*c3*x2*y1 + a3*b3*c1*c2*c3*x2*y1 + b1*b3*c1*c2*c3*x2*y1 + b2*b3*c1*c2*c3*x2*y1 + a1*a3*b1*y2 + a1*a3*b2*y2 + a1*a3*b1*b2*y2 + a1*a2*b3*y2 + a1*b1*b3*y2 + a1*a2*b1*b3*y2 + a1*a3*b1*b3*y2 + a3*b1*c1*y2 + b1*b3*c1*y2 + a3*b1*b3*c1*y2 + a1*a3*b1*c2*y2 + a1*a3*b2*c2*y2 + a1*a3*b1*b2*c2*y2 + a1*a2*b3*c2*y2 + a1*b1*b3*c2*y2 + a1*a2*b1*b3*c2*y2 + a1*a3*b1*b3*c2*y2 + a3*b1*c1*c2*y2 + a2*a3*b1*c1*c2*y2 + a2*a3*b1*b2*c1*c2*y2 + b1*b3*c1*c2*y2 + a2*b1*b3*c1*c2*y2 + a1*a2*b1*b3*c1*c2*y2 + a3*b1*b3*c1*c2*y2 + a2*a3*b1*b3*c1*c2*y2 + a2*b1*b2*b3*c1*c2*y2 + a1*b1*c3*y2 + a1*a2*b1*c3*y2 + a1*a3*b1*c3*y2 + a1*b2*c3*y2 + a1*a2*b2*c3*y2 + a1*a3*b2*c3*y2 + a1*b1*b2*c3*y2 + a1*a2*b1*b2*c3*y2 + a1*a3*b1*b2*c3*y2 + a1*a2*b3*c3*y2 + a1*a2*b1*b3*c3*y2 + a1*b2*b3*c3*y2 + a1*a3*b2*b3*c3*y2 + b1*c1*c3*y2 + a2*b1*c1*c3*y2 + a3*b1*c1*c3*y2 + b1*b2*b3*c1*c3*y2 + a3*b1*b2*b3*c1*c3*y2 + a1*b1*c2*c3*y2 + a1*a2*b1*c2*c3*y2 + a1*a3*b1*c2*c3*y2 + a1*b2*c2*c3*y2 + a1*a3*b2*c2*c3*y2 + a2*b1*b2*c2*c3*y2 + a1*a2*b1*b2*c2*c3*y2 + a2*a3*b1*b2*c2*c3*y2 + a1*b1*b3*c2*c3*y2 + a1*a2*b1*b3*c2*c3*y2 + a1*a3*b1*b3*c2*c3*y2 + a1*a3*b2*b3*c2*c3*y2 + a1*b1*b2*b3*c2*c3*y2 + a2*b1*b2*b3*c2*c3*y2 + b1*c1*c2*c3*y2 + a3*b1*c1*c2*c3*y2 + b1*b2*c1*c2*c3*y2 + a3*b1*b2*c1*c2*c3*y2 + b1*b3*c1*c2*c3*y2 + a3*b1*b3*c1*c2*c3*y2 + b1*b2*b3*c1*c2*c3*y2 + a3*b1*b2*b3*c1*c2*c3*y2 + a3*b1*x1*y2 + a3*b2*x1*y2 + a1*b3*x1*y2 + a2*b3*x1*y2 + a3*b3*x1*y2 + a3*b1*c1*x1*y2 + a3*b2*c1*x1*y2 + a1*b3*c1*x1*y2 + a2*b3*c1*x1*y2 + a3*b3*c1*x1*y2 + a3*b1*c2*x1*y2 + a3*b2*c2*x1*y2 + a1*b3*c2*x1*y2 + a2*b3*c2*x1*y2 + a3*b3*c2*x1*y2 + a3*b1*c1*c2*x1*y2 + a3*b2*c1*c2*x1*y2 + a1*b3*c1*c2*x1*y2 + a2*b3*c1*c2*x1*y2 + a3*b3*c1*c2*x1*y2 + a1*b1*c3*x1*y2 + a2*b1*c3*x1*y2 + a3*b1*c3*x1*y2 + a1*b2*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + b3*c3*x1*y2 + a1*b3*c3*x1*y2 + a2*b3*c3*x1*y2 + a1*b1*c1*c3*x1*y2 + a2*b1*c1*c3*x1*y2 + a3*b1*c1*c3*x1*y2 + a1*b2*c1*c3*x1*y2 + a2*b2*c1*c3*x1*y2 + a3*b2*c1*c3*x1*y2 + b3*c1*c3*x1*y2 + a1*b3*c1*c3*x1*y2 + a2*b3*c1*c3*x1*y2 + a1*b1*c2*c3*x1*y2 + a2*b1*c2*c3*x1*y2 + a3*b1*c2*c3*x1*y2 + a1*b2*c2*c3*x1*y2 + a2*b2*c2*c3*x1*y2 + a3*b2*c2*c3*x1*y2 + a1*b3*c2*c3*x1*y2 + a2*b3*c2*c3*x1*y2 + a3*b3*c2*c3*x1*y2 + a1*b1*c1*c2*c3*x1*y2 + a2*b1*c1*c2*c3*x1*y2 + a3*b1*c1*c2*c3*x1*y2 + a1*b2*c1*c2*c3*x1*y2 + a2*b2*c1*c2*c3*x1*y2 + a3*b2*c1*c2*c3*x1*y2 + a1*b3*c1*c2*c3*x1*y2 + a2*b3*c1*c2*c3*x1*y2 + a3*b3*c1*c2*c3*x1*y2 + a3*b1*c1*c2*x2*y2 + a3*b2*c1*c2*x2*y2 + a1*b3*c1*c2*x2*y2 + a2*b3*c1*c2*x2*y2 + a3*b3*c1*c2*x2*y2 + b2*b3*c1*c2*x2*y2 + a1*b1*c2*c3*x2*y2 + a2*b1*c2*c3*x2*y2 + a3*b1*c2*c3*x2*y2 + a1*b2*c2*c3*x2*y2 + a1*b3*c2*c3*x2*y2 + b1*b3*c2*c3*x2*y2 + b2*c1*c2*c3*x2*y2 + b1*b2*c1*c2*c3*x2*y2 + b3*c1*c2*c3*x2*y2 + b1*b3*c1*c2*c3*x2*y2 + a1*b1*c1*c3*y1*y2 + a2*b1*c1*c3*y1*y2 + a3*b1*c1*c3*y1*y2 + b2*c1*c3*y1*y2 + a1*b2*c1*c3*y1*y2 + a2*b2*c1*c3*y1*y2 + a3*b2*c1*c3*y1*y2 + b1*b2*c1*c3*y1*y2 + a1*b3*c1*c3*y1*y2 + a2*b3*c1*c3*y1*y2 + b1*b3*c1*c3*y1*y2 + a1*b1*c1*c2*c3*y1*y2 + a2*b1*c1*c2*c3*y1*y2 + a3*b1*c1*c2*c3*y1*y2 + b2*c1*c2*c3*y1*y2 + a1*b2*c1*c2*c3*y1*y2 + a2*b2*c1*c2*c3*y1*y2 + a3*b2*c1*c2*c3*y1*y2 + b1*b2*c1*c2*c3*y1*y2 + b3*c1*c2*c3*y1*y2 + a1*b3*c1*c2*c3*y1*y2 + a2*b3*c1*c2*c3*y1*y2 + a3*b3*c1*c2*c3*y1*y2 + b1*b3*c1*c2*c3*y1*y2 + a1*a2*b2*y3 + a1*b1*b2*y3 + a2*b1*b2*y3 + a1*a3*b1*b2*y3 + a2*a3*b1*b2*y3 + a1*a2*b3*y3 + a1*b2*b3*y3 + a1*a3*b2*b3*y3 + a2*b1*c1*y3 + a1*a2*b1*c1*y3 + a2*a3*b1*c1*y3 + b1*b2*c1*y3 + a2*b1*b2*c1*y3 + a1*a2*b1*b2*c1*y3 + a3*b1*b2*c1*y3 + a2*a3*b1*b2*c1*y3 + a2*b1*b3*c1*y3 + a1*a2*b1*b3*c1*y3 + a2*a3*b1*b3*c1*y3 + b1*b2*b3*c1*y3 + a3*b1*b2*b3*c1*y3 + a2*b1*c2*y3 + a1*a2*b1*c2*y3 + a2*a3*b1*c2*y3 + a1*b2*c2*y3 + a2*b1*b2*c2*y3 + a1*a2*b1*b2*c2*y3 + a2*a3*b1*b2*c2*y3 + a2*b1*b3*c2*y3 + a1*a2*b1*b3*c2*y3 + a2*a3*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + a1*b1*b2*b3*c2*y3 + a3*b2*c1*c2*y3 + a1*a3*b2*c1*c2*y3 + a2*a3*b2*c1*c2*y3 + a1*a3*b1*b2*c1*c2*y3 + a2*a3*b1*b2*c1*c2*y3 + a1*a3*b2*b3*c1*c2*y3 + a2*a3*b2*b3*c1*c2*y3 + b1*b2*b3*c1*c2*y3 + a1*b1*b2*b3*c1*c2*y3 + a3*b1*b2*b3*c1*c2*y3 + a1*a2*b2*c3*y3 + a1*b1*b2*c3*y3 + a2*b1*b2*c3*y3 + a1*a3*b1*b2*c3*y3 + a2*a3*b1*b2*c3*y3 + a1*a2*b3*c3*y3 + a1*b2*b3*c3*y3 + a1*a3*b2*b3*c3*y3 + a2*b1*c1*c3*y3 + b1*b2*c1*c3*y3 + a3*b1*b2*c1*c3*y3 + b1*b2*b3*c1*c3*y3 + a3*b1*b2*b3*c1*c3*y3 + a2*b1*c2*c3*y3 + a1*b2*c2*c3*y3 + a1*a3*b2*c2*c3*y3 + b1*b2*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + a1*a3*b1*b2*c2*c3*y3 + a2*a3*b1*b2*c2*c3*y3 + a1*b2*b3*c2*c3*y3 + a1*a3*b2*b3*c2*c3*y3 + b1*b2*b3*c2*c3*y3 + a3*b2*c1*c2*c3*y3 + b1*b2*c1*c2*c3*y3 + a3*b1*b2*c1*c2*c3*y3 + a3*b2*b3*c1*c2*c3*y3 + a3*b1*b2*b3*c1*c2*c3*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a3*b1*x2*y3 + a1*b2*x2*y3 + a1*b3*x2*y3 + c1*x2*y3 + a1*b1*c1*x2*y3 + a2*b1*c1*x2*y3 + a3*b1*c1*x2*y3 + a1*b2*c1*x2*y3 + a2*b2*c1*x2*y3 + a3*b2*c1*x2*y3 + a1*b3*c1*x2*y3 + a2*b3*c1*x2*y3 + a3*b3*c1*x2*y3 + a1*b1*c2*x2*y3 + a2*b1*c2*x2*y3 + a3*b1*c2*x2*y3 + a1*b2*c2*x2*y3 + a1*b3*c2*x2*y3 + c1*c2*x2*y3 + a1*b1*c1*c2*x2*y3 + a2*b1*c1*c2*x2*y3 + a3*b1*c1*c2*x2*y3 + a1*b2*c1*c2*x2*y3 + a2*b2*c1*c2*x2*y3 + a3*b2*c1*c2*x2*y3 + a1*b3*c1*c2*x2*y3 + a2*b3*c1*c2*x2*y3 + a3*b3*c1*c2*x2*y3 + a1*b1*c3*x2*y3 + a2*b1*c3*x2*y3 + a3*b1*c3*x2*y3 + a1*b2*c3*x2*y3 + a1*b3*c3*x2*y3 + b2*c1*c3*x2*y3 + b1*b2*c1*c3*x2*y3 + b3*c1*c3*x2*y3 + b1*b3*c1*c3*x2*y3 + a1*b1*c2*c3*x2*y3 + a2*b1*c2*c3*x2*y3 + a3*b1*c2*c3*x2*y3 + a1*b2*c2*c3*x2*y3 + a1*b3*c2*c3*x2*y3 + b2*c1*c2*c3*x2*y3 + b1*b2*c1*c2*c3*x2*y3 + b3*c1*c2*c3*x2*y3 + b1*b3*c1*c2*c3*x2*y3 + c1*c2*x3*y3 + a1*b1*c1*c2*x3*y3 + a2*b1*c1*c2*x3*y3 + a3*b1*c1*c2*x3*y3 + b2*c1*c2*x3*y3 + a1*b2*c1*c2*x3*y3 + a2*b2*c1*c2*x3*y3 + a3*b2*c1*c2*x3*y3 + b1*b2*c1*c2*x3*y3 + a1*b3*c1*c2*x3*y3 + a2*b3*c1*c2*x3*y3 + a3*b3*c1*c2*x3*y3 + b2*b3*c1*c2*x3*y3 + a1*b1*c2*c3*x3*y3 + a2*b1*c2*c3*x3*y3 + a3*b1*c2*c3*x3*y3 + a1*b2*c2*c3*x3*y3 + a1*b3*c2*c3*x3*y3 + b1*b3*c2*c3*x3*y3 + b2*c1*c2*c3*x3*y3 + b1*b2*c1*c2*c3*x3*y3 + b3*c1*c2*c3*x3*y3 + b1*b3*c1*c2*c3*x3*y3 + a2*a3*b1*z1 + a2*a3*b2*z1 + a3*b1*b2*z1 + a1*a2*b3*z1 + a2*a3*b3*z1 + a1*b2*b3*z1 + a2*b2*b3*z1 + a3*b2*b3*z1 + a2*b1*b3*c1*z1 + b1*b2*b3*c1*z1 + a3*b1*c2*z1 + a3*b2*c2*z1 + a1*b1*b3*c2*z1 + a3*b1*b3*c2*z1 + b2*b3*c2*z1 + a1*b2*b3*c2*z1 + a3*b2*b3*c2*z1 + b1*b2*b3*c2*z1 + b1*b3*c1*c2*z1 + b1*b2*b3*c1*c2*z1 + a1*b2*c3*z1 + a2*b3*c3*z1 + b1*b2*c1*c3*z1 + b1*b3*c2*c3*z1 + b2*b3*c2*c3*z1 + a1*a2*b3*z2 + a1*b2*b3*z2 + a2*b1*b3*c1*z2 + b1*b2*b3*c1*z2 + a1*b1*b3*c2*z2 + a2*b1*b3*c2*z2 + a1*b2*b3*c2*z2 + b1*b3*c1*c2*z2 + b1*b2*b3*c1*c2*z2 + a1*b2*c3*z2 + b1*b2*c1*c3*z2 + b1*b3*c2*c3*z2 + a1*a2*b1*z3 + a1*a2*b2*z3 + a1*b1*b2*z3 + a2*b1*b2*z3 + a1*a2*b3*z3 + a1*b2*b3*z3 + a2*b1*c1*z3 + b1*b2*c1*z3 + a2*b1*b2*c1*z3 + a2*b1*b3*c1*z3 + b1*b2*b3*c1*z3 + a1*b2*c2*z3 + a1*b1*b3*c2*z3 + a2*b1*b3*c2*z3 + a1*b2*b3*c2*z3 + b1*b2*c1*c2*z3 + b1*b3*c1*c2*z3 + b1*b2*b3*c1*c2*z3 + a1*b2*c3*z3 + b1*b2*c1*c3*z3 + b1*b3*c2*c3*z3 + b1*z2*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 93 ( P4_222)
#####################################################################
Acpin93:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acppin93:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin93:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Azin93:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1 + z1;
end;
#####################################################################
Bxyin93:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + c1*x2*y1 + c1*x2*y2 + c1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 94 ( P4_22_12)
#####################################################################
Acpin94:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acppin94:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Azin94:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1 + z1;
end;
#####################################################################
Bphiin94:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*x1 + b2*c1*x1 + b1*x2 + b1*c1*x2 + b2*c1*x2 + a2*y1 + b2*c1*y1 + b1*c1*y2 + b2*c1*y2;
end;
#####################################################################
CGAPin94:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3 + a1*a3*b1*b2 + a2*a3*b1*b2 + a1*a2*b1*b3 + a1*b2*b3 + a1*a3*b2*b3 + a2*b1*b2*b3 + a3*b1*b2*b3 + a2*a3*c1 + a3*b1*b2*c1 + b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a1*a3*b2*c2 + b1*b2*b3*c2 + a1*b1*b2*b3*c2 + a2*b1*b2*b3*c2 + a3*b1*b2*c1*c2 + a1*b3*c1*c2 + b1*b3*c1*c2 + a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + a3*b2*b3*c1*c2 + a1*a2*b2*c3 + a1*a3*b2*c3 + a1*a2*b3*c3 + a2*b1*b2*c1*c3 + a3*b1*b2*c1*c3 + a2*b1*b3*c1*c3 + a1*b3*c2*c3 + a3*b1*b3*c2*c3 + a1*b2*b3*c2*c3 + 2*c1*c2*c3 + b1*b3*c1*c2*c3 + b1*b2*b3*c1*c2*c3 + a2*a3*x1 + a3*b2*x1 + a2*b3*x1 + b2*b3*x1 + a3*b2*c1*x1 + a2*b3*c1*x1 + b2*b3*c1*x1 + a2*b3*c2*x1 + b2*b3*c2*x1 + b2*b3*c1*c2*x1 + a3*b2*c1*x2 + b2*b3*c1*x2 + b2*b3*c1*c2*x2 + a2*b1*x3 + b1*b2*x3 + a2*b1*c1*x3 + a3*b2*c1*x3 + b1*b2*c1*x3 + b2*b3*c1*x3 + a2*b1*c2*x3 + b1*b2*c2*x3 + a3*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + b2*b3*c1*c2*x3 + c1*c2*x2*x3 + a2*a3*y1 + a3*b2*c1*y1 + a2*b3*c1*y1 + b2*b3*c1*y1 + a2*b3*c2*y1 + b2*b3*c1*c2*y1 + a2*b1*c1*y3 + a2*b1*c2*y3 + b1*b2*c2*y3 + a3*b2*c1*c2*y3 + b1*b2*c1*c2*y3 + c1*x2*y3 + c1*c2*x2*y3 + c1*c2*x3*y3 + (a2*x1 + b2*c1*x1 + b1*x2 + b1*c1*x2 + b2*c1*x2 + a2*y1 + b2*c1*y1 + b1*c1*y2 + b2*c1*y2)*(a3 + z3) + c1*(a2 + z2)*(a3 + z3) + (a1 + z1)*(a2 + z2)*(a3 + z3);
end;
#####################################################################
#####################################################################
#Space Group No. 95 ( P4_322)
#####################################################################
Acpin95:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acppin95:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin95:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Bxyin95:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + c1*x2*y1 + c1*x2*y2 + c1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 96 ( P4_32_12)
#####################################################################
Acpin96:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acppin96:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Bphiin96:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*x1 + b2*c1*x1 + b1*x2 + b1*c1*x2 + b2*c1*x2 + a2*y1 + b2*c1*y1 + b1*c1*y2 + b2*c1*y2;
end;
#####################################################################
CGAPin96:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a3*b1*b2 + a1*a2*b1*b3 + a1*a2*a3*b1*b3 + a1*a2*a3*b2*b3 + a2*b1*b2*b3 + a1*a2*a3*b1*b2*b3 + a1*a2*a3*b1*c1 + a1*a2*a3*b2*c1 + a3*b1*b2*c1 + a2*a3*b1*b2*c1 + a1*a2*b3*c1 + a1*a2*a3*b3*c1 + a1*a2*b1*b3*c1 + a1*b2*b3*c1 + a1*a2*b2*b3*c1 + a1*a3*b2*b3*c1 + a1*b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a1*a2*b1*b2*b3*c1 + a3*b1*b2*b3*c1 + a2*a3*b1*b2*b3*c1 + a1*a3*b1*c2 + a1*a2*a3*b1*c2 + a1*a3*b2*c2 + a1*a2*a3*b2*c2 + a2*a3*b1*b2*c2 + a1*a2*a3*b1*b2*c2 + a1*a2*a3*b3*c2 + a2*b1*b3*c2 + a1*a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a1*a2*a3*b1*b3*c2 + a1*b2*b3*c2 + a1*a3*b2*b3*c2 + a1*b1*b2*b3*c2 + a2*a3*b1*b2*b3*c2 + a3*b1*c1*c2 + a1*a3*b1*c1*c2 + a3*b2*c1*c2 + a2*a3*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a2*b1*b3*c1*c2 + a1*a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + a1*a3*b1*b3*c1*c2 + a2*a3*b1*b3*c1*c2 + a3*b2*b3*c1*c2 + a2*a3*b2*b3*c1*c2 + a1*b1*b2*b3*c1*c2 + a3*b1*b2*b3*c1*c2 + a1*a3*b1*b2*b3*c1*c2 + a2*a3*b1*b2*b3*c1*c2 + a1*a2*b1*c3 + a1*a2*b2*c3 + a1*a3*b2*c3 + a1*a2*a3*b2*c3 + a1*b1*b2*c3 + a2*b1*b2*c3 + a1*a3*b1*b2*c3 + a2*a3*b1*b2*c3 + a1*a2*b3*c3 + a1*a2*a3*b3*c3 + a1*b2*b3*c3 + a1*a3*b2*b3*c3 + a2*b1*b2*b3*c3 + a1*a3*b1*b2*b3*c3 + a2*a3*b1*b2*b3*c3 + a1*a2*a3*b1*b2*b3*c3 + a2*b1*c1*c3 + a2*a3*b1*c1*c3 + a1*b2*c1*c3 + b1*b2*c1*c3 + a1*b1*b2*c1*c3 + a2*b1*b2*c1*c3 + a1*a2*b3*c1*c3 + a2*b1*b3*c1*c3 + a1*a2*b1*b3*c1*c3 + b1*b2*b3*c1*c3 + a3*b1*b2*b3*c1*c3 + a2*a3*b1*b2*b3*c1*c3 + a1*a2*b1*c2*c3 + a3*b1*c2*c3 + a1*a3*b1*c2*c3 + a2*a3*b1*c2*c3 + a1*a2*b1*b2*c2*c3 + a1*a2*b3*c2*c3 + a2*b1*b3*c2*c3 + a3*b1*b3*c2*c3 + a1*a3*b1*b3*c2*c3 + a2*a3*b1*b3*c2*c3 + a2*b1*b2*b3*c2*c3 + 2*c1*c2*c3 + a3*b2*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + b1*b2*b3*c1*c2*c3 + a1*b1*b2*b3*c1*c2*c3 + a2*a3*b1*x1 + a2*a3*b1*b2*x1 + a2*b3*x1 + a2*b1*b3*x1 + a1*a2*b1*b3*x1 + a2*a3*b1*b3*x1 + b2*b3*x1 + a1*b1*b2*b3*x1 + a2*b1*b2*b3*x1 + a3*b1*b2*b3*x1 + a2*a3*b1*c1*x1 + a1*a3*b2*c1*x1 + a3*b1*b2*c1*x1 + a2*a3*b1*b2*c1*x1 + a2*b3*c1*x1 + a1*a2*b3*c1*x1 + a2*a3*b3*c1*x1 + a1*a2*b1*b3*c1*x1 + a2*a3*b1*b3*c1*x1 + b2*b3*c1*x1 + a1*b1*b2*b3*c1*x1 + a2*b1*b2*b3*c1*x1 + a3*b1*b2*b3*c1*x1 + a3*b1*c2*x1 + a1*a3*b1*c2*x1 + a2*a3*b1*c2*x1 + a1*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + a2*a3*b1*b2*c2*x1 + a2*b3*c2*x1 + a1*a2*b3*c2*x1 + a2*a3*b3*c2*x1 + b1*b3*c2*x1 + a1*b1*b3*c2*x1 + a1*a2*b1*b3*c2*x1 + a2*a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a1*b2*b3*c2*x1 + a3*b2*b3*c2*x1 + b1*b2*b3*c2*x1 + a1*b1*b2*b3*c2*x1 + a2*b1*b2*b3*c2*x1 + a3*b1*b2*b3*c2*x1 + a3*b1*c1*c2*x1 + a1*a3*b1*c1*c2*x1 + a3*b1*b2*c1*c2*x1 + a1*a3*b1*b2*c1*c2*x1 + b1*b3*c1*c2*x1 + a1*b1*b3*c1*c2*x1 + a2*b1*b3*c1*c2*x1 + a1*a2*b1*b3*c1*c2*x1 + a3*b1*b3*c1*c2*x1 + a1*a3*b1*b3*c1*c2*x1 + b2*b3*c1*c2*x1 + a1*b2*b3*c1*c2*x1 + a3*b2*b3*c1*c2*x1 + a3*b1*b2*b3*c1*c2*x1 + a2*b1*c3*x1 + b2*c3*x1 + a1*b2*c3*x1 + a2*b2*c3*x1 + a1*a2*b2*c3*x1 + a3*b2*c3*x1 + a2*a3*b2*c3*x1 + a1*a2*b1*b2*c3*x1 + a3*b1*b2*c3*x1 + a2*a3*b1*b2*c3*x1 + a1*a2*b3*c3*x1 + a2*a3*b3*c3*x1 + a2*b1*b3*c3*x1 + a1*a2*b1*b3*c3*x1 + a3*b2*b3*c3*x1 + b1*b2*b3*c3*x1 + a1*b1*b2*b3*c3*x1 + a2*b1*b2*b3*c3*x1 + a2*b1*c1*c3*x1 + b2*c1*c3*x1 + a2*b2*c1*c3*x1 + a3*b2*c1*c3*x1 + a1*a3*b2*c1*c3*x1 + a2*a3*b2*c1*c3*x1 + a1*b1*b2*c1*c3*x1 + a3*b1*b2*c1*c3*x1 + a1*a3*b1*b2*c1*c3*x1 + a2*a3*b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + a1*b2*b3*c1*c3*x1 + a2*b2*b3*c1*c3*x1 + a3*b2*b3*c1*c3*x1 + a1*a3*b2*b3*c1*c3*x1 + a2*a3*b2*b3*c1*c3*x1 + a1*b1*b2*b3*c1*c3*x1 + a2*b1*b2*b3*c1*c3*x1 + a3*b1*b2*b3*c1*c3*x1 + b1*c2*c3*x1 + a1*b1*c2*c3*x1 + a1*a2*b1*c2*c3*x1 + a3*b1*c2*c3*x1 + a1*a3*b1*c2*c3*x1 + b2*c2*c3*x1 + a1*b2*c2*c3*x1 + a2*b2*c2*c3*x1 + a3*b2*c2*c3*x1 + a1*a3*b2*c2*c3*x1 + a2*a3*b2*c2*c3*x1 + a2*b1*b2*c2*c3*x1 + a1*a2*b1*b2*c2*c3*x1 + a2*a3*b1*b2*c2*c3*x1 + a2*b3*c2*c3*x1 + a1*a2*b1*b3*c2*c3*x1 + a3*b1*b3*c2*c3*x1 + a1*a3*b1*b3*c2*c3*x1 + a2*b2*b3*c2*c3*x1 + a3*b2*b3*c2*c3*x1 + a1*a3*b2*b3*c2*c3*x1 + a2*a3*b2*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + a1*b1*b2*b3*c2*c3*x1 + a2*b1*b2*b3*c2*c3*x1 + a3*b1*b2*b3*c2*c3*x1 + b2*c1*c2*c3*x1 + a3*b2*c1*c2*c3*x1 + b1*b2*c1*c2*c3*x1 + a3*b1*b2*c1*c2*c3*x1 + a3*b2*b3*c1*c2*c3*x1 + a2*a3*b1*x2 + a1*a3*b2*x2 + a3*b1*b2*x2 + a1*a3*b1*b2*x2 + a2*b1*b3*x2 + a1*a2*b1*b3*x2 + a2*a3*b1*b3*x2 + a1*a3*b2*b3*x2 + a2*a3*b1*c1*x2 + a1*a3*b2*c1*x2 + a2*a3*b2*c1*x2 + a3*b1*b2*c1*x2 + a1*a3*b1*b2*c1*x2 + a2*b1*b3*c1*x2 + a1*a2*b1*b3*c1*x2 + a2*a3*b1*b3*c1*x2 + b2*b3*c1*x2 + a3*b2*b3*c1*x2 + a1*a3*b2*b3*c1*x2 + a2*a3*b2*b3*c1*x2 + a3*b1*c2*x2 + a1*a3*b1*c2*x2 + a2*a3*b1*c2*x2 + a3*b1*b2*c2*x2 + a1*a2*b3*c2*x2 + b1*b3*c2*x2 + a1*b1*b3*c2*x2 + a2*b1*b3*c2*x2 + a3*b1*b3*c2*x2 + a1*a3*b1*b3*c2*x2 + a2*a3*b1*b3*c2*x2 + a1*b2*b3*c2*x2 + a1*a3*b2*b3*c2*x2 + a1*b1*b2*b3*c2*x2 + a3*b1*c1*c2*x2 + a2*a3*b1*c1*c2*x2 + a3*b2*c1*c2*x2 + a3*b1*b2*c1*c2*x2 + a2*a3*b1*b2*c1*c2*x2 + b1*b3*c1*c2*x2 + a2*b1*b3*c1*c2*x2 + a1*a2*b1*b3*c1*c2*x2 + a3*b1*b3*c1*c2*x2 + a2*a3*b1*b3*c1*c2*x2 + b2*b3*c1*c2*x2 + a3*b2*b3*c1*c2*x2 + a2*b1*c3*x2 + a1*b2*c3*x2 + a1*a2*b2*c3*x2 + a1*a3*b2*c3*x2 + b1*b2*c3*x2 + a1*b1*b2*c3*x2 + a2*b1*b2*c3*x2 + a3*b1*b2*c3*x2 + a1*a2*b3*c3*x2 + b1*b3*c3*x2 + a1*b1*b3*c3*x2 + a3*b1*b3*c3*x2 + a1*a3*b1*b3*c3*x2 + a1*a3*b2*b3*c3*x2 + b1*b2*b3*c3*x2 + a3*b1*b2*b3*c3*x2 + a2*b1*c1*c3*x2 + a3*b2*c1*c3*x2 + b1*b3*c1*c3*x2 + a3*b1*b3*c1*c3*x2 + a3*b2*b3*c1*c3*x2 + a3*b1*b2*b3*c1*c3*x2 + b1*c2*c3*x2 + a1*b1*c2*c3*x2 + a1*a2*b1*c2*c3*x2 + a3*b1*c2*c3*x2 + a1*a3*b1*c2*c3*x2 + a1*b2*c2*c3*x2 + a1*a3*b2*c2*c3*x2 + a2*b1*b2*c2*c3*x2 + a1*a2*b1*b2*c2*c3*x2 + a2*a3*b1*b2*c2*c3*x2 + b1*b3*c2*c3*x2 + a1*b1*b3*c2*c3*x2 + a1*a2*b1*b3*c2*c3*x2 + a3*b1*b3*c2*c3*x2 + a1*a3*b1*b3*c2*c3*x2 + a1*a3*b2*b3*c2*c3*x2 + a1*b1*b2*b3*c2*c3*x2 + a3*b1*b2*b3*c2*c3*x2 + b1*c1*c2*c3*x2 + a3*b1*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + a3*b1*b2*c1*c2*c3*x2 + b1*b3*c1*c2*c3*x2 + a3*b1*b3*c1*c2*c3*x2 + b1*b2*b3*c1*c2*c3*x2 + a3*b1*b2*b3*c1*c2*c3*x2 + a3*b1*c1*c2*x1*x2 + a3*b2*c1*c2*x1*x2 + a1*b3*c1*c2*x1*x2 + a2*b3*c1*c2*x1*x2 + a3*b3*c1*c2*x1*x2 + b2*b3*c1*c2*x1*x2 + b3*c1*c3*x1*x2 + a3*b3*c1*c3*x1*x2 + a1*b1*c1*c2*c3*x1*x2 + a2*b1*c1*c2*c3*x1*x2 + a3*b1*c1*c2*c3*x1*x2 + b2*c1*c2*c3*x1*x2 + a1*b2*c1*c2*c3*x1*x2 + a2*b2*c1*c2*c3*x1*x2 + a3*b2*c1*c2*c3*x1*x2 + b1*b2*c1*c2*c3*x1*x2 + a1*b3*c1*c2*c3*x1*x2 + a2*b3*c1*c2*c3*x1*x2 + a3*b3*c1*c2*c3*x1*x2 + b2*b3*c1*c2*c3*x1*x2 + a1*a2*b1*x3 + a2*a3*b1*x3 + a1*a3*b2*x3 + b1*b2*x3 + a2*b1*b2*x3 + a1*a2*b1*b2*x3 + a3*b1*b2*x3 + a1*a3*b1*b2*x3 + a2*b1*b3*x3 + a1*a2*b1*b3*x3 + a2*a3*b1*b3*x3 + a1*a3*b2*b3*x3 + a1*a2*b1*c1*x3 + a2*a3*b1*c1*x3 + a1*a3*b2*c1*x3 + a2*a3*b2*c1*x3 + b1*b2*c1*x3 + a2*b1*b2*c1*x3 + a1*a2*b1*b2*c1*x3 + a3*b1*b2*c1*x3 + a1*a3*b1*b2*c1*x3 + a2*b1*b3*c1*x3 + a1*a2*b1*b3*c1*x3 + a2*a3*b1*b3*c1*x3 + b2*b3*c1*x3 + a3*b2*b3*c1*x3 + a1*a3*b2*b3*c1*x3 + a2*a3*b2*b3*c1*x3 + a1*a2*b1*c2*x3 + a2*a3*b1*c2*x3 + a1*a3*b2*c2*x3 + b1*b2*c2*x3 + a2*b1*b2*c2*x3 + a1*a2*b1*b2*c2*x3 + a3*b1*b2*c2*x3 + a1*a3*b1*b2*c2*x3 + a2*b1*b3*c2*x3 + a1*a2*b1*b3*c2*x3 + a2*a3*b1*b3*c2*x3 + a1*a3*b2*b3*c2*x3 + a1*a3*b2*c1*c2*x3 + a2*a3*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a3*b1*b2*c1*c2*x3 + a1*a3*b1*b2*c1*c2*x3 + a2*a3*b1*b2*c1*c2*x3 + b2*b3*c1*c2*x3 + a3*b2*b3*c1*c2*x3 + a1*a3*b2*b3*c1*c2*x3 + a2*a3*b2*b3*c1*c2*x3 + a2*b1*b2*b3*c1*c2*x3 + a2*b1*c3*x3 + a1*b2*c3*x3 + a1*a2*b2*c3*x3 + a1*a3*b2*c3*x3 + b1*b2*c3*x3 + a1*b1*b2*c3*x3 + a2*b1*b2*c3*x3 + a3*b1*b2*c3*x3 + a1*a2*b3*c3*x3 + a1*b2*b3*c3*x3 + a2*b1*c1*c3*x3 + a3*b2*c1*c3*x3 + a3*b2*b3*c1*c3*x3 + b1*b2*b3*c1*c3*x3 + a2*b1*c2*c3*x3 + a1*b2*c2*c3*x3 + a1*a3*b2*c2*c3*x3 + b1*b2*c2*c3*x3 + a3*b1*b2*c2*c3*x3 + a1*a3*b1*b2*c2*c3*x3 + a2*a3*b1*b2*c2*c3*x3 + a1*b2*b3*c2*c3*x3 + a1*a3*b2*b3*c2*c3*x3 + a1*b1*b2*b3*c2*c3*x3 + a2*b1*b2*b3*c2*c3*x3 + a3*b2*c1*c2*c3*x3 + b1*b2*c1*c2*c3*x3 + a3*b1*b2*c1*c2*c3*x3 + a3*b2*b3*c1*c2*c3*x3 + a3*b1*b2*b3*c1*c2*c3*x3 + c1*c2*x2*x3 + a1*b1*c1*c2*x2*x3 + a2*b1*c1*c2*x2*x3 + a3*b1*c1*c2*x2*x3 + b2*c1*c2*x2*x3 + a1*b2*c1*c2*x2*x3 + a2*b2*c1*c2*x2*x3 + a3*b2*c1*c2*x2*x3 + b1*b2*c1*c2*x2*x3 + a1*b3*c1*c2*x2*x3 + a2*b3*c1*c2*x2*x3 + a3*b3*c1*c2*x2*x3 + b2*b3*c1*c2*x2*x3 + a1*b1*c2*c3*x2*x3 + a2*b1*c2*c3*x2*x3 + a3*b1*c2*c3*x2*x3 + a1*b2*c2*c3*x2*x3 + a1*b3*c2*c3*x2*x3 + b1*b3*c2*c3*x2*x3 + b2*c1*c2*c3*x2*x3 + b1*b2*c1*c2*c3*x2*x3 + b3*c1*c2*c3*x2*x3 + b1*b3*c1*c2*c3*x2*x3 + a1*a3*b2*y1 + a1*a2*b3*y1 + a2*a3*b3*y1 + a1*a3*b2*c1*y1 + a2*b3*c1*y1 + a1*a2*b3*c1*y1 + a2*a3*b3*c1*y1 + b2*b3*c1*y1 + a1*a3*b2*c2*y1 + a1*a3*b1*b2*c2*y1 + a2*b3*c2*y1 + a1*a2*b3*c2*y1 + a2*a3*b3*c2*y1 + a1*a2*b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + a1*b1*b2*b3*c2*y1 + a1*a3*b1*c1*c2*y1 + a1*a3*b1*b2*c1*c2*y1 + a1*b1*b3*c1*c2*y1 + a1*a2*b1*b3*c1*c2*y1 + a1*a3*b1*b3*c1*c2*y1 + b2*b3*c1*c2*y1 + a1*b2*b3*c1*c2*y1 + a3*b2*b3*c1*c2*y1 + a1*b1*b2*b3*c1*c2*y1 + a1*b2*c3*y1 + a1*a2*b2*c3*y1 + a1*a3*b2*c3*y1 + a1*b1*b2*c3*y1 + a1*a2*b1*b2*c3*y1 + a1*a3*b1*b2*c3*y1 + a2*b3*c3*y1 + a1*a2*b3*c3*y1 + a2*a3*b3*c3*y1 + a1*a2*b1*b3*c3*y1 + a1*b2*b3*c3*y1 + a2*b2*b3*c3*y1 + a1*a3*b2*b3*c3*y1 + a2*a3*b2*b3*c3*y1 + b2*c1*c3*y1 + a2*b2*c1*c3*y1 + a3*b2*c1*c3*y1 + a1*a3*b2*c1*c3*y1 + a2*a3*b2*c1*c3*y1 + b1*b2*c1*c3*y1 + a1*b1*b2*c1*c3*y1 + a2*b1*b2*c1*c3*y1 + a3*b1*b2*c1*c3*y1 + a1*a3*b1*b2*c1*c3*y1 + a2*a3*b1*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a1*b2*b3*c1*c3*y1 + a2*b2*b3*c1*c3*y1 + a3*b2*b3*c1*c3*y1 + a1*a3*b2*b3*c1*c3*y1 + a2*a3*b2*b3*c1*c3*y1 + b1*b2*b3*c1*c3*y1 + a1*b1*b2*b3*c1*c3*y1 + a2*b1*b2*b3*c1*c3*y1 + a1*b1*c2*c3*y1 + a1*a2*b1*c2*c3*y1 + a1*a3*b1*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + a1*a3*b2*c2*c3*y1 + a2*a3*b2*c2*c3*y1 + a2*b1*b2*c2*c3*y1 + a1*a2*b1*b2*c2*c3*y1 + a2*a3*b1*b2*c2*c3*y1 + a2*b3*c2*c3*y1 + a1*a2*b1*b3*c2*c3*y1 + a1*a3*b1*b3*c2*c3*y1 + a2*b2*b3*c2*c3*y1 + a1*a3*b2*b3*c2*c3*y1 + a2*a3*b2*b3*c2*c3*y1 + a1*b1*b2*b3*c2*c3*y1 + a2*b1*b2*b3*c2*c3*y1 + b2*c1*c2*c3*y1 + a3*b2*c1*c2*c3*y1 + b1*b2*c1*c2*c3*y1 + a3*b1*b2*c1*c2*c3*y1 + a3*b2*b3*c1*c2*c3*y1 + b1*b2*b3*c1*c2*c3*y1 + a3*b2*c2*x1*y1 + a2*b3*c2*x1*y1 + a3*b3*c2*x1*y1 + b2*b3*c2*x1*y1 + a3*b1*c1*c2*x1*y1 + a3*b2*c1*c2*x1*y1 + a1*b3*c1*c2*x1*y1 + a2*b3*c1*c2*x1*y1 + a3*b3*c1*c2*x1*y1 + b2*b3*c1*c2*x1*y1 + b2*c3*x1*y1 + a2*b2*c3*x1*y1 + a3*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + a1*b1*c2*c3*x1*y1 + a2*b1*c2*c3*x1*y1 + a3*b1*c2*c3*x1*y1 + a1*b2*c2*c3*x1*y1 + a2*b2*c2*c3*x1*y1 + a3*b2*c2*c3*x1*y1 + a1*b3*c2*c3*x1*y1 + a2*b3*c2*c3*x1*y1 + a3*b3*c2*c3*x1*y1 + b1*b3*c2*c3*x1*y1 + b2*c1*c2*c3*x1*y1 + b1*b2*c1*c2*c3*x1*y1 + b3*c1*c2*c3*x1*y1 + b1*b3*c1*c2*c3*x1*y1 + b3*c3*x2*y1 + a3*b3*c3*x2*y1 + b3*c1*c3*x2*y1 + a3*b3*c1*c3*x2*y1 + a1*b1*c2*c3*x2*y1 + a2*b1*c2*c3*x2*y1 + a3*b1*c2*c3*x2*y1 + a1*b2*c2*c3*x2*y1 + a2*b2*c2*c3*x2*y1 + a3*b2*c2*c3*x2*y1 + b3*c2*c3*x2*y1 + a1*b3*c2*c3*x2*y1 + a2*b3*c2*c3*x2*y1 + a3*b3*c2*c3*x2*y1 + b1*b3*c2*c3*x2*y1 + b2*b3*c2*c3*x2*y1 + a1*b1*c1*c2*c3*x2*y1 + a2*b1*c1*c2*c3*x2*y1 + a3*b1*c1*c2*c3*x2*y1 + a1*b2*c1*c2*c3*x2*y1 + a2*b2*c1*c2*c3*x2*y1 + a3*b2*c1*c2*c3*x2*y1 + b3*c1*c2*c3*x2*y1 + a1*b3*c1*c2*c3*x2*y1 + a2*b3*c1*c2*c3*x2*y1 + a3*b3*c1*c2*c3*x2*y1 + b1*b3*c1*c2*c3*x2*y1 + b2*b3*c1*c2*c3*x2*y1 + a1*a3*b1*y2 + a1*a3*b2*y2 + a1*a3*b1*b2*y2 + a1*a2*b3*y2 + a1*b1*b3*y2 + a1*a2*b1*b3*y2 + a1*a3*b1*b3*y2 + a3*b1*c1*y2 + b1*b3*c1*y2 + a3*b1*b3*c1*y2 + a1*a3*b1*c2*y2 + a1*a3*b2*c2*y2 + a1*a3*b1*b2*c2*y2 + a1*a2*b3*c2*y2 + a1*b1*b3*c2*y2 + a1*a2*b1*b3*c2*y2 + a1*a3*b1*b3*c2*y2 + a3*b1*c1*c2*y2 + a2*a3*b1*c1*c2*y2 + a2*a3*b1*b2*c1*c2*y2 + b1*b3*c1*c2*y2 + a2*b1*b3*c1*c2*y2 + a1*a2*b1*b3*c1*c2*y2 + a3*b1*b3*c1*c2*y2 + a2*a3*b1*b3*c1*c2*y2 + a2*b1*b2*b3*c1*c2*y2 + a1*b1*c3*y2 + a1*a2*b1*c3*y2 + a1*a3*b1*c3*y2 + a1*b2*c3*y2 + a1*a2*b2*c3*y2 + a1*a3*b2*c3*y2 + a1*b1*b2*c3*y2 + a1*a2*b1*b2*c3*y2 + a1*a3*b1*b2*c3*y2 + a1*a2*b3*c3*y2 + a1*a2*b1*b3*c3*y2 + a1*b2*b3*c3*y2 + a1*a3*b2*b3*c3*y2 + b1*c1*c3*y2 + a2*b1*c1*c3*y2 + a3*b1*c1*c3*y2 + b1*b2*b3*c1*c3*y2 + a3*b1*b2*b3*c1*c3*y2 + a1*b1*c2*c3*y2 + a1*a2*b1*c2*c3*y2 + a1*a3*b1*c2*c3*y2 + a1*b2*c2*c3*y2 + a1*a3*b2*c2*c3*y2 + a2*b1*b2*c2*c3*y2 + a1*a2*b1*b2*c2*c3*y2 + a2*a3*b1*b2*c2*c3*y2 + a1*b1*b3*c2*c3*y2 + a1*a2*b1*b3*c2*c3*y2 + a1*a3*b1*b3*c2*c3*y2 + a1*a3*b2*b3*c2*c3*y2 + a1*b1*b2*b3*c2*c3*y2 + a2*b1*b2*b3*c2*c3*y2 + b1*c1*c2*c3*y2 + a3*b1*c1*c2*c3*y2 + b1*b2*c1*c2*c3*y2 + a3*b1*b2*c1*c2*c3*y2 + b1*b3*c1*c2*c3*y2 + a3*b1*b3*c1*c2*c3*y2 + b1*b2*b3*c1*c2*c3*y2 + a3*b1*b2*b3*c1*c2*c3*y2 + a3*b1*x1*y2 + a3*b2*x1*y2 + a1*b3*x1*y2 + a2*b3*x1*y2 + a3*b3*x1*y2 + a3*b1*c1*x1*y2 + a3*b2*c1*x1*y2 + a1*b3*c1*x1*y2 + a2*b3*c1*x1*y2 + a3*b3*c1*x1*y2 + a3*b1*c2*x1*y2 + a3*b2*c2*x1*y2 + a1*b3*c2*x1*y2 + a2*b3*c2*x1*y2 + a3*b3*c2*x1*y2 + a3*b1*c1*c2*x1*y2 + a3*b2*c1*c2*x1*y2 + a1*b3*c1*c2*x1*y2 + a2*b3*c1*c2*x1*y2 + a3*b3*c1*c2*x1*y2 + a1*b1*c3*x1*y2 + a2*b1*c3*x1*y2 + a3*b1*c3*x1*y2 + a1*b2*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + b3*c3*x1*y2 + a1*b3*c3*x1*y2 + a2*b3*c3*x1*y2 + a1*b1*c1*c3*x1*y2 + a2*b1*c1*c3*x1*y2 + a3*b1*c1*c3*x1*y2 + a1*b2*c1*c3*x1*y2 + a2*b2*c1*c3*x1*y2 + a3*b2*c1*c3*x1*y2 + b3*c1*c3*x1*y2 + a1*b3*c1*c3*x1*y2 + a2*b3*c1*c3*x1*y2 + a1*b1*c2*c3*x1*y2 + a2*b1*c2*c3*x1*y2 + a3*b1*c2*c3*x1*y2 + a1*b2*c2*c3*x1*y2 + a2*b2*c2*c3*x1*y2 + a3*b2*c2*c3*x1*y2 + a1*b3*c2*c3*x1*y2 + a2*b3*c2*c3*x1*y2 + a3*b3*c2*c3*x1*y2 + a1*b1*c1*c2*c3*x1*y2 + a2*b1*c1*c2*c3*x1*y2 + a3*b1*c1*c2*c3*x1*y2 + a1*b2*c1*c2*c3*x1*y2 + a2*b2*c1*c2*c3*x1*y2 + a3*b2*c1*c2*c3*x1*y2 + a1*b3*c1*c2*c3*x1*y2 + a2*b3*c1*c2*c3*x1*y2 + a3*b3*c1*c2*c3*x1*y2 + a3*b1*c1*c2*x2*y2 + a3*b2*c1*c2*x2*y2 + a1*b3*c1*c2*x2*y2 + a2*b3*c1*c2*x2*y2 + a3*b3*c1*c2*x2*y2 + b2*b3*c1*c2*x2*y2 + a1*b1*c2*c3*x2*y2 + a2*b1*c2*c3*x2*y2 + a3*b1*c2*c3*x2*y2 + a1*b2*c2*c3*x2*y2 + a1*b3*c2*c3*x2*y2 + b1*b3*c2*c3*x2*y2 + b2*c1*c2*c3*x2*y2 + b1*b2*c1*c2*c3*x2*y2 + b3*c1*c2*c3*x2*y2 + b1*b3*c1*c2*c3*x2*y2 + a1*b1*c1*c3*y1*y2 + a2*b1*c1*c3*y1*y2 + a3*b1*c1*c3*y1*y2 + b2*c1*c3*y1*y2 + a1*b2*c1*c3*y1*y2 + a2*b2*c1*c3*y1*y2 + a3*b2*c1*c3*y1*y2 + b1*b2*c1*c3*y1*y2 + a1*b3*c1*c3*y1*y2 + a2*b3*c1*c3*y1*y2 + b1*b3*c1*c3*y1*y2 + a1*b1*c1*c2*c3*y1*y2 + a2*b1*c1*c2*c3*y1*y2 + a3*b1*c1*c2*c3*y1*y2 + b2*c1*c2*c3*y1*y2 + a1*b2*c1*c2*c3*y1*y2 + a2*b2*c1*c2*c3*y1*y2 + a3*b2*c1*c2*c3*y1*y2 + b1*b2*c1*c2*c3*y1*y2 + b3*c1*c2*c3*y1*y2 + a1*b3*c1*c2*c3*y1*y2 + a2*b3*c1*c2*c3*y1*y2 + a3*b3*c1*c2*c3*y1*y2 + b1*b3*c1*c2*c3*y1*y2 + a1*a2*b2*y3 + a1*b1*b2*y3 + a2*b1*b2*y3 + a1*a3*b1*b2*y3 + a2*a3*b1*b2*y3 + a1*a2*b3*y3 + a1*b2*b3*y3 + a1*a3*b2*b3*y3 + a2*b1*c1*y3 + a1*a2*b1*c1*y3 + a2*a3*b1*c1*y3 + b1*b2*c1*y3 + a2*b1*b2*c1*y3 + a1*a2*b1*b2*c1*y3 + a3*b1*b2*c1*y3 + a2*a3*b1*b2*c1*y3 + a2*b1*b3*c1*y3 + a1*a2*b1*b3*c1*y3 + a2*a3*b1*b3*c1*y3 + b1*b2*b3*c1*y3 + a3*b1*b2*b3*c1*y3 + a2*b1*c2*y3 + a1*a2*b1*c2*y3 + a2*a3*b1*c2*y3 + a1*b2*c2*y3 + a2*b1*b2*c2*y3 + a1*a2*b1*b2*c2*y3 + a2*a3*b1*b2*c2*y3 + a2*b1*b3*c2*y3 + a1*a2*b1*b3*c2*y3 + a2*a3*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + a1*b1*b2*b3*c2*y3 + a3*b2*c1*c2*y3 + a1*a3*b2*c1*c2*y3 + a2*a3*b2*c1*c2*y3 + a1*a3*b1*b2*c1*c2*y3 + a2*a3*b1*b2*c1*c2*y3 + a1*a3*b2*b3*c1*c2*y3 + a2*a3*b2*b3*c1*c2*y3 + b1*b2*b3*c1*c2*y3 + a1*b1*b2*b3*c1*c2*y3 + a3*b1*b2*b3*c1*c2*y3 + a1*a2*b2*c3*y3 + a1*b1*b2*c3*y3 + a2*b1*b2*c3*y3 + a1*a3*b1*b2*c3*y3 + a2*a3*b1*b2*c3*y3 + a1*a2*b3*c3*y3 + a1*b2*b3*c3*y3 + a1*a3*b2*b3*c3*y3 + a2*b1*c1*c3*y3 + b1*b2*c1*c3*y3 + a3*b1*b2*c1*c3*y3 + b1*b2*b3*c1*c3*y3 + a3*b1*b2*b3*c1*c3*y3 + a2*b1*c2*c3*y3 + a1*b2*c2*c3*y3 + a1*a3*b2*c2*c3*y3 + b1*b2*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + a1*a3*b1*b2*c2*c3*y3 + a2*a3*b1*b2*c2*c3*y3 + a1*b2*b3*c2*c3*y3 + a1*a3*b2*b3*c2*c3*y3 + b1*b2*b3*c2*c3*y3 + a3*b2*c1*c2*c3*y3 + b1*b2*c1*c2*c3*y3 + a3*b1*b2*c1*c2*c3*y3 + a3*b2*b3*c1*c2*c3*y3 + a3*b1*b2*b3*c1*c2*c3*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a3*b1*x2*y3 + a1*b2*x2*y3 + a1*b3*x2*y3 + c1*x2*y3 + a1*b1*c1*x2*y3 + a2*b1*c1*x2*y3 + a3*b1*c1*x2*y3 + a1*b2*c1*x2*y3 + a2*b2*c1*x2*y3 + a3*b2*c1*x2*y3 + a1*b3*c1*x2*y3 + a2*b3*c1*x2*y3 + a3*b3*c1*x2*y3 + a1*b1*c2*x2*y3 + a2*b1*c2*x2*y3 + a3*b1*c2*x2*y3 + a1*b2*c2*x2*y3 + a1*b3*c2*x2*y3 + c1*c2*x2*y3 + a1*b1*c1*c2*x2*y3 + a2*b1*c1*c2*x2*y3 + a3*b1*c1*c2*x2*y3 + a1*b2*c1*c2*x2*y3 + a2*b2*c1*c2*x2*y3 + a3*b2*c1*c2*x2*y3 + a1*b3*c1*c2*x2*y3 + a2*b3*c1*c2*x2*y3 + a3*b3*c1*c2*x2*y3 + a1*b1*c3*x2*y3 + a2*b1*c3*x2*y3 + a3*b1*c3*x2*y3 + a1*b2*c3*x2*y3 + a1*b3*c3*x2*y3 + b2*c1*c3*x2*y3 + b1*b2*c1*c3*x2*y3 + b3*c1*c3*x2*y3 + b1*b3*c1*c3*x2*y3 + a1*b1*c2*c3*x2*y3 + a2*b1*c2*c3*x2*y3 + a3*b1*c2*c3*x2*y3 + a1*b2*c2*c3*x2*y3 + a1*b3*c2*c3*x2*y3 + b2*c1*c2*c3*x2*y3 + b1*b2*c1*c2*c3*x2*y3 + b3*c1*c2*c3*x2*y3 + b1*b3*c1*c2*c3*x2*y3 + c1*c2*x3*y3 + a1*b1*c1*c2*x3*y3 + a2*b1*c1*c2*x3*y3 + a3*b1*c1*c2*x3*y3 + b2*c1*c2*x3*y3 + a1*b2*c1*c2*x3*y3 + a2*b2*c1*c2*x3*y3 + a3*b2*c1*c2*x3*y3 + b1*b2*c1*c2*x3*y3 + a1*b3*c1*c2*x3*y3 + a2*b3*c1*c2*x3*y3 + a3*b3*c1*c2*x3*y3 + b2*b3*c1*c2*x3*y3 + a1*b1*c2*c3*x3*y3 + a2*b1*c2*c3*x3*y3 + a3*b1*c2*c3*x3*y3 + a1*b2*c2*c3*x3*y3 + a1*b3*c2*c3*x3*y3 + b1*b3*c2*c3*x3*y3 + b2*c1*c2*c3*x3*y3 + b1*b2*c1*c2*c3*x3*y3 + b3*c1*c2*c3*x3*y3 + b1*b3*c1*c2*c3*x3*y3 + a2*a3*b1*(a1 + z1) + a2*a3*b2*(a1 + z1) + a3*b1*b2*(a1 + z1) + a1*a2*b3*(a1 + z1) + a2*a3*b3*(a1 + z1) + a1*b2*b3*(a1 + z1) + a2*b2*b3*(a1 + z1) + a3*b2*b3*(a1 + z1) + a2*b1*b3*c1*(a1 + z1) + b1*b2*b3*c1*(a1 + z1) + a3*b1*c2*(a1 + z1) + a3*b2*c2*(a1 + z1) + a1*b1*b3*c2*(a1 + z1) + a3*b1*b3*c2*(a1 + z1) + b2*b3*c2*(a1 + z1) + a1*b2*b3*c2*(a1 + z1) + a3*b2*b3*c2*(a1 + z1) + b1*b2*b3*c2*(a1 + z1) + b1*b3*c1*c2*(a1 + z1) + b1*b2*b3*c1*c2*(a1 + z1) + a1*b2*c3*(a1 + z1) + a2*b3*c3*(a1 + z1) + b1*b2*c1*c3*(a1 + z1) + b1*b3*c2*c3*(a1 + z1) + b2*b3*c2*c3*(a1 + z1) + a1*a2*b3*(a2 + z2) + a1*b2*b3*(a2 + z2) + a2*b1*b3*c1*(a2 + z2) + b1*b2*b3*c1*(a2 + z2) + a1*b1*b3*c2*(a2 + z2) + a2*b1*b3*c2*(a2 + z2) + a1*b2*b3*c2*(a2 + z2) + b1*b3*c1*c2*(a2 + z2) + b1*b2*b3*c1*c2*(a2 + z2) + a1*b2*c3*(a2 + z2) + b1*b2*c1*c3*(a2 + z2) + b1*b3*c2*c3*(a2 + z2) + a1*a2*b1*(a3 + z3) + a1*a2*b2*(a3 + z3) + a1*b1*b2*(a3 + z3) + a2*b1*b2*(a3 + z3) + a1*a2*b3*(a3 + z3) + a1*b2*b3*(a3 + z3) + a2*b1*c1*(a3 + z3) + b1*b2*c1*(a3 + z3) + a2*b1*b2*c1*(a3 + z3) + a2*b1*b3*c1*(a3 + z3) + b1*b2*b3*c1*(a3 + z3) + a1*b2*c2*(a3 + z3) + a1*b1*b3*c2*(a3 + z3) + a2*b1*b3*c2*(a3 + z3) + a1*b2*b3*c2*(a3 + z3) + b1*b2*c1*c2*(a3 + z3) + b1*b3*c1*c2*(a3 + z3) + b1*b2*b3*c1*c2*(a3 + z3) + a1*b2*c3*(a3 + z3) + b1*b2*c1*c3*(a3 + z3) + b1*b3*c2*c3*(a3 + z3) + b1*(a2 + z2)*(a3 + z3);
end;
#####################################################################
#####################################################################
#Space Group No. 97 ( I422)
#####################################################################
Acpin97:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acppin97:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyzin97:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain97:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + b2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
B2in97:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*x2 + b1*x2 + a1*b2*x2 + c1*x2 + b2*c1*x2 + b2*y1 + a1*y2 + b1*y2 + a1*b2*y2 + c1*y2 + b2*c1*y2 + b1*z2 + a1*b2*z2;
end;
#####################################################################
B3in97:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*z1 + b1*x2*z1 + y2*z1 + b1*y2*z1 + b1*x2*z2 + b1*y2*z2 + b1*z1*z2;
end;
#####################################################################
C1in97:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a3*c1*c2*x1 + a3*b1*c1*c2*x1 + a1*b3*c1*c2*x1 + a2*b2*c1*c3*x1 + a3*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + c2*c3*x1 + a1*c2*c3*x1 + a2*c2*c3*x1 + a3*c2*c3*x1 + b1*c2*c3*x1 + a1*b1*c2*c3*x1 + a2*b1*c2*c3*x1 + a3*b1*c2*c3*x1 + b2*c2*c3*x1 + a1*b2*c2*c3*x1 + a2*b2*c2*c3*x1 + a3*b2*c2*c3*x1 + b3*c2*c3*x1 + a1*b3*c2*c3*x1 + a2*b3*c2*c3*x1 + b1*b3*c2*c3*x1 + b2*b3*c2*c3*x1 + b1*b2*c1*c2*c3*x1 + b3*c1*c2*c3*x1 + b1*b3*c1*c2*c3*x1 + b2*b3*c1*c2*c3*x1 + a2*b3*x1*(1 + x1) + (a3*c2*x1*(1 + x1))/2 + (a3*b1*c2*x1*(1 + x1))/2 + (b3*c2*x1*(1 + x1))/2 + (a1*b3*c2*x1*(1 + x1))/2 + (b1*b3*c2*x1*(1 + x1))/2 + b2*b3*c2*x1*(1 + x1) + (b3*c1*c2*x1*(1 + x1))/2 + (b1*b3*c1*c2*x1*(1 + x1))/2 + (a2*b2*c3*x1*(1 + x1))/2 + (a3*b2*c3*x1*(1 + x1))/2 + (a2*b3*c3*x1*(1 + x1))/2 + (c2*c3*x1*(1 + x1))/2 + (b1*c2*c3*x1*(1 + x1))/2 + (b2*c2*c3*x1*(1 + x1))/2 + (b2*b3*c2*c3*x1*(1 + x1))/2 + a3*x1*x2 + a1*a2*a3*x1*x2 + a3*b2*x1*x2 + a1*b3*x1*x2 + a2*b3*x1*x2 + a3*b3*x1*x2 + b1*b3*x1*x2 + a1*b2*b3*x1*x2 + b1*b2*b3*x1*x2 + a2*a3*c1*x1*x2 + a2*a3*b1*c1*x1*x2 + b3*c1*x1*x2 + b1*b3*c1*x1*x2 + b2*b3*c1*x1*x2 + b1*b2*b3*c1*x1*x2 + a1*a3*c2*x1*x2 + a3*b1*c2*x1*x2 + a2*a3*b1*c2*x1*x2 + a1*a3*b2*c2*x1*x2 + a3*b1*b2*c2*x1*x2 + b2*b3*c2*x1*x2 + b1*b2*b3*c2*x1*x2 + a3*c1*c2*x1*x2 + a3*b1*c1*c2*x1*x2 + a3*b2*c1*c2*x1*x2 + a3*b1*b2*c1*c2*x1*x2 + a1*c3*x1*x2 + a2*c3*x1*x2 + a3*c3*x1*x2 + a1*b2*c3*x1*x2 + a2*b2*c3*x1*x2 + a3*b2*c3*x1*x2 + a2*b3*c3*x1*x2 + c1*c3*x1*x2 + b1*c1*c3*x1*x2 + b2*c1*c3*x1*x2 + b1*b2*c1*c3*x1*x2 + c2*c3*x1*x2 + b1*c2*c3*x1*x2 + b2*c2*c3*x1*x2 + b1*b2*c2*c3*x1*x2 + b3*c2*c3*x1*x2 + b2*b3*c2*c3*x1*x2 + a2*x1*x3 + a2*b1*x1*x3 + a2*b2*x1*x3 + a3*b2*x1*x3 + a2*b1*b2*x1*x3 + a3*b2*b3*x1*x3 + b2*c2*x1*x3 + b1*b2*c2*x1*x3 + b3*c2*x1*x3 + b1*b3*c2*x1*x3 + a3*c1*c2*y1 + a3*b1*c1*c2*y1 + b3*c1*c2*y1 + a1*b3*c1*c2*y1 + a2*b2*c1*c3*y1 + a3*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a1*c2*c3*y1 + a2*c2*c3*y1 + a3*c2*c3*y1 + a1*b1*c2*c3*y1 + a2*b1*c2*c3*y1 + a3*b1*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + a3*b2*c2*c3*y1 + a1*b3*c2*c3*y1 + a2*b3*c2*c3*y1 + b1*b3*c2*c3*y1 + b2*b3*c2*c3*y1 + b1*b2*c1*c2*c3*y1 + b3*c1*c2*c3*y1 + b1*b3*c1*c2*c3*y1 + b2*b3*c1*c2*c3*y1 + a2*a3*x1*y1 + b2*b3*x1*y1 + a3*b2*c2*x1*y1 + b3*c2*x1*y1 + b1*b3*c2*x1*y1 + b2*c3*x1*y1 + a2*b2*c3*x1*y1 + a3*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + c2*c3*x1*y1 + b1*c2*c3*x1*y1 + b2*c2*c3*x1*y1 + b2*b3*c2*c3*x1*y1 + a3*x2*y1 + a2*a3*x2*y1 + a1*a2*a3*x2*y1 + a3*b2*x2*y1 + b3*x2*y1 + a1*b3*x2*y1 + a2*b3*x2*y1 + a3*b3*x2*y1 + b1*b3*x2*y1 + b2*b3*x2*y1 + a1*b2*b3*x2*y1 + b1*b2*b3*x2*y1 + a2*a3*c1*x2*y1 + a2*a3*b1*c1*x2*y1 + b3*c1*x2*y1 + b1*b3*c1*x2*y1 + b2*b3*c1*x2*y1 + b1*b2*b3*c1*x2*y1 + a3*c2*x2*y1 + a1*a3*c2*x2*y1 + a3*b1*c2*x2*y1 + a2*a3*b1*c2*x2*y1 + a3*b2*c2*x2*y1 + a1*a3*b2*c2*x2*y1 + a3*b1*b2*c2*x2*y1 + b2*b3*c2*x2*y1 + b1*b2*b3*c2*x2*y1 + a3*c1*c2*x2*y1 + a3*b1*c1*c2*x2*y1 + a3*b2*c1*c2*x2*y1 + a3*b1*b2*c1*c2*x2*y1 + c3*x2*y1 + a1*c3*x2*y1 + a2*c3*x2*y1 + a3*c3*x2*y1 + b2*c3*x2*y1 + a1*b2*c3*x2*y1 + a2*b2*c3*x2*y1 + a3*b2*c3*x2*y1 + a2*b3*c3*x2*y1 + c1*c3*x2*y1 + b1*c1*c3*x2*y1 + b2*c1*c3*x2*y1 + b1*b2*c1*c3*x2*y1 + c2*c3*x2*y1 + b1*c2*c3*x2*y1 + b2*c2*c3*x2*y1 + b1*b2*c2*c3*x2*y1 + b3*c2*c3*x2*y1 + b2*b3*c2*c3*x2*y1 + a2*x3*y1 + a2*b1*x3*y1 + a2*b2*x3*y1 + a3*b2*x3*y1 + a2*b1*b2*x3*y1 + a3*b2*b3*x3*y1 + b2*c2*x3*y1 + b1*b2*c2*x3*y1 + b3*c2*x3*y1 + b1*b3*c2*x3*y1 + a2*b3*y1*(1 + y1) + (a3*c2*y1*(1 + y1))/2 + (a3*b1*c2*y1*(1 + y1))/2 + b3*c2*y1*(1 + y1) + (a1*b3*c2*y1*(1 + y1))/2 + (b1*b3*c2*y1*(1 + y1))/2 + b2*b3*c2*y1*(1 + y1) + (b3*c1*c2*y1*(1 + y1))/2 + (b1*b3*c1*c2*y1*(1 + y1))/2 + (a2*b2*c3*y1*(1 + y1))/2 + (a3*b2*c3*y1*(1 + y1))/2 + (a2*b3*c3*y1*(1 + y1))/2 + (c2*c3*y1*(1 + y1))/2 + (b1*c2*c3*y1*(1 + y1))/2 + (b2*c2*c3*y1*(1 + y1))/2 + (b2*b3*c2*c3*y1*(1 + y1))/2 + a1*a3*x1*y2 + a2*a3*x1*y2 + a1*a2*a3*x1*y2 + a3*b2*x1*y2 + a1*b3*x1*y2 + a2*b3*x1*y2 + a3*b3*x1*y2 + b1*b3*x1*y2 + b2*b3*x1*y2 + a1*b2*b3*x1*y2 + b1*b2*b3*x1*y2 + a3*c1*x1*y2 + a2*a3*c1*x1*y2 + a3*b1*c1*x1*y2 + a2*a3*b1*c1*x1*y2 + b3*c1*x1*y2 + b1*b3*c1*x1*y2 + b2*b3*c1*x1*y2 + b1*b2*b3*c1*x1*y2 + a3*c2*x1*y2 + a1*a3*c2*x1*y2 + a2*a3*b1*c2*x1*y2 + a3*b2*c2*x1*y2 + a1*a3*b2*c2*x1*y2 + a3*b1*b2*c2*x1*y2 + b2*b3*c2*x1*y2 + b1*b2*b3*c2*x1*y2 + a3*c1*c2*x1*y2 + a3*b1*c1*c2*x1*y2 + a3*b2*c1*c2*x1*y2 + a3*b1*b2*c1*c2*x1*y2 + a1*c3*x1*y2 + a2*c3*x1*y2 + a3*c3*x1*y2 + a1*b2*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + b3*c3*x1*y2 + a2*b3*c3*x1*y2 + c1*c3*x1*y2 + b1*c1*c3*x1*y2 + b2*c1*c3*x1*y2 + b1*b2*c1*c3*x1*y2 + c2*c3*x1*y2 + b1*c2*c3*x1*y2 + b2*c2*c3*x1*y2 + b1*b2*c2*c3*x1*y2 + b3*c2*c3*x1*y2 + b2*b3*c2*c3*x1*y2 + a3*y1*y2 + a1*a3*y1*y2 + a1*a2*a3*y1*y2 + a3*b2*y1*y2 + b3*y1*y2 + a1*b3*y1*y2 + a2*b3*y1*y2 + a3*b3*y1*y2 + b1*b3*y1*y2 + a1*b2*b3*y1*y2 + b1*b2*b3*y1*y2 + a3*c1*y1*y2 + a2*a3*c1*y1*y2 + a3*b1*c1*y1*y2 + a2*a3*b1*c1*y1*y2 + b3*c1*y1*y2 + b1*b3*c1*y1*y2 + b2*b3*c1*y1*y2 + b1*b2*b3*c1*y1*y2 + a1*a3*c2*y1*y2 + a2*a3*b1*c2*y1*y2 + a1*a3*b2*c2*y1*y2 + a3*b1*b2*c2*y1*y2 + b2*b3*c2*y1*y2 + b1*b2*b3*c2*y1*y2 + a3*c1*c2*y1*y2 + a3*b1*c1*c2*y1*y2 + a3*b2*c1*c2*y1*y2 + a3*b1*b2*c1*c2*y1*y2 + c3*y1*y2 + a1*c3*y1*y2 + a2*c3*y1*y2 + a3*c3*y1*y2 + b2*c3*y1*y2 + a1*b2*c3*y1*y2 + a2*b2*c3*y1*y2 + a3*b2*c3*y1*y2 + b3*c3*y1*y2 + a2*b3*c3*y1*y2 + c1*c3*y1*y2 + b1*c1*c3*y1*y2 + b2*c1*c3*y1*y2 + b1*b2*c1*c3*y1*y2 + c2*c3*y1*y2 + b1*c2*c3*y1*y2 + b2*c2*c3*y1*y2 + b1*b2*c2*c3*y1*y2 + b3*c2*c3*y1*y2 + b2*b3*c2*c3*y1*y2 + a2*x1*y3 + a2*b1*x1*y3 + b2*x1*y3 + a2*b2*x1*y3 + a3*b2*x1*y3 + b1*b2*x1*y3 + a2*b1*b2*x1*y3 + b2*b3*x1*y3 + a3*b2*b3*x1*y3 + b2*c2*x1*y3 + b1*b2*c2*x1*y3 + b3*c2*x1*y3 + b1*b3*c2*x1*y3 + a2*y1*y3 + a2*b1*y1*y3 + b2*y1*y3 + a2*b2*y1*y3 + a3*b2*y1*y3 + b1*b2*y1*y3 + a2*b1*b2*y1*y3 + b2*b3*y1*y3 + a3*b2*b3*y1*y3 + b2*c2*y1*y3 + b1*b2*c2*y1*y3 + b3*c2*y1*y3 + b1*b3*c2*y1*y3 + a3*b1*c1*c2*z1 + a1*b3*c1*c2*z1 + a2*b2*c1*c3*z1 + a3*b2*c1*c3*z1 + a2*b3*c1*c3*z1 + b1*c2*c3*z1 + a1*b1*c2*c3*z1 + a2*b1*c2*c3*z1 + a3*b1*c2*c3*z1 + b2*c2*c3*z1 + a1*b2*c2*c3*z1 + a2*b2*c2*c3*z1 + a3*b2*c2*c3*z1 + a1*b3*c2*c3*z1 + a2*b3*c2*c3*z1 + b1*b3*c2*c3*z1 + b2*b3*c2*c3*z1 + b2*c1*c2*c3*z1 + b1*b2*c1*c2*c3*z1 + b1*b3*c1*c2*c3*z1 + b2*b3*c1*c2*c3*z1 + b2*b3*x1*z1 + a2*a3*c1*x1*z1 + b2*b3*c1*x1*z1 + a1*a3*c2*x1*z1 + a2*a3*c2*x1*z1 + a3*b2*c2*x1*z1 + b3*c2*x1*z1 + a1*b3*c2*x1*z1 + b2*b3*c2*x1*z1 + a3*b2*c1*c2*x1*z1 + a1*b3*c1*c2*x1*z1 + a2*b2*c3*x1*z1 + a3*b2*c3*x1*z1 + a2*b3*c3*x1*z1 + b2*c1*c3*x1*z1 + b2*b3*c2*c3*x1*z1 + a3*x2*z1 + a1*a2*a3*x2*z1 + a3*b2*x2*z1 + b3*x2*z1 + a1*b3*x2*z1 + a2*b3*x2*z1 + a3*b3*x2*z1 + b1*b3*x2*z1 + b2*b3*x2*z1 + a1*b2*b3*x2*z1 + b1*b2*b3*x2*z1 + a2*a3*b1*c1*x2*z1 + b1*b3*c1*x2*z1 + b1*b2*b3*c1*x2*z1 + a3*c2*x2*z1 + a1*a3*c2*x2*z1 + a2*a3*c2*x2*z1 + a3*b1*c2*x2*z1 + a2*a3*b1*c2*x2*z1 + a3*b2*c2*x2*z1 + a1*a3*b2*c2*x2*z1 + a3*b1*b2*c2*x2*z1 + b1*b2*b3*c2*x2*z1 + a3*b1*c1*c2*x2*z1 + a3*b1*b2*c1*c2*x2*z1 + a1*c3*x2*z1 + a2*c3*x2*z1 + a3*c3*x2*z1 + a1*b2*c3*x2*z1 + a2*b2*c3*x2*z1 + a3*b2*c3*x2*z1 + a2*b3*c3*x2*z1 + b1*c1*c3*x2*z1 + b1*b2*c1*c3*x2*z1 + b1*c2*c3*x2*z1 + b1*b2*c2*c3*x2*z1 + b3*c2*c3*x2*z1 + b2*b3*c2*c3*x2*z1 + a2*b1*x3*z1 + a3*b2*x3*z1 + a2*b1*b2*x3*z1 + a3*b2*b3*x3*z1 + b1*b2*c2*x3*z1 + b1*b3*c2*x3*z1 + a2*a3*y1*z1 + a2*a3*c1*y1*z1 + b2*b3*c1*y1*z1 + a1*a3*c2*y1*z1 + a2*a3*c2*y1*z1 + a3*b1*c2*y1*z1 + b3*c2*y1*z1 + b2*b3*c2*y1*z1 + a3*b2*c1*c2*y1*z1 + a1*b3*c1*c2*y1*z1 + b1*b3*c1*c2*y1*z1 + b2*c3*y1*z1 + a2*b2*c3*y1*z1 + a3*b2*c3*y1*z1 + a2*b3*c3*y1*z1 + b2*c1*c3*y1*z1 + b2*b3*c2*c3*y1*z1 + a1*a3*y2*z1 + a2*a3*y2*z1 + a1*a2*a3*y2*z1 + a3*b2*y2*z1 + 3*b3*y2*z1 + a1*b3*y2*z1 + a2*b3*y2*z1 + a3*b3*y2*z1 + b1*b3*y2*z1 + a1*b2*b3*y2*z1 + b1*b2*b3*y2*z1 + a3*b1*c1*y2*z1 + a2*a3*b1*c1*y2*z1 + b1*b3*c1*y2*z1 + b1*b2*b3*c1*y2*z1 + a3*c2*y2*z1 + a1*a3*c2*y2*z1 + a2*a3*c2*y2*z1 + a2*a3*b1*c2*y2*z1 + a1*a3*b2*c2*y2*z1 + a3*b1*b2*c2*y2*z1 + b1*b2*b3*c2*y2*z1 + a3*b1*c1*c2*y2*z1 + a3*b1*b2*c1*c2*y2*z1 + a1*c3*y2*z1 + a2*c3*y2*z1 + a3*c3*y2*z1 + a1*b2*c3*y2*z1 + a2*b2*c3*y2*z1 + a3*b2*c3*y2*z1 + b3*c3*y2*z1 + a2*b3*c3*y2*z1 + b1*c1*c3*y2*z1 + b1*b2*c1*c3*y2*z1 + b1*c2*c3*y2*z1 + b1*b2*c2*c3*y2*z1 + b3*c2*c3*y2*z1 + b2*b3*c2*c3*y2*z1 + a2*b1*y3*z1 + a3*b2*y3*z1 + b1*b2*y3*z1 + a2*b1*b2*y3*z1 + b2*b3*y3*z1 + a3*b2*b3*y3*z1 + b1*b2*c2*y3*z1 + b1*b3*c2*y3*z1 + a2*b3*z1*(1 + z1) + (a3*b1*c2*z1*(1 + z1))/2 + (a1*b3*c2*z1*(1 + z1))/2 + (b1*b3*c2*z1*(1 + z1))/2 + b2*b3*c2*z1*(1 + z1) + (b1*b3*c1*c2*z1*(1 + z1))/2 + (a2*b2*c3*z1*(1 + z1))/2 + (a3*b2*c3*z1*(1 + z1))/2 + (a2*b3*c3*z1*(1 + z1))/2 + (b1*c2*c3*z1*(1 + z1))/2 + (b2*c2*c3*z1*(1 + z1))/2 + (b2*b3*c2*c3*z1*(1 + z1))/2 + a1*a2*a3*x1*z2 + b2*b3*x1*z2 + a1*b2*b3*x1*z2 + b1*b2*b3*x1*z2 + a2*a3*c1*x1*z2 + a2*a3*b1*c1*x1*z2 + b2*b3*c1*x1*z2 + b1*b2*b3*c1*x1*z2 + a2*a3*c2*x1*z2 + a2*a3*b1*c2*x1*z2 + a3*b2*c2*x1*z2 + a1*a3*b2*c2*x1*z2 + a3*b1*b2*c2*x1*z2 + b3*c2*x1*z2 + b1*b3*c2*x1*z2 + b2*b3*c2*x1*z2 + b1*b2*b3*c2*x1*z2 + a3*b2*c1*c2*x1*z2 + a3*b1*b2*c1*c2*x1*z2 + a1*b2*c3*x1*z2 + a2*b2*c3*x1*z2 + a3*b2*c3*x1*z2 + a2*b3*c3*x1*z2 + b2*c1*c3*x1*z2 + b1*b2*c1*c3*x1*z2 + b1*b2*c2*c3*x1*z2 + b2*b3*c2*c3*x1*z2 + a2*a3*y1*z2 + a1*a2*a3*y1*z2 + a1*b2*b3*y1*z2 + b1*b2*b3*y1*z2 + a2*a3*c1*y1*z2 + a2*a3*b1*c1*y1*z2 + b2*b3*c1*y1*z2 + b1*b2*b3*c1*y1*z2 + a2*a3*c2*y1*z2 + a2*a3*b1*c2*y1*z2 + a1*a3*b2*c2*y1*z2 + a3*b1*b2*c2*y1*z2 + b3*c2*y1*z2 + b1*b3*c2*y1*z2 + b2*b3*c2*y1*z2 + b1*b2*b3*c2*y1*z2 + a3*b2*c1*c2*y1*z2 + a3*b1*b2*c1*c2*y1*z2 + b2*c3*y1*z2 + a1*b2*c3*y1*z2 + a2*b2*c3*y1*z2 + a3*b2*c3*y1*z2 + a2*b3*c3*y1*z2 + b2*c1*c3*y1*z2 + b1*b2*c1*c3*y1*z2 + b1*b2*c2*c3*y1*z2 + b2*b3*c2*c3*y1*z2 + a1*a2*a3*z1*z2 + a1*b2*b3*z1*z2 + b1*b2*b3*z1*z2 + a2*a3*b1*c1*z1*z2 + b1*b2*b3*c1*z1*z2 + a2*a3*b1*c2*z1*z2 + a1*a3*b2*c2*z1*z2 + a3*b1*b2*c2*z1*z2 + b1*b3*c2*z1*z2 + b1*b2*b3*c2*z1*z2 + a3*b1*b2*c1*c2*z1*z2 + a1*b2*c3*z1*z2 + a2*b2*c3*z1*z2 + a3*b2*c3*z1*z2 + a2*b3*c3*z1*z2 + b1*b2*c1*c3*z1*z2 + b2*c2*c3*z1*z2 + b1*b2*c2*c3*z1*z2 + b2*b3*c2*c3*z1*z2 + a2*b2*x1*z3 + a2*b1*b2*x1*z3 + a3*b2*b3*x1*z3 + b3*c2*x1*z3 + b1*b3*c2*x1*z3 + a2*b2*y1*z3 + a2*b1*b2*y1*z3 + a3*b2*b3*y1*z3 + b3*c2*y1*z3 + b1*b3*c2*y1*z3 + a2*b1*b2*z1*z3 + a3*b2*b3*z1*z3 + b1*b3*c2*z1*z3;
end;
#####################################################################
C2in97:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a3*c1*c2*x1 + a3*b1*c1*c2*x1 + a1*b3*c1*c2*x1 + a2*b2*c1*c3*x1 + a3*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + c2*c3*x1 + a1*c2*c3*x1 + a2*c2*c3*x1 + a3*c2*c3*x1 + b1*c2*c3*x1 + a1*b1*c2*c3*x1 + a2*b1*c2*c3*x1 + a3*b1*c2*c3*x1 + b2*c2*c3*x1 + a1*b2*c2*c3*x1 + a2*b2*c2*c3*x1 + a3*b2*c2*c3*x1 + b3*c2*c3*x1 + a1*b3*c2*c3*x1 + a2*b3*c2*c3*x1 + b1*b3*c2*c3*x1 + b2*b3*c2*c3*x1 + b1*b2*c1*c2*c3*x1 + b3*c1*c2*c3*x1 + b1*b3*c1*c2*c3*x1 + b2*b3*c1*c2*c3*x1 + a2*b3*x1*(1 + x1) + (a3*c2*x1*(1 + x1))/2 + (a3*b1*c2*x1*(1 + x1))/2 + (b3*c2*x1*(1 + x1))/2 + (a1*b3*c2*x1*(1 + x1))/2 + (b1*b3*c2*x1*(1 + x1))/2 + b2*b3*c2*x1*(1 + x1) + (b3*c1*c2*x1*(1 + x1))/2 + (b1*b3*c1*c2*x1*(1 + x1))/2 + (a2*b2*c3*x1*(1 + x1))/2 + (a3*b2*c3*x1*(1 + x1))/2 + (a2*b3*c3*x1*(1 + x1))/2 + (c2*c3*x1*(1 + x1))/2 + (b1*c2*c3*x1*(1 + x1))/2 + (b2*c2*c3*x1*(1 + x1))/2 + (b2*b3*c2*c3*x1*(1 + x1))/2 + a3*x1*x2 + a1*a3*x1*x2 + a1*a2*a3*x1*x2 + a1*a3*b1*x1*x2 + a3*b2*x1*x2 + a1*a3*b1*b2*x1*x2 + a1*b3*x1*x2 + a2*b3*x1*x2 + a3*b3*x1*x2 + b1*b3*x1*x2 + a2*b1*b3*x1*x2 + a1*b2*b3*x1*x2 + b1*b2*b3*x1*x2 + a3*c1*x1*x2 + a2*a3*c1*x1*x2 + a1*a3*b1*c1*x1*x2 + a2*a3*b1*c1*x1*x2 + a3*b2*c1*x1*x2 + a1*a3*b2*c1*x1*x2 + b3*c1*x1*x2 + b1*b3*c1*x1*x2 + b2*b3*c1*x1*x2 + b1*b2*b3*c1*x1*x2 + a1*a3*c2*x1*x2 + 2*a3*b1*c2*x1*x2 + a2*a3*b1*c2*x1*x2 + a1*a3*b2*c2*x1*x2 + a3*b1*b2*c2*x1*x2 + a2*b1*b3*c2*x1*x2 + a3*b1*b3*c2*x1*x2 + b2*b3*c2*x1*x2 + b1*b2*b3*c2*x1*x2 + a3*c1*c2*x1*x2 + a3*b1*c1*c2*x1*x2 + a3*b2*c1*c2*x1*x2 + a3*b1*b2*c1*c2*x1*x2 + a1*c3*x1*x2 + a2*c3*x1*x2 + a3*c3*x1*x2 + a1*b2*c3*x1*x2 + a2*b2*c3*x1*x2 + a3*b2*c3*x1*x2 + a2*b3*c3*x1*x2 + c1*c3*x1*x2 + b1*c1*c3*x1*x2 + b2*c1*c3*x1*x2 + b1*b2*c1*c3*x1*x2 + c2*c3*x1*x2 + b1*c2*c3*x1*x2 + b2*c2*c3*x1*x2 + b1*b2*c2*c3*x1*x2 + b3*c2*c3*x1*x2 + b2*b3*c2*c3*x1*x2 + (a1*a3*b1*x1*(1 + x1)*x2)/2 + (a1*a3*b2*x1*(1 + x1)*x2)/2 + (a3*b1*c1*x1*(1 + x1)*x2)/2 + (a3*b2*c1*x1*(1 + x1)*x2)/2 + (a3*b1*x1*x2*(1 + x2))/2 + (a1*a3*b1*x1*x2*(1 + x2))/2 + (a1*a3*b2*x1*x2*(1 + x2))/2 + (a3*b1*c1*x1*x2*(1 + x2))/2 + (a3*b2*c1*x1*x2*(1 + x2))/2 + 2*a2*x1*x3 + a2*a3*x1*x3 + a2*b1*x1*x3 + a2*b2*x1*x3 + a1*a2*b2*x1*x3 + a3*b2*x1*x3 + a2*a3*b2*x1*x3 + a1*b1*b2*x1*x3 + 2*a2*b1*b2*x1*x3 + a1*a2*b1*b2*x1*x3 + a2*b3*x1*x3 + a2*b2*b3*x1*x3 + a3*b2*b3*x1*x3 + a2*c2*x1*x3 + a3*c2*x1*x3 + b1*c2*x1*x3 + a1*b1*c2*x1*x3 + a2*b1*c2*x1*x3 + b2*c2*x1*x3 + a3*b2*c2*x1*x3 + 2*b1*b2*c2*x1*x3 + a1*b1*b2*c2*x1*x3 + b3*c2*x1*x3 + a2*b3*c2*x1*x3 + b1*b3*c2*x1*x3 + a3*b1*b3*c2*x1*x3 + a2*b2*b3*c2*x1*x3 + a3*b2*b3*c2*x1*x3 + a1*b1*x1*x2*x3 + a2*b1*x1*x2*x3 + a1*a2*b1*x1*x2*x3 + a1*b1*b2*x1*x2*x3 + a2*b1*b2*x1*x2*x3 + b1*c2*x1*x2*x3 + a1*b1*c2*x1*x2*x3 + b1*b2*c2*x1*x2*x3 + (b2*c1*x1*x3*(1 + x3))/2 + (b1*b2*c1*x1*x3*(1 + x3))/2 + (b1*c2*x1*x3*(1 + x3))/2 + (b2*c2*x1*x3*(1 + x3))/2 + (a1*a3*x2*x3*(1 + x3))/2 + (a2*b1*x2*x3*(1 + x3))/2 + (a3*c1*x2*x3*(1 + x3))/2 + (b1*c1*x2*x3*(1 + x3))/2 + (b1*b2*c1*x2*x3*(1 + x3))/2 + a3*c1*c2*y1 + a3*b1*c1*c2*y1 + b3*c1*c2*y1 + a1*b3*c1*c2*y1 + a2*b2*c1*c3*y1 + a3*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a1*c2*c3*y1 + a2*c2*c3*y1 + a3*c2*c3*y1 + a1*b1*c2*c3*y1 + a2*b1*c2*c3*y1 + a3*b1*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + a3*b2*c2*c3*y1 + a1*b3*c2*c3*y1 + a2*b3*c2*c3*y1 + b1*b3*c2*c3*y1 + b2*b3*c2*c3*y1 + b1*b2*c1*c2*c3*y1 + b3*c1*c2*c3*y1 + b1*b3*c1*c2*c3*y1 + b2*b3*c1*c2*c3*y1 + a2*a3*x1*y1 + b2*b3*x1*y1 + a3*b2*c2*x1*y1 + 2*b3*c2*x1*y1 + b1*b3*c2*x1*y1 + b2*c3*x1*y1 + a2*b2*c3*x1*y1 + a3*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + c2*c3*x1*y1 + b1*c2*c3*x1*y1 + b2*c2*c3*x1*y1 + b2*b3*c2*c3*x1*y1 + (a3*b2*x1*(1 + x1)*y1)/2 + (b1*b3*c2*x1*(1 + x1)*y1)/2 + 2*a3*x2*y1 + a1*a3*x2*y1 + a2*a3*x2*y1 + a1*a2*a3*x2*y1 + a3*b1*x2*y1 + a1*a3*b1*x2*y1 + a3*b2*x2*y1 + a3*b1*b2*x2*y1 + a1*a3*b1*b2*x2*y1 + b3*x2*y1 + a1*b3*x2*y1 + a2*b3*x2*y1 + a3*b3*x2*y1 + b1*b3*x2*y1 + a2*b1*b3*x2*y1 + b2*b3*x2*y1 + a1*b2*b3*x2*y1 + b1*b2*b3*x2*y1 + a3*c1*x2*y1 + a2*a3*c1*x2*y1 + a1*a3*b1*c1*x2*y1 + a2*a3*b1*c1*x2*y1 + a1*a3*b2*c1*x2*y1 + a3*b1*b2*c1*x2*y1 + b3*c1*x2*y1 + b1*b3*c1*x2*y1 + b2*b3*c1*x2*y1 + b1*b2*b3*c1*x2*y1 + a3*c2*x2*y1 + a1*a3*c2*x2*y1 + 2*a3*b1*c2*x2*y1 + a2*a3*b1*c2*x2*y1 + a3*b2*c2*x2*y1 + a1*a3*b2*c2*x2*y1 + a3*b1*b2*c2*x2*y1 + a2*b1*b3*c2*x2*y1 + a3*b1*b3*c2*x2*y1 + b2*b3*c2*x2*y1 + b1*b2*b3*c2*x2*y1 + a3*c1*c2*x2*y1 + a3*b1*c1*c2*x2*y1 + a3*b2*c1*c2*x2*y1 + a3*b1*b2*c1*c2*x2*y1 + c3*x2*y1 + a1*c3*x2*y1 + a2*c3*x2*y1 + a3*c3*x2*y1 + b2*c3*x2*y1 + a1*b2*c3*x2*y1 + a2*b2*c3*x2*y1 + a3*b2*c3*x2*y1 + a2*b3*c3*x2*y1 + c1*c3*x2*y1 + b1*c1*c3*x2*y1 + b2*c1*c3*x2*y1 + b1*b2*c1*c3*x2*y1 + c2*c3*x2*y1 + b1*c2*c3*x2*y1 + b2*c2*c3*x2*y1 + b1*b2*c2*c3*x2*y1 + b3*c2*c3*x2*y1 + b2*b3*c2*c3*x2*y1 + a3*b1*x1*x2*y1 + a3*b2*x1*x2*y1 + (a3*x2*(1 + x2)*y1)/2 + (a3*b1*x2*(1 + x2)*y1)/2 + (a1*a3*b1*x2*(1 + x2)*y1)/2 + (a3*b2*x2*(1 + x2)*y1)/2 + (a1*a3*b2*x2*(1 + x2)*y1)/2 + (a3*b1*b2*x2*(1 + x2)*y1)/2 + (a3*b1*c1*x2*(1 + x2)*y1)/2 + (a3*b2*c1*x2*(1 + x2)*y1)/2 + (b3*c2*x2*(1 + x2)*y1)/2 + 2*a2*x3*y1 + a2*a3*x3*y1 + a2*b1*x3*y1 + 2*a2*b2*x3*y1 + a1*a2*b2*x3*y1 + a3*b2*x3*y1 + b1*b2*x3*y1 + a1*b1*b2*x3*y1 + a2*b1*b2*x3*y1 + a1*a2*b1*b2*x3*y1 + a2*b3*x3*y1 + a2*b2*b3*x3*y1 + a3*b2*b3*x3*y1 + c2*x3*y1 + a2*c2*x3*y1 + a1*b1*c2*x3*y1 + a2*b1*c2*x3*y1 + 2*b2*c2*x3*y1 + a2*b2*c2*x3*y1 + b1*b2*c2*x3*y1 + a1*b1*b2*c2*x3*y1 + 2*b3*c2*x3*y1 + a2*b3*c2*x3*y1 + b1*b3*c2*x3*y1 + a3*b1*b3*c2*x3*y1 + b2*b3*c2*x3*y1 + a3*b2*b3*c2*x3*y1 + b1*b2*x1*x3*y1 + a3*x2*x3*y1 + a2*a3*x2*x3*y1 + b1*x2*x3*y1 + a1*b1*x2*x3*y1 + a1*a2*b1*x2*x3*y1 + a2*b2*x2*x3*y1 + a3*b2*x2*x3*y1 + b1*b2*x2*x3*y1 + a1*b1*b2*x2*x3*y1 + a2*b1*b2*x2*x3*y1 + a2*c2*x2*x3*y1 + a3*c2*x2*x3*y1 + a1*b1*c2*x2*x3*y1 + b1*b2*c2*x2*x3*y1 + a2*b3*c2*x2*x3*y1 + b2*b3*c2*x2*x3*y1 + (b2*c1*x3*(1 + x3)*y1)/2 + (b1*b2*c1*x3*(1 + x3)*y1)/2 + (c2*x3*(1 + x3)*y1)/2 + (b1*c2*x3*(1 + x3)*y1)/2 + (b2*c2*x3*(1 + x3)*y1)/2 + (b3*c2*x3*(1 + x3)*y1)/2 + a2*b3*y1*(1 + y1) + (a3*c2*y1*(1 + y1))/2 + (a3*b1*c2*y1*(1 + y1))/2 + b3*c2*y1*(1 + y1) + (a1*b3*c2*y1*(1 + y1))/2 + (b1*b3*c2*y1*(1 + y1))/2 + b2*b3*c2*y1*(1 + y1) + (b3*c1*c2*y1*(1 + y1))/2 + (b1*b3*c1*c2*y1*(1 + y1))/2 + (a2*b2*c3*y1*(1 + y1))/2 + (a3*b2*c3*y1*(1 + y1))/2 + (a2*b3*c3*y1*(1 + y1))/2 + (c2*c3*y1*(1 + y1))/2 + (b1*c2*c3*y1*(1 + y1))/2 + (b2*c2*c3*y1*(1 + y1))/2 + (b2*b3*c2*c3*y1*(1 + y1))/2 + (a3*b2*x1*y1*(1 + y1))/2 + (b1*b3*c2*x1*y1*(1 + y1))/2 + (a1*a3*b1*x2*y1*(1 + y1))/2 + (a3*b2*x2*y1*(1 + y1))/2 + (a1*a3*b2*x2*y1*(1 + y1))/2 + (a3*b1*b2*x2*y1*(1 + y1))/2 + (a3*b1*c1*x2*y1*(1 + y1))/2 + (a3*b2*c1*x2*y1*(1 + y1))/2 + 2*a1*a3*x1*y2 + a2*a3*x1*y2 + a1*a2*a3*x1*y2 + a3*b1*x1*y2 + a1*a3*b1*x1*y2 + a3*b2*x1*y2 + a3*b1*b2*x1*y2 + a1*a3*b1*b2*x1*y2 + b3*x1*y2 + a1*b3*x1*y2 + a2*b3*x1*y2 + a3*b3*x1*y2 + 2*b1*b3*x1*y2 + a2*b1*b3*x1*y2 + b2*b3*x1*y2 + a1*b2*b3*x1*y2 + b1*b2*b3*x1*y2 + 2*a3*c1*x1*y2 + a2*a3*c1*x1*y2 + 2*a3*b1*c1*x1*y2 + a1*a3*b1*c1*x1*y2 + a2*a3*b1*c1*x1*y2 + a1*a3*b2*c1*x1*y2 + b3*c1*x1*y2 + b1*b3*c1*x1*y2 + b2*b3*c1*x1*y2 + b1*b2*b3*c1*x1*y2 + a3*c2*x1*y2 + a1*a3*c2*x1*y2 + a3*b1*c2*x1*y2 + a2*a3*b1*c2*x1*y2 + a3*b2*c2*x1*y2 + a1*a3*b2*c2*x1*y2 + a3*b1*b2*c2*x1*y2 + b3*c2*x1*y2 + b1*b3*c2*x1*y2 + a2*b1*b3*c2*x1*y2 + a3*b1*b3*c2*x1*y2 + b2*b3*c2*x1*y2 + b1*b2*b3*c2*x1*y2 + a3*c1*c2*x1*y2 + a3*b1*c1*c2*x1*y2 + a3*b2*c1*c2*x1*y2 + a3*b1*b2*c1*c2*x1*y2 + a1*c3*x1*y2 + a2*c3*x1*y2 + a3*c3*x1*y2 + a1*b2*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + b3*c3*x1*y2 + a2*b3*c3*x1*y2 + c1*c3*x1*y2 + b1*c1*c3*x1*y2 + b2*c1*c3*x1*y2 + b1*b2*c1*c3*x1*y2 + c2*c3*x1*y2 + b1*c2*c3*x1*y2 + b2*c2*c3*x1*y2 + b1*b2*c2*c3*x1*y2 + b3*c2*c3*x1*y2 + b2*b3*c2*c3*x1*y2 + (a3*b1*x1*(1 + x1)*y2)/2 + (a1*a3*b1*x1*(1 + x1)*y2)/2 + (a3*b2*x1*(1 + x1)*y2)/2 + (a1*a3*b2*x1*(1 + x1)*y2)/2 + (a3*b1*c1*x1*(1 + x1)*y2)/2 + (a3*b2*c1*x1*(1 + x1)*y2)/2 + a3*b2*x1*x2*y2 + (a3*b1*b2*x2*(1 + x2)*y2)/2 + a2*b1*x1*x3*y2 + a1*a2*b1*x1*x3*y2 + a2*b1*b2*x1*x3*y2 + b1*c2*x1*x3*y2 + a1*b1*c2*x1*x3*y2 + b1*b2*c2*x1*x3*y2 + (a1*a3*x3*(1 + x3)*y2)/2 + (b1*x3*(1 + x3)*y2)/2 + (a2*b1*x3*(1 + x3)*y2)/2 + (a3*c1*x3*(1 + x3)*y2)/2 + (b1*c1*x3*(1 + x3)*y2)/2 + (b1*b2*c1*x3*(1 + x3)*y2)/2 + 2*a3*y1*y2 + 2*a1*a3*y1*y2 + a1*a2*a3*y1*y2 + a1*a3*b1*y1*y2 + a3*b2*y1*y2 + a1*a3*b1*b2*y1*y2 + 2*b3*y1*y2 + a1*b3*y1*y2 + a2*b3*y1*y2 + a3*b3*y1*y2 + 2*b1*b3*y1*y2 + a2*b1*b3*y1*y2 + a1*b2*b3*y1*y2 + b1*b2*b3*y1*y2 + 2*a3*c1*y1*y2 + a2*a3*c1*y1*y2 + 2*a3*b1*c1*y1*y2 + a1*a3*b1*c1*y1*y2 + a2*a3*b1*c1*y1*y2 + a3*b2*c1*y1*y2 + a1*a3*b2*c1*y1*y2 + a3*b1*b2*c1*y1*y2 + b3*c1*y1*y2 + b1*b3*c1*y1*y2 + b2*b3*c1*y1*y2 + b1*b2*b3*c1*y1*y2 + a1*a3*c2*y1*y2 + a3*b1*c2*y1*y2 + a2*a3*b1*c2*y1*y2 + a1*a3*b2*c2*y1*y2 + a3*b1*b2*c2*y1*y2 + b3*c2*y1*y2 + b1*b3*c2*y1*y2 + a2*b1*b3*c2*y1*y2 + a3*b1*b3*c2*y1*y2 + b2*b3*c2*y1*y2 + b1*b2*b3*c2*y1*y2 + a3*c1*c2*y1*y2 + a3*b1*c1*c2*y1*y2 + a3*b2*c1*c2*y1*y2 + a3*b1*b2*c1*c2*y1*y2 + c3*y1*y2 + a1*c3*y1*y2 + a2*c3*y1*y2 + a3*c3*y1*y2 + b2*c3*y1*y2 + a1*b2*c3*y1*y2 + a2*b2*c3*y1*y2 + a3*b2*c3*y1*y2 + b3*c3*y1*y2 + a2*b3*c3*y1*y2 + c1*c3*y1*y2 + b1*c1*c3*y1*y2 + b2*c1*c3*y1*y2 + b1*b2*c1*c3*y1*y2 + c2*c3*y1*y2 + b1*c2*c3*y1*y2 + b2*c2*c3*y1*y2 + b1*b2*c2*c3*y1*y2 + b3*c2*c3*y1*y2 + b2*b3*c2*c3*y1*y2 + a3*b1*x1*y1*y2 + a3*b2*x1*y1*y2 + a3*b2*x2*y1*y2 + a2*a3*x3*y1*y2 + a1*a2*b1*x3*y1*y2 + a2*b1*b2*x3*y1*y2 + c2*x3*y1*y2 + a2*c2*x3*y1*y2 + a3*c2*x3*y1*y2 + a1*b1*c2*x3*y1*y2 + b1*b2*c2*x3*y1*y2 + b3*c2*x3*y1*y2 + a2*b3*c2*x3*y1*y2 + (a3*b1*y1*(1 + y1)*y2)/2 + (a1*a3*b1*y1*(1 + y1)*y2)/2 + (a1*a3*b2*y1*(1 + y1)*y2)/2 + (a3*b1*b2*y1*(1 + y1)*y2)/2 + (a3*b1*c1*y1*(1 + y1)*y2)/2 + (a3*b2*c1*y1*(1 + y1)*y2)/2 + (a1*a3*b1*x1*y2*(1 + y2))/2 + (a3*b2*x1*y2*(1 + y2))/2 + (a1*a3*b2*x1*y2*(1 + y2))/2 + (a3*b1*c1*x1*y2*(1 + y2))/2 + (a3*b2*c1*x1*y2*(1 + y2))/2 + (a3*b1*b2*x2*y2*(1 + y2))/2 + (a3*y1*y2*(1 + y2))/2 + (a1*a3*b1*y1*y2*(1 + y2))/2 + (a1*a3*b2*y1*y2*(1 + y2))/2 + (a3*b1*b2*y1*y2*(1 + y2))/2 + (a3*b1*c1*y1*y2*(1 + y2))/2 + (a3*b2*c1*y1*y2*(1 + y2))/2 + (b3*c2*y1*y2*(1 + y2))/2 + a2*x1*y3 + a2*a3*x1*y3 + a2*b1*x1*y3 + 2*b2*x1*y3 + a1*b2*x1*y3 + 2*a2*b2*x1*y3 + a1*a2*b2*x1*y3 + 2*a3*b2*x1*y3 + a2*a3*b2*x1*y3 + 2*b1*b2*x1*y3 + 2*a2*b1*b2*x1*y3 + a1*a2*b1*b2*x1*y3 + a2*b3*x1*y3 + 2*b2*b3*x1*y3 + a2*b2*b3*x1*y3 + a3*b2*b3*x1*y3 + a2*c2*x1*y3 + a3*c2*x1*y3 + a1*b1*c2*x1*y3 + a2*b1*c2*x1*y3 + 2*b2*c2*x1*y3 + a3*b2*c2*x1*y3 + 2*b1*b2*c2*x1*y3 + a1*b1*b2*c2*x1*y3 + 2*b3*c2*x1*y3 + a2*b3*c2*x1*y3 + 2*b1*b3*c2*x1*y3 + a3*b1*b3*c2*x1*y3 + a2*b2*b3*c2*x1*y3 + a3*b2*b3*c2*x1*y3 + b1*x1*x2*y3 + a2*b1*x1*x2*y3 + a1*a2*b1*x1*x2*y3 + b1*b2*x1*x2*y3 + a1*b1*b2*x1*x2*y3 + a2*b1*b2*x1*x2*y3 + b1*c2*x1*x2*y3 + a1*b1*c2*x1*x2*y3 + b1*b2*c2*x1*x2*y3 + a2*b1*x1*x3*y3 + a1*b2*x1*x3*y3 + a2*b2*x1*x3*y3 + a1*b1*b2*x1*x3*y3 + b1*c2*x1*x3*y3 + b2*c2*x1*x3*y3 + a2*y1*y3 + a2*a3*y1*y3 + a2*b1*y1*y3 + 2*b2*y1*y3 + a1*b2*y1*y3 + 2*a2*b2*y1*y3 + a1*a2*b2*y1*y3 + a3*b2*y1*y3 + 2*b1*b2*y1*y3 + a2*b1*b2*y1*y3 + a1*a2*b1*b2*y1*y3 + a2*b3*y1*y3 + 2*b2*b3*y1*y3 + a2*b2*b3*y1*y3 + a3*b2*b3*y1*y3 + a2*c2*y1*y3 + b1*c2*y1*y3 + a1*b1*c2*y1*y3 + a2*b1*c2*y1*y3 + b2*c2*y1*y3 + a2*b2*c2*y1*y3 + b1*b2*c2*y1*y3 + a1*b1*b2*c2*y1*y3 + b3*c2*y1*y3 + a2*b3*c2*y1*y3 + 2*b1*b3*c2*y1*y3 + a3*b1*b3*c2*y1*y3 + a3*b2*b3*c2*y1*y3 + b1*b2*x1*y1*y3 + a2*x2*y1*y3 + a2*a3*x2*y1*y3 + b1*x2*y1*y3 + a1*a2*b1*x2*y1*y3 + a2*b2*x2*y1*y3 + a3*b2*x2*y1*y3 + a1*b1*b2*x2*y1*y3 + a2*b1*b2*x2*y1*y3 + a2*c2*x2*y1*y3 + a3*c2*x2*y1*y3 + a1*b1*c2*x2*y1*y3 + b1*b2*c2*x2*y1*y3 + b3*c2*x2*y1*y3 + a2*b3*c2*x2*y1*y3 + b2*b3*c2*x2*y1*y3 + a2*b1*x3*y1*y3 + b2*x3*y1*y3 + a1*b2*x3*y1*y3 + a3*b2*x3*y1*y3 + b1*b2*x3*y1*y3 + a1*b1*b2*x3*y1*y3 + b1*c2*x3*y1*y3 + b2*c2*x3*y1*y3 + b2*b3*c2*x3*y1*y3 + b1*x1*y2*y3 + a1*b1*x1*y2*y3 + a2*b1*x1*y2*y3 + a1*a2*b1*x1*y2*y3 + b1*b2*x1*y2*y3 + a2*b1*b2*x1*y2*y3 + b1*c2*x1*y2*y3 + a1*b1*c2*x1*y2*y3 + b1*b2*c2*x1*y2*y3 + y1*y2*y3 + a2*y1*y2*y3 + a3*y1*y2*y3 + a2*a3*y1*y2*y3 + a1*b1*y1*y2*y3 + a1*a2*b1*y1*y2*y3 + b1*b2*y1*y2*y3 + a2*b1*b2*y1*y2*y3 + c2*y1*y2*y3 + a2*c2*y1*y2*y3 + a3*c2*y1*y2*y3 + a1*b1*c2*y1*y2*y3 + b1*b2*c2*y1*y2*y3 + a2*b3*c2*y1*y2*y3 + (b2*c1*x1*y3*(1 + y3))/2 + (b1*b2*c1*x1*y3*(1 + y3))/2 + (b1*c2*x1*y3*(1 + y3))/2 + (b2*c2*x1*y3*(1 + y3))/2 + (a1*x2*y3*(1 + y3))/2 + (a1*a3*x2*y3*(1 + y3))/2 + (b1*x2*y3*(1 + y3))/2 + (a2*b1*x2*y3*(1 + y3))/2 + (c1*x2*y3*(1 + y3))/2 + (a3*c1*x2*y3*(1 + y3))/2 + (b1*c1*x2*y3*(1 + y3))/2 + (b1*b2*c1*x2*y3*(1 + y3))/2 + (b2*c1*y1*y3*(1 + y3))/2 + (b1*b2*c1*y1*y3*(1 + y3))/2 + (c2*y1*y3*(1 + y3))/2 + (b1*c2*y1*y3*(1 + y3))/2 + (b2*c2*y1*y3*(1 + y3))/2 + (b3*c2*y1*y3*(1 + y3))/2 + (a1*y2*y3*(1 + y3))/2 + (a1*a3*y2*y3*(1 + y3))/2 + (a2*b1*y2*y3*(1 + y3))/2 + (c1*y2*y3*(1 + y3))/2 + (a3*c1*y2*y3*(1 + y3))/2 + (b1*c1*y2*y3*(1 + y3))/2 + (b1*b2*c1*y2*y3*(1 + y3))/2 + a3*b1*c1*c2*z1 + a1*b3*c1*c2*z1 + a2*b2*c1*c3*z1 + a3*b2*c1*c3*z1 + a2*b3*c1*c3*z1 + b1*c2*c3*z1 + a1*b1*c2*c3*z1 + a2*b1*c2*c3*z1 + a3*b1*c2*c3*z1 + b2*c2*c3*z1 + a1*b2*c2*c3*z1 + a2*b2*c2*c3*z1 + a3*b2*c2*c3*z1 + a1*b3*c2*c3*z1 + a2*b3*c2*c3*z1 + b1*b3*c2*c3*z1 + b2*b3*c2*c3*z1 + b2*c1*c2*c3*z1 + b1*b2*c1*c2*c3*z1 + b1*b3*c1*c2*c3*z1 + b2*b3*c1*c2*c3*z1 + a2*b3*x1*z1 + b2*b3*x1*z1 + a2*a3*c1*x1*z1 + a3*b2*c1*x1*z1 + b2*b3*c1*x1*z1 + a3*c2*x1*z1 + a1*a3*c2*x1*z1 + a2*a3*c2*x1*z1 + a3*b2*c2*x1*z1 + b3*c2*x1*z1 + 2*a1*b3*c2*x1*z1 + a2*b3*c2*x1*z1 + a3*b3*c2*x1*z1 + b2*b3*c2*x1*z1 + a3*b2*c1*c2*x1*z1 + a1*b3*c1*c2*x1*z1 + a2*b2*c3*x1*z1 + a3*b2*c3*x1*z1 + a2*b3*c3*x1*z1 + b2*c1*c3*x1*z1 + b2*b3*c2*c3*x1*z1 + a3*x2*z1 + a1*a2*a3*x2*z1 + a1*a3*b1*x2*z1 + a3*b2*x2*z1 + a1*a3*b2*x2*z1 + a1*a3*b1*b2*x2*z1 + b3*x2*z1 + a1*b3*x2*z1 + 2*a2*b3*x2*z1 + a3*b3*x2*z1 + b1*b3*x2*z1 + a2*b1*b3*x2*z1 + b2*b3*x2*z1 + a1*b2*b3*x2*z1 + b1*b2*b3*x2*z1 + a3*c1*x2*z1 + a2*a3*b1*c1*x2*z1 + b1*b3*c1*x2*z1 + b1*b2*b3*c1*x2*z1 + 2*a3*c2*x2*z1 + a1*a3*c2*x2*z1 + a2*a3*c2*x2*z1 + 2*a3*b1*c2*x2*z1 + a2*a3*b1*c2*x2*z1 + a3*b2*c2*x2*z1 + a1*a3*b2*c2*x2*z1 + a3*b1*b2*c2*x2*z1 + a2*b3*c2*x2*z1 + a3*b3*c2*x2*z1 + a2*b1*b3*c2*x2*z1 + a3*b1*b3*c2*x2*z1 + b1*b2*b3*c2*x2*z1 + a3*b1*c1*c2*x2*z1 + a3*b1*b2*c1*c2*x2*z1 + a1*c3*x2*z1 + a2*c3*x2*z1 + a3*c3*x2*z1 + a1*b2*c3*x2*z1 + a2*b2*c3*x2*z1 + a3*b2*c3*x2*z1 + a2*b3*c3*x2*z1 + b1*c1*c3*x2*z1 + b1*b2*c1*c3*x2*z1 + b1*c2*c3*x2*z1 + b1*b2*c2*c3*x2*z1 + b3*c2*c3*x2*z1 + b2*b3*c2*c3*x2*z1 + a3*b1*x1*x2*z1 + a1*a3*b1*x1*x2*z1 + a1*a3*b2*x1*x2*z1 + a3*b1*c1*x1*x2*z1 + a3*b2*c1*x1*x2*z1 + a2*x3*z1 + a2*a3*x3*z1 + a2*b1*x3*z1 + a1*b2*x3*z1 + a1*a2*b2*x3*z1 + a3*b2*x3*z1 + a2*a3*b2*x3*z1 + a1*b1*b2*x3*z1 + 2*a2*b1*b2*x3*z1 + a1*a2*b1*b2*x3*z1 + a2*b3*x3*z1 + a2*b2*b3*x3*z1 + a3*b2*b3*x3*z1 + a2*c2*x3*z1 + a3*c2*x3*z1 + b1*c2*x3*z1 + a1*b1*c2*x3*z1 + a2*b1*c2*x3*z1 + a3*b2*c2*x3*z1 + 2*b1*b2*c2*x3*z1 + a1*b1*b2*c2*x3*z1 + a2*b3*c2*x3*z1 + a3*b3*c2*x3*z1 + b1*b3*c2*x3*z1 + a3*b1*b3*c2*x3*z1 + a2*b2*b3*c2*x3*z1 + a3*b2*b3*c2*x3*z1 + a1*b2*x1*x3*z1 + a2*b2*x1*x3*z1 + b2*c1*x1*x3*z1 + b2*c2*x1*x3*z1 + a2*x2*x3*z1 + a1*b1*x2*x3*z1 + a2*b1*x2*x3*z1 + a1*a2*b1*x2*x3*z1 + a2*b2*x2*x3*z1 + a1*b1*b2*x2*x3*z1 + a2*b1*b2*x2*x3*z1 + c2*x2*x3*z1 + b1*c2*x2*x3*z1 + a1*b1*c2*x2*x3*z1 + b2*c2*x2*x3*z1 + b1*b2*c2*x2*x3*z1 + (b2*c1*x3*(1 + x3)*z1)/2 + (b1*b2*c1*x3*(1 + x3)*z1)/2 + (b1*c2*x3*(1 + x3)*z1)/2 + (b2*c2*x3*(1 + x3)*z1)/2 + a2*a3*y1*z1 + a3*b2*y1*z1 + a2*b3*y1*z1 + a2*a3*c1*y1*z1 + a3*b2*c1*y1*z1 + b2*b3*c1*y1*z1 + a3*c2*y1*z1 + a1*a3*c2*y1*z1 + a2*a3*c2*y1*z1 + a3*b1*c2*y1*z1 + 2*b3*c2*y1*z1 + a1*b3*c2*y1*z1 + a2*b3*c2*y1*z1 + a3*b3*c2*y1*z1 + b1*b3*c2*y1*z1 + b2*b3*c2*y1*z1 + a3*b2*c1*c2*y1*z1 + a1*b3*c1*c2*y1*z1 + b1*b3*c1*c2*y1*z1 + b2*c3*y1*z1 + a2*b2*c3*y1*z1 + a3*b2*c3*y1*z1 + a2*b3*c3*y1*z1 + b2*c1*c3*y1*z1 + b2*b3*c2*c3*y1*z1 + a3*b2*x1*y1*z1 + b1*b3*c2*x1*y1*z1 + a3*b1*x2*y1*z1 + a1*a3*b1*x2*y1*z1 + a3*b2*x2*y1*z1 + a1*a3*b2*x2*y1*z1 + a3*b1*b2*x2*y1*z1 + a3*b1*c1*x2*y1*z1 + a3*b2*c1*x2*y1*z1 + b2*x3*y1*z1 + a1*b2*x3*y1*z1 + a2*b2*x3*y1*z1 + b1*b2*x3*y1*z1 + b2*c1*x3*y1*z1 + b2*c2*x3*y1*z1 + a3*y2*z1 + a1*a3*y2*z1 + a2*a3*y2*z1 + a1*a2*a3*y2*z1 + a3*b1*y2*z1 + a1*a3*b1*y2*z1 + 2*a3*b2*y2*z1 + a1*a3*b2*y2*z1 + a3*b1*b2*y2*z1 + a1*a3*b1*b2*y2*z1 + 3*b3*y2*z1 + a1*b3*y2*z1 + 2*a2*b3*y2*z1 + a3*b3*y2*z1 + 2*b1*b3*y2*z1 + a2*b1*b3*y2*z1 + a1*b2*b3*y2*z1 + b1*b2*b3*y2*z1 + a3*c1*y2*z1 + a3*b1*c1*y2*z1 + a2*a3*b1*c1*y2*z1 + b1*b3*c1*y2*z1 + b1*b2*b3*c1*y2*z1 + 2*a3*c2*y2*z1 + a1*a3*c2*y2*z1 + a2*a3*c2*y2*z1 + a3*b1*c2*y2*z1 + a2*a3*b1*c2*y2*z1 + a1*a3*b2*c2*y2*z1 + a3*b1*b2*c2*y2*z1 + a2*b3*c2*y2*z1 + a3*b3*c2*y2*z1 + b1*b3*c2*y2*z1 + a2*b1*b3*c2*y2*z1 + a3*b1*b3*c2*y2*z1 + b1*b2*b3*c2*y2*z1 + a3*b1*c1*c2*y2*z1 + a3*b1*b2*c1*c2*y2*z1 + a1*c3*y2*z1 + a2*c3*y2*z1 + a3*c3*y2*z1 + a1*b2*c3*y2*z1 + a2*b2*c3*y2*z1 + a3*b2*c3*y2*z1 + b3*c3*y2*z1 + a2*b3*c3*y2*z1 + b1*c1*c3*y2*z1 + b1*b2*c1*c3*y2*z1 + b1*c2*c3*y2*z1 + b1*b2*c2*c3*y2*z1 + b3*c2*c3*y2*z1 + b2*b3*c2*c3*y2*z1 + a1*a3*b1*x1*y2*z1 + a3*b2*x1*y2*z1 + a1*a3*b2*x1*y2*z1 + a3*b1*c1*x1*y2*z1 + a3*b2*c1*x1*y2*z1 + a3*b2*x2*y2*z1 + a3*b1*b2*x2*y2*z1 + a2*b1*x3*y2*z1 + a1*a2*b1*x3*y2*z1 + a2*b2*x3*y2*z1 + a2*b1*b2*x3*y2*z1 + b1*c2*x3*y2*z1 + a1*b1*c2*x3*y2*z1 + b2*c2*x3*y2*z1 + b1*b2*c2*x3*y2*z1 + a1*a3*b1*y1*y2*z1 + a1*a3*b2*y1*y2*z1 + a3*b1*b2*y1*y2*z1 + a3*b1*c1*y1*y2*z1 + a3*b2*c1*y1*y2*z1 + a2*a3*y3*z1 + a2*b1*y3*z1 + b2*y3*z1 + a2*b2*y3*z1 + a1*a2*b2*y3*z1 + 2*a3*b2*y3*z1 + a2*a3*b2*y3*z1 + 2*b1*b2*y3*z1 + 2*a2*b1*b2*y3*z1 + a1*a2*b1*b2*y3*z1 + a2*b3*y3*z1 + 2*b2*b3*y3*z1 + a2*b2*b3*y3*z1 + a3*b2*b3*y3*z1 + a2*c2*y3*z1 + a3*c2*y3*z1 + a1*b1*c2*y3*z1 + a2*b1*c2*y3*z1 + b2*c2*y3*z1 + a3*b2*c2*y3*z1 + 2*b1*b2*c2*y3*z1 + a1*b1*b2*c2*y3*z1 + a2*b3*c2*y3*z1 + a3*b3*c2*y3*z1 + 2*b1*b3*c2*y3*z1 + a3*b1*b3*c2*y3*z1 + a2*b2*b3*c2*y3*z1 + a3*b2*b3*c2*y3*z1 + b2*x1*y3*z1 + a1*b2*x1*y3*z1 + a2*b2*x1*y3*z1 + b2*c1*x1*y3*z1 + b2*c2*x1*y3*z1 + x2*y3*z1 + a2*x2*y3*z1 + b1*x2*y3*z1 + a2*b1*x2*y3*z1 + a1*a2*b1*x2*y3*z1 + b2*x2*y3*z1 + a2*b2*x2*y3*z1 + b1*b2*x2*y3*z1 + a1*b1*b2*x2*y3*z1 + a2*b1*b2*x2*y3*z1 + c2*x2*y3*z1 + b1*c2*x2*y3*z1 + a1*b1*c2*x2*y3*z1 + b2*c2*x2*y3*z1 + b1*b2*c2*x2*y3*z1 + a2*x3*y3*z1 + a2*b1*x3*y3*z1 + a1*b2*x3*y3*z1 + a2*b2*x3*y3*z1 + a1*b1*b2*x3*y3*z1 + c2*x3*y3*z1 + b1*c2*x3*y3*z1 + b2*c2*x3*y3*z1 + a1*b2*y1*y3*z1 + a2*b2*y1*y3*z1 + b1*b2*y1*y3*z1 + b2*c1*y1*y3*z1 + b2*c2*y1*y3*z1 + b1*y2*y3*z1 + a1*b1*y2*y3*z1 + a2*b1*y2*y3*z1 + a1*a2*b1*y2*y3*z1 + b2*y2*y3*z1 + a2*b2*y2*y3*z1 + b1*b2*y2*y3*z1 + a2*b1*b2*y2*y3*z1 + b1*c2*y2*y3*z1 + a1*b1*c2*y2*y3*z1 + b2*c2*y2*y3*z1 + b1*b2*c2*y2*y3*z1 + (b2*c1*y3*(1 + y3)*z1)/2 + (b1*b2*c1*y3*(1 + y3)*z1)/2 + (b1*c2*y3*(1 + y3)*z1)/2 + (b2*c2*y3*(1 + y3)*z1)/2 + a2*b3*z1*(1 + z1) + (a3*b1*c2*z1*(1 + z1))/2 + (a1*b3*c2*z1*(1 + z1))/2 + (b1*b3*c2*z1*(1 + z1))/2 + b2*b3*c2*z1*(1 + z1) + (b1*b3*c1*c2*z1*(1 + z1))/2 + (a2*b2*c3*z1*(1 + z1))/2 + (a3*b2*c3*z1*(1 + z1))/2 + (a2*b3*c3*z1*(1 + z1))/2 + (b1*c2*c3*z1*(1 + z1))/2 + (b2*c2*c3*z1*(1 + z1))/2 + (b2*b3*c2*c3*z1*(1 + z1))/2 + (b3*c2*x1*z1*(1 + z1))/2 + (a3*x2*z1*(1 + z1))/2 + (a3*b1*x2*z1*(1 + z1))/2 + (b3*c2*y1*z1*(1 + z1))/2 + (a3*y2*z1*(1 + z1))/2 + (a3*b1*y2*z1*(1 + z1))/2 + a1*a3*x1*z2 + a1*a2*a3*x1*z2 + a1*a3*b2*x1*z2 + a1*a3*b1*b2*x1*z2 + a2*b3*x1*z2 + a2*b1*b3*x1*z2 + b2*b3*x1*z2 + a1*b2*b3*x1*z2 + b1*b2*b3*x1*z2 + a3*c1*x1*z2 + a2*a3*c1*x1*z2 + a3*b1*c1*x1*z2 + a1*a3*b1*c1*x1*z2 + a2*a3*b1*c1*x1*z2 + a3*b2*c1*x1*z2 + a1*a3*b2*c1*x1*z2 + a3*b1*b2*c1*x1*z2 + b2*b3*c1*x1*z2 + b1*b2*b3*c1*x1*z2 + a3*c2*x1*z2 + a2*a3*c2*x1*z2 + a3*b1*c2*x1*z2 + a2*a3*b1*c2*x1*z2 + a3*b2*c2*x1*z2 + a1*a3*b2*c2*x1*z2 + a3*b1*b2*c2*x1*z2 + b3*c2*x1*z2 + a2*b3*c2*x1*z2 + a3*b3*c2*x1*z2 + b1*b3*c2*x1*z2 + a2*b1*b3*c2*x1*z2 + a3*b1*b3*c2*x1*z2 + b2*b3*c2*x1*z2 + b1*b2*b3*c2*x1*z2 + a3*b2*c1*c2*x1*z2 + a3*b1*b2*c1*c2*x1*z2 + a1*b2*c3*x1*z2 + a2*b2*c3*x1*z2 + a3*b2*c3*x1*z2 + a2*b3*c3*x1*z2 + b2*c1*c3*x1*z2 + b1*b2*c1*c3*x1*z2 + b1*b2*c2*c3*x1*z2 + b2*b3*c2*c3*x1*z2 + (a1*a3*b1*x1*(1 + x1)*z2)/2 + (a1*a3*b2*x1*(1 + x1)*z2)/2 + a1*a3*b1*x1*x2*z2 + a1*a3*b2*x1*x2*z2 + a3*b1*c1*x1*x2*z2 + a1*a3*b1*c1*x1*x2*z2 + a3*b2*c1*x1*x2*z2 + a1*a3*b2*c1*x1*x2*z2 + (a3*b1*x2*(1 + x2)*z2)/2 + (a1*a3*b1*x2*(1 + x2)*z2)/2 + (a1*a3*b2*x2*(1 + x2)*z2)/2 + (a3*b1*c1*x2*(1 + x2)*z2)/2 + (a3*b1*b2*c1*x2*(1 + x2)*z2)/2 + a1*b2*x1*x3*z2 + a2*b2*x1*x3*z2 + a1*b1*b2*x1*x3*z2 + a2*b1*b2*x1*x3*z2 + b2*c2*x1*x3*z2 + b1*b2*c2*x1*x3*z2 + (a1*a3*x3*(1 + x3)*z2)/2 + (a2*b1*x3*(1 + x3)*z2)/2 + (b2*c1*x3*(1 + x3)*z2)/2 + (b1*b2*c1*x3*(1 + x3)*z2)/2 + a3*y1*z2 + a1*a3*y1*z2 + a2*a3*y1*z2 + a1*a2*a3*y1*z2 + a3*b2*y1*z2 + a1*a3*b2*y1*z2 + a3*b1*b2*y1*z2 + a1*a3*b1*b2*y1*z2 + a2*b3*y1*z2 + a2*b1*b3*y1*z2 + a1*b2*b3*y1*z2 + b1*b2*b3*y1*z2 + a3*c1*y1*z2 + a2*a3*c1*y1*z2 + a1*a3*b1*c1*y1*z2 + a2*a3*b1*c1*y1*z2 + a3*b2*c1*y1*z2 + a1*a3*b2*c1*y1*z2 + b2*b3*c1*y1*z2 + b1*b2*b3*c1*y1*z2 + a3*c2*y1*z2 + a2*a3*c2*y1*z2 + a3*b1*c2*y1*z2 + a2*a3*b1*c2*y1*z2 + a1*a3*b2*c2*y1*z2 + a3*b1*b2*c2*y1*z2 + b3*c2*y1*z2 + a2*b3*c2*y1*z2 + a3*b3*c2*y1*z2 + b1*b3*c2*y1*z2 + a2*b1*b3*c2*y1*z2 + a3*b1*b3*c2*y1*z2 + b2*b3*c2*y1*z2 + b1*b2*b3*c2*y1*z2 + a3*b2*c1*c2*y1*z2 + a3*b1*b2*c1*c2*y1*z2 + b2*c3*y1*z2 + a1*b2*c3*y1*z2 + a2*b2*c3*y1*z2 + a3*b2*c3*y1*z2 + a2*b3*c3*y1*z2 + b2*c1*c3*y1*z2 + b1*b2*c1*c3*y1*z2 + b1*b2*c2*c3*y1*z2 + b2*b3*c2*c3*y1*z2 + a3*b1*x1*y1*z2 + a3*b2*x1*y1*z2 + a3*b1*x2*y1*z2 + a3*b2*x2*y1*z2 + a1*a3*b1*c1*x2*y1*z2 + a3*b2*c1*x2*y1*z2 + a1*a3*b2*c1*x2*y1*z2 + a3*b1*b2*c1*x2*y1*z2 + b2*x3*y1*z2 + a1*b2*x3*y1*z2 + a3*b2*x3*y1*z2 + b1*b2*x3*y1*z2 + a1*b1*b2*x3*y1*z2 + a2*b1*b2*x3*y1*z2 + b2*c2*x3*y1*z2 + b1*b2*c2*x3*y1*z2 + b2*b3*c2*x3*y1*z2 + (a3*b1*y1*(1 + y1)*z2)/2 + (a1*a3*b1*y1*(1 + y1)*z2)/2 + (a1*a3*b2*y1*(1 + y1)*z2)/2 + (a3*b1*b2*y1*(1 + y1)*z2)/2 + a3*b1*x1*y2*z2 + a3*b2*x1*y2*z2 + a3*b1*c1*x1*y2*z2 + a1*a3*b1*c1*x1*y2*z2 + a3*b2*c1*x1*y2*z2 + a1*a3*b2*c1*x1*y2*z2 + a3*b1*y1*y2*z2 + a1*a3*b1*y1*y2*z2 + a1*a3*b2*y1*y2*z2 + a3*b1*b2*y1*y2*z2 + a1*a3*b1*c1*y1*y2*z2 + a3*b2*c1*y1*y2*z2 + a1*a3*b2*c1*y1*y2*z2 + a3*b1*b2*c1*y1*y2*z2 + (a1*a3*b1*y2*(1 + y2)*z2)/2 + (a1*a3*b2*y2*(1 + y2)*z2)/2 + (a3*b1*b2*y2*(1 + y2)*z2)/2 + (a3*b1*c1*y2*(1 + y2)*z2)/2 + (a3*b1*b2*c1*y2*(1 + y2)*z2)/2 + b2*x1*y3*z2 + a1*b2*x1*y3*z2 + a2*b2*x1*y3*z2 + b1*b2*x1*y3*z2 + a1*b1*b2*x1*y3*z2 + a2*b1*b2*x1*y3*z2 + b2*c2*x1*y3*z2 + b1*b2*c2*x1*y3*z2 + a1*b2*y1*y3*z2 + a3*b2*y1*y3*z2 + a1*b1*b2*y1*y3*z2 + a2*b1*b2*y1*y3*z2 + b2*c2*y1*y3*z2 + b1*b2*c2*y1*y3*z2 + b2*b3*c2*y1*y3*z2 + (a1*y3*(1 + y3)*z2)/2 + (a1*a3*y3*(1 + y3)*z2)/2 + (b1*y3*(1 + y3)*z2)/2 + (a2*b1*y3*(1 + y3)*z2)/2 + (b2*c1*y3*(1 + y3)*z2)/2 + (b1*b2*c1*y3*(1 + y3)*z2)/2 + a1*a3*z1*z2 + a1*a2*a3*z1*z2 + a1*a3*b1*b2*z1*z2 + a2*b1*b3*z1*z2 + a1*b2*b3*z1*z2 + b1*b2*b3*z1*z2 + a2*a3*b1*c1*z1*z2 + a3*b1*b2*c1*z1*z2 + b1*b2*b3*c1*z1*z2 + a3*b1*c2*z1*z2 + a2*a3*b1*c2*z1*z2 + a1*a3*b2*c2*z1*z2 + a3*b1*b2*c2*z1*z2 + b1*b3*c2*z1*z2 + a2*b1*b3*c2*z1*z2 + a3*b1*b3*c2*z1*z2 + b1*b2*b3*c2*z1*z2 + a3*b1*b2*c1*c2*z1*z2 + a1*b2*c3*z1*z2 + a2*b2*c3*z1*z2 + a3*b2*c3*z1*z2 + a2*b3*c3*z1*z2 + b1*b2*c1*c3*z1*z2 + b2*c2*c3*z1*z2 + b1*b2*c2*c3*z1*z2 + b2*b3*c2*c3*z1*z2 + a3*x1*z1*z2 + a3*b1*x1*z1*z2 + a1*a3*b1*x1*z1*z2 + a1*a3*b2*x1*z1*z2 + a3*x2*z1*z2 + a1*a3*b1*x2*z1*z2 + a1*a3*b2*x2*z1*z2 + a3*b1*c1*x2*z1*z2 + a3*b1*b2*c1*x2*z1*z2 + a1*b2*x3*z1*z2 + a1*b1*b2*x3*z1*z2 + a2*b1*b2*x3*z1*z2 + b1*b2*c2*x3*z1*z2 + a3*y1*z1*z2 + a1*a3*b1*y1*z1*z2 + a1*a3*b2*y1*z1*z2 + a3*b1*b2*y1*z1*z2 + a3*y2*z1*z2 + a3*b1*y2*z1*z2 + a1*a3*b1*y2*z1*z2 + a1*a3*b2*y2*z1*z2 + a3*b1*b2*y2*z1*z2 + a3*b1*c1*y2*z1*z2 + a3*b1*b2*c1*y2*z1*z2 + a1*b2*y3*z1*z2 + b1*b2*y3*z1*z2 + a1*b1*b2*y3*z1*z2 + a2*b1*b2*y3*z1*z2 + b1*b2*c2*y3*z1*z2 + (a3*b1*z1*(1 + z1)*z2)/2 + (a3*x1*z2*(1 + z2))/2 + (a3*b1*x1*z2*(1 + z2))/2 + (a1*a3*b1*x1*z2*(1 + z2))/2 + (a1*a3*b2*x1*z2*(1 + z2))/2 + (a3*b1*x2*z2*(1 + z2))/2 + (a1*a3*b1*x2*z2*(1 + z2))/2 + (a1*a3*b2*x2*z2*(1 + z2))/2 + (a3*b1*c1*x2*z2*(1 + z2))/2 + (a3*b1*b2*c1*x2*z2*(1 + z2))/2 + a3*y1*z2*(1 + z2) + (a1*a3*b1*y1*z2*(1 + z2))/2 + (a1*a3*b2*y1*z2*(1 + z2))/2 + (a3*b1*b2*y1*z2*(1 + z2))/2 + (b3*c2*y1*z2*(1 + z2))/2 + (a1*a3*b1*y2*z2*(1 + z2))/2 + (a1*a3*b2*y2*z2*(1 + z2))/2 + (a3*b1*b2*y2*z2*(1 + z2))/2 + (a3*b1*c1*y2*z2*(1 + z2))/2 + (a3*b1*b2*c1*y2*z2*(1 + z2))/2 + b3*(a1*x2 + b1*x2 + a1*b2*x2 + c1*x2 + b2*c1*x2 + b2*y1 + a1*y2 + b1*y2 + a1*b2*y2 + c1*y2 + b2*c1*y2 + x2*z1 + b1*x2*z1 + y2*z1 + b1*y2*z1 + b1*z2 + a1*b2*z2 + b1*x2*z2 + b1*y2*z2 + b1*z1*z2) + a2*x1*z3 + a1*a2*x1*z3 + a1*a2*b1*x1*z3 + a1*b2*x1*z3 + a2*b2*x1*z3 + a1*a2*b2*x1*z3 + a2*a3*b2*x1*z3 + a1*b1*b2*x1*z3 + 2*a2*b1*b2*x1*z3 + a1*a2*b1*b2*x1*z3 + a2*b2*b3*x1*z3 + a3*b2*b3*x1*z3 + b2*c1*x1*z3 + b1*b2*c1*x1*z3 + a1*c2*x1*z3 + a2*c2*x1*z3 + a3*c2*x1*z3 + a1*b1*c2*x1*z3 + a2*b1*c2*x1*z3 + a3*b1*c2*x1*z3 + a1*b2*c2*x1*z3 + a2*b2*c2*x1*z3 + a3*b2*c2*x1*z3 + b3*c2*x1*z3 + a3*b3*c2*x1*z3 + b1*b3*c2*x1*z3 + a3*b1*b3*c2*x1*z3 + a2*b2*b3*c2*x1*z3 + a3*b2*b3*c2*x1*z3 + a2*b1*x1*x2*z3 + a1*a2*b1*x1*x2*z3 + a1*b2*x1*x2*z3 + a1*b1*b2*x1*x2*z3 + a2*b1*b2*x1*x2*z3 + b2*c1*x1*x2*z3 + b1*b2*c1*x1*x2*z3 + b1*c2*x1*x2*z3 + a1*a2*b1*x1*x3*z3 + a1*b1*b2*c2*x1*x3*z3 + a1*a2*y1*z3 + a2*a3*y1*z3 + a2*b1*y1*z3 + a1*a2*b1*y1*z3 + b2*y1*z3 + a1*b2*y1*z3 + 2*a2*b2*y1*z3 + a1*a2*b2*y1*z3 + b1*b2*y1*z3 + a1*b1*b2*y1*z3 + a2*b1*b2*y1*z3 + a1*a2*b1*b2*y1*z3 + a2*b2*b3*y1*z3 + a3*b2*b3*y1*z3 + b2*c1*y1*z3 + b1*b2*c1*y1*z3 + c2*y1*z3 + a1*c2*y1*z3 + a2*c2*y1*z3 + b1*c2*y1*z3 + a1*b1*c2*y1*z3 + a2*b1*c2*y1*z3 + a3*b1*c2*y1*z3 + b2*c2*y1*z3 + a1*b2*c2*y1*z3 + a2*b2*c2*y1*z3 + a3*b2*c2*y1*z3 + 2*b3*c2*y1*z3 + a2*b3*c2*y1*z3 + a3*b3*c2*y1*z3 + b1*b3*c2*y1*z3 + a3*b1*b3*c2*y1*z3 + a3*b2*b3*c2*y1*z3 + b2*x1*y1*z3 + b1*b2*x1*y1*z3 + a2*x2*y1*z3 + a2*a3*x2*y1*z3 + a1*a2*b1*x2*y1*z3 + b2*x2*y1*z3 + a1*b2*x2*y1*z3 + a2*b2*x2*y1*z3 + a3*b2*x2*y1*z3 + b1*b2*x2*y1*z3 + a1*b1*b2*x2*y1*z3 + a2*b1*b2*x2*y1*z3 + b2*c1*x2*y1*z3 + b1*b2*c1*x2*y1*z3 + b1*c2*x2*y1*z3 + a2*b3*c2*x2*y1*z3 + b2*b3*c2*x2*y1*z3 + a2*a3*x3*y1*z3 + a2*b1*x3*y1*z3 + a1*a2*b1*x3*y1*z3 + a2*c2*x3*y1*z3 + a2*b2*c2*x3*y1*z3 + a3*b2*c2*x3*y1*z3 + b1*b2*c2*x3*y1*z3 + a1*b1*b2*c2*x3*y1*z3 + a2*b3*c2*x3*y1*z3 + b2*b3*c2*x3*y1*z3 + b1*x1*y2*z3 + a2*b1*x1*y2*z3 + a1*a2*b1*x1*y2*z3 + b2*x1*y2*z3 + a1*b2*x1*y2*z3 + a2*b1*b2*x1*y2*z3 + b2*c1*x1*y2*z3 + b1*b2*c1*x1*y2*z3 + b1*c2*x1*y2*z3 + a2*a3*y1*y2*z3 + b1*y1*y2*z3 + a1*a2*b1*y1*y2*z3 + a1*b2*y1*y2*z3 + a2*b1*b2*y1*y2*z3 + b2*c1*y1*y2*z3 + b1*b2*c1*y1*y2*z3 + b1*c2*y1*y2*z3 + a2*b3*c2*y1*y2*z3 + a1*a2*b1*x1*y3*z3 + a1*b1*b2*x1*y3*z3 + a1*b1*b2*c2*x1*y3*z3 + a2*y1*y3*z3 + a2*a3*y1*y3*z3 + a2*b1*y1*y3*z3 + a1*a2*b1*y1*y3*z3 + a2*b2*y1*y3*z3 + a3*b2*y1*y3*z3 + b1*b2*y1*y3*z3 + a1*b1*b2*y1*y3*z3 + a2*c2*y1*y3*z3 + a2*b2*c2*y1*y3*z3 + a3*b2*c2*y1*y3*z3 + b1*b2*c2*y1*y3*z3 + a1*b1*b2*c2*y1*y3*z3 + a2*b3*c2*y1*y3*z3 + a1*a2*z1*z3 + a1*a2*b1*z1*z3 + a1*a2*b2*z1*z3 + a2*a3*b2*z1*z3 + a1*b1*b2*z1*z3 + 2*a2*b1*b2*z1*z3 + a1*a2*b1*b2*z1*z3 + a2*b2*b3*z1*z3 + a3*b2*b3*z1*z3 + b1*b2*c1*z1*z3 + a1*c2*z1*z3 + a2*c2*z1*z3 + a1*b1*c2*z1*z3 + a2*b1*c2*z1*z3 + a3*b1*c2*z1*z3 + a1*b2*c2*z1*z3 + a2*b2*c2*z1*z3 + a3*b2*c2*z1*z3 + b1*b3*c2*z1*z3 + a3*b1*b3*c2*z1*z3 + a2*b2*b3*c2*z1*z3 + a3*b2*b3*c2*z1*z3 + a1*b2*x1*z1*z3 + a2*b2*x1*z1*z3 + c2*x1*z1*z3 + a2*x2*z1*z3 + a2*b1*x2*z1*z3 + a1*a2*b1*x2*z1*z3 + a1*b2*x2*z1*z3 + a2*b2*x2*z1*z3 + a1*b1*b2*x2*z1*z3 + a2*b1*b2*x2*z1*z3 + b1*b2*c1*x2*z1*z3 + c2*x2*z1*z3 + b1*c2*x2*z1*z3 + a2*x3*z1*z3 + a1*a2*b1*x3*z1*z3 + a2*c2*x3*z1*z3 + a1*b1*b2*c2*x3*z1*z3 + a1*b2*y1*z1*z3 + a2*b2*y1*z1*z3 + b1*b2*y1*z1*z3 + c2*y1*z1*z3 + y2*z1*z3 + b1*y2*z1*z3 + a2*b1*y2*z1*z3 + a1*a2*b1*y2*z1*z3 + b2*y2*z1*z3 + a1*b2*y2*z1*z3 + a2*b2*y2*z1*z3 + a2*b1*b2*y2*z1*z3 + b1*b2*c1*y2*z1*z3 + c2*y2*z1*z3 + b1*c2*y2*z1*z3 + a1*a2*b1*y3*z1*z3 + a1*b1*b2*y3*z1*z3 + a2*c2*y3*z1*z3 + a1*b1*b2*c2*y3*z1*z3 + a1*b1*x1*z2*z3 + a2*b2*x1*z2*z3 + a1*b1*b2*x1*z2*z3 + a2*b1*b2*x1*z2*z3 + c1*x1*z2*z3 + b1*c1*x1*z2*z3 + b2*c1*x1*z2*z3 + b1*b2*c1*x1*z2*z3 + c2*x1*z2*z3 + b1*c2*x1*z2*z3 + a2*y1*z2*z3 + a3*y1*z2*z3 + b1*y1*z2*z3 + a1*b1*y1*z2*z3 + a3*b2*y1*z2*z3 + b1*b2*y1*z2*z3 + a1*b1*b2*y1*z2*z3 + a2*b1*b2*y1*z2*z3 + c1*y1*z2*z3 + b1*c1*y1*z2*z3 + b2*c1*y1*z2*z3 + b1*b2*c1*y1*z2*z3 + c2*y1*z2*z3 + b1*c2*y1*z2*z3 + b3*c2*y1*z2*z3 + b2*b3*c2*y1*z2*z3 + a1*b1*z1*z2*z3 + a1*b1*b2*z1*z2*z3 + a2*b1*b2*z1*z2*z3 + b1*c1*z1*z2*z3 + b1*b2*c1*z1*z2*z3 + b1*c2*z1*z2*z3 + (b1*b2*c1*x1*z3*(1 + z3))/2 + (a1*a3*x2*z3*(1 + z3))/2 + (a2*b1*x2*z3*(1 + z3))/2 + (c1*x2*z3*(1 + z3))/2 + (a3*c1*x2*z3*(1 + z3))/2 + (b1*c1*x2*z3*(1 + z3))/2 + (b2*c1*x2*z3*(1 + z3))/2 + (b1*b2*c1*x2*z3*(1 + z3))/2 + (b1*b2*c1*y1*z3*(1 + z3))/2 + (b3*c2*y1*z3*(1 + z3))/2 + (a1*a3*y2*z3*(1 + z3))/2 + (b1*y2*z3*(1 + z3))/2 + (a2*b1*y2*z3*(1 + z3))/2 + (c1*y2*z3*(1 + z3))/2 + (a3*c1*y2*z3*(1 + z3))/2 + (b1*c1*y2*z3*(1 + z3))/2 + (b2*c1*y2*z3*(1 + z3))/2 + (b1*b2*c1*y2*z3*(1 + z3))/2 + (b1*b2*c1*z1*z3*(1 + z3))/2 + (a1*a3*z2*z3*(1 + z3))/2 + (a2*b1*z2*z3*(1 + z3))/2 + (b1*b2*c1*z2*z3*(1 + z3))/2 + (a1*a2 + a1*b2 + a2*c1 + b2*c1 + a1*b2*c1 + a2*b2*c1)*(x3 + y3 + z3);
end;
#####################################################################
#####################################################################
#Space Group No. 98 ( I4_122)
#####################################################################
Acpin98:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Acppin98:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyzin98:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return a1 + x1 + y1 + z1;
end;
#####################################################################
Bxyzin98:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + a1*(a2 + x2) + a1*b1*(a2 + x2) + a2*b1*(a2 + x2) + c1*(a2 + x2) + (a1 + x1)*(a2 + x2) + (a2 + x2)*(a1 + y1) + a1*(a2 + y2) + a1*b1*(a2 + y2) + a2*b1*(a2 + y2) + c1*(a2 + y2) + (a1 + x1)*(a2 + y2) + (a1 + y1)*(a2 + y2) + a2*(a1 + z1) + b1*(a2 + x2)*(a1 + z1) + b1*(a2 + y2)*(a1 + z1) + a1*b1*(a2 + z2) + a2*b1*(a2 + z2) + c1*(a2 + z2) + (a1 + x1)*(a2 + z2) + b1*(a2 + x2)*(a2 + z2) + (a1 + y1)*(a2 + z2) + b1*(a2 + y2)*(a2 + z2) + (a1 + z1)*(a2 + z2) + b1*(a1 + z1)*(a2 + z2);
end;
#####################################################################
CGAPin98:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3*b1*b2 + a1*a2*b1*b3 + a1*a2*a3*b1*b3 + a1*a3*b2*b3 + a1*a3*b1*b2*b3 + a2*a3*b1*b2*b3 + a2*a3*b1*c1 + a1*a2*a3*b1*c1 + a1*a2*a3*b2*c1 + a2*a3*b1*b2*c1 + a1*a2*b3*c1 + a1*a2*a3*b3*c1 + a2*b1*b3*c1 + a2*a3*b1*b3*c1 + b1*b2*b3*c1 + a2*a3*b1*b2*b3*c1 + a1*a2*a3*c2 + a1*a2*a3*b2*c2 + a1*a2*a3*b1*b2*c2 + a1*a2*b3*c2 + a1*b1*b3*c2 + a2*b1*b3*c2 + a1*b2*b3*c2 + a1*a2*b2*b3*c2 + a1*a3*b2*b3*c2 + b1*b2*b3*c2 + a2*a3*b1*b2*b3*c2 + a1*a3*c1*c2 + a2*a3*c1*c2 + a1*a2*a3*c1*c2 + a1*a3*b1*c1*c2 + a2*a3*b1*c1*c2 + a3*b2*c1*c2 + a1*a3*b2*c1*c2 + a3*b1*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a1*b3*c1*c2 + a1*a2*b3*c1*c2 + b1*b3*c1*c2 + a2*b1*b3*c1*c2 + a1*a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + a1*a3*b1*b3*c1*c2 + a2*a3*b1*b3*c1*c2 + a2*b2*b3*c1*c2 + a1*a2*b2*b3*c1*c2 + a3*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + a1*b1*b2*b3*c1*c2 + a3*b1*b2*b3*c1*c2 + a1*a3*b1*b2*b3*c1*c2 + a2*a3*b1*b2*b3*c1*c2 + a1*a2*b2*c3 + a1*a2*a3*b2*c3 + a1*b1*b2*c3 + a2*b1*b2*c3 + a1*a3*b1*b2*c3 + a2*a3*b1*b2*c3 + a1*a2*a3*b1*b2*c3 + a1*a2*b3*c3 + a1*b2*b3*c3 + a1*a2*b2*b3*c3 + a1*a3*b2*b3*c3 + a1*a2*a3*b2*b3*c3 + a2*b1*b2*b3*c3 + a3*b1*b2*b3*c3 + a1*a3*b1*b2*b3*c3 + a2*b1*c1*c3 + a1*a2*b1*c1*c3 + a1*a3*b2*c1*c3 + b1*b2*c1*c3 + a1*b1*b2*c1*c3 + a1*a2*b1*b2*c1*c3 + a1*a3*b1*b2*c1*c3 + a2*a3*b1*b3*c1*c3 + b1*b2*b3*c1*c3 + a1*b1*b2*b3*c1*c3 + a2*b1*b2*b3*c1*c3 + a1*a3*b1*b2*b3*c1*c3 + a2*a3*b1*b2*b3*c1*c3 + a1*a2*c2*c3 + a1*a3*c2*c3 + a1*a2*a3*c2*c3 + a1*b1*c2*c3 + a2*b1*c2*c3 + a1*a2*b1*c2*c3 + a2*a3*b1*c2*c3 + a1*b2*c2*c3 + a1*a2*b2*c2*c3 + a2*b1*b2*c2*c3 + a1*b3*c2*c3 + a1*b1*b3*c2*c3 + a1*a2*b1*b3*c2*c3 + a1*a3*b1*b3*c2*c3 + a1*a2*b2*b3*c2*c3 + a1*a3*b2*b3*c2*c3 + b1*b2*b3*c2*c3 + a2*b1*b2*b3*c2*c3 + a1*a2*b1*b2*b3*c2*c3 + a1*a3*b1*b2*b3*c2*c3 + a2*a3*b1*b2*b3*c2*c3 + 2*c1*c2*c3 + a2*c1*c2*c3 + a3*c1*c2*c3 + a3*b1*c1*c2*c3 + a1*b2*c1*c2*c3 + a2*b2*c1*c2*c3 + a3*b2*c1*c2*c3 + a1*a3*b2*c1*c2*c3 + a2*a3*b2*c1*c2*c3 + a1*b1*b2*c1*c2*c3 + a2*b1*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + a2*b3*c1*c2*c3 + a1*a2*b3*c1*c2*c3 + a1*a3*b3*c1*c2*c3 + a2*a3*b3*c1*c2*c3 + b1*b3*c1*c2*c3 + a3*b1*b3*c1*c2*c3 + b2*b3*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + b1*b2*b3*c1*c2*c3 + a2*a3*(-a1 + x1) + a2*a3*b1*(-a1 + x1) + a2*a3*b2*(-a1 + x1) + a1*a3*b1*b2*(-a1 + x1) + a2*a3*b1*b2*(-a1 + x1) + a1*a2*a3*b1*b2*(-a1 + x1) + a1*a2*a3*b3*(-a1 + x1) + a1*a2*a3*b1*b3*(-a1 + x1) + a1*a3*b1*b2*b3*(-a1 + x1) + a1*a2*a3*b1*b2*b3*(-a1 + x1) + a2*a3*c1*(-a1 + x1) + a2*a3*b1*c1*(-a1 + x1) + a3*b2*c1*(-a1 + x1) + a1*a3*b2*c1*(-a1 + x1) + a2*a3*b2*c1*(-a1 + x1) + a3*b1*b2*c1*(-a1 + x1) + a2*a3*b1*b2*c1*(-a1 + x1) + a2*b3*c1*(-a1 + x1) + a1*a2*b3*c1*(-a1 + x1) + a2*a3*b3*c1*(-a1 + x1) + a1*a2*b1*b3*c1*(-a1 + x1) + b2*b3*c1*(-a1 + x1) + a1*b2*b3*c1*(-a1 + x1) + a2*b2*b3*c1*(-a1 + x1) + a2*a3*b2*b3*c1*(-a1 + x1) + b1*b2*b3*c1*(-a1 + x1) + a1*a3*b1*b2*b3*c1*(-a1 + x1) + a1*a3*b2*c2*(-a1 + x1) + a1*a3*b1*b2*c2*(-a1 + x1) + b3*c2*(-a1 + x1) + a1*b3*c2*(-a1 + x1) + a1*a2*b3*c2*(-a1 + x1) + a3*b3*c2*(-a1 + x1) + a1*a2*a3*b3*c2*(-a1 + x1) + b1*b3*c2*(-a1 + x1) + a2*b1*b3*c2*(-a1 + x1) + a3*b1*b3*c2*(-a1 + x1) + a1*a3*b1*b3*c2*(-a1 + x1) + a2*a3*b1*b3*c2*(-a1 + x1) + a1*a2*a3*b1*b3*c2*(-a1 + x1) + b2*b3*c2*(-a1 + x1) + a1*b2*b3*c2*(-a1 + x1) + a3*b2*b3*c2*(-a1 + x1) + a1*a3*b2*b3*c2*(-a1 + x1) + a2*a3*b2*b3*c2*(-a1 + x1) + a1*a2*a3*b2*b3*c2*(-a1 + x1) + a1*b1*b2*b3*c2*(-a1 + x1) + a3*b1*b2*b3*c2*(-a1 + x1) + a2*a3*b1*b2*b3*c2*(-a1 + x1) + a1*a2*a3*b1*b2*b3*c2*(-a1 + x1) + a3*c1*c2*(-a1 + x1) + a1*a3*c1*c2*(-a1 + x1) + a2*a3*c1*c2*(-a1 + x1) + a3*b1*c1*c2*(-a1 + x1) + a3*b1*b2*c1*c2*(-a1 + x1) + b3*c1*c2*(-a1 + x1) + a2*a3*b3*c1*c2*(-a1 + x1) + a2*a3*b1*b3*c1*c2*(-a1 + x1) + a1*b2*b3*c1*c2*(-a1 + x1) + a2*b2*b3*c1*c2*(-a1 + x1) + a3*b2*b3*c1*c2*(-a1 + x1) + a2*a3*b2*b3*c1*c2*(-a1 + x1) + b1*b2*b3*c1*c2*(-a1 + x1) + a1*b1*b2*b3*c1*c2*(-a1 + x1) + a2*a3*b1*b2*b3*c1*c2*(-a1 + x1) + a1*a2*b2*c3*(-a1 + x1) + a1*a3*b2*c3*(-a1 + x1) + a1*b1*b2*c3*(-a1 + x1) + a1*a2*b1*b2*c3*(-a1 + x1) + a1*a3*b1*b2*c3*(-a1 + x1) + a2*a3*b3*c3*(-a1 + x1) + a1*a2*b1*b3*c3*(-a1 + x1) + a2*a3*b1*b3*c3*(-a1 + x1) + a1*b2*b3*c3*(-a1 + x1) + a2*b2*b3*c3*(-a1 + x1) + a1*a3*b2*b3*c3*(-a1 + x1) + a2*a3*b2*b3*c3*(-a1 + x1) + a1*a2*c1*c3*(-a1 + x1) + b2*c1*c3*(-a1 + x1) + a1*b2*c1*c3*(-a1 + x1) + b1*b2*c1*c3*(-a1 + x1) + a1*b1*b2*c1*c3*(-a1 + x1) + a2*b1*b2*c1*c3*(-a1 + x1) + a3*b1*b2*c1*c3*(-a1 + x1) + a2*b3*c1*c3*(-a1 + x1) + b2*b3*c1*c3*(-a1 + x1) + a3*b2*b3*c1*c3*(-a1 + x1) + b1*b2*b3*c1*c3*(-a1 + x1) + a3*b1*b2*b3*c1*c3*(-a1 + x1) + c2*c3*(-a1 + x1) + a1*c2*c3*(-a1 + x1) + a2*c2*c3*(-a1 + x1) + a3*c2*c3*(-a1 + x1) + a1*a3*c2*c3*(-a1 + x1) + a2*a3*c2*c3*(-a1 + x1) + b1*c2*c3*(-a1 + x1) + a1*b1*c2*c3*(-a1 + x1) + a2*b1*c2*c3*(-a1 + x1) + a3*b1*c2*c3*(-a1 + x1) + b2*c2*c3*(-a1 + x1) + a1*b2*c2*c3*(-a1 + x1) + a2*b2*c2*c3*(-a1 + x1) + a3*b2*c2*c3*(-a1 + x1) + b3*c2*c3*(-a1 + x1) + a2*b3*c2*c3*(-a1 + x1) + a2*b1*b3*c2*c3*(-a1 + x1) + a3*b1*b3*c2*c3*(-a1 + x1) + a2*b2*b3*c2*c3*(-a1 + x1) + a3*b2*b3*c2*c3*(-a1 + x1) + a1*b1*b2*b3*c2*c3*(-a1 + x1) + a3*b2*c1*c2*c3*(-a1 + x1) + b1*b2*c1*c2*c3*(-a1 + x1) + a1*b3*c1*c2*c3*(-a1 + x1) + a2*b3*c1*c2*c3*(-a1 + x1) + a3*b3*c1*c2*c3*(-a1 + x1) + b2*b3*c1*c2*c3*(-a1 + x1) + (a2*a3*(-a1 + x1)*(1 - a1 + x1))/2 + (a2*a3*b1*(-a1 + x1)*(1 - a1 + x1))/2 + (a2*a3*b2*(-a1 + x1)*(1 - a1 + x1))/2 + (a1*a2*b3*(-a1 + x1)*(1 - a1 + x1))/2 + (a2*a3*b3*(-a1 + x1)*(1 - a1 + x1))/2 + (a2*b1*b3*c1*(-a1 + x1)*(1 - a1 + x1))/2 + (a3*b2*c2*(-a1 + x1)*(1 - a1 + x1))/2 + (b3*c2*(-a1 + x1)*(1 - a1 + x1))/2 + (a2*b3*c2*(-a1 + x1)*(1 - a1 + x1))/2 + (a3*b3*c2*(-a1 + x1)*(1 - a1 + x1))/2 + (a1*b1*b3*c2*(-a1 + x1)*(1 - a1 + x1))/2 + (a3*b1*b3*c2*(-a1 + x1)*(1 - a1 + x1))/2 + (b2*b3*c2*(-a1 + x1)*(1 - a1 + x1))/2 + (a1*b2*b3*c2*(-a1 + x1)*(1 - a1 + x1))/2 + (a3*b2*b3*c2*(-a1 + x1)*(1 - a1 + x1))/2 + (b1*b3*c1*c2*(-a1 + x1)*(1 - a1 + x1))/2 + (b1*b2*b3*c1*c2*(-a1 + x1)*(1 - a1 + x1))/2 + (a2*b2*c3*(-a1 + x1)*(1 - a1 + x1))/2 + (a3*b2*c3*(-a1 + x1)*(1 - a1 + x1))/2 + (a2*b3*c3*(-a1 + x1)*(1 - a1 + x1))/2 + (c2*c3*(-a1 + x1)*(1 - a1 + x1))/2 + (b3*c2*c3*(-a1 + x1)*(1 - a1 + x1))/2 + (b2*b3*c2*c3*(-a1 + x1)*(1 - a1 + x1))/2 + a1*a2*b3*(-a2 + x2) + a1*a2*a3*b3*(-a2 + x2) + a1*a2*b1*b3*(-a2 + x2) + a2*a3*b1*b3*(-a2 + x2) + a1*a2*a3*b1*b2*b3*(-a2 + x2) + a1*a3*c1*(-a2 + x2) + a2*a3*c1*(-a2 + x2) + a1*a3*b2*c1*(-a2 + x2) + a2*a3*b2*c1*(-a2 + x2) + a1*a3*b1*b2*c1*(-a2 + x2) + b3*c1*(-a2 + x2) + a2*b3*c1*(-a2 + x2) + a1*a3*b3*c1*(-a2 + x2) + a2*a3*b3*c1*(-a2 + x2) + b1*b3*c1*(-a2 + x2) + a2*b1*b3*c1*(-a2 + x2) + a1*a2*b1*b3*c1*(-a2 + x2) + a1*a3*b1*b3*c1*(-a2 + x2) + b2*b3*c1*(-a2 + x2) + a1*b2*b3*c1*(-a2 + x2) + a1*a2*b2*b3*c1*(-a2 + x2) + a1*a3*b2*b3*c1*(-a2 + x2) + a2*a3*b2*b3*c1*(-a2 + x2) + a2*b1*b2*b3*c1*(-a2 + x2) + a1*a3*c2*(-a2 + x2) + a1*a3*b1*c2*(-a2 + x2) + a1*a3*b2*c2*(-a2 + x2) + a1*a3*b1*b2*c2*(-a2 + x2) + a1*b3*c2*(-a2 + x2) + a1*a2*b3*c2*(-a2 + x2) + a1*b1*b3*c2*(-a2 + x2) + a2*b1*b3*c2*(-a2 + x2) + a3*b1*b3*c2*(-a2 + x2) + a1*a3*b1*b3*c2*(-a2 + x2) + a2*a3*b1*b3*c2*(-a2 + x2) + a1*a2*a3*b1*b3*c2*(-a2 + x2) + a1*a3*b2*b3*c2*(-a2 + x2) + a1*a2*b1*b2*b3*c2*(-a2 + x2) + a1*a2*a3*b1*b2*b3*c2*(-a2 + x2) + a3*c1*c2*(-a2 + x2) + a2*a3*c1*c2*(-a2 + x2) + a3*b1*c1*c2*(-a2 + x2) + a3*b2*c1*c2*(-a2 + x2) + a3*b1*b2*c1*c2*(-a2 + x2) + b3*c1*c2*(-a2 + x2) + a1*b3*c1*c2*(-a2 + x2) + a2*b3*c1*c2*(-a2 + x2) + a3*b3*c1*c2*(-a2 + x2) + b1*b3*c1*c2*(-a2 + x2) + a1*b1*b3*c1*c2*(-a2 + x2) + a1*a2*b1*b3*c1*c2*(-a2 + x2) + a3*b1*b3*c1*c2*(-a2 + x2) + a1*a3*b1*b3*c1*c2*(-a2 + x2) + a2*a3*b1*b3*c1*c2*(-a2 + x2) + b2*b3*c1*c2*(-a2 + x2) + a2*b2*b3*c1*c2*(-a2 + x2) + b1*b2*b3*c1*c2*(-a2 + x2) + a2*b1*b2*b3*c1*c2*(-a2 + x2) + a1*a2*b1*b2*b3*c1*c2*(-a2 + x2) + a1*a3*b1*b2*b3*c1*c2*(-a2 + x2) + a2*a3*b1*b2*b3*c1*c2*(-a2 + x2) + a1*a2*c3*(-a2 + x2) + a1*a3*c3*(-a2 + x2) + a1*a2*b1*c3*(-a2 + x2) + a1*a3*b1*c3*(-a2 + x2) + a1*a2*b2*c3*(-a2 + x2) + a1*a3*b2*c3*(-a2 + x2) + a1*a2*b1*b2*c3*(-a2 + x2) + a1*a3*b1*b2*c3*(-a2 + x2) + a1*a2*b3*c3*(-a2 + x2) + a1*a2*b1*b3*c3*(-a2 + x2) + a1*c1*c3*(-a2 + x2) + a3*c1*c3*(-a2 + x2) + a1*b1*c1*c3*(-a2 + x2) + a2*b1*c1*c3*(-a2 + x2) + a3*b1*c1*c3*(-a2 + x2) + a2*b2*c1*c3*(-a2 + x2) + a3*b2*c1*c3*(-a2 + x2) + b1*b2*c1*c3*(-a2 + x2) + a1*b1*b2*c1*c3*(-a2 + x2) + a2*b1*b2*c1*c3*(-a2 + x2) + a3*b1*b2*c1*c3*(-a2 + x2) + a2*b3*c1*c3*(-a2 + x2) + b1*b3*c1*c3*(-a2 + x2) + a2*b1*b3*c1*c3*(-a2 + x2) + a1*c2*c3*(-a2 + x2) + a1*b1*c2*c3*(-a2 + x2) + a1*b3*c2*c3*(-a2 + x2) + a1*b1*b3*c2*c3*(-a2 + x2) + a1*b2*b3*c2*c3*(-a2 + x2) + a1*b1*b2*b3*c2*c3*(-a2 + x2) + c1*c2*c3*(-a2 + x2) + a3*c1*c2*c3*(-a2 + x2) + b1*c1*c2*c3*(-a2 + x2) + b2*c1*c2*c3*(-a2 + x2) + a3*b2*c1*c2*c3*(-a2 + x2) + a2*b3*c1*c2*c3*(-a2 + x2) + a3*b3*c1*c2*c3*(-a2 + x2) + a3*(-a1 + x1)*(-a2 + x2) + a2*a3*(-a1 + x1)*(-a2 + x2) + a3*b1*(-a1 + x1)*(-a2 + x2) + a1*a3*b1*(-a1 + x1)*(-a2 + x2) + a2*a3*b1*(-a1 + x1)*(-a2 + x2) + a3*b2*(-a1 + x1)*(-a2 + x2) + a2*a3*b2*(-a1 + x1)*(-a2 + x2) + a2*a3*b1*b2*(-a1 + x1)*(-a2 + x2) + b3*(-a1 + x1)*(-a2 + x2) + a1*b3*(-a1 + x1)*(-a2 + x2) + a2*b3*(-a1 + x1)*(-a2 + x2) + a1*a2*b3*(-a1 + x1)*(-a2 + x2) + a3*b3*(-a1 + x1)*(-a2 + x2) + a2*a3*b3*(-a1 + x1)*(-a2 + x2) + a1*a2*b1*b3*(-a1 + x1)*(-a2 + x2) + a1*a3*b2*b3*(-a1 + x1)*(-a2 + x2) + a3*b1*b2*c1*(-a1 + x1)*(-a2 + x2) + b3*c1*(-a1 + x1)*(-a2 + x2) + a2*b1*b3*c1*(-a1 + x1)*(-a2 + x2) + a3*b1*b3*c1*(-a1 + x1)*(-a2 + x2) + a3*b2*b3*c1*(-a1 + x1)*(-a2 + x2) + a3*b1*b2*b3*c1*(-a1 + x1)*(-a2 + x2) + a3*c2*(-a1 + x1)*(-a2 + x2) + a3*b2*c2*(-a1 + x1)*(-a2 + x2) + a1*b3*c2*(-a1 + x1)*(-a2 + x2) + a2*b3*c2*(-a1 + x1)*(-a2 + x2) + a3*b3*c2*(-a1 + x1)*(-a2 + x2) + a1*b1*b3*c2*(-a1 + x1)*(-a2 + x2) + a3*b1*b3*c2*(-a1 + x1)*(-a2 + x2) + a1*b2*b3*c2*(-a1 + x1)*(-a2 + x2) + a3*b2*b3*c2*(-a1 + x1)*(-a2 + x2) + a1*b1*b2*b3*c2*(-a1 + x1)*(-a2 + x2) + a3*b1*b2*b3*c2*(-a1 + x1)*(-a2 + x2) + b1*b3*c1*c2*(-a1 + x1)*(-a2 + x2) + b1*b2*b3*c1*c2*(-a1 + x1)*(-a2 + x2) + a1*c3*(-a1 + x1)*(-a2 + x2) + a2*c3*(-a1 + x1)*(-a2 + x2) + a3*c3*(-a1 + x1)*(-a2 + x2) + a1*b2*c3*(-a1 + x1)*(-a2 + x2) + a2*b2*c3*(-a1 + x1)*(-a2 + x2) + a3*b2*c3*(-a1 + x1)*(-a2 + x2) + a2*b3*c3*(-a1 + x1)*(-a2 + x2) + c1*c3*(-a1 + x1)*(-a2 + x2) + a1*c1*c3*(-a1 + x1)*(-a2 + x2) + b3*c1*c3*(-a1 + x1)*(-a2 + x2) + b1*b3*c1*c3*(-a1 + x1)*(-a2 + x2) + c2*c3*(-a1 + x1)*(-a2 + x2) + b1*b3*c2*c3*(-a1 + x1)*(-a2 + x2) + b2*b3*c2*c3*(-a1 + x1)*(-a2 + x2) + (a3*b1*b2*(-a2 + x2)*(1 - a2 + x2))/2 + (a1*a3*b1*b2*(-a2 + x2)*(1 - a2 + x2))/2 + (a1*a2*b3*(-a2 + x2)*(1 - a2 + x2))/2 + (b1*b3*(-a2 + x2)*(1 - a2 + x2))/2 + (a1*b1*b3*(-a2 + x2)*(1 - a2 + x2))/2 + (a2*b1*b3*(-a2 + x2)*(1 - a2 + x2))/2 + (a1*a2*b1*b3*(-a2 + x2)*(1 - a2 + x2))/2 + (a3*b1*b3*(-a2 + x2)*(1 - a2 + x2))/2 + (a1*a3*b1*b3*(-a2 + x2)*(1 - a2 + x2))/2 + (a3*b1*b2*c1*(-a2 + x2)*(1 - a2 + x2))/2 + (b1*b3*c1*(-a2 + x2)*(1 - a2 + x2))/2 + (a1*b1*b3*c1*(-a2 + x2)*(1 - a2 + x2))/2 + (a2*b1*b3*c1*(-a2 + x2)*(1 - a2 + x2))/2 + (a3*b1*b3*c1*(-a2 + x2)*(1 - a2 + x2))/2 + (b1*b3*c2*(-a2 + x2)*(1 - a2 + x2))/2 + (a1*b1*b3*c2*(-a2 + x2)*(1 - a2 + x2))/2 + (a1*b2*b3*c2*(-a2 + x2)*(1 - a2 + x2))/2 + (b1*b2*b3*c2*(-a2 + x2)*(1 - a2 + x2))/2 + (a1*b1*b2*b3*c2*(-a2 + x2)*(1 - a2 + x2))/2 + (b1*b2*b3*c1*c2*(-a2 + x2)*(1 - a2 + x2))/2 + (c1*c3*(-a2 + x2)*(1 - a2 + x2))/2 + (b1*b2*c1*c3*(-a2 + x2)*(1 - a2 + x2))/2 + (b1*b3*c1*c3*(-a2 + x2)*(1 - a2 + x2))/2 + a1*a2*a3*(-a3 + x3) + a2*a3*b1*(-a3 + x3) + a1*a2*a3*b2*(-a3 + x3) + a2*a3*b1*b2*(-a3 + x3) + a2*a3*b1*b3*(-a3 + x3) + a2*a3*b1*b2*b3*(-a3 + x3) + a1*a2*b1*c1*(-a3 + x3) + a1*a2*b1*b2*c1*(-a3 + x3) + a3*b1*b2*c1*(-a3 + x3) + a1*a3*b1*b2*c1*(-a3 + x3) + a2*a3*b1*b2*c1*(-a3 + x3) + a1*a2*b1*b3*c1*(-a3 + x3) + a1*a2*a3*b1*b3*c1*(-a3 + x3) + a1*a2*b1*b2*b3*c1*(-a3 + x3) + a3*b1*b2*b3*c1*(-a3 + x3) + a1*a3*b1*b2*b3*c1*(-a3 + x3) + a2*a3*b1*b2*b3*c1*(-a3 + x3) + a1*a2*a3*b1*b2*b3*c1*(-a3 + x3) + a1*c2*(-a3 + x3) + a1*a2*c2*(-a3 + x3) + b1*c2*(-a3 + x3) + a1*b1*c2*(-a3 + x3) + a2*b1*c2*(-a3 + x3) + a1*a2*b1*c2*(-a3 + x3) + a1*a3*b1*c2*(-a3 + x3) + a1*b2*c2*(-a3 + x3) + a1*a2*b2*c2*(-a3 + x3) + b1*b2*c2*(-a3 + x3) + a1*b1*b2*c2*(-a3 + x3) + a2*b1*b2*c2*(-a3 + x3) + a1*a2*b1*b2*c2*(-a3 + x3) + a1*a2*a3*b1*b2*c2*(-a3 + x3) + a1*a3*b3*c2*(-a3 + x3) + a3*b1*b3*c2*(-a3 + x3) + a1*a3*b1*b3*c2*(-a3 + x3) + a1*a2*a3*b1*b3*c2*(-a3 + x3) + a1*a2*b2*b3*c2*(-a3 + x3) + a2*b1*b2*b3*c2*(-a3 + x3) + a1*a2*b1*b2*b3*c2*(-a3 + x3) + a3*b1*b2*b3*c2*(-a3 + x3) + a1*a3*b1*b2*b3*c2*(-a3 + x3) + a2*a3*b1*b2*b3*c2*(-a3 + x3) + a1*a2*c1*c2*(-a3 + x3) + b1*c1*c2*(-a3 + x3) + a1*b1*c1*c2*(-a3 + x3) + a3*b1*c1*c2*(-a3 + x3) + a1*b2*c1*c2*(-a3 + x3) + a2*b2*c1*c2*(-a3 + x3) + a3*b2*c1*c2*(-a3 + x3) + a1*b1*b2*c1*c2*(-a3 + x3) + a1*a2*b1*b2*c1*c2*(-a3 + x3) + a1*a3*b1*b2*c1*c2*(-a3 + x3) + a2*a3*b1*b2*c1*c2*(-a3 + x3) + a1*b3*c1*c2*(-a3 + x3) + a2*b3*c1*c2*(-a3 + x3) + a3*b3*c1*c2*(-a3 + x3) + b1*b3*c1*c2*(-a3 + x3) + a3*b2*b3*c1*c2*(-a3 + x3) + a2*b1*b2*b3*c1*c2*(-a3 + x3) + a1*a2*b1*b2*b3*c1*c2*(-a3 + x3) + a3*b1*b2*b3*c1*c2*(-a3 + x3) + a1*a3*b1*b2*b3*c1*c2*(-a3 + x3) + a2*a3*b1*b2*b3*c1*c2*(-a3 + x3) + a2*b1*c3*(-a3 + x3) + a1*a2*b1*c3*(-a3 + x3) + a2*a3*b1*c3*(-a3 + x3) + a2*b1*b2*c3*(-a3 + x3) + a1*a2*b1*b2*c3*(-a3 + x3) + a2*a3*b1*b2*c3*(-a3 + x3) + a1*a2*b3*c3*(-a3 + x3) + a1*a2*b2*b3*c3*(-a3 + x3) + a2*b1*c1*c3*(-a3 + x3) + a2*b1*b2*c1*c3*(-a3 + x3) + a2*b1*b3*c1*c3*(-a3 + x3) + a2*b1*b2*b3*c1*c3*(-a3 + x3) + a1*a2*c2*c3*(-a3 + x3) + b1*c2*c3*(-a3 + x3) + a2*b1*c2*c3*(-a3 + x3) + a3*b1*c2*c3*(-a3 + x3) + a1*b2*c2*c3*(-a3 + x3) + a1*b1*b2*c2*c3*(-a3 + x3) + a2*b1*b2*c2*c3*(-a3 + x3) + a3*b1*b2*c2*c3*(-a3 + x3) + a1*b3*c2*c3*(-a3 + x3) + a2*b1*b3*c2*c3*(-a3 + x3) + a1*b2*b3*c2*c3*(-a3 + x3) + b1*b2*b3*c2*c3*(-a3 + x3) + a2*b1*b2*b3*c2*c3*(-a3 + x3) + a1*c1*c2*c3*(-a3 + x3) + a2*c1*c2*c3*(-a3 + x3) + a3*c1*c2*c3*(-a3 + x3) + b1*c1*c2*c3*(-a3 + x3) + a1*b2*c1*c2*c3*(-a3 + x3) + a2*b2*c1*c2*c3*(-a3 + x3) + b1*b2*c1*c2*c3*(-a3 + x3) + a3*b3*c1*c2*c3*(-a3 + x3) + b1*b3*c1*c2*c3*(-a3 + x3) + b1*b2*b3*c1*c2*c3*(-a3 + x3) + a1*a2*(-a1 + x1)*(-a3 + x3) + a2*a3*b1*(-a1 + x1)*(-a3 + x3) + a1*a2*a3*b2*(-a1 + x1)*(-a3 + x3) + a1*a2*b1*b2*(-a1 + x1)*(-a3 + x3) + a2*a3*b1*b2*(-a1 + x1)*(-a3 + x3) + a1*a2*a3*b1*b2*(-a1 + x1)*(-a3 + x3) + a1*a2*b3*(-a1 + x1)*(-a3 + x3) + a2*a3*b3*(-a1 + x1)*(-a3 + x3) + a1*a2*a3*b3*(-a1 + x1)*(-a3 + x3) + a1*a2*a3*b1*b3*(-a1 + x1)*(-a3 + x3) + a1*a2*b2*b3*(-a1 + x1)*(-a3 + x3) + a2*a3*b2*b3*(-a1 + x1)*(-a3 + x3) + a2*c1*(-a1 + x1)*(-a3 + x3) + a2*b1*c1*(-a1 + x1)*(-a3 + x3) + a2*a3*b2*c1*(-a1 + x1)*(-a3 + x3) + a2*a3*b1*b2*c1*(-a1 + x1)*(-a3 + x3) + a2*b3*c1*(-a1 + x1)*(-a3 + x3) + a2*a3*b3*c1*(-a1 + x1)*(-a3 + x3) + a2*b1*b3*c1*(-a1 + x1)*(-a3 + x3) + a2*a3*b1*b3*c1*(-a1 + x1)*(-a3 + x3) + a2*b2*b3*c1*(-a1 + x1)*(-a3 + x3) + a2*b1*b2*b3*c1*(-a1 + x1)*(-a3 + x3) + a1*c2*(-a1 + x1)*(-a3 + x3) + b1*c2*(-a1 + x1)*(-a3 + x3) + a2*b1*c2*(-a1 + x1)*(-a3 + x3) + a3*b1*c2*(-a1 + x1)*(-a3 + x3) + a1*b2*c2*(-a1 + x1)*(-a3 + x3) + a1*a2*b2*c2*(-a1 + x1)*(-a3 + x3) + a1*a3*b2*c2*(-a1 + x1)*(-a3 + x3) + b1*b2*c2*(-a1 + x1)*(-a3 + x3) + a2*b1*b2*c2*(-a1 + x1)*(-a3 + x3) + a1*a2*b1*b2*c2*(-a1 + x1)*(-a3 + x3) + a3*b1*b2*c2*(-a1 + x1)*(-a3 + x3) + a1*a3*b1*b2*c2*(-a1 + x1)*(-a3 + x3) + a1*b3*c2*(-a1 + x1)*(-a3 + x3) + a3*b3*c2*(-a1 + x1)*(-a3 + x3) + a1*a3*b3*c2*(-a1 + x1)*(-a3 + x3) + b1*b3*c2*(-a1 + x1)*(-a3 + x3) + a2*b1*b3*c2*(-a1 + x1)*(-a3 + x3) + a1*a3*b1*b3*c2*(-a1 + x1)*(-a3 + x3) + a1*a2*b2*b3*c2*(-a1 + x1)*(-a3 + x3) + a3*b2*b3*c2*(-a1 + x1)*(-a3 + x3) + b1*b2*b3*c2*(-a1 + x1)*(-a3 + x3) + a1*b1*b2*b3*c2*(-a1 + x1)*(-a3 + x3) + a2*b1*b2*b3*c2*(-a1 + x1)*(-a3 + x3) + a1*a2*b1*b2*b3*c2*(-a1 + x1)*(-a3 + x3) + a1*c1*c2*(-a1 + x1)*(-a3 + x3) + a2*c1*c2*(-a1 + x1)*(-a3 + x3) + b1*c1*c2*(-a1 + x1)*(-a3 + x3) + a2*b2*c1*c2*(-a1 + x1)*(-a3 + x3) + a3*b2*c1*c2*(-a1 + x1)*(-a3 + x3) + b1*b2*c1*c2*(-a1 + x1)*(-a3 + x3) + a2*b1*b2*c1*c2*(-a1 + x1)*(-a3 + x3) + a3*b1*b2*c1*c2*(-a1 + x1)*(-a3 + x3) + b3*c1*c2*(-a1 + x1)*(-a3 + x3) + a3*b3*c1*c2*(-a1 + x1)*(-a3 + x3) + b1*b3*c1*c2*(-a1 + x1)*(-a3 + x3) + a3*b1*b3*c1*c2*(-a1 + x1)*(-a3 + x3) + a2*b2*b3*c1*c2*(-a1 + x1)*(-a3 + x3) + a2*b1*b2*b3*c1*c2*(-a1 + x1)*(-a3 + x3) + a1*c2*c3*(-a1 + x1)*(-a3 + x3) + a2*c2*c3*(-a1 + x1)*(-a3 + x3) + c1*c2*c3*(-a1 + x1)*(-a3 + x3) + b2*c1*c2*c3*(-a1 + x1)*(-a3 + x3) + a1*(-a2 + x2)*(-a3 + x3) + a1*a3*(-a2 + x2)*(-a3 + x3) + b1*(-a2 + x2)*(-a3 + x3) + a1*b1*(-a2 + x2)*(-a3 + x3) + a2*b1*(-a2 + x2)*(-a3 + x3) + a3*b1*(-a2 + x2)*(-a3 + x3) + a1*a3*b1*(-a2 + x2)*(-a3 + x3) + a2*a3*b1*(-a2 + x2)*(-a3 + x3) + a1*b2*(-a2 + x2)*(-a3 + x3) + a1*a3*b2*(-a2 + x2)*(-a3 + x3) + a1*a2*b1*b2*(-a2 + x2)*(-a3 + x3) + a1*a2*a3*b1*b2*(-a2 + x2)*(-a3 + x3) + a1*b3*(-a2 + x2)*(-a3 + x3) + a1*a2*b3*(-a2 + x2)*(-a3 + x3) + a1*a3*b3*(-a2 + x2)*(-a3 + x3) + a1*a2*a3*b1*b3*(-a2 + x2)*(-a3 + x3) + c1*(-a2 + x2)*(-a3 + x3) + a1*c1*(-a2 + x2)*(-a3 + x3) + a2*c1*(-a2 + x2)*(-a3 + x3) + a3*c1*(-a2 + x2)*(-a3 + x3) + b1*c1*(-a2 + x2)*(-a3 + x3) + a1*b1*c1*(-a2 + x2)*(-a3 + x3) + a2*b1*c1*(-a2 + x2)*(-a3 + x3) + a3*b1*c1*(-a2 + x2)*(-a3 + x3) + b2*c1*(-a2 + x2)*(-a3 + x3) + a1*b2*c1*(-a2 + x2)*(-a3 + x3) + a2*b2*c1*(-a2 + x2)*(-a3 + x3) + a3*b2*c1*(-a2 + x2)*(-a3 + x3) + a1*a2*b1*b2*c1*(-a2 + x2)*(-a3 + x3) + a1*a3*b1*b2*c1*(-a2 + x2)*(-a3 + x3) + a2*a3*b1*b2*c1*(-a2 + x2)*(-a3 + x3) + b3*c1*(-a2 + x2)*(-a3 + x3) + a3*b3*c1*(-a2 + x2)*(-a3 + x3) + a2*b1*b3*c1*(-a2 + x2)*(-a3 + x3) + a2*a3*b1*b3*c1*(-a2 + x2)*(-a3 + x3) + a1*b2*b3*c1*(-a2 + x2)*(-a3 + x3) + a2*b2*b3*c1*(-a2 + x2)*(-a3 + x3) + a3*b2*b3*c1*(-a2 + x2)*(-a3 + x3) + a2*b1*b2*b3*c1*(-a2 + x2)*(-a3 + x3) + a1*a2*b1*b2*b3*c1*(-a2 + x2)*(-a3 + x3) + a3*b1*b2*b3*c1*(-a2 + x2)*(-a3 + x3) + a1*a3*b1*b2*b3*c1*(-a2 + x2)*(-a3 + x3) + a1*c2*(-a2 + x2)*(-a3 + x3) + b1*c2*(-a2 + x2)*(-a3 + x3) + a1*b1*c2*(-a2 + x2)*(-a3 + x3) + a2*b1*c2*(-a2 + x2)*(-a3 + x3) + a3*b1*c2*(-a2 + x2)*(-a3 + x3) + a1*b2*c2*(-a2 + x2)*(-a3 + x3) + a1*a2*b1*b2*c2*(-a2 + x2)*(-a3 + x3) + a1*a3*b1*b2*c2*(-a2 + x2)*(-a3 + x3) + a1*b1*b3*c2*(-a2 + x2)*(-a3 + x3) + a2*b1*b3*c2*(-a2 + x2)*(-a3 + x3) + a1*a3*b1*b3*c2*(-a2 + x2)*(-a3 + x3) + a1*b2*b3*c2*(-a2 + x2)*(-a3 + x3) + a1*b1*b2*b3*c2*(-a2 + x2)*(-a3 + x3) + a1*a2*b1*b2*b3*c2*(-a2 + x2)*(-a3 + x3) + a2*c1*c2*(-a2 + x2)*(-a3 + x3) + b2*c1*c2*(-a2 + x2)*(-a3 + x3) + b1*b2*c1*c2*(-a2 + x2)*(-a3 + x3) + a2*b1*b2*c1*c2*(-a2 + x2)*(-a3 + x3) + a3*b1*b2*c1*c2*(-a2 + x2)*(-a3 + x3) + b1*b3*c1*c2*(-a2 + x2)*(-a3 + x3) + a3*b1*b3*c1*c2*(-a2 + x2)*(-a3 + x3) + b2*b3*c1*c2*(-a2 + x2)*(-a3 + x3) + b1*b2*b3*c1*c2*(-a2 + x2)*(-a3 + x3) + a2*b1*b2*b3*c1*c2*(-a2 + x2)*(-a3 + x3) + b3*c1*c3*(-a2 + x2)*(-a3 + x3) + b1*b3*c1*c3*(-a2 + x2)*(-a3 + x3) + b2*b3*c1*c3*(-a2 + x2)*(-a3 + x3) + b1*b2*b3*c1*c3*(-a2 + x2)*(-a3 + x3) + b2*c1*c2*c3*(-a2 + x2)*(-a3 + x3) + (b1*b2*(-a3 + x3)*(1 - a3 + x3))/2 + (a1*b1*b2*(-a3 + x3)*(1 - a3 + x3))/2 + (a2*b1*b2*(-a3 + x3)*(1 - a3 + x3))/2 + (a3*b1*b2*(-a3 + x3)*(1 - a3 + x3))/2 + (a1*a3*b1*b2*(-a3 + x3)*(1 - a3 + x3))/2 + (a2*a3*b1*b2*(-a3 + x3)*(1 - a3 + x3))/2 + (a1*a2*b3*(-a3 + x3)*(1 - a3 + x3))/2 + (a1*b2*b3*(-a3 + x3)*(1 - a3 + x3))/2 + (a1*a3*b2*b3*(-a3 + x3)*(1 - a3 + x3))/2 + (b1*b2*c1*(-a3 + x3)*(1 - a3 + x3))/2 + (a1*b1*b2*c1*(-a3 + x3)*(1 - a3 + x3))/2 + (a2*b1*b2*c1*(-a3 + x3)*(1 - a3 + x3))/2 + (a2*b1*b3*c1*(-a3 + x3)*(1 - a3 + x3))/2 + (b1*b2*b3*c1*(-a3 + x3)*(1 - a3 + x3))/2 + (a1*b1*b2*b3*c1*(-a3 + x3)*(1 - a3 + x3))/2 + (a2*b1*b2*b3*c1*(-a3 + x3)*(1 - a3 + x3))/2 + (b1*b2*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (a1*b1*b2*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (a2*b1*b2*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (a3*b1*b2*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (a1*b1*b3*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (a2*b1*b3*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (a1*b2*b3*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (a1*b1*b2*b3*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (a2*b1*b2*b3*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (c1*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (b1*b2*c1*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (b1*b3*c1*c2*(-a3 + x3)*(1 - a3 + x3))/2 + (b1*b3*c2*c3*(-a3 + x3)*(1 - a3 + x3))/2 + a1*a3*b2*(-a1 + y1) + a2*a3*b2*(-a1 + y1) + a3*b1*b2*(-a1 + y1) + a1*a2*a3*b1*b2*(-a1 + y1) + a1*a2*b3*(-a1 + y1) + a2*a3*b3*(-a1 + y1) + a1*a2*a3*b3*(-a1 + y1) + a2*b1*b3*(-a1 + y1) + a1*a2*b1*b3*(-a1 + y1) + a2*a3*b1*b3*(-a1 + y1) + a1*a2*a3*b1*b3*(-a1 + y1) + a3*b2*b3*(-a1 + y1) + a1*a3*b2*b3*(-a1 + y1) + a2*a3*b2*b3*(-a1 + y1) + a3*b1*b2*b3*(-a1 + y1) + a1*a3*b1*b2*b3*(-a1 + y1) + a2*a3*b1*b2*b3*(-a1 + y1) + a1*a2*a3*b1*b2*b3*(-a1 + y1) + a2*a3*c1*(-a1 + y1) + a2*a3*b1*c1*(-a1 + y1) + a3*b2*c1*(-a1 + y1) + a1*a3*b2*c1*(-a1 + y1) + a2*a3*b2*c1*(-a1 + y1) + a2*a3*b1*b2*c1*(-a1 + y1) + a2*b3*c1*(-a1 + y1) + a1*a2*b3*c1*(-a1 + y1) + a2*a3*b3*c1*(-a1 + y1) + a1*a2*b1*b3*c1*(-a1 + y1) + b2*b3*c1*(-a1 + y1) + a2*a3*b2*b3*c1*(-a1 + y1) + a3*b1*b2*b3*c1*(-a1 + y1) + a1*a3*b1*b2*b3*c1*(-a1 + y1) + a1*a3*b2*c2*(-a1 + y1) + a3*b1*b2*c2*(-a1 + y1) + a1*a3*b1*b2*c2*(-a1 + y1) + b3*c2*(-a1 + y1) + a1*a2*b3*c2*(-a1 + y1) + a3*b3*c2*(-a1 + y1) + a1*a2*a3*b3*c2*(-a1 + y1) + b1*b3*c2*(-a1 + y1) + a1*b1*b3*c2*(-a1 + y1) + a1*a3*b1*b3*c2*(-a1 + y1) + a1*a2*a3*b1*b3*c2*(-a1 + y1) + a2*b2*b3*c2*(-a1 + y1) + a1*a3*b2*b3*c2*(-a1 + y1) + a2*a3*b2*b3*c2*(-a1 + y1) + a1*a2*a3*b2*b3*c2*(-a1 + y1) + b1*b2*b3*c2*(-a1 + y1) + a3*b1*b2*b3*c2*(-a1 + y1) + a1*a2*a3*b1*b2*b3*c2*(-a1 + y1) + a1*a3*c1*c2*(-a1 + y1) + a2*a3*c1*c2*(-a1 + y1) + a3*b1*c1*c2*(-a1 + y1) + a3*b1*b2*c1*c2*(-a1 + y1) + a2*a3*b3*c1*c2*(-a1 + y1) + a2*a3*b1*b3*c1*c2*(-a1 + y1) + b2*b3*c1*c2*(-a1 + y1) + a1*b2*b3*c1*c2*(-a1 + y1) + a2*b2*b3*c1*c2*(-a1 + y1) + a3*b2*b3*c1*c2*(-a1 + y1) + a2*a3*b2*b3*c1*c2*(-a1 + y1) + a1*b1*b2*b3*c1*c2*(-a1 + y1) + a2*a3*b1*b2*b3*c1*c2*(-a1 + y1) + b2*c3*(-a1 + y1) + a1*b2*c3*(-a1 + y1) + a1*a2*b2*c3*(-a1 + y1) + a1*a3*b2*c3*(-a1 + y1) + b1*b2*c3*(-a1 + y1) + a1*b1*b2*c3*(-a1 + y1) + a2*b1*b2*c3*(-a1 + y1) + a1*a2*b1*b2*c3*(-a1 + y1) + a3*b1*b2*c3*(-a1 + y1) + a1*a3*b1*b2*c3*(-a1 + y1) + a2*b3*c3*(-a1 + y1) + a2*a3*b3*c3*(-a1 + y1) + a2*b1*b3*c3*(-a1 + y1) + a1*a2*b1*b3*c3*(-a1 + y1) + a2*a3*b1*b3*c3*(-a1 + y1) + b2*b3*c3*(-a1 + y1) + a1*b2*b3*c3*(-a1 + y1) + a2*b2*b3*c3*(-a1 + y1) + a3*b2*b3*c3*(-a1 + y1) + a1*a3*b2*b3*c3*(-a1 + y1) + a2*a3*b2*b3*c3*(-a1 + y1) + a2*c1*c3*(-a1 + y1) + a1*a2*c1*c3*(-a1 + y1) + b2*c1*c3*(-a1 + y1) + a1*b2*c1*c3*(-a1 + y1) + a1*b1*b2*c1*c3*(-a1 + y1) + a2*b1*b2*c1*c3*(-a1 + y1) + a3*b1*b2*c1*c3*(-a1 + y1) + a2*b3*c1*c3*(-a1 + y1) + b2*b3*c1*c3*(-a1 + y1) + a3*b2*b3*c1*c3*(-a1 + y1) + b1*b2*b3*c1*c3*(-a1 + y1) + a3*b1*b2*b3*c1*c3*(-a1 + y1) + c2*c3*(-a1 + y1) + a1*c2*c3*(-a1 + y1) + a2*c2*c3*(-a1 + y1) + a1*a3*c2*c3*(-a1 + y1) + a2*a3*c2*c3*(-a1 + y1) + a1*b1*c2*c3*(-a1 + y1) + a2*b1*c2*c3*(-a1 + y1) + a3*b1*c2*c3*(-a1 + y1) + a1*b2*c2*c3*(-a1 + y1) + a2*b2*c2*c3*(-a1 + y1) + a3*b2*c2*c3*(-a1 + y1) + b3*c2*c3*(-a1 + y1) + a2*b3*c2*c3*(-a1 + y1) + a2*b1*b3*c2*c3*(-a1 + y1) + a3*b1*b3*c2*c3*(-a1 + y1) + b2*b3*c2*c3*(-a1 + y1) + a2*b2*b3*c2*c3*(-a1 + y1) + a3*b2*b3*c2*c3*(-a1 + y1) + b1*b2*b3*c2*c3*(-a1 + y1) + a1*b1*b2*b3*c2*c3*(-a1 + y1) + a3*b2*c1*c2*c3*(-a1 + y1) + b1*b2*c1*c2*c3*(-a1 + y1) + b3*c1*c2*c3*(-a1 + y1) + a1*b3*c1*c2*c3*(-a1 + y1) + a2*b3*c1*c2*c3*(-a1 + y1) + a3*b3*c1*c2*c3*(-a1 + y1) + b2*b3*c1*c2*c3*(-a1 + y1) + a2*a3*(-a1 + x1)*(-a1 + y1) + a2*a3*b1*(-a1 + x1)*(-a1 + y1) + a2*a3*b2*(-a1 + x1)*(-a1 + y1) + a3*b1*b2*(-a1 + x1)*(-a1 + y1) + a1*a2*b3*(-a1 + x1)*(-a1 + y1) + a2*a3*b3*(-a1 + x1)*(-a1 + y1) + a2*b1*b3*(-a1 + x1)*(-a1 + y1) + a3*b2*b3*(-a1 + x1)*(-a1 + y1) + a2*b1*b3*c1*(-a1 + x1)*(-a1 + y1) + a3*b2*c2*(-a1 + x1)*(-a1 + y1) + a2*b3*c2*(-a1 + x1)*(-a1 + y1) + a3*b3*c2*(-a1 + x1)*(-a1 + y1) + b1*b3*c2*(-a1 + x1)*(-a1 + y1) + a1*b1*b3*c2*(-a1 + x1)*(-a1 + y1) + a3*b1*b3*c2*(-a1 + x1)*(-a1 + y1) + b2*b3*c2*(-a1 + x1)*(-a1 + y1) + a1*b2*b3*c2*(-a1 + x1)*(-a1 + y1) + a3*b2*b3*c2*(-a1 + x1)*(-a1 + y1) + b1*b2*b3*c2*(-a1 + x1)*(-a1 + y1) + b1*b3*c1*c2*(-a1 + x1)*(-a1 + y1) + b1*b2*b3*c1*c2*(-a1 + x1)*(-a1 + y1) + b2*c3*(-a1 + x1)*(-a1 + y1) + a2*b2*c3*(-a1 + x1)*(-a1 + y1) + a3*b2*c3*(-a1 + x1)*(-a1 + y1) + a2*b3*c3*(-a1 + x1)*(-a1 + y1) + c2*c3*(-a1 + x1)*(-a1 + y1) + b3*c2*c3*(-a1 + x1)*(-a1 + y1) + b2*b3*c2*c3*(-a1 + x1)*(-a1 + y1) + a2*a3*(-a2 + x2)*(-a1 + y1) + a3*b1*(-a2 + x2)*(-a1 + y1) + a1*a3*b1*(-a2 + x2)*(-a1 + y1) + a2*a3*b1*(-a2 + x2)*(-a1 + y1) + a2*a3*b2*(-a2 + x2)*(-a1 + y1) + a2*a3*b1*b2*(-a2 + x2)*(-a1 + y1) + b3*(-a2 + x2)*(-a1 + y1) + a1*b3*(-a2 + x2)*(-a1 + y1) + a1*a2*b3*(-a2 + x2)*(-a1 + y1) + a2*a3*b3*(-a2 + x2)*(-a1 + y1) + b1*b3*(-a2 + x2)*(-a1 + y1) + a1*b1*b3*(-a2 + x2)*(-a1 + y1) + a1*a2*b1*b3*(-a2 + x2)*(-a1 + y1) + a3*b2*b3*(-a2 + x2)*(-a1 + y1) + a1*a3*b2*b3*(-a2 + x2)*(-a1 + y1) + a3*b1*b2*c1*(-a2 + x2)*(-a1 + y1) + b3*c1*(-a2 + x2)*(-a1 + y1) + b1*b3*c1*(-a2 + x2)*(-a1 + y1) + a2*b1*b3*c1*(-a2 + x2)*(-a1 + y1) + a3*b1*b3*c1*(-a2 + x2)*(-a1 + y1) + a3*b2*b3*c1*(-a2 + x2)*(-a1 + y1) + a3*b1*b2*b3*c1*(-a2 + x2)*(-a1 + y1) + a3*c2*(-a2 + x2)*(-a1 + y1) + a3*b2*c2*(-a2 + x2)*(-a1 + y1) + b3*c2*(-a2 + x2)*(-a1 + y1) + a1*b3*c2*(-a2 + x2)*(-a1 + y1) + a2*b3*c2*(-a2 + x2)*(-a1 + y1) + a3*b3*c2*(-a2 + x2)*(-a1 + y1) + a1*b1*b3*c2*(-a2 + x2)*(-a1 + y1) + a3*b1*b3*c2*(-a2 + x2)*(-a1 + y1) + b2*b3*c2*(-a2 + x2)*(-a1 + y1) + a1*b2*b3*c2*(-a2 + x2)*(-a1 + y1) + a3*b2*b3*c2*(-a2 + x2)*(-a1 + y1) + a1*b1*b2*b3*c2*(-a2 + x2)*(-a1 + y1) + a3*b1*b2*b3*c2*(-a2 + x2)*(-a1 + y1) + b1*b3*c1*c2*(-a2 + x2)*(-a1 + y1) + b1*b2*b3*c1*c2*(-a2 + x2)*(-a1 + y1) + c3*(-a2 + x2)*(-a1 + y1) + a1*c3*(-a2 + x2)*(-a1 + y1) + a2*c3*(-a2 + x2)*(-a1 + y1) + a3*c3*(-a2 + x2)*(-a1 + y1) + b2*c3*(-a2 + x2)*(-a1 + y1) + a1*b2*c3*(-a2 + x2)*(-a1 + y1) + a2*b2*c3*(-a2 + x2)*(-a1 + y1) + a3*b2*c3*(-a2 + x2)*(-a1 + y1) + a2*b3*c3*(-a2 + x2)*(-a1 + y1) + a1*c1*c3*(-a2 + x2)*(-a1 + y1) + b3*c1*c3*(-a2 + x2)*(-a1 + y1) + b1*b3*c1*c3*(-a2 + x2)*(-a1 + y1) + c2*c3*(-a2 + x2)*(-a1 + y1) + b1*b3*c2*c3*(-a2 + x2)*(-a1 + y1) + b2*b3*c2*c3*(-a2 + x2)*(-a1 + y1) + a2*(-a3 + x3)*(-a1 + y1) + a1*a2*(-a3 + x3)*(-a1 + y1) + a2*a3*b1*(-a3 + x3)*(-a1 + y1) + a2*b2*(-a3 + x3)*(-a1 + y1) + a1*a2*a3*b2*(-a3 + x3)*(-a1 + y1) + a2*b1*b2*(-a3 + x3)*(-a1 + y1) + a1*a2*b1*b2*(-a3 + x3)*(-a1 + y1) + a1*a2*a3*b1*b2*(-a3 + x3)*(-a1 + y1) + a2*b3*(-a3 + x3)*(-a1 + y1) + a1*a2*b3*(-a3 + x3)*(-a1 + y1) + a2*a3*b3*(-a3 + x3)*(-a1 + y1) + a1*a2*a3*b3*(-a3 + x3)*(-a1 + y1) + a2*a3*b1*b3*(-a3 + x3)*(-a1 + y1) + a1*a2*a3*b1*b3*(-a3 + x3)*(-a1 + y1) + a2*b2*b3*(-a3 + x3)*(-a1 + y1) + a1*a2*b2*b3*(-a3 + x3)*(-a1 + y1) + a2*a3*b2*b3*(-a3 + x3)*(-a1 + y1) + a2*c1*(-a3 + x3)*(-a1 + y1) + a2*b1*c1*(-a3 + x3)*(-a1 + y1) + a2*a3*b2*c1*(-a3 + x3)*(-a1 + y1) + a2*a3*b1*b2*c1*(-a3 + x3)*(-a1 + y1) + a2*b3*c1*(-a3 + x3)*(-a1 + y1) + a2*a3*b3*c1*(-a3 + x3)*(-a1 + y1) + a2*b1*b3*c1*(-a3 + x3)*(-a1 + y1) + a2*a3*b1*b3*c1*(-a3 + x3)*(-a1 + y1) + a2*b2*b3*c1*(-a3 + x3)*(-a1 + y1) + a2*b1*b2*b3*c1*(-a3 + x3)*(-a1 + y1) + c2*(-a3 + x3)*(-a1 + y1) + a1*c2*(-a3 + x3)*(-a1 + y1) + b1*c2*(-a3 + x3)*(-a1 + y1) + a2*b1*c2*(-a3 + x3)*(-a1 + y1) + a3*b1*c2*(-a3 + x3)*(-a1 + y1) + b2*c2*(-a3 + x3)*(-a1 + y1) + a1*b2*c2*(-a3 + x3)*(-a1 + y1) + a1*a2*b2*c2*(-a3 + x3)*(-a1 + y1) + a1*a3*b2*c2*(-a3 + x3)*(-a1 + y1) + b1*b2*c2*(-a3 + x3)*(-a1 + y1) + a1*a2*b1*b2*c2*(-a3 + x3)*(-a1 + y1) + a1*a3*b1*b2*c2*(-a3 + x3)*(-a1 + y1) + b3*c2*(-a3 + x3)*(-a1 + y1) + a1*b3*c2*(-a3 + x3)*(-a1 + y1) + a3*b3*c2*(-a3 + x3)*(-a1 + y1) + a1*a3*b3*c2*(-a3 + x3)*(-a1 + y1) + b1*b3*c2*(-a3 + x3)*(-a1 + y1) + a2*b1*b3*c2*(-a3 + x3)*(-a1 + y1) + a3*b1*b3*c2*(-a3 + x3)*(-a1 + y1) + a1*a3*b1*b3*c2*(-a3 + x3)*(-a1 + y1) + b2*b3*c2*(-a3 + x3)*(-a1 + y1) + a1*a2*b2*b3*c2*(-a3 + x3)*(-a1 + y1) + a3*b2*b3*c2*(-a3 + x3)*(-a1 + y1) + a1*b1*b2*b3*c2*(-a3 + x3)*(-a1 + y1) + a1*a2*b1*b2*b3*c2*(-a3 + x3)*(-a1 + y1) + c1*c2*(-a3 + x3)*(-a1 + y1) + a1*c1*c2*(-a3 + x3)*(-a1 + y1) + a2*c1*c2*(-a3 + x3)*(-a1 + y1) + b1*c1*c2*(-a3 + x3)*(-a1 + y1) + a2*b2*c1*c2*(-a3 + x3)*(-a1 + y1) + a3*b2*c1*c2*(-a3 + x3)*(-a1 + y1) + b1*b2*c1*c2*(-a3 + x3)*(-a1 + y1) + a2*b1*b2*c1*c2*(-a3 + x3)*(-a1 + y1) + a3*b1*b2*c1*c2*(-a3 + x3)*(-a1 + y1) + b3*c1*c2*(-a3 + x3)*(-a1 + y1) + a3*b3*c1*c2*(-a3 + x3)*(-a1 + y1) + b1*b3*c1*c2*(-a3 + x3)*(-a1 + y1) + a3*b1*b3*c1*c2*(-a3 + x3)*(-a1 + y1) + a2*b2*b3*c1*c2*(-a3 + x3)*(-a1 + y1) + a2*b1*b2*b3*c1*c2*(-a3 + x3)*(-a1 + y1) + c2*c3*(-a3 + x3)*(-a1 + y1) + a1*c2*c3*(-a3 + x3)*(-a1 + y1) + a2*c2*c3*(-a3 + x3)*(-a1 + y1) + c1*c2*c3*(-a3 + x3)*(-a1 + y1) + b2*c1*c2*c3*(-a3 + x3)*(-a1 + y1) + (a2*a3*(-a1 + y1)*(1 - a1 + y1))/2 + (a2*a3*b1*(-a1 + y1)*(1 - a1 + y1))/2 + (a2*a3*b2*(-a1 + y1)*(1 - a1 + y1))/2 + (a1*a2*b3*(-a1 + y1)*(1 - a1 + y1))/2 + (a2*a3*b3*(-a1 + y1)*(1 - a1 + y1))/2 + (a2*b1*b3*c1*(-a1 + y1)*(1 - a1 + y1))/2 + (a3*b2*c2*(-a1 + y1)*(1 - a1 + y1))/2 + (b3*c2*(-a1 + y1)*(1 - a1 + y1))/2 + (a2*b3*c2*(-a1 + y1)*(1 - a1 + y1))/2 + (a3*b3*c2*(-a1 + y1)*(1 - a1 + y1))/2 + (a1*b1*b3*c2*(-a1 + y1)*(1 - a1 + y1))/2 + (a3*b1*b3*c2*(-a1 + y1)*(1 - a1 + y1))/2 + (b2*b3*c2*(-a1 + y1)*(1 - a1 + y1))/2 + (a1*b2*b3*c2*(-a1 + y1)*(1 - a1 + y1))/2 + (a3*b2*b3*c2*(-a1 + y1)*(1 - a1 + y1))/2 + (b1*b3*c1*c2*(-a1 + y1)*(1 - a1 + y1))/2 + (b1*b2*b3*c1*c2*(-a1 + y1)*(1 - a1 + y1))/2 + (a2*b2*c3*(-a1 + y1)*(1 - a1 + y1))/2 + (a3*b2*c3*(-a1 + y1)*(1 - a1 + y1))/2 + (a2*b3*c3*(-a1 + y1)*(1 - a1 + y1))/2 + (c2*c3*(-a1 + y1)*(1 - a1 + y1))/2 + (b3*c2*c3*(-a1 + y1)*(1 - a1 + y1))/2 + (b2*b3*c2*c3*(-a1 + y1)*(1 - a1 + y1))/2 + a1*a3*b2*(-a2 + y2) + a1*a3*b1*b2*(-a2 + y2) + a1*a2*a3*b1*b2*(-a2 + y2) + a1*a2*a3*b3*(-a2 + y2) + b1*b3*(-a2 + y2) + a1*b1*b3*(-a2 + y2) + a2*b1*b3*(-a2 + y2) + a1*a2*b1*b3*(-a2 + y2) + a3*b1*b3*(-a2 + y2) + a1*a3*b1*b3*(-a2 + y2) + a2*a3*b1*b3*(-a2 + y2) + a1*a2*a3*b1*b3*(-a2 + y2) + a1*a3*b2*b3*(-a2 + y2) + a1*a3*b1*b2*b3*(-a2 + y2) + a2*a3*b1*b2*b3*(-a2 + y2) + a1*a2*a3*b1*b2*b3*(-a2 + y2) + a1*a3*c1*(-a2 + y2) + a2*a3*c1*(-a2 + y2) + a1*a3*b2*c1*(-a2 + y2) + a2*a3*b2*c1*(-a2 + y2) + a2*a3*b1*b2*c1*(-a2 + y2) + a2*b3*c1*(-a2 + y2) + a1*a3*b3*c1*(-a2 + y2) + a2*a3*b3*c1*(-a2 + y2) + a2*a3*b1*b3*c1*(-a2 + y2) + b2*b3*c1*(-a2 + y2) + a2*b2*b3*c1*(-a2 + y2) + a1*a2*b2*b3*c1*(-a2 + y2) + a1*a3*b2*b3*c1*(-a2 + y2) + a2*a3*b2*b3*c1*(-a2 + y2) + b1*b2*b3*c1*(-a2 + y2) + a2*b1*b2*b3*c1*(-a2 + y2) + a1*a3*c2*(-a2 + y2) + a1*a3*b1*c2*(-a2 + y2) + a1*a3*b2*c2*(-a2 + y2) + a3*b1*b2*c2*(-a2 + y2) + a1*a3*b1*b2*c2*(-a2 + y2) + a1*a2*b3*c2*(-a2 + y2) + a2*b1*b3*c2*(-a2 + y2) + a1*a2*b1*b3*c2*(-a2 + y2) + a1*a2*a3*b1*b3*c2*(-a2 + y2) + a1*a3*b2*b3*c2*(-a2 + y2) + b1*b2*b3*c2*(-a2 + y2) + a2*b1*b2*b3*c2*(-a2 + y2) + a3*b1*b2*b3*c2*(-a2 + y2) + a1*a3*b1*b2*b3*c2*(-a2 + y2) + a2*a3*b1*b2*b3*c2*(-a2 + y2) + a1*a2*a3*b1*b2*b3*c2*(-a2 + y2) + a2*a3*c1*c2*(-a2 + y2) + a3*b1*c1*c2*(-a2 + y2) + a3*b2*c1*c2*(-a2 + y2) + a3*b1*b2*c1*c2*(-a2 + y2) + b3*c1*c2*(-a2 + y2) + a1*b3*c1*c2*(-a2 + y2) + a2*b3*c1*c2*(-a2 + y2) + a3*b3*c1*c2*(-a2 + y2) + a1*b1*b3*c1*c2*(-a2 + y2) + a1*a2*b1*b3*c1*c2*(-a2 + y2) + a3*b1*b3*c1*c2*(-a2 + y2) + a1*a3*b1*b3*c1*c2*(-a2 + y2) + a2*a3*b1*b3*c1*c2*(-a2 + y2) + a2*b2*b3*c1*c2*(-a2 + y2) + b1*b2*b3*c1*c2*(-a2 + y2) + a2*b1*b2*b3*c1*c2*(-a2 + y2) + a1*a2*b1*b2*b3*c1*c2*(-a2 + y2) + a1*a3*b1*b2*b3*c1*c2*(-a2 + y2) + a2*a3*b1*b2*b3*c1*c2*(-a2 + y2) + a1*a2*c3*(-a2 + y2) + a1*a3*c3*(-a2 + y2) + a1*a2*b1*c3*(-a2 + y2) + a1*a3*b1*c3*(-a2 + y2) + a1*b2*c3*(-a2 + y2) + a1*a2*b2*c3*(-a2 + y2) + a1*a3*b2*c3*(-a2 + y2) + a1*b1*b2*c3*(-a2 + y2) + a2*b1*b2*c3*(-a2 + y2) + a1*a2*b1*b2*c3*(-a2 + y2) + a3*b1*b2*c3*(-a2 + y2) + a1*a3*b1*b2*c3*(-a2 + y2) + a1*a2*b3*c3*(-a2 + y2) + b1*b3*c3*(-a2 + y2) + a1*b1*b3*c3*(-a2 + y2) + a2*b1*b3*c3*(-a2 + y2) + a1*a2*b1*b3*c3*(-a2 + y2) + a2*c1*c3*(-a2 + y2) + a3*c1*c3*(-a2 + y2) + a1*b1*c1*c3*(-a2 + y2) + a2*b1*c1*c3*(-a2 + y2) + a3*b1*c1*c3*(-a2 + y2) + b2*c1*c3*(-a2 + y2) + a2*b2*c1*c3*(-a2 + y2) + a3*b2*c1*c3*(-a2 + y2) + a1*b1*b2*c1*c3*(-a2 + y2) + a2*b1*b2*c1*c3*(-a2 + y2) + a3*b1*b2*c1*c3*(-a2 + y2) + b3*c1*c3*(-a2 + y2) + a2*b3*c1*c3*(-a2 + y2) + b1*b3*c1*c3*(-a2 + y2) + a2*b1*b3*c1*c3*(-a2 + y2) + a1*c2*c3*(-a2 + y2) + b1*c2*c3*(-a2 + y2) + a1*b1*c2*c3*(-a2 + y2) + a1*b3*c2*c3*(-a2 + y2) + a1*b1*b3*c2*c3*(-a2 + y2) + a1*b2*b3*c2*c3*(-a2 + y2) + b1*b2*b3*c2*c3*(-a2 + y2) + a1*b1*b2*b3*c2*c3*(-a2 + y2) + c1*c2*c3*(-a2 + y2) + a3*c1*c2*c3*(-a2 + y2) + b1*c1*c2*c3*(-a2 + y2) + b2*c1*c2*c3*(-a2 + y2) + a3*b2*c1*c2*c3*(-a2 + y2) + b3*c1*c2*c3*(-a2 + y2) + a2*b3*c1*c2*c3*(-a2 + y2) + a3*b3*c1*c2*c3*(-a2 + y2) + a2*a3*(-a1 + x1)*(-a2 + y2) + a1*a3*b1*(-a1 + x1)*(-a2 + y2) + a2*a3*b1*(-a1 + x1)*(-a2 + y2) + a3*b2*(-a1 + x1)*(-a2 + y2) + a1*a3*b2*(-a1 + x1)*(-a2 + y2) + a2*a3*b2*(-a1 + x1)*(-a2 + y2) + a3*b1*b2*(-a1 + x1)*(-a2 + y2) + a1*a3*b1*b2*(-a1 + x1)*(-a2 + y2) + a2*a3*b1*b2*(-a1 + x1)*(-a2 + y2) + b3*(-a1 + x1)*(-a2 + y2) + a2*b3*(-a1 + x1)*(-a2 + y2) + a3*b3*(-a1 + x1)*(-a2 + y2) + a1*a3*b3*(-a1 + x1)*(-a2 + y2) + a2*a3*b3*(-a1 + x1)*(-a2 + y2) + b1*b3*(-a1 + x1)*(-a2 + y2) + a2*b1*b3*(-a1 + x1)*(-a2 + y2) + a1*a3*b1*b3*(-a1 + x1)*(-a2 + y2) + a3*b2*b3*(-a1 + x1)*(-a2 + y2) + a1*a3*b2*b3*(-a1 + x1)*(-a2 + y2) + a3*b2*c1*(-a1 + x1)*(-a2 + y2) + b3*c1*(-a1 + x1)*(-a2 + y2) + a2*b3*c1*(-a1 + x1)*(-a2 + y2) + a3*b3*c1*(-a1 + x1)*(-a2 + y2) + b1*b3*c1*(-a1 + x1)*(-a2 + y2) + a3*b2*b3*c1*(-a1 + x1)*(-a2 + y2) + a3*b1*b2*b3*c1*(-a1 + x1)*(-a2 + y2) + a3*c2*(-a1 + x1)*(-a2 + y2) + a3*b2*c2*(-a1 + x1)*(-a2 + y2) + b3*c2*(-a1 + x1)*(-a2 + y2) + a2*b3*c2*(-a1 + x1)*(-a2 + y2) + a3*b3*c2*(-a1 + x1)*(-a2 + y2) + a3*b1*b3*c2*(-a1 + x1)*(-a2 + y2) + a3*b2*b3*c2*(-a1 + x1)*(-a2 + y2) + b1*b2*b3*c2*(-a1 + x1)*(-a2 + y2) + a3*b1*b2*b3*c2*(-a1 + x1)*(-a2 + y2) + b3*c1*c2*(-a1 + x1)*(-a2 + y2) + b2*b3*c1*c2*(-a1 + x1)*(-a2 + y2) + a1*c3*(-a1 + x1)*(-a2 + y2) + a2*c3*(-a1 + x1)*(-a2 + y2) + a3*c3*(-a1 + x1)*(-a2 + y2) + a1*b2*c3*(-a1 + x1)*(-a2 + y2) + a2*b2*c3*(-a1 + x1)*(-a2 + y2) + a3*b2*c3*(-a1 + x1)*(-a2 + y2) + b3*c3*(-a1 + x1)*(-a2 + y2) + a2*b3*c3*(-a1 + x1)*(-a2 + y2) + a1*c1*c3*(-a1 + x1)*(-a2 + y2) + b3*c1*c3*(-a1 + x1)*(-a2 + y2) + b1*b3*c1*c3*(-a1 + x1)*(-a2 + y2) + c2*c3*(-a1 + x1)*(-a2 + y2) + b1*b3*c2*c3*(-a1 + x1)*(-a2 + y2) + b2*b3*c2*c3*(-a1 + x1)*(-a2 + y2) + a1*a2*b3*(-a2 + x2)*(-a2 + y2) + a1*b1*b3*c1*(-a2 + x2)*(-a2 + y2) + a1*b2*b3*c2*(-a2 + x2)*(-a2 + y2) + b1*b3*c1*c2*(-a2 + x2)*(-a2 + y2) + b1*b2*c1*c3*(-a2 + x2)*(-a2 + y2) + b1*b3*c1*c3*(-a2 + x2)*(-a2 + y2) + a1*(-a3 + x3)*(-a2 + y2) + a1*a3*(-a3 + x3)*(-a2 + y2) + b1*(-a3 + x3)*(-a2 + y2) + a1*b1*(-a3 + x3)*(-a2 + y2) + a2*b1*(-a3 + x3)*(-a2 + y2) + a3*b1*(-a3 + x3)*(-a2 + y2) + a1*a3*b1*(-a3 + x3)*(-a2 + y2) + a2*a3*b1*(-a3 + x3)*(-a2 + y2) + a1*b2*(-a3 + x3)*(-a2 + y2) + a1*a3*b2*(-a3 + x3)*(-a2 + y2) + b1*b2*(-a3 + x3)*(-a2 + y2) + a1*b1*b2*(-a3 + x3)*(-a2 + y2) + a2*b1*b2*(-a3 + x3)*(-a2 + y2) + a1*a2*b1*b2*(-a3 + x3)*(-a2 + y2) + a3*b1*b2*(-a3 + x3)*(-a2 + y2) + a1*a3*b1*b2*(-a3 + x3)*(-a2 + y2) + a2*a3*b1*b2*(-a3 + x3)*(-a2 + y2) + a1*a2*a3*b1*b2*(-a3 + x3)*(-a2 + y2) + a1*b3*(-a3 + x3)*(-a2 + y2) + a1*a2*b3*(-a3 + x3)*(-a2 + y2) + a1*a3*b3*(-a3 + x3)*(-a2 + y2) + a3*b1*b3*(-a3 + x3)*(-a2 + y2) + a1*a3*b1*b3*(-a3 + x3)*(-a2 + y2) + a2*a3*b1*b3*(-a3 + x3)*(-a2 + y2) + a1*a2*a3*b1*b3*(-a3 + x3)*(-a2 + y2) + a1*b2*b3*(-a3 + x3)*(-a2 + y2) + c1*(-a3 + x3)*(-a2 + y2) + a1*c1*(-a3 + x3)*(-a2 + y2) + a2*c1*(-a3 + x3)*(-a2 + y2) + a3*c1*(-a3 + x3)*(-a2 + y2) + b1*c1*(-a3 + x3)*(-a2 + y2) + a1*b1*c1*(-a3 + x3)*(-a2 + y2) + a2*b1*c1*(-a3 + x3)*(-a2 + y2) + a3*b1*c1*(-a3 + x3)*(-a2 + y2) + b2*c1*(-a3 + x3)*(-a2 + y2) + a1*b2*c1*(-a3 + x3)*(-a2 + y2) + a2*b2*c1*(-a3 + x3)*(-a2 + y2) + a3*b2*c1*(-a3 + x3)*(-a2 + y2) + b1*b2*c1*(-a3 + x3)*(-a2 + y2) + a1*b1*b2*c1*(-a3 + x3)*(-a2 + y2) + a2*b1*b2*c1*(-a3 + x3)*(-a2 + y2) + a1*a2*b1*b2*c1*(-a3 + x3)*(-a2 + y2) + a1*a3*b1*b2*c1*(-a3 + x3)*(-a2 + y2) + a2*a3*b1*b2*c1*(-a3 + x3)*(-a2 + y2) + b3*c1*(-a3 + x3)*(-a2 + y2) + a3*b3*c1*(-a3 + x3)*(-a2 + y2) + a2*b1*b3*c1*(-a3 + x3)*(-a2 + y2) + a3*b1*b3*c1*(-a3 + x3)*(-a2 + y2) + a2*a3*b1*b3*c1*(-a3 + x3)*(-a2 + y2) + a1*b2*b3*c1*(-a3 + x3)*(-a2 + y2) + a2*b2*b3*c1*(-a3 + x3)*(-a2 + y2) + a3*b2*b3*c1*(-a3 + x3)*(-a2 + y2) + b1*b2*b3*c1*(-a3 + x3)*(-a2 + y2) + a1*b1*b2*b3*c1*(-a3 + x3)*(-a2 + y2) + a1*a2*b1*b2*b3*c1*(-a3 + x3)*(-a2 + y2) + a1*a3*b1*b2*b3*c1*(-a3 + x3)*(-a2 + y2) + a1*c2*(-a3 + x3)*(-a2 + y2) + b1*c2*(-a3 + x3)*(-a2 + y2) + a1*b1*c2*(-a3 + x3)*(-a2 + y2) + a2*b1*c2*(-a3 + x3)*(-a2 + y2) + a3*b1*c2*(-a3 + x3)*(-a2 + y2) + a1*b2*c2*(-a3 + x3)*(-a2 + y2) + b1*b2*c2*(-a3 + x3)*(-a2 + y2) + a1*b1*b2*c2*(-a3 + x3)*(-a2 + y2) + a2*b1*b2*c2*(-a3 + x3)*(-a2 + y2) + a1*a2*b1*b2*c2*(-a3 + x3)*(-a2 + y2) + a3*b1*b2*c2*(-a3 + x3)*(-a2 + y2) + a1*a3*b1*b2*c2*(-a3 + x3)*(-a2 + y2) + a1*b1*b3*c2*(-a3 + x3)*(-a2 + y2) + a2*b1*b3*c2*(-a3 + x3)*(-a2 + y2) + a3*b1*b3*c2*(-a3 + x3)*(-a2 + y2) + a1*a3*b1*b3*c2*(-a3 + x3)*(-a2 + y2) + a1*b2*b3*c2*(-a3 + x3)*(-a2 + y2) + a2*b1*b2*b3*c2*(-a3 + x3)*(-a2 + y2) + a1*a2*b1*b2*b3*c2*(-a3 + x3)*(-a2 + y2) + c1*c2*(-a3 + x3)*(-a2 + y2) + a2*c1*c2*(-a3 + x3)*(-a2 + y2) + b2*c1*c2*(-a3 + x3)*(-a2 + y2) + a2*b1*b2*c1*c2*(-a3 + x3)*(-a2 + y2) + a3*b1*b2*c1*c2*(-a3 + x3)*(-a2 + y2) + b1*b3*c1*c2*(-a3 + x3)*(-a2 + y2) + a3*b1*b3*c1*c2*(-a3 + x3)*(-a2 + y2) + b2*b3*c1*c2*(-a3 + x3)*(-a2 + y2) + a2*b1*b2*b3*c1*c2*(-a3 + x3)*(-a2 + y2) + b3*c1*c3*(-a3 + x3)*(-a2 + y2) + b1*b3*c1*c3*(-a3 + x3)*(-a2 + y2) + b2*b3*c1*c3*(-a3 + x3)*(-a2 + y2) + b1*b2*b3*c1*c3*(-a3 + x3)*(-a2 + y2) + b2*c1*c2*c3*(-a3 + x3)*(-a2 + y2) + a3*(-a1 + y1)*(-a2 + y2) + a2*a3*(-a1 + y1)*(-a2 + y2) + a1*a3*b1*(-a1 + y1)*(-a2 + y2) + a2*a3*b1*(-a1 + y1)*(-a2 + y2) + a1*a3*b2*(-a1 + y1)*(-a2 + y2) + a2*a3*b2*(-a1 + y1)*(-a2 + y2) + a1*a3*b1*b2*(-a1 + y1)*(-a2 + y2) + a2*a3*b1*b2*(-a1 + y1)*(-a2 + y2) + b3*(-a1 + y1)*(-a2 + y2) + a1*a3*b3*(-a1 + y1)*(-a2 + y2) + a2*a3*b3*(-a1 + y1)*(-a2 + y2) + a1*b1*b3*(-a1 + y1)*(-a2 + y2) + a3*b1*b3*(-a1 + y1)*(-a2 + y2) + a1*a3*b1*b3*(-a1 + y1)*(-a2 + y2) + a1*a3*b2*b3*(-a1 + y1)*(-a2 + y2) + a3*b2*c1*(-a1 + y1)*(-a2 + y2) + b3*c1*(-a1 + y1)*(-a2 + y2) + a2*b3*c1*(-a1 + y1)*(-a2 + y2) + a3*b3*c1*(-a1 + y1)*(-a2 + y2) + a3*b2*b3*c1*(-a1 + y1)*(-a2 + y2) + a3*b1*b2*b3*c1*(-a1 + y1)*(-a2 + y2) + a3*c2*(-a1 + y1)*(-a2 + y2) + a3*b2*c2*(-a1 + y1)*(-a2 + y2) + a2*b3*c2*(-a1 + y1)*(-a2 + y2) + a3*b3*c2*(-a1 + y1)*(-a2 + y2) + b1*b3*c2*(-a1 + y1)*(-a2 + y2) + a3*b1*b3*c2*(-a1 + y1)*(-a2 + y2) + b2*b3*c2*(-a1 + y1)*(-a2 + y2) + a3*b2*b3*c2*(-a1 + y1)*(-a2 + y2) + a3*b1*b2*b3*c2*(-a1 + y1)*(-a2 + y2) + b3*c1*c2*(-a1 + y1)*(-a2 + y2) + b2*b3*c1*c2*(-a1 + y1)*(-a2 + y2) + c3*(-a1 + y1)*(-a2 + y2) + a1*c3*(-a1 + y1)*(-a2 + y2) + a2*c3*(-a1 + y1)*(-a2 + y2) + a3*c3*(-a1 + y1)*(-a2 + y2) + b2*c3*(-a1 + y1)*(-a2 + y2) + a1*b2*c3*(-a1 + y1)*(-a2 + y2) + a2*b2*c3*(-a1 + y1)*(-a2 + y2) + a3*b2*c3*(-a1 + y1)*(-a2 + y2) + b3*c3*(-a1 + y1)*(-a2 + y2) + a2*b3*c3*(-a1 + y1)*(-a2 + y2) + c1*c3*(-a1 + y1)*(-a2 + y2) + a1*c1*c3*(-a1 + y1)*(-a2 + y2) + b3*c1*c3*(-a1 + y1)*(-a2 + y2) + b1*b3*c1*c3*(-a1 + y1)*(-a2 + y2) + c2*c3*(-a1 + y1)*(-a2 + y2) + b1*b3*c2*c3*(-a1 + y1)*(-a2 + y2) + b2*b3*c2*c3*(-a1 + y1)*(-a2 + y2) + (a1*a3*b1*b2*(-a2 + y2)*(1 - a2 + y2))/2 + (a1*a2*b3*(-a2 + y2)*(1 - a2 + y2))/2 + (a1*a2*b1*b3*(-a2 + y2)*(1 - a2 + y2))/2 + (a1*a3*b1*b3*(-a2 + y2)*(1 - a2 + y2))/2 + (a3*b1*b2*c1*(-a2 + y2)*(1 - a2 + y2))/2 + (a1*b1*b3*c1*(-a2 + y2)*(1 - a2 + y2))/2 + (a2*b1*b3*c1*(-a2 + y2)*(1 - a2 + y2))/2 + (a3*b1*b3*c1*(-a2 + y2)*(1 - a2 + y2))/2 + (a1*b1*b3*c2*(-a2 + y2)*(1 - a2 + y2))/2 + (a1*b2*b3*c2*(-a2 + y2)*(1 - a2 + y2))/2 + (a1*b1*b2*b3*c2*(-a2 + y2)*(1 - a2 + y2))/2 + (b1*b2*b3*c1*c2*(-a2 + y2)*(1 - a2 + y2))/2 + (c1*c3*(-a2 + y2)*(1 - a2 + y2))/2 + (b1*b2*c1*c3*(-a2 + y2)*(1 - a2 + y2))/2 + (b1*b3*c1*c3*(-a2 + y2)*(1 - a2 + y2))/2 + a1*a2*a3*(-a3 + y3) + a2*a3*b1*(-a3 + y3) + a1*b2*(-a3 + y3) + a1*a2*b2*(-a3 + y3) + a1*a3*b2*(-a3 + y3) + a1*a2*a3*b2*(-a3 + y3) + b1*b2*(-a3 + y3) + a2*b1*b2*(-a3 + y3) + a3*b1*b2*(-a3 + y3) + a1*a3*b1*b2*(-a3 + y3) + a2*a3*b1*b2*(-a3 + y3) + a1*a2*a3*b1*b2*(-a3 + y3) + a1*a2*b3*(-a3 + y3) + a2*a3*b1*b3*(-a3 + y3) + a1*b2*b3*(-a3 + y3) + a1*a2*a3*b2*b3*(-a3 + y3) + b1*b2*b3*(-a3 + y3) + a1*b1*b2*b3*(-a3 + y3) + a2*b1*b2*b3*(-a3 + y3) + a3*b1*b2*b3*(-a3 + y3) + a1*a3*b1*b2*b3*(-a3 + y3) + a2*a3*b1*b2*b3*(-a3 + y3) + a2*b1*c1*(-a3 + y3) + a1*a2*b1*c1*(-a3 + y3) + a2*b1*b3*c1*(-a3 + y3) + a1*a2*a3*b1*b3*c1*(-a3 + y3) + b2*b3*c1*(-a3 + y3) + a1*b2*b3*c1*(-a3 + y3) + a2*b2*b3*c1*(-a3 + y3) + a3*b2*b3*c1*(-a3 + y3) + a1*a3*b2*b3*c1*(-a3 + y3) + a2*a3*b2*b3*c1*(-a3 + y3) + b1*b2*b3*c1*(-a3 + y3) + a1*a2*b1*b2*b3*c1*(-a3 + y3) + a3*b1*b2*b3*c1*(-a3 + y3) + a1*a2*a3*b1*b2*b3*c1*(-a3 + y3) + a1*a2*c2*(-a3 + y3) + a1*a2*b1*c2*(-a3 + y3) + a1*a3*b1*c2*(-a3 + y3) + a1*b2*c2*(-a3 + y3) + a1*a2*b2*c2*(-a3 + y3) + a1*b1*b2*c2*(-a3 + y3) + a2*b1*b2*c2*(-a3 + y3) + a1*a2*b1*b2*c2*(-a3 + y3) + a1*a2*a3*b1*b2*c2*(-a3 + y3) + a1*b3*c2*(-a3 + y3) + a1*a3*b3*c2*(-a3 + y3) + b1*b3*c2*(-a3 + y3) + a2*b1*b3*c2*(-a3 + y3) + a1*a2*b1*b3*c2*(-a3 + y3) + a3*b1*b3*c2*(-a3 + y3) + a1*a3*b1*b3*c2*(-a3 + y3) + a1*a2*a3*b1*b3*c2*(-a3 + y3) + a1*b2*b3*c2*(-a3 + y3) + a1*a2*b2*b3*c2*(-a3 + y3) + a1*a3*b2*b3*c2*(-a3 + y3) + c1*c2*(-a3 + y3) + a1*c1*c2*(-a3 + y3) + a2*c1*c2*(-a3 + y3) + a1*a2*c1*c2*(-a3 + y3) + a3*c1*c2*(-a3 + y3) + a1*b1*c1*c2*(-a3 + y3) + a3*b1*c1*c2*(-a3 + y3) + b2*c1*c2*(-a3 + y3) + a1*b2*c1*c2*(-a3 + y3) + a2*b2*c1*c2*(-a3 + y3) + a3*b2*c1*c2*(-a3 + y3) + a1*b1*b2*c1*c2*(-a3 + y3) + a1*a2*b1*b2*c1*c2*(-a3 + y3) + a1*a3*b1*b2*c1*c2*(-a3 + y3) + a2*a3*b1*b2*c1*c2*(-a3 + y3) + a1*b3*c1*c2*(-a3 + y3) + a2*b3*c1*c2*(-a3 + y3) + a3*b3*c1*c2*(-a3 + y3) + b1*b3*c1*c2*(-a3 + y3) + b2*b3*c1*c2*(-a3 + y3) + a3*b2*b3*c1*c2*(-a3 + y3) + b1*b2*b3*c1*c2*(-a3 + y3) + a2*b1*b2*b3*c1*c2*(-a3 + y3) + a1*a2*b1*b2*b3*c1*c2*(-a3 + y3) + a1*a3*b1*b2*b3*c1*c2*(-a3 + y3) + a2*a3*b1*b2*b3*c1*c2*(-a3 + y3) + a2*b1*c3*(-a3 + y3) + a1*a2*b1*c3*(-a3 + y3) + a2*a3*b1*c3*(-a3 + y3) + a1*b2*c3*(-a3 + y3) + a1*b1*b2*c3*(-a3 + y3) + a1*a2*b1*b2*c3*(-a3 + y3) + a3*b1*b2*c3*(-a3 + y3) + a2*a3*b1*b2*c3*(-a3 + y3) + a1*a2*b3*c3*(-a3 + y3) + a1*b2*b3*c3*(-a3 + y3) + a1*a2*b2*b3*c3*(-a3 + y3) + a2*b1*c1*c3*(-a3 + y3) + a2*b1*b2*c1*c3*(-a3 + y3) + a2*b1*b3*c1*c3*(-a3 + y3) + b1*b2*b3*c1*c3*(-a3 + y3) + a2*b1*b2*b3*c1*c3*(-a3 + y3) + a1*c2*c3*(-a3 + y3) + a1*a2*c2*c3*(-a3 + y3) + a2*b1*c2*c3*(-a3 + y3) + a3*b1*c2*c3*(-a3 + y3) + a1*b2*c2*c3*(-a3 + y3) + a1*b1*b2*c2*c3*(-a3 + y3) + a2*b1*b2*c2*c3*(-a3 + y3) + a3*b1*b2*c2*c3*(-a3 + y3) + a1*b3*c2*c3*(-a3 + y3) + a2*b1*b3*c2*c3*(-a3 + y3) + a1*b2*b3*c2*c3*(-a3 + y3) + a2*b1*b2*b3*c2*c3*(-a3 + y3) + a1*c1*c2*c3*(-a3 + y3) + a2*c1*c2*c3*(-a3 + y3) + a3*c1*c2*c3*(-a3 + y3) + b1*c1*c2*c3*(-a3 + y3) + b2*c1*c2*c3*(-a3 + y3) + a1*b2*c1*c2*c3*(-a3 + y3) + a2*b2*c1*c2*c3*(-a3 + y3) + b1*b2*c1*c2*c3*(-a3 + y3) + b3*c1*c2*c3*(-a3 + y3) + a3*b3*c1*c2*c3*(-a3 + y3) + b1*b3*c1*c2*c3*(-a3 + y3) + b1*b2*b3*c1*c2*c3*(-a3 + y3) + a2*(-a1 + x1)*(-a3 + y3) + a1*a2*(-a1 + x1)*(-a3 + y3) + a2*b1*(-a1 + x1)*(-a3 + y3) + a2*a3*b1*(-a1 + x1)*(-a3 + y3) + b2*(-a1 + x1)*(-a3 + y3) + a1*b2*(-a1 + x1)*(-a3 + y3) + a1*a2*b2*(-a1 + x1)*(-a3 + y3) + a3*b2*(-a1 + x1)*(-a3 + y3) + a1*a3*b2*(-a1 + x1)*(-a3 + y3) + a1*a2*a3*b2*(-a1 + x1)*(-a3 + y3) + b1*b2*(-a1 + x1)*(-a3 + y3) + a2*b1*b2*(-a1 + x1)*(-a3 + y3) + a3*b1*b2*(-a1 + x1)*(-a3 + y3) + a1*a3*b1*b2*(-a1 + x1)*(-a3 + y3) + a2*a3*b1*b2*(-a1 + x1)*(-a3 + y3) + a1*a2*a3*b1*b2*(-a1 + x1)*(-a3 + y3) + a2*b3*(-a1 + x1)*(-a3 + y3) + a1*a2*a3*b3*(-a1 + x1)*(-a3 + y3) + a2*b1*b3*(-a1 + x1)*(-a3 + y3) + a1*a2*b1*b3*(-a1 + x1)*(-a3 + y3) + a2*a3*b1*b3*(-a1 + x1)*(-a3 + y3) + a1*a2*a3*b1*b3*(-a1 + x1)*(-a3 + y3) + b2*b3*(-a1 + x1)*(-a3 + y3) + a1*a2*b2*b3*(-a1 + x1)*(-a3 + y3) + a3*b2*b3*(-a1 + x1)*(-a3 + y3) + a1*a3*b2*b3*(-a1 + x1)*(-a3 + y3) + a2*c1*(-a1 + x1)*(-a3 + y3) + a2*b1*c1*(-a1 + x1)*(-a3 + y3) + b2*c1*(-a1 + x1)*(-a3 + y3) + a2*b2*c1*(-a1 + x1)*(-a3 + y3) + a3*b2*c1*(-a1 + x1)*(-a3 + y3) + a2*a3*b2*c1*(-a1 + x1)*(-a3 + y3) + b1*b2*c1*(-a1 + x1)*(-a3 + y3) + a2*b1*b2*c1*(-a1 + x1)*(-a3 + y3) + a3*b1*b2*c1*(-a1 + x1)*(-a3 + y3) + a2*a3*b1*b2*c1*(-a1 + x1)*(-a3 + y3) + a2*a3*b3*c1*(-a1 + x1)*(-a3 + y3) + a2*a3*b1*b3*c1*(-a1 + x1)*(-a3 + y3) + a2*b2*b3*c1*(-a1 + x1)*(-a3 + y3) + a3*b2*b3*c1*(-a1 + x1)*(-a3 + y3) + a2*b1*b2*b3*c1*(-a1 + x1)*(-a3 + y3) + a3*b1*b2*b3*c1*(-a1 + x1)*(-a3 + y3) + c2*(-a1 + x1)*(-a3 + y3) + a1*c2*(-a1 + x1)*(-a3 + y3) + a2*b1*c2*(-a1 + x1)*(-a3 + y3) + a3*b1*c2*(-a1 + x1)*(-a3 + y3) + b2*c2*(-a1 + x1)*(-a3 + y3) + a1*b2*c2*(-a1 + x1)*(-a3 + y3) + a1*a2*b2*c2*(-a1 + x1)*(-a3 + y3) + a1*a3*b2*c2*(-a1 + x1)*(-a3 + y3) + b1*b2*c2*(-a1 + x1)*(-a3 + y3) + a2*b1*b2*c2*(-a1 + x1)*(-a3 + y3) + a1*a2*b1*b2*c2*(-a1 + x1)*(-a3 + y3) + a3*b1*b2*c2*(-a1 + x1)*(-a3 + y3) + a1*a3*b1*b2*c2*(-a1 + x1)*(-a3 + y3) + b3*c2*(-a1 + x1)*(-a3 + y3) + a1*a3*b3*c2*(-a1 + x1)*(-a3 + y3) + a1*b1*b3*c2*(-a1 + x1)*(-a3 + y3) + a2*b1*b3*c2*(-a1 + x1)*(-a3 + y3) + a3*b1*b3*c2*(-a1 + x1)*(-a3 + y3) + a1*a3*b1*b3*c2*(-a1 + x1)*(-a3 + y3) + b2*b3*c2*(-a1 + x1)*(-a3 + y3) + a1*b2*b3*c2*(-a1 + x1)*(-a3 + y3) + a1*a2*b2*b3*c2*(-a1 + x1)*(-a3 + y3) + a2*b1*b2*b3*c2*(-a1 + x1)*(-a3 + y3) + a1*a2*b1*b2*b3*c2*(-a1 + x1)*(-a3 + y3) + c1*c2*(-a1 + x1)*(-a3 + y3) + a1*c1*c2*(-a1 + x1)*(-a3 + y3) + a2*c1*c2*(-a1 + x1)*(-a3 + y3) + b1*c1*c2*(-a1 + x1)*(-a3 + y3) + a2*b2*c1*c2*(-a1 + x1)*(-a3 + y3) + a3*b2*c1*c2*(-a1 + x1)*(-a3 + y3) + b1*b2*c1*c2*(-a1 + x1)*(-a3 + y3) + a2*b1*b2*c1*c2*(-a1 + x1)*(-a3 + y3) + a3*b1*b2*c1*c2*(-a1 + x1)*(-a3 + y3) + a3*b3*c1*c2*(-a1 + x1)*(-a3 + y3) + a3*b1*b3*c1*c2*(-a1 + x1)*(-a3 + y3) + b2*b3*c1*c2*(-a1 + x1)*(-a3 + y3) + a2*b2*b3*c1*c2*(-a1 + x1)*(-a3 + y3) + b1*b2*b3*c1*c2*(-a1 + x1)*(-a3 + y3) + a2*b1*b2*b3*c1*c2*(-a1 + x1)*(-a3 + y3) + c2*c3*(-a1 + x1)*(-a3 + y3) + a1*c2*c3*(-a1 + x1)*(-a3 + y3) + a2*c2*c3*(-a1 + x1)*(-a3 + y3) + c1*c2*c3*(-a1 + x1)*(-a3 + y3) + b2*c1*c2*c3*(-a1 + x1)*(-a3 + y3) + a1*a3*(-a2 + x2)*(-a3 + y3) + a1*a3*b1*(-a2 + x2)*(-a3 + y3) + a2*a3*b1*(-a2 + x2)*(-a3 + y3) + a1*a3*b2*(-a2 + x2)*(-a3 + y3) + a1*a3*b1*b2*(-a2 + x2)*(-a3 + y3) + a1*a2*a3*b1*b2*(-a2 + x2)*(-a3 + y3) + a1*a2*b3*(-a2 + x2)*(-a3 + y3) + a1*a2*b1*b3*(-a2 + x2)*(-a3 + y3) + a1*a2*a3*b1*b3*(-a2 + x2)*(-a3 + y3) + c1*(-a2 + x2)*(-a3 + y3) + a1*c1*(-a2 + x2)*(-a3 + y3) + a2*c1*(-a2 + x2)*(-a3 + y3) + a3*c1*(-a2 + x2)*(-a3 + y3) + b1*c1*(-a2 + x2)*(-a3 + y3) + a1*b1*c1*(-a2 + x2)*(-a3 + y3) + a2*b1*c1*(-a2 + x2)*(-a3 + y3) + a3*b1*c1*(-a2 + x2)*(-a3 + y3) + b2*c1*(-a2 + x2)*(-a3 + y3) + a1*b2*c1*(-a2 + x2)*(-a3 + y3) + a2*b2*c1*(-a2 + x2)*(-a3 + y3) + a3*b2*c1*(-a2 + x2)*(-a3 + y3) + b1*b2*c1*(-a2 + x2)*(-a3 + y3) + a2*b1*b2*c1*(-a2 + x2)*(-a3 + y3) + a1*a2*b1*b2*c1*(-a2 + x2)*(-a3 + y3) + a3*b1*b2*c1*(-a2 + x2)*(-a3 + y3) + a1*a3*b1*b2*c1*(-a2 + x2)*(-a3 + y3) + a2*a3*b1*b2*c1*(-a2 + x2)*(-a3 + y3) + b3*c1*(-a2 + x2)*(-a3 + y3) + b1*b3*c1*(-a2 + x2)*(-a3 + y3) + a2*a3*b1*b3*c1*(-a2 + x2)*(-a3 + y3) + a1*b2*b3*c1*(-a2 + x2)*(-a3 + y3) + a2*b2*b3*c1*(-a2 + x2)*(-a3 + y3) + a3*b2*b3*c1*(-a2 + x2)*(-a3 + y3) + a2*b1*b2*b3*c1*(-a2 + x2)*(-a3 + y3) + a1*a2*b1*b2*b3*c1*(-a2 + x2)*(-a3 + y3) + a3*b1*b2*b3*c1*(-a2 + x2)*(-a3 + y3) + a1*a3*b1*b2*b3*c1*(-a2 + x2)*(-a3 + y3) + a1*c2*(-a2 + x2)*(-a3 + y3) + b1*c2*(-a2 + x2)*(-a3 + y3) + a1*b1*c2*(-a2 + x2)*(-a3 + y3) + a2*b1*c2*(-a2 + x2)*(-a3 + y3) + a3*b1*c2*(-a2 + x2)*(-a3 + y3) + a1*b2*c2*(-a2 + x2)*(-a3 + y3) + a1*a2*b1*b2*c2*(-a2 + x2)*(-a3 + y3) + a1*a3*b1*b2*c2*(-a2 + x2)*(-a3 + y3) + b1*b3*c2*(-a2 + x2)*(-a3 + y3) + a2*b1*b3*c2*(-a2 + x2)*(-a3 + y3) + a1*a3*b1*b3*c2*(-a2 + x2)*(-a3 + y3) + a1*b2*b3*c2*(-a2 + x2)*(-a3 + y3) + a1*a2*b1*b2*b3*c2*(-a2 + x2)*(-a3 + y3) + c1*c2*(-a2 + x2)*(-a3 + y3) + a2*c1*c2*(-a2 + x2)*(-a3 + y3) + b2*c1*c2*(-a2 + x2)*(-a3 + y3) + b1*b2*c1*c2*(-a2 + x2)*(-a3 + y3) + a2*b1*b2*c1*c2*(-a2 + x2)*(-a3 + y3) + a3*b1*b2*c1*c2*(-a2 + x2)*(-a3 + y3) + a3*b1*b3*c1*c2*(-a2 + x2)*(-a3 + y3) + b2*b3*c1*c2*(-a2 + x2)*(-a3 + y3) + a2*b1*b2*b3*c1*c2*(-a2 + x2)*(-a3 + y3) + b3*c1*c3*(-a2 + x2)*(-a3 + y3) + b1*b3*c1*c3*(-a2 + x2)*(-a3 + y3) + b2*b3*c1*c3*(-a2 + x2)*(-a3 + y3) + b1*b2*b3*c1*c3*(-a2 + x2)*(-a3 + y3) + b2*c1*c2*c3*(-a2 + x2)*(-a3 + y3) + a1*a2*b3*(-a3 + x3)*(-a3 + y3) + a2*b1*b3*c1*(-a3 + x3)*(-a3 + y3) + a1*b1*b3*c2*(-a3 + x3)*(-a3 + y3) + a2*b1*b3*c2*(-a3 + x3)*(-a3 + y3) + a1*b2*b3*c2*(-a3 + x3)*(-a3 + y3) + b1*b3*c1*c2*(-a3 + x3)*(-a3 + y3) + b1*b2*b3*c1*c2*(-a3 + x3)*(-a3 + y3) + b1*b3*c2*c3*(-a3 + x3)*(-a3 + y3) + a1*a2*(-a1 + y1)*(-a3 + y3) + a2*b1*(-a1 + y1)*(-a3 + y3) + a2*a3*b1*(-a1 + y1)*(-a3 + y3) + a1*b2*(-a1 + y1)*(-a3 + y3) + a2*b2*(-a1 + y1)*(-a3 + y3) + a1*a2*b2*(-a1 + y1)*(-a3 + y3) + a3*b2*(-a1 + y1)*(-a3 + y3) + a1*a3*b2*(-a1 + y1)*(-a3 + y3) + a1*a2*a3*b2*(-a1 + y1)*(-a3 + y3) + b1*b2*(-a1 + y1)*(-a3 + y3) + a2*b1*b2*(-a1 + y1)*(-a3 + y3) + a1*a3*b1*b2*(-a1 + y1)*(-a3 + y3) + a1*a2*a3*b1*b2*(-a1 + y1)*(-a3 + y3) + a1*a2*a3*b3*(-a1 + y1)*(-a3 + y3) + a1*a2*b1*b3*(-a1 + y1)*(-a3 + y3) + a1*a2*a3*b1*b3*(-a1 + y1)*(-a3 + y3) + b2*b3*(-a1 + y1)*(-a3 + y3) + a2*b2*b3*(-a1 + y1)*(-a3 + y3) + a1*a2*b2*b3*(-a1 + y1)*(-a3 + y3) + a1*a3*b2*b3*(-a1 + y1)*(-a3 + y3) + a2*c1*(-a1 + y1)*(-a3 + y3) + a2*b1*c1*(-a1 + y1)*(-a3 + y3) + b2*c1*(-a1 + y1)*(-a3 + y3) + a2*b2*c1*(-a1 + y1)*(-a3 + y3) + a3*b2*c1*(-a1 + y1)*(-a3 + y3) + a2*a3*b2*c1*(-a1 + y1)*(-a3 + y3) + b1*b2*c1*(-a1 + y1)*(-a3 + y3) + a2*b1*b2*c1*(-a1 + y1)*(-a3 + y3) + a3*b1*b2*c1*(-a1 + y1)*(-a3 + y3) + a2*a3*b1*b2*c1*(-a1 + y1)*(-a3 + y3) + a2*a3*b3*c1*(-a1 + y1)*(-a3 + y3) + a2*a3*b1*b3*c1*(-a1 + y1)*(-a3 + y3) + a2*b2*b3*c1*(-a1 + y1)*(-a3 + y3) + a3*b2*b3*c1*(-a1 + y1)*(-a3 + y3) + a2*b1*b2*b3*c1*(-a1 + y1)*(-a3 + y3) + a3*b1*b2*b3*c1*(-a1 + y1)*(-a3 + y3) + a1*c2*(-a1 + y1)*(-a3 + y3) + a2*b1*c2*(-a1 + y1)*(-a3 + y3) + a3*b1*c2*(-a1 + y1)*(-a3 + y3) + a1*b2*c2*(-a1 + y1)*(-a3 + y3) + a1*a2*b2*c2*(-a1 + y1)*(-a3 + y3) + a1*a3*b2*c2*(-a1 + y1)*(-a3 + y3) + b1*b2*c2*(-a1 + y1)*(-a3 + y3) + a1*a2*b1*b2*c2*(-a1 + y1)*(-a3 + y3) + a1*a3*b1*b2*c2*(-a1 + y1)*(-a3 + y3) + a1*a3*b3*c2*(-a1 + y1)*(-a3 + y3) + b1*b3*c2*(-a1 + y1)*(-a3 + y3) + a1*b1*b3*c2*(-a1 + y1)*(-a3 + y3) + a2*b1*b3*c2*(-a1 + y1)*(-a3 + y3) + a1*a3*b1*b3*c2*(-a1 + y1)*(-a3 + y3) + a1*b2*b3*c2*(-a1 + y1)*(-a3 + y3) + a1*a2*b2*b3*c2*(-a1 + y1)*(-a3 + y3) + a1*a2*b1*b2*b3*c2*(-a1 + y1)*(-a3 + y3) + a1*c1*c2*(-a1 + y1)*(-a3 + y3) + a2*c1*c2*(-a1 + y1)*(-a3 + y3) + b1*c1*c2*(-a1 + y1)*(-a3 + y3) + a2*b2*c1*c2*(-a1 + y1)*(-a3 + y3) + a3*b2*c1*c2*(-a1 + y1)*(-a3 + y3) + b1*b2*c1*c2*(-a1 + y1)*(-a3 + y3) + a2*b1*b2*c1*c2*(-a1 + y1)*(-a3 + y3) + a3*b1*b2*c1*c2*(-a1 + y1)*(-a3 + y3) + a3*b3*c1*c2*(-a1 + y1)*(-a3 + y3) + a3*b1*b3*c1*c2*(-a1 + y1)*(-a3 + y3) + b2*b3*c1*c2*(-a1 + y1)*(-a3 + y3) + a2*b2*b3*c1*c2*(-a1 + y1)*(-a3 + y3) + b1*b2*b3*c1*c2*(-a1 + y1)*(-a3 + y3) + a2*b1*b2*b3*c1*c2*(-a1 + y1)*(-a3 + y3) + a1*c2*c3*(-a1 + y1)*(-a3 + y3) + a2*c2*c3*(-a1 + y1)*(-a3 + y3) + c1*c2*c3*(-a1 + y1)*(-a3 + y3) + b2*c1*c2*c3*(-a1 + y1)*(-a3 + y3) + a1*a3*(-a2 + y2)*(-a3 + y3) + a1*a3*b1*(-a2 + y2)*(-a3 + y3) + a2*a3*b1*(-a2 + y2)*(-a3 + y3) + a1*a3*b2*(-a2 + y2)*(-a3 + y3) + a2*a3*b1*b2*(-a2 + y2)*(-a3 + y3) + a1*a2*a3*b1*b2*(-a2 + y2)*(-a3 + y3) + a1*a2*b3*(-a2 + y2)*(-a3 + y3) + b1*b3*(-a2 + y2)*(-a3 + y3) + a1*b1*b3*(-a2 + y2)*(-a3 + y3) + a2*b1*b3*(-a2 + y2)*(-a3 + y3) + a1*a2*b1*b3*(-a2 + y2)*(-a3 + y3) + a3*b1*b3*(-a2 + y2)*(-a3 + y3) + a1*a3*b1*b3*(-a2 + y2)*(-a3 + y3) + a2*a3*b1*b3*(-a2 + y2)*(-a3 + y3) + a1*a2*a3*b1*b3*(-a2 + y2)*(-a3 + y3) + a1*b2*b3*(-a2 + y2)*(-a3 + y3) + c1*(-a2 + y2)*(-a3 + y3) + a1*c1*(-a2 + y2)*(-a3 + y3) + a2*c1*(-a2 + y2)*(-a3 + y3) + a3*c1*(-a2 + y2)*(-a3 + y3) + b1*c1*(-a2 + y2)*(-a3 + y3) + a1*b1*c1*(-a2 + y2)*(-a3 + y3) + a2*b1*c1*(-a2 + y2)*(-a3 + y3) + a3*b1*c1*(-a2 + y2)*(-a3 + y3) + b2*c1*(-a2 + y2)*(-a3 + y3) + a1*b2*c1*(-a2 + y2)*(-a3 + y3) + a2*b2*c1*(-a2 + y2)*(-a3 + y3) + a3*b2*c1*(-a2 + y2)*(-a3 + y3) + b1*b2*c1*(-a2 + y2)*(-a3 + y3) + a1*b1*b2*c1*(-a2 + y2)*(-a3 + y3) + a1*a2*b1*b2*c1*(-a2 + y2)*(-a3 + y3) + a3*b1*b2*c1*(-a2 + y2)*(-a3 + y3) + a1*a3*b1*b2*c1*(-a2 + y2)*(-a3 + y3) + a2*a3*b1*b2*c1*(-a2 + y2)*(-a3 + y3) + b3*c1*(-a2 + y2)*(-a3 + y3) + a3*b1*b3*c1*(-a2 + y2)*(-a3 + y3) + a2*a3*b1*b3*c1*(-a2 + y2)*(-a3 + y3) + a1*b2*b3*c1*(-a2 + y2)*(-a3 + y3) + a2*b2*b3*c1*(-a2 + y2)*(-a3 + y3) + a3*b2*b3*c1*(-a2 + y2)*(-a3 + y3) + b1*b2*b3*c1*(-a2 + y2)*(-a3 + y3) + a1*b1*b2*b3*c1*(-a2 + y2)*(-a3 + y3) + a1*a2*b1*b2*b3*c1*(-a2 + y2)*(-a3 + y3) + a1*a3*b1*b2*b3*c1*(-a2 + y2)*(-a3 + y3) + a1*c2*(-a2 + y2)*(-a3 + y3) + b1*c2*(-a2 + y2)*(-a3 + y3) + a1*b1*c2*(-a2 + y2)*(-a3 + y3) + a2*b1*c2*(-a2 + y2)*(-a3 + y3) + a3*b1*c2*(-a2 + y2)*(-a3 + y3) + a1*b2*c2*(-a2 + y2)*(-a3 + y3) + b1*b2*c2*(-a2 + y2)*(-a3 + y3) + a1*b1*b2*c2*(-a2 + y2)*(-a3 + y3) + a2*b1*b2*c2*(-a2 + y2)*(-a3 + y3) + a1*a2*b1*b2*c2*(-a2 + y2)*(-a3 + y3) + a3*b1*b2*c2*(-a2 + y2)*(-a3 + y3) + a1*a3*b1*b2*c2*(-a2 + y2)*(-a3 + y3) + a2*b1*b3*c2*(-a2 + y2)*(-a3 + y3) + a3*b1*b3*c2*(-a2 + y2)*(-a3 + y3) + a1*a3*b1*b3*c2*(-a2 + y2)*(-a3 + y3) + a1*b2*b3*c2*(-a2 + y2)*(-a3 + y3) + b1*b2*b3*c2*(-a2 + y2)*(-a3 + y3) + a1*b1*b2*b3*c2*(-a2 + y2)*(-a3 + y3) + a2*b1*b2*b3*c2*(-a2 + y2)*(-a3 + y3) + a1*a2*b1*b2*b3*c2*(-a2 + y2)*(-a3 + y3) + a2*c1*c2*(-a2 + y2)*(-a3 + y3) + b2*c1*c2*(-a2 + y2)*(-a3 + y3) + a2*b1*b2*c1*c2*(-a2 + y2)*(-a3 + y3) + a3*b1*b2*c1*c2*(-a2 + y2)*(-a3 + y3) + a3*b1*b3*c1*c2*(-a2 + y2)*(-a3 + y3) + b2*b3*c1*c2*(-a2 + y2)*(-a3 + y3) + b1*b2*b3*c1*c2*(-a2 + y2)*(-a3 + y3) + a2*b1*b2*b3*c1*c2*(-a2 + y2)*(-a3 + y3) + b3*c1*c3*(-a2 + y2)*(-a3 + y3) + b1*b3*c1*c3*(-a2 + y2)*(-a3 + y3) + b2*b3*c1*c3*(-a2 + y2)*(-a3 + y3) + b1*b2*b3*c1*c3*(-a2 + y2)*(-a3 + y3) + b2*c1*c2*c3*(-a2 + y2)*(-a3 + y3) + (a1*a3*b1*b2*(-a3 + y3)*(1 - a3 + y3))/2 + (a2*a3*b1*b2*(-a3 + y3)*(1 - a3 + y3))/2 + (a1*a2*b3*(-a3 + y3)*(1 - a3 + y3))/2 + (a1*a3*b2*b3*(-a3 + y3)*(1 - a3 + y3))/2 + (a1*b1*b2*c1*(-a3 + y3)*(1 - a3 + y3))/2 + (a2*b1*b2*c1*(-a3 + y3)*(1 - a3 + y3))/2 + (a2*b1*b3*c1*(-a3 + y3)*(1 - a3 + y3))/2 + (a1*b1*b2*b3*c1*(-a3 + y3)*(1 - a3 + y3))/2 + (a2*b1*b2*b3*c1*(-a3 + y3)*(1 - a3 + y3))/2 + (b1*b2*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (a1*b1*b2*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (a2*b1*b2*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (a3*b1*b2*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (a1*b1*b3*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (a2*b1*b3*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (a1*b2*b3*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (b1*b2*b3*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (a1*b1*b2*b3*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (a2*b1*b2*b3*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (c1*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (b1*b2*c1*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (b1*b3*c1*c2*(-a3 + y3)*(1 - a3 + y3))/2 + (b1*b3*c2*c3*(-a3 + y3)*(1 - a3 + y3))/2 + a1*a2*a3*b1*(-a1 + z1) + a1*a2*a3*b1*b2*(-a1 + z1) + a1*a2*a3*b3*(-a1 + z1) + a2*a3*b1*b3*(-a1 + z1) + a1*a2*a3*b1*b3*(-a1 + z1) + a1*a2*a3*b2*b3*(-a1 + z1) + a1*a3*b1*b2*b3*(-a1 + z1) + a1*a2*a3*b1*b2*b3*(-a1 + z1) + a2*a3*b1*c1*(-a1 + z1) + a2*a3*b2*c1*(-a1 + z1) + a3*b1*b2*c1*(-a1 + z1) + a1*a3*b1*b2*c1*(-a1 + z1) + a2*b3*c1*(-a1 + z1) + a1*a2*b3*c1*(-a1 + z1) + a2*a3*b3*c1*(-a1 + z1) + a3*b1*b2*b3*c1*(-a1 + z1) + a1*a3*b1*b2*b3*c1*(-a1 + z1) + a1*a3*b1*b2*c2*(-a1 + z1) + a1*b3*c2*(-a1 + z1) + a2*b3*c2*(-a1 + z1) + a1*a3*b3*c2*(-a1 + z1) + a2*a3*b3*c2*(-a1 + z1) + b1*b3*c2*(-a1 + z1) + a1*b1*b3*c2*(-a1 + z1) + a2*b1*b3*c2*(-a1 + z1) + a1*a2*b1*b3*c2*(-a1 + z1) + a3*b1*b3*c2*(-a1 + z1) + a1*a3*b1*b3*c2*(-a1 + z1) + a2*a3*b1*b3*c2*(-a1 + z1) + a1*a2*a3*b1*b3*c2*(-a1 + z1) + b2*b3*c2*(-a1 + z1) + a1*b2*b3*c2*(-a1 + z1) + a1*a2*b2*b3*c2*(-a1 + z1) + a1*a3*b2*b3*c2*(-a1 + z1) + a2*b1*b2*b3*c2*(-a1 + z1) + a3*b1*b2*b3*c2*(-a1 + z1) + a2*a3*b1*b2*b3*c2*(-a1 + z1) + a1*a2*a3*b1*b2*b3*c2*(-a1 + z1) + a1*a3*c1*c2*(-a1 + z1) + a2*a3*c1*c2*(-a1 + z1) + a3*b1*c1*c2*(-a1 + z1) + a3*b2*c1*c2*(-a1 + z1) + a3*b1*b2*c1*c2*(-a1 + z1) + b3*c1*c2*(-a1 + z1) + a2*a3*b1*b3*c1*c2*(-a1 + z1) + b2*b3*c1*c2*(-a1 + z1) + a2*b2*b3*c1*c2*(-a1 + z1) + a3*b2*b3*c1*c2*(-a1 + z1) + a2*b1*b2*b3*c1*c2*(-a1 + z1) + a2*a3*b1*b2*b3*c1*c2*(-a1 + z1) + a1*b1*b2*c3*(-a1 + z1) + a1*a2*b1*b2*c3*(-a1 + z1) + a1*a3*b1*b2*c3*(-a1 + z1) + a1*a2*b3*c3*(-a1 + z1) + a1*a2*b1*b3*c3*(-a1 + z1) + a2*a3*b1*b3*c3*(-a1 + z1) + a1*b2*b3*c3*(-a1 + z1) + a2*b2*b3*c3*(-a1 + z1) + a1*a3*b2*b3*c3*(-a1 + z1) + a2*a3*b2*b3*c3*(-a1 + z1) + a1*a2*c1*c3*(-a1 + z1) + a2*b2*c1*c3*(-a1 + z1) + a3*b2*c1*c3*(-a1 + z1) + b1*b2*c1*c3*(-a1 + z1) + a1*b1*b2*c1*c3*(-a1 + z1) + a2*b1*b2*c1*c3*(-a1 + z1) + a3*b1*b2*c1*c3*(-a1 + z1) + a2*b3*c1*c3*(-a1 + z1) + b1*b2*b3*c1*c3*(-a1 + z1) + a3*b1*b2*b3*c1*c3*(-a1 + z1) + a1*a3*c2*c3*(-a1 + z1) + a2*a3*c2*c3*(-a1 + z1) + b1*c2*c3*(-a1 + z1) + a1*b1*c2*c3*(-a1 + z1) + a2*b1*c2*c3*(-a1 + z1) + a3*b1*c2*c3*(-a1 + z1) + b2*c2*c3*(-a1 + z1) + a1*b2*c2*c3*(-a1 + z1) + a2*b2*c2*c3*(-a1 + z1) + a3*b2*c2*c3*(-a1 + z1) + b3*c2*c3*(-a1 + z1) + a3*b3*c2*c3*(-a1 + z1) + a2*b1*b3*c2*c3*(-a1 + z1) + a3*b1*b3*c2*c3*(-a1 + z1) + a1*b2*b3*c2*c3*(-a1 + z1) + a2*b2*b3*c2*c3*(-a1 + z1) + a3*b2*b3*c2*c3*(-a1 + z1) + a1*b1*b2*b3*c2*c3*(-a1 + z1) + b2*c1*c2*c3*(-a1 + z1) + a3*b2*c1*c2*c3*(-a1 + z1) + b1*b2*c1*c2*c3*(-a1 + z1) + a1*b3*c1*c2*c3*(-a1 + z1) + a2*b3*c1*c2*c3*(-a1 + z1) + a3*b3*c1*c2*c3*(-a1 + z1) + b2*b3*c1*c2*c3*(-a1 + z1) + a1*a3*b2*(-a1 + x1)*(-a1 + z1) + a1*a2*b3*(-a1 + x1)*(-a1 + z1) + a2*a3*b3*(-a1 + x1)*(-a1 + z1) + a3*b2*c1*(-a1 + x1)*(-a1 + z1) + a2*b3*c1*(-a1 + x1)*(-a1 + z1) + a3*b2*b3*c1*(-a1 + x1)*(-a1 + z1) + a3*b2*c2*(-a1 + x1)*(-a1 + z1) + a1*b3*c2*(-a1 + x1)*(-a1 + z1) + a2*b3*c2*(-a1 + x1)*(-a1 + z1) + b2*b3*c2*(-a1 + x1)*(-a1 + z1) + a1*b2*b3*c2*(-a1 + x1)*(-a1 + z1) + b2*b3*c1*c2*(-a1 + x1)*(-a1 + z1) + a2*b2*c3*(-a1 + x1)*(-a1 + z1) + a3*b2*c3*(-a1 + x1)*(-a1 + z1) + a2*b3*c3*(-a1 + x1)*(-a1 + z1) + b2*c1*c3*(-a1 + x1)*(-a1 + z1) + c2*c3*(-a1 + x1)*(-a1 + z1) + b2*b3*c2*c3*(-a1 + x1)*(-a1 + z1) + a1*a3*(-a2 + x2)*(-a1 + z1) + a2*a3*b1*(-a2 + x2)*(-a1 + z1) + a1*a3*b2*(-a2 + x2)*(-a1 + z1) + a2*a3*b1*b2*(-a2 + x2)*(-a1 + z1) + a1*a2*b3*(-a2 + x2)*(-a1 + z1) + a1*a3*b3*(-a2 + x2)*(-a1 + z1) + a2*a3*b3*(-a2 + x2)*(-a1 + z1) + a1*a2*b1*b3*(-a2 + x2)*(-a1 + z1) + a1*a3*b2*b3*(-a2 + x2)*(-a1 + z1) + a3*b1*c1*(-a2 + x2)*(-a1 + z1) + a3*b1*b2*c1*(-a2 + x2)*(-a1 + z1) + a1*b1*b3*c1*(-a2 + x2)*(-a1 + z1) + a2*b1*b3*c1*(-a2 + x2)*(-a1 + z1) + a3*b1*b3*c1*(-a2 + x2)*(-a1 + z1) + a3*b1*b2*b3*c1*(-a2 + x2)*(-a1 + z1) + a3*c2*(-a2 + x2)*(-a1 + z1) + a3*b2*c2*(-a2 + x2)*(-a1 + z1) + b3*c2*(-a2 + x2)*(-a1 + z1) + a1*b3*c2*(-a2 + x2)*(-a1 + z1) + a2*b3*c2*(-a2 + x2)*(-a1 + z1) + b1*b3*c2*(-a2 + x2)*(-a1 + z1) + a3*b1*b3*c2*(-a2 + x2)*(-a1 + z1) + b2*b3*c2*(-a2 + x2)*(-a1 + z1) + a1*b2*b3*c2*(-a2 + x2)*(-a1 + z1) + a1*b1*b2*b3*c2*(-a2 + x2)*(-a1 + z1) + a3*b1*b2*b3*c2*(-a2 + x2)*(-a1 + z1) + b1*b2*b3*c1*c2*(-a2 + x2)*(-a1 + z1) + a1*c3*(-a2 + x2)*(-a1 + z1) + a2*c3*(-a2 + x2)*(-a1 + z1) + a3*c3*(-a2 + x2)*(-a1 + z1) + a1*b2*c3*(-a2 + x2)*(-a1 + z1) + a2*b2*c3*(-a2 + x2)*(-a1 + z1) + a3*b2*c3*(-a2 + x2)*(-a1 + z1) + a2*b3*c3*(-a2 + x2)*(-a1 + z1) + c1*c3*(-a2 + x2)*(-a1 + z1) + a1*c1*c3*(-a2 + x2)*(-a1 + z1) + b1*b3*c1*c3*(-a2 + x2)*(-a1 + z1) + c2*c3*(-a2 + x2)*(-a1 + z1) + b3*c2*c3*(-a2 + x2)*(-a1 + z1) + b1*b3*c2*c3*(-a2 + x2)*(-a1 + z1) + b2*b3*c2*c3*(-a2 + x2)*(-a1 + z1) + a1*a2*(-a3 + x3)*(-a1 + z1) + a2*a3*(-a3 + x3)*(-a1 + z1) + a2*a3*b1*(-a3 + x3)*(-a1 + z1) + a1*a2*b2*(-a3 + x3)*(-a1 + z1) + a2*a3*b2*(-a3 + x3)*(-a1 + z1) + a1*a2*b1*b2*(-a3 + x3)*(-a1 + z1) + a2*a3*b1*b2*(-a3 + x3)*(-a1 + z1) + a1*a2*a3*b1*b2*(-a3 + x3)*(-a1 + z1) + a1*a2*b3*(-a3 + x3)*(-a1 + z1) + a2*a3*b3*(-a3 + x3)*(-a1 + z1) + a1*a2*a3*b1*b3*(-a3 + x3)*(-a1 + z1) + a1*a2*b2*b3*(-a3 + x3)*(-a1 + z1) + a2*a3*b2*b3*(-a3 + x3)*(-a1 + z1) + a2*b1*c1*(-a3 + x3)*(-a1 + z1) + a2*a3*b1*b2*c1*(-a3 + x3)*(-a1 + z1) + a2*b1*b3*c1*(-a3 + x3)*(-a1 + z1) + a2*a3*b1*b3*c1*(-a3 + x3)*(-a1 + z1) + a2*b1*b2*b3*c1*(-a3 + x3)*(-a1 + z1) + c2*(-a3 + x3)*(-a1 + z1) + a1*c2*(-a3 + x3)*(-a1 + z1) + a2*c2*(-a3 + x3)*(-a1 + z1) + a3*c2*(-a3 + x3)*(-a1 + z1) + b1*c2*(-a3 + x3)*(-a1 + z1) + a2*b1*c2*(-a3 + x3)*(-a1 + z1) + a3*b1*c2*(-a3 + x3)*(-a1 + z1) + b2*c2*(-a3 + x3)*(-a1 + z1) + a1*b2*c2*(-a3 + x3)*(-a1 + z1) + a2*b2*c2*(-a3 + x3)*(-a1 + z1) + a3*b2*c2*(-a3 + x3)*(-a1 + z1) + b1*b2*c2*(-a3 + x3)*(-a1 + z1) + a2*b1*b2*c2*(-a3 + x3)*(-a1 + z1) + a1*a2*b1*b2*c2*(-a3 + x3)*(-a1 + z1) + a3*b1*b2*c2*(-a3 + x3)*(-a1 + z1) + a1*a3*b1*b2*c2*(-a3 + x3)*(-a1 + z1) + b3*c2*(-a3 + x3)*(-a1 + z1) + a1*b3*c2*(-a3 + x3)*(-a1 + z1) + a2*b3*c2*(-a3 + x3)*(-a1 + z1) + a3*b3*c2*(-a3 + x3)*(-a1 + z1) + b1*b3*c2*(-a3 + x3)*(-a1 + z1) + a2*b1*b3*c2*(-a3 + x3)*(-a1 + z1) + a1*a3*b1*b3*c2*(-a3 + x3)*(-a1 + z1) + b2*b3*c2*(-a3 + x3)*(-a1 + z1) + a1*b2*b3*c2*(-a3 + x3)*(-a1 + z1) + a2*b2*b3*c2*(-a3 + x3)*(-a1 + z1) + a3*b2*b3*c2*(-a3 + x3)*(-a1 + z1) + b1*b2*b3*c2*(-a3 + x3)*(-a1 + z1) + a1*b1*b2*b3*c2*(-a3 + x3)*(-a1 + z1) + a2*b1*b2*b3*c2*(-a3 + x3)*(-a1 + z1) + a1*a2*b1*b2*b3*c2*(-a3 + x3)*(-a1 + z1) + c1*c2*(-a3 + x3)*(-a1 + z1) + a1*c1*c2*(-a3 + x3)*(-a1 + z1) + a2*c1*c2*(-a3 + x3)*(-a1 + z1) + b1*c1*c2*(-a3 + x3)*(-a1 + z1) + b2*c1*c2*(-a3 + x3)*(-a1 + z1) + b1*b2*c1*c2*(-a3 + x3)*(-a1 + z1) + a2*b1*b2*c1*c2*(-a3 + x3)*(-a1 + z1) + a3*b1*b2*c1*c2*(-a3 + x3)*(-a1 + z1) + b1*b3*c1*c2*(-a3 + x3)*(-a1 + z1) + a3*b1*b3*c1*c2*(-a3 + x3)*(-a1 + z1) + a2*b1*b2*b3*c1*c2*(-a3 + x3)*(-a1 + z1) + a1*c2*c3*(-a3 + x3)*(-a1 + z1) + a2*c2*c3*(-a3 + x3)*(-a1 + z1) + c1*c2*c3*(-a3 + x3)*(-a1 + z1) + b2*c1*c2*c3*(-a3 + x3)*(-a1 + z1) + a3*b2*(-a1 + y1)*(-a1 + z1) + a1*a3*b2*(-a1 + y1)*(-a1 + z1) + a3*b1*b2*(-a1 + y1)*(-a1 + z1) + a2*b3*(-a1 + y1)*(-a1 + z1) + a1*a2*b3*(-a1 + y1)*(-a1 + z1) + a2*a3*b3*(-a1 + y1)*(-a1 + z1) + a2*b1*b3*(-a1 + y1)*(-a1 + z1) + a3*b2*b3*(-a1 + y1)*(-a1 + z1) + a3*b2*c1*(-a1 + y1)*(-a1 + z1) + a2*b3*c1*(-a1 + y1)*(-a1 + z1) + a3*b2*b3*c1*(-a1 + y1)*(-a1 + z1) + a3*b2*c2*(-a1 + y1)*(-a1 + z1) + a1*b3*c2*(-a1 + y1)*(-a1 + z1) + a2*b3*c2*(-a1 + y1)*(-a1 + z1) + b1*b3*c2*(-a1 + y1)*(-a1 + z1) + a1*b2*b3*c2*(-a1 + y1)*(-a1 + z1) + b1*b2*b3*c2*(-a1 + y1)*(-a1 + z1) + b2*b3*c1*c2*(-a1 + y1)*(-a1 + z1) + b2*c3*(-a1 + y1)*(-a1 + z1) + a2*b2*c3*(-a1 + y1)*(-a1 + z1) + a3*b2*c3*(-a1 + y1)*(-a1 + z1) + a2*b3*c3*(-a1 + y1)*(-a1 + z1) + b2*c1*c3*(-a1 + y1)*(-a1 + z1) + c2*c3*(-a1 + y1)*(-a1 + z1) + b2*b3*c2*c3*(-a1 + y1)*(-a1 + z1) + a1*a3*(-a2 + y2)*(-a1 + z1) + a2*a3*b1*(-a2 + y2)*(-a1 + z1) + a1*a3*b2*(-a2 + y2)*(-a1 + z1) + a3*b1*b2*(-a2 + y2)*(-a1 + z1) + a1*a3*b1*b2*(-a2 + y2)*(-a1 + z1) + a2*a3*b1*b2*(-a2 + y2)*(-a1 + z1) + a1*a2*b3*(-a2 + y2)*(-a1 + z1) + a3*b3*(-a2 + y2)*(-a1 + z1) + a1*a3*b3*(-a2 + y2)*(-a1 + z1) + a2*a3*b3*(-a2 + y2)*(-a1 + z1) + b1*b3*(-a2 + y2)*(-a1 + z1) + a2*b1*b3*(-a2 + y2)*(-a1 + z1) + a1*a3*b1*b3*(-a2 + y2)*(-a1 + z1) + a3*b2*b3*(-a2 + y2)*(-a1 + z1) + a1*a3*b2*b3*(-a2 + y2)*(-a1 + z1) + a3*b1*c1*(-a2 + y2)*(-a1 + z1) + a1*b1*b3*c1*(-a2 + y2)*(-a1 + z1) + a3*b1*b2*b3*c1*(-a2 + y2)*(-a1 + z1) + a3*c2*(-a2 + y2)*(-a1 + z1) + a3*b2*c2*(-a2 + y2)*(-a1 + z1) + b3*c2*(-a2 + y2)*(-a1 + z1) + a1*b3*c2*(-a2 + y2)*(-a1 + z1) + a2*b3*c2*(-a2 + y2)*(-a1 + z1) + a1*b1*b3*c2*(-a2 + y2)*(-a1 + z1) + a3*b1*b3*c2*(-a2 + y2)*(-a1 + z1) + b2*b3*c2*(-a2 + y2)*(-a1 + z1) + a1*b2*b3*c2*(-a2 + y2)*(-a1 + z1) + b1*b2*b3*c2*(-a2 + y2)*(-a1 + z1) + a3*b1*b2*b3*c2*(-a2 + y2)*(-a1 + z1) + b1*b3*c1*c2*(-a2 + y2)*(-a1 + z1) + a1*c3*(-a2 + y2)*(-a1 + z1) + a2*c3*(-a2 + y2)*(-a1 + z1) + a3*c3*(-a2 + y2)*(-a1 + z1) + a1*b2*c3*(-a2 + y2)*(-a1 + z1) + a2*b2*c3*(-a2 + y2)*(-a1 + z1) + a3*b2*c3*(-a2 + y2)*(-a1 + z1) + b3*c3*(-a2 + y2)*(-a1 + z1) + a2*b3*c3*(-a2 + y2)*(-a1 + z1) + a1*c1*c3*(-a2 + y2)*(-a1 + z1) + b1*b3*c1*c3*(-a2 + y2)*(-a1 + z1) + c2*c3*(-a2 + y2)*(-a1 + z1) + b3*c2*c3*(-a2 + y2)*(-a1 + z1) + b1*b3*c2*c3*(-a2 + y2)*(-a1 + z1) + b2*b3*c2*c3*(-a2 + y2)*(-a1 + z1) + a1*a2*(-a3 + y3)*(-a1 + z1) + a2*a3*(-a3 + y3)*(-a1 + z1) + a2*b1*(-a3 + y3)*(-a1 + z1) + a2*a3*b1*(-a3 + y3)*(-a1 + z1) + a1*b2*(-a3 + y3)*(-a1 + z1) + a2*b2*(-a3 + y3)*(-a1 + z1) + a1*a2*b2*(-a3 + y3)*(-a1 + z1) + a2*a3*b2*(-a3 + y3)*(-a1 + z1) + b1*b2*(-a3 + y3)*(-a1 + z1) + a2*b1*b2*(-a3 + y3)*(-a1 + z1) + a3*b1*b2*(-a3 + y3)*(-a1 + z1) + a1*a3*b1*b2*(-a3 + y3)*(-a1 + z1) + a2*a3*b1*b2*(-a3 + y3)*(-a1 + z1) + a1*a2*a3*b1*b2*(-a3 + y3)*(-a1 + z1) + a1*a2*b3*(-a3 + y3)*(-a1 + z1) + a2*a3*b3*(-a3 + y3)*(-a1 + z1) + a2*b1*b3*(-a3 + y3)*(-a1 + z1) + a1*a2*b1*b3*(-a3 + y3)*(-a1 + z1) + a2*a3*b1*b3*(-a3 + y3)*(-a1 + z1) + a1*a2*a3*b1*b3*(-a3 + y3)*(-a1 + z1) + b2*b3*(-a3 + y3)*(-a1 + z1) + a1*a2*b2*b3*(-a3 + y3)*(-a1 + z1) + a3*b2*b3*(-a3 + y3)*(-a1 + z1) + a1*a3*b2*b3*(-a3 + y3)*(-a1 + z1) + a2*b1*c1*(-a3 + y3)*(-a1 + z1) + b1*b2*c1*(-a3 + y3)*(-a1 + z1) + a2*b1*b2*c1*(-a3 + y3)*(-a1 + z1) + a3*b1*b2*c1*(-a3 + y3)*(-a1 + z1) + a2*a3*b1*b2*c1*(-a3 + y3)*(-a1 + z1) + a2*a3*b1*b3*c1*(-a3 + y3)*(-a1 + z1) + a2*b1*b2*b3*c1*(-a3 + y3)*(-a1 + z1) + a3*b1*b2*b3*c1*(-a3 + y3)*(-a1 + z1) + c2*(-a3 + y3)*(-a1 + z1) + a1*c2*(-a3 + y3)*(-a1 + z1) + a2*c2*(-a3 + y3)*(-a1 + z1) + a3*c2*(-a3 + y3)*(-a1 + z1) + a2*b1*c2*(-a3 + y3)*(-a1 + z1) + a3*b1*c2*(-a3 + y3)*(-a1 + z1) + a1*b2*c2*(-a3 + y3)*(-a1 + z1) + a2*b2*c2*(-a3 + y3)*(-a1 + z1) + a3*b2*c2*(-a3 + y3)*(-a1 + z1) + b1*b2*c2*(-a3 + y3)*(-a1 + z1) + a2*b1*b2*c2*(-a3 + y3)*(-a1 + z1) + a1*a2*b1*b2*c2*(-a3 + y3)*(-a1 + z1) + a3*b1*b2*c2*(-a3 + y3)*(-a1 + z1) + a1*a3*b1*b2*c2*(-a3 + y3)*(-a1 + z1) + b3*c2*(-a3 + y3)*(-a1 + z1) + a1*b3*c2*(-a3 + y3)*(-a1 + z1) + a2*b3*c2*(-a3 + y3)*(-a1 + z1) + a3*b3*c2*(-a3 + y3)*(-a1 + z1) + a1*b1*b3*c2*(-a3 + y3)*(-a1 + z1) + a2*b1*b3*c2*(-a3 + y3)*(-a1 + z1) + a3*b1*b3*c2*(-a3 + y3)*(-a1 + z1) + a1*a3*b1*b3*c2*(-a3 + y3)*(-a1 + z1) + b2*b3*c2*(-a3 + y3)*(-a1 + z1) + a1*b2*b3*c2*(-a3 + y3)*(-a1 + z1) + a2*b2*b3*c2*(-a3 + y3)*(-a1 + z1) + a2*b1*b2*b3*c2*(-a3 + y3)*(-a1 + z1) + a1*a2*b1*b2*b3*c2*(-a3 + y3)*(-a1 + z1) + a1*c1*c2*(-a3 + y3)*(-a1 + z1) + a2*c1*c2*(-a3 + y3)*(-a1 + z1) + b1*c1*c2*(-a3 + y3)*(-a1 + z1) + b2*c1*c2*(-a3 + y3)*(-a1 + z1) + b1*b2*c1*c2*(-a3 + y3)*(-a1 + z1) + a2*b1*b2*c1*c2*(-a3 + y3)*(-a1 + z1) + a3*b1*b2*c1*c2*(-a3 + y3)*(-a1 + z1) + a3*b1*b3*c1*c2*(-a3 + y3)*(-a1 + z1) + b1*b2*b3*c1*c2*(-a3 + y3)*(-a1 + z1) + a2*b1*b2*b3*c1*c2*(-a3 + y3)*(-a1 + z1) + c2*c3*(-a3 + y3)*(-a1 + z1) + a1*c2*c3*(-a3 + y3)*(-a1 + z1) + a2*c2*c3*(-a3 + y3)*(-a1 + z1) + c1*c2*c3*(-a3 + y3)*(-a1 + z1) + b2*c1*c2*c3*(-a3 + y3)*(-a1 + z1) + (a2*a3*b1*(-a1 + z1)*(1 - a1 + z1))/2 + (a2*a3*b2*(-a1 + z1)*(1 - a1 + z1))/2 + (a1*a2*b3*(-a1 + z1)*(1 - a1 + z1))/2 + (a2*a3*b3*(-a1 + z1)*(1 - a1 + z1))/2 + (a2*b3*c1*(-a1 + z1)*(1 - a1 + z1))/2 + (a2*b1*b3*c1*(-a1 + z1)*(1 - a1 + z1))/2 + (a3*b2*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (b3*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (a1*b3*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (a2*b3*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (a1*b1*b3*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (a3*b1*b3*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (b2*b3*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (a1*b2*b3*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (a3*b2*b3*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (b3*c1*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (b1*b3*c1*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (b2*b3*c1*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (b1*b2*b3*c1*c2*(-a1 + z1)*(1 - a1 + z1))/2 + (a2*b2*c3*(-a1 + z1)*(1 - a1 + z1))/2 + (a3*b2*c3*(-a1 + z1)*(1 - a1 + z1))/2 + (a2*b3*c3*(-a1 + z1)*(1 - a1 + z1))/2 + (c2*c3*(-a1 + z1)*(1 - a1 + z1))/2 + (b3*c2*c3*(-a1 + z1)*(1 - a1 + z1))/2 + (b2*b3*c2*c3*(-a1 + z1)*(1 - a1 + z1))/2 + a1*a2*b1*b3*(-a2 + z2) + a1*a2*a3*b1*b2*b3*(-a2 + z2) + a3*b1*b2*c1*(-a2 + z2) + a2*a3*b1*b2*c1*(-a2 + z2) + a1*a2*a3*b1*b2*c1*(-a2 + z2) + a1*b3*c1*(-a2 + z2) + a1*a2*b3*c1*(-a2 + z2) + a1*b1*b3*c1*(-a2 + z2) + a2*b1*b3*c1*(-a2 + z2) + a1*a2*b1*b3*c1*(-a2 + z2) + a3*b1*b3*c1*(-a2 + z2) + a1*a3*b1*b3*c1*(-a2 + z2) + a1*a2*a3*b1*b3*c1*(-a2 + z2) + a1*b2*b3*c1*(-a2 + z2) + a1*a2*b2*b3*c1*(-a2 + z2) + a2*b1*b2*b3*c1*(-a2 + z2) + a1*a3*b1*b2*b3*c1*(-a2 + z2) + a2*a3*b1*b2*b3*c1*(-a2 + z2) + a1*a3*b1*b2*c2*(-a2 + z2) + a1*b1*b3*c2*(-a2 + z2) + a1*a2*a3*b1*b3*c2*(-a2 + z2) + a1*a2*b1*b2*b3*c2*(-a2 + z2) + a1*a2*a3*b1*b2*b3*c2*(-a2 + z2) + a2*a3*c1*c2*(-a2 + z2) + b3*c1*c2*(-a2 + z2) + a1*b3*c1*c2*(-a2 + z2) + a2*b3*c1*c2*(-a2 + z2) + a1*b1*b3*c1*c2*(-a2 + z2) + b2*b3*c1*c2*(-a2 + z2) + a1*b2*b3*c1*c2*(-a2 + z2) + a2*b2*b3*c1*c2*(-a2 + z2) + b1*b2*b3*c1*c2*(-a2 + z2) + a1*b1*b2*b3*c1*c2*(-a2 + z2) + a1*a2*b1*b2*c3*(-a2 + z2) + a1*a3*b1*b2*c3*(-a2 + z2) + a1*a2*b1*b3*c3*(-a2 + z2) + b1*b2*c1*c3*(-a2 + z2) + a1*b1*b2*c1*c3*(-a2 + z2) + b1*b3*c1*c3*(-a2 + z2) + a1*b1*c2*c3*(-a2 + z2) + a1*b1*b2*b3*c2*c3*(-a2 + z2) + c1*c2*c3*(-a2 + z2) + b2*c1*c2*c3*(-a2 + z2) + a3*b2*c1*c2*c3*(-a2 + z2) + b3*c1*c2*c3*(-a2 + z2) + a2*b3*c1*c2*c3*(-a2 + z2) + a3*b3*c1*c2*c3*(-a2 + z2) + b1*b2*b3*c1*c2*c3*(-a2 + z2) + a3*(-a1 + x1)*(-a2 + z2) + a1*a3*(-a1 + x1)*(-a2 + z2) + a3*b1*(-a1 + x1)*(-a2 + z2) + a1*a3*b1*(-a1 + x1)*(-a2 + z2) + a3*b2*(-a1 + x1)*(-a2 + z2) + a2*a3*b1*b2*(-a1 + x1)*(-a2 + z2) + b3*(-a1 + x1)*(-a2 + z2) + a1*b3*(-a1 + x1)*(-a2 + z2) + a2*b3*(-a1 + x1)*(-a2 + z2) + a3*b3*(-a1 + x1)*(-a2 + z2) + a1*a3*b3*(-a1 + x1)*(-a2 + z2) + a2*a3*b3*(-a1 + x1)*(-a2 + z2) + a1*a2*b1*b3*(-a1 + x1)*(-a2 + z2) + a1*a3*b2*b3*(-a1 + x1)*(-a2 + z2) + a3*b2*c1*(-a1 + x1)*(-a2 + z2) + a3*b1*b2*c1*(-a1 + x1)*(-a2 + z2) + a2*b3*c1*(-a1 + x1)*(-a2 + z2) + a3*b2*b3*c1*(-a1 + x1)*(-a2 + z2) + a3*b1*b2*b3*c1*(-a1 + x1)*(-a2 + z2) + a3*b2*c2*(-a1 + x1)*(-a2 + z2) + a2*b3*c2*(-a1 + x1)*(-a2 + z2) + a1*b1*b2*b3*c2*(-a1 + x1)*(-a2 + z2) + a3*b1*b2*b3*c2*(-a1 + x1)*(-a2 + z2) + b2*b3*c1*c2*(-a1 + x1)*(-a2 + z2) + a1*b2*c3*(-a1 + x1)*(-a2 + z2) + a2*b2*c3*(-a1 + x1)*(-a2 + z2) + a3*b2*c3*(-a1 + x1)*(-a2 + z2) + a2*b3*c3*(-a1 + x1)*(-a2 + z2) + a1*c1*c3*(-a1 + x1)*(-a2 + z2) + b2*c1*c3*(-a1 + x1)*(-a2 + z2) + b1*b3*c1*c3*(-a1 + x1)*(-a2 + z2) + c2*c3*(-a1 + x1)*(-a2 + z2) + b1*b3*c2*c3*(-a1 + x1)*(-a2 + z2) + b2*b3*c2*c3*(-a1 + x1)*(-a2 + z2) + a3*b1*b2*(-a2 + x2)*(-a2 + z2) + a1*a3*b1*b2*(-a2 + x2)*(-a2 + z2) + b1*b3*(-a2 + x2)*(-a2 + z2) + a1*b1*b3*(-a2 + x2)*(-a2 + z2) + a2*b1*b3*(-a2 + x2)*(-a2 + z2) + a1*a2*b1*b3*(-a2 + x2)*(-a2 + z2) + a3*b1*b3*(-a2 + x2)*(-a2 + z2) + a1*a3*b1*b3*(-a2 + x2)*(-a2 + z2) + a3*b1*b2*c1*(-a2 + x2)*(-a2 + z2) + a1*a3*b1*b2*c1*(-a2 + x2)*(-a2 + z2) + b1*b3*c1*(-a2 + x2)*(-a2 + z2) + a1*b1*b3*c1*(-a2 + x2)*(-a2 + z2) + a2*b1*b3*c1*(-a2 + x2)*(-a2 + z2) + a1*a2*b1*b3*c1*(-a2 + x2)*(-a2 + z2) + a3*b1*b3*c1*(-a2 + x2)*(-a2 + z2) + a1*a3*b1*b3*c1*(-a2 + x2)*(-a2 + z2) + b1*b3*c2*(-a2 + x2)*(-a2 + z2) + a1*b1*b3*c2*(-a2 + x2)*(-a2 + z2) + b1*b2*b3*c2*(-a2 + x2)*(-a2 + z2) + a1*b1*b2*b3*c2*(-a2 + x2)*(-a2 + z2) + b1*b3*c1*c2*(-a2 + x2)*(-a2 + z2) + a1*b1*b3*c1*c2*(-a2 + x2)*(-a2 + z2) + b1*b2*b3*c1*c2*(-a2 + x2)*(-a2 + z2) + a1*b1*b2*b3*c1*c2*(-a2 + x2)*(-a2 + z2) + c1*c3*(-a2 + x2)*(-a2 + z2) + a1*a2*b1*b2*(-a3 + x3)*(-a2 + z2) + a1*a2*a3*b1*b2*(-a3 + x3)*(-a2 + z2) + a1*a2*a3*b1*b3*(-a3 + x3)*(-a2 + z2) + a1*a2*b1*b2*c1*(-a3 + x3)*(-a2 + z2) + a1*a3*b1*b3*c1*(-a3 + x3)*(-a2 + z2) + b1*b2*b3*c1*(-a3 + x3)*(-a2 + z2) + a1*b1*b2*b3*c1*(-a3 + x3)*(-a2 + z2) + a1*a2*b1*b2*b3*c1*(-a3 + x3)*(-a2 + z2) + a1*a3*b1*b2*b3*c1*(-a3 + x3)*(-a2 + z2) + a1*a2*b1*b2*c2*(-a3 + x3)*(-a2 + z2) + a1*a3*b1*b2*c2*(-a3 + x3)*(-a2 + z2) + a1*a3*b1*b3*c2*(-a3 + x3)*(-a2 + z2) + a1*b1*b2*b3*c2*(-a3 + x3)*(-a2 + z2) + a1*a2*b1*b2*b3*c2*(-a3 + x3)*(-a2 + z2) + c1*c2*(-a3 + x3)*(-a2 + z2) + a2*c1*c2*(-a3 + x3)*(-a2 + z2) + b2*c1*c2*(-a3 + x3)*(-a2 + z2) + a1*b1*b2*c1*c2*(-a3 + x3)*(-a2 + z2) + b1*b2*b3*c1*c2*(-a3 + x3)*(-a2 + z2) + a1*b1*b2*b3*c1*c2*(-a3 + x3)*(-a2 + z2) + b1*b2*b3*c1*c3*(-a3 + x3)*(-a2 + z2) + c1*c2*c3*(-a3 + x3)*(-a2 + z2) + b2*c1*c2*c3*(-a3 + x3)*(-a2 + z2) + a3*(-a1 + y1)*(-a2 + z2) + a1*a3*(-a1 + y1)*(-a2 + z2) + a3*b1*(-a1 + y1)*(-a2 + z2) + a1*a3*b1*(-a1 + y1)*(-a2 + z2) + a2*a3*b1*b2*(-a1 + y1)*(-a2 + z2) + a3*b3*(-a1 + y1)*(-a2 + z2) + a1*a3*b3*(-a1 + y1)*(-a2 + z2) + a2*a3*b3*(-a1 + y1)*(-a2 + z2) + b1*b3*(-a1 + y1)*(-a2 + z2) + a1*b1*b3*(-a1 + y1)*(-a2 + z2) + a1*a2*b1*b3*(-a1 + y1)*(-a2 + z2) + a3*b2*b3*(-a1 + y1)*(-a2 + z2) + a1*a3*b2*b3*(-a1 + y1)*(-a2 + z2) + a3*b2*c1*(-a1 + y1)*(-a2 + z2) + a3*b1*b2*c1*(-a1 + y1)*(-a2 + z2) + a2*b3*c1*(-a1 + y1)*(-a2 + z2) + a3*b2*b3*c1*(-a1 + y1)*(-a2 + z2) + a3*b1*b2*b3*c1*(-a1 + y1)*(-a2 + z2) + a3*b2*c2*(-a1 + y1)*(-a2 + z2) + a2*b3*c2*(-a1 + y1)*(-a2 + z2) + b2*b3*c2*(-a1 + y1)*(-a2 + z2) + a1*b1*b2*b3*c2*(-a1 + y1)*(-a2 + z2) + a3*b1*b2*b3*c2*(-a1 + y1)*(-a2 + z2) + b2*b3*c1*c2*(-a1 + y1)*(-a2 + z2) + b2*c3*(-a1 + y1)*(-a2 + z2) + a1*b2*c3*(-a1 + y1)*(-a2 + z2) + a2*b2*c3*(-a1 + y1)*(-a2 + z2) + a3*b2*c3*(-a1 + y1)*(-a2 + z2) + a2*b3*c3*(-a1 + y1)*(-a2 + z2) + c1*c3*(-a1 + y1)*(-a2 + z2) + a1*c1*c3*(-a1 + y1)*(-a2 + z2) + b2*c1*c3*(-a1 + y1)*(-a2 + z2) + b1*b3*c1*c3*(-a1 + y1)*(-a2 + z2) + c2*c3*(-a1 + y1)*(-a2 + z2) + b1*b3*c2*c3*(-a1 + y1)*(-a2 + z2) + b2*b3*c2*c3*(-a1 + y1)*(-a2 + z2) + a3*b1*b2*c1*(-a2 + y2)*(-a2 + z2) + a1*a3*b1*b2*c1*(-a2 + y2)*(-a2 + z2) + a2*b1*b3*c1*(-a2 + y2)*(-a2 + z2) + a1*a2*b1*b3*c1*(-a2 + y2)*(-a2 + z2) + a3*b1*b3*c1*(-a2 + y2)*(-a2 + z2) + a1*a3*b1*b3*c1*(-a2 + y2)*(-a2 + z2) + b1*b3*c1*c2*(-a2 + y2)*(-a2 + z2) + a1*b1*b3*c1*c2*(-a2 + y2)*(-a2 + z2) + b1*b2*b3*c1*c2*(-a2 + y2)*(-a2 + z2) + a1*b1*b2*b3*c1*c2*(-a2 + y2)*(-a2 + z2) + a1*a3*b1*b2*(-a3 + y3)*(-a2 + z2) + a1*a2*a3*b1*b2*(-a3 + y3)*(-a2 + z2) + a1*a2*b1*b3*(-a3 + y3)*(-a2 + z2) + a1*a2*a3*b1*b3*(-a3 + y3)*(-a2 + z2) + a1*b1*b2*c1*(-a3 + y3)*(-a2 + z2) + a1*a2*b1*b2*c1*(-a3 + y3)*(-a2 + z2) + a1*b1*b3*c1*(-a3 + y3)*(-a2 + z2) + a1*a3*b1*b3*c1*(-a3 + y3)*(-a2 + z2) + b1*b2*b3*c1*(-a3 + y3)*(-a2 + z2) + a1*b1*b2*b3*c1*(-a3 + y3)*(-a2 + z2) + a1*a2*b1*b2*b3*c1*(-a3 + y3)*(-a2 + z2) + a1*a3*b1*b2*b3*c1*(-a3 + y3)*(-a2 + z2) + a1*a2*b1*b2*c2*(-a3 + y3)*(-a2 + z2) + a1*a3*b1*b2*c2*(-a3 + y3)*(-a2 + z2) + a1*b1*b3*c2*(-a3 + y3)*(-a2 + z2) + a1*a3*b1*b3*c2*(-a3 + y3)*(-a2 + z2) + a1*a2*b1*b2*b3*c2*(-a3 + y3)*(-a2 + z2) + a2*c1*c2*(-a3 + y3)*(-a2 + z2) + b2*c1*c2*(-a3 + y3)*(-a2 + z2) + a1*b1*b2*c1*c2*(-a3 + y3)*(-a2 + z2) + b1*b2*b3*c1*c2*(-a3 + y3)*(-a2 + z2) + a1*b1*b2*b3*c1*c2*(-a3 + y3)*(-a2 + z2) + b1*b2*b3*c1*c3*(-a3 + y3)*(-a2 + z2) + c1*c2*c3*(-a3 + y3)*(-a2 + z2) + b2*c1*c2*c3*(-a3 + y3)*(-a2 + z2) + a1*a3*b2*(-a1 + z1)*(-a2 + z2) + a2*a3*b2*(-a1 + z1)*(-a2 + z2) + a2*a3*b1*b2*(-a1 + z1)*(-a2 + z2) + a2*a3*b3*(-a1 + z1)*(-a2 + z2) + a1*a2*b1*b3*(-a1 + z1)*(-a2 + z2) + a1*a3*b2*b3*(-a1 + z1)*(-a2 + z2) + a3*b1*b2*c1*(-a1 + z1)*(-a2 + z2) + b3*c1*(-a1 + z1)*(-a2 + z2) + a1*b3*c1*(-a1 + z1)*(-a2 + z2) + a2*b3*c1*(-a1 + z1)*(-a2 + z2) + b1*b3*c1*(-a1 + z1)*(-a2 + z2) + a1*b1*b3*c1*(-a1 + z1)*(-a2 + z2) + a3*b1*b2*b3*c1*(-a1 + z1)*(-a2 + z2) + a3*b2*c2*(-a1 + z1)*(-a2 + z2) + b3*c2*(-a1 + z1)*(-a2 + z2) + a1*b3*c2*(-a1 + z1)*(-a2 + z2) + a2*b3*c2*(-a1 + z1)*(-a2 + z2) + b1*b3*c2*(-a1 + z1)*(-a2 + z2) + a1*b1*b3*c2*(-a1 + z1)*(-a2 + z2) + b2*b3*c2*(-a1 + z1)*(-a2 + z2) + a3*b2*b3*c2*(-a1 + z1)*(-a2 + z2) + a1*b1*b2*b3*c2*(-a1 + z1)*(-a2 + z2) + a3*b1*b2*b3*c2*(-a1 + z1)*(-a2 + z2) + b2*b3*c1*c2*(-a1 + z1)*(-a2 + z2) + a1*b2*c3*(-a1 + z1)*(-a2 + z2) + a2*b2*c3*(-a1 + z1)*(-a2 + z2) + a3*b2*c3*(-a1 + z1)*(-a2 + z2) + a2*b3*c3*(-a1 + z1)*(-a2 + z2) + a1*c1*c3*(-a1 + z1)*(-a2 + z2) + b2*c1*c3*(-a1 + z1)*(-a2 + z2) + b3*c1*c3*(-a1 + z1)*(-a2 + z2) + b1*b3*c1*c3*(-a1 + z1)*(-a2 + z2) + c2*c3*(-a1 + z1)*(-a2 + z2) + b3*c2*c3*(-a1 + z1)*(-a2 + z2) + b1*b3*c2*c3*(-a1 + z1)*(-a2 + z2) + b2*b3*c2*c3*(-a1 + z1)*(-a2 + z2) + (a3*b1*b2*(-a2 + z2)*(1 - a2 + z2))/2 + (a1*a3*b1*b2*(-a2 + z2)*(1 - a2 + z2))/2 + (a1*a2*b3*(-a2 + z2)*(1 - a2 + z2))/2 + (b1*b3*(-a2 + z2)*(1 - a2 + z2))/2 + (a1*b1*b3*(-a2 + z2)*(1 - a2 + z2))/2 + (a2*b1*b3*(-a2 + z2)*(1 - a2 + z2))/2 + (a1*a2*b1*b3*(-a2 + z2)*(1 - a2 + z2))/2 + (a3*b1*b3*(-a2 + z2)*(1 - a2 + z2))/2 + (a1*a3*b1*b3*(-a2 + z2)*(1 - a2 + z2))/2 + (b3*c1*(-a2 + z2)*(1 - a2 + z2))/2 + (a1*b3*c1*(-a2 + z2)*(1 - a2 + z2))/2 + (a2*b3*c1*(-a2 + z2)*(1 - a2 + z2))/2 + (a1*b3*c2*(-a2 + z2)*(1 - a2 + z2))/2 + (b1*b3*c2*(-a2 + z2)*(1 - a2 + z2))/2 + (a1*b1*b3*c2*(-a2 + z2)*(1 - a2 + z2))/2 + (a1*b2*b3*c2*(-a2 + z2)*(1 - a2 + z2))/2 + (b1*b2*b3*c2*(-a2 + z2)*(1 - a2 + z2))/2 + (a1*b1*b2*b3*c2*(-a2 + z2)*(1 - a2 + z2))/2 + (b1*b3*c1*c2*(-a2 + z2)*(1 - a2 + z2))/2 + (b2*b3*c1*c2*(-a2 + z2)*(1 - a2 + z2))/2 + (b1*c1*c3*(-a2 + z2)*(1 - a2 + z2))/2 + (b2*c1*c3*(-a2 + z2)*(1 - a2 + z2))/2 + (b1*b2*c1*c3*(-a2 + z2)*(1 - a2 + z2))/2 + (b3*c1*c3*(-a2 + z2)*(1 - a2 + z2))/2 + (b1*b3*c1*c3*(-a2 + z2)*(1 - a2 + z2))/2 + c3*(a1 + x1 + y1 + z1)*(a2 + x2 + y2 + z2) + a1*a2*a3*b2*(-a3 + z3) + a2*a3*b1*b2*b3*(-a3 + z3) + a1*a2*a3*b1*b2*c1*(-a3 + z3) + a1*a2*b1*b2*b3*c1*(-a3 + z3) + a1*a2*a3*b1*b2*b3*c1*(-a3 + z3) + a1*a2*c2*(-a3 + z3) + a1*a2*b2*c2*(-a3 + z3) + b1*b2*c2*(-a3 + z3) + a1*b1*b2*c2*(-a3 + z3) + a1*a2*b1*b2*c2*(-a3 + z3) + a3*b1*b2*c2*(-a3 + z3) + a1*a3*b1*b2*c2*(-a3 + z3) + a1*a2*b3*c2*(-a3 + z3) + b1*b2*b3*c2*(-a3 + z3) + a1*b1*b2*b3*c2*(-a3 + z3) + a2*b1*b2*b3*c2*(-a3 + z3) + a3*b1*b2*b3*c2*(-a3 + z3) + a1*a3*b1*b2*b3*c2*(-a3 + z3) + a2*a3*b1*b2*b3*c2*(-a3 + z3) + a1*a2*c1*c2*(-a3 + z3) + a1*b2*c1*c2*(-a3 + z3) + a2*b2*c1*c2*(-a3 + z3) + a3*b1*b2*c1*c2*(-a3 + z3) + b1*b3*c1*c2*(-a3 + z3) + a1*b1*b3*c1*c2*(-a3 + z3) + a1*b2*b3*c1*c2*(-a3 + z3) + a2*b2*b3*c1*c2*(-a3 + z3) + a2*b1*b2*b3*c1*c2*(-a3 + z3) + a3*b1*b2*b3*c1*c2*(-a3 + z3) + a1*a2*b2*c3*(-a3 + z3) + a2*b1*b2*c3*(-a3 + z3) + a1*a2*b1*b2*c3*(-a3 + z3) + a2*a3*b1*b2*c3*(-a3 + z3) + a1*a2*b2*b3*c3*(-a3 + z3) + a2*b1*b2*b3*c1*c3*(-a3 + z3) + a1*a2*c2*c3*(-a3 + z3) + a1*b1*c2*c3*(-a3 + z3) + a1*b2*c2*c3*(-a3 + z3) + b1*b3*c2*c3*(-a3 + z3) + a2*b1*b2*b3*c2*c3*(-a3 + z3) + c1*c2*c3*(-a3 + z3) + b1*c1*c2*c3*(-a3 + z3) + a1*b2*c1*c2*c3*(-a3 + z3) + a2*b2*c1*c2*c3*(-a3 + z3) + a3*b3*c1*c2*c3*(-a3 + z3) + b1*b3*c1*c2*c3*(-a3 + z3) + b2*b3*c1*c2*c3*(-a3 + z3) + a1*a2*(-a1 + x1)*(-a3 + z3) + a1*a2*b1*(-a1 + x1)*(-a3 + z3) + a1*a2*b2*(-a1 + x1)*(-a3 + z3) + a2*a3*b2*(-a1 + x1)*(-a3 + z3) + a1*a2*a3*b2*(-a1 + x1)*(-a3 + z3) + a1*a2*b1*b2*(-a1 + x1)*(-a3 + z3) + a2*a3*b1*b2*(-a1 + x1)*(-a3 + z3) + a1*a2*a3*b1*b2*(-a1 + x1)*(-a3 + z3) + a1*a2*a3*b3*(-a1 + x1)*(-a3 + z3) + a1*a2*a3*b1*b3*(-a1 + x1)*(-a3 + z3) + a1*a2*b2*b3*(-a1 + x1)*(-a3 + z3) + a2*a3*b2*b3*(-a1 + x1)*(-a3 + z3) + a2*c1*(-a1 + x1)*(-a3 + z3) + a2*b1*c1*(-a1 + x1)*(-a3 + z3) + a2*b2*c1*(-a1 + x1)*(-a3 + z3) + a2*a3*b2*c1*(-a1 + x1)*(-a3 + z3) + a2*b1*b2*c1*(-a1 + x1)*(-a3 + z3) + a2*a3*b1*b2*c1*(-a1 + x1)*(-a3 + z3) + a2*a3*b3*c1*(-a1 + x1)*(-a3 + z3) + a2*a3*b1*b3*c1*(-a1 + x1)*(-a3 + z3) + a2*b2*b3*c1*(-a1 + x1)*(-a3 + z3) + a2*b1*b2*b3*c1*(-a1 + x1)*(-a3 + z3) + a1*a2*b3*c2*(-a1 + x1)*(-a3 + z3) + a1*a2*b1*b3*c2*(-a1 + x1)*(-a3 + z3) + a1*a2*b2*b3*c2*(-a1 + x1)*(-a3 + z3) + a2*b1*b2*b3*c2*(-a1 + x1)*(-a3 + z3) + a1*a2*b1*b2*b3*c2*(-a1 + x1)*(-a3 + z3) + c1*c2*(-a1 + x1)*(-a3 + z3) + a1*c1*c2*(-a1 + x1)*(-a3 + z3) + a2*c1*c2*(-a1 + x1)*(-a3 + z3) + b2*c1*c2*(-a1 + x1)*(-a3 + z3) + a2*b3*c1*c2*(-a1 + x1)*(-a3 + z3) + a2*b1*b3*c1*c2*(-a1 + x1)*(-a3 + z3) + a2*b2*b3*c1*c2*(-a1 + x1)*(-a3 + z3) + a2*b1*b2*b3*c1*c2*(-a1 + x1)*(-a3 + z3) + c2*c3*(-a1 + x1)*(-a3 + z3) + a1*c2*c3*(-a1 + x1)*(-a3 + z3) + a2*c2*c3*(-a1 + x1)*(-a3 + z3) + b2*c1*c2*c3*(-a1 + x1)*(-a3 + z3) + a1*(-a2 + x2)*(-a3 + z3) + a1*a2*(-a2 + x2)*(-a3 + z3) + a1*a3*(-a2 + x2)*(-a3 + z3) + b1*(-a2 + x2)*(-a3 + z3) + a1*b1*(-a2 + x2)*(-a3 + z3) + a2*b1*(-a2 + x2)*(-a3 + z3) + a1*a2*b1*(-a2 + x2)*(-a3 + z3) + a3*b1*(-a2 + x2)*(-a3 + z3) + a1*a3*b1*(-a2 + x2)*(-a3 + z3) + a2*a3*b1*(-a2 + x2)*(-a3 + z3) + a1*b2*(-a2 + x2)*(-a3 + z3) + a1*a3*b2*(-a2 + x2)*(-a3 + z3) + a1*a2*b1*b2*(-a2 + x2)*(-a3 + z3) + a1*a2*a3*b1*b2*(-a2 + x2)*(-a3 + z3) + a1*b3*(-a2 + x2)*(-a3 + z3) + a1*a2*b3*(-a2 + x2)*(-a3 + z3) + a1*a3*b3*(-a2 + x2)*(-a3 + z3) + a1*a2*a3*b1*b3*(-a2 + x2)*(-a3 + z3) + c1*(-a2 + x2)*(-a3 + z3) + a1*c1*(-a2 + x2)*(-a3 + z3) + a2*c1*(-a2 + x2)*(-a3 + z3) + b1*c1*(-a2 + x2)*(-a3 + z3) + a1*b1*c1*(-a2 + x2)*(-a3 + z3) + a2*b1*c1*(-a2 + x2)*(-a3 + z3) + b2*c1*(-a2 + x2)*(-a3 + z3) + a2*b1*b2*c1*(-a2 + x2)*(-a3 + z3) + a3*b1*b2*c1*(-a2 + x2)*(-a3 + z3) + a2*a3*b1*b2*c1*(-a2 + x2)*(-a3 + z3) + b3*c1*(-a2 + x2)*(-a3 + z3) + a1*b3*c1*(-a2 + x2)*(-a3 + z3) + a2*b3*c1*(-a2 + x2)*(-a3 + z3) + a1*a2*b1*b3*c1*(-a2 + x2)*(-a3 + z3) + a3*b1*b3*c1*(-a2 + x2)*(-a3 + z3) + a1*a3*b1*b3*c1*(-a2 + x2)*(-a3 + z3) + a2*a3*b1*b3*c1*(-a2 + x2)*(-a3 + z3) + a1*b2*b3*c1*(-a2 + x2)*(-a3 + z3) + a2*b2*b3*c1*(-a2 + x2)*(-a3 + z3) + a3*b2*b3*c1*(-a2 + x2)*(-a3 + z3) + a2*b1*b2*b3*c1*(-a2 + x2)*(-a3 + z3) + a1*a2*b1*b2*b3*c1*(-a2 + x2)*(-a3 + z3) + a3*b1*b2*b3*c1*(-a2 + x2)*(-a3 + z3) + a1*a3*b1*b2*b3*c1*(-a2 + x2)*(-a3 + z3) + b1*b3*c2*(-a2 + x2)*(-a3 + z3) + a1*b1*b3*c2*(-a2 + x2)*(-a3 + z3) + a2*b1*b3*c2*(-a2 + x2)*(-a3 + z3) + a1*a2*b1*b3*c2*(-a2 + x2)*(-a3 + z3) + a1*b2*b3*c2*(-a2 + x2)*(-a3 + z3) + a1*a2*b1*b2*b3*c2*(-a2 + x2)*(-a3 + z3) + a2*c1*c2*(-a2 + x2)*(-a3 + z3) + b1*b2*c1*c2*(-a2 + x2)*(-a3 + z3) + b1*b3*c1*c2*(-a2 + x2)*(-a3 + z3) + a1*b1*b3*c1*c2*(-a2 + x2)*(-a3 + z3) + a2*b1*b3*c1*c2*(-a2 + x2)*(-a3 + z3) + b1*b2*b3*c1*c2*(-a2 + x2)*(-a3 + z3) + a1*b1*b2*b3*c1*c2*(-a2 + x2)*(-a3 + z3) + a2*b1*b2*b3*c1*c2*(-a2 + x2)*(-a3 + z3) + b2*c1*c3*(-a2 + x2)*(-a3 + z3) + b1*b2*c1*c3*(-a2 + x2)*(-a3 + z3) + b2*b3*c1*c3*(-a2 + x2)*(-a3 + z3) + b1*b2*b3*c1*c3*(-a2 + x2)*(-a3 + z3) + c1*c2*c3*(-a2 + x2)*(-a3 + z3) + b2*c1*c2*c3*(-a2 + x2)*(-a3 + z3) + b1*b2*(-a3 + x3)*(-a3 + z3) + a1*b1*b2*(-a3 + x3)*(-a3 + z3) + a2*b1*b2*(-a3 + x3)*(-a3 + z3) + a3*b1*b2*(-a3 + x3)*(-a3 + z3) + a1*a3*b1*b2*(-a3 + x3)*(-a3 + z3) + a2*a3*b1*b2*(-a3 + x3)*(-a3 + z3) + a1*b2*b3*(-a3 + x3)*(-a3 + z3) + a1*a3*b2*b3*(-a3 + x3)*(-a3 + z3) + b1*b2*c1*(-a3 + x3)*(-a3 + z3) + a1*b1*b2*c1*(-a3 + x3)*(-a3 + z3) + a2*b1*b2*c1*(-a3 + x3)*(-a3 + z3) + a3*b1*b2*c1*(-a3 + x3)*(-a3 + z3) + a1*a3*b1*b2*c1*(-a3 + x3)*(-a3 + z3) + a2*a3*b1*b2*c1*(-a3 + x3)*(-a3 + z3) + b2*b3*c1*(-a3 + x3)*(-a3 + z3) + a1*b2*b3*c1*(-a3 + x3)*(-a3 + z3) + a2*b2*b3*c1*(-a3 + x3)*(-a3 + z3) + a3*b2*b3*c1*(-a3 + x3)*(-a3 + z3) + a1*a3*b2*b3*c1*(-a3 + x3)*(-a3 + z3) + a2*a3*b2*b3*c1*(-a3 + x3)*(-a3 + z3) + b1*b2*c2*(-a3 + x3)*(-a3 + z3) + a1*b1*b2*c2*(-a3 + x3)*(-a3 + z3) + a2*b1*b2*c2*(-a3 + x3)*(-a3 + z3) + a3*b1*b2*c2*(-a3 + x3)*(-a3 + z3) + a1*a3*b1*b2*c2*(-a3 + x3)*(-a3 + z3) + a2*a3*b1*b2*c2*(-a3 + x3)*(-a3 + z3) + a1*b2*b3*c2*(-a3 + x3)*(-a3 + z3) + a1*a3*b2*b3*c2*(-a3 + x3)*(-a3 + z3) + c1*c2*(-a3 + x3)*(-a3 + z3) + b1*b2*c1*c2*(-a3 + x3)*(-a3 + z3) + a3*b1*b2*c1*c2*(-a3 + x3)*(-a3 + z3) + b2*b3*c1*c2*(-a3 + x3)*(-a3 + z3) + a3*b2*b3*c1*c2*(-a3 + x3)*(-a3 + z3) + c1*c2*c3*(-a3 + x3)*(-a3 + z3) + a1*a2*(-a1 + y1)*(-a3 + z3) + a2*b1*(-a1 + y1)*(-a3 + z3) + a1*a2*b1*(-a1 + y1)*(-a3 + z3) + a1*a2*b2*(-a1 + y1)*(-a3 + z3) + a2*a3*b2*(-a1 + y1)*(-a3 + z3) + a1*a2*a3*b2*(-a1 + y1)*(-a3 + z3) + a2*b1*b2*(-a1 + y1)*(-a3 + z3) + a1*a2*b1*b2*(-a1 + y1)*(-a3 + z3) + a1*a2*a3*b1*b2*(-a1 + y1)*(-a3 + z3) + a1*a2*a3*b3*(-a1 + y1)*(-a3 + z3) + a2*a3*b1*b3*(-a1 + y1)*(-a3 + z3) + a1*a2*a3*b1*b3*(-a1 + y1)*(-a3 + z3) + a2*b2*b3*(-a1 + y1)*(-a3 + z3) + a1*a2*b2*b3*(-a1 + y1)*(-a3 + z3) + a2*a3*b2*b3*(-a1 + y1)*(-a3 + z3) + a2*c1*(-a1 + y1)*(-a3 + z3) + a2*b1*c1*(-a1 + y1)*(-a3 + z3) + a2*b2*c1*(-a1 + y1)*(-a3 + z3) + a2*a3*b2*c1*(-a1 + y1)*(-a3 + z3) + a2*b1*b2*c1*(-a1 + y1)*(-a3 + z3) + a2*a3*b1*b2*c1*(-a1 + y1)*(-a3 + z3) + a2*a3*b3*c1*(-a1 + y1)*(-a3 + z3) + a2*a3*b1*b3*c1*(-a1 + y1)*(-a3 + z3) + a2*b2*b3*c1*(-a1 + y1)*(-a3 + z3) + a2*b1*b2*b3*c1*(-a1 + y1)*(-a3 + z3) + a1*a2*b3*c2*(-a1 + y1)*(-a3 + z3) + a2*b1*b3*c2*(-a1 + y1)*(-a3 + z3) + a1*a2*b1*b3*c2*(-a1 + y1)*(-a3 + z3) + a1*a2*b2*b3*c2*(-a1 + y1)*(-a3 + z3) + a1*a2*b1*b2*b3*c2*(-a1 + y1)*(-a3 + z3) + a1*c1*c2*(-a1 + y1)*(-a3 + z3) + a2*c1*c2*(-a1 + y1)*(-a3 + z3) + b2*c1*c2*(-a1 + y1)*(-a3 + z3) + a2*b3*c1*c2*(-a1 + y1)*(-a3 + z3) + a2*b1*b3*c1*c2*(-a1 + y1)*(-a3 + z3) + a2*b2*b3*c1*c2*(-a1 + y1)*(-a3 + z3) + a2*b1*b2*b3*c1*c2*(-a1 + y1)*(-a3 + z3) + a1*c2*c3*(-a1 + y1)*(-a3 + z3) + a2*c2*c3*(-a1 + y1)*(-a3 + z3) + b2*c1*c2*c3*(-a1 + y1)*(-a3 + z3) + a1*a2*(-a2 + y2)*(-a3 + z3) + a1*a3*(-a2 + y2)*(-a3 + z3) + a1*a2*b1*(-a2 + y2)*(-a3 + z3) + a3*b1*(-a2 + y2)*(-a3 + z3) + a1*a3*b1*(-a2 + y2)*(-a3 + z3) + a2*a3*b1*(-a2 + y2)*(-a3 + z3) + a1*a3*b2*(-a2 + y2)*(-a3 + z3) + b1*b2*(-a2 + y2)*(-a3 + z3) + a1*b1*b2*(-a2 + y2)*(-a3 + z3) + a2*b1*b2*(-a2 + y2)*(-a3 + z3) + a1*a2*b1*b2*(-a2 + y2)*(-a3 + z3) + a3*b1*b2*(-a2 + y2)*(-a3 + z3) + a1*a3*b1*b2*(-a2 + y2)*(-a3 + z3) + a2*a3*b1*b2*(-a2 + y2)*(-a3 + z3) + a1*a2*a3*b1*b2*(-a2 + y2)*(-a3 + z3) + a1*a2*b3*(-a2 + y2)*(-a3 + z3) + a1*a3*b3*(-a2 + y2)*(-a3 + z3) + a3*b1*b3*(-a2 + y2)*(-a3 + z3) + a1*a3*b1*b3*(-a2 + y2)*(-a3 + z3) + a2*a3*b1*b3*(-a2 + y2)*(-a3 + z3) + a1*a2*a3*b1*b3*(-a2 + y2)*(-a3 + z3) + a1*b2*b3*(-a2 + y2)*(-a3 + z3) + c1*(-a2 + y2)*(-a3 + z3) + a1*c1*(-a2 + y2)*(-a3 + z3) + a2*c1*(-a2 + y2)*(-a3 + z3) + b1*c1*(-a2 + y2)*(-a3 + z3) + a1*b1*c1*(-a2 + y2)*(-a3 + z3) + a2*b1*c1*(-a2 + y2)*(-a3 + z3) + b2*c1*(-a2 + y2)*(-a3 + z3) + a2*b1*b2*c1*(-a2 + y2)*(-a3 + z3) + a2*a3*b1*b2*c1*(-a2 + y2)*(-a3 + z3) + b3*c1*(-a2 + y2)*(-a3 + z3) + a1*b3*c1*(-a2 + y2)*(-a3 + z3) + a2*b3*c1*(-a2 + y2)*(-a3 + z3) + b1*b3*c1*(-a2 + y2)*(-a3 + z3) + a1*b1*b3*c1*(-a2 + y2)*(-a3 + z3) + a2*b1*b3*c1*(-a2 + y2)*(-a3 + z3) + a1*a2*b1*b3*c1*(-a2 + y2)*(-a3 + z3) + a3*b1*b3*c1*(-a2 + y2)*(-a3 + z3) + a1*a3*b1*b3*c1*(-a2 + y2)*(-a3 + z3) + a2*a3*b1*b3*c1*(-a2 + y2)*(-a3 + z3) + a1*b2*b3*c1*(-a2 + y2)*(-a3 + z3) + a2*b2*b3*c1*(-a2 + y2)*(-a3 + z3) + a3*b2*b3*c1*(-a2 + y2)*(-a3 + z3) + b1*b2*b3*c1*(-a2 + y2)*(-a3 + z3) + a1*b1*b2*b3*c1*(-a2 + y2)*(-a3 + z3) + a1*a2*b1*b2*b3*c1*(-a2 + y2)*(-a3 + z3) + a1*a3*b1*b2*b3*c1*(-a2 + y2)*(-a3 + z3) + a1*a2*b1*b3*c2*(-a2 + y2)*(-a3 + z3) + a1*b2*b3*c2*(-a2 + y2)*(-a3 + z3) + b1*b2*b3*c2*(-a2 + y2)*(-a3 + z3) + a1*b1*b2*b3*c2*(-a2 + y2)*(-a3 + z3) + a2*b1*b2*b3*c2*(-a2 + y2)*(-a3 + z3) + a1*a2*b1*b2*b3*c2*(-a2 + y2)*(-a3 + z3) + c1*c2*(-a2 + y2)*(-a3 + z3) + a2*c1*c2*(-a2 + y2)*(-a3 + z3) + b1*b2*c1*c2*(-a2 + y2)*(-a3 + z3) + b1*b3*c1*c2*(-a2 + y2)*(-a3 + z3) + a1*b1*b3*c1*c2*(-a2 + y2)*(-a3 + z3) + a2*b1*b3*c1*c2*(-a2 + y2)*(-a3 + z3) + b1*b2*b3*c1*c2*(-a2 + y2)*(-a3 + z3) + a1*b1*b2*b3*c1*c2*(-a2 + y2)*(-a3 + z3) + a2*b1*b2*b3*c1*c2*(-a2 + y2)*(-a3 + z3) + b2*c1*c3*(-a2 + y2)*(-a3 + z3) + b1*b2*c1*c3*(-a2 + y2)*(-a3 + z3) + b2*b3*c1*c3*(-a2 + y2)*(-a3 + z3) + b1*b2*b3*c1*c3*(-a2 + y2)*(-a3 + z3) + c1*c2*c3*(-a2 + y2)*(-a3 + z3) + b2*c1*c2*c3*(-a2 + y2)*(-a3 + z3) + a1*b1*b2*c1*(-a3 + y3)*(-a3 + z3) + a2*b1*b2*c1*(-a3 + y3)*(-a3 + z3) + a1*a3*b1*b2*c1*(-a3 + y3)*(-a3 + z3) + a2*a3*b1*b2*c1*(-a3 + y3)*(-a3 + z3) + a1*a3*b2*b3*c1*(-a3 + y3)*(-a3 + z3) + a2*a3*b2*b3*c1*(-a3 + y3)*(-a3 + z3) + a1*b1*b2*b3*c1*(-a3 + y3)*(-a3 + z3) + a2*b1*b2*b3*c1*(-a3 + y3)*(-a3 + z3) + b1*b2*c2*(-a3 + y3)*(-a3 + z3) + a1*b1*b2*c2*(-a3 + y3)*(-a3 + z3) + a2*b1*b2*c2*(-a3 + y3)*(-a3 + z3) + a3*b1*b2*c2*(-a3 + y3)*(-a3 + z3) + a1*a3*b1*b2*c2*(-a3 + y3)*(-a3 + z3) + a2*a3*b1*b2*c2*(-a3 + y3)*(-a3 + z3) + a1*a3*b2*b3*c2*(-a3 + y3)*(-a3 + z3) + b1*b2*b3*c2*(-a3 + y3)*(-a3 + z3) + a1*b1*b2*b3*c2*(-a3 + y3)*(-a3 + z3) + a2*b1*b2*b3*c2*(-a3 + y3)*(-a3 + z3) + b1*b2*c1*c2*(-a3 + y3)*(-a3 + z3) + a3*b1*b2*c1*c2*(-a3 + y3)*(-a3 + z3) + a3*b2*b3*c1*c2*(-a3 + y3)*(-a3 + z3) + b1*b2*b3*c1*c2*(-a3 + y3)*(-a3 + z3) + c1*c2*c3*(-a3 + y3)*(-a3 + z3) + a1*a2*b1*(-a1 + z1)*(-a3 + z3) + a1*a2*b1*b2*(-a1 + z1)*(-a3 + z3) + a2*a3*b1*b2*(-a1 + z1)*(-a3 + z3) + a1*a2*a3*b1*b2*(-a1 + z1)*(-a3 + z3) + a1*a2*a3*b1*b3*(-a1 + z1)*(-a3 + z3) + a1*a2*b2*b3*(-a1 + z1)*(-a3 + z3) + a2*a3*b2*b3*(-a1 + z1)*(-a3 + z3) + a2*b1*c1*(-a1 + z1)*(-a3 + z3) + a2*b1*b2*c1*(-a1 + z1)*(-a3 + z3) + a2*a3*b1*b2*c1*(-a1 + z1)*(-a3 + z3) + a2*a3*b1*b3*c1*(-a1 + z1)*(-a3 + z3) + a2*b1*b2*b3*c1*(-a1 + z1)*(-a3 + z3) + a1*a2*b1*b3*c2*(-a1 + z1)*(-a3 + z3) + a2*b2*b3*c2*(-a1 + z1)*(-a3 + z3) + a2*b1*b2*b3*c2*(-a1 + z1)*(-a3 + z3) + a1*a2*b1*b2*b3*c2*(-a1 + z1)*(-a3 + z3) + c1*c2*(-a1 + z1)*(-a3 + z3) + a1*c1*c2*(-a1 + z1)*(-a3 + z3) + a2*c1*c2*(-a1 + z1)*(-a3 + z3) + b2*c1*c2*(-a1 + z1)*(-a3 + z3) + a2*b1*b3*c1*c2*(-a1 + z1)*(-a3 + z3) + a2*b1*b2*b3*c1*c2*(-a1 + z1)*(-a3 + z3) + c2*c3*(-a1 + z1)*(-a3 + z3) + a1*c2*c3*(-a1 + z1)*(-a3 + z3) + a2*c2*c3*(-a1 + z1)*(-a3 + z3) + b2*c1*c2*c3*(-a1 + z1)*(-a3 + z3) + a1*a2*b1*(-a2 + z2)*(-a3 + z3) + a1*a2*b1*b2*(-a2 + z2)*(-a3 + z3) + a1*a2*a3*b1*b2*(-a2 + z2)*(-a3 + z3) + a1*a2*a3*b1*b3*(-a2 + z2)*(-a3 + z3) + b1*c1*(-a2 + z2)*(-a3 + z3) + a1*b1*c1*(-a2 + z2)*(-a3 + z3) + b1*b2*c1*(-a2 + z2)*(-a3 + z3) + a1*b1*b2*c1*(-a2 + z2)*(-a3 + z3) + a1*a3*b1*b2*c1*(-a2 + z2)*(-a3 + z3) + b1*b3*c1*(-a2 + z2)*(-a3 + z3) + a1*b1*b3*c1*(-a2 + z2)*(-a3 + z3) + a1*a2*b1*b3*c1*(-a2 + z2)*(-a3 + z3) + b1*b2*b3*c1*(-a2 + z2)*(-a3 + z3) + a1*b1*b2*b3*c1*(-a2 + z2)*(-a3 + z3) + a1*a2*b1*b2*b3*c1*(-a2 + z2)*(-a3 + z3) + a1*a3*b1*b2*b3*c1*(-a2 + z2)*(-a3 + z3) + a1*a2*b1*b3*c2*(-a2 + z2)*(-a3 + z3) + a1*a2*b1*b2*b3*c2*(-a2 + z2)*(-a3 + z3) + c1*c2*(-a2 + z2)*(-a3 + z3) + a2*c1*c2*(-a2 + z2)*(-a3 + z3) + b1*c1*c2*(-a2 + z2)*(-a3 + z3) + b2*c1*c2*(-a2 + z2)*(-a3 + z3) + b1*b2*c1*c2*(-a2 + z2)*(-a3 + z3) + b1*b3*c1*c2*(-a2 + z2)*(-a3 + z3) + b1*b2*b3*c1*c2*(-a2 + z2)*(-a3 + z3) + b1*c1*c3*(-a2 + z2)*(-a3 + z3) + b1*b2*c1*c3*(-a2 + z2)*(-a3 + z3) + b1*b3*c1*c3*(-a2 + z2)*(-a3 + z3) + b1*b2*b3*c1*c3*(-a2 + z2)*(-a3 + z3) + b2*c1*c2*c3*(-a2 + z2)*(-a3 + z3) + (a1*a2*(-a3 + z3)*(1 - a3 + z3))/2 + (b1*b2*(-a3 + z3)*(1 - a3 + z3))/2 + (a1*b1*b2*(-a3 + z3)*(1 - a3 + z3))/2 + (a2*b1*b2*(-a3 + z3)*(1 - a3 + z3))/2 + (a3*b1*b2*(-a3 + z3)*(1 - a3 + z3))/2 + (a1*a3*b1*b2*(-a3 + z3)*(1 - a3 + z3))/2 + (a2*a3*b1*b2*(-a3 + z3)*(1 - a3 + z3))/2 + (a1*a2*b3*(-a3 + z3)*(1 - a3 + z3))/2 + (a1*b2*b3*(-a3 + z3)*(1 - a3 + z3))/2 + (a1*a3*b2*b3*(-a3 + z3)*(1 - a3 + z3))/2 + (a2*b1*c1*(-a3 + z3)*(1 - a3 + z3))/2 + (b1*b2*c1*(-a3 + z3)*(1 - a3 + z3))/2 + (a3*b1*b2*c1*(-a3 + z3)*(1 - a3 + z3))/2 + (a2*b1*b3*c1*(-a3 + z3)*(1 - a3 + z3))/2 + (b2*b3*c1*(-a3 + z3)*(1 - a3 + z3))/2 + (a1*b2*b3*c1*(-a3 + z3)*(1 - a3 + z3))/2 + (a2*b2*b3*c1*(-a3 + z3)*(1 - a3 + z3))/2 + (a3*b2*b3*c1*(-a3 + z3)*(1 - a3 + z3))/2 + (a1*b1*b2*b3*c1*(-a3 + z3)*(1 - a3 + z3))/2 + (a2*b1*b2*b3*c1*(-a3 + z3)*(1 - a3 + z3))/2 + (b1*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (a1*b1*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (a2*b1*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (a1*b2*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (b1*b3*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (a1*b1*b3*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (a2*b1*b3*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (b1*b2*b3*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (a1*b1*b2*b3*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (a2*b1*b2*b3*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (c1*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (b1*c1*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (b1*b2*c1*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (b1*b3*c1*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (b2*b3*c1*c2*(-a3 + z3)*(1 - a3 + z3))/2 + (b1*c2*c3*(-a3 + z3)*(1 - a3 + z3))/2 + (b1*b3*c2*c3*(-a3 + z3)*(1 - a3 + z3))/2 + (a1 + x1 + y1 + z1)*(a2 + x2 + y2 + z2)*(a3 + x3 + y3 + z3);
end;
#####################################################################
#####################################################################
#Space Group No. 99 ( P4mm)
#####################################################################
Ampin99:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin99:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin99:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Azin99:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain99:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
Bxyin99:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return (1 - c1)*x2*y1 + c1*(x2 + y1)*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 100 ( P4bm)
#####################################################################
Ampin100:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin100:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Azin100:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain100:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
Bphiin100:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + b1*b2 + a2*b1*b2 + a2*c1 + b2*c1 + a1*b2*c1 + b1*b2*c1 + a2*x1 + b2*c1*x1 + a2*y1 + b2*y1 + b2*c1*y1;
end;
#####################################################################
CGAPin100:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3*b1 + a1*a3*b1*b2 + a1*a2*a3*b1*b2 + a1*a2*b1*b3 + a1*a2*b2*b3 + a1*a2*a3*b2*b3 + b1*b2*b3 + a1*b1*b2*b3 + a3*b1*b2*b3 + a1*a3*b1*b2*b3 + a2*a3*b1*b2*b3 + a1*a2*a3*b1*b2*b3 + a1*a2*a3*c1 + a2*a3*b1*c1 + a3*b2*c1 + a1*a3*b2*c1 + a1*a2*a3*b2*c1 + a1*a3*b1*b2*c1 + a2*b1*b3*c1 + a1*a2*b1*b3*c1 + a2*b2*b3*c1 + a1*a3*b2*b3*c1 + a1*a2*a3*b2*b3*c1 + b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a2*a3*b1*b2*b3*c1 + a1*a3*c2 + a1*a2*a3*c2 + a2*a3*b1*c2 + a1*a2*a3*b2*c2 + a3*b1*b2*c2 + a2*a3*b1*b2*c2 + a1*a2*a3*b1*b2*c2 + b1*b3*c2 + a3*b1*b3*c2 + a1*a2*a3*b1*b3*c2 + a1*a3*b2*b3*c2 + a1*a2*a3*b2*b3*c2 + b1*b2*b3*c2 + a1*a2*b1*b2*b3*c2 + a2*a3*c1*c2 + a1*a3*b2*c1*c2 + a2*a3*b2*c1*c2 + a1*a2*a3*b2*c1*c2 + a3*b1*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a2*a3*b1*b2*c1*c2 + b3*c1*c2 + a1*a2*a3*b3*c1*c2 + b1*b3*c1*c2 + a1*b1*b3*c1*c2 + a2*b1*b3*c1*c2 + a1*a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + a1*a3*b1*b3*c1*c2 + a1*a2*b2*b3*c1*c2 + a3*b2*b3*c1*c2 + a2*a3*b2*b3*c1*c2 + a2*b1*b2*b3*c1*c2 + a2*a3*b1*b2*b3*c1*c2 + a1*a2*b1*c3 + a1*b2*c3 + a1*a2*b2*c3 + a1*a3*b2*c3 + a1*a2*a3*b2*c3 + a1*b1*b2*c3 + a1*a2*b1*b2*c3 + a1*a3*b1*b2*c3 + a2*a3*b1*b2*c3 + a1*a2*b3*c3 + a1*a2*b1*b3*c3 + a1*a2*a3*b1*b3*c3 + a1*b2*b3*c3 + a1*a2*a3*b2*b3*c3 + a1*b1*b2*b3*c3 + a2*b1*b2*b3*c3 + a3*b1*b2*b3*c3 + a1*a3*b1*b2*b3*c3 + a2*a3*b1*b2*b3*c3 + a2*c1*c3 + a1*a2*c1*c3 + a2*b1*c1*c3 + a1*a2*b1*c1*c3 + a2*a3*b1*c1*c3 + b2*c1*c3 + a1*b2*c1*c3 + a2*b2*c1*c3 + a1*a2*b2*c1*c3 + a1*a3*b2*c1*c3 + b1*b2*c1*c3 + a2*b1*b2*c1*c3 + a1*a2*b1*b2*c1*c3 + a3*b1*b2*c1*c3 + a1*a3*b1*b2*c1*c3 + a2*a3*b1*b2*c1*c3 + a1*a2*b3*c1*c3 + a2*a3*b3*c1*c3 + a1*a2*a3*b3*c1*c3 + a1*a2*b1*b3*c1*c3 + a2*b2*b3*c1*c3 + a1*b1*b2*b3*c1*c3 + a1*c2*c3 + a1*a2*c2*c3 + a1*a3*c2*c3 + b1*c2*c3 + a2*b1*c2*c3 + a1*a2*b1*c2*c3 + a3*b1*c2*c3 + a1*b2*c2*c3 + a1*a2*b2*c2*c3 + a1*a2*a3*b2*c2*c3 + b1*b2*c2*c3 + a1*a2*b1*b2*c2*c3 + a3*b1*b2*c2*c3 + a1*a3*b1*b2*c2*c3 + a1*b3*c2*c3 + a1*a2*b3*c2*c3 + a1*a2*a3*b3*c2*c3 + b1*b3*c2*c3 + a2*b1*b3*c2*c3 + a1*a3*b1*b3*c2*c3 + a2*a3*b1*b3*c2*c3 + a1*b1*b2*b3*c2*c3 + a1*a2*b1*b2*b3*c2*c3 + a3*b1*b2*b3*c2*c3 + a1*a3*b1*b2*b3*c2*c3 + c1*c2*c3 + a1*c1*c2*c3 + a1*a2*c1*c2*c3 + a3*c1*c2*c3 + b1*c1*c2*c3 + a2*b1*c1*c2*c3 + a3*b1*c1*c2*c3 + a1*b2*c1*c2*c3 + a2*b2*c1*c2*c3 + a1*a2*b2*c1*c2*c3 + a1*a3*b2*c1*c2*c3 + a2*a3*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + a2*a3*b1*b2*c1*c2*c3 + b3*c1*c2*c3 + a2*b3*c1*c2*c3 + a1*a3*b3*c1*c2*c3 + a3*b1*b3*c1*c2*c3 + a2*a3*b1*b3*c1*c2*c3 + b2*b3*c1*c2*c3 + a1*a2*b2*b3*c1*c2*c3 + a1*a3*b2*b3*c1*c2*c3 + b1*b2*b3*c1*c2*c3 + a1*b1*b2*b3*c1*c2*c3 + a2*b1*b2*b3*c1*c2*c3 + a3*b1*b2*b3*c1*c2*c3 + a3*b2*x1 + a3*b1*b2*x1 + a1*a2*b3*x1 + a2*a3*b3*x1 + a2*b1*b3*x1 + b2*b3*x1 + a2*a3*c1*x1 + a3*b2*c1*x1 + a3*b1*b2*c1*x1 + a2*b3*c1*x1 + b2*b3*c1*x1 + a1*b2*b3*c1*x1 + a3*b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a3*c2*x1 + a2*a3*c2*x1 + a3*b2*c2*x1 + a1*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + a1*a3*b1*b2*c2*x1 + b3*c2*x1 + a1*a2*b3*c2*x1 + a1*a3*b3*c2*x1 + a2*a3*b3*c2*x1 + b1*b3*c2*x1 + a1*a2*b1*b3*c2*x1 + a1*a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a1*b2*b3*c2*x1 + a2*a3*b2*b3*c2*x1 + a1*b1*b2*b3*c2*x1 + a3*c1*c2*x1 + a3*b2*c1*c2*x1 + a1*b3*c1*c2*x1 + a2*b3*c1*c2*x1 + a3*b3*c1*c2*x1 + a2*a3*b3*c1*c2*x1 + a1*b1*b3*c1*c2*x1 + b2*b3*c1*c2*x1 + a2*b2*b3*c1*c2*x1 + a3*b2*b3*c1*c2*x1 + a2*a3*b2*b3*c1*c2*x1 + a2*c3*x1 + b2*c3*x1 + a2*b2*c3*x1 + a1*a2*b2*c3*x1 + a1*a3*b2*c3*x1 + a2*a3*b2*c3*x1 + a1*b1*b2*c3*x1 + a2*b1*b2*c3*x1 + a1*a2*b1*b2*c3*x1 + a3*b1*b2*c3*x1 + a1*a3*b1*b2*c3*x1 + a2*b3*c3*x1 + a1*a2*b3*c3*x1 + a2*a3*b3*c3*x1 + a2*b1*b3*c3*x1 + a1*a2*b1*b3*c3*x1 + b2*b3*c3*x1 + a1*b2*b3*c3*x1 + a1*a3*b2*b3*c3*x1 + a2*c1*c3*x1 + b2*c1*c3*x1 + a2*a3*b2*c1*c3*x1 + b1*b2*c1*c3*x1 + a1*b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a2*a3*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + a1*b2*b3*c1*c3*x1 + a2*b2*b3*c1*c3*x1 + a2*a3*b2*b3*c1*c3*x1 + b1*b2*b3*c1*c3*x1 + a2*c2*c3*x1 + b1*c2*c3*x1 + a1*b1*c2*c3*x1 + a1*b2*c2*c3*x1 + a2*b2*c2*c3*x1 + a2*a3*b2*c2*c3*x1 + b3*c2*c3*x1 + a2*b3*c2*c3*x1 + a2*a3*b3*c2*c3*x1 + a2*b1*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + a1*b1*b2*b3*c2*c3*x1 + a2*c1*c2*c3*x1 + a3*b2*c1*c2*c3*x1 + a2*a3*b2*c1*c2*c3*x1 + b3*c1*c2*c3*x1 + a2*b3*c1*c2*c3*x1 + a2*a3*b3*c1*c2*c3*x1 + b2*b3*c1*c2*c3*x1 + a2*b2*b3*c1*c2*c3*x1 + b1*b2*b3*c1*c2*c3*x1 + a3*b1*x2 + a1*a3*b2*x2 + a3*b1*b2*x2 + a1*a3*b1*b2*x2 + a1*a3*b3*x2 + a1*b1*b3*x2 + a2*b1*b3*x2 + a1*a2*b1*b3*x2 + a1*a3*b1*b3*x2 + a3*b2*c1*x2 + a1*a3*b2*c1*x2 + a3*b1*b2*c1*x2 + a1*a2*b3*c1*x2 + a3*b3*c1*x2 + a1*a3*b3*c1*x2 + a1*b1*b3*c1*x2 + a3*b1*b3*c1*x2 + a3*b1*c2*x2 + a1*a3*b2*c2*x2 + a1*a3*b1*b2*c2*x2 + a1*b3*c2*x2 + a1*a2*b3*c2*x2 + a1*a3*b3*c2*x2 + a1*b1*b3*c2*x2 + a2*b1*b3*c2*x2 + a1*a2*b1*b3*c2*x2 + a3*b1*b3*c2*x2 + a1*a3*b1*b3*c2*x2 + b1*b2*b3*c2*x2 + a3*b1*c1*c2*x2 + a3*b2*c1*c2*x2 + a1*a3*b2*c1*c2*x2 + a3*b1*b2*c1*c2*x2 + a1*b3*c1*c2*x2 + a2*b3*c1*c2*x2 + a1*a2*b3*c1*c2*x2 + a3*b3*c1*c2*x2 + a1*a3*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a1*b1*b3*c1*c2*x2 + a2*b1*b3*c1*c2*x2 + a3*b1*b3*c1*c2*x2 + b1*c3*x2 + a1*b1*c3*x2 + a2*b1*c3*x2 + a3*b1*c3*x2 + a1*a2*b2*c3*x2 + a1*a3*b2*c3*x2 + a1*b1*b2*c3*x2 + a1*a2*b1*b2*c3*x2 + a1*a3*b1*b2*c3*x2 + a1*a2*b3*c3*x2 + a1*a2*b1*b3*c3*x2 + a3*b1*b3*c3*x2 + a1*b2*b3*c3*x2 + a1*a3*b2*b3*c3*x2 + a1*b1*c1*c3*x2 + a2*b1*c1*c3*x2 + a3*b1*c1*c3*x2 + a2*b2*c1*c3*x2 + a1*a2*b2*c1*c3*x2 + a3*b2*c1*c3*x2 + a1*a3*b2*c1*c3*x2 + a1*b1*b2*c1*c3*x2 + a2*b1*b2*c1*c3*x2 + a3*b1*b2*c1*c3*x2 + a1*a2*b3*c1*c3*x2 + a3*b3*c1*c3*x2 + b1*b3*c1*c3*x2 + b2*b3*c1*c3*x2 + a1*b2*b3*c1*c3*x2 + a2*b2*b3*c1*c3*x2 + a3*b1*b2*b3*c1*c3*x2 + b1*c2*c3*x2 + a1*b1*c2*c3*x2 + a1*b2*c2*c3*x2 + a2*b1*b3*c2*c3*x2 + a1*b1*b2*b3*c2*c3*x2 + c1*c2*c3*x2 + a1*c1*c2*c3*x2 + b1*c1*c2*c3*x2 + b2*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + b3*c1*c2*c3*x2 + a1*b3*c1*c2*c3*x2 + a3*b3*c1*c2*c3*x2 + b2*b3*c1*c2*c3*x2 + a1*b2*b3*c1*c2*c3*x2 + b3*x1*x2 + a3*c2*x1*x2 + b3*c2*x1*x2 + c3*x1*x2 + a2*c3*x1*x2 + a3*c3*x1*x2 + b2*c1*c3*x1*x2 + a3*b3*c1*c3*x1*x2 + b3*c2*c3*x1*x2 + c1*c2*c3*x1*x2 + a1*a2*x3 + a1*a2*b1*x3 + a1*b2*x3 + a1*a3*b2*x3 + b1*b2*x3 + a1*b1*b2*x3 + a2*b1*b2*x3 + a1*a2*b1*b2*x3 + a3*b1*b2*x3 + a1*a3*b1*b2*x3 + a1*a2*b1*b3*x3 + a2*a3*b1*b3*x3 + a1*b2*b3*x3 + a1*a3*b2*b3*x3 + b1*b2*b3*x3 + a2*c1*x3 + a1*a2*c1*x3 + b2*c1*x3 + a1*a2*b2*c1*x3 + a3*b2*c1*x3 + a1*a3*b2*c1*x3 + b1*b2*c1*x3 + a1*b1*b2*c1*x3 + a3*b1*b2*c1*x3 + a1*a2*b3*c1*x3 + a2*a3*b3*c1*x3 + a2*b1*b3*c1*x3 + b2*b3*c1*x3 + a1*b2*b3*c1*x3 + a2*b2*b3*c1*x3 + a3*b1*b2*b3*c1*x3 + a1*a2*c2*x3 + b1*c2*x3 + a2*b1*c2*x3 + a3*b1*c2*x3 + a1*a2*b2*c2*x3 + a1*a3*b2*c2*x3 + a1*b1*b2*c2*x3 + a3*b1*b2*c2*x3 + a1*b3*c2*x3 + a1*a2*b3*c2*x3 + b1*b3*c2*x3 + a2*b1*b3*c2*x3 + b1*b2*b3*c2*x3 + a1*b1*b2*b3*c2*x3 + c1*c2*x3 + a2*c1*c2*x3 + a2*b1*c1*c2*x3 + a3*b1*c1*c2*x3 + b2*c1*c2*x3 + a2*b2*c1*c2*x3 + a3*b2*c1*c2*x3 + a1*b1*b2*c1*c2*x3 + a2*b1*b2*c1*c2*x3 + a3*b1*b2*c1*c2*x3 + a2*b3*c1*c2*x3 + a3*b3*c1*c2*x3 + a1*b1*b3*c1*c2*x3 + a2*b1*b3*c1*c2*x3 + a3*b1*b3*c1*c2*x3 + a1*b2*b3*c1*c2*x3 + a3*b2*b3*c1*c2*x3 + a1*b2*c3*x3 + a1*a2*b2*c3*x3 + a1*a3*b2*c3*x3 + b1*b2*c3*x3 + a1*b1*b2*c3*x3 + a1*a2*b1*b2*c3*x3 + a3*b1*b2*c3*x3 + a1*a3*b1*b2*c3*x3 + a1*a2*b3*c3*x3 + a1*a2*b1*b3*c3*x3 + a2*a3*b1*b3*c3*x3 + a1*b2*b3*c3*x3 + a1*a3*b2*b3*c3*x3 + b2*c1*c3*x3 + a1*b2*c1*c3*x3 + a1*a2*b2*c1*c3*x3 + a3*b2*c1*c3*x3 + a1*a3*b2*c1*c3*x3 + a1*b1*b2*c1*c3*x3 + a2*b1*b2*c1*c3*x3 + a3*b1*b2*c1*c3*x3 + a1*a2*b3*c1*c3*x3 + a2*a3*b3*c1*c3*x3 + a1*b2*b3*c1*c3*x3 + a2*b2*b3*c1*c3*x3 + a3*b1*b2*b3*c1*c3*x3 + a1*c2*c3*x3 + b1*c2*c3*x3 + a1*a2*b2*c2*c3*x3 + a1*a3*b2*c2*c3*x3 + a1*b3*c2*c3*x3 + a1*a2*b3*c2*c3*x3 + a2*b1*b3*c2*c3*x3 + a3*b1*b3*c2*c3*x3 + a1*b2*b3*c2*c3*x3 + b1*b2*b3*c2*c3*x3 + a1*b1*b2*b3*c2*c3*x3 + c1*c2*c3*x3 + b1*c1*c2*c3*x3 + a2*b2*c1*c2*c3*x3 + a3*b2*c1*c2*c3*x3 + b1*b2*c1*c2*c3*x3 + a2*b1*b2*c1*c2*c3*x3 + a3*b1*b2*c1*c2*c3*x3 + a1*b3*c1*c2*c3*x3 + a2*b3*c1*c2*c3*x3 + a3*b3*c1*c2*c3*x3 + b1*b3*c1*c2*c3*x3 + a2*b1*b3*c1*c2*c3*x3 + a3*b1*b3*c1*c2*c3*x3 + a1*b2*b3*c1*c2*c3*x3 + a3*b2*b3*c1*c2*c3*x3 + b1*b2*b3*c1*c2*c3*x3 + b2*x1*x3 + a2*c1*x1*x3 + a3*c2*x1*x3 + a2*b2*c2*x1*x3 + a3*b2*c2*x1*x3 + b3*c2*x1*x3 + a2*b3*c2*x1*x3 + a3*b3*c2*x1*x3 + b2*b3*c2*x1*x3 + c1*c2*x1*x3 + b2*c1*c2*x1*x3 + a2*b2*c1*c2*x1*x3 + a3*b2*c1*c2*x1*x3 + b3*c1*c2*x1*x3 + a2*b3*c1*c2*x1*x3 + a3*b3*c1*c2*x1*x3 + b2*b3*c1*c2*x1*x3 + a2*c3*x1*x3 + b2*c1*c3*x1*x3 + b2*c2*c3*x1*x3 + a2*b2*c2*c3*x1*x3 + a3*b2*c2*c3*x1*x3 + a2*b3*c2*c3*x1*x3 + a3*b3*c2*c3*x1*x3 + b2*b3*c2*c3*x1*x3 + a2*b2*c1*c2*c3*x1*x3 + a3*b2*c1*c2*c3*x1*x3 + b3*c1*c2*c3*x1*x3 + a2*b3*c1*c2*c3*x1*x3 + a3*b3*c1*c2*c3*x1*x3 + b2*b3*c1*c2*c3*x1*x3 + a2*a3*y1 + a1*a2*b3*y1 + a2*a3*b3*y1 + b2*b3*y1 + a1*b2*b3*y1 + a3*b2*b3*y1 + a2*a3*c1*y1 + a3*b2*c1*y1 + a3*b1*b2*c1*y1 + a2*b3*c1*y1 + a1*b2*b3*c1*y1 + a3*b2*b3*c1*y1 + a2*a3*c2*y1 + a1*a3*b1*b2*c2*y1 + b3*c2*y1 + a1*b3*c2*y1 + a2*b3*c2*y1 + a3*b3*c2*y1 + b1*b3*c2*y1 + a2*b1*b3*c2*y1 + a1*a2*b1*b3*c2*y1 + a3*b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + a2*b2*b3*c2*y1 + a3*b2*b3*c2*y1 + b1*b2*b3*c2*y1 + a1*b1*b2*b3*c2*y1 + a3*c1*c2*y1 + a3*b2*c1*c2*y1 + a1*b3*c1*c2*y1 + a2*b3*c1*c2*y1 + a3*b3*c1*c2*y1 + a2*a3*b3*c1*c2*y1 + a1*b1*b3*c1*c2*y1 + b2*b3*c1*c2*y1 + a2*b2*b3*c1*c2*y1 + a3*b2*b3*c1*c2*y1 + a2*a3*b2*b3*c1*c2*y1 + a2*b2*c3*y1 + b1*b2*c3*y1 + a1*b1*b2*c3*y1 + a1*a2*b1*b2*c3*y1 + a1*a3*b1*b2*c3*y1 + a2*b3*c3*y1 + a1*a2*b1*b3*c3*y1 + a1*b2*b3*c3*y1 + a1*a3*b2*b3*c3*y1 + a2*a3*b2*b3*c3*y1 + b1*b2*b3*c3*y1 + a3*b1*b2*b3*c3*y1 + a2*c1*c3*y1 + b2*c1*c3*y1 + a2*a3*b2*c1*c3*y1 + a1*b1*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a2*a3*b3*c1*c3*y1 + a2*b1*b3*c1*c3*y1 + a1*b2*b3*c1*c3*y1 + a2*b2*b3*c1*c3*y1 + a2*a3*b2*b3*c1*c3*y1 + b1*b2*b3*c1*c3*y1 + a1*c2*c3*y1 + a1*b1*c2*c3*y1 + b2*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + a3*b2*c2*c3*y1 + b1*b2*c2*c3*y1 + a1*b3*c2*c3*y1 + a3*b3*c2*c3*y1 + b1*b3*c2*c3*y1 + a2*b1*b3*c2*c3*y1 + b2*b3*c2*c3*y1 + a1*b2*b3*c2*c3*y1 + a2*b2*b3*c2*c3*y1 + a1*b1*b2*b3*c2*c3*y1 + c1*c2*c3*y1 + a2*c1*c2*c3*y1 + a3*b2*c1*c2*c3*y1 + a2*a3*b2*c1*c2*c3*y1 + b3*c1*c2*c3*y1 + a2*b3*c1*c2*c3*y1 + a2*a3*b3*c1*c2*c3*y1 + b2*b3*c1*c2*c3*y1 + a2*b2*b3*c1*c2*c3*y1 + b1*b2*b3*c1*c2*c3*y1 + a3*b2*c2*x1*y1 + b3*c2*x1*y1 + a2*b3*c2*x1*y1 + a3*b3*c2*x1*y1 + b2*b3*c2*x1*y1 + b2*c3*x1*y1 + a2*b2*c3*x1*y1 + a3*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + c2*c3*x1*y1 + b3*c2*c3*x1*y1 + b2*b3*c2*c3*x1*y1 + b3*x2*y1 + a3*c2*x2*y1 + b3*c2*x2*y1 + c3*x2*y1 + a2*c3*x2*y1 + a3*c3*x2*y1 + b2*c3*x2*y1 + a3*b3*c3*x2*y1 + b2*c1*c3*x2*y1 + a3*b3*c1*c3*x2*y1 + c2*c3*x2*y1 + b3*c2*c3*x2*y1 + c1*c2*c3*x2*y1 + a2*x3*y1 + b2*x3*y1 + a2*c1*x3*y1 + c2*x3*y1 + a3*c2*x3*y1 + b2*c2*x3*y1 + c1*c2*x3*y1 + b2*c1*c2*x3*y1 + a2*b2*c1*c2*x3*y1 + a3*b2*c1*c2*x3*y1 + b3*c1*c2*x3*y1 + a2*b3*c1*c2*x3*y1 + a3*b3*c1*c2*x3*y1 + b2*b3*c1*c2*x3*y1 + a2*c3*x3*y1 + b2*c3*x3*y1 + b2*c1*c3*x3*y1 + b2*c2*c3*x3*y1 + b3*c2*c3*x3*y1 + a2*b2*c1*c2*c3*x3*y1 + a3*b2*c1*c2*c3*x3*y1 + b3*c1*c2*c3*x3*y1 + a2*b3*c1*c2*c3*x3*y1 + a3*b3*c1*c2*c3*x3*y1 + b2*b3*c1*c2*c3*x3*y1 + a1*a2*b3*y2 + a1*b2*b3*y2 + a2*b3*c1*y2 + b1*b3*c1*y2 + a1*b1*b3*c1*y2 + a2*b1*b3*c1*y2 + b2*b3*c1*y2 + b1*b2*b3*c1*y2 + a1*a3*b1*b2*c2*y2 + a1*b3*c2*y2 + b1*b3*c2*y2 + a2*b1*b3*c2*y2 + a1*a2*b1*b3*c2*y2 + a3*b1*b3*c2*y2 + a1*a3*b1*b3*c2*y2 + b1*b2*b3*c2*y2 + a1*b1*b2*b3*c2*y2 + a3*b1*c1*c2*y2 + a1*a3*b2*c1*c2*y2 + a1*a2*b3*c1*c2*y2 + a1*a3*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a1*b1*b3*c1*c2*y2 + a1*b2*b3*c1*c2*y2 + a1*b1*c3*y2 + b1*b2*c3*y2 + a1*b1*b2*c3*y2 + a1*a2*b1*b2*c3*y2 + a1*a3*b1*b2*c3*y2 + a1*a2*b1*b3*c3*y2 + a1*b2*b3*c3*y2 + a1*a3*b2*b3*c3*y2 + b1*b2*b3*c3*y2 + a3*b1*b2*b3*c3*y2 + c1*c3*y2 + a1*c1*c3*y2 + a1*b1*c1*c3*y2 + a2*b1*c1*c3*y2 + a3*b1*c1*c3*y2 + a1*a2*b2*c1*c3*y2 + a1*a3*b2*c1*c3*y2 + b1*b2*c1*c3*y2 + a1*b1*b2*c1*c3*y2 + a2*b3*c1*c3*y2 + a1*a2*b3*c1*c3*y2 + b1*b3*c1*c3*y2 + a2*b1*b3*c1*c3*y2 + a3*b1*b3*c1*c3*y2 + b2*b3*c1*c3*y2 + a1*b2*b3*c1*c3*y2 + a2*b2*b3*c1*c3*y2 + a3*b1*b2*b3*c1*c3*y2 + a1*c2*c3*y2 + a1*b1*c2*c3*y2 + a1*b2*c2*c3*y2 + b1*b2*c2*c3*y2 + a1*b3*c2*c3*y2 + b1*b3*c2*c3*y2 + a2*b1*b3*c2*c3*y2 + a1*b2*b3*c2*c3*y2 + a1*b1*b2*b3*c2*c3*y2 + a1*c1*c2*c3*y2 + b1*c1*c2*c3*y2 + b2*c1*c2*c3*y2 + b1*b2*c1*c2*c3*y2 + a1*b3*c1*c2*c3*y2 + a3*b3*c1*c2*c3*y2 + b1*b3*c1*c2*c3*y2 + a1*b2*b3*c1*c2*c3*y2 + b1*b2*b3*c1*c2*c3*y2 + a3*c2*x1*y2 + a3*b2*c2*x1*y2 + a2*b3*c2*x1*y2 + a3*b3*c2*x1*y2 + b2*b3*c2*x1*y2 + a3*b2*c1*c2*x1*y2 + b3*c1*c2*x1*y2 + a2*b3*c1*c2*x1*y2 + a3*b3*c1*c2*x1*y2 + b2*b3*c1*c2*x1*y2 + a2*c3*x1*y2 + a3*c3*x1*y2 + b2*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + a2*b3*c3*x1*y2 + c1*c3*x1*y2 + b2*c1*c3*x1*y2 + a2*b2*c1*c3*x1*y2 + a3*b2*c1*c3*x1*y2 + a2*b3*c1*c3*x1*y2 + c2*c3*x1*y2 + b2*b3*c2*c3*x1*y2 + c1*c2*c3*x1*y2 + b3*c1*c2*c3*x1*y2 + b2*b3*c1*c2*c3*x1*y2 + a3*c2*y1*y2 + b3*c2*y1*y2 + a3*b2*c1*c2*y1*y2 + b3*c1*c2*y1*y2 + a2*b3*c1*c2*y1*y2 + a3*b3*c1*c2*y1*y2 + b2*b3*c1*c2*y1*y2 + c3*y1*y2 + a2*c3*y1*y2 + a3*c3*y1*y2 + c1*c3*y1*y2 + b2*c1*c3*y1*y2 + a2*b2*c1*c3*y1*y2 + a3*b2*c1*c3*y1*y2 + a2*b3*c1*c3*y1*y2 + b3*c2*c3*y1*y2 + c1*c2*c3*y1*y2 + b3*c1*c2*c3*y1*y2 + b2*b3*c1*c2*c3*y1*y2 + a1*a2*b1*y3 + a1*a2*b2*y3 + a1*b1*b2*y3 + a2*b1*b2*y3 + a1*a2*b3*y3 + a1*b2*b3*y3 + a2*c1*y3 + a1*a2*c1*y3 + a2*b1*c1*y3 + b2*c1*y3 + a1*b2*c1*y3 + a1*b1*b2*c1*y3 + a2*b1*b2*c1*y3 + a2*b3*c1*y3 + b2*b3*c1*y3 + a1*b2*b3*c1*y3 + a2*b2*b3*c1*y3 + a1*c2*y3 + a1*a2*c2*y3 + b1*c2*y3 + a2*b1*c2*y3 + b1*b2*c2*y3 + a1*b1*b2*c2*y3 + a3*b1*b2*c2*y3 + a1*b3*c2*y3 + b1*b3*c2*y3 + a1*b1*b3*c2*y3 + a2*b1*b3*c2*y3 + a3*b1*b3*c2*y3 + b1*b2*b3*c2*y3 + c1*c2*y3 + a2*c1*c2*y3 + b1*c1*c2*y3 + a2*b1*c1*c2*y3 + a3*b1*c1*c2*y3 + b1*b2*c1*c2*y3 + a1*b1*b2*c1*c2*y3 + a1*b3*c1*c2*y3 + a1*b1*b3*c1*c2*y3 + a1*b2*c3*y3 + b1*b2*c3*y3 + a1*b1*b2*c3*y3 + a1*a2*b1*b2*c3*y3 + a3*b1*b2*c3*y3 + a1*a3*b1*b2*c3*y3 + a1*a2*b1*b3*c3*y3 + a1*b2*b3*c3*y3 + a1*a3*b2*b3*c3*y3 + b1*b2*b3*c3*y3 + a3*b1*b2*b3*c3*y3 + b2*c1*c3*y3 + a1*b2*c1*c3*y3 + a2*b2*c1*c3*y3 + a1*a2*b2*c1*c3*y3 + a1*a3*b2*c1*c3*y3 + b1*b2*c1*c3*y3 + a1*b1*b2*c1*c3*y3 + a2*b3*c1*c3*y3 + a1*a2*b3*c1*c3*y3 + a2*b1*b3*c1*c3*y3 + a1*b2*b3*c1*c3*y3 + a2*b2*b3*c1*c3*y3 + a3*b2*b3*c1*c3*y3 + a3*b1*b2*b3*c1*c3*y3 + a1*c2*c3*y3 + a1*a2*b2*c2*c3*y3 + a1*a3*b2*c2*c3*y3 + a1*a2*b3*c2*c3*y3 + b1*b3*c2*c3*y3 + a2*b1*b3*c2*c3*y3 + b1*b2*b3*c2*c3*y3 + a1*b1*b2*b3*c2*c3*y3 + a3*b1*b2*b3*c2*c3*y3 + c1*c2*c3*y3 + b1*c1*c2*c3*y3 + a2*b2*c1*c2*c3*y3 + a3*b2*c1*c2*c3*y3 + b1*b2*c1*c2*c3*y3 + a2*b1*b2*c1*c2*c3*y3 + a3*b1*b2*c1*c2*c3*y3 + b3*c1*c2*c3*y3 + a1*b3*c1*c2*c3*y3 + a2*b3*c1*c2*c3*y3 + a2*b1*b3*c1*c2*c3*y3 + a3*b1*b3*c1*c2*c3*y3 + b2*b3*c1*c2*c3*y3 + a1*b2*b3*c1*c2*c3*y3 + a2*x1*y3 + a2*c1*x1*y3 + c2*x1*y3 + a3*c2*x1*y3 + b2*c2*x1*y3 + c1*c2*x1*y3 + b2*c1*c2*x1*y3 + a2*c3*x1*y3 + b2*c3*x1*y3 + a2*b2*c3*x1*y3 + a3*b2*c3*x1*y3 + a2*b3*c3*x1*y3 + b2*c1*c3*x1*y3 + a2*b2*c1*c3*x1*y3 + a3*b2*c1*c3*x1*y3 + a2*b3*c1*c3*x1*y3 + b2*c2*c3*x1*y3 + a2*b2*c2*c3*x1*y3 + a3*b2*c2*c3*x1*y3 + b3*c2*c3*x1*y3 + a2*b3*c2*c3*x1*y3 + a2*b2*c1*c2*c3*x1*y3 + a3*b2*c1*c2*c3*x1*y3 + a2*b3*c1*c2*c3*x1*y3 + a3*b3*c1*c2*c3*x1*y3 + a2*c1*y1*y3 + a3*c2*y1*y3 + c1*c2*y1*y3 + b2*c1*c2*y1*y3 + a2*c3*y1*y3 + b2*c1*c3*y1*y3 + a2*b2*c1*c3*y1*y3 + a3*b2*c1*c3*y1*y3 + a2*b3*c1*c3*y1*y3 + b2*c2*c3*y1*y3 + b3*c2*c3*y1*y3 + a3*b3*c2*c3*y1*y3 + a2*b2*c1*c2*c3*y1*y3 + a3*b2*c1*c2*c3*y1*y3 + a2*b3*c1*c2*c3*y1*y3 + a3*b3*c1*c2*c3*y1*y3;
end;
#####################################################################
#####################################################################
#Space Group No. 101 ( P4_2cm)
#####################################################################
Ampin101:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin101:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin101:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Bdeltain101:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
Bmzin101:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + b1*b2*c2 + c2*z1;
end;
#####################################################################
Bxyin101:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + c1*x2*y1 + c1*x2*y2 + c1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 102 ( P4_2nm)
#####################################################################
Ampin102:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin102:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyzin102:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain102:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
CGAPin102:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3 + a1*a2*a3*b1 + a1*a2*a3*b2 + a2*a3*b1*b2 + a1*a2*a3*b1*b2 + a1*a2*b1*b3 + a1*a2*a3*b2*b3 + a1*b1*b2*b3 + a1*a2*a3*b1*b2*b3 + a2*a3*c1 + a1*a2*a3*b1*c1 + a3*b1*b2*c1 + a1*a3*b1*b2*c1 + a2*a3*b1*b2*c1 + a1*a2*a3*b1*b2*c1 + a2*b1*b3*c1 + a1*a2*b1*b3*c1 + a1*a2*a3*b1*b3*c1 + b1*b2*b3*c1 + a1*b1*b2*b3*c1 + a1*a2*a3*b1*c2 + a1*a3*b2*c2 + a2*a3*b1*b2*c2 + a1*a2*a3*b1*b2*c2 + a1*b1*b3*c2 + a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a1*a2*a3*b1*b3*c2 + a1*b2*b3*c2 + a1*a2*b2*b3*c2 + a1*a3*b2*b3*c2 + b1*b2*b3*c2 + a1*a2*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a1*a3*b1*b2*b3*c2 + a3*b1*c1*c2 + a1*a3*b2*c1*c2 + a2*a3*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a2*a3*b1*b2*c1*c2 + a1*b3*c1*c2 + a1*b1*b3*c1*c2 + b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + a2*a3*b2*b3*c1*c2 + a1*b1*b2*b3*c1*c2 + a1*a2*b1*b2*b3*c1*c2 + a3*b1*b2*b3*c1*c2 + a1*a3*b1*b2*b3*c1*c2 + a2*a3*b1*b2*b3*c1*c2 + a1*a2*b1*c3 + a1*a3*b2*c3 + a1*b1*b2*c3 + a2*b1*b2*c3 + a1*a2*b1*b2*c3 + a2*a3*b1*b2*c3 + a1*b2*b3*c3 + a1*a3*b2*b3*c3 + b1*b2*b3*c3 + a2*b1*b2*b3*c3 + a3*b1*b2*b3*c3 + a2*a3*b1*b2*b3*c3 + a1*a2*a3*b1*b2*b3*c3 + a2*b1*c1*c3 + a2*a3*b1*c1*c3 + b1*b2*c1*c3 + a1*b1*b2*c1*c3 + a2*b1*b2*c1*c3 + a3*b1*b2*c1*c3 + a2*a3*b1*b2*c1*c3 + a2*b1*b3*c1*c3 + a2*a3*b1*b3*c1*c3 + b1*b2*b3*c1*c3 + a1*a3*b1*b2*b3*c1*c3 + a1*b1*c2*c3 + a3*b1*c2*c3 + a2*a3*b1*c2*c3 + a1*b2*c2*c3 + a2*b1*b2*c2*c3 + a2*a3*b1*b2*c2*c3 + a1*b3*c2*c3 + b1*b3*c2*c3 + a2*b1*b3*c2*c3 + a2*a3*b1*b3*c2*c3 + a1*b2*b3*c2*c3 + a1*a2*b1*b2*b3*c2*c3 + a1*a3*b1*b2*b3*c2*c3 + c1*c2*c3 + a3*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + b1*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + a1*b1*b2*b3*c1*c2*c3 + a2*b1*b2*b3*c1*c2*c3 + a3*b1*b2*b3*c1*c2*c3 + a2*a3*x1 + a2*a3*b1*x1 + a3*b1*b2*x1 + a2*a3*b1*b2*x1 + a2*b1*b3*x1 + a1*a2*b1*b3*x1 + a2*a3*b1*b3*x1 + a1*b2*b3*x1 + a2*b2*b3*x1 + a3*b2*b3*x1 + a2*a3*b1*c1*x1 + a1*a3*b2*c1*x1 + a2*a3*b1*b2*c1*x1 + a1*a2*b3*c1*x1 + a2*a3*b3*c1*x1 + a1*a2*b1*b3*c1*x1 + a2*a3*b1*b3*c1*x1 + a1*b2*b3*c1*x1 + a2*b2*b3*c1*x1 + a3*b2*b3*c1*x1 + a3*b1*c2*x1 + a1*a3*b1*c2*x1 + a2*a3*b1*c2*x1 + a3*b2*c2*x1 + a1*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + a2*a3*b1*b2*c2*x1 + a1*a2*b3*c2*x1 + a2*a3*b3*c2*x1 + b1*b3*c2*x1 + a1*b1*b3*c2*x1 + a2*b1*b3*c2*x1 + a1*a2*b1*b3*c2*x1 + a3*b1*b3*c2*x1 + a2*a3*b1*b3*c2*x1 + a2*b2*b3*c2*x1 + a1*a3*b1*c1*c2*x1 + a3*b2*c1*c2*x1 + a3*b1*b2*c1*c2*x1 + a1*a3*b1*b2*c1*c2*x1 + b1*b3*c1*c2*x1 + a1*a2*b1*b3*c1*c2*x1 + a1*a3*b1*b3*c1*c2*x1 + a2*b2*b3*c1*c2*x1 + a3*b1*b2*b3*c1*c2*x1 + a2*b1*c3*x1 + b2*c3*x1 + a1*a2*b2*c3*x1 + a2*a3*b2*c3*x1 + b1*b2*c3*x1 + a1*b1*b2*c3*x1 + a1*a2*b1*b2*c3*x1 + a3*b1*b2*c3*x1 + a2*a3*b1*b2*c3*x1 + a1*a2*b3*c3*x1 + a2*a3*b3*c3*x1 + a1*a2*b1*b3*c3*x1 + b2*b3*c3*x1 + a1*b2*b3*c3*x1 + a2*b2*b3*c3*x1 + a3*b2*b3*c3*x1 + a2*b1*c1*c3*x1 + b2*c1*c3*x1 + a1*b2*c1*c3*x1 + a1*a3*b2*c1*c3*x1 + a2*a3*b2*c1*c3*x1 + a2*b1*b2*c1*c3*x1 + a1*a3*b1*b2*c1*c3*x1 + a2*a3*b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + b2*b3*c1*c3*x1 + a3*b2*b3*c1*c3*x1 + a1*a3*b2*b3*c1*c3*x1 + a2*a3*b2*b3*c1*c3*x1 + b1*c2*c3*x1 + a2*b1*c2*c3*x1 + a1*a2*b1*c2*c3*x1 + a1*a3*b1*c2*c3*x1 + b2*c2*c3*x1 + a1*a3*b2*c2*c3*x1 + a2*a3*b2*c2*c3*x1 + a2*b1*b2*c2*c3*x1 + a1*a2*b1*b2*c2*c3*x1 + a2*a3*b1*b2*c2*c3*x1 + a2*b3*c2*c3*x1 + b1*b3*c2*c3*x1 + a1*b1*b3*c2*c3*x1 + a2*b1*b3*c2*c3*x1 + a1*a2*b1*b3*c2*c3*x1 + a1*a3*b1*b3*c2*c3*x1 + a1*b2*b3*c2*c3*x1 + a1*a3*b2*b3*c2*c3*x1 + a2*a3*b2*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + b2*c1*c2*c3*x1 + a1*b2*c1*c2*c3*x1 + a2*b2*c1*c2*c3*x1 + b1*b2*c1*c2*c3*x1 + a1*b1*b2*c1*c2*c3*x1 + a2*b1*b2*c1*c2*c3*x1 + a1*b2*b3*c1*c2*c3*x1 + a2*b2*b3*c1*c2*c3*x1 + b1*b2*b3*c1*c2*c3*x1 + a2*a3*b1*x2 + a1*a3*b2*x2 + a3*b1*b2*x2 + a1*a3*b1*b2*x2 + a1*b3*x2 + a1*b1*b3*x2 + a1*a2*b1*b3*x2 + a3*b1*b3*x2 + a2*a3*b1*b3*x2 + a1*b2*b3*x2 + a1*a3*b2*b3*x2 + a2*a3*b1*c1*x2 + a1*a3*b2*c1*x2 + a2*a3*b2*c1*x2 + a3*b1*b2*c1*x2 + a1*a3*b1*b2*c1*x2 + b3*c1*x2 + a1*b3*c1*x2 + a2*b3*c1*x2 + a3*b3*c1*x2 + a1*b1*b3*c1*x2 + a1*a2*b1*b3*c1*x2 + a3*b1*b3*c1*x2 + a2*a3*b1*b3*c1*x2 + a1*b2*b3*c1*x2 + a2*b2*b3*c1*x2 + a1*a3*b2*b3*c1*x2 + a2*a3*b2*b3*c1*x2 + a3*b1*c2*x2 + a1*a3*b1*c2*x2 + a2*a3*b1*c2*x2 + a3*b1*b2*c2*x2 + a1*b3*c2*x2 + a1*a2*b3*c2*x2 + b1*b3*c2*x2 + a1*a3*b1*b3*c2*x2 + a2*a3*b1*b3*c2*x2 + a1*a3*b2*b3*c2*x2 + a1*b1*b2*b3*c2*x2 + a3*b1*c1*c2*x2 + a2*a3*b1*c1*c2*x2 + a2*a3*b1*b2*c1*c2*x2 + b3*c1*c2*x2 + a1*b3*c1*c2*x2 + a2*b3*c1*c2*x2 + a3*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a1*b1*b3*c1*c2*x2 + a1*a2*b1*b3*c1*c2*x2 + a2*a3*b1*b3*c1*c2*x2 + a3*b2*b3*c1*c2*x2 + b1*b2*b3*c1*c2*x2 + a1*b1*b2*b3*c1*c2*x2 + a2*b1*b2*b3*c1*c2*x2 + a3*b1*b2*b3*c1*c2*x2 + a2*b1*c3*x2 + a1*b2*c3*x2 + a1*a2*b2*c3*x2 + a1*a3*b2*c3*x2 + b1*b2*c3*x2 + a1*b1*b2*c3*x2 + a2*b1*b2*c3*x2 + a3*b1*b2*c3*x2 + a1*b3*c3*x2 + a1*a2*b3*c3*x2 + a2*b1*b3*c3*x2 + a3*b1*b3*c3*x2 + a1*a3*b1*b3*c3*x2 + a1*b2*b3*c3*x2 + a1*a3*b2*b3*c3*x2 + a2*b1*c1*c3*x2 + a3*b2*c1*c3*x2 + b3*c1*c3*x2 + b1*b3*c1*c3*x2 + b2*b3*c1*c3*x2 + a3*b2*b3*c1*c3*x2 + b1*b2*b3*c1*c3*x2 + a3*b1*b2*b3*c1*c3*x2 + b1*c2*c3*x2 + a2*b1*c2*c3*x2 + a1*a2*b1*c2*c3*x2 + a1*a3*b1*c2*c3*x2 + a1*a3*b2*c2*c3*x2 + a2*b1*b2*c2*c3*x2 + a1*a2*b1*b2*c2*c3*x2 + a2*a3*b1*b2*c2*c3*x2 + a1*b3*c2*c3*x2 + b1*b3*c2*c3*x2 + a1*b1*b3*c2*c3*x2 + a1*a2*b1*b3*c2*c3*x2 + a3*b1*b3*c2*c3*x2 + a1*a3*b1*b3*c2*c3*x2 + a1*a3*b2*b3*c2*c3*x2 + b1*b2*b3*c2*c3*x2 + a2*b1*b2*b3*c2*c3*x2 + b1*c1*c2*c3*x2 + a1*b1*c1*c2*c3*x2 + a2*b1*c1*c2*c3*x2 + b2*c1*c2*c3*x2 + a1*b1*b2*c1*c2*c3*x2 + a2*b1*b2*c1*c2*c3*x2 + b3*c1*c2*c3*x2 + a1*b1*b3*c1*c2*c3*x2 + a2*b1*b3*c1*c2*c3*x2 + a3*b1*b2*b3*c1*c2*c3*x2 + a3*b1*c1*c2*x1*x2 + a3*b2*c1*c2*x1*x2 + a1*b3*c1*c2*x1*x2 + a2*b3*c1*c2*x1*x2 + a3*b3*c1*c2*x1*x2 + b2*b3*c1*c2*x1*x2 + b3*c1*c3*x1*x2 + a3*b3*c1*c3*x1*x2 + a1*b1*c1*c2*c3*x1*x2 + a2*b1*c1*c2*c3*x1*x2 + a3*b1*c1*c2*c3*x1*x2 + b2*c1*c2*c3*x1*x2 + a1*b2*c1*c2*c3*x1*x2 + a2*b2*c1*c2*c3*x1*x2 + a3*b2*c1*c2*c3*x1*x2 + b1*b2*c1*c2*c3*x1*x2 + a1*b3*c1*c2*c3*x1*x2 + a2*b3*c1*c2*c3*x1*x2 + a3*b3*c1*c2*c3*x1*x2 + b2*b3*c1*c2*c3*x1*x2 + a1*a2*b1*x3 + a2*a3*b1*x3 + a1*a3*b2*x3 + a2*b1*b2*x3 + a1*a2*b1*b2*x3 + a3*b1*b2*x3 + a1*a3*b1*b2*x3 + a2*b1*b3*x3 + a1*a2*b1*b3*x3 + a2*a3*b1*b3*x3 + a1*a3*b2*b3*x3 + a1*a2*b1*c1*x3 + a2*a3*b1*c1*x3 + a1*a3*b2*c1*x3 + a2*a3*b2*c1*x3 + a2*b1*b2*c1*x3 + a1*a2*b1*b2*c1*x3 + a3*b1*b2*c1*x3 + a1*a3*b1*b2*c1*x3 + a2*b1*b3*c1*x3 + a1*a2*b1*b3*c1*x3 + a2*a3*b1*b3*c1*x3 + a3*b2*b3*c1*x3 + a1*a3*b2*b3*c1*x3 + a2*a3*b2*b3*c1*x3 + a1*a2*b1*c2*x3 + a2*a3*b1*c2*x3 + a1*a3*b2*c2*x3 + a2*b1*b2*c2*x3 + a1*a2*b1*b2*c2*x3 + a3*b1*b2*c2*x3 + a1*a3*b1*b2*c2*x3 + a2*b1*b3*c2*x3 + a1*a2*b1*b3*c2*x3 + a2*a3*b1*b3*c2*x3 + a1*a3*b2*b3*c2*x3 + a1*a3*b2*c1*c2*x3 + a2*a3*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a3*b1*b2*c1*c2*x3 + a1*a3*b1*b2*c1*c2*x3 + a2*a3*b1*b2*c1*c2*x3 + b3*c1*c2*x3 + a1*b3*c1*c2*x3 + a2*b3*c1*c2*x3 + a3*b3*c1*c2*x3 + a1*b1*b3*c1*c2*x3 + a2*b1*b3*c1*c2*x3 + a3*b1*b3*c1*c2*x3 + a1*b2*b3*c1*c2*x3 + a2*b2*b3*c1*c2*x3 + a1*a3*b2*b3*c1*c2*x3 + a2*a3*b2*b3*c1*c2*x3 + a1*b1*b2*b3*c1*c2*x3 + a3*b1*b2*b3*c1*c2*x3 + a2*b1*c3*x3 + a1*b2*c3*x3 + a1*a2*b2*c3*x3 + a1*a3*b2*c3*x3 + b1*b2*c3*x3 + a1*b1*b2*c3*x3 + a2*b1*b2*c3*x3 + a3*b1*b2*c3*x3 + a1*a2*b3*c3*x3 + a1*b2*b3*c3*x3 + a2*b1*c1*c3*x3 + a3*b2*c1*c3*x3 + a3*b2*b3*c1*c3*x3 + b1*b2*b3*c1*c3*x3 + a2*b1*c2*c3*x3 + a1*b2*c2*c3*x3 + a1*a3*b2*c2*c3*x3 + b1*b2*c2*c3*x3 + a3*b1*b2*c2*c3*x3 + a1*a3*b1*b2*c2*c3*x3 + a2*a3*b1*b2*c2*c3*x3 + a1*b3*c2*c3*x3 + b1*b3*c2*c3*x3 + a1*b1*b3*c2*c3*x3 + a2*b1*b3*c2*c3*x3 + a3*b1*b3*c2*c3*x3 + a1*a3*b2*b3*c2*c3*x3 + b1*b2*b3*c2*c3*x3 + a3*b1*b2*b3*c2*c3*x3 + a3*b2*c1*c2*c3*x3 + b1*b2*c1*c2*c3*x3 + a3*b1*b2*c1*c2*c3*x3 + b3*c1*c2*c3*x3 + b1*b3*c1*c2*c3*x3 + b2*b3*c1*c2*c3*x3 + a3*b2*b3*c1*c2*c3*x3 + b1*b2*b3*c1*c2*c3*x3 + a3*b1*b2*b3*c1*c2*c3*x3 + c1*c2*x2*x3 + a1*b1*c1*c2*x2*x3 + a2*b1*c1*c2*x2*x3 + a3*b1*c1*c2*x2*x3 + b2*c1*c2*x2*x3 + a1*b2*c1*c2*x2*x3 + a2*b2*c1*c2*x2*x3 + a3*b2*c1*c2*x2*x3 + b1*b2*c1*c2*x2*x3 + a1*b3*c1*c2*x2*x3 + a2*b3*c1*c2*x2*x3 + a3*b3*c1*c2*x2*x3 + b2*b3*c1*c2*x2*x3 + a1*b1*c2*c3*x2*x3 + a2*b1*c2*c3*x2*x3 + a3*b1*c2*c3*x2*x3 + a1*b2*c2*c3*x2*x3 + a1*b3*c2*c3*x2*x3 + b1*b3*c2*c3*x2*x3 + b2*c1*c2*c3*x2*x3 + b1*b2*c1*c2*c3*x2*x3 + b3*c1*c2*c3*x2*x3 + b1*b3*c1*c2*c3*x2*x3 + a2*a3*y1 + a1*a3*b2*y1 + a1*a2*b3*y1 + a2*a3*b3*y1 + a3*b2*c1*y1 + a1*a3*b2*c1*y1 + a1*a2*b3*c1*y1 + a2*a3*b3*c1*y1 + a1*a3*b2*c2*y1 + a1*a3*b1*b2*c2*y1 + a1*a2*b3*c2*y1 + a2*a3*b3*c2*y1 + a1*a2*b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + a1*b1*b2*b3*c2*y1 + a1*a3*b1*c1*c2*y1 + a1*a3*b1*b2*c1*c2*y1 + a1*b1*b3*c1*c2*y1 + a1*a2*b1*b3*c1*c2*y1 + a1*a3*b1*b3*c1*c2*y1 + a1*b2*b3*c1*c2*y1 + a3*b2*b3*c1*c2*y1 + a1*b1*b2*b3*c1*c2*y1 + a1*b2*c3*y1 + a1*a2*b2*c3*y1 + a1*a3*b2*c3*y1 + a1*b1*b2*c3*y1 + a1*a2*b1*b2*c3*y1 + a1*a3*b1*b2*c3*y1 + a2*b3*c3*y1 + a1*a2*b3*c3*y1 + a2*a3*b3*c3*y1 + a1*a2*b1*b3*c3*y1 + a1*b2*b3*c3*y1 + a2*b2*b3*c3*y1 + a1*a3*b2*b3*c3*y1 + a2*a3*b2*b3*c3*y1 + b1*b2*b3*c3*y1 + a3*b1*b2*b3*c3*y1 + a1*b2*c1*c3*y1 + a1*a3*b2*c1*c3*y1 + a2*a3*b2*c1*c3*y1 + a1*a3*b1*b2*c1*c3*y1 + a2*a3*b1*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a3*b2*b3*c1*c3*y1 + a1*a3*b2*b3*c1*c3*y1 + a2*a3*b2*b3*c1*c3*y1 + a3*b1*b2*b3*c1*c3*y1 + a1*b1*c2*c3*y1 + a1*a2*b1*c2*c3*y1 + a1*a3*b1*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + a1*a3*b2*c2*c3*y1 + a2*a3*b2*c2*c3*y1 + a2*b1*b2*c2*c3*y1 + a1*a2*b1*b2*c2*c3*y1 + a2*a3*b1*b2*c2*c3*y1 + a2*b3*c2*c3*y1 + a1*a2*b1*b3*c2*c3*y1 + a1*a3*b1*b3*c2*c3*y1 + a2*b2*b3*c2*c3*y1 + a1*a3*b2*b3*c2*c3*y1 + a2*a3*b2*b3*c2*c3*y1 + b1*b2*b3*c2*c3*y1 + a3*b1*b2*b3*c2*c3*y1 + a1*b2*c1*c2*c3*y1 + a2*b2*c1*c2*c3*y1 + a1*b1*b2*c1*c2*c3*y1 + a2*b1*b2*c1*c2*c3*y1 + b2*b3*c1*c2*c3*y1 + a1*b2*b3*c1*c2*c3*y1 + a2*b2*b3*c1*c2*c3*y1 + b1*b2*b3*c1*c2*c3*y1 + a3*b2*c2*x1*y1 + a2*b3*c2*x1*y1 + a3*b3*c2*x1*y1 + b2*b3*c2*x1*y1 + a3*b1*c1*c2*x1*y1 + a3*b2*c1*c2*x1*y1 + a1*b3*c1*c2*x1*y1 + a2*b3*c1*c2*x1*y1 + a3*b3*c1*c2*x1*y1 + b2*b3*c1*c2*x1*y1 + b2*c3*x1*y1 + a2*b2*c3*x1*y1 + a3*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + a1*b1*c2*c3*x1*y1 + a2*b1*c2*c3*x1*y1 + a3*b1*c2*c3*x1*y1 + a1*b2*c2*c3*x1*y1 + a2*b2*c2*c3*x1*y1 + a3*b2*c2*c3*x1*y1 + a1*b3*c2*c3*x1*y1 + a2*b3*c2*c3*x1*y1 + a3*b3*c2*c3*x1*y1 + b1*b3*c2*c3*x1*y1 + b2*c1*c2*c3*x1*y1 + b1*b2*c1*c2*c3*x1*y1 + b3*c1*c2*c3*x1*y1 + b1*b3*c1*c2*c3*x1*y1 + b3*c3*x2*y1 + a3*b3*c3*x2*y1 + b3*c1*c3*x2*y1 + a3*b3*c1*c3*x2*y1 + a1*b1*c2*c3*x2*y1 + a2*b1*c2*c3*x2*y1 + a3*b1*c2*c3*x2*y1 + a1*b2*c2*c3*x2*y1 + a2*b2*c2*c3*x2*y1 + a3*b2*c2*c3*x2*y1 + b3*c2*c3*x2*y1 + a1*b3*c2*c3*x2*y1 + a2*b3*c2*c3*x2*y1 + a3*b3*c2*c3*x2*y1 + b1*b3*c2*c3*x2*y1 + b2*b3*c2*c3*x2*y1 + a1*b1*c1*c2*c3*x2*y1 + a2*b1*c1*c2*c3*x2*y1 + a3*b1*c1*c2*c3*x2*y1 + a1*b2*c1*c2*c3*x2*y1 + a2*b2*c1*c2*c3*x2*y1 + a3*b2*c1*c2*c3*x2*y1 + b3*c1*c2*c3*x2*y1 + a1*b3*c1*c2*c3*x2*y1 + a2*b3*c1*c2*c3*x2*y1 + a3*b3*c1*c2*c3*x2*y1 + b1*b3*c1*c2*c3*x2*y1 + b2*b3*c1*c2*c3*x2*y1 + a1*a3*b1*y2 + a1*a3*b2*y2 + a1*a3*b1*b2*y2 + a1*a2*b3*y2 + a1*b1*b3*y2 + a1*a2*b1*b3*y2 + a1*a3*b1*b3*y2 + a3*b1*c1*y2 + b1*b3*c1*y2 + a3*b1*b3*c1*y2 + a1*a3*b1*c2*y2 + a1*a3*b2*c2*y2 + a1*a3*b1*b2*c2*y2 + a1*a2*b3*c2*y2 + a1*b1*b3*c2*y2 + a1*a2*b1*b3*c2*y2 + a1*a3*b1*b3*c2*y2 + a3*b1*c1*c2*y2 + a2*a3*b1*c1*c2*y2 + a2*a3*b1*b2*c1*c2*y2 + b1*b3*c1*c2*y2 + a2*b1*b3*c1*c2*y2 + a1*a2*b1*b3*c1*c2*y2 + a3*b1*b3*c1*c2*y2 + a2*a3*b1*b3*c1*c2*y2 + b1*b2*b3*c1*c2*y2 + a1*b1*b2*b3*c1*c2*y2 + a3*b1*b2*b3*c1*c2*y2 + a1*b1*c3*y2 + a1*a2*b1*c3*y2 + a1*a3*b1*c3*y2 + a1*b2*c3*y2 + a1*a2*b2*c3*y2 + a1*a3*b2*c3*y2 + a1*b1*b2*c3*y2 + a1*a2*b1*b2*c3*y2 + a1*a3*b1*b2*c3*y2 + a1*a2*b3*c3*y2 + a1*a2*b1*b3*c3*y2 + a1*b2*b3*c3*y2 + a1*a3*b2*b3*c3*y2 + b1*b2*b3*c3*y2 + a3*b1*b2*b3*c3*y2 + b1*c1*c3*y2 + a1*b1*c1*c3*y2 + a1*b1*b2*c1*c3*y2 + a2*b1*b2*c1*c3*y2 + a3*b1*b2*c1*c3*y2 + b1*b3*c1*c3*y2 + a1*b1*b3*c1*c3*y2 + a2*b1*b3*c1*c3*y2 + b1*b2*b3*c1*c3*y2 + a3*b1*b2*b3*c1*c3*y2 + a1*b1*c2*c3*y2 + a1*a2*b1*c2*c3*y2 + a1*a3*b1*c2*c3*y2 + a1*b2*c2*c3*y2 + a1*a3*b2*c2*c3*y2 + a2*b1*b2*c2*c3*y2 + a1*a2*b1*b2*c2*c3*y2 + a2*a3*b1*b2*c2*c3*y2 + a1*b1*b3*c2*c3*y2 + a1*a2*b1*b3*c2*c3*y2 + a1*a3*b1*b3*c2*c3*y2 + a1*a3*b2*b3*c2*c3*y2 + b1*b2*b3*c2*c3*y2 + a3*b1*b2*b3*c2*c3*y2 + b1*c1*c2*c3*y2 + a1*b1*c1*c2*c3*y2 + a2*b1*c1*c2*c3*y2 + b1*b2*c1*c2*c3*y2 + a1*b1*b2*c1*c2*c3*y2 + a2*b1*b2*c1*c2*c3*y2 + b1*b3*c1*c2*c3*y2 + a1*b1*b3*c1*c2*c3*y2 + a2*b1*b3*c1*c2*c3*y2 + b1*b2*b3*c1*c2*c3*y2 + a3*b1*b2*b3*c1*c2*c3*y2 + a3*b1*x1*y2 + a3*b2*x1*y2 + a1*b3*x1*y2 + a2*b3*x1*y2 + a3*b3*x1*y2 + a3*b1*c1*x1*y2 + a3*b2*c1*x1*y2 + a1*b3*c1*x1*y2 + a2*b3*c1*x1*y2 + a3*b3*c1*x1*y2 + a3*b1*c2*x1*y2 + a3*b2*c2*x1*y2 + a1*b3*c2*x1*y2 + a2*b3*c2*x1*y2 + a3*b3*c2*x1*y2 + a3*b1*c1*c2*x1*y2 + a3*b2*c1*c2*x1*y2 + a1*b3*c1*c2*x1*y2 + a2*b3*c1*c2*x1*y2 + a3*b3*c1*c2*x1*y2 + a1*b1*c3*x1*y2 + a2*b1*c3*x1*y2 + a3*b1*c3*x1*y2 + a1*b2*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + b3*c3*x1*y2 + a1*b3*c3*x1*y2 + a2*b3*c3*x1*y2 + a1*b1*c1*c3*x1*y2 + a2*b1*c1*c3*x1*y2 + a3*b1*c1*c3*x1*y2 + a1*b2*c1*c3*x1*y2 + a2*b2*c1*c3*x1*y2 + a3*b2*c1*c3*x1*y2 + b3*c1*c3*x1*y2 + a1*b3*c1*c3*x1*y2 + a2*b3*c1*c3*x1*y2 + a1*b1*c2*c3*x1*y2 + a2*b1*c2*c3*x1*y2 + a3*b1*c2*c3*x1*y2 + a1*b2*c2*c3*x1*y2 + a2*b2*c2*c3*x1*y2 + a3*b2*c2*c3*x1*y2 + a1*b3*c2*c3*x1*y2 + a2*b3*c2*c3*x1*y2 + a3*b3*c2*c3*x1*y2 + a1*b1*c1*c2*c3*x1*y2 + a2*b1*c1*c2*c3*x1*y2 + a3*b1*c1*c2*c3*x1*y2 + a1*b2*c1*c2*c3*x1*y2 + a2*b2*c1*c2*c3*x1*y2 + a3*b2*c1*c2*c3*x1*y2 + a1*b3*c1*c2*c3*x1*y2 + a2*b3*c1*c2*c3*x1*y2 + a3*b3*c1*c2*c3*x1*y2 + a3*b1*c1*c2*x2*y2 + a3*b2*c1*c2*x2*y2 + a1*b3*c1*c2*x2*y2 + a2*b3*c1*c2*x2*y2 + a3*b3*c1*c2*x2*y2 + b2*b3*c1*c2*x2*y2 + a1*b1*c2*c3*x2*y2 + a2*b1*c2*c3*x2*y2 + a3*b1*c2*c3*x2*y2 + a1*b2*c2*c3*x2*y2 + a1*b3*c2*c3*x2*y2 + b1*b3*c2*c3*x2*y2 + b2*c1*c2*c3*x2*y2 + b1*b2*c1*c2*c3*x2*y2 + b3*c1*c2*c3*x2*y2 + b1*b3*c1*c2*c3*x2*y2 + a1*b1*c1*c3*y1*y2 + a2*b1*c1*c3*y1*y2 + a3*b1*c1*c3*y1*y2 + b2*c1*c3*y1*y2 + a1*b2*c1*c3*y1*y2 + a2*b2*c1*c3*y1*y2 + a3*b2*c1*c3*y1*y2 + b1*b2*c1*c3*y1*y2 + a1*b3*c1*c3*y1*y2 + a2*b3*c1*c3*y1*y2 + b1*b3*c1*c3*y1*y2 + a1*b1*c1*c2*c3*y1*y2 + a2*b1*c1*c2*c3*y1*y2 + a3*b1*c1*c2*c3*y1*y2 + b2*c1*c2*c3*y1*y2 + a1*b2*c1*c2*c3*y1*y2 + a2*b2*c1*c2*c3*y1*y2 + a3*b2*c1*c2*c3*y1*y2 + b1*b2*c1*c2*c3*y1*y2 + b3*c1*c2*c3*y1*y2 + a1*b3*c1*c2*c3*y1*y2 + a2*b3*c1*c2*c3*y1*y2 + a3*b3*c1*c2*c3*y1*y2 + b1*b3*c1*c2*c3*y1*y2 + a1*a2*b2*y3 + a1*b1*b2*y3 + a2*b1*b2*y3 + a1*a3*b1*b2*y3 + a2*a3*b1*b2*y3 + a1*a2*b3*y3 + a1*b2*b3*y3 + a1*a3*b2*b3*y3 + a1*b1*b2*b3*y3 + a2*b1*b2*b3*y3 + a3*b1*b2*b3*y3 + a2*b1*c1*y3 + a1*a2*b1*c1*y3 + a2*a3*b1*c1*y3 + a2*b1*b2*c1*y3 + a1*a2*b1*b2*c1*y3 + a3*b1*b2*c1*y3 + a2*a3*b1*b2*c1*y3 + a2*b1*b3*c1*y3 + a1*a2*b1*b3*c1*y3 + a2*a3*b1*b3*c1*y3 + b1*b2*b3*c1*y3 + a1*b1*b2*b3*c1*y3 + a2*b1*b2*b3*c1*y3 + a2*b1*c2*y3 + a1*a2*b1*c2*y3 + a2*a3*b1*c2*y3 + a1*b2*c2*y3 + b1*b2*c2*y3 + a2*b1*b2*c2*y3 + a1*a2*b1*b2*c2*y3 + a2*a3*b1*b2*c2*y3 + a2*b1*b3*c2*y3 + a1*a2*b1*b3*c2*y3 + a2*a3*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + a2*b1*b2*b3*c2*y3 + a3*b1*b2*b3*c2*y3 + a3*b2*c1*c2*y3 + a1*a3*b2*c1*c2*y3 + a2*a3*b2*c1*c2*y3 + a1*a3*b1*b2*c1*c2*y3 + a2*a3*b1*b2*c1*c2*y3 + b2*b3*c1*c2*y3 + a1*a3*b2*b3*c1*c2*y3 + a2*a3*b2*b3*c1*c2*y3 + b1*b2*b3*c1*c2*y3 + a2*b1*b2*b3*c1*c2*y3 + a1*a2*b2*c3*y3 + a1*b1*b2*c3*y3 + a2*b1*b2*c3*y3 + a1*a3*b1*b2*c3*y3 + a2*a3*b1*b2*c3*y3 + a1*a2*b3*c3*y3 + a1*b2*b3*c3*y3 + a1*a3*b2*b3*c3*y3 + a1*b1*b2*b3*c3*y3 + a2*b1*b2*b3*c3*y3 + a3*b1*b2*b3*c3*y3 + a2*b1*c1*c3*y3 + b1*b2*c1*c3*y3 + a3*b1*b2*c1*c3*y3 + b1*b2*b3*c1*c3*y3 + a3*b1*b2*b3*c1*c3*y3 + a2*b1*c2*c3*y3 + a1*b2*c2*c3*y3 + a1*a3*b2*c2*c3*y3 + b1*b2*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + a1*a3*b1*b2*c2*c3*y3 + a2*a3*b1*b2*c2*c3*y3 + a1*b2*b3*c2*c3*y3 + a1*a3*b2*b3*c2*c3*y3 + b1*b2*b3*c2*c3*y3 + a1*b1*b2*b3*c2*c3*y3 + a2*b1*b2*b3*c2*c3*y3 + a3*b1*b2*b3*c2*c3*y3 + a3*b2*c1*c2*c3*y3 + b1*b2*c1*c2*c3*y3 + a3*b1*b2*c1*c2*c3*y3 + a3*b2*b3*c1*c2*c3*y3 + a3*b1*b2*b3*c1*c2*c3*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a3*b1*x2*y3 + a1*b2*x2*y3 + a1*b3*x2*y3 + c1*x2*y3 + a1*b1*c1*x2*y3 + a2*b1*c1*x2*y3 + a3*b1*c1*x2*y3 + a1*b2*c1*x2*y3 + a2*b2*c1*x2*y3 + a3*b2*c1*x2*y3 + a1*b3*c1*x2*y3 + a2*b3*c1*x2*y3 + a3*b3*c1*x2*y3 + a1*b1*c2*x2*y3 + a2*b1*c2*x2*y3 + a3*b1*c2*x2*y3 + a1*b2*c2*x2*y3 + a1*b3*c2*x2*y3 + c1*c2*x2*y3 + a1*b1*c1*c2*x2*y3 + a2*b1*c1*c2*x2*y3 + a3*b1*c1*c2*x2*y3 + a1*b2*c1*c2*x2*y3 + a2*b2*c1*c2*x2*y3 + a3*b2*c1*c2*x2*y3 + a1*b3*c1*c2*x2*y3 + a2*b3*c1*c2*x2*y3 + a3*b3*c1*c2*x2*y3 + a1*b1*c3*x2*y3 + a2*b1*c3*x2*y3 + a3*b1*c3*x2*y3 + a1*b2*c3*x2*y3 + a1*b3*c3*x2*y3 + b2*c1*c3*x2*y3 + b1*b2*c1*c3*x2*y3 + b3*c1*c3*x2*y3 + b1*b3*c1*c3*x2*y3 + a1*b1*c2*c3*x2*y3 + a2*b1*c2*c3*x2*y3 + a3*b1*c2*c3*x2*y3 + a1*b2*c2*c3*x2*y3 + a1*b3*c2*c3*x2*y3 + b2*c1*c2*c3*x2*y3 + b1*b2*c1*c2*c3*x2*y3 + b3*c1*c2*c3*x2*y3 + b1*b3*c1*c2*c3*x2*y3 + c1*c2*x3*y3 + a1*b1*c1*c2*x3*y3 + a2*b1*c1*c2*x3*y3 + a3*b1*c1*c2*x3*y3 + b2*c1*c2*x3*y3 + a1*b2*c1*c2*x3*y3 + a2*b2*c1*c2*x3*y3 + a3*b2*c1*c2*x3*y3 + b1*b2*c1*c2*x3*y3 + a1*b3*c1*c2*x3*y3 + a2*b3*c1*c2*x3*y3 + a3*b3*c1*c2*x3*y3 + b2*b3*c1*c2*x3*y3 + a1*b1*c2*c3*x3*y3 + a2*b1*c2*c3*x3*y3 + a3*b1*c2*c3*x3*y3 + a1*b2*c2*c3*x3*y3 + a1*b3*c2*c3*x3*y3 + b1*b3*c2*c3*x3*y3 + b2*c1*c2*c3*x3*y3 + b1*b2*c1*c2*c3*x3*y3 + b3*c1*c2*c3*x3*y3 + b1*b3*c1*c2*c3*x3*y3;
end;
#####################################################################
#####################################################################
#Space Group No. 103 ( P4cc)
#####################################################################
Ampin103:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin103:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin103:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Bdeltain103:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
Bxyin103:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + c1*x2*y1 + c1*x2*y2 + c1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 104 ( P4nc)
#####################################################################
Ampin104:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin104:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Bdeltain104:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
Bcxyin104:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a2*b1*b2 + a2*c1 + a1*b2*c1 + b1*b2*c1 + a2*x1 + b2*c1*x1 + a2*y1 + b2*y1 + b2*c1*y1;
end;
#####################################################################
Bcxyzin104:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a1*b2 + a2*b1*b2 + a2*c1 + a2*b2*c1 + a2*x1 + b2*x1 + b2*c1*x1 + a2*y1 + b2*c1*y1 + b2*z1;
end;
#####################################################################
C1GAPin104:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a3*b1*b2 + a1*a3*b1*b2 + a2*b1*b3 + a1*a3*b2*b3 + a1*b1*b2*b3 + a2*b1*b2*b3 + a1*a2*b1*b2*b3 + a3*b1*b2*b3 + a3*b2*c1 + a3*b1*b2*c1 + a1*a3*b1*b2*c1 + a1*b2*b3*c1 + a2*b2*b3*c1 + a1*a2*b2*b3*c1 + a1*a3*b2*b3*c1 + a1*b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a3*b1*b2*b3*c1 + a1*a3*b1*b2*b3*c1 + a1*a3*b2*c2 + a3*b1*b2*c2 + a1*b3*c2 + a1*a2*b3*c2 + a1*a3*b3*c2 + b1*b3*c2 + a1*b1*b3*c2 + a1*b2*b3*c2 + a1*a2*b2*b3*c2 + a1*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a3*c1*c2 + a3*b1*c1*c2 + a3*b2*c1*c2 + a1*a3*b2*c1*c2 + a3*b1*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a1*b3*c1*c2 + a2*b3*c1*c2 + a1*a3*b3*c1*c2 + a2*b1*b3*c1*c2 + a1*a3*b1*b3*c1*c2 + b2*b3*c1*c2 + a2*b2*b3*c1*c2 + b1*b2*b3*c1*c2 + a3*b1*b2*b3*c1*c2 + b1*b2*c3 + a1*b1*b2*c3 + a2*b1*b2*c3 + a3*b1*b2*c3 + a1*b2*b3*c3 + a3*b2*x1 + a3*b1*b2*x1 + a2*b3*x1 + a2*b1*b3*x1 + a1*a2*b1*b3*x1 + b2*b3*x1 + a2*b2*b3*x1 + a3*b2*b3*x1 + a1*a3*b2*b3*x1 + a1*b1*b2*b3*x1 + a2*b1*b2*b3*x1 + a3*b2*c1*x1 + a2*b3*c1*x1 + a1*a2*b3*c1*x1 + a2*b1*b3*c1*x1 + b2*b3*c1*x1 + a3*b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a1*b1*b2*b3*c1*x1 + a3*c2*x1 + a1*a3*c2*x1 + a3*b1*c2*x1 + a3*b2*c2*x1 + a1*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + a1*a3*b3*c2*x1 + b1*b3*c2*x1 + a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a3*b2*b3*c2*x1 + b1*b2*b3*c2*x1 + b1*b3*c1*c2*x1 + b2*b3*c1*c2*x1 + a1*b2*b3*c1*c2*x1 + b1*b2*c3*x1 + b2*b3*c3*x1 + a1*a3*x2 + a3*b1*x2 + a1*a3*b2*x2 + a3*b1*b2*x2 + a1*a3*b1*b2*x2 + a1*a2*b3*x2 + a1*a3*b3*x2 + a2*b1*b3*x2 + a1*a2*b1*b3*x2 + a1*a3*b2*b3*x2 + a2*b1*b2*b3*x2 + a1*a3*b2*c1*x2 + a1*b3*c1*x2 + a2*b3*c1*x2 + a1*a2*b3*c1*x2 + a3*b3*c1*x2 + b1*b3*c1*x2 + a2*b1*b3*c1*x2 + b2*b3*c1*x2 + a1*b2*b3*c1*x2 + a2*b2*b3*c1*x2 + a2*b1*b2*b3*c1*x2 + a3*b1*b2*b3*c1*x2 + a1*a3*c2*x2 + a3*b1*c2*x2 + a1*a3*b1*c2*x2 + a1*a3*b2*c2*x2 + a3*b1*b2*c2*x2 + a1*a3*b3*c2*x2 + a1*b1*b3*c2*x2 + a3*b1*b3*c2*x2 + a1*b2*b3*c2*x2 + b1*b2*b3*c2*x2 + a1*b1*b2*b3*c2*x2 + a3*c1*c2*x2 + a1*a3*c1*c2*x2 + a3*b1*c1*c2*x2 + a3*b1*b2*c1*c2*x2 + a1*b3*c1*c2*x2 + a3*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a3*b1*b3*c1*c2*x2 + b2*b3*c1*c2*x2 + a1*b2*b3*c1*c2*x2 + b1*b2*c3*x2 + b3*x1*x2 + b3*c1*x1*x2 + a2*b3*c1*x1*x2 + b1*b3*c1*x1*x2 + b2*b3*c1*x1*x2 + a1*a2*b1*x3 + a1*b2*x3 + a1*a2*b2*x3 + a1*a3*b2*x3 + b1*b2*x3 + a1*b1*b2*x3 + a2*b1*b2*x3 + a3*b1*b2*x3 + a1*a3*b1*b2*x3 + a1*a2*b3*x3 + a1*a2*b1*b3*x3 + a1*a3*b2*b3*x3 + a2*b1*b2*b3*x3 + a2*c1*x3 + a1*a2*c1*x3 + a2*b1*c1*x3 + a3*b2*c1*x3 + a1*a3*b2*c1*x3 + b1*b2*c1*x3 + a1*a2*b3*c1*x3 + b2*b3*c1*x3 + a1*b2*b3*c1*x3 + a3*b2*b3*c1*x3 + b1*b2*b3*c1*x3 + a3*b1*b2*b3*c1*x3 + a1*c2*x3 + a1*a3*c2*x3 + b1*c2*x3 + a1*b1*c2*x3 + a3*b1*c2*x3 + a1*a3*b1*c2*x3 + a1*a3*b2*c2*x3 + a2*b1*b2*c2*x3 + a1*b3*c2*x3 + a1*a3*b3*c2*x3 + b1*b3*c2*x3 + a1*b1*b3*c2*x3 + a3*b1*b3*c2*x3 + a1*b2*b3*c2*x3 + a1*b1*b2*b3*c2*x3 + c1*c2*x3 + a2*c1*c2*x3 + a3*c1*c2*x3 + a1*a3*c1*c2*x3 + b1*c1*c2*x3 + a1*b1*c1*c2*x3 + a2*b1*c1*c2*x3 + a3*b1*c1*c2*x3 + a1*b2*c1*c2*x3 + a2*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a1*b1*b2*c1*c2*x3 + a3*b1*b2*c1*c2*x3 + b3*c1*c2*x3 + a2*b3*c1*c2*x3 + a3*b3*c1*c2*x3 + b1*b3*c1*c2*x3 + a1*b1*b3*c1*c2*x3 + a2*b1*b3*c1*c2*x3 + a3*b1*b3*c1*c2*x3 + b2*b3*c1*c2*x3 + a1*b2*b3*c1*c2*x3 + b1*b2*b3*c1*c2*x3 + b1*b2*c3*x3 + b2*x1*x3 + a2*c1*x1*x3 + a1*b2*c1*x1*x3 + b1*b2*c1*x1*x3 + a2*b3*c1*x1*x3 + a2*c2*x1*x3 + a1*b2*c2*x1*x3 + b3*c2*x1*x3 + a2*b3*c2*x1*x3 + b1*b3*c2*x1*x3 + b2*b3*c2*x1*x3 + b2*c1*c2*x1*x3 + b2*b3*c1*c2*x1*x3 + b3*c1*x2*x3 + a1*b1*c2*x2*x3 + a1*b2*c2*x2*x3 + b1*b3*c2*x2*x3 + c1*c2*x2*x3 + a1*c1*c2*x2*x3 + b1*b2*c1*c2*x2*x3 + a2*b1*b3*y1 + a1*a2*b1*b3*y1 + a1*b2*b3*y1 + a2*b2*b3*y1 + a3*b2*b3*y1 + a1*a3*b2*b3*y1 + a2*b3*c1*y1 + a1*a2*b3*c1*y1 + a2*b1*b3*c1*y1 + b2*b3*c1*y1 + a1*b2*b3*c1*y1 + a2*b2*b3*c1*y1 + a3*b2*b3*c1*y1 + a1*b1*b2*b3*c1*y1 + a1*a3*c2*y1 + a1*a3*b2*c2*y1 + a3*b1*b2*c2*y1 + a1*a3*b3*c2*y1 + a3*b1*b3*c2*y1 + a1*b2*b3*c2*y1 + a3*b2*b3*c2*y1 + b1*b2*b3*c2*y1 + a3*c1*c2*y1 + b1*b3*c1*c2*y1 + a1*b2*b3*c1*c2*y1 + b1*b2*b3*c1*c2*y1 + b1*b2*c3*y1 + b2*b3*c3*y1 + a2*b3*x1*y1 + b2*b3*c1*x1*y1 + a2*b3*x2*y1 + a2*b3*c1*x2*y1 + a2*x3*y1 + a1*b2*x3*y1 + a2*b3*x3*y1 + a2*c1*x3*y1 + a1*b2*c1*x3*y1 + a2*b3*c1*x3*y1 + a2*c2*x3*y1 + a1*b2*c2*x3*y1 + a2*b3*c2*x3*y1 + b2*c1*c2*x3*y1 + b2*b3*c1*c2*x3*y1 + a1*a3*y2 + a1*a3*b2*y2 + a1*a3*b1*b2*y2 + a1*a2*b3*y2 + a1*a3*b3*y2 + a1*b1*b3*y2 + a2*b1*b3*y2 + a1*a2*b1*b3*y2 + a1*b2*b3*y2 + a1*a3*b2*b3*y2 + a1*a3*b2*c1*y2 + a1*b3*c1*y2 + a2*b3*c1*y2 + a1*a2*b3*c1*y2 + a3*b3*c1*y2 + b1*b3*c1*y2 + a1*b1*b3*c1*y2 + a2*b1*b3*c1*y2 + a1*b2*b3*c1*y2 + b1*b2*b3*c1*y2 + a2*b1*b2*b3*c1*y2 + a3*b1*b2*b3*c1*y2 + a1*a3*c2*y2 + a1*a3*b1*c2*y2 + a1*a3*b2*c2*y2 + a3*b1*b2*c2*y2 + a1*a3*b3*c2*y2 + a3*b1*b3*c2*y2 + b1*b2*b3*c2*y2 + a1*b1*b2*b3*c2*y2 + a3*c1*c2*y2 + a1*a3*c1*c2*y2 + a3*b1*c1*c2*y2 + a3*b1*b2*c1*c2*y2 + b3*c1*c2*y2 + a3*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a3*b1*b3*c1*c2*y2 + b2*b3*c1*c2*y2 + a1*b2*b3*c1*c2*y2 + b1*b2*b3*c1*c2*y2 + b1*b2*c3*y2 + b3*x1*y2 + a2*b3*x1*y2 + b3*c1*x1*y2 + a2*b3*c1*x1*y2 + b1*b3*c1*x1*y2 + b3*c1*x2*y2 + b1*b3*c1*x2*y2 + b2*b3*c1*x2*y2 + a1*b1*x3*y2 + a1*b2*x3*y2 + a1*c1*x3*y2 + b1*b2*c1*x3*y2 + b3*c1*x3*y2 + a1*b1*c2*x3*y2 + a1*b2*c2*x3*y2 + a1*c1*c2*x3*y2 + b1*b2*c1*c2*x3*y2 + a2*b3*c1*y1*y2 + b2*b3*c1*y1*y2 + a2*b1*y3 + a1*a2*b1*y3 + a1*a2*b2*y3 + a1*a3*b2*y3 + b1*b2*y3 + a2*b1*b2*y3 + a1*a3*b1*b2*y3 + a1*a2*b3*y3 + a2*b1*b3*y3 + a1*a2*b1*b3*y3 + a1*a3*b2*b3*y3 + a1*a2*c1*y3 + a2*b1*c1*y3 + a3*b2*c1*y3 + a1*a3*b2*c1*y3 + a1*b1*b2*c1*y3 + a1*a2*b3*c1*y3 + a2*b1*b3*c1*y3 + a3*b2*b3*c1*y3 + b1*b2*b3*c1*y3 + a3*b1*b2*b3*c1*y3 + a1*a3*c2*y3 + a2*b1*c2*y3 + a1*a3*b1*c2*y3 + a1*b2*c2*y3 + a1*a3*b2*c2*y3 + b1*b2*c2*y3 + a2*b1*b2*c2*y3 + a1*b3*c2*y3 + a1*a3*b3*c2*y3 + b1*b3*c2*y3 + a1*b1*b3*c2*y3 + a2*b1*b3*c2*y3 + a3*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + b1*b2*b3*c2*y3 + a1*b1*b2*b3*c2*y3 + a1*c1*c2*y3 + a3*c1*c2*y3 + a1*a3*c1*c2*y3 + b1*c1*c2*y3 + a1*b1*c1*c2*y3 + a2*b1*c1*c2*y3 + a3*b1*c1*c2*y3 + b2*c1*c2*y3 + a1*b2*c1*c2*y3 + a2*b2*c1*c2*y3 + a1*b1*b2*c1*c2*y3 + a3*b1*b2*c1*c2*y3 + a1*b3*c1*c2*y3 + a2*b3*c1*c2*y3 + a3*b3*c1*c2*y3 + b1*b3*c1*c2*y3 + a1*b1*b3*c1*c2*y3 + a2*b1*b3*c1*c2*y3 + a3*b1*b3*c1*c2*y3 + a1*b2*b3*c1*c2*y3 + b1*b2*b3*c1*c2*y3 + b1*b2*c3*y3 + a2*x1*y3 + b2*x1*y3 + a1*b2*x1*y3 + a2*b3*x1*y3 + a2*c1*x1*y3 + b2*c1*x1*y3 + a1*b2*c1*x1*y3 + b1*b2*c1*x1*y3 + a2*b3*c1*x1*y3 + b2*b3*c1*x1*y3 + a2*c2*x1*y3 + a1*b2*c2*x1*y3 + b3*c2*x1*y3 + a2*b3*c2*x1*y3 + b1*b3*c2*x1*y3 + b2*b3*c2*x1*y3 + b2*c1*c2*x1*y3 + b2*b3*c1*c2*x1*y3 + a1*b1*x2*y3 + a1*b2*x2*y3 + c1*x2*y3 + a1*c1*x2*y3 + b1*b2*c1*x2*y3 + b1*b3*c1*x2*y3 + b2*b3*c1*x2*y3 + a1*b1*c2*x2*y3 + a1*b2*c2*x2*y3 + b1*b3*c2*x2*y3 + c1*c2*x2*y3 + a1*c1*c2*x2*y3 + b1*b2*c1*c2*x2*y3 + a2*b1*x3*y3 + a2*c1*x3*y3 + a1*c2*x3*y3 + b1*b3*c2*x3*y3 + c1*c2*x3*y3 + b2*c1*c2*x3*y3 + a2*c1*y1*y3 + b2*c1*y1*y3 + a1*b2*c1*y1*y3 + a2*b3*c1*y1*y3 + b2*b3*c1*y1*y3 + a2*c2*y1*y3 + a1*b2*c2*y1*y3 + a2*b3*c2*y1*y3 + b2*c1*c2*y1*y3 + b2*b3*c1*c2*y1*y3 + b1*b3*c1*y2*y3 + b2*b3*c1*y2*y3 + a1*b1*c2*y2*y3 + a1*b2*c2*y2*y3 + a1*c1*c2*y2*y3 + b1*b2*c1*c2*y2*y3 + a2*b3*z1 + a1*b2*b3*z1 + a2*b2*b3*z1 + a3*b2*b3*z1 + a1*b1*b2*b3*z1 + a2*b1*b2*b3*z1 + a3*b2*c1*z1 + a3*b1*b2*c1*z1 + a2*b3*c1*z1 + b2*b3*c1*z1 + a1*b2*b3*c1*z1 + a2*b2*b3*c1*z1 + a3*b2*b3*c1*z1 + b1*b2*b3*c1*z1 + a3*c2*z1 + a3*b1*c2*z1 + a3*b2*c2*z1 + a3*b1*b2*c2*z1 + b3*c2*z1 + a1*b3*c2*z1 + b1*b3*c2*z1 + a1*b1*b3*c2*z1 + b2*b3*c2*z1 + a2*b2*b3*c2*z1 + a3*b2*c1*c2*z1 + b3*c1*c2*z1 + a1*b3*c1*c2*z1 + a3*b3*c1*c2*z1 + b2*b3*c1*c2*z1 + b1*b2*b3*c1*c2*z1 + a2*b3*x1*z1 + b2*b3*c1*x1*z1 + a3*c2*x1*z1 + b3*c1*c2*x1*z1 + b3*x2*z1 + a2*b3*x2*z1 + b1*b3*c1*x2*z1 + b2*b3*c1*x2*z1 + a3*c2*x2*z1 + b2*x3*z1 + a1*b2*x3*z1 + a2*b3*x3*z1 + b1*b2*c1*x3*z1 + c2*x3*z1 + a1*c2*x3*z1 + a2*c2*x3*z1 + a3*c2*x3*z1 + b3*c2*x3*z1 + b1*b3*c2*x3*z1 + b2*b3*c2*x3*z1 + c1*c2*x3*z1 + b2*c1*c2*x3*z1 + b3*c1*c2*x3*z1 + a2*b3*y1*z1 + b2*b3*c1*y1*z1 + a3*c2*y1*z1 + b3*c2*y1*z1 + b3*c1*c2*y1*z1 + b3*y2*z1 + a2*b3*y2*z1 + b3*c1*y2*z1 + b1*b3*c1*y2*z1 + b2*b3*c1*y2*z1 + a3*c2*y2*z1 + b3*c2*y2*z1 + b2*y3*z1 + a1*b2*y3*z1 + a2*b3*y3*z1 + b1*b2*c1*y3*z1 + a1*c2*y3*z1 + a2*c2*y3*z1 + a3*c2*y3*z1 + b3*c2*y3*z1 + b1*b3*c2*y3*z1 + b2*b3*c2*y3*z1 + c1*c2*y3*z1 + b2*c1*c2*y3*z1 + b3*c1*c2*y3*z1 + a1*a3*b1*z2 + a1*a3*b2*z2 + a1*b3*z2 + a1*b1*b3*z2 + a1*b2*b3*z2 + a2*b1*b2*b3*z2 + a1*a3*c1*z2 + a3*b1*b2*c1*z2 + a1*b3*c1*z2 + a2*b3*c1*z2 + a1*b1*b3*c1*z2 + b2*b3*c1*z2 + a2*b2*b3*c1*z2 + b1*b2*b3*c1*z2 + a1*a3*c2*z2 + a3*b1*c2*z2 + a3*b1*b2*c2*z2 + a1*b3*c2*z2 + b1*b3*c2*z2 + a1*b1*b3*c2*z2 + a1*b2*b3*c2*z2 + b3*c1*c2*z2 + a1*b3*c1*c2*z2 + b2*b3*c1*c2*z2 + b1*b2*b3*c1*c2*z2 + a2*b3*x1*z2 + a3*c1*x1*z2 + b2*b3*c1*x1*z2 + a3*c2*x1*z2 + b3*c1*x2*z2 + b1*b3*c1*x2*z2 + b2*b3*c1*x2*z2 + a1*x3*z2 + a1*b1*x3*z2 + a1*b2*x3*z2 + a1*c1*x3*z2 + b2*c1*x3*z2 + b1*b2*c1*x3*z2 + b3*c1*x3*z2 + b1*b3*c2*x3*z2 + c1*c2*x3*z2 + a3*y1*z2 + a2*b3*y1*z2 + a3*c1*y1*z2 + b2*b3*c1*y1*z2 + a3*c2*y1*z2 + b3*c1*y2*z2 + b1*b3*c1*y2*z2 + b2*b3*c1*y2*z2 + a1*b1*y3*z2 + a1*b2*y3*z2 + a1*c1*y3*z2 + b1*b2*c1*y3*z2 + b1*b3*c2*y3*z2 + c1*c2*y3*z2 + a3*z1*z2 + b3*c1*z1*z2 + b3*c2*z1*z2 + a1*b2*z3 + a1*b1*b2*z3 + a3*b1*b2*z3 + a2*b1*b3*z3 + a2*b1*b2*b3*z3 + b1*b2*c1*z3 + a1*b1*b2*c1*z3 + a2*b1*b3*c1*z3 + b2*b3*c1*z3 + a1*b2*b3*c1*z3 + b1*c2*z3 + a1*b1*c2*z3 + a2*b1*c2*z3 + a3*b1*c2*z3 + a1*b2*c2*z3 + b1*b2*c2*z3 + b1*b3*c2*z3 + a2*b1*b3*c2*z3 + b1*b2*b3*c2*z3 + a1*c1*c2*z3 + a2*c1*c2*z3 + b1*b2*c1*c2*z3 + b3*c1*c2*z3 + a1*b3*c1*c2*z3 + b2*b3*c1*c2*z3 + a2*x1*z3 + a1*b2*x1*z3 + a2*b3*x1*z3 + b2*c1*x1*z3 + b2*b3*c1*x1*z3 + a1*b1*x2*z3 + a1*b2*x2*z3 + c1*x2*z3 + a1*c1*x2*z3 + b1*b2*c1*x2*z3 + b3*c1*x2*z3 + b1*b3*c1*x2*z3 + b2*b3*c1*x2*z3 + a2*b1*x3*z3 + a2*c1*x3*z3 + a1*c2*x3*z3 + b1*b3*c2*x3*z3 + c1*c2*x3*z3 + b2*c1*c2*x3*z3 + a2*y1*z3 + a1*b2*y1*z3 + a2*b3*y1*z3 + b2*c1*y1*z3 + b2*b3*c1*y1*z3 + a1*b1*y2*z3 + a1*b2*y2*z3 + a1*c1*y2*z3 + b1*b2*c1*y2*z3 + b3*c1*y2*z3 + b1*b3*c1*y2*z3 + b2*b3*c1*y2*z3 + a2*b1*y3*z3 + a2*c1*y3*z3 + a1*c2*y3*z3 + b1*b3*c2*y3*z3 + c1*c2*y3*z3 + b2*c1*c2*y3*z3 + c2*z1*z3 + a1*z2*z3 + b2*c1*z2*z3 + b3*c1*z2*z3;
end;
#####################################################################
C2GAPin104:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a3*b2 + a3*b1*b2 + a1*b2*b3 + a1*a3*b2*b3 + a2*b1*b2*b3 + a1*a2*b1*b2*b3 + a3*b1*b2*b3 + a1*a3*b1*b2*b3 + a3*b1*b2*c1 + a1*a3*b1*b2*c1 + a1*a2*b3*c1 + a2*b1*b3*c1 + a1*a2*b1*b3*c1 + a2*b2*b3*c1 + a1*a2*b2*b3*c1 + a3*b2*b3*c1 + a1*b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a3*b1*b2*b3*c1 + a3*b1*b2*c2 + a1*a3*b1*b2*c2 + a1*a3*b3*c2 + a1*b1*b3*c2 + a1*a3*b1*b3*c2 + a1*b2*b3*c2 + b1*b2*b3*c2 + a1*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a1*a3*c1*c2 + a1*a3*b1*c1*c2 + a3*b2*c1*c2 + a1*b3*c1*c2 + a2*b3*c1*c2 + a3*b3*c1*c2 + a2*b1*b3*c1*c2 + a2*b1*b2*b3*c1*c2 + a3*b2*x1 + a3*b1*b2*x1 + a2*b3*x1 + a1*b2*b3*x1 + a2*b2*b3*x1 + a3*b2*c1*x1 + a3*b1*b2*c1*x1 + a2*b1*b3*c1*x1 + a1*b2*b3*c1*x1 + a2*b2*b3*c1*x1 + a3*c2*x1 + a3*b1*c2*x1 + a3*b2*c2*x1 + b3*c2*x1 + a1*b3*c2*x1 + a2*b3*c2*x1 + b1*b3*c2*x1 + a1*b1*b3*c2*x1 + a2*b1*b3*c2*x1 + a1*b2*b3*c2*x1 + a2*b2*b3*c2*x1 + a3*c1*c2*x1 + a3*b1*c1*c2*x1 + b2*b3*c1*c2*x1 + a1*a3*x2 + a3*b1*x2 + a3*b1*b2*x2 + b1*b3*x2 + a2*b1*b3*x2 + a3*b1*b3*x2 + a1*b2*b3*x2 + b1*b2*b3*x2 + a3*b1*c1*x2 + b3*c1*x2 + a3*b3*c1*x2 + b1*b3*c1*x2 + b1*b2*b3*c1*x2 + a1*b1*b3*c2*x2 + a2*b1*b3*c2*x2 + a1*b2*b3*c2*x2 + b3*c1*c2*x2 + b1*b3*c1*c2*x2 + b1*b2*b3*c1*c2*x2 + b3*x1*x2 + a2*b1*x3 + b1*b2*x3 + a1*b1*b2*x3 + a3*b1*b2*x3 + a2*b1*b3*x3 + a1*b2*b3*x3 + b1*b2*b3*x3 + a2*b1*c1*x3 + b2*c1*x3 + a1*b2*c1*x3 + a2*b2*c1*x3 + b1*b2*c1*x3 + b1*b2*b3*c1*x3 + b1*c2*x3 + a1*b1*c2*x3 + a3*b1*c2*x3 + a1*b2*c2*x3 + a1*b1*b2*c2*x3 + a3*b1*b2*c2*x3 + b1*b3*c2*x3 + a1*b1*b3*c2*x3 + b1*b2*b3*c2*x3 + b1*c1*c2*x3 + a1*b1*c1*c2*x3 + b2*c1*x1*x3 + b3*c2*x1*x3 + b1*c1*c2*x1*x3 + b1*c1*x2*x3 + b2*c1*x2*x3 + b1*c2*x2*x3 + a3*b2*y1 + a3*b1*b2*y1 + a2*b1*b3*y1 + a3*b2*c1*y1 + a3*b1*b2*c1*y1 + a2*b1*b3*c1*y1 + a1*b2*b3*c1*y1 + a2*b2*b3*c1*y1 + b1*b2*b3*c1*y1 + a3*b1*c2*y1 + a3*b2*c2*y1 + a1*b3*c2*y1 + a2*b3*c2*y1 + b1*b3*c2*y1 + a1*b1*b3*c2*y1 + a2*b1*b3*c2*y1 + a1*b2*b3*c2*y1 + a2*b2*b3*c2*y1 + a3*c1*c2*y1 + a3*b1*c1*c2*y1 + b3*c1*c2*y1 + b2*b3*c1*c2*y1 + b3*x2*y1 + b2*c1*x3*y1 + b3*c2*x3*y1 + b1*c1*c2*x3*y1 + a1*a3*y2 + a3*b1*b3*y2 + b1*b2*b3*y2 + a3*b1*c1*y2 + a3*b3*c1*y2 + a3*b1*c2*y2 + b1*b3*c2*y2 + a1*b1*b3*c2*y2 + a2*b1*b3*c2*y2 + a1*b2*b3*c2*y2 + b1*b2*b3*c2*y2 + b1*b3*c1*c2*y2 + b1*b2*b3*c1*c2*y2 + b1*x3*y2 + b1*c1*x3*y2 + b2*c1*x3*y2 + b1*b2*y3 + b1*b2*b3*y3 + b2*c1*y3 + a2*b1*c2*y3 + a1*b1*b2*c2*y3 + a3*b1*b2*c2*y3 + b1*b3*c2*y3 + a1*b1*b3*c2*y3 + b1*c1*c2*y3 + a1*b1*c1*c2*y3 + b1*c2*x1*y3 + b2*c2*x1*y3 + b3*c2*x1*y3 + b1*c1*c2*x1*y3 + b1*x2*y3 + b1*c2*x3*y3 + b1*c2*y1*y3 + b2*c2*y1*y3 + b3*c2*y1*y3 + b1*c1*c2*y1*y3 + b1*y2*y3 + b1*c2*y2*y3 + a3*b1*b2*z1 + a2*b3*z1 + a2*b1*b3*z1 + a1*b2*b3*z1 + a2*b2*b3*z1 + a3*b2*b3*z1 + b1*b2*b3*z1 + b1*b2*b3*c1*z1 + a3*c2*z1 + b3*c2*z1 + a1*b3*c2*z1 + a2*b3*c2*z1 + b1*b3*c2*z1 + b3*c2*x1*z1 + b3*x2*z1 + b3*c2*x2*z1 + b3*c2*y1*z1 + b3*c2*y2*z1 + a1*a3*z2 + a2*b1*b3*z2 + a1*b2*b3*z2 + b1*b2*b3*z2 + b1*b3*c1*z2 + b1*b2*b3*c1*z2 + a3*b1*c2*z2 + b1*b3*c2*z2 + b1*b2*b3*c2*z2 + a3*x1*z2 + b3*x1*z2 + b1*x3*z2 + b1*c2*x3*z2 + a3*y1*z2 + b3*y1*z2 + b1*c2*y3*z2 + a2*b1*z3 + a1*b1*b2*z3 + a3*b1*b2*z3 + a2*b1*b3*z3 + a1*b2*b3*z3 + a2*b1*c1*z3 + a1*b2*c1*z3 + a2*b2*c1*z3 + b1*b2*c1*z3 + b1*b2*b3*c1*z3 + a1*b1*c2*z3 + a2*b1*c2*z3 + a3*b1*c2*z3 + a1*b2*c2*z3 + b1*b2*b3*c2*z3 + b2*c1*x1*z3 + b1*c2*x1*z3 + b2*c2*x1*z3 + b1*x2*z3 + b1*c1*x2*z3 + b2*c1*x2*z3 + b1*c2*x2*z3 + b1*c2*x3*z3 + b2*c1*y1*z3 + b1*c2*y1*z3 + b2*c2*y1*z3 + b1*c1*y2*z3 + b2*c1*y2*z3 + b1*c2*y2*z3 + b1*c2*y3*z3 + b1*z2*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 105 ( P4_2mc)
#####################################################################
Ampin105:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin105:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin105:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Bdeltain105:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
Bczin105:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*c1 + b2*c1 + b2*z1;
end;
#####################################################################
Bxyin105:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + c1*x2*y1 + c1*x2*y2 + c1*y1*y2;
end;
#####################################################################
Bzxyin105:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*x1 + b2*c1*x1 + c2*x1 + c1*c2*x1 + a2*y1 + b2*y1 + b2*c1*y1 + c1*c2*y1 + x1*z2 + y1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 106 ( P4_2bc)
#####################################################################
Ampin106:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin106:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Bdeltain106:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
B2in106:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a2*b1*b2 + a2*c1 + a1*b2*c1 + b1*b2*c1 + a2*x1 + b2*c1*x1 + a2*y1 + b2*y1 + b2*c1*y1;
end;
#####################################################################
B3in106:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*c1 + b2*z1;
end;
#####################################################################
C1in106:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3*b1 + a1*a2*a3*b2 + a1*a2*a3*b1*b2 + a1*a2*b1*b3 + a1*b2*b3 + a1*a2*a3*b2*b3 + a2*b1*b2*b3 + a1*a2*b1*b2*b3 + a1*a3*b1*b2*b3 + a2*a3*b1*c1 + a1*a2*a3*b1*c1 + a1*a2*a3*b2*c1 + a3*b1*b2*c1 + a1*a3*b1*b2*c1 + a2*a3*b1*b2*c1 + a1*a2*b3*c1 + a1*a2*a3*b3*c1 + a2*a3*b1*b3*c1 + a1*a2*a3*b1*b3*c1 + a1*a2*b2*b3*c1 + a1*a3*b2*b3*c1 + b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a3*b1*b2*b3*c1 + a1*a3*b1*b2*b3*c1 + a2*a3*b1*b2*b3*c1 + a1*a2*a3*c2 + a1*a3*b1*c2 + a2*a3*b1*c2 + a1*a2*a3*b1*c2 + a1*a2*a3*b1*b2*c2 + a1*a2*b3*c2 + a2*a3*b1*b3*c2 + a1*a2*a3*b1*b3*c2 + a1*b2*b3*c2 + a1*a3*b2*b3*c2 + a1*a2*a3*b2*b3*c2 + b1*b2*b3*c2 + a2*a3*b1*b2*b3*c2 + a1*a3*c1*c2 + a1*a2*a3*c1*c2 + a3*b1*c1*c2 + a3*b2*c1*c2 + a2*a3*b2*c1*c2 + a1*a2*a3*b2*c1*c2 + a3*b1*b2*c1*c2 + a2*a3*b1*b2*c1*c2 + a1*a3*b3*c1*c2 + a1*a2*a3*b3*c1*c2 + a1*b1*b3*c1*c2 + a2*b1*b3*c1*c2 + a1*a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + a2*a3*b1*b3*c1*c2 + b2*b3*c1*c2 + a1*b2*b3*c1*c2 + a1*a2*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + a2*a3*b2*b3*c1*c2 + a1*a2*a3*b2*b3*c1*c2 + b1*b2*b3*c1*c2 + a1*b1*b2*b3*c1*c2 + a1*a3*b1*b2*b3*c1*c2 + a1*a2*b1*c3 + a1*a2*a3*b1*c3 + a1*b2*c3 + a1*a2*b2*c3 + a1*a3*b2*c3 + a2*b1*b2*c3 + a1*a2*b1*b2*c3 + a3*b1*b2*c3 + a1*a2*a3*b1*b2*c3 + a1*a2*b3*c3 + a1*a2*a3*b1*b3*c3 + a2*b1*b2*b3*c3 + a1*a3*b1*b2*b3*c3 + a2*a3*b1*b2*b3*c3 + a1*a2*a3*b1*b2*b3*c3 + a2*b1*c1*c3 + a2*a3*b1*c1*c3 + a1*b2*c1*c3 + a1*a2*b2*c1*c3 + a1*a3*b2*c1*c3 + a1*a2*a3*b2*c1*c3 + a2*b1*b2*c1*c3 + a3*b1*b2*c1*c3 + a1*a3*b1*b2*c1*c3 + a2*a3*b1*b2*c1*c3 + a1*a2*b3*c1*c3 + a1*a2*b1*b3*c1*c3 + a2*a3*b1*b3*c1*c3 + a1*a2*b2*b3*c1*c3 + a1*a3*b2*b3*c1*c3 + a1*a2*a3*b2*b3*c1*c3 + b1*b2*b3*c1*c3 + a1*b1*b2*b3*c1*c3 + a1*a2*b1*b2*b3*c1*c3 + a1*a2*c2*c3 + a1*a3*c2*c3 + a1*b1*c2*c3 + a2*b1*c2*c3 + a1*a2*b1*c2*c3 + a3*b1*c2*c3 + a2*a3*b1*c2*c3 + a1*a2*b2*c2*c3 + a1*a3*b2*c2*c3 + a1*b1*b2*c2*c3 + a2*b1*b2*c2*c3 + a1*a2*b1*b2*c2*c3 + a3*b1*b2*c2*c3 + a2*a3*b1*b2*c2*c3 + a1*a3*b3*c2*c3 + a1*b1*b3*c2*c3 + a2*b1*b3*c2*c3 + a1*a2*b1*b3*c2*c3 + a2*a3*b1*b3*c2*c3 + a1*b2*b3*c2*c3 + a1*a2*a3*b2*b3*c2*c3 + a1*b1*b2*b3*c2*c3 + a1*a2*b1*b2*b3*c2*c3 + a1*a3*b1*b2*b3*c2*c3 + a2*a3*b1*b2*b3*c2*c3 + a1*a2*c1*c2*c3 + a3*c1*c2*c3 + a1*a3*c1*c2*c3 + b1*c1*c2*c3 + a1*b1*c1*c2*c3 + a2*b1*c1*c2*c3 + a2*a3*b1*c1*c2*c3 + a2*b2*c1*c2*c3 + a1*a2*b2*c1*c2*c3 + a2*a3*b2*c1*c2*c3 + b1*b2*c1*c2*c3 + a2*b1*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + a1*a3*b1*b2*c1*c2*c3 + a2*a3*b1*b2*c1*c2*c3 + a1*a2*b3*c1*c2*c3 + a1*a3*b3*c1*c2*c3 + b1*b3*c1*c2*c3 + a1*b1*b3*c1*c2*c3 + a2*a3*b1*b3*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + a1*a3*b2*b3*c1*c2*c3 + a2*a3*b2*b3*c1*c2*c3 + a1*b1*b2*b3*c1*c2*c3 + a3*b1*b2*b3*c1*c2*c3 + a1*a3*b1*b2*b3*c1*c2*c3 + a2*a3*b1*b2*b3*c1*c2*c3 + a2*a3*b1*x1 + a1*a3*b2*x1 + a1*a3*b1*b2*x1 + a2*b3*x1 + a1*a2*b1*b3*x1 + a2*a3*b1*b3*x1 + b2*b3*x1 + a1*a2*a3*b2*b3*x1 + b1*b2*b3*x1 + a1*a3*b1*b2*b3*x1 + a2*a3*b1*c1*x1 + a2*a3*b2*c1*x1 + a3*b1*b2*c1*x1 + a1*a3*b1*b2*c1*x1 + a2*b3*c1*x1 + a1*a2*b3*c1*x1 + a2*a3*b3*c1*x1 + a2*b1*b3*c1*x1 + a1*a2*b1*b3*c1*x1 + a2*a3*b1*b3*c1*x1 + b2*b3*c1*x1 + a1*b2*b3*c1*x1 + a2*b2*b3*c1*x1 + a1*a3*b2*b3*c1*x1 + a2*a3*b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a1*a2*a3*c2*x1 + a3*b1*c2*x1 + a2*a3*b1*c2*x1 + a3*b2*c2*x1 + a1*a3*b2*c2*x1 + a1*a2*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + a1*a3*b1*b2*c2*x1 + b3*c2*x1 + a1*b3*c2*x1 + a1*a2*b3*c2*x1 + a3*b3*c2*x1 + a1*a3*b3*c2*x1 + a1*a2*a3*b3*c2*x1 + a1*b1*b3*c2*x1 + a2*a3*b1*b3*c2*x1 + a2*b2*b3*c2*x1 + a1*a3*b2*b3*c2*x1 + a2*a3*b2*b3*c2*x1 + b1*b2*b3*c2*x1 + a1*b1*b2*b3*c2*x1 + a1*a3*c1*c2*x1 + a1*a3*b2*c1*c2*x1 + a3*b1*b2*c1*c2*x1 + b3*c1*c2*x1 + a2*b3*c1*c2*x1 + a1*a2*b3*c1*c2*x1 + a3*b3*c1*c2*x1 + a1*a3*b3*c1*c2*x1 + b1*b3*c1*c2*x1 + a1*b1*b3*c1*c2*x1 + b2*b3*c1*c2*x1 + b1*b2*b3*c1*c2*x1 + a1*b1*b2*b3*c1*c2*x1 + a3*b1*b2*b3*c1*c2*x1 + a1*a2*c3*x1 + a2*a3*c3*x1 + a1*b2*c3*x1 + a1*a2*b2*c3*x1 + a3*b2*c3*x1 + a1*a3*b2*c3*x1 + b1*b2*c3*x1 + a2*b1*b2*c3*x1 + a1*a3*b1*b2*c3*x1 + a2*a3*b1*b2*c3*x1 + a2*b3*c3*x1 + a1*a2*b3*c3*x1 + a2*a3*b3*c3*x1 + a2*b1*b3*c3*x1 + b2*b3*c3*x1 + a1*a2*b2*b3*c3*x1 + a1*a3*b2*b3*c3*x1 + b1*b2*b3*c3*x1 + a1*b1*b2*b3*c3*x1 + a3*b1*b2*b3*c3*x1 + a1*a3*b1*b2*b3*c3*x1 + a2*a3*b1*b2*b3*c3*x1 + a1*a2*c1*c3*x1 + a2*a3*c1*c3*x1 + a1*b2*c1*c3*x1 + a2*b2*c1*c3*x1 + a1*a2*b2*c1*c3*x1 + a3*b2*c1*c3*x1 + a2*a3*b2*c1*c3*x1 + a2*b1*b2*c1*c3*x1 + a3*b1*b2*c1*c3*x1 + a1*a2*b3*c1*c3*x1 + a2*a3*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + b2*b3*c1*c3*x1 + a1*a3*b2*b3*c1*c3*x1 + a2*a3*b2*b3*c1*c3*x1 + a1*b1*b2*b3*c1*c3*x1 + a2*b1*b2*b3*c1*c3*x1 + a3*b1*b2*b3*c1*c3*x1 + a1*a2*c2*c3*x1 + a2*a3*c2*c3*x1 + b1*c2*c3*x1 + a2*b1*c2*c3*x1 + b2*c2*c3*x1 + a1*b2*c2*c3*x1 + a1*a2*b2*c2*c3*x1 + a3*b2*c2*c3*x1 + a1*a3*b2*c2*c3*x1 + b1*b2*c2*c3*x1 + a1*b1*b2*c2*c3*x1 + b3*c2*c3*x1 + a1*b3*c2*c3*x1 + a2*b3*c2*c3*x1 + a1*a2*b3*c2*c3*x1 + a2*a3*b3*c2*c3*x1 + b1*b3*c2*c3*x1 + a2*b1*b3*c2*c3*x1 + a1*b2*b3*c2*c3*x1 + a1*a2*b2*b3*c2*c3*x1 + a3*b2*b3*c2*c3*x1 + a1*a3*b2*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + a1*b1*b2*b3*c2*c3*x1 + b1*c1*c2*c3*x1 + a3*b1*b2*c1*c2*c3*x1 + b3*c1*c2*c3*x1 + a1*b2*b3*c1*c2*c3*x1 + a3*b1*b2*b3*c1*c2*c3*x1 + (a3*b2*x1*(1 + x1))/2 + (a2*b3*x1*(1 + x1))/2 + (a1*a3*c2*x1*(1 + x1))/2 + (a3*b1*c2*x1*(1 + x1))/2 + (a3*b2*c2*x1*(1 + x1))/2 + (a1*a3*b2*c2*x1*(1 + x1))/2 + (a3*b1*b2*c2*x1*(1 + x1))/2 + (b3*c2*x1*(1 + x1))/2 + (a2*b3*c2*x1*(1 + x1))/2 + (a1*a2*b3*c2*x1*(1 + x1))/2 + (a3*b3*c2*x1*(1 + x1))/2 + (a1*a3*b3*c2*x1*(1 + x1))/2 + (a1*b1*b3*c2*x1*(1 + x1))/2 + (a2*b1*b3*c2*x1*(1 + x1))/2 + (a3*b1*b3*c2*x1*(1 + x1))/2 + (a1*b2*b3*c2*x1*(1 + x1))/2 + (b1*b2*b3*c2*x1*(1 + x1))/2 + (a3*b1*c1*c2*x1*(1 + x1))/2 + (a3*b1*b2*c1*c2*x1*(1 + x1))/2 + (b1*b3*c1*c2*x1*(1 + x1))/2 + (a2*b1*b3*c1*c2*x1*(1 + x1))/2 + (a3*b1*b3*c1*c2*x1*(1 + x1))/2 + (b1*b2*b3*c1*c2*x1*(1 + x1))/2 + (a1*a2*c3*x1*(1 + x1))/2 + (a2*a3*c3*x1*(1 + x1))/2 + (b2*c3*x1*(1 + x1))/2 + (a1*b2*c3*x1*(1 + x1))/2 + (a1*a2*b2*c3*x1*(1 + x1))/2 + (a1*a3*b2*c3*x1*(1 + x1))/2 + (a1*b1*b2*c3*x1*(1 + x1))/2 + (a2*b1*b2*c3*x1*(1 + x1))/2 + (a3*b1*b2*c3*x1*(1 + x1))/2 + (a2*b3*c3*x1*(1 + x1))/2 + (a1*a2*b3*c3*x1*(1 + x1))/2 + (a2*a3*b3*c3*x1*(1 + x1))/2 + (a1*b2*b3*c3*x1*(1 + x1))/2 + (a2*b2*b3*c3*x1*(1 + x1))/2 + (a3*b2*b3*c3*x1*(1 + x1))/2 + (a2*b1*c1*c3*x1*(1 + x1))/2 + (a2*b1*b2*c1*c3*x1*(1 + x1))/2 + (a3*b1*b2*c1*c3*x1*(1 + x1))/2 + (a2*b1*b3*c1*c3*x1*(1 + x1))/2 + (b1*b2*b3*c1*c3*x1*(1 + x1))/2 + (b1*c2*c3*x1*(1 + x1))/2 + (a3*b1*c2*c3*x1*(1 + x1))/2 + (b2*c2*c3*x1*(1 + x1))/2 + (a3*b2*c2*c3*x1*(1 + x1))/2 + (b3*c2*c3*x1*(1 + x1))/2 + (b1*b3*c2*c3*x1*(1 + x1))/2 + (a3*b1*b3*c2*c3*x1*(1 + x1))/2 + (a1*b2*b3*c2*c3*x1*(1 + x1))/2 + (a3*b2*b3*c2*c3*x1*(1 + x1))/2 + (b1*b2*b3*c2*c3*x1*(1 + x1))/2 + (b1*b2*b3*c1*c2*c3*x1*(1 + x1))/2 + a1*a3*x2 + a3*b1*x2 + a2*a3*b1*x2 + a1*a3*b2*x2 + a1*a3*b1*b2*x2 + a1*b3*x2 + a1*a3*b3*x2 + a1*b1*b3*x2 + a1*a2*b1*b3*x2 + a2*a3*b1*b3*x2 + a1*a2*b2*b3*x2 + a1*a3*b2*b3*x2 + a1*a2*a3*b2*b3*x2 + b1*b2*b3*x2 + a1*b1*b2*b3*x2 + a2*b1*b2*b3*x2 + a3*b1*b2*b3*x2 + a1*a3*b1*b2*b3*x2 + a2*a3*b1*b2*b3*x2 + a3*b1*c1*x2 + b3*c1*x2 + a1*b3*c1*x2 + b1*b3*c1*x2 + a2*b1*b3*c1*x2 + b2*b3*c1*x2 + a1*a2*b2*b3*c1*x2 + a1*a3*b2*b3*c1*x2 + b1*b2*b3*c1*x2 + a3*b1*b2*b3*c1*x2 + a2*a3*b1*b2*b3*c1*x2 + a1*a3*c2*x2 + a1*a2*a3*c2*x2 + a3*b1*c2*x2 + a1*a3*b2*c2*x2 + a1*a2*a3*b2*c2*x2 + a3*b1*b2*c2*x2 + a1*a3*b1*b2*c2*x2 + a2*a3*b1*b2*c2*x2 + a1*b3*c2*x2 + a1*a2*b3*c2*x2 + a1*a3*b3*c2*x2 + a1*a2*a3*b3*c2*x2 + b1*b3*c2*x2 + a1*b1*b3*c2*x2 + a1*a2*b2*b3*c2*x2 + b1*b2*b3*c2*x2 + a2*b1*b2*b3*c2*x2 + a3*b1*b2*b3*c2*x2 + a2*a3*b1*c1*c2*x2 + a2*a3*b1*b2*c1*c2*x2 + b3*c1*c2*x2 + a1*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a2*b1*b3*c1*c2*x2 + a3*b1*b3*c1*c2*x2 + a2*a3*b1*b3*c1*c2*x2 + a1*a2*b2*b3*c1*c2*x2 + a1*a3*b2*b3*c1*c2*x2 + a3*b1*b2*b3*c1*c2*x2 + a1*a2*a3*c3*x2 + a1*a2*b1*c3*x2 + a1*a3*b1*c3*x2 + b1*b2*c3*x2 + a2*b1*b2*c3*x2 + a1*a3*b1*b2*c3*x2 + a2*a3*b1*b2*c3*x2 + a1*b3*c3*x2 + a1*a2*b3*c3*x2 + a1*a2*a3*b3*c3*x2 + a1*b1*b3*c3*x2 + a2*b1*b3*c3*x2 + a1*a2*b1*b3*c3*x2 + a1*a3*b1*b3*c3*x2 + a1*b2*b3*c3*x2 + a1*b1*b2*b3*c3*x2 + a2*b1*b2*b3*c3*x2 + a1*a3*b1*b2*b3*c3*x2 + a2*a3*b1*b2*b3*c3*x2 + a2*b1*c1*c3*x2 + a1*a3*b1*c1*c3*x2 + a1*b2*c1*c3*x2 + b1*b2*c1*c3*x2 + a1*b1*b2*c1*c3*x2 + a2*b1*b2*c1*c3*x2 + a1*b3*c1*c3*x2 + a1*b1*b3*c1*c3*x2 + a2*b1*b3*c1*c3*x2 + a1*a3*b1*b3*c1*c3*x2 + b1*b2*b3*c1*c3*x2 + a1*b1*b2*b3*c1*c3*x2 + a2*b1*b2*b3*c1*c3*x2 + a1*a2*c2*c3*x2 + a1*b1*c2*c3*x2 + a3*b1*c2*c3*x2 + a1*a3*b1*c2*c3*x2 + a1*b2*c2*c3*x2 + a1*a2*b2*c2*c3*x2 + b1*b2*c2*c3*x2 + a1*b1*b2*c2*c3*x2 + a2*b1*b2*c2*c3*x2 + a3*b1*b2*c2*c3*x2 + a1*b3*c2*c3*x2 + a1*a2*b3*c2*c3*x2 + b1*b3*c2*c3*x2 + a1*b1*b3*c2*c3*x2 + a3*b1*b3*c2*c3*x2 + a1*a3*b1*b3*c2*c3*x2 + a1*a2*b2*b3*c2*c3*x2 + b1*b2*b3*c2*c3*x2 + a1*b1*b2*b3*c2*c3*x2 + a2*b1*b2*b3*c2*c3*x2 + a3*b1*b2*b3*c2*c3*x2 + a2*b1*c1*c2*c3*x2 + a1*b2*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + a2*b1*b2*c1*c2*c3*x2 + a3*b1*b2*c1*c2*c3*x2 + a1*b3*c1*c2*c3*x2 + a2*b1*b3*c1*c2*c3*x2 + a2*b1*b2*b3*c1*c2*c3*x2 + a3*b1*b2*b3*c1*c2*c3*x2 + b3*x1*x2 + a3*b3*x1*x2 + a1*a3*c2*x1*x2 + a3*b2*c2*x1*x2 + a1*a3*b2*c2*x1*x2 + b3*c2*x1*x2 + a2*b3*c2*x1*x2 + a1*a2*b3*c2*x1*x2 + a3*b3*c2*x1*x2 + a1*a3*b3*c2*x1*x2 + b1*b3*c2*x1*x2 + a1*b1*b3*c2*x1*x2 + b2*b3*c2*x1*x2 + a1*b2*b3*c2*x1*x2 + a1*a2*c3*x1*x2 + a2*a3*c3*x1*x2 + a2*b1*c3*x1*x2 + a3*b1*c3*x1*x2 + a1*b2*c3*x1*x2 + a1*a2*b2*c3*x1*x2 + a1*a3*b2*c3*x1*x2 + b1*b2*c3*x1*x2 + a1*b1*b2*c3*x1*x2 + b3*c3*x1*x2 + a2*b3*c3*x1*x2 + a1*a2*b3*c3*x1*x2 + a2*a3*b3*c3*x1*x2 + b1*b3*c3*x1*x2 + a2*b1*b3*c3*x1*x2 + a3*b1*b3*c3*x1*x2 + a1*b2*b3*c3*x1*x2 + a2*b2*b3*c3*x1*x2 + a3*b2*b3*c3*x1*x2 + a3*b1*c1*c3*x1*x2 + b1*b2*c1*c3*x1*x2 + b1*b3*c1*c3*x1*x2 + a3*b1*b3*c1*c3*x1*x2 + b1*b2*b3*c1*c3*x1*x2 + b1*c2*c3*x1*x2 + a3*b1*c2*c3*x1*x2 + b2*c2*c3*x1*x2 + a3*b2*c2*c3*x1*x2 + b3*c2*c3*x1*x2 + b1*b3*c2*c3*x1*x2 + a3*b1*b3*c2*c3*x1*x2 + a1*b2*b3*c2*c3*x1*x2 + a3*b2*b3*c2*c3*x1*x2 + (a1*a3*x2*(1 + x2))/2 + (a3*b1*x2*(1 + x2))/2 + (a1*a3*b2*x2*(1 + x2))/2 + (a3*b1*b2*x2*(1 + x2))/2 + (a1*a2*b3*x2*(1 + x2))/2 + (a1*a3*b3*x2*(1 + x2))/2 + (a1*b1*b3*x2*(1 + x2))/2 + (a2*b1*b3*x2*(1 + x2))/2 + (a3*b1*b3*x2*(1 + x2))/2 + (a1*a3*c1*x2*(1 + x2))/2 + (a1*a3*b2*c1*x2*(1 + x2))/2 + (a1*a2*b3*c1*x2*(1 + x2))/2 + (a1*a3*b3*c1*x2*(1 + x2))/2 + (b1*b3*c1*x2*(1 + x2))/2 + (a1*a3*c2*x2*(1 + x2))/2 + (a3*b1*c2*x2*(1 + x2))/2 + (a1*a3*b2*c2*x2*(1 + x2))/2 + (a3*b1*b2*c2*x2*(1 + x2))/2 + (a1*a2*b3*c2*x2*(1 + x2))/2 + (a1*a3*b3*c2*x2*(1 + x2))/2 + (a1*b1*b3*c2*x2*(1 + x2))/2 + (a2*b1*b3*c2*x2*(1 + x2))/2 + (a3*b1*b3*c2*x2*(1 + x2))/2 + (a3*b1*c1*c2*x2*(1 + x2))/2 + (a3*b1*b2*c1*c2*x2*(1 + x2))/2 + (b1*b3*c1*c2*x2*(1 + x2))/2 + (a2*b1*b3*c1*c2*x2*(1 + x2))/2 + (a3*b1*b3*c1*c2*x2*(1 + x2))/2 + (a1*b2*b3*c1*c2*x2*(1 + x2))/2 + (b1*b2*b3*c1*c2*x2*(1 + x2))/2 + (a1*a2*c3*x2*(1 + x2))/2 + (b1*c3*x2*(1 + x2))/2 + (a1*b2*c3*x2*(1 + x2))/2 + (a1*a2*b2*c3*x2*(1 + x2))/2 + (a1*a3*b2*c3*x2*(1 + x2))/2 + (a1*b1*b2*c3*x2*(1 + x2))/2 + (a2*b1*b2*c3*x2*(1 + x2))/2 + (a3*b1*b2*c3*x2*(1 + x2))/2 + (a1*a2*b3*c3*x2*(1 + x2))/2 + (a1*b2*b3*c3*x2*(1 + x2))/2 + (a2*b1*c1*c3*x2*(1 + x2))/2 + (a2*b1*b2*c1*c3*x2*(1 + x2))/2 + (a3*b1*b2*c1*c3*x2*(1 + x2))/2 + (a2*b1*b3*c1*c3*x2*(1 + x2))/2 + (b1*b2*b3*c1*c3*x2*(1 + x2))/2 + (b1*c2*c3*x2*(1 + x2))/2 + (a3*b1*c2*c3*x2*(1 + x2))/2 + (b1*b3*c2*c3*x2*(1 + x2))/2 + (a3*b1*b3*c2*c3*x2*(1 + x2))/2 + (a1*b2*b3*c2*c3*x2*(1 + x2))/2 + (b1*b2*b3*c2*c3*x2*(1 + x2))/2 + (b1*b2*b3*c1*c2*c3*x2*(1 + x2))/2 + a1*a2*x3 + a1*a2*a3*x3 + a2*b1*x3 + a1*a2*b2*x3 + a1*a3*b2*x3 + a1*a2*a3*b2*x3 + b1*b2*x3 + a1*b1*b2*x3 + a2*b1*b2*x3 + a1*a3*b1*b2*x3 + a2*a3*b1*b2*x3 + a1*a2*b3*x3 + a1*a2*a3*b3*x3 + a1*b2*b3*x3 + a1*a2*b2*b3*x3 + a1*a3*b2*b3*x3 + a1*a2*a3*b2*b3*x3 + a1*b1*b2*b3*x3 + a2*b1*b2*b3*x3 + a1*a3*b1*b2*b3*x3 + a2*a3*b1*b2*b3*x3 + a1*a2*c1*x3 + a1*a2*a3*c1*x3 + a2*b1*c1*x3 + b2*c1*x3 + a1*b2*c1*x3 + a1*a2*b2*c1*x3 + a1*a2*a3*b2*c1*x3 + b1*b2*c1*x3 + a2*b3*c1*x3 + a1*a2*b3*c1*x3 + a1*a2*a3*b3*c1*x3 + a1*a2*b2*b3*c1*x3 + a1*a3*b2*b3*c1*x3 + a3*b1*b2*b3*c1*x3 + a2*a3*b1*b2*b3*c1*x3 + a1*a2*c2*x3 + a1*a3*c2*x3 + b1*c2*x3 + a1*b1*c2*x3 + a1*b2*c2*x3 + a1*a2*b2*c2*x3 + a1*a3*b2*c2*x3 + b1*b2*c2*x3 + a1*b1*b2*c2*x3 + a2*b1*b2*c2*x3 + a3*b1*b2*c2*x3 + a1*a2*b3*c2*x3 + a1*a3*b3*c2*x3 + b1*b3*c2*x3 + a1*b1*b3*c2*x3 + a2*b1*b3*c2*x3 + a1*a2*b2*b3*c2*x3 + a1*a3*b2*b3*c2*x3 + a1*b1*b2*b3*c2*x3 + a2*b1*b2*b3*c2*x3 + a3*b1*b2*b3*c2*x3 + c1*c2*x3 + b1*c1*c2*x3 + a2*b1*c1*c2*x3 + a3*b1*c1*c2*x3 + b2*c1*c2*x3 + a1*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a2*b1*b2*c1*c2*x3 + a3*b1*b2*c1*c2*x3 + b3*c1*c2*x3 + a2*b3*c1*c2*x3 + b1*b3*c1*c2*x3 + a2*b1*b3*c1*c2*x3 + a3*b1*b3*c1*c2*x3 + a1*b2*b3*c1*c2*x3 + a1*a2*b2*b3*c1*c2*x3 + a3*b1*b2*b3*c1*c2*x3 + a1*a2*c3*x3 + a1*a2*a3*c3*x3 + a2*b1*c3*x3 + a1*a2*b1*c3*x3 + a1*a3*b2*c3*x3 + a1*a2*a3*b2*c3*x3 + b1*b2*c3*x3 + a1*a2*b1*b2*c3*x3 + a1*a3*b1*b2*c3*x3 + a2*a3*b1*b2*c3*x3 + a1*a2*a3*b3*c3*x3 + a2*b1*b3*c3*x3 + a1*a2*b1*b3*c3*x3 + a1*a2*b2*b3*c3*x3 + a1*a3*b2*b3*c3*x3 + b1*b2*b3*c3*x3 + a1*b1*b2*b3*c3*x3 + a1*a3*b1*b2*b3*c3*x3 + a1*b2*c1*c3*x3 + a3*b2*c1*c3*x3 + a1*a3*b2*c1*c3*x3 + b1*b2*c1*c3*x3 + a1*b1*b2*c1*c3*x3 + a3*b1*b2*c1*c3*x3 + a2*a3*b1*b2*c1*c3*x3 + a2*b3*c1*c3*x3 + a1*b2*b3*c1*c3*x3 + a3*b2*b3*c1*c3*x3 + a1*a3*b2*b3*c1*c3*x3 + a1*b1*b2*b3*c1*c3*x3 + a3*b1*b2*b3*c1*c3*x3 + a2*b1*c2*c3*x3 + a1*b2*c2*c3*x3 + b1*b2*c2*c3*x3 + a2*b1*b2*c2*c3*x3 + a3*b1*b2*c2*c3*x3 + a2*b1*b3*c2*c3*x3 + a1*a2*b2*b3*c2*c3*x3 + b1*b2*b3*c2*c3*x3 + a2*b1*b2*b3*c2*c3*x3 + c1*c2*c3*x3 + a2*b1*c1*c2*c3*x3 + a1*b2*c1*c2*c3*x3 + a3*b2*c1*c2*c3*x3 + a2*b1*b2*c1*c2*c3*x3 + a3*b1*b2*c1*c2*c3*x3 + a2*b3*c1*c2*c3*x3 + a2*b1*b3*c1*c2*c3*x3 + a3*b2*b3*c1*c2*c3*x3 + b1*b2*b3*c1*c2*c3*x3 + a2*b1*b2*b3*c1*c2*c3*x3 + a1*a2*c3*x1*x3 + a2*a3*c3*x1*x3 + a2*b1*c3*x1*x3 + a1*b2*c3*x1*x3 + a1*a2*b2*c3*x1*x3 + a3*b2*c3*x1*x3 + a1*a3*b2*c3*x1*x3 + b1*b2*c3*x1*x3 + a1*b1*b2*c3*x1*x3 + a2*b3*c3*x1*x3 + a1*a2*b3*c3*x1*x3 + a2*a3*b3*c3*x1*x3 + a2*b1*b3*c3*x1*x3 + b2*b3*c3*x1*x3 + a1*b2*b3*c3*x1*x3 + a2*b2*b3*c3*x1*x3 + a3*b2*c1*c3*x1*x3 + b1*b2*c1*c3*x1*x3 + b2*b3*c1*c3*x1*x3 + a3*b2*b3*c1*c3*x1*x3 + b1*b2*b3*c1*c3*x1*x3 + b2*b3*c2*c3*x1*x3 + a1*b2*b3*c2*c3*x1*x3 + a1*a2*x2*x3 + a1*a3*x2*x3 + a1*b1*x2*x3 + a2*b1*x2*x3 + a3*b1*x2*x3 + a1*a2*b2*x2*x3 + a1*a3*b2*x2*x3 + a1*b1*b2*x2*x3 + a2*b1*b2*x2*x3 + a3*b1*b2*x2*x3 + a1*a2*b3*x2*x3 + a1*a3*b3*x2*x3 + a1*b1*b3*x2*x3 + a2*b1*b3*x2*x3 + a3*b1*b3*x2*x3 + c1*x2*x3 + a1*a2*c1*x2*x3 + a1*a3*c1*x2*x3 + b1*c1*x2*x3 + a1*a2*b2*c1*x2*x3 + a1*a3*b2*c1*x2*x3 + b1*b2*c1*x2*x3 + a1*a2*b3*c1*x2*x3 + a1*a3*b3*c1*x2*x3 + b1*b3*c1*x2*x3 + a1*b2*b3*c2*x2*x3 + b1*b2*b3*c2*x2*x3 + a1*b2*b3*c1*c2*x2*x3 + a1*a2*c3*x2*x3 + b1*c3*x2*x3 + a3*b1*c3*x2*x3 + a1*b2*c3*x2*x3 + a1*a2*b2*c3*x2*x3 + a1*a3*b2*c3*x2*x3 + a1*b1*b2*c3*x2*x3 + a2*b1*b2*c3*x2*x3 + a3*b1*b2*c3*x2*x3 + a1*a2*b3*c3*x2*x3 + b1*b3*c3*x2*x3 + a3*b1*b3*c3*x2*x3 + a1*b2*b3*c3*x2*x3 + a2*b1*c1*c3*x2*x3 + a2*b1*b2*c1*c3*x2*x3 + a3*b1*b2*c1*c3*x2*x3 + a2*b1*b3*c1*c3*x2*x3 + b1*b2*b3*c1*c3*x2*x3 + a1*b2*b3*c2*c3*x2*x3 + b1*b2*b3*c2*c3*x2*x3 + b1*b2*b3*c1*c2*c3*x2*x3 + (a1*a2*x3*(1 + x3))/2 + (a1*b2*x3*(1 + x3))/2 + (a1*a2*b2*x3*(1 + x3))/2 + (a1*a3*b2*x3*(1 + x3))/2 + (a1*b1*b2*x3*(1 + x3))/2 + (a2*b1*b2*x3*(1 + x3))/2 + (a3*b1*b2*x3*(1 + x3))/2 + (a1*a2*b3*x3*(1 + x3))/2 + (a1*b2*b3*x3*(1 + x3))/2 + (a1*a2*c1*x3*(1 + x3))/2 + (a2*a3*c1*x3*(1 + x3))/2 + (a1*a2*b2*c1*x3*(1 + x3))/2 + (a1*a3*b2*c1*x3*(1 + x3))/2 + (a1*a2*b3*c1*x3*(1 + x3))/2 + (a2*a3*b3*c1*x3*(1 + x3))/2 + (b1*b2*b3*c1*x3*(1 + x3))/2 + (a1*a2*c2*x3*(1 + x3))/2 + (b1*c2*x3*(1 + x3))/2 + (a1*b1*c2*x3*(1 + x3))/2 + (a2*b1*c2*x3*(1 + x3))/2 + (a3*b1*c2*x3*(1 + x3))/2 + (a1*a2*b2*c2*x3*(1 + x3))/2 + (a1*a3*b2*c2*x3*(1 + x3))/2 + (a1*b1*b2*c2*x3*(1 + x3))/2 + (a2*b1*b2*c2*x3*(1 + x3))/2 + (a3*b1*b2*c2*x3*(1 + x3))/2 + (a1*a2*b3*c2*x3*(1 + x3))/2 + (b1*b3*c2*x3*(1 + x3))/2 + (a1*b1*b3*c2*x3*(1 + x3))/2 + (a2*b1*b3*c2*x3*(1 + x3))/2 + (a3*b1*b3*c2*x3*(1 + x3))/2 + (c1*c2*x3*(1 + x3))/2 + (b1*c1*c2*x3*(1 + x3))/2 + (a2*b1*c1*c2*x3*(1 + x3))/2 + (a3*b1*c1*c2*x3*(1 + x3))/2 + (a3*b2*c1*c2*x3*(1 + x3))/2 + (b1*b2*c1*c2*x3*(1 + x3))/2 + (a2*b1*b2*c1*c2*x3*(1 + x3))/2 + (a3*b1*b2*c1*c2*x3*(1 + x3))/2 + (b1*b3*c1*c2*x3*(1 + x3))/2 + (a2*b1*b3*c1*c2*x3*(1 + x3))/2 + (a3*b1*b3*c1*c2*x3*(1 + x3))/2 + (a1*b2*b3*c1*c2*x3*(1 + x3))/2 + (a3*b2*b3*c1*c2*x3*(1 + x3))/2 + (b1*b2*b3*c1*c2*x3*(1 + x3))/2 + (a1*a2*c3*x3*(1 + x3))/2 + (a1*b2*c3*x3*(1 + x3))/2 + (a1*a2*b2*c3*x3*(1 + x3))/2 + (a1*a3*b2*c3*x3*(1 + x3))/2 + (a1*b1*b2*c3*x3*(1 + x3))/2 + (a2*b1*b2*c3*x3*(1 + x3))/2 + (a3*b1*b2*c3*x3*(1 + x3))/2 + (a1*a2*b3*c3*x3*(1 + x3))/2 + (a1*b2*b3*c3*x3*(1 + x3))/2 + (a2*b1*c1*c3*x3*(1 + x3))/2 + (a2*b1*b2*c1*c3*x3*(1 + x3))/2 + (a3*b1*b2*c1*c3*x3*(1 + x3))/2 + (a2*b1*b3*c1*c3*x3*(1 + x3))/2 + (b1*b2*b3*c1*c3*x3*(1 + x3))/2 + (b1*c2*c3*x3*(1 + x3))/2 + (a3*b1*c2*c3*x3*(1 + x3))/2 + (b1*b3*c2*c3*x3*(1 + x3))/2 + (a3*b1*b3*c2*c3*x3*(1 + x3))/2 + (a1*b2*b3*c2*c3*x3*(1 + x3))/2 + (b1*b2*b3*c2*c3*x3*(1 + x3))/2 + (b1*b2*b3*c1*c2*c3*x3*(1 + x3))/2 + a1*a3*b2*y1 + a2*a3*b2*y1 + a3*b1*b2*y1 + a1*a2*b3*y1 + a2*a3*b3*y1 + a2*b1*b3*y1 + a1*b2*b3*y1 + a2*b2*b3*y1 + a1*a3*b2*b3*y1 + a2*a3*b2*b3*y1 + a1*a2*a3*b2*b3*y1 + b1*b2*b3*y1 + a1*a3*b1*b2*b3*y1 + a2*a3*b1*b2*b3*y1 + a2*a3*b1*c1*y1 + a2*a3*b2*c1*y1 + a1*a3*b1*b2*c1*y1 + a2*b3*c1*y1 + a1*a2*b3*c1*y1 + a2*a3*b3*c1*y1 + a2*b1*b3*c1*y1 + a1*a2*b1*b3*c1*y1 + a2*a3*b1*b3*c1*y1 + b2*b3*c1*y1 + a1*b2*b3*c1*y1 + a2*b2*b3*c1*y1 + a1*a3*b2*b3*c1*y1 + a2*a3*b2*b3*c1*y1 + a3*b1*b2*b3*c1*y1 + a1*a3*c2*y1 + a1*a2*a3*c2*y1 + a3*b1*c2*y1 + a1*a3*b1*c2*y1 + a3*b2*c2*y1 + a1*a2*a3*b2*c2*y1 + a3*b1*b2*c2*y1 + a2*a3*b1*b2*c2*y1 + a1*b3*c2*y1 + a2*b3*c2*y1 + a1*a2*a3*b3*c2*y1 + b1*b3*c2*y1 + a1*b1*b3*c2*y1 + a1*a2*b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + b2*b3*c2*y1 + a2*b2*b3*c2*y1 + a1*a3*b2*b3*c2*y1 + a2*a3*b2*b3*c2*y1 + b1*b2*b3*c2*y1 + a1*b1*b2*b3*c2*y1 + a1*a3*c1*c2*y1 + a1*a3*b2*c1*c2*y1 + a3*b1*b2*c1*c2*y1 + b3*c1*c2*y1 + a2*b3*c1*c2*y1 + a1*a2*b3*c1*c2*y1 + a3*b3*c1*c2*y1 + a1*a3*b3*c1*c2*y1 + b1*b3*c1*c2*y1 + a1*b1*b3*c1*c2*y1 + b2*b3*c1*c2*y1 + b1*b2*b3*c1*c2*y1 + a1*b1*b2*b3*c1*c2*y1 + a3*b1*b2*b3*c1*c2*y1 + a1*a2*b1*c3*y1 + a2*a3*b1*c3*y1 + a2*b2*c3*y1 + a1*a3*b2*c3*y1 + a2*a3*b2*c3*y1 + a2*b1*b2*c3*y1 + a1*a2*b1*b2*c3*y1 + a2*a3*b1*b2*c3*y1 + a2*b3*c3*y1 + a2*b1*b3*c3*y1 + a1*a2*b1*b3*c3*y1 + a2*a3*b1*b3*c3*y1 + a1*a2*b2*b3*c3*y1 + a2*a3*b2*b3*c3*y1 + b1*b2*b3*c3*y1 + a1*b1*b2*b3*c3*y1 + a2*b1*b2*b3*c3*y1 + a1*a3*b1*b2*b3*c3*y1 + a2*a3*b1*b2*b3*c3*y1 + a1*a2*c1*c3*y1 + a2*a3*c1*c3*y1 + a1*b2*c1*c3*y1 + a2*b2*c1*c3*y1 + a1*a2*b2*c1*c3*y1 + a3*b2*c1*c3*y1 + a2*a3*b2*c1*c3*y1 + b1*b2*c1*c3*y1 + a2*b1*b2*c1*c3*y1 + a1*a2*b3*c1*c3*y1 + a2*a3*b3*c1*c3*y1 + a2*b1*b3*c1*c3*y1 + b2*b3*c1*c3*y1 + a1*a3*b2*b3*c1*c3*y1 + a2*a3*b2*b3*c1*c3*y1 + a1*b1*b2*b3*c1*c3*y1 + a2*b1*b2*b3*c1*c3*y1 + a1*a2*c2*c3*y1 + a2*a3*c2*c3*y1 + b1*c2*c3*y1 + a3*b1*c2*c3*y1 + b2*c2*c3*y1 + a1*b2*c2*c3*y1 + a1*a2*b2*c2*c3*y1 + a3*b2*c2*c3*y1 + a1*a3*b2*c2*c3*y1 + a1*b1*b2*c2*c3*y1 + a2*b1*b2*c2*c3*y1 + a3*b1*b2*c2*c3*y1 + a1*b3*c2*c3*y1 + a2*b3*c2*c3*y1 + a1*a2*b3*c2*c3*y1 + a2*a3*b3*c2*c3*y1 + a3*b1*b3*c2*c3*y1 + a1*a2*b2*b3*c2*c3*y1 + a3*b2*b3*c2*c3*y1 + a1*a3*b2*b3*c2*c3*y1 + b1*b2*b3*c2*c3*y1 + a2*b1*b2*b3*c2*c3*y1 + a3*b1*b2*b3*c2*c3*y1 + b1*c1*c2*c3*y1 + a3*b1*b2*c1*c2*c3*y1 + b3*c1*c2*c3*y1 + a1*b2*b3*c1*c2*c3*y1 + a3*b1*b2*b3*c1*c2*c3*y1 + a3*b2*x1*y1 + a2*b3*x1*y1 + a1*a3*c2*x1*y1 + a3*b1*c2*x1*y1 + a3*b2*c2*x1*y1 + a1*a3*b2*c2*x1*y1 + a3*b1*b2*c2*x1*y1 + b3*c2*x1*y1 + a2*b3*c2*x1*y1 + a1*a2*b3*c2*x1*y1 + a3*b3*c2*x1*y1 + a1*a3*b3*c2*x1*y1 + a1*b1*b3*c2*x1*y1 + a2*b1*b3*c2*x1*y1 + a3*b1*b3*c2*x1*y1 + a1*b2*b3*c2*x1*y1 + b1*b2*b3*c2*x1*y1 + a3*b1*c1*c2*x1*y1 + a3*b1*b2*c1*c2*x1*y1 + b1*b3*c1*c2*x1*y1 + a2*b1*b3*c1*c2*x1*y1 + a3*b1*b3*c1*c2*x1*y1 + b1*b2*b3*c1*c2*x1*y1 + a1*a2*c3*x1*y1 + a2*a3*c3*x1*y1 + b2*c3*x1*y1 + a1*b2*c3*x1*y1 + a1*a2*b2*c3*x1*y1 + a1*a3*b2*c3*x1*y1 + a1*b1*b2*c3*x1*y1 + a2*b1*b2*c3*x1*y1 + a3*b1*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + a1*a2*b3*c3*x1*y1 + a2*a3*b3*c3*x1*y1 + a1*b2*b3*c3*x1*y1 + a2*b2*b3*c3*x1*y1 + a3*b2*b3*c3*x1*y1 + a2*b1*c1*c3*x1*y1 + a2*b1*b2*c1*c3*x1*y1 + a3*b1*b2*c1*c3*x1*y1 + a2*b1*b3*c1*c3*x1*y1 + b1*b2*b3*c1*c3*x1*y1 + b1*c2*c3*x1*y1 + a3*b1*c2*c3*x1*y1 + b2*c2*c3*x1*y1 + a3*b2*c2*c3*x1*y1 + b3*c2*c3*x1*y1 + b1*b3*c2*c3*x1*y1 + a3*b1*b3*c2*c3*x1*y1 + a1*b2*b3*c2*c3*x1*y1 + a3*b2*b3*c2*c3*x1*y1 + b1*b2*b3*c2*c3*x1*y1 + b1*b2*b3*c1*c2*c3*x1*y1 + b3*x2*y1 + a3*b3*x2*y1 + a1*a3*c2*x2*y1 + a3*b1*c2*x2*y1 + a3*b2*c2*x2*y1 + a1*a3*b2*c2*x2*y1 + a3*b1*b2*c2*x2*y1 + b3*c2*x2*y1 + a2*b3*c2*x2*y1 + a1*a2*b3*c2*x2*y1 + a3*b3*c2*x2*y1 + a1*a3*b3*c2*x2*y1 + a1*b1*b3*c2*x2*y1 + a2*b1*b3*c2*x2*y1 + a3*b1*b3*c2*x2*y1 + b2*b3*c2*x2*y1 + a1*b2*b3*c2*x2*y1 + b1*b2*b3*c2*x2*y1 + a1*a2*c3*x2*y1 + a2*a3*c3*x2*y1 + a1*b2*c3*x2*y1 + a1*a2*b2*c3*x2*y1 + a1*a3*b2*c3*x2*y1 + a1*b1*b2*c3*x2*y1 + a2*b1*b2*c3*x2*y1 + a3*b1*b2*c3*x2*y1 + b3*c3*x2*y1 + a2*b3*c3*x2*y1 + a1*a2*b3*c3*x2*y1 + a2*a3*b3*c3*x2*y1 + a1*b2*b3*c3*x2*y1 + a2*b2*b3*c3*x2*y1 + a3*b2*b3*c3*x2*y1 + a3*b1*c1*c3*x2*y1 + b1*b2*c1*c3*x2*y1 + b1*b3*c1*c3*x2*y1 + a3*b1*b3*c1*c3*x2*y1 + b1*b2*b3*c1*c3*x2*y1 + b1*c2*c3*x2*y1 + a3*b1*c2*c3*x2*y1 + b2*c2*c3*x2*y1 + a3*b2*c2*c3*x2*y1 + b3*c2*c3*x2*y1 + b1*b3*c2*c3*x2*y1 + a3*b1*b3*c2*c3*x2*y1 + a1*b2*b3*c2*c3*x2*y1 + a3*b2*b3*c2*c3*x2*y1 + b1*b2*b3*c2*c3*x2*y1 + a1*a2*c3*x3*y1 + a2*a3*c3*x3*y1 + a1*b2*c3*x3*y1 + a1*a2*b2*c3*x3*y1 + a1*a3*b2*c3*x3*y1 + a1*b1*b2*c3*x3*y1 + a2*b1*b2*c3*x3*y1 + a3*b1*b2*c3*x3*y1 + a2*b3*c3*x3*y1 + a1*a2*b3*c3*x3*y1 + a2*a3*b3*c3*x3*y1 + a1*b2*b3*c3*x3*y1 + a2*b2*b3*c3*x3*y1 + a3*b2*b3*c3*x3*y1 + a3*b2*c1*c3*x3*y1 + b1*b2*c1*c3*x3*y1 + b2*b3*c1*c3*x3*y1 + a3*b2*b3*c1*c3*x3*y1 + b1*b2*b3*c1*c3*x3*y1 + b2*b3*c2*c3*x3*y1 + a1*b2*b3*c2*c3*x3*y1 + b1*b2*b3*c2*c3*x3*y1 + (a3*b2*y1*(1 + y1))/2 + (a2*b3*y1*(1 + y1))/2 + (a1*a3*c2*y1*(1 + y1))/2 + (a3*b1*c2*y1*(1 + y1))/2 + (a3*b2*c2*y1*(1 + y1))/2 + (a1*a3*b2*c2*y1*(1 + y1))/2 + (a3*b1*b2*c2*y1*(1 + y1))/2 + (b3*c2*y1*(1 + y1))/2 + (a2*b3*c2*y1*(1 + y1))/2 + (a1*a2*b3*c2*y1*(1 + y1))/2 + (a3*b3*c2*y1*(1 + y1))/2 + (a1*a3*b3*c2*y1*(1 + y1))/2 + (a1*b1*b3*c2*y1*(1 + y1))/2 + (a2*b1*b3*c2*y1*(1 + y1))/2 + (a3*b1*b3*c2*y1*(1 + y1))/2 + (a1*b2*b3*c2*y1*(1 + y1))/2 + (b1*b2*b3*c2*y1*(1 + y1))/2 + (a3*b1*c1*c2*y1*(1 + y1))/2 + (a3*b1*b2*c1*c2*y1*(1 + y1))/2 + (b1*b3*c1*c2*y1*(1 + y1))/2 + (a2*b1*b3*c1*c2*y1*(1 + y1))/2 + (a3*b1*b3*c1*c2*y1*(1 + y1))/2 + (b1*b2*b3*c1*c2*y1*(1 + y1))/2 + (a1*a2*c3*y1*(1 + y1))/2 + (a2*a3*c3*y1*(1 + y1))/2 + (b2*c3*y1*(1 + y1))/2 + (a1*b2*c3*y1*(1 + y1))/2 + (a1*a2*b2*c3*y1*(1 + y1))/2 + (a1*a3*b2*c3*y1*(1 + y1))/2 + (a1*b1*b2*c3*y1*(1 + y1))/2 + (a2*b1*b2*c3*y1*(1 + y1))/2 + (a3*b1*b2*c3*y1*(1 + y1))/2 + (a2*b3*c3*y1*(1 + y1))/2 + (a1*a2*b3*c3*y1*(1 + y1))/2 + (a2*a3*b3*c3*y1*(1 + y1))/2 + (a1*b2*b3*c3*y1*(1 + y1))/2 + (a2*b2*b3*c3*y1*(1 + y1))/2 + (a3*b2*b3*c3*y1*(1 + y1))/2 + (a2*b1*c1*c3*y1*(1 + y1))/2 + (a2*b1*b2*c1*c3*y1*(1 + y1))/2 + (a3*b1*b2*c1*c3*y1*(1 + y1))/2 + (a2*b1*b3*c1*c3*y1*(1 + y1))/2 + (b1*b2*b3*c1*c3*y1*(1 + y1))/2 + (b1*c2*c3*y1*(1 + y1))/2 + (a3*b1*c2*c3*y1*(1 + y1))/2 + (b2*c2*c3*y1*(1 + y1))/2 + (a3*b2*c2*c3*y1*(1 + y1))/2 + (b3*c2*c3*y1*(1 + y1))/2 + (b1*b3*c2*c3*y1*(1 + y1))/2 + (a3*b1*b3*c2*c3*y1*(1 + y1))/2 + (a1*b2*b3*c2*c3*y1*(1 + y1))/2 + (a3*b2*b3*c2*c3*y1*(1 + y1))/2 + (b1*b2*b3*c2*c3*y1*(1 + y1))/2 + (b1*b2*b3*c1*c2*c3*y1*(1 + y1))/2 + a1*b2*b3*y2 + a1*a3*b2*b3*y2 + a1*a2*a3*b2*b3*y2 + b1*b2*b3*y2 + a1*a3*b1*b2*b3*y2 + a2*a3*b1*b2*b3*y2 + a3*b1*b2*c1*y2 + b1*b3*c1*y2 + a2*b1*b3*c1*y2 + a1*a2*b2*b3*c1*y2 + a1*a3*b2*b3*c1*y2 + b1*b2*b3*c1*y2 + a2*b1*b2*b3*c1*y2 + a3*b1*b2*b3*c1*y2 + a2*a3*b1*b2*b3*c1*y2 + a1*a2*a3*c2*y2 + a1*a2*a3*b2*c2*y2 + a3*b1*b2*c2*y2 + a1*a3*b1*b2*c2*y2 + a2*a3*b1*b2*c2*y2 + a1*a2*a3*b3*c2*y2 + a1*b2*b3*c2*y2 + a1*a3*b2*b3*c2*y2 + a2*a3*b1*c1*c2*y2 + a2*a3*b1*b2*c1*c2*y2 + a2*b1*b3*c1*c2*y2 + a3*b1*b3*c1*c2*y2 + a2*a3*b1*b3*c1*c2*y2 + a1*a2*b2*b3*c1*c2*y2 + a1*a3*b2*b3*c1*c2*y2 + b1*b2*b3*c1*c2*y2 + a2*b1*b2*b3*c1*c2*y2 + a1*a2*c3*y2 + a1*a2*a3*c3*y2 + a1*b1*c3*y2 + a1*a2*b1*c3*y2 + a1*a3*b1*c3*y2 + a1*a2*b2*c3*y2 + b1*b2*c3*y2 + a3*b1*b2*c3*y2 + a1*a3*b1*b2*c3*y2 + a2*a3*b1*b2*c3*y2 + a1*a2*a3*b3*c3*y2 + a1*b1*b3*c3*y2 + a1*a2*b1*b3*c3*y2 + a1*a3*b1*b3*c3*y2 + a1*b2*b3*c3*y2 + a1*a3*b2*b3*c3*y2 + b1*b2*b3*c3*y2 + a3*b1*b2*b3*c3*y2 + a1*a3*b1*b2*b3*c3*y2 + a2*a3*b1*b2*b3*c3*y2 + a2*b1*c1*c3*y2 + a3*b1*c1*c3*y2 + a1*a3*b1*c1*c3*y2 + b1*b2*c1*c3*y2 + a1*b1*b2*c1*c3*y2 + a2*b1*b2*c1*c3*y2 + a3*b1*b2*c1*c3*y2 + b1*b3*c1*c3*y2 + a1*b1*b3*c1*c3*y2 + a2*b1*b3*c1*c3*y2 + a3*b1*b3*c1*c3*y2 + a1*a3*b1*b3*c1*c3*y2 + a1*b1*b2*b3*c1*c3*y2 + a2*b1*b2*b3*c1*c3*y2 + a3*b1*b2*b3*c1*c3*y2 + a1*a2*c2*c3*y2 + a1*b1*c2*c3*y2 + a1*a3*b1*c2*c3*y2 + a1*a2*b2*c2*c3*y2 + b1*b2*c2*c3*y2 + a1*b1*b2*c2*c3*y2 + a2*b1*b2*c2*c3*y2 + a1*a2*b3*c2*c3*y2 + a1*b1*b3*c2*c3*y2 + a1*a3*b1*b3*c2*c3*y2 + a1*b2*b3*c2*c3*y2 + a1*a2*b2*b3*c2*c3*y2 + a1*b1*b2*b3*c2*c3*y2 + a2*b1*b2*b3*c2*c3*y2 + a2*b1*c1*c2*c3*y2 + a2*b1*b2*c1*c2*c3*y2 + a3*b1*b2*c1*c2*c3*y2 + b1*b3*c1*c2*c3*y2 + a2*b1*b3*c1*c2*c3*y2 + a2*b1*b2*b3*c1*c2*c3*y2 + a3*b1*b2*b3*c1*c2*c3*y2 + a1*a3*x1*y2 + a3*b2*x1*y2 + a1*a3*b2*x1*y2 + a2*b3*x1*y2 + a1*a2*b3*x1*y2 + a1*a3*b3*x1*y2 + b1*b3*x1*y2 + a1*b1*b3*x1*y2 + a1*a3*c2*x1*y2 + a3*b2*c2*x1*y2 + a1*a3*b2*c2*x1*y2 + b3*c2*x1*y2 + a2*b3*c2*x1*y2 + a1*a2*b3*c2*x1*y2 + a3*b3*c2*x1*y2 + a1*a3*b3*c2*x1*y2 + b1*b3*c2*x1*y2 + a1*b1*b3*c2*x1*y2 + a1*a2*c3*x1*y2 + a2*a3*c3*x1*y2 + b1*c3*x1*y2 + a2*b1*c3*x1*y2 + a3*b1*c3*x1*y2 + b2*c3*x1*y2 + a1*b2*c3*x1*y2 + a1*a2*b2*c3*x1*y2 + a1*a3*b2*c3*x1*y2 + b1*b2*c3*x1*y2 + a1*b1*b2*c3*x1*y2 + a2*b3*c3*x1*y2 + a1*a2*b3*c3*x1*y2 + a2*a3*b3*c3*x1*y2 + b1*b3*c3*x1*y2 + a2*b1*b3*c3*x1*y2 + a3*b1*b3*c3*x1*y2 + a1*b2*b3*c3*x1*y2 + a2*b2*b3*c3*x1*y2 + a3*b2*b3*c3*x1*y2 + a3*b1*c1*c3*x1*y2 + b1*b2*c1*c3*x1*y2 + b1*b3*c1*c3*x1*y2 + a3*b1*b3*c1*c3*x1*y2 + b1*b2*b3*c1*c3*x1*y2 + b1*c2*c3*x1*y2 + a3*b1*c2*c3*x1*y2 + b2*c2*c3*x1*y2 + a3*b2*c2*c3*x1*y2 + b3*c2*c3*x1*y2 + b1*b3*c2*c3*x1*y2 + a3*b1*b3*c2*c3*x1*y2 + a1*b2*b3*c2*c3*x1*y2 + a3*b2*b3*c2*c3*x1*y2 + a1*a3*c1*x2*y2 + a3*b1*c1*x2*y2 + a1*a3*b2*c1*x2*y2 + a3*b1*b2*c1*x2*y2 + a1*a2*b3*c1*x2*y2 + a1*a3*b3*c1*x2*y2 + a2*b1*b3*c1*x2*y2 + a3*b1*b3*c1*x2*y2 + a1*a3*c2*x2*y2 + a3*b1*c2*x2*y2 + a1*a3*b2*c2*x2*y2 + a3*b1*b2*c2*x2*y2 + a1*a2*b3*c2*x2*y2 + a1*a3*b3*c2*x2*y2 + a1*b1*b3*c2*x2*y2 + a2*b1*b3*c2*x2*y2 + a3*b1*b3*c2*x2*y2 + a1*b2*b3*c2*x2*y2 + b1*b2*b3*c2*x2*y2 + a3*b1*c1*c2*x2*y2 + a3*b1*b2*c1*c2*x2*y2 + b1*b3*c1*c2*x2*y2 + a2*b1*b3*c1*c2*x2*y2 + a3*b1*b3*c1*c2*x2*y2 + a1*b2*b3*c1*c2*x2*y2 + a1*a2*c3*x2*y2 + a1*b2*c3*x2*y2 + a1*a2*b2*c3*x2*y2 + a1*a3*b2*c3*x2*y2 + a1*b1*b2*c3*x2*y2 + a2*b1*b2*c3*x2*y2 + a3*b1*b2*c3*x2*y2 + a1*a2*b3*c3*x2*y2 + a1*b2*b3*c3*x2*y2 + a2*b1*c1*c3*x2*y2 + a2*b1*b2*c1*c3*x2*y2 + a3*b1*b2*c1*c3*x2*y2 + a2*b1*b3*c1*c3*x2*y2 + b1*b2*b3*c1*c3*x2*y2 + b1*c2*c3*x2*y2 + a3*b1*c2*c3*x2*y2 + b1*b3*c2*c3*x2*y2 + a3*b1*b3*c2*c3*x2*y2 + a1*b2*b3*c2*c3*x2*y2 + b1*b2*b3*c2*c3*x2*y2 + b1*b2*b3*c1*c2*c3*x2*y2 + a1*a2*c1*x3*y2 + a1*a3*c1*x3*y2 + a2*b1*c1*x3*y2 + a3*b1*c1*x3*y2 + a1*a2*b2*c1*x3*y2 + a1*a3*b2*c1*x3*y2 + a2*b1*b2*c1*x3*y2 + a3*b1*b2*c1*x3*y2 + a1*a2*b3*c1*x3*y2 + a1*a3*b3*c1*x3*y2 + a2*b1*b3*c1*x3*y2 + a3*b1*b3*c1*x3*y2 + a1*b2*b3*c1*c2*x3*y2 + b1*b2*b3*c1*c2*x3*y2 + a1*a2*c3*x3*y2 + a1*b2*c3*x3*y2 + a1*a2*b2*c3*x3*y2 + a1*a3*b2*c3*x3*y2 + a1*b1*b2*c3*x3*y2 + a2*b1*b2*c3*x3*y2 + a3*b1*b2*c3*x3*y2 + a1*a2*b3*c3*x3*y2 + a1*b2*b3*c3*x3*y2 + a2*b1*c1*c3*x3*y2 + a2*b1*b2*c1*c3*x3*y2 + a3*b1*b2*c1*c3*x3*y2 + a2*b1*b3*c1*c3*x3*y2 + b1*b2*b3*c1*c3*x3*y2 + a1*b2*b3*c2*c3*x3*y2 + b1*b2*b3*c2*c3*x3*y2 + b1*b2*b3*c1*c2*c3*x3*y2 + a1*a3*y1*y2 + a3*b1*y1*y2 + a3*b2*y1*y2 + a1*a3*b2*y1*y2 + a3*b1*b2*y1*y2 + a2*b3*y1*y2 + a1*a2*b3*y1*y2 + a1*a3*b3*y1*y2 + a1*b1*b3*y1*y2 + a2*b1*b3*y1*y2 + a3*b1*b3*y1*y2 + a1*a3*c2*y1*y2 + a3*b1*c2*y1*y2 + a3*b2*c2*y1*y2 + a1*a3*b2*c2*y1*y2 + a3*b1*b2*c2*y1*y2 + b3*c2*y1*y2 + a2*b3*c2*y1*y2 + a1*a2*b3*c2*y1*y2 + a3*b3*c2*y1*y2 + a1*a3*b3*c2*y1*y2 + a1*b1*b3*c2*y1*y2 + a2*b1*b3*c2*y1*y2 + a3*b1*b3*c2*y1*y2 + a1*a2*c3*y1*y2 + a2*a3*c3*y1*y2 + b1*c3*y1*y2 + b2*c3*y1*y2 + a1*b2*c3*y1*y2 + a1*a2*b2*c3*y1*y2 + a1*a3*b2*c3*y1*y2 + a1*b1*b2*c3*y1*y2 + a2*b1*b2*c3*y1*y2 + a3*b1*b2*c3*y1*y2 + a2*b3*c3*y1*y2 + a1*a2*b3*c3*y1*y2 + a2*a3*b3*c3*y1*y2 + a1*b2*b3*c3*y1*y2 + a2*b2*b3*c3*y1*y2 + a3*b2*b3*c3*y1*y2 + a3*b1*c1*c3*y1*y2 + b1*b2*c1*c3*y1*y2 + b1*b3*c1*c3*y1*y2 + a3*b1*b3*c1*c3*y1*y2 + b1*b2*b3*c1*c3*y1*y2 + b1*c2*c3*y1*y2 + a3*b1*c2*c3*y1*y2 + b2*c2*c3*y1*y2 + a3*b2*c2*c3*y1*y2 + b3*c2*c3*y1*y2 + b1*b3*c2*c3*y1*y2 + a3*b1*b3*c2*c3*y1*y2 + a1*b2*b3*c2*c3*y1*y2 + a3*b2*b3*c2*c3*y1*y2 + b1*b2*b3*c2*c3*y1*y2 + (a1*a3*y2*(1 + y2))/2 + (a3*b1*y2*(1 + y2))/2 + (a1*a3*b2*y2*(1 + y2))/2 + (a3*b1*b2*y2*(1 + y2))/2 + (a1*a2*b3*y2*(1 + y2))/2 + (a1*a3*b3*y2*(1 + y2))/2 + (a1*b1*b3*y2*(1 + y2))/2 + (a2*b1*b3*y2*(1 + y2))/2 + (a3*b1*b3*y2*(1 + y2))/2 + (a1*a3*c1*y2*(1 + y2))/2 + (a1*a3*b2*c1*y2*(1 + y2))/2 + (a1*a2*b3*c1*y2*(1 + y2))/2 + (a1*a3*b3*c1*y2*(1 + y2))/2 + (b1*b3*c1*y2*(1 + y2))/2 + (a1*a3*c2*y2*(1 + y2))/2 + (a3*b1*c2*y2*(1 + y2))/2 + (a1*a3*b2*c2*y2*(1 + y2))/2 + (a3*b1*b2*c2*y2*(1 + y2))/2 + (a1*a2*b3*c2*y2*(1 + y2))/2 + (a1*a3*b3*c2*y2*(1 + y2))/2 + (a1*b1*b3*c2*y2*(1 + y2))/2 + (a2*b1*b3*c2*y2*(1 + y2))/2 + (a3*b1*b3*c2*y2*(1 + y2))/2 + (a3*b1*c1*c2*y2*(1 + y2))/2 + (a3*b1*b2*c1*c2*y2*(1 + y2))/2 + (b1*b3*c1*c2*y2*(1 + y2))/2 + (a2*b1*b3*c1*c2*y2*(1 + y2))/2 + (a3*b1*b3*c1*c2*y2*(1 + y2))/2 + (a1*b2*b3*c1*c2*y2*(1 + y2))/2 + (b1*b2*b3*c1*c2*y2*(1 + y2))/2 + (a1*a2*c3*y2*(1 + y2))/2 + (b1*c3*y2*(1 + y2))/2 + (a1*b2*c3*y2*(1 + y2))/2 + (a1*a2*b2*c3*y2*(1 + y2))/2 + (a1*a3*b2*c3*y2*(1 + y2))/2 + (a1*b1*b2*c3*y2*(1 + y2))/2 + (a2*b1*b2*c3*y2*(1 + y2))/2 + (a3*b1*b2*c3*y2*(1 + y2))/2 + (a1*a2*b3*c3*y2*(1 + y2))/2 + (a1*b2*b3*c3*y2*(1 + y2))/2 + (a2*b1*c1*c3*y2*(1 + y2))/2 + (a2*b1*b2*c1*c3*y2*(1 + y2))/2 + (a3*b1*b2*c1*c3*y2*(1 + y2))/2 + (a2*b1*b3*c1*c3*y2*(1 + y2))/2 + (b1*b2*b3*c1*c3*y2*(1 + y2))/2 + (b1*c2*c3*y2*(1 + y2))/2 + (a3*b1*c2*c3*y2*(1 + y2))/2 + (b1*b3*c2*c3*y2*(1 + y2))/2 + (a3*b1*b3*c2*c3*y2*(1 + y2))/2 + (a1*b2*b3*c2*c3*y2*(1 + y2))/2 + (b1*b2*b3*c2*c3*y2*(1 + y2))/2 + (b1*b2*b3*c1*c2*c3*y2*(1 + y2))/2 + a1*a2*a3*y3 + a1*a2*b1*y3 + a1*a2*b2*y3 + a1*a2*a3*b2*y3 + a1*b1*b2*y3 + a1*a2*b1*b2*y3 + a1*a3*b1*b2*y3 + a2*a3*b1*b2*y3 + a1*a2*b3*y3 + a1*a2*a3*b3*y3 + a1*a2*b1*b3*y3 + a1*b2*b3*y3 + a1*a2*b2*b3*y3 + a1*a2*a3*b2*b3*y3 + b1*b2*b3*y3 + a1*b1*b2*b3*y3 + a3*b1*b2*b3*y3 + a2*a3*b1*b2*b3*y3 + a1*a2*c1*y3 + a1*a2*a3*c1*y3 + a2*a3*b1*c1*y3 + a1*a2*b2*c1*y3 + a1*a3*b2*c1*y3 + a1*a2*a3*b2*c1*y3 + a1*b1*b2*c1*y3 + a2*b1*b2*c1*y3 + a3*b1*b2*c1*y3 + a1*a2*b3*c1*y3 + a1*a2*a3*b3*c1*y3 + a2*b1*b3*c1*y3 + a2*a3*b1*b3*c1*y3 + a1*b2*b3*c1*y3 + a1*a3*b2*b3*c1*y3 + b1*b2*b3*c1*y3 + a1*b1*b2*b3*c1*y3 + a3*b1*b2*b3*c1*y3 + a2*a3*b1*b2*b3*c1*y3 + a2*b1*b2*c2*y3 + a3*b1*b2*c2*y3 + a2*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + a1*a2*b2*b3*c2*y3 + a1*a3*b2*b3*c2*y3 + b1*b2*b3*c2*y3 + a2*b1*b2*b3*c2*y3 + a3*b1*b2*b3*c2*y3 + a2*b1*c1*c2*y3 + b2*c1*c2*y3 + a3*b2*c1*c2*y3 + a2*b1*b2*c1*c2*y3 + a3*b1*b2*c1*c2*y3 + a2*b1*b3*c1*c2*y3 + a1*a2*b2*b3*c1*c2*y3 + a3*b2*b3*c1*c2*y3 + b1*b2*b3*c1*c2*y3 + a3*b1*b2*b3*c1*c2*y3 + a1*a2*a3*c3*y3 + a1*a2*b1*c3*y3 + a1*a2*b2*c3*y3 + a1*a2*a3*b2*c3*y3 + a1*b1*b2*c3*y3 + a1*a2*b1*b2*c3*y3 + a1*a3*b1*b2*c3*y3 + a2*a3*b1*b2*c3*y3 + a1*a2*b3*c3*y3 + a1*a2*a3*b3*c3*y3 + a1*a2*b1*b3*c3*y3 + a1*b2*b3*c3*y3 + b1*b2*b3*c3*y3 + a2*b1*b2*b3*c3*y3 + a3*b1*b2*b3*c3*y3 + a1*a3*b1*b2*b3*c3*y3 + a1*a3*b2*c1*c3*y3 + b1*b2*c1*c3*y3 + a1*b1*b2*c1*c3*y3 + a3*b1*b2*c1*c3*y3 + a2*a3*b1*b2*c1*c3*y3 + a1*b2*b3*c1*c3*y3 + a1*a3*b2*b3*c1*c3*y3 + a1*b1*b2*b3*c1*c3*y3 + a2*b1*b2*b3*c1*c3*y3 + a2*b1*c2*c3*y3 + a2*b1*b2*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + a2*b1*b3*c2*c3*y3 + a1*a2*b2*b3*c2*c3*y3 + a2*b1*b2*b3*c2*c3*y3 + a2*b1*c1*c2*c3*y3 + a3*b2*c1*c2*c3*y3 + b1*b2*c1*c2*c3*y3 + a2*b1*b2*c1*c2*c3*y3 + a3*b1*b2*c1*c2*c3*y3 + a2*b1*b3*c1*c2*c3*y3 + b2*b3*c1*c2*c3*y3 + a3*b2*b3*c1*c2*c3*y3 + a2*b1*b2*b3*c1*c2*c3*y3 + a1*a2*x1*y3 + a2*a3*x1*y3 + a2*b1*x1*y3 + a1*b2*x1*y3 + a1*a2*b2*x1*y3 + a3*b2*x1*y3 + a1*a3*b2*x1*y3 + b1*b2*x1*y3 + a1*b1*b2*x1*y3 + a2*b3*x1*y3 + a1*a2*b3*x1*y3 + a2*a3*b3*x1*y3 + a2*b1*b3*x1*y3 + b2*b3*x1*y3 + a1*b2*b3*x1*y3 + a2*b2*b3*x1*y3 + a3*b2*c1*x1*y3 + b1*b2*c1*x1*y3 + b2*b3*c1*x1*y3 + a3*b2*b3*c1*x1*y3 + b1*b2*b3*c1*x1*y3 + b2*b3*c2*x1*y3 + a1*b2*b3*c2*x1*y3 + a1*a2*c3*x1*y3 + a2*a3*c3*x1*y3 + a2*b1*c3*x1*y3 + a1*b2*c3*x1*y3 + a1*a2*b2*c3*x1*y3 + a3*b2*c3*x1*y3 + a1*a3*b2*c3*x1*y3 + b1*b2*c3*x1*y3 + a1*b1*b2*c3*x1*y3 + a2*b3*c3*x1*y3 + a1*a2*b3*c3*x1*y3 + a2*a3*b3*c3*x1*y3 + a2*b1*b3*c3*x1*y3 + b2*b3*c3*x1*y3 + a1*b2*b3*c3*x1*y3 + a2*b2*b3*c3*x1*y3 + a3*b2*c1*c3*x1*y3 + b1*b2*c1*c3*x1*y3 + b2*b3*c1*c3*x1*y3 + a3*b2*b3*c1*c3*x1*y3 + b1*b2*b3*c1*c3*x1*y3 + b2*b3*c2*c3*x1*y3 + a1*b2*b3*c2*c3*x1*y3 + a1*a3*x2*y3 + b1*x2*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a1*b2*x2*y3 + a1*a3*b3*x2*y3 + b1*b3*x2*y3 + a1*b1*b3*x2*y3 + a2*b1*b3*x2*y3 + a1*b2*b3*x2*y3 + c1*x2*y3 + a1*a2*c1*x2*y3 + a1*a3*c1*x2*y3 + b1*c1*x2*y3 + a2*b1*c1*x2*y3 + a1*a2*b2*c1*x2*y3 + a1*a3*b2*c1*x2*y3 + b1*b2*c1*x2*y3 + a2*b1*b2*c1*x2*y3 + a3*b1*b2*c1*x2*y3 + a1*a2*b3*c1*x2*y3 + a1*a3*b3*c1*x2*y3 + b1*b3*c1*x2*y3 + a2*b1*b3*c1*x2*y3 + b1*b2*b3*c1*x2*y3 + a1*b2*b3*c1*c2*x2*y3 + b1*b2*b3*c1*c2*x2*y3 + a1*a2*c3*x2*y3 + b1*c3*x2*y3 + a3*b1*c3*x2*y3 + a1*b2*c3*x2*y3 + a1*a2*b2*c3*x2*y3 + a1*a3*b2*c3*x2*y3 + a1*b1*b2*c3*x2*y3 + a2*b1*b2*c3*x2*y3 + a3*b1*b2*c3*x2*y3 + a1*a2*b3*c3*x2*y3 + b1*b3*c3*x2*y3 + a3*b1*b3*c3*x2*y3 + a1*b2*b3*c3*x2*y3 + a2*b1*c1*c3*x2*y3 + a2*b1*b2*c1*c3*x2*y3 + a3*b1*b2*c1*c3*x2*y3 + a2*b1*b3*c1*c3*x2*y3 + b1*b2*b3*c1*c3*x2*y3 + a1*b2*b3*c2*c3*x2*y3 + b1*b2*b3*c2*c3*x2*y3 + b1*b2*b3*c1*c2*c3*x2*y3 + a1*a2*c1*x3*y3 + a2*a3*c1*x3*y3 + a2*b1*c1*x3*y3 + a1*a2*b2*c1*x3*y3 + a1*a3*b2*c1*x3*y3 + a2*b1*b2*c1*x3*y3 + a3*b1*b2*c1*x3*y3 + a1*a2*b3*c1*x3*y3 + a2*a3*b3*c1*x3*y3 + a2*b1*b3*c1*x3*y3 + a1*a2*c2*x3*y3 + a1*b1*c2*x3*y3 + a2*b1*c2*x3*y3 + a1*a2*b2*c2*x3*y3 + a1*a3*b2*c2*x3*y3 + a1*b1*b2*c2*x3*y3 + a2*b1*b2*c2*x3*y3 + a3*b1*b2*c2*x3*y3 + a1*a2*b3*c2*x3*y3 + a1*b1*b3*c2*x3*y3 + a2*b1*b3*c2*x3*y3 + a1*b2*b3*c2*x3*y3 + b1*b2*b3*c2*x3*y3 + c1*c2*x3*y3 + b1*c1*c2*x3*y3 + a2*b1*c1*c2*x3*y3 + a3*b1*c1*c2*x3*y3 + a3*b2*c1*c2*x3*y3 + b1*b2*c1*c2*x3*y3 + a2*b1*b2*c1*c2*x3*y3 + a3*b1*b2*c1*c2*x3*y3 + b1*b3*c1*c2*x3*y3 + a2*b1*b3*c1*c2*x3*y3 + a3*b1*b3*c1*c2*x3*y3 + a1*b2*b3*c1*c2*x3*y3 + a3*b2*b3*c1*c2*x3*y3 + a1*a2*c3*x3*y3 + a1*b2*c3*x3*y3 + a1*a2*b2*c3*x3*y3 + a1*a3*b2*c3*x3*y3 + a1*b1*b2*c3*x3*y3 + a2*b1*b2*c3*x3*y3 + a3*b1*b2*c3*x3*y3 + a1*a2*b3*c3*x3*y3 + a1*b2*b3*c3*x3*y3 + a2*b1*c1*c3*x3*y3 + a2*b1*b2*c1*c3*x3*y3 + a3*b1*b2*c1*c3*x3*y3 + a2*b1*b3*c1*c3*x3*y3 + b1*b2*b3*c1*c3*x3*y3 + b1*c2*c3*x3*y3 + a3*b1*c2*c3*x3*y3 + b1*b3*c2*c3*x3*y3 + a3*b1*b3*c2*c3*x3*y3 + a1*b2*b3*c2*c3*x3*y3 + b1*b2*b3*c2*c3*x3*y3 + b1*b2*b3*c1*c2*c3*x3*y3 + a1*a2*y1*y3 + a2*a3*y1*y3 + a1*b2*y1*y3 + a1*a2*b2*y1*y3 + a1*a3*b2*y1*y3 + a1*b1*b2*y1*y3 + a2*b1*b2*y1*y3 + a3*b1*b2*y1*y3 + a2*b3*y1*y3 + a1*a2*b3*y1*y3 + a2*a3*b3*y1*y3 + a1*b2*b3*y1*y3 + a2*b2*b3*y1*y3 + a3*b2*b3*y1*y3 + a3*b2*c1*y1*y3 + b1*b2*c1*y1*y3 + b2*b3*c1*y1*y3 + a3*b2*b3*c1*y1*y3 + b1*b2*b3*c1*y1*y3 + b2*b3*c2*y1*y3 + a1*b2*b3*c2*y1*y3 + b1*b2*b3*c2*y1*y3 + a1*a2*c3*y1*y3 + a2*a3*c3*y1*y3 + a1*b2*c3*y1*y3 + a1*a2*b2*c3*y1*y3 + a1*a3*b2*c3*y1*y3 + a1*b1*b2*c3*y1*y3 + a2*b1*b2*c3*y1*y3 + a3*b1*b2*c3*y1*y3 + a2*b3*c3*y1*y3 + a1*a2*b3*c3*y1*y3 + a2*a3*b3*c3*y1*y3 + a1*b2*b3*c3*y1*y3 + a2*b2*b3*c3*y1*y3 + a3*b2*b3*c3*y1*y3 + a3*b2*c1*c3*y1*y3 + b1*b2*c1*c3*y1*y3 + b2*b3*c1*c3*y1*y3 + a3*b2*b3*c1*c3*y1*y3 + b1*b2*b3*c1*c3*y1*y3 + b2*b3*c2*c3*y1*y3 + a1*b2*b3*c2*c3*y1*y3 + b1*b2*b3*c2*c3*y1*y3 + a1*a2*y2*y3 + a1*b2*y2*y3 + a1*a2*b2*y2*y3 + a1*a3*b2*y2*y3 + a1*b1*b2*y2*y3 + a2*b1*b2*y2*y3 + a3*b1*b2*y2*y3 + a1*a2*b3*y2*y3 + a1*b2*b3*y2*y3 + a1*a2*c1*y2*y3 + a1*a3*c1*y2*y3 + a3*b1*c1*y2*y3 + a1*a2*b2*c1*y2*y3 + a1*a3*b2*c1*y2*y3 + a1*a2*b3*c1*y2*y3 + a1*a3*b3*c1*y2*y3 + a3*b1*b3*c1*y2*y3 + b1*b2*b3*c1*y2*y3 + a1*b2*b3*c2*y2*y3 + b1*b2*b3*c2*y2*y3 + a1*b2*b3*c1*c2*y2*y3 + a1*a2*c3*y2*y3 + a1*b2*c3*y2*y3 + a1*a2*b2*c3*y2*y3 + a1*a3*b2*c3*y2*y3 + a1*b1*b2*c3*y2*y3 + a2*b1*b2*c3*y2*y3 + a3*b1*b2*c3*y2*y3 + a1*a2*b3*c3*y2*y3 + a1*b2*b3*c3*y2*y3 + a2*b1*c1*c3*y2*y3 + a2*b1*b2*c1*c3*y2*y3 + a3*b1*b2*c1*c3*y2*y3 + a2*b1*b3*c1*c3*y2*y3 + b1*b2*b3*c1*c3*y2*y3 + a1*b2*b3*c2*c3*y2*y3 + b1*b2*b3*c2*c3*y2*y3 + b1*b2*b3*c1*c2*c3*y2*y3 + (a1*a2*y3*(1 + y3))/2 + (a1*b2*y3*(1 + y3))/2 + (a1*a2*b2*y3*(1 + y3))/2 + (a1*a3*b2*y3*(1 + y3))/2 + (a1*b1*b2*y3*(1 + y3))/2 + (a2*b1*b2*y3*(1 + y3))/2 + (a3*b1*b2*y3*(1 + y3))/2 + (a1*a2*b3*y3*(1 + y3))/2 + (a1*b2*b3*y3*(1 + y3))/2 + (a1*a2*c1*y3*(1 + y3))/2 + (a2*a3*c1*y3*(1 + y3))/2 + (a1*a2*b2*c1*y3*(1 + y3))/2 + (a1*a3*b2*c1*y3*(1 + y3))/2 + (a1*a2*b3*c1*y3*(1 + y3))/2 + (a2*a3*b3*c1*y3*(1 + y3))/2 + (b1*b2*b3*c1*y3*(1 + y3))/2 + (a1*a2*c2*y3*(1 + y3))/2 + (b1*c2*y3*(1 + y3))/2 + (a1*b1*c2*y3*(1 + y3))/2 + (a2*b1*c2*y3*(1 + y3))/2 + (a3*b1*c2*y3*(1 + y3))/2 + (a1*a2*b2*c2*y3*(1 + y3))/2 + (a1*a3*b2*c2*y3*(1 + y3))/2 + (a1*b1*b2*c2*y3*(1 + y3))/2 + (a2*b1*b2*c2*y3*(1 + y3))/2 + (a3*b1*b2*c2*y3*(1 + y3))/2 + (a1*a2*b3*c2*y3*(1 + y3))/2 + (b1*b3*c2*y3*(1 + y3))/2 + (a1*b1*b3*c2*y3*(1 + y3))/2 + (a2*b1*b3*c2*y3*(1 + y3))/2 + (a3*b1*b3*c2*y3*(1 + y3))/2 + (c1*c2*y3*(1 + y3))/2 + (b1*c1*c2*y3*(1 + y3))/2 + (a2*b1*c1*c2*y3*(1 + y3))/2 + (a3*b1*c1*c2*y3*(1 + y3))/2 + (a3*b2*c1*c2*y3*(1 + y3))/2 + (b1*b2*c1*c2*y3*(1 + y3))/2 + (a2*b1*b2*c1*c2*y3*(1 + y3))/2 + (a3*b1*b2*c1*c2*y3*(1 + y3))/2 + (b1*b3*c1*c2*y3*(1 + y3))/2 + (a2*b1*b3*c1*c2*y3*(1 + y3))/2 + (a3*b1*b3*c1*c2*y3*(1 + y3))/2 + (a1*b2*b3*c1*c2*y3*(1 + y3))/2 + (a3*b2*b3*c1*c2*y3*(1 + y3))/2 + (b1*b2*b3*c1*c2*y3*(1 + y3))/2 + (a1*a2*c3*y3*(1 + y3))/2 + (a1*b2*c3*y3*(1 + y3))/2 + (a1*a2*b2*c3*y3*(1 + y3))/2 + (a1*a3*b2*c3*y3*(1 + y3))/2 + (a1*b1*b2*c3*y3*(1 + y3))/2 + (a2*b1*b2*c3*y3*(1 + y3))/2 + (a3*b1*b2*c3*y3*(1 + y3))/2 + (a1*a2*b3*c3*y3*(1 + y3))/2 + (a1*b2*b3*c3*y3*(1 + y3))/2 + (a2*b1*c1*c3*y3*(1 + y3))/2 + (a2*b1*b2*c1*c3*y3*(1 + y3))/2 + (a3*b1*b2*c1*c3*y3*(1 + y3))/2 + (a2*b1*b3*c1*c3*y3*(1 + y3))/2 + (b1*b2*b3*c1*c3*y3*(1 + y3))/2 + (b1*c2*c3*y3*(1 + y3))/2 + (a3*b1*c2*c3*y3*(1 + y3))/2 + (b1*b3*c2*c3*y3*(1 + y3))/2 + (a3*b1*b3*c2*c3*y3*(1 + y3))/2 + (a1*b2*b3*c2*c3*y3*(1 + y3))/2 + (b1*b2*b3*c2*c3*y3*(1 + y3))/2 + (b1*b2*b3*c1*c2*c3*y3*(1 + y3))/2 + a1*a2*b3*z1 + a2*a3*b3*z1 + a1*b2*b3*z1 + a2*b2*b3*z1 + a3*b2*b3*z1 + a1*a3*b2*b3*z1 + a3*b1*b2*b3*z1 + a2*b1*b3*c1*z1 + b2*b3*c1*z1 + b1*b2*b3*c1*z1 + a3*b1*b2*b3*c1*z1 + a3*b2*c2*z1 + a1*a3*b2*c2*z1 + a1*b1*b3*c2*z1 + a2*b1*b3*c2*z1 + b2*b3*c2*z1 + a1*b2*b3*c2*z1 + a3*b2*b3*c2*z1 + a1*a3*b2*b3*c2*z1 + a3*b1*b2*b3*c2*z1 + a3*c1*c2*z1 + a3*b2*c1*c2*z1 + a3*b1*b2*c1*c2*z1 + b1*b3*c1*c2*z1 + b2*b3*c1*c2*z1 + b1*b2*b3*c1*c2*z1 + a3*b1*b2*b3*c1*c2*z1 + a2*c3*z1 + a1*b2*c3*z1 + a3*b2*c3*z1 + a1*a3*b2*c3*z1 + b1*b2*c3*z1 + a1*b1*b2*c3*z1 + a2*b1*b2*c3*z1 + a2*b3*c3*z1 + a1*b2*b3*c3*z1 + a2*b2*b3*c3*z1 + a3*b2*b3*c3*z1 + a1*a3*b2*b3*c3*z1 + a3*b1*b2*b3*c3*z1 + a3*b2*c1*c3*z1 + a3*b1*b2*c1*c3*z1 + b1*b2*b3*c1*c3*z1 + a3*b1*b2*b3*c1*c3*z1 + a3*c2*c3*z1 + a1*b2*c2*c3*z1 + a1*a3*b2*c2*c3*z1 + b1*b2*c2*c3*z1 + a3*b1*b2*c2*c3*z1 + b3*c2*c3*z1 + a1*b3*c2*c3*z1 + a1*a3*b3*c2*c3*z1 + a3*b1*b3*c2*c3*z1 + b2*b3*c2*c3*z1 + b1*b2*b3*c2*c3*z1 + a3*c1*c2*c3*z1 + b1*b2*c1*c2*c3*z1 + a3*b1*b2*c1*c2*c3*z1 + b3*c1*c2*c3*z1 + b1*b3*c1*c2*c3*z1 + a3*b1*b3*c1*c2*c3*z1 + b2*b3*c1*c2*c3*z1 + a1*b3*x2*z1 + b1*b3*x2*z1 + b1*b3*c1*x2*z1 + a1*b3*c2*x2*z1 + b1*b3*c2*x2*z1 + b1*b3*c1*c2*x2*z1 + c3*x2*z1 + a1*b2*c3*x2*z1 + b1*b2*c3*x2*z1 + a1*b3*c3*x2*z1 + b1*b3*c3*x2*z1 + b1*b2*c1*c3*x2*z1 + b1*b3*c1*c3*x2*z1 + a1*b2*x3*z1 + b1*b2*x3*z1 + a2*b3*x3*z1 + b2*b3*x3*z1 + b1*b2*c1*x3*z1 + c2*x3*z1 + a1*b2*c2*x3*z1 + b1*b2*c2*x3*z1 + a1*b3*c2*x3*z1 + b2*b3*c2*x3*z1 + c1*c2*x3*z1 + b1*b2*c1*c2*x3*z1 + b1*b3*c1*c2*x3*z1 + a1*b2*c3*x3*z1 + b1*b2*c3*x3*z1 + a2*b3*c3*x3*z1 + b2*b3*c3*x3*z1 + b1*b2*c1*c3*x3*z1 + c2*c3*x3*z1 + a1*b2*c2*c3*x3*z1 + b1*b2*c2*c3*x3*z1 + a1*b3*c2*c3*x3*z1 + b2*b3*c2*c3*x3*z1 + c1*c2*c3*x3*z1 + b1*b2*c1*c2*c3*x3*z1 + b1*b3*c1*c2*c3*x3*z1 + c1*c3*y2*z1 + a1*b2*c2*c3*y3*z1 + b1*b2*c2*c3*y3*z1 + a1*b3*c2*c3*y3*z1 + b1*b3*c2*c3*y3*z1 + c1*c2*c3*y3*z1 + b1*b2*c1*c2*c3*y3*z1 + b1*b3*c1*c2*c3*y3*z1 + a1*a2*b3*z2 + a1*b2*b3*z2 + a1*a3*b2*b3*z2 + a3*b1*b2*b3*z2 + a1*a3*b2*c1*z2 + a2*b1*b3*c1*z2 + a1*a3*b2*b3*c1*z2 + b1*b2*b3*c1*z2 + a3*b1*b2*b3*c1*z2 + a1*a3*b2*c2*z2 + a1*b1*b3*c2*z2 + a2*b1*b3*c2*z2 + a1*b2*b3*c2*z2 + a1*a3*b2*b3*c2*z2 + a3*b1*b2*b3*c2*z2 + a1*a3*b2*c1*c2*z2 + a3*b1*b2*c1*c2*z2 + a1*b3*c1*c2*z2 + a1*a3*b3*c1*c2*z2 + a3*b1*b3*c1*c2*z2 + a1*b2*b3*c1*c2*z2 + a1*b2*c3*z2 + a1*a3*b2*c3*z2 + b1*b2*c3*z2 + a1*b1*b2*c3*z2 + a2*b1*b2*c3*z2 + a1*b2*b3*c3*z2 + a1*a3*b2*b3*c3*z2 + a3*b1*b2*b3*c3*z2 + b1*b2*b3*c1*c3*z2 + a1*b2*c2*c3*z2 + a1*a3*b2*c2*c3*z2 + b1*b2*c2*c3*z2 + a3*b1*b2*c2*c3*z2 + a1*b3*c2*c3*z2 + a1*a3*b3*c2*c3*z2 + a3*b1*b3*c2*c3*z2 + b1*b2*b3*c2*c3*z2 + a1*b2*c1*c2*c3*z2 + b1*b2*c1*c2*c3*z2 + a1*b2*b3*c1*c2*c3*z2 + b1*b2*b3*c1*c2*c3*z2 + a1*b3*x2*z2 + b1*b3*x2*z2 + a1*b3*c1*x2*z2 + b1*b3*c1*x2*z2 + a1*b3*c2*x2*z2 + b1*b3*c2*x2*z2 + a1*b3*c1*c2*x2*z2 + b1*b3*c1*c2*x2*z2 + a1*b2*c3*x2*z2 + b1*b2*c3*x2*z2 + a1*b3*c3*x2*z2 + b1*b3*c3*x2*z2 + a1*b2*c1*c3*x2*z2 + b1*b2*c1*c3*x2*z2 + a1*b3*c1*c3*x2*z2 + b1*b3*c1*c3*x2*z2 + a1*b2*x3*z2 + b1*b2*x3*z2 + c1*x3*z2 + a1*b2*c1*x3*z2 + b1*b2*c1*x3*z2 + a1*b3*c1*x3*z2 + a1*b2*c2*x3*z2 + b1*b2*c2*x3*z2 + a1*b3*c2*x3*z2 + a1*b2*c3*x3*z2 + b1*b2*c3*x3*z2 + a1*b2*c1*c3*x3*z2 + b1*b2*c1*c3*x3*z2 + a1*b3*c1*c3*x3*z2 + a1*b2*c2*c3*x3*z2 + b1*b2*c2*c3*x3*z2 + a1*b3*c2*c3*x3*z2 + a1*b3*c1*c2*y2*z2 + b1*b3*c1*c2*y2*z2 + a1*b2*c1*c3*y2*z2 + b1*b2*c1*c3*y2*z2 + a1*b3*c1*c3*y2*z2 + b1*b3*c1*c3*y2*z2 + c1*y3*z2 + c1*c3*y3*z2 + a1*b2*c1*c3*y3*z2 + b1*b2*c1*c3*y3*z2 + a1*b3*c1*c3*y3*z2 + b1*b3*c1*c3*y3*z2 + a1*b2*c2*c3*y3*z2 + b1*b2*c2*c3*y3*z2 + a1*b3*c2*c3*y3*z2 + b1*b3*c2*c3*y3*z2 + a1*a2*b2*z3 + a1*b1*b2*z3 + a2*b1*b2*z3 + a1*a2*b3*z3 + a1*b2*b3*z3 + a1*a3*b2*b3*z3 + a3*b1*b2*b3*z3 + a1*a3*b2*c1*z3 + b1*b2*c1*z3 + a2*b1*b2*c1*z3 + a2*b1*b3*c1*z3 + a1*a3*b2*b3*c1*z3 + b1*b2*b3*c1*z3 + a3*b1*b2*b3*c1*z3 + a1*b2*c2*z3 + a1*a3*b2*c2*z3 + b1*b2*c2*z3 + a1*b1*b2*c2*z3 + a2*b1*b2*c2*z3 + a1*b1*b3*c2*z3 + a2*b1*b3*c2*z3 + a1*b2*b3*c2*z3 + a1*a3*b2*b3*c2*z3 + a3*b1*b2*b3*c2*z3 + a1*a3*b2*c1*c2*z3 + a3*b1*b2*c1*c2*z3 + a1*b3*c1*c2*z3 + a1*a3*b3*c1*c2*z3 + a3*b1*b3*c1*c2*z3 + a1*b2*b3*c1*c2*z3 + a1*b2*c3*z3 + a1*a3*b2*c3*z3 + b1*b2*c3*z3 + a1*b1*b2*c3*z3 + a2*b1*b2*c3*z3 + a1*b2*b3*c3*z3 + a1*a3*b2*b3*c3*z3 + a3*b1*b2*b3*c3*z3 + b1*b2*b3*c1*c3*z3 + a1*b2*c2*c3*z3 + a1*a3*b2*c2*c3*z3 + b1*b2*c2*c3*z3 + a3*b1*b2*c2*c3*z3 + a1*b3*c2*c3*z3 + a1*a3*b3*c2*c3*z3 + a3*b1*b3*c2*c3*z3 + b1*b2*b3*c2*c3*z3 + a1*b2*c1*c2*c3*z3 + b1*b2*c1*c2*c3*z3 + a1*b2*b3*c1*c2*c3*z3 + b1*b2*b3*c1*c2*c3*z3 + a1*b2*x2*z3 + b1*b2*x2*z3 + a1*b3*x2*z3 + b1*b3*x2*z3 + a1*b2*c1*x2*z3 + b1*b2*c1*x2*z3 + a1*b3*c1*x2*z3 + b1*b3*c1*x2*z3 + a1*b2*c2*x2*z3 + b1*b2*c2*x2*z3 + a1*b3*c2*x2*z3 + b1*b3*c2*x2*z3 + a1*b2*c1*c2*x2*z3 + b1*b2*c1*c2*x2*z3 + a1*b3*c1*c2*x2*z3 + b1*b3*c1*c2*x2*z3 + a1*b2*c3*x2*z3 + b1*b2*c3*x2*z3 + a1*b3*c3*x2*z3 + b1*b3*c3*x2*z3 + a1*b2*c1*c3*x2*z3 + b1*b2*c1*c3*x2*z3 + a1*b3*c1*c3*x2*z3 + b1*b3*c1*c3*x2*z3 + a1*b2*x3*z3 + b1*b2*x3*z3 + a1*b2*c1*x3*z3 + b1*b2*c1*x3*z3 + a2*b3*c1*x3*z3 + b2*b3*c1*x3*z3 + a1*b2*c2*x3*z3 + b1*b2*c2*x3*z3 + b2*b3*c1*c2*x3*z3 + a1*b2*c3*x3*z3 + b1*b2*c3*x3*z3 + a1*b2*c1*c3*x3*z3 + b1*b2*c1*c3*x3*z3 + a2*b3*c1*c3*x3*z3 + b2*b3*c1*c3*x3*z3 + a1*b2*c2*c3*x3*z3 + b1*b2*c2*c3*x3*z3 + b2*b3*c1*c2*c3*x3*z3 + a1*b2*c1*c2*y2*z3 + b1*b2*c1*c2*y2*z3 + a1*b3*c1*c2*y2*z3 + b1*b3*c1*c2*y2*z3 + a1*b2*c1*c3*y2*z3 + b1*b2*c1*c3*y2*z3 + a1*b3*c1*c3*y2*z3 + b1*b3*c1*c3*y2*z3 + a1*b2*c1*c3*y3*z3 + b1*b2*c1*c3*y3*z3 + a2*b3*c1*c3*y3*z3 + a1*b2*c2*c3*y3*z3 + b1*b2*c2*c3*y3*z3 + b2*b3*c1*c2*c3*y3*z3;
end;
#####################################################################
C2in106:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3 + a1*a3*b2*b3 + a3*b1*b2*b3 + a2*a3*b1*c1 + a1*a3*b2*c1 + a1*a3*b2*b3*c1 + a3*b1*b2*b3*c1 + a1*a3*b1*c2 + a2*a3*b1*c2 + a1*a3*b2*c2 + a3*b1*b2*c2 + a1*b1*b3*c2 + a1*b2*b3*c2 + a1*a3*b2*b3*c2 + a3*b1*b2*b3*c2 + a1*a3*c1*c2 + a2*a3*c1*c2 + a3*b1*c1*c2 + a3*b2*c1*c2 + a1*a3*b2*c1*c2 + a3*b1*b2*c1*c2 + a2*b3*c1*c2 + a1*a3*b3*c1*c2 + a2*a3*b3*c1*c2 + b1*b3*c1*c2 + b2*b3*c1*c2 + a3*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + b1*b2*b3*c1*c2 + a3*b1*b2*b3*c1*c2 + a1*a2*b2*c3 + a3*b1*b2*c3 + a1*a2*b3*c3 + a1*a3*b2*b3*c3 + a3*b1*b2*b3*c3 + a1*a3*b2*c1*c3 + a2*b1*b2*c1*c3 + a2*b1*b3*c1*c3 + a1*a3*b2*b3*c1*c3 + a3*b1*b2*b3*c1*c3 + a1*c2*c3 + a1*b1*c2*c3 + a2*b1*c2*c3 + a3*b1*c2*c3 + a1*b2*c2*c3 + a1*a2*b2*c2*c3 + a1*b1*b2*c2*c3 + a2*b1*b2*c2*c3 + a1*b3*c2*c3 + a1*a2*b3*c2*c3 + a1*a3*b3*c2*c3 + a1*b1*b3*c2*c3 + a2*b1*b3*c2*c3 + a1*a3*b2*b3*c2*c3 + b1*b2*b3*c2*c3 + a3*b1*b2*b3*c2*c3 + a1*c1*c2*c3 + a2*c1*c2*c3 + a3*c1*c2*c3 + b2*c1*c2*c3 + a1*a3*b2*c1*c2*c3 + a2*b1*b2*c1*c2*c3 + a1*b3*c1*c2*c3 + a2*b3*c1*c2*c3 + b1*b3*c1*c2*c3 + a1*b1*b3*c1*c2*c3 + b2*b3*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + a2*b2*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + a1*a3*b2*b3*c1*c2*c3 + b1*b2*b3*c1*c2*c3 + a3*b1*b2*b3*c1*c2*c3 + b3*c2*x1 + b3*c1*c2*x1 + a1*b3*x2 + b1*b3*x2 + a1*b3*c1*x2 + b1*b3*c1*x2 + a1*b3*c2*x2 + b1*b3*c2*x2 + a1*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a1*b2*c3*x2 + b1*b2*c3*x2 + a1*b3*c3*x2 + b1*b3*c3*x2 + a1*b2*c1*c3*x2 + b1*b2*c1*c3*x2 + a1*b3*c1*c3*x2 + b1*b3*c1*c3*x2 + a1*b2*c2*c3*x2 + b1*b2*c2*c3*x2 + a1*b3*c2*c3*x2 + b1*b3*c2*c3*x2 + a1*b2*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + a1*b3*c1*c2*c3*x2 + b1*b3*c1*c2*c3*x2 + a1*b2*x3 + b1*b2*x3 + a1*b2*c1*x3 + b1*b2*c1*x3 + a2*b3*c1*x3 + b2*b3*c1*x3 + a1*c2*x3 + a1*b2*c2*x3 + b1*b2*c2*x3 + a1*c1*c2*x3 + a2*c1*c2*x3 + a1*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a2*b3*c1*c2*x3 + b2*b3*c1*c2*x3 + a1*b2*c3*x3 + b1*b2*c3*x3 + a1*b2*c1*c3*x3 + b1*b2*c1*c3*x3 + a2*b3*c1*c3*x3 + b2*b3*c1*c3*x3 + a1*b2*c2*c3*x3 + b1*b2*c2*c3*x3 + c1*c2*c3*x3 + a1*b2*c1*c2*c3*x3 + b1*b2*c1*c2*c3*x3 + a2*b3*c1*c2*c3*x3 + b2*b3*c1*c2*c3*x3 + b3*c1*c2*y1 + a2*a3*z1 + a1*a3*b2*z1 + a2*b3*z1 + a1*a2*b3*z1 + a2*a3*b3*z1 + a1*b2*b3*z1 + a1*a3*b2*b3*z1 + b1*b2*b3*z1 + a3*b1*b2*b3*z1 + a3*b1*b2*c1*z1 + a2*b1*b3*c1*z1 + b2*b3*c1*z1 + b1*b2*b3*c1*z1 + a3*b1*b2*b3*c1*z1 + a1*a3*c2*z1 + a1*a3*b2*c2*z1 + a1*b3*c2*z1 + b1*b3*c2*z1 + a1*b1*b3*c2*z1 + a2*b1*b3*c2*z1 + b2*b3*c2*z1 + a3*b2*b3*c2*z1 + a1*a3*b2*b3*c2*z1 + a3*b1*b2*b3*c2*z1 + a3*c1*c2*z1 + a3*b1*c1*c2*z1 + a3*b2*c1*c2*z1 + a3*b1*b2*c1*c2*z1 + b2*b3*c1*c2*z1 + a3*b1*b2*b3*c1*c2*z1 + a1*b2*c3*z1 + a3*b2*c3*z1 + a1*a3*b2*c3*z1 + b1*b2*c3*z1 + a1*b1*b2*c3*z1 + a2*b1*b2*c3*z1 + a2*b3*c3*z1 + a1*b2*b3*c3*z1 + a2*b2*b3*c3*z1 + a3*b2*b3*c3*z1 + a1*a3*b2*b3*c3*z1 + a3*b1*b2*b3*c3*z1 + a3*b2*c1*c3*z1 + a3*b1*b2*c1*c3*z1 + b1*b2*b3*c1*c3*z1 + a3*b1*b2*b3*c1*c3*z1 + a1*c2*c3*z1 + a3*c2*c3*z1 + b2*c2*c3*z1 + a1*b2*c2*c3*z1 + a1*a3*b2*c2*c3*z1 + b1*b2*c2*c3*z1 + a3*b1*b2*c2*c3*z1 + b3*c2*c3*z1 + a1*b3*c2*c3*z1 + a1*a3*b3*c2*c3*z1 + a3*b1*b3*c2*c3*z1 + b2*b3*c2*c3*z1 + b1*b2*b3*c2*c3*z1 + a3*c1*c2*c3*z1 + b1*c1*c2*c3*z1 + b1*b2*c1*c2*c3*z1 + a3*b1*b2*c1*c2*c3*z1 + b3*c1*c2*c3*z1 + b1*b3*c1*c2*c3*z1 + a3*b1*b3*c1*c2*c3*z1 + b2*b3*c1*c2*c3*z1 + a1*b3*x2*z1 + b1*b3*x2*z1 + b1*b3*c1*x2*z1 + a1*b3*c2*x2*z1 + b1*b3*c2*x2*z1 + b1*b3*c1*c2*x2*z1 + c3*x2*z1 + a1*b2*c3*x2*z1 + b1*b2*c3*x2*z1 + a1*b3*c3*x2*z1 + b1*b3*c3*x2*z1 + b1*b2*c1*c3*x2*z1 + b1*b3*c1*c3*x2*z1 + a2*x3*z1 + b2*x3*z1 + a1*b2*x3*z1 + b1*b2*x3*z1 + a2*b3*x3*z1 + b2*b3*x3*z1 + b1*b2*c1*x3*z1 + c2*x3*z1 + a1*c2*x3*z1 + b2*c2*x3*z1 + a1*b2*c2*x3*z1 + b1*b2*c2*x3*z1 + a1*b3*c2*x3*z1 + b2*b3*c2*x3*z1 + c1*c2*x3*z1 + b1*c1*c2*x3*z1 + b1*b2*c1*c2*x3*z1 + b1*b3*c1*c2*x3*z1 + a1*b2*c3*x3*z1 + b1*b2*c3*x3*z1 + a2*b3*c3*x3*z1 + b2*b3*c3*x3*z1 + b1*b2*c1*c3*x3*z1 + c2*c3*x3*z1 + a1*b2*c2*c3*x3*z1 + b1*b2*c2*c3*x3*z1 + a1*b3*c2*c3*x3*z1 + b2*b3*c2*c3*x3*z1 + c1*c2*c3*x3*z1 + b1*b2*c1*c2*c3*x3*z1 + b1*b3*c1*c2*c3*x3*z1 + c1*c3*y2*z1 + a1*c2*y3*z1 + b1*c2*y3*z1 + b1*c1*c2*y3*z1 + a1*b2*c2*c3*y3*z1 + b1*b2*c2*c3*y3*z1 + a1*b3*c2*c3*y3*z1 + b1*b3*c2*c3*y3*z1 + c1*c2*c3*y3*z1 + b1*b2*c1*c2*c3*y3*z1 + b1*b3*c1*c2*c3*y3*z1 + a1*a2*b3*z2 + a1*b2*b3*z2 + a1*a3*b2*b3*z2 + b1*b2*b3*z2 + a3*b1*b2*b3*z2 + a1*a3*b2*c1*z2 + b1*b3*c1*z2 + a2*b1*b3*c1*z2 + a1*a3*b2*b3*c1*z2 + b1*b2*b3*c1*z2 + a3*b1*b2*b3*c1*z2 + a1*a3*b2*c2*z2 + b1*b3*c2*z2 + a1*b1*b3*c2*z2 + a2*b1*b3*c2*z2 + a1*b2*b3*c2*z2 + a1*a3*b2*b3*c2*z2 + a3*b1*b2*b3*c2*z2 + a1*a3*b2*c1*c2*z2 + a3*b1*b2*c1*c2*z2 + a1*b3*c1*c2*z2 + a1*a3*b3*c1*c2*z2 + a3*b1*b3*c1*c2*z2 + a1*b2*b3*c1*c2*z2 + a1*b2*c3*z2 + a1*a3*b2*c3*z2 + b1*b2*c3*z2 + a1*b1*b2*c3*z2 + a2*b1*b2*c3*z2 + a1*b2*b3*c3*z2 + a1*a3*b2*b3*c3*z2 + a3*b1*b2*b3*c3*z2 + b1*b2*b3*c1*c3*z2 + a1*b2*c2*c3*z2 + a1*a3*b2*c2*c3*z2 + b1*b2*c2*c3*z2 + a3*b1*b2*c2*c3*z2 + a1*b3*c2*c3*z2 + a1*a3*b3*c2*c3*z2 + a3*b1*b3*c2*c3*z2 + b1*b2*b3*c2*c3*z2 + a1*b2*c1*c2*c3*z2 + b1*b2*c1*c2*c3*z2 + a1*b2*b3*c1*c2*c3*z2 + b1*b2*b3*c1*c2*c3*z2 + b3*x1*z2 + a1*b3*x2*z2 + b1*b3*x2*z2 + a1*b3*c1*x2*z2 + b1*b3*c1*x2*z2 + a1*b3*c2*x2*z2 + b1*b3*c2*x2*z2 + a1*b3*c1*c2*x2*z2 + b1*b3*c1*c2*x2*z2 + a1*b2*c3*x2*z2 + b1*b2*c3*x2*z2 + a1*b3*c3*x2*z2 + b1*b3*c3*x2*z2 + a1*b2*c1*c3*x2*z2 + b1*b2*c1*c3*x2*z2 + a1*b3*c1*c3*x2*z2 + b1*b3*c1*c3*x2*z2 + a1*b2*x3*z2 + b1*b2*x3*z2 + c1*x3*z2 + a1*b2*c1*x3*z2 + b1*b2*c1*x3*z2 + a1*b3*c1*x3*z2 + a1*b2*c2*x3*z2 + b1*b2*c2*x3*z2 + a1*b3*c2*x3*z2 + a1*b2*c3*x3*z2 + b1*b2*c3*x3*z2 + a1*b2*c1*c3*x3*z2 + b1*b2*c1*c3*x3*z2 + a1*b3*c1*c3*x3*z2 + a1*b2*c2*c3*x3*z2 + b1*b2*c2*c3*x3*z2 + a1*b3*c2*c3*x3*z2 + b3*y1*z2 + a1*b3*c1*c2*y2*z2 + b1*b3*c1*c2*y2*z2 + a1*b2*c1*c3*y2*z2 + b1*b2*c1*c3*y2*z2 + a1*b3*c1*c3*y2*z2 + b1*b3*c1*c3*y2*z2 + a1*y3*z2 + c1*y3*z2 + b1*c1*y3*z2 + b1*c2*y3*z2 + c1*c3*y3*z2 + a1*b2*c1*c3*y3*z2 + b1*b2*c1*c3*y3*z2 + a1*b3*c1*c3*y3*z2 + b1*b3*c1*c3*y3*z2 + a1*b2*c2*c3*y3*z2 + b1*b2*c2*c3*y3*z2 + a1*b3*c2*c3*y3*z2 + b1*b3*c2*c3*y3*z2 + a1*a2*b2*z3 + a1*b1*b2*z3 + a2*b1*b2*z3 + a1*a2*b3*z3 + a1*b2*b3*z3 + a1*a3*b2*b3*z3 + a3*b1*b2*b3*z3 + a1*a3*b2*c1*z3 + b1*b2*c1*z3 + a2*b1*b2*c1*z3 + a2*b1*b3*c1*z3 + a1*a3*b2*b3*c1*z3 + b1*b2*b3*c1*z3 + a3*b1*b2*b3*c1*z3 + a1*b2*c2*z3 + a1*a3*b2*c2*z3 + b1*b2*c2*z3 + a1*b1*b2*c2*z3 + a2*b1*b2*c2*z3 + a1*b1*b3*c2*z3 + a2*b1*b3*c2*z3 + a1*b2*b3*c2*z3 + a1*a3*b2*b3*c2*z3 + a3*b1*b2*b3*c2*z3 + a1*a3*b2*c1*c2*z3 + a3*b1*b2*c1*c2*z3 + a1*b3*c1*c2*z3 + a1*a3*b3*c1*c2*z3 + a3*b1*b3*c1*c2*z3 + a1*b2*b3*c1*c2*z3 + a1*b2*c3*z3 + a1*a3*b2*c3*z3 + b1*b2*c3*z3 + a1*b1*b2*c3*z3 + a2*b1*b2*c3*z3 + a1*b2*b3*c3*z3 + a1*a3*b2*b3*c3*z3 + a3*b1*b2*b3*c3*z3 + b1*b2*b3*c1*c3*z3 + a1*b2*c2*c3*z3 + a1*a3*b2*c2*c3*z3 + b1*b2*c2*c3*z3 + a3*b1*b2*c2*c3*z3 + a1*b3*c2*c3*z3 + a1*a3*b3*c2*c3*z3 + a3*b1*b3*c2*c3*z3 + b1*b2*b3*c2*c3*z3 + a1*b2*c1*c2*c3*z3 + b1*b2*c1*c2*c3*z3 + a1*b2*b3*c1*c2*c3*z3 + b1*b2*b3*c1*c2*c3*z3 + a1*b2*x2*z3 + b1*b2*x2*z3 + a1*b3*x2*z3 + b1*b3*x2*z3 + a1*b2*c1*x2*z3 + b1*b2*c1*x2*z3 + a1*b3*c1*x2*z3 + b1*b3*c1*x2*z3 + a1*b2*c2*x2*z3 + b1*b2*c2*x2*z3 + a1*b3*c2*x2*z3 + b1*b3*c2*x2*z3 + a1*b2*c1*c2*x2*z3 + b1*b2*c1*c2*x2*z3 + a1*b3*c1*c2*x2*z3 + b1*b3*c1*c2*x2*z3 + a1*b2*c3*x2*z3 + b1*b2*c3*x2*z3 + a1*b3*c3*x2*z3 + b1*b3*c3*x2*z3 + a1*b2*c1*c3*x2*z3 + b1*b2*c1*c3*x2*z3 + a1*b3*c1*c3*x2*z3 + b1*b3*c1*c3*x2*z3 + a1*b2*x3*z3 + b1*b2*x3*z3 + a1*b2*c1*x3*z3 + b1*b2*c1*x3*z3 + a2*b3*c1*x3*z3 + b2*b3*c1*x3*z3 + a1*b2*c2*x3*z3 + b1*b2*c2*x3*z3 + b2*b3*c1*c2*x3*z3 + a1*b2*c3*x3*z3 + b1*b2*c3*x3*z3 + a1*b2*c1*c3*x3*z3 + b1*b2*c1*c3*x3*z3 + a2*b3*c1*c3*x3*z3 + b2*b3*c1*c3*x3*z3 + a1*b2*c2*c3*x3*z3 + b1*b2*c2*c3*x3*z3 + b2*b3*c1*c2*c3*x3*z3 + a1*b2*c1*c2*y2*z3 + b1*b2*c1*c2*y2*z3 + a1*b3*c1*c2*y2*z3 + b1*b3*c1*c2*y2*z3 + a1*b2*c1*c3*y2*z3 + b1*b2*c1*c3*y2*z3 + a1*b3*c1*c3*y2*z3 + b1*b3*c1*c3*y2*z3 + a1*b2*c1*c3*y3*z3 + b1*b2*c1*c3*y3*z3 + a2*b3*c1*c3*y3*z3 + a1*b2*c2*c3*y3*z3 + b1*b2*c2*c3*y3*z3 + b2*b3*c1*c2*c3*y3*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 107 ( I4mm)
#####################################################################
Ampin107:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin107:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyzin107:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain107:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
Bphiin107:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1*x1 + a1*b2*x1 + a2*b2*x1 + b2*c1*x1 + b1*b2*c1*x1 + a2*b1*y1 + b2*y1 + a1*b2*y1 + a2*b2*y1 + b2*c1*y1 + b1*b2*c1*y1 + a2*z1 + a2*b1*z1 + a1*b2*z1 + a2*b2*z1 + b1*b2*c1*z1;
end;
#####################################################################
Bxyzin107:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return b1*x1*x2 + b1*x2*y1 + b1*x1*y2 + b1*y1*y2 + x1*z2 + b1*x1*z2 + b1*x2*z2 + y1*z2 + b1*y1*z2 + b1*y2*z2;
end;
#####################################################################
CGAPin107:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return b3*c2*x1 + 2*a3*b1*x2 + a1*a3*b1*x2 + 3*a1*b3*x2 + a3*b1*c1*x2 + b3*c1*x2 + a1*b3*c1*x2 + 2*b1*b3*c1*x2 + 2*b2*b3*c1*x2 + 2*b1*b3*c2*x2 + b1*c3*x2 + 2*b3*x1*x2 + 2*b2*b3*x1*x2 + b3*c1*x1*x2 + 2*b1*c3*x1*x2 + (a3*b1*x2*(1 + x2))/2 + (b1*c3*x2*(1 + x2))/2 + (b3*x1*x2*(1 + x2))/2 + (c3*x1*x2*(1 + x2))/2 + (b1*c3*x1*x2*(1 + x2))/2 + 2*a2*b1*x3 + 2*a2*b1*b2*x3 + a1*a2*b3*x3 + a1*b2*b3*x3 + a2*b3*c1*x3 + a1*b2*b3*c1*x3 + a2*b2*b3*c1*x3 + b1*c2*x3 + 3*b1*b2*c2*x3 + b1*b2*c3*x3 + a2*x1*x3 + a1*a2*x1*x3 + a2*b1*x1*x3 + 2*b2*x1*x3 + a1*b2*x1*x3 + a2*b2*x1*x3 + 2*b1*b2*x1*x3 + a2*b3*x1*x3 + 2*b2*b3*x1*x3 + a2*c1*x1*x3 + a1*b2*c1*x1*x3 + a2*b2*c1*x1*x3 + a2*c2*x1*x3 + b2*c2*x1*x3 + b1*b2*c2*x1*x3 + b2*c3*x1*x3 + b1*b2*c3*x1*x3 + (3*a2*x1*(1 + x1)*x3)/2 + (a2*b2*x1*(1 + x1)*x3)/2 + b2*c2*x1*(1 + x1)*x3 + (3*b2*c3*x1*(1 + x1)*x3)/2 + a1*a2*x2*x3 + 3*b1*x2*x3 + 2*a1*b1*x2*x3 + a2*b1*x2*x3 + 4*a1*b2*x2*x3 + 3*b1*b2*x2*x3 + a1*b1*b2*x2*x3 + a2*b1*b2*x2*x3 + a1*b3*x2*x3 + a1*b1*b3*x2*x3 + 2*a1*b2*b3*x2*x3 + a2*c1*x2*x3 + 3*b1*c1*x2*x3 + 3*b2*c1*x2*x3 + a1*b2*c1*x2*x3 + a2*b2*c1*x2*x3 + 2*b3*c1*x2*x3 + b1*b3*c1*x2*x3 + b2*b3*c1*x2*x3 + 2*b1*b2*c2*x2*x3 + b1*c3*x2*x3 + b1*b2*c3*x2*x3 + x1*x2*x3 + 2*a2*x1*x2*x3 + 2*b2*x1*x2*x3 + a2*b2*x1*x2*x3 + b3*x1*x2*x3 + 3*b2*c2*x1*x2*x3 + c3*x1*x2*x3 + 2*b2*c3*x1*x2*x3 + (a1*a2*x3*(1 + x3))/2 + (a2*b1*x3*(1 + x3))/2 + (a1*b2*x3*(1 + x3))/2 + (a2*c1*x3*(1 + x3))/2 + (a1*b2*c1*x3*(1 + x3))/2 + (a2*b2*c1*x3*(1 + x3))/2 + (b1*c2*x3*(1 + x3))/2 + a2*x1*x3*(1 + x3) + b2*x1*x3*(1 + x3) + (b2*c2*x1*x3*(1 + x3))/2 + (b2*c3*x1*x3*(1 + x3))/2 + a1*x2*x3*(1 + x3) + c1*x2*x3*(1 + x3) + b3*c2*y1 + a1*b3*x2*y1 + b1*b3*x2*y1 + 2*b1*c3*x2*y1 + (b3*x2*(1 + x2)*y1)/2 + (c3*x2*(1 + x2)*y1)/2 + (b1*c3*x2*(1 + x2)*y1)/2 + a2*x3*y1 + a1*a2*x3*y1 + 2*a2*b1*x3*y1 + a1*b2*x3*y1 + 5*a2*b2*x3*y1 + a2*b3*x3*y1 + a2*c1*x3*y1 + a1*b2*c1*x3*y1 + a2*b2*c1*x3*y1 + a2*c2*x3*y1 + b1*c2*x3*y1 + 5*b2*c2*x3*y1 + b1*b2*c2*x3*y1 + b2*c3*x3*y1 + b1*b2*c3*x3*y1 + 3*a2*x1*x3*y1 + b2*x1*x3*y1 + a2*b2*x1*x3*y1 + 2*b2*c2*x1*x3*y1 + 3*b2*c3*x1*x3*y1 + 3*x2*x3*y1 + 4*a2*x2*x3*y1 + 4*b2*x2*x3*y1 + a2*b2*x2*x3*y1 + b3*x2*x3*y1 + 2*c2*x2*x3*y1 + 3*b2*c2*x2*x3*y1 + c3*x2*x3*y1 + 2*b2*c3*x2*x3*y1 + (3*a2*x3*(1 + x3)*y1)/2 + (c2*x3*(1 + x3)*y1)/2 + (b2*c2*x3*(1 + x3)*y1)/2 + (b2*c3*x3*(1 + x3)*y1)/2 + (3*a2*x3*y1*(1 + y1))/2 + (a2*b2*x3*y1*(1 + y1))/2 + b2*c2*x3*y1*(1 + y1) + (3*b2*c3*x3*y1*(1 + y1))/2 + 3*a3*b1*y2 + a1*a3*b1*y2 + 2*a1*b3*y2 + a3*b1*c1*y2 + b3*c1*y2 + a1*b3*c1*y2 + 2*b1*b3*c1*y2 + 2*b2*b3*c1*y2 + 2*b1*b3*c2*y2 + b1*c3*y2 + b3*x1*y2 + 2*b2*b3*x1*y2 + b3*c1*x1*y2 + 2*b1*c3*x1*y2 + a3*b1*x2*y2 + a1*b3*x2*y2 + b3*c1*x2*y2 + b1*c3*x2*y2 + b3*x1*x2*y2 + c3*x1*x2*y2 + b1*c3*x1*x2*y2 + a1*a2*x3*y2 + 2*b1*x3*y2 + 2*a1*b1*x3*y2 + 2*a2*b1*x3*y2 + 4*a1*b2*x3*y2 + 3*b1*b2*x3*y2 + a1*b1*b2*x3*y2 + a2*b1*b2*x3*y2 + a1*b3*x3*y2 + b1*b3*x3*y2 + a1*b1*b3*x3*y2 + 2*a1*b2*b3*x3*y2 + a2*c1*x3*y2 + 3*b1*c1*x3*y2 + 3*b2*c1*x3*y2 + a1*b2*c1*x3*y2 + a2*b2*c1*x3*y2 + 2*b3*c1*x3*y2 + b1*b3*c1*x3*y2 + b2*b3*c1*x3*y2 + b1*c2*x3*y2 + 2*b1*b2*c2*x3*y2 + b1*c3*x3*y2 + b1*b2*c3*x3*y2 + x1*x3*y2 + 2*a2*x1*x3*y2 + 2*b2*x1*x3*y2 + a2*b2*x1*x3*y2 + b3*x1*x3*y2 + 3*b2*c2*x1*x3*y2 + c3*x1*x3*y2 + 2*b2*c3*x1*x3*y2 + a1*x3*(1 + x3)*y2 + c1*x3*(1 + x3)*y2 + a1*b3*y1*y2 + b1*b3*y1*y2 + 2*b1*c3*y1*y2 + b3*x2*y1*y2 + c3*x2*y1*y2 + b1*c3*x2*y1*y2 + x3*y1*y2 + 3*a2*x3*y1*y2 + 2*b2*x3*y1*y2 + a2*b2*x3*y1*y2 + b3*x3*y1*y2 + c2*x3*y1*y2 + 3*b2*c2*x3*y1*y2 + c3*x3*y1*y2 + 2*b2*c3*x3*y1*y2 + (a3*b1*y2*(1 + y2))/2 + (b1*c3*y2*(1 + y2))/2 + (b3*x1*y2*(1 + y2))/2 + (c3*x1*y2*(1 + y2))/2 + (b1*c3*x1*y2*(1 + y2))/2 + (b3*y1*y2*(1 + y2))/2 + (c3*y1*y2*(1 + y2))/2 + (b1*c3*y1*y2*(1 + y2))/2 + 2*a2*b1*y3 + 2*a2*b1*b2*y3 + a1*a2*b3*y3 + a1*b2*b3*y3 + a2*b3*c1*y3 + a1*b2*b3*c1*y3 + a2*b2*b3*c1*y3 + b1*c2*y3 + 3*b1*b2*c2*y3 + b1*b2*c3*y3 + a1*a2*x1*y3 + a2*b1*x1*y3 + 2*b2*x1*y3 + a1*b2*x1*y3 + a2*b2*x1*y3 + 2*b1*b2*x1*y3 + a2*b3*x1*y3 + 2*b2*b3*x1*y3 + a2*c1*x1*y3 + a1*b2*c1*x1*y3 + a2*b2*c1*x1*y3 + a2*c2*x1*y3 + b2*c2*x1*y3 + b1*b2*c2*x1*y3 + b2*c3*x1*y3 + b1*b2*c3*x1*y3 + (3*a2*x1*(1 + x1)*y3)/2 + (b2*x1*(1 + x1)*y3)/2 + (a2*b2*x1*(1 + x1)*y3)/2 + b2*c2*x1*(1 + x1)*y3 + (3*b2*c3*x1*(1 + x1)*y3)/2 + a1*a2*x2*y3 + 2*b1*x2*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + 3*a1*b2*x2*y3 + 2*b1*b2*x2*y3 + a1*b1*b2*x2*y3 + a2*b1*b2*x2*y3 + a1*b3*x2*y3 + a1*b1*b3*x2*y3 + 2*a1*b2*b3*x2*y3 + a2*c1*x2*y3 + 2*b1*c1*x2*y3 + 2*b2*c1*x2*y3 + a1*b2*c1*x2*y3 + a2*b2*c1*x2*y3 + 2*b3*c1*x2*y3 + b1*b3*c1*x2*y3 + b2*b3*c1*x2*y3 + 2*b1*b2*c2*x2*y3 + b1*c3*x2*y3 + b1*b2*c3*x2*y3 + 2*a2*x1*x2*y3 + b2*x1*x2*y3 + a2*b2*x1*x2*y3 + b3*x1*x2*y3 + 3*b2*c2*x1*x2*y3 + c3*x1*x2*y3 + 2*b2*c3*x1*x2*y3 + a1*a2*x3*y3 + a1*b2*x3*y3 + 2*b1*b2*x3*y3 + a2*c1*x3*y3 + a1*b2*c1*x3*y3 + a2*b2*c1*x3*y3 + 2*a2*x1*x3*y3 + 2*b2*x1*x3*y3 + b2*c2*x1*x3*y3 + b2*c3*x1*x3*y3 + a1*a2*y1*y3 + 2*a2*b1*y1*y3 + 3*b2*y1*y3 + a1*b2*y1*y3 + 5*a2*b2*y1*y3 + a2*b3*y1*y3 + a2*c1*y1*y3 + a1*b2*c1*y1*y3 + a2*b2*c1*y1*y3 + a2*c2*y1*y3 + b1*c2*y1*y3 + 5*b2*c2*y1*y3 + b1*b2*c2*y1*y3 + b2*c3*y1*y3 + b1*b2*c3*y1*y3 + 3*a2*x1*y1*y3 + a2*b2*x1*y1*y3 + 2*b2*c2*x1*y1*y3 + 3*b2*c3*x1*y1*y3 + 4*a2*x2*y1*y3 + 3*b2*x2*y1*y3 + a2*b2*x2*y1*y3 + b3*x2*y1*y3 + 2*c2*x2*y1*y3 + 3*b2*c2*x2*y1*y3 + c3*x2*y1*y3 + 2*b2*c3*x2*y1*y3 + 2*a2*x3*y1*y3 + 4*b2*x3*y1*y3 + b2*c2*x3*y1*y3 + b2*c3*x3*y1*y3 + (3*a2*y1*(1 + y1)*y3)/2 + (b2*y1*(1 + y1)*y3)/2 + (a2*b2*y1*(1 + y1)*y3)/2 + b2*c2*y1*(1 + y1)*y3 + (3*b2*c3*y1*(1 + y1)*y3)/2 + a1*a2*y2*y3 + b1*y2*y3 + a1*b1*y2*y3 + 2*a2*b1*y2*y3 + 3*a1*b2*y2*y3 + 4*b1*b2*y2*y3 + a1*b1*b2*y2*y3 + a2*b1*b2*y2*y3 + a1*b3*y2*y3 + b1*b3*y2*y3 + a1*b1*b3*y2*y3 + 2*a1*b2*b3*y2*y3 + a2*c1*y2*y3 + 2*b1*c1*y2*y3 + 2*b2*c1*y2*y3 + a1*b2*c1*y2*y3 + a2*b2*c1*y2*y3 + 2*b3*c1*y2*y3 + b1*b3*c1*y2*y3 + b2*b3*c1*y2*y3 + b1*c2*y2*y3 + 2*b1*b2*c2*y2*y3 + b1*c3*y2*y3 + b1*b2*c3*y2*y3 + 2*a2*x1*y2*y3 + 3*b2*x1*y2*y3 + a2*b2*x1*y2*y3 + b3*x1*y2*y3 + 3*b2*c2*x1*y2*y3 + c3*x1*y2*y3 + 2*b2*c3*x1*y2*y3 + y1*y2*y3 + 3*a2*y1*y2*y3 + 3*b2*y1*y2*y3 + a2*b2*y1*y2*y3 + b3*y1*y2*y3 + c2*y1*y2*y3 + 3*b2*c2*y1*y2*y3 + c3*y1*y2*y3 + 2*b2*c3*y1*y2*y3 + (a1*a2*y3*(1 + y3))/2 + (a2*b1*y3*(1 + y3))/2 + (a1*b2*y3*(1 + y3))/2 + (a2*c1*y3*(1 + y3))/2 + (a1*b2*c1*y3*(1 + y3))/2 + (a2*b2*c1*y3*(1 + y3))/2 + (b1*c2*y3*(1 + y3))/2 + a2*x1*y3*(1 + y3) + b2*x1*y3*(1 + y3) + (b2*c2*x1*y3*(1 + y3))/2 + (b2*c3*x1*y3*(1 + y3))/2 + (a1*x2*y3*(1 + y3))/2 + (c1*x2*y3*(1 + y3))/2 + (3*a2*y1*y3*(1 + y3))/2 + (c2*y1*y3*(1 + y3))/2 + (b2*c2*y1*y3*(1 + y3))/2 + (b2*c3*y1*y3*(1 + y3))/2 + (a1*y2*y3*(1 + y3))/2 + (c1*y2*y3*(1 + y3))/2 + a3*b1*x2*z1 + 2*b3*x2*z1 + 2*b2*b3*x2*z1 + b3*c1*x2*z1 + c3*x2*z1 + 3*b1*c3*x2*z1 + c3*x1*x2*z1 + (b3*x2*(1 + x2)*z1)/2 + c3*x2*(1 + x2)*z1 + (b1*c3*x2*(1 + x2)*z1)/2 + a2*x3*z1 + a1*a2*x3*z1 + a2*b1*x3*z1 + 2*b2*x3*z1 + a1*b2*x3*z1 + a2*b2*x3*z1 + 2*b1*b2*x3*z1 + a2*b3*x3*z1 + 2*b2*b3*x3*z1 + a2*c1*x3*z1 + a1*b2*c1*x3*z1 + a2*b2*c1*x3*z1 + a2*c2*x3*z1 + 2*b2*c2*x3*z1 + 2*b1*b2*c2*x3*z1 + b2*b3*c2*x3*z1 + 2*b2*c3*x3*z1 + 2*b1*b2*c3*x3*z1 + b2*b3*c3*x3*z1 + 3*a2*x1*x3*z1 + a2*b2*x1*x3*z1 + b2*c1*x1*x3*z1 + 3*b2*c2*x1*x3*z1 + 2*b2*c3*x1*x3*z1 + x2*x3*z1 + 2*a2*x2*x3*z1 + 2*b2*x2*x3*z1 + a2*b2*x2*x3*z1 + b3*x2*x3*z1 + 3*b2*c2*x2*x3*z1 + c3*x2*x3*z1 + 2*b2*c3*x2*x3*z1 + a2*x3*(1 + x3)*z1 + b2*x3*(1 + x3)*z1 + (b2*c2*x3*(1 + x3)*z1)/2 + (b2*c3*x3*(1 + x3)*z1)/2 + c3*x2*y1*z1 + 3*a2*x3*y1*z1 + b2*x3*y1*z1 + a2*b2*x3*y1*z1 + b2*c1*x3*y1*z1 + 3*b2*c2*x3*y1*z1 + 2*b2*c3*x3*y1*z1 + a3*b1*y2*z1 + b3*y2*z1 + 2*b2*b3*y2*z1 + b3*c1*y2*z1 + c3*y2*z1 + 3*b1*c3*y2*z1 + c3*x1*y2*z1 + b3*x2*y2*z1 + 2*c3*x2*y2*z1 + b1*c3*x2*y2*z1 + x3*y2*z1 + 2*a2*x3*y2*z1 + 2*b2*x3*y2*z1 + a2*b2*x3*y2*z1 + b3*x3*y2*z1 + 3*b2*c2*x3*y2*z1 + c3*x3*y2*z1 + 2*b2*c3*x3*y2*z1 + c3*y1*y2*z1 + (b3*y2*(1 + y2)*z1)/2 + c3*y2*(1 + y2)*z1 + (b1*c3*y2*(1 + y2)*z1)/2 + a1*a2*y3*z1 + a2*b1*y3*z1 + 2*b2*y3*z1 + a1*b2*y3*z1 + a2*b2*y3*z1 + 2*b1*b2*y3*z1 + a2*b3*y3*z1 + 2*b2*b3*y3*z1 + a2*c1*y3*z1 + a1*b2*c1*y3*z1 + a2*b2*c1*y3*z1 + a2*c2*y3*z1 + 2*b2*c2*y3*z1 + 2*b1*b2*c2*y3*z1 + b2*b3*c2*y3*z1 + 2*b2*c3*y3*z1 + 2*b1*b2*c3*y3*z1 + b2*b3*c3*y3*z1 + 3*a2*x1*y3*z1 + b2*x1*y3*z1 + a2*b2*x1*y3*z1 + b2*c1*x1*y3*z1 + 3*b2*c2*x1*y3*z1 + 2*b2*c3*x1*y3*z1 + 2*a2*x2*y3*z1 + b2*x2*y3*z1 + a2*b2*x2*y3*z1 + b3*x2*y3*z1 + 3*b2*c2*x2*y3*z1 + c3*x2*y3*z1 + 2*b2*c3*x2*y3*z1 + 2*a2*x3*y3*z1 + 2*b2*x3*y3*z1 + b2*c2*x3*y3*z1 + b2*c3*x3*y3*z1 + 3*a2*y1*y3*z1 + a2*b2*y1*y3*z1 + b2*c1*y1*y3*z1 + 3*b2*c2*y1*y3*z1 + 2*b2*c3*y1*y3*z1 + 2*a2*y2*y3*z1 + 3*b2*y2*y3*z1 + a2*b2*y2*y3*z1 + b3*y2*y3*z1 + 3*b2*c2*y2*y3*z1 + c3*y2*y3*z1 + 2*b2*c3*y2*y3*z1 + a2*y3*(1 + y3)*z1 + b2*y3*(1 + y3)*z1 + (b2*c2*y3*(1 + y3)*z1)/2 + (b2*c3*y3*(1 + y3)*z1)/2 + (b3*c2*z1*(1 + z1))/2 + (3*a2*x3*z1*(1 + z1))/2 + (a2*b2*x3*z1*(1 + z1))/2 + b2*c2*x3*z1*(1 + z1) + (3*b2*c3*x3*z1*(1 + z1))/2 + (3*a2*y3*z1*(1 + z1))/2 + (b2*y3*z1*(1 + z1))/2 + (a2*b2*y3*z1*(1 + z1))/2 + b2*c2*y3*z1*(1 + z1) + (3*b2*c3*y3*z1*(1 + z1))/2 + (b2 + c2)*c3*(x1 + y1 + z1) + a1*a3*z2 + a3*b1*z2 + a1*a3*b1*z2 + 2*a1*b3*z2 + b3*c1*z2 + 2*b1*b3*c1*z2 + 2*b2*b3*c1*z2 + 2*b1*b3*c2*z2 + b1*c3*z2 + b3*x1*z2 + 2*b2*b3*x1*z2 + b3*c1*x1*z2 + 2*b1*c3*x1*z2 + (3*c3*x1*(1 + x1)*z2)/2 + a1*b3*x2*z2 + b3*c1*x2*z2 + a1*b3*c1*x2*z2 + 3*b1*c3*x2*z2 + b3*x1*x2*z2 + c3*x1*x2*z2 + b1*c3*x1*x2*z2 + a1*a2*x3*z2 + 3*a1*b1*x3*z2 + 2*a2*b1*x3*z2 + 5*a1*b2*x3*z2 + 3*b1*b2*x3*z2 + a1*b1*b2*x3*z2 + a2*b1*b2*x3*z2 + 2*a1*b3*x3*z2 + a1*b1*b3*x3*z2 + 2*a1*b2*b3*x3*z2 + a2*c1*x3*z2 + b2*c1*x3*z2 + a1*b2*c1*x3*z2 + a2*b2*c1*x3*z2 + b1*b2*c1*x3*z2 + b2*b3*c1*x3*z2 + 2*b1*b2*c2*x3*z2 + b1*b2*c3*x3*z2 + 3*a2*x1*x3*z2 + b2*x1*x3*z2 + a2*b2*x1*x3*z2 + b3*x1*x3*z2 + 3*b2*c2*x1*x3*z2 + 2*b2*c3*x1*x3*z2 + a1*x3*(1 + x3)*z2 + a1*b3*y1*z2 + b1*b3*y1*z2 + b3*c1*y1*z2 + 2*b1*c3*y1*z2 + 3*c3*x1*y1*z2 + b3*x2*y1*z2 + c3*x2*y1*z2 + b1*c3*x2*y1*z2 + 3*a2*x3*y1*z2 + 3*b2*x3*y1*z2 + a2*b2*x3*y1*z2 + b3*x3*y1*z2 + 3*b2*c2*x3*y1*z2 + 2*b2*c3*x3*y1*z2 + (3*c3*y1*(1 + y1)*z2)/2 + b3*c1*y2*z2 + a1*b3*c1*y2*z2 + 3*b1*c3*y2*z2 + b3*x1*y2*z2 + c3*x1*y2*z2 + b1*c3*x1*y2*z2 + b3*y1*y2*z2 + c3*y1*y2*z2 + b1*c3*y1*y2*z2 + a1*a2*y3*z2 + 2*a1*b1*y3*z2 + 2*a2*b1*y3*z2 + 4*a1*b2*y3*z2 + 2*b1*b2*y3*z2 + a1*b1*b2*y3*z2 + a2*b1*b2*y3*z2 + 2*a1*b3*y3*z2 + a1*b1*b3*y3*z2 + 2*a1*b2*b3*y3*z2 + a2*c1*y3*z2 + b2*c1*y3*z2 + a1*b2*c1*y3*z2 + a2*b2*c1*y3*z2 + b1*b2*c1*y3*z2 + b2*b3*c1*y3*z2 + 2*b1*b2*c2*y3*z2 + b1*b2*c3*y3*z2 + 3*a2*x1*y3*z2 + 2*b2*x1*y3*z2 + a2*b2*x1*y3*z2 + b3*x1*y3*z2 + 3*b2*c2*x1*y3*z2 + 2*b2*c3*x1*y3*z2 + 3*a2*y1*y3*z2 + 4*b2*y1*y3*z2 + a2*b2*y1*y3*z2 + b3*y1*y3*z2 + 3*b2*c2*y1*y3*z2 + 2*b2*c3*y1*y3*z2 + (a1*y3*(1 + y3)*z2)/2 + a3*z1*z2 + a3*b1*z1*z2 + b3*z1*z2 + 2*b2*b3*z1*z2 + b3*c1*z1*z2 + b3*c2*z1*z2 + c3*z1*z2 + 4*b1*c3*z1*z2 + b2*c3*z1*z2 + b3*c3*z1*z2 + c3*x1*z1*z2 + b3*x2*z1*z2 + b1*c3*x2*z1*z2 + 3*a2*x3*z1*z2 + b2*x3*z1*z2 + a2*b2*x3*z1*z2 + b3*x3*z1*z2 + 3*b2*c2*x3*z1*z2 + 2*b2*c3*x3*z1*z2 + c3*y1*z1*z2 + b3*y2*z1*z2 + b1*c3*y2*z1*z2 + 3*a2*y3*z1*z2 + 2*b2*y3*z1*z2 + a2*b2*y3*z1*z2 + b3*y3*z1*z2 + 3*b2*c2*y3*z1*z2 + 2*b2*c3*y3*z1*z2 + (3*c3*z1*(1 + z1)*z2)/2 + (a3*b1*z2*(1 + z2))/2 + (b1*c3*z2*(1 + z2))/2 + (b3*x1*z2*(1 + z2))/2 + (c3*x1*z2*(1 + z2))/2 + (b1*c3*x1*z2*(1 + z2))/2 + (b3*y1*z2*(1 + z2))/2 + (c3*y1*z2*(1 + z2))/2 + (b1*c3*y1*z2*(1 + z2))/2 + (b3*z1*z2*(1 + z2))/2 + c3*z1*z2*(1 + z2) + (b1*c3*z1*z2*(1 + z2))/2 + 3*a2*b1*z3 + 2*a2*b1*b2*z3 + a1*a2*b3*z3 + a1*b2*b3*z3 + a2*b3*c1*z3 + a1*b2*b3*c1*z3 + a2*b2*b3*c1*z3 + b1*b2*c2*z3 + b1*b2*c3*z3 + a1*a2*x1*z3 + a2*b1*x1*z3 + 2*b2*x1*z3 + a1*b2*x1*z3 + a2*b2*x1*z3 + 2*b1*b2*x1*z3 + a2*b3*x1*z3 + 2*b2*b3*x1*z3 + a2*c1*x1*z3 + a1*b2*c1*x1*z3 + a2*b2*c1*x1*z3 + b2*c2*x1*z3 + b1*b2*c2*x1*z3 + b3*c2*x1*z3 + b2*c3*x1*z3 + b1*b2*c3*x1*z3 + a2*x1*(1 + x1)*z3 + (a2*b2*x1*(1 + x1)*z3)/2 + (3*b2*c2*x1*(1 + x1)*z3)/2 + (3*b2*c3*x1*(1 + x1)*z3)/2 + a1*a2*x2*z3 + 4*b1*x2*z3 + 4*a1*b1*x2*z3 + 6*a1*b2*x2*z3 + 3*b1*b2*x2*z3 + a1*b1*b2*x2*z3 + a2*b1*b2*x2*z3 + a1*b3*x2*z3 + a1*b1*b3*x2*z3 + 2*a1*b2*b3*x2*z3 + a2*c1*x2*z3 + 4*b1*c1*x2*z3 + 4*b2*c1*x2*z3 + a1*b2*c1*x2*z3 + a2*b2*c1*x2*z3 + b3*c1*x2*z3 + b1*b3*c1*x2*z3 + b2*b3*c1*x2*z3 + 2*b1*c2*x2*z3 + b1*b2*c2*x2*z3 + 3*b1*c3*x2*z3 + 2*b1*b2*c3*x2*z3 + b1*b3*c3*x2*z3 + 2*x1*x2*z3 + a1*x1*x2*z3 + a2*x1*x2*z3 + 2*b2*x1*x2*z3 + a2*b2*x1*x2*z3 + b3*x1*x2*z3 + c1*x1*x2*z3 + b1*c1*x1*x2*z3 + 2*c2*x1*x2*z3 + b1*c2*x1*x2*z3 + 2*b2*c2*x1*x2*z3 + 2*c3*x1*x2*z3 + b1*c3*x1*x2*z3 + 2*b2*c3*x1*x2*z3 + a1*a2*x3*z3 + 3*a2*b1*x3*z3 + a1*b2*x3*z3 + 4*b1*b2*x3*z3 + a2*c1*x3*z3 + a1*b2*c1*x3*z3 + a2*b2*c1*x3*z3 + a2*b1*c2*x3*z3 + 2*b1*b2*c2*x3*z3 + 3*a2*x1*x3*z3 + 3*b2*x1*x3*z3 + 3*b2*c2*x1*x3*z3 + b2*c3*x1*x3*z3 + 3*a2*y1*z3 + a1*a2*y1*z3 + 2*a2*b1*y1*z3 + a1*b2*y1*z3 + 5*a2*b2*y1*z3 + a2*b3*y1*z3 + a2*c1*y1*z3 + a1*b2*c1*y1*z3 + a2*b2*c1*y1*z3 + b2*c2*y1*z3 + b1*b2*c2*y1*z3 + b3*c2*y1*z3 + b2*c3*y1*z3 + b1*b2*c3*y1*z3 + 2*a2*x1*y1*z3 + b2*x1*y1*z3 + a2*b2*x1*y1*z3 + 3*b2*c2*x1*y1*z3 + 3*b2*c3*x1*y1*z3 + x2*y1*z3 + a1*x2*y1*z3 + 3*a2*x2*y1*z3 + 4*b2*x2*y1*z3 + a2*b2*x2*y1*z3 + b3*x2*y1*z3 + c1*x2*y1*z3 + b1*c1*x2*y1*z3 + 2*c2*x2*y1*z3 + b1*c2*x2*y1*z3 + 2*b2*c2*x2*y1*z3 + 2*c3*x2*y1*z3 + b1*c3*x2*y1*z3 + 2*b2*c3*x2*y1*z3 + 4*a2*x3*y1*z3 + 3*b2*x3*y1*z3 + a2*c2*x3*y1*z3 + 5*b2*c2*x3*y1*z3 + b2*c3*x3*y1*z3 + a2*y1*(1 + y1)*z3 + (a2*b2*y1*(1 + y1)*z3)/2 + (3*b2*c2*y1*(1 + y1)*z3)/2 + (3*b2*c3*y1*(1 + y1)*z3)/2 + a1*a2*y2*z3 + 4*a1*b1*y2*z3 + a2*b1*y2*z3 + 6*a1*b2*y2*z3 + 3*b1*b2*y2*z3 + a1*b1*b2*y2*z3 + a2*b1*b2*y2*z3 + a1*b3*y2*z3 + b1*b3*y2*z3 + a1*b1*b3*y2*z3 + 2*a1*b2*b3*y2*z3 + a2*c1*y2*z3 + 4*b1*c1*y2*z3 + 4*b2*c1*y2*z3 + a1*b2*c1*y2*z3 + a2*b2*c1*y2*z3 + b3*c1*y2*z3 + b1*b3*c1*y2*z3 + b2*b3*c1*y2*z3 + 2*b1*c2*y2*z3 + b1*b2*c2*y2*z3 + 3*b1*c3*y2*z3 + 2*b1*b2*c3*y2*z3 + b1*b3*c3*y2*z3 + x1*y2*z3 + a1*x1*y2*z3 + a2*x1*y2*z3 + 2*b2*x1*y2*z3 + a2*b2*x1*y2*z3 + b3*x1*y2*z3 + c1*x1*y2*z3 + b1*c1*x1*y2*z3 + 2*c2*x1*y2*z3 + b1*c2*x1*y2*z3 + 2*b2*c2*x1*y2*z3 + 2*c3*x1*y2*z3 + b1*c3*x1*y2*z3 + 2*b2*c3*x1*y2*z3 + a1*y1*y2*z3 + 2*a2*y1*y2*z3 + 2*b2*y1*y2*z3 + a2*b2*y1*y2*z3 + b3*y1*y2*z3 + c1*y1*y2*z3 + b1*c1*y1*y2*z3 + 2*c2*y1*y2*z3 + b1*c2*y1*y2*z3 + 2*b2*c2*y1*y2*z3 + 2*c3*y1*y2*z3 + b1*c3*y1*y2*z3 + 2*b2*c3*y1*y2*z3 + a1*a2*y3*z3 + 2*a2*b1*y3*z3 + a1*b2*y3*z3 + 4*b1*b2*y3*z3 + a2*c1*y3*z3 + a1*b2*c1*y3*z3 + a2*b2*c1*y3*z3 + a2*b1*c2*y3*z3 + 2*b1*b2*c2*y3*z3 + 3*a2*x1*y3*z3 + b2*x1*y3*z3 + 3*b2*c2*x1*y3*z3 + b2*c3*x1*y3*z3 + 5*a2*y1*y3*z3 + 3*b2*y1*y3*z3 + a2*c2*y1*y3*z3 + 5*b2*c2*y1*y3*z3 + b2*c3*y1*y3*z3 + a1*a2*z1*z3 + a2*b1*z1*z3 + 2*b2*z1*z3 + a1*b2*z1*z3 + a2*b2*z1*z3 + 2*b1*b2*z1*z3 + a2*b3*z1*z3 + 2*b2*b3*z1*z3 + a2*c1*z1*z3 + a1*b2*c1*z1*z3 + a2*b2*c1*z1*z3 + b1*c2*z1*z3 + 3*b2*c2*z1*z3 + 2*b1*b2*c2*z1*z3 + b2*b3*c2*z1*z3 + 2*b2*c3*z1*z3 + 2*b1*b2*c3*z1*z3 + b2*b3*c3*z1*z3 + 2*a2*x1*z1*z3 + a2*b2*x1*z1*z3 + b2*c1*x1*z1*z3 + 2*b2*c2*x1*z1*z3 + 2*b2*c3*x1*z1*z3 + 2*x2*z1*z3 + a1*x2*z1*z3 + a2*x2*z1*z3 + 2*b2*x2*z1*z3 + a2*b2*x2*z1*z3 + b3*x2*z1*z3 + b1*c1*x2*z1*z3 + c2*x2*z1*z3 + b1*c2*x2*z1*z3 + 2*b2*c2*x2*z1*z3 + c3*x2*z1*z3 + b1*c3*x2*z1*z3 + 2*b2*c3*x2*z1*z3 + 3*a2*x3*z1*z3 + 3*b2*x3*z1*z3 + 3*b2*c2*x3*z1*z3 + b2*c3*x3*z1*z3 + 2*a2*y1*z1*z3 + b2*y1*z1*z3 + a2*b2*y1*z1*z3 + b2*c1*y1*z1*z3 + 2*b2*c2*y1*z1*z3 + 2*b2*c3*y1*z1*z3 + y2*z1*z3 + a1*y2*z1*z3 + a2*y2*z1*z3 + 2*b2*y2*z1*z3 + a2*b2*y2*z1*z3 + b3*y2*z1*z3 + b1*c1*y2*z1*z3 + c2*y2*z1*z3 + b1*c2*y2*z1*z3 + 2*b2*c2*y2*z1*z3 + c3*y2*z1*z3 + b1*c3*y2*z1*z3 + 2*b2*c3*y2*z1*z3 + 3*a2*y3*z1*z3 + b2*y3*z1*z3 + 3*b2*c2*y3*z1*z3 + b2*c3*y3*z1*z3 + a2*z1*(1 + z1)*z3 + (a2*b2*z1*(1 + z1)*z3)/2 + (3*b2*c2*z1*(1 + z1)*z3)/2 + (3*b2*c3*z1*(1 + z1)*z3)/2 + a1*a2*z2*z3 + b1*z2*z3 + 5*a1*b1*z2*z3 + a2*b1*z2*z3 + 7*a1*b2*z2*z3 + 3*b1*b2*z2*z3 + a1*b1*b2*z2*z3 + a2*b1*b2*z2*z3 + 2*a1*b3*z2*z3 + a1*b1*b3*z2*z3 + 2*a1*b2*b3*z2*z3 + a2*c1*z2*z3 + b1*c1*z2*z3 + 2*b2*c1*z2*z3 + a1*b2*c1*z2*z3 + a2*b2*c1*z2*z3 + b1*b2*c1*z2*z3 + b3*c1*z2*z3 + b2*b3*c1*z2*z3 + b1*c2*z2*z3 + b1*b2*c2*z2*z3 + b1*c3*z2*z3 + 2*b1*b2*c3*z2*z3 + b1*b3*c3*z2*z3 + a1*x1*z2*z3 + 2*a2*x1*z2*z3 + b2*x1*z2*z3 + a2*b2*x1*z2*z3 + b3*x1*z2*z3 + c1*x1*z2*z3 + b1*c1*x1*z2*z3 + b1*c2*x1*z2*z3 + 2*b2*c2*x1*z2*z3 + b1*c3*x1*z2*z3 + 2*b2*c3*x1*z2*z3 + 5*y1*z2*z3 + a1*y1*z2*z3 + 2*a2*y1*z2*z3 + 3*b2*y1*z2*z3 + a2*b2*y1*z2*z3 + b3*y1*z2*z3 + c1*y1*z2*z3 + b1*c1*y1*z2*z3 + b1*c2*y1*z2*z3 + 2*b2*c2*y1*z2*z3 + b1*c3*y1*z2*z3 + 2*b2*c3*y1*z2*z3 + a1*z1*z2*z3 + 2*a2*z1*z2*z3 + b2*z1*z2*z3 + a2*b2*z1*z2*z3 + b3*z1*z2*z3 + b1*c1*z1*z2*z3 + c2*z1*z2*z3 + b1*c2*z1*z2*z3 + 2*b2*c2*z1*z2*z3 + c3*z1*z2*z3 + b1*c3*z1*z2*z3 + 2*b2*c3*z1*z2*z3 + (a1*a2*z3*(1 + z3))/2 + (a2*b1*z3*(1 + z3))/2 + (a1*b2*z3*(1 + z3))/2 + (a2*c1*z3*(1 + z3))/2 + (a1*b2*c1*z3*(1 + z3))/2 + (a2*b2*c1*z3*(1 + z3))/2 + a2*x1*z3*(1 + z3) + b2*x1*z3*(1 + z3) + (c2*x1*z3*(1 + z3))/2 + (b2*c2*x1*z3*(1 + z3))/2 + (b2*c3*x1*z3*(1 + z3))/2 + 2*a1*x2*z3*(1 + z3) + 2*c1*x2*z3*(1 + z3) + (3*a2*y1*z3*(1 + z3))/2 + (c2*y1*z3*(1 + z3))/2 + (b2*c2*y1*z3*(1 + z3))/2 + (b2*c3*y1*z3*(1 + z3))/2 + 2*a1*y2*z3*(1 + z3) + 2*c1*y2*z3*(1 + z3) + a2*z1*z3*(1 + z3) + b2*z1*z3*(1 + z3) + (c2*z1*z3*(1 + z3))/2 + (b2*c2*z1*z3*(1 + z3))/2 + (b2*c3*z1*z3*(1 + z3))/2 + 2*a1*z2*z3*(1 + z3) + c1*c2*(x3 + y3 + z3) + (a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*(2*b2 + c2))*(x3 + y3 + z3);
end;
#####################################################################
#####################################################################
#Space Group No. 108 ( I4cm)
#####################################################################
Ampin108:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin108:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyzin108:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain108:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
Bxyzin108:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return b1*x1*x2 + b1*x2*y1 + b1*x1*y2 + b1*y1*y2 + x1*z2 + b1*x1*z2 + b1*x2*z2 + y1*z2 + b1*y1*z2 + b1*y2*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 109 ( I4_1md)
#####################################################################
Ampin109:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin109:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Bdeltain109:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
B2in109:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1*b2 + a2*b2*c1 + a2*b1*x1 + a2*b1*b2*x1 + a2*b1*c1*x1 + a2*b2*c1*x1 + a2*b1*b2*x2 + b1*c1*x2 + a2*b2*c1*x2 + b1*b2*c1*x2 + b1*x1*x2 + b1*b2*x1*x2 + a2*b1*y1 + a2*b1*b2*y1 + a2*b1*c1*y1 + a2*b2*c1*y1 + b1*x2*y1 + b1*b2*x2*y1 + b1*y2 + a2*b1*b2*y2 + c1*y2 + b1*c1*y2 + a2*b2*c1*y2 + b1*b2*c1*y2 + b1*x1*y2 + b1*b2*x1*y2 + b1*y1*y2 + b1*b2*y1*y2 + a2*b1*b2*z1 + a2*c1*z1 + a2*b1*c1*z1 + a2*b2*c1*z1 + b1*b2*c1*z1 + b2*x1*z1 + x2*z1 + b1*x2*z1 + b2*x2*z1 + b1*b2*x2*z1 + b2*y1*z1 + y2*z1 + b1*y2*z1 + b2*y2*z1 + b1*b2*y2*z1 + a2*b1*z2 + a2*b1*b2*z2 + a2*c1*z2 + a2*b2*c1*z2 + b2*x1*z2 + b1*b2*x1*z2 + b2*y1*z2 + b1*b2*y1*z2 + b1*b2*z1*z2;
end;
#####################################################################
C1in109:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3 + a1*a2*a3*b2 + a1*a3*b1*b2 + a1*a2*a3*b1*b3 + a1*b2*b3 + a1*a3*b2*b3 + a2*a3*b1*b2*b3 + a1*a2*a3*b1*b2*b3 + a2*a3*b1*c1 + a1*a2*a3*b1*c1 + a1*a3*b2*c1 + a1*a2*a3*b2*c1 + a3*b1*b2*c1 + a1*a3*b1*b2*c1 + a2*a3*b1*b2*c1 + a1*a2*a3*b3*c1 + a2*b1*b3*c1 + a1*a2*b1*b3*c1 + a1*a2*a3*b1*b3*c1 + a1*a2*b2*b3*c1 + a1*a3*b2*b3*c1 + a1*a2*a3*b2*b3*c1 + b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a3*b1*b2*b3*c1 + a1*a3*b1*b2*b3*c1 + a2*a3*b1*b2*b3*c1 + a1*a3*b1*c2 + a2*a3*b1*c2 + a3*b1*b2*c2 + a1*a3*b1*b2*c2 + a2*a3*b1*b2*c2 + a2*b1*b3*c2 + a1*a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a2*a3*b1*b3*c2 + a1*a3*b2*b3*c2 + a2*b1*b2*b3*c2 + a1*a2*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a2*a3*b1*b2*b3*c2 + a1*a3*c1*c2 + a1*a2*a3*b1*c1*c2 + a3*b2*c1*c2 + a1*a3*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a2*a3*b1*b2*c1*c2 + a1*a3*b3*c1*c2 + a2*a3*b3*c1*c2 + a1*b1*b3*c1*c2 + a2*b1*b3*c1*c2 + a1*a2*b1*b3*c1*c2 + a1*a3*b1*b3*c1*c2 + a2*a3*b1*b3*c1*c2 + a1*a2*a3*b1*b3*c1*c2 + a1*a2*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + b1*b2*b3*c1*c2 + a1*a2*a3*b1*c3 + a1*a3*b2*c3 + a1*a2*a3*b2*c3 + a1*a2*b1*b2*c3 + a1*a2*a3*b1*b2*c3 + a1*a2*b1*b2*b3*c3 + a2*a3*b1*b2*b3*c3 + a1*a2*a3*b1*b2*b3*c3 + a1*a2*b1*c1*c3 + a2*a3*b1*c1*c3 + a1*b2*c1*c3 + a1*a2*b2*c1*c3 + b1*b2*c1*c3 + a1*b1*b2*c1*c3 + a1*a2*b1*b2*c1*c3 + a3*b1*b2*c1*c3 + a1*a3*b1*b2*c1*c3 + a1*a2*b3*c1*c3 + a2*b1*b3*c1*c3 + a1*a2*b1*b3*c1*c3 + a2*a3*b1*b3*c1*c3 + b1*b2*b3*c1*c3 + a1*b1*b2*b3*c1*c3 + a2*b1*b2*b3*c1*c3 + a1*a2*b1*b2*b3*c1*c3 + a1*c2*c3 + a1*a2*a3*c2*c3 + a2*b1*c2*c3 + a1*a3*b1*c2*c3 + a2*a3*b1*c2*c3 + a1*a2*a3*b1*c2*c3 + a3*b1*b2*c2*c3 + a1*a3*b1*b2*c2*c3 + a1*b3*c2*c3 + a1*a2*a3*b3*c2*c3 + a1*b1*b3*c2*c3 + a3*b1*b3*c2*c3 + a1*b2*b3*c2*c3 + a1*a2*a3*b2*b3*c2*c3 + a2*b1*b2*b3*c2*c3 + a1*a3*b1*b2*b3*c2*c3 + a2*a3*b1*b2*b3*c2*c3 + a1*a2*c1*c2*c3 + a2*a3*c1*c2*c3 + a1*b1*c1*c2*c3 + a2*b1*c1*c2*c3 + a3*b1*c1*c2*c3 + b2*c1*c2*c3 + a1*b2*c1*c2*c3 + a1*a2*b2*c1*c2*c3 + a1*a3*b2*c1*c2*c3 + b1*b2*c1*c2*c3 + a1*b1*b2*c1*c2*c3 + a1*a2*b1*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + a1*b3*c1*c2*c3 + a1*a2*b3*c1*c2*c3 + a3*b3*c1*c2*c3 + a2*a3*b3*c1*c2*c3 + b1*b3*c1*c2*c3 + a1*b1*b3*c1*c2*c3 + a1*a2*b1*b3*c1*c2*c3 + a1*a3*b1*b3*c1*c2*c3 + a2*a3*b1*b3*c1*c2*c3 + b2*b3*c1*c2*c3 + a2*b2*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + a1*a3*b2*b3*c1*c2*c3 + a2*a3*b2*b3*c1*c2*c3 + b1*b2*b3*c1*c2*c3 + a1*b1*b2*b3*c1*c2*c3 + a2*b1*b2*b3*c1*c2*c3 + a1*a2*b1*b2*b3*c1*c2*c3 + a3*b1*b2*b3*c1*c2*c3 + a2*a3*b2*x1 + a1*a2*a3*b2*x1 + a1*a3*b1*b2*x1 + a2*a3*b1*b2*x1 + a1*a2*b3*x1 + a1*a2*a3*b3*x1 + a1*a2*b2*b3*x1 + a1*a3*b1*b2*b3*x1 + a1*a2*a3*b1*b2*b3*x1 + a2*a3*c1*x1 + a1*a2*a3*c1*x1 + a2*a3*b1*c1*x1 + a1*a3*b2*c1*x1 + a2*b3*c1*x1 + a2*b1*b3*c1*x1 + a1*a2*b1*b3*c1*x1 + a3*b2*b3*c1*x1 + a2*b1*b2*b3*c1*x1 + a3*c2*x1 + a1*a3*c2*x1 + a2*a3*c2*x1 + a1*a2*a3*c2*x1 + a3*b1*c2*x1 + a2*a3*b1*c2*x1 + a1*a2*a3*b1*c2*x1 + a1*a2*a3*b2*c2*x1 + a1*a3*b1*b2*c2*x1 + a2*a3*b1*b2*c2*x1 + a1*a2*a3*b1*b2*c2*x1 + b3*c2*x1 + a2*b3*c2*x1 + a1*a2*b3*c2*x1 + a1*a3*b3*c2*x1 + a2*a3*b3*c2*x1 + b1*b3*c2*x1 + a1*b1*b3*c2*x1 + a2*b1*b3*c2*x1 + a1*a2*b1*b3*c2*x1 + a1*a2*a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a1*b2*b3*c2*x1 + a1*a3*b2*b3*c2*x1 + a1*b1*b2*b3*c2*x1 + a2*b1*b2*b3*c2*x1 + a3*b1*b2*b3*c2*x1 + a1*a3*b1*b2*b3*c2*x1 + a2*a3*b1*b2*b3*c2*x1 + a3*c1*c2*x1 + a1*a2*a3*c1*c2*x1 + a3*b1*c1*c2*x1 + a2*a3*b1*c1*c2*x1 + a2*a3*b1*b2*c1*c2*x1 + a2*b3*c1*c2*x1 + a1*a2*b3*c1*c2*x1 + a3*b3*c1*c2*x1 + a2*a3*b3*c1*c2*x1 + a2*b1*b3*c1*c2*x1 + a3*b1*b3*c1*c2*x1 + b2*b3*c1*c2*x1 + a1*b2*b3*c1*c2*x1 + a3*b2*b3*c1*c2*x1 + b1*b2*b3*c1*c2*x1 + a2*b1*b2*b3*c1*c2*x1 + a3*b1*b2*b3*c1*c2*x1 + a1*a2*c3*x1 + a2*a3*c3*x1 + a1*a2*b1*c3*x1 + a2*a3*b1*c3*x1 + a1*b2*c3*x1 + a1*a2*b2*c3*x1 + a1*b1*b2*c3*x1 + a1*a3*b1*b2*c3*x1 + a2*b3*c3*x1 + a1*a2*b3*c3*x1 + a2*b1*b3*c3*x1 + a1*a2*b1*b3*c3*x1 + a1*b2*b3*c3*x1 + a2*b2*b3*c3*x1 + a1*a2*b2*b3*c3*x1 + a1*a3*b2*b3*c3*x1 + a2*b1*b2*b3*c3*x1 + a1*a3*b1*b2*b3*c3*x1 + a2*c1*c3*x1 + a2*b1*c1*c3*x1 + b2*c1*c3*x1 + a1*b2*c1*c3*x1 + a2*b2*c1*c3*x1 + b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a1*a2*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + a2*b2*b3*c1*c3*x1 + a3*b2*b3*c1*c3*x1 + b1*b2*b3*c1*c3*x1 + a2*b1*b2*b3*c1*c3*x1 + a3*b1*b2*b3*c1*c3*x1 + c2*c3*x1 + a1*a2*c2*c3*x1 + a3*c2*c3*x1 + b1*c2*c3*x1 + a1*a2*b1*c2*c3*x1 + a3*b1*c2*c3*x1 + a1*a3*b1*c2*c3*x1 + b2*c2*c3*x1 + a1*b2*c2*c3*x1 + a1*a2*b2*c2*c3*x1 + a1*b1*b2*c2*c3*x1 + a1*a2*b1*b2*c2*c3*x1 + a1*b3*c2*c3*x1 + a2*b3*c2*c3*x1 + b1*b3*c2*c3*x1 + a1*b1*b3*c2*c3*x1 + a1*a2*b1*b3*c2*c3*x1 + b2*b3*c2*c3*x1 + a1*a2*b2*b3*c2*c3*x1 + c1*c2*c3*x1 + a1*c1*c2*c3*x1 + a1*b1*c1*c2*c3*x1 + b2*c1*c2*c3*x1 + a1*b2*c1*c2*c3*x1 + a2*b1*b2*c1*c2*c3*x1 + b3*c1*c2*c3*x1 + a1*a2*b3*c1*c2*c3*x1 + b1*b3*c1*c2*c3*x1 + a1*b1*b3*c1*c2*c3*x1 + a2*b1*b3*c1*c2*c3*x1 + b2*b3*c1*c2*c3*x1 + a1*b2*b3*c1*c2*c3*x1 + a2*b2*b3*c1*c2*c3*x1 + b1*b2*b3*c1*c2*c3*x1 + a2*b1*b2*b3*c1*c2*c3*x1 + a1*a3*x2 + a1*a2*a3*x2 + a1*a3*b2*x2 + a1*a2*a3*b2*x2 + a2*a3*b1*b2*x2 + a1*a3*b3*x2 + a1*a2*a3*b3*x2 + a1*a2*b1*b3*x2 + a1*a3*b1*b3*x2 + a1*a3*b2*b3*x2 + a1*a3*b1*b2*b3*x2 + a1*a2*a3*b1*b2*b3*x2 + a3*c1*x2 + a1*a3*c1*x2 + a3*b1*c1*x2 + a2*a3*b1*c1*x2 + a1*a2*a3*b1*c1*x2 + a2*a3*b2*c1*x2 + a1*a3*b1*b2*c1*x2 + a2*a3*b1*b2*c1*x2 + a3*b3*c1*x2 + a1*a2*a3*b3*c1*x2 + a1*b1*b3*c1*x2 + a3*b1*b3*c1*x2 + a1*a3*b1*b3*c1*x2 + b2*b3*c1*x2 + a1*b2*b3*c1*x2 + a2*b2*b3*c1*x2 + a3*b2*b3*c1*x2 + a2*a3*b2*b3*c1*x2 + b1*b2*b3*c1*x2 + a2*b1*b2*b3*c1*x2 + a3*b1*b2*b3*c1*x2 + a1*a3*b1*b2*b3*c1*x2 + a1*a2*a3*c2*x2 + a3*b1*c2*x2 + a1*a3*b1*c2*x2 + a1*a2*a3*b2*c2*x2 + a3*b1*b2*c2*x2 + a1*a3*b1*b2*c2*x2 + a1*a2*a3*b1*b2*c2*x2 + a1*a3*b3*c2*x2 + a3*b1*b3*c2*x2 + a2*a3*b1*b3*c2*x2 + a1*a2*a3*b1*b3*c2*x2 + a1*a2*a3*b2*b3*c2*x2 + a1*b1*b2*b3*c2*x2 + a2*b1*b2*b3*c2*x2 + a2*a3*b1*b2*b3*c2*x2 + a1*a3*c1*c2*x2 + a2*a3*c1*c2*x2 + a3*b1*c1*c2*x2 + a2*a3*b1*c1*c2*x2 + a3*b1*b2*c1*c2*x2 + a1*a3*b1*b2*c1*c2*x2 + a2*a3*b1*b2*c1*c2*x2 + a1*b3*c1*c2*x2 + a2*b3*c1*c2*x2 + a1*a3*b3*c1*c2*x2 + a2*a3*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a1*b1*b3*c1*c2*x2 + a2*a3*b1*b3*c1*c2*x2 + b2*b3*c1*c2*x2 + a3*b2*b3*c1*c2*x2 + a1*a3*b2*b3*c1*c2*x2 + b1*b2*b3*c1*c2*x2 + a1*c3*x2 + a1*a2*c3*x2 + a1*b1*c3*x2 + a2*a3*b1*c3*x2 + a1*b2*c3*x2 + a1*a2*b2*c3*x2 + a1*b1*b2*c3*x2 + a1*a2*b1*b2*c3*x2 + a2*a3*b1*b2*c3*x2 + a1*b3*c3*x2 + a1*b1*b3*c3*x2 + a2*b1*b3*c3*x2 + a1*a2*b1*b3*c3*x2 + a1*a3*b1*b3*c3*x2 + a2*a3*b1*b3*c3*x2 + a1*b2*b3*c3*x2 + a1*b1*b2*b3*c3*x2 + a1*a3*b1*b2*b3*c3*x2 + c1*c3*x2 + a2*c1*c3*x2 + a1*a2*c1*c3*x2 + a1*a3*c1*c3*x2 + b1*c1*c3*x2 + a1*b1*c1*c3*x2 + a1*a2*b1*c1*c3*x2 + a3*b1*c1*c3*x2 + b2*c1*c3*x2 + a1*a2*b2*c1*c3*x2 + a1*b1*b2*c1*c3*x2 + a2*b1*b2*c1*c3*x2 + b3*c1*c3*x2 + a1*b3*c1*c3*x2 + a2*b3*c1*c3*x2 + b1*b3*c1*c3*x2 + a1*b1*b3*c1*c3*x2 + a1*a2*b1*b3*c1*c3*x2 + a3*b1*b3*c1*c3*x2 + a3*b2*b3*c1*c3*x2 + b1*b2*b3*c1*c3*x2 + a1*b1*b2*b3*c1*c3*x2 + b1*c2*c3*x2 + a2*b1*c2*c3*x2 + a1*a2*b1*c2*c3*x2 + a1*a3*b1*c2*c3*x2 + b1*b2*c2*c3*x2 + a2*b1*b2*c2*c3*x2 + a1*a2*b1*b2*c2*c3*x2 + a1*a2*b3*c2*c3*x2 + b1*b3*c2*c3*x2 + a1*b1*b3*c2*c3*x2 + a2*b1*b3*c2*c3*x2 + b1*b2*b3*c2*c3*x2 + a1*b1*c1*c2*c3*x2 + a1*a2*b1*c1*c2*c3*x2 + a3*b1*c1*c2*c3*x2 + b2*c1*c2*c3*x2 + a2*b2*c1*c2*c3*x2 + a1*a2*b2*c1*c2*c3*x2 + a1*b1*b2*c1*c2*c3*x2 + a2*b1*b2*c1*c2*c3*x2 + a1*b3*c1*c2*c3*x2 + a2*b3*c1*c2*c3*x2 + a2*b1*b3*c1*c2*c3*x2 + b2*b3*c1*c2*c3*x2 + b1*b2*b3*c1*c2*c3*x2 + a1*b1*b2*b3*c1*c2*c3*x2 + a1*a2*a3*x1*x2 + a1*b3*x1*x2 + b1*b3*x1*x2 + a2*b1*b3*x1*x2 + a3*b1*b3*x1*x2 + a1*b2*b3*x1*x2 + a2*a3*c1*x1*x2 + a3*b1*c1*x1*x2 + a2*a3*b1*c1*x1*x2 + a3*b1*b2*c1*x1*x2 + a1*b3*c1*x1*x2 + b1*b3*c1*x1*x2 + a1*b1*b3*c1*x1*x2 + a2*b1*b3*c1*x1*x2 + a3*b1*b3*c1*x1*x2 + b2*b3*c1*x1*x2 + b1*b2*b3*c1*x1*x2 + a1*a3*c2*x1*x2 + a2*a3*b1*c2*x1*x2 + a1*a3*b2*c2*x1*x2 + a2*b1*b3*c2*x1*x2 + a3*b1*b3*c2*x1*x2 + b1*b2*b3*c2*x1*x2 + a3*c1*c2*x1*x2 + a3*b1*c1*c2*x1*x2 + a3*b2*c1*c2*x1*x2 + a3*b1*b2*c1*c2*x1*x2 + b1*b3*c1*c2*x1*x2 + b1*b2*b3*c1*c2*x1*x2 + a1*c3*x1*x2 + a1*b1*b2*c3*x1*x2 + a1*b3*c3*x1*x2 + a1*a2*b3*c3*x1*x2 + a1*b2*b3*c3*x1*x2 + b1*b2*b3*c3*x1*x2 + c1*c3*x1*x2 + b1*c1*c3*x1*x2 + b1*b2*c1*c3*x1*x2 + b3*c1*c3*x1*x2 + a2*b3*c1*c3*x1*x2 + a2*b1*b3*c1*c3*x1*x2 + b2*b3*c1*c3*x1*x2 + b1*b2*b3*c1*c3*x1*x2 + a1*b3*c2*c3*x1*x2 + b1*b3*c2*c3*x1*x2 + a2*b1*b3*c2*c3*x1*x2 + a1*b2*b3*c2*c3*x1*x2 + b3*c1*c2*c3*x1*x2 + b1*b3*c1*c2*c3*x1*x2 + b2*b3*c1*c2*c3*x1*x2 + b1*b2*b3*c1*c2*c3*x1*x2 + a1*a2*x3 + a1*a2*a3*x3 + a2*b1*x3 + a1*a2*a3*b1*x3 + a1*a3*b2*x3 + a2*a3*b1*b2*x3 + a1*a2*a3*b1*b2*x3 + a1*a2*b3*x3 + a1*a2*a3*b3*x3 + a1*a2*a3*b1*b3*x3 + a1*a2*b2*b3*x3 + a1*a2*a3*b2*b3*x3 + a2*a3*b1*b2*b3*x3 + a1*a2*a3*b1*b2*b3*x3 + a2*b1*c1*x3 + a1*a2*b1*c1*x3 + a2*a3*b1*c1*x3 + a1*a2*b2*c1*x3 + a3*b2*c1*x3 + a1*b1*b2*c1*x3 + a2*b1*b2*c1*x3 + a1*a2*b1*b2*c1*x3 + a1*a2*b3*c1*x3 + a1*a2*a3*b3*c1*x3 + a1*a2*b2*b3*c1*x3 + a3*b2*b3*c1*x3 + a1*a3*b1*b2*b3*c1*x3 + a1*c2*x3 + a2*b1*c2*x3 + a1*a2*b1*c2*x3 + a3*b1*c2*x3 + a1*a3*b2*c2*x3 + a1*a2*a3*b2*c2*x3 + a1*a2*b1*b2*c2*x3 + a3*b1*b2*c2*x3 + a1*a3*b1*b2*c2*x3 + a1*a2*b3*c2*x3 + a1*b1*b3*c2*x3 + a2*a3*b1*b3*c2*x3 + a1*a2*b2*b3*c2*x3 + a1*a3*b2*b3*c2*x3 + a1*a2*a3*b2*b3*c2*x3 + b1*b2*b3*c2*x3 + a1*a2*b1*b2*b3*c2*x3 + a3*b1*b2*b3*c2*x3 + a1*a3*b1*b2*b3*c2*x3 + a2*a3*b1*b2*b3*c2*x3 + a2*c1*c2*x3 + a1*a3*c1*c2*x3 + b1*c1*c2*x3 + a3*b1*c1*c2*x3 + a1*a3*b1*c1*c2*x3 + a1*b2*c1*c2*x3 + a2*b2*c1*c2*x3 + a3*b2*c1*c2*x3 + a2*a3*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a2*b1*b2*c1*c2*x3 + a1*a2*b3*c1*c2*x3 + a2*a3*b3*c1*c2*x3 + a1*a3*b1*b3*c1*c2*x3 + a2*a3*b1*b3*c1*c2*x3 + b2*b3*c1*c2*x3 + a2*b2*b3*c1*c2*x3 + a1*a3*b2*b3*c1*c2*x3 + a2*a3*b2*b3*c1*c2*x3 + a1*b1*b2*b3*c1*c2*x3 + a3*b1*b2*b3*c1*c2*x3 + a2*b1*c3*x3 + a2*a3*b1*c3*x3 + a2*b1*b2*c3*x3 + a1*a3*b1*b2*c3*x3 + a2*a3*b1*b2*c3*x3 + a1*a2*b1*b3*c3*x3 + a1*a2*b2*b3*c3*x3 + a1*a3*b2*b3*c3*x3 + a2*b1*b2*b3*c3*x3 + a1*a2*b1*b2*b3*c3*x3 + a2*b1*c1*c3*x3 + a2*b1*b2*c1*c3*x3 + a3*b1*b2*c1*c3*x3 + a1*a2*b3*c1*c3*x3 + a1*b1*b2*b3*c1*c3*x3 + a3*b1*b2*b3*c1*c3*x3 + a1*a3*c2*c3*x3 + a2*b1*c2*c3*x3 + a1*a3*b1*c2*c3*x3 + a2*a3*b1*c2*c3*x3 + a1*a2*b2*c2*c3*x3 + a1*a3*b2*c2*c3*x3 + a1*a2*a3*b2*c2*c3*x3 + b1*b2*c2*c3*x3 + a1*a3*b3*c2*c3*x3 + a1*a2*a3*b3*c2*c3*x3 + b1*b3*c2*c3*x3 + a1*b1*b3*c2*c3*x3 + a2*b1*b3*c2*c3*x3 + a3*b1*b3*c2*c3*x3 + a1*a2*b2*b3*c2*c3*x3 + a1*b1*b2*b3*c2*c3*x3 + a2*b1*b2*b3*c2*c3*x3 + a3*b1*b2*b3*c2*c3*x3 + a1*c1*c2*c3*x3 + a3*c1*c2*c3*x3 + a1*b1*c1*c2*c3*x3 + a2*b1*c1*c2*c3*x3 + a2*a3*b1*c1*c2*c3*x3 + a1*b2*c1*c2*c3*x3 + a2*b2*c1*c2*c3*x3 + a3*b2*c1*c2*c3*x3 + a3*b1*b2*c1*c2*c3*x3 + a1*b3*c1*c2*c3*x3 + b1*b2*b3*c1*c2*c3*x3 + a2*x1*x3 + a1*a2*x1*x3 + a2*b1*x1*x3 + a2*a3*b1*x1*x3 + a2*b2*x1*x3 + a1*a2*b2*x1*x3 + a1*b1*b2*x1*x3 + a2*a3*b1*b2*x1*x3 + a1*a2*b3*x1*x3 + a2*a3*b1*b3*x1*x3 + a1*a2*b1*b2*b3*x1*x3 + a1*a3*b1*b2*b3*x1*x3 + a2*c1*x1*x3 + a2*b1*c1*x1*x3 + a2*b2*c1*x1*x3 + a2*b1*b2*c1*x1*x3 + a2*b3*c1*x1*x3 + a2*b1*b3*c1*x1*x3 + c2*x1*x3 + a1*c2*x1*x3 + a2*c2*x1*x3 + b1*c2*x1*x3 + a1*b1*c2*x1*x3 + a3*b1*c2*x1*x3 + b2*c2*x1*x3 + b1*b2*c2*x1*x3 + a2*b1*b2*c2*x1*x3 + a3*b1*b2*c2*x1*x3 + b1*b3*c2*x1*x3 + a1*b1*b3*c2*x1*x3 + a2*b1*b3*c2*x1*x3 + a3*b1*b3*c2*x1*x3 + a1*b2*b3*c2*x1*x3 + b1*b2*b3*c2*x1*x3 + a2*b1*b2*b3*c2*x1*x3 + c1*c2*x1*x3 + b1*c1*c2*x1*x3 + b2*b3*c1*c2*x1*x3 + b1*b2*b3*c1*c2*x1*x3 + a2*c3*x1*x3 + a2*b2*c3*x1*x3 + a2*b3*c3*x1*x3 + a2*b1*b3*c3*x1*x3 + a2*b2*b3*c3*x1*x3 + a1*b1*b2*b3*c3*x1*x3 + c2*c3*x1*x3 + b1*c2*c3*x1*x3 + b3*c2*c3*x1*x3 + b1*b3*c2*c3*x1*x3 + b2*b3*c2*c3*x1*x3 + a1*x2*x3 + a1*b1*x2*x3 + a1*b2*x2*x3 + a1*a3*b2*x2*x3 + a1*a2*a3*b2*x2*x3 + b1*b2*x2*x3 + a2*b1*b2*x2*x3 + a3*b1*b2*x2*x3 + a1*a3*b1*b2*x2*x3 + a2*a3*b1*b2*x2*x3 + a1*a3*b3*x2*x3 + a1*a2*a3*b3*x2*x3 + a1*a3*b1*b3*x2*x3 + a2*a3*b1*b3*x2*x3 + a1*b2*b3*x2*x3 + a1*a2*b1*b2*b3*x2*x3 + a1*a3*b1*b2*b3*x2*x3 + a1*c1*x2*x3 + a2*c1*x2*x3 + a1*a2*c1*x2*x3 + a2*a3*c1*x2*x3 + a1*b1*c1*x2*x3 + a2*b1*c1*x2*x3 + b2*c1*x2*x3 + a1*a3*b2*c1*x2*x3 + b1*b2*c1*x2*x3 + a2*b3*c1*x2*x3 + a1*a2*b3*c1*x2*x3 + a3*b3*c1*x2*x3 + a2*b1*b3*c1*x2*x3 + a3*b1*b3*c1*x2*x3 + b2*b3*c1*x2*x3 + a2*b2*b3*c1*x2*x3 + a3*b2*b3*c1*x2*x3 + a1*b1*b2*b3*c1*x2*x3 + a1*c2*x2*x3 + b1*c2*x2*x3 + a1*b1*c2*x2*x3 + a2*b1*c2*x2*x3 + a1*a2*b2*c2*x2*x3 + a1*a3*b2*c2*x2*x3 + a3*b1*b2*c2*x2*x3 + a1*a3*b3*c2*x2*x3 + b1*b3*c2*x2*x3 + a2*b1*b3*c2*x2*x3 + a3*b1*b3*c2*x2*x3 + a1*a2*b2*b3*c2*x2*x3 + a1*b1*b2*b3*c2*x2*x3 + a2*b1*b2*b3*c2*x2*x3 + c1*c2*x2*x3 + a1*c1*c2*x2*x3 + a2*c1*c2*x2*x3 + a3*c1*c2*x2*x3 + a1*b2*c1*c2*x2*x3 + b1*b2*c1*c2*x2*x3 + a1*b3*c1*c2*x2*x3 + a2*b3*c1*c2*x2*x3 + b1*b3*c1*c2*x2*x3 + a1*b2*b3*c1*c2*x2*x3 + a2*b1*c3*x2*x3 + a1*b1*b2*c3*x2*x3 + a2*b1*b2*c3*x2*x3 + a1*b3*c3*x2*x3 + a1*b1*b3*c3*x2*x3 + a2*b1*b3*c3*x2*x3 + a1*b1*b2*b3*c3*x2*x3 + b1*b2*c1*c3*x2*x3 + b3*c1*c3*x2*x3 + b1*b3*c1*c3*x2*x3 + b2*b3*c1*c3*x2*x3 + b1*c2*c3*x2*x3 + b1*b2*c2*c3*x2*x3 + b1*b3*c2*c3*x2*x3 + a2*a3*y1 + a2*a3*b2*y1 + a1*a2*a3*b2*y1 + a3*b1*b2*y1 + a1*a3*b1*b2*y1 + a2*a3*b1*b2*y1 + a2*b3*y1 + a1*a2*a3*b3*y1 + b2*b3*y1 + a1*b2*b3*y1 + a2*b2*b3*y1 + a1*a2*b2*b3*y1 + a3*b2*b3*y1 + a2*a3*b2*b3*y1 + a3*b1*b2*b3*y1 + a1*a3*b1*b2*b3*y1 + a2*a3*b1*b2*b3*y1 + a1*a2*a3*b1*b2*b3*y1 + a2*a3*c1*y1 + a1*a2*a3*c1*y1 + a2*a3*b1*c1*y1 + a1*a3*b2*c1*y1 + a1*a2*b3*c1*y1 + a1*a2*b1*b3*c1*y1 + a3*b2*b3*c1*y1 + a2*b1*b2*b3*c1*y1 + a1*a3*c2*y1 + a1*a2*a3*c2*y1 + a1*a3*b1*c2*y1 + a1*a2*a3*b1*c2*y1 + a1*a3*b2*c2*y1 + a1*a2*a3*b2*c2*y1 + a3*b1*b2*c2*y1 + a1*a3*b1*b2*c2*y1 + a1*a2*a3*b1*b2*c2*y1 + b3*c2*y1 + a1*a3*b3*c2*y1 + b1*b3*c2*y1 + a1*a2*b1*b3*c2*y1 + a2*a3*b1*b3*c2*y1 + a1*a2*a3*b1*b3*c2*y1 + b2*b3*c2*y1 + a1*b2*b3*c2*y1 + a2*b2*b3*c2*y1 + a1*a3*b2*b3*c2*y1 + b1*b2*b3*c2*y1 + a1*b1*b2*b3*c2*y1 + a2*b1*b2*b3*c2*y1 + a1*a3*b1*b2*b3*c2*y1 + a2*a3*b1*b2*b3*c2*y1 + a3*c1*c2*y1 + a1*a3*c1*c2*y1 + a1*a2*a3*c1*c2*y1 + a3*b1*c1*c2*y1 + a2*a3*b1*c1*c2*y1 + a2*a3*b1*b2*c1*c2*y1 + b3*c1*c2*y1 + a1*b3*c1*c2*y1 + a2*b3*c1*c2*y1 + a1*a2*b3*c1*c2*y1 + a2*a3*b3*c1*c2*y1 + a2*b1*b3*c1*c2*y1 + a3*b1*b3*c1*c2*y1 + a1*b2*b3*c1*c2*y1 + a3*b2*b3*c1*c2*y1 + b1*b2*b3*c1*c2*y1 + a2*b1*b2*b3*c1*c2*y1 + a3*b1*b2*b3*c1*c2*y1 + a1*a2*c3*y1 + a2*a3*c3*y1 + a2*a3*b1*c3*y1 + a2*b2*c3*y1 + a3*b2*c3*y1 + b1*b2*c3*y1 + a2*b1*b2*c3*y1 + a3*b1*b2*c3*y1 + a1*a3*b1*b2*c3*y1 + a2*b3*c3*y1 + a1*a2*b1*b3*c3*y1 + b2*b3*c3*y1 + a1*a2*b2*b3*c3*y1 + a1*a3*b2*b3*c3*y1 + a2*b1*b2*b3*c3*y1 + a3*b1*b2*b3*c3*y1 + a1*a3*b1*b2*b3*c3*y1 + a2*c1*c3*y1 + a2*b1*c1*c3*y1 + a1*b2*c1*c3*y1 + a2*b2*c1*c3*y1 + b1*b2*c1*c3*y1 + a1*b1*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a1*a2*b3*c1*c3*y1 + a2*b1*b3*c1*c3*y1 + b2*b3*c1*c3*y1 + a2*b2*b3*c1*c3*y1 + a3*b2*b3*c1*c3*y1 + b1*b2*b3*c1*c3*y1 + a2*b1*b2*b3*c1*c3*y1 + a3*b1*b2*b3*c1*c3*y1 + c2*c3*y1 + a1*a2*c2*c3*y1 + b1*c2*c3*y1 + a2*b1*c2*c3*y1 + a1*a2*b1*c2*c3*y1 + a1*a3*b1*c2*c3*y1 + b2*c2*c3*y1 + a1*b2*c2*c3*y1 + a1*a2*b2*c2*c3*y1 + b1*b2*c2*c3*y1 + a1*b1*b2*c2*c3*y1 + a2*b1*b2*c2*c3*y1 + a1*a2*b1*b2*c2*c3*y1 + b3*c2*c3*y1 + a1*b3*c2*c3*y1 + a2*b3*c2*c3*y1 + b1*b3*c2*c3*y1 + a2*b1*b3*c2*c3*y1 + a1*a2*b1*b3*c2*c3*y1 + a1*b2*b3*c2*c3*y1 + a2*b2*b3*c2*c3*y1 + a1*a2*b2*b3*c2*c3*y1 + c1*c2*c3*y1 + a1*c1*c2*c3*y1 + a2*b1*c1*c2*c3*y1 + a2*b2*c1*c2*c3*y1 + b1*b2*c1*c2*c3*y1 + a2*b1*b2*c1*c2*c3*y1 + b3*c1*c2*c3*y1 + a2*b3*c1*c2*c3*y1 + a1*a2*b3*c1*c2*c3*y1 + a1*b1*b3*c1*c2*c3*y1 + a2*b1*b3*c1*c2*c3*y1 + b2*b3*c1*c2*c3*y1 + a1*b2*b3*c1*c2*c3*y1 + a2*b2*b3*c1*c2*c3*y1 + b1*b2*b3*c1*c2*c3*y1 + a2*b1*b2*b3*c1*c2*c3*y1 + a2*a3*x1*y1 + b2*b3*x1*y1 + a3*c2*x1*y1 + a3*b1*c2*x1*y1 + a3*b2*c2*x1*y1 + b3*c2*x1*y1 + b1*b3*c2*x1*y1 + a1*b2*c3*x1*y1 + b1*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + b2*b3*c3*x1*y1 + b2*c1*c3*x1*y1 + b1*b2*c1*c3*x1*y1 + b3*c2*c3*x1*y1 + b1*b3*c2*c3*x1*y1 + b2*b3*c2*c3*x1*y1 + a3*x2*y1 + a1*a3*x2*y1 + a2*a3*x2*y1 + a1*a2*a3*x2*y1 + a3*b2*x2*y1 + a2*b3*x2*y1 + a3*b3*x2*y1 + b1*b3*x2*y1 + a2*b1*b3*x2*y1 + a3*b1*b3*x2*y1 + b2*b3*x2*y1 + a1*b2*b3*x2*y1 + a3*c1*x2*y1 + a2*a3*c1*x2*y1 + a3*b1*c1*x2*y1 + a2*a3*b1*c1*x2*y1 + a3*b1*b2*c1*x2*y1 + a1*b1*b3*c1*x2*y1 + a2*b1*b3*c1*x2*y1 + a3*b1*b3*c1*x2*y1 + b2*b3*c1*x2*y1 + b1*b2*b3*c1*x2*y1 + a3*c2*x2*y1 + a1*a3*c2*x2*y1 + a2*a3*b1*c2*x2*y1 + a3*b2*c2*x2*y1 + a1*a3*b2*c2*x2*y1 + b3*c2*x2*y1 + a1*b3*c2*x2*y1 + a2*b1*b3*c2*x2*y1 + a3*b1*b3*c2*x2*y1 + b2*b3*c2*x2*y1 + b1*b2*b3*c2*x2*y1 + a3*c1*c2*x2*y1 + a3*b1*c1*c2*x2*y1 + a3*b2*c1*c2*x2*y1 + a3*b1*b2*c1*c2*x2*y1 + b3*c1*c2*x2*y1 + b1*b3*c1*c2*x2*y1 + b1*b2*b3*c1*c2*x2*y1 + c3*x2*y1 + a1*c3*x2*y1 + a1*b1*c3*x2*y1 + a1*b2*c3*x2*y1 + a1*b1*b2*c3*x2*y1 + a1*b3*c3*x2*y1 + a2*b3*c3*x2*y1 + a1*a2*b3*c3*x2*y1 + b2*b3*c3*x2*y1 + a1*b2*b3*c3*x2*y1 + b1*b2*b3*c3*x2*y1 + c1*c3*x2*y1 + b2*c1*c3*x2*y1 + b1*b2*c1*c3*x2*y1 + b3*c1*c3*x2*y1 + a2*b3*c1*c3*x2*y1 + a2*b1*b3*c1*c3*x2*y1 + b2*b3*c1*c3*x2*y1 + b1*b2*b3*c1*c3*x2*y1 + b3*c2*c3*x2*y1 + a1*b3*c2*c3*x2*y1 + b1*b3*c2*c3*x2*y1 + a2*b1*b3*c2*c3*x2*y1 + b2*b3*c2*c3*x2*y1 + a1*b2*b3*c2*c3*x2*y1 + b3*c1*c2*c3*x2*y1 + b1*b3*c1*c2*c3*x2*y1 + b2*b3*c1*c2*c3*x2*y1 + b1*b2*b3*c1*c2*c3*x2*y1 + a1*a2*x3*y1 + a2*b1*x3*y1 + a2*a3*b1*x3*y1 + b2*x3*y1 + a1*a2*b2*x3*y1 + b1*b2*x3*y1 + a1*b1*b2*x3*y1 + a2*a3*b1*b2*x3*y1 + a2*b3*x3*y1 + a1*a2*b3*x3*y1 + a2*a3*b1*b3*x3*y1 + a2*b2*b3*x3*y1 + a3*b2*b3*x3*y1 + a2*b1*b2*b3*x3*y1 + a1*a2*b1*b2*b3*x3*y1 + a3*b1*b2*b3*x3*y1 + a1*a3*b1*b2*b3*x3*y1 + a2*c1*x3*y1 + a2*b1*c1*x3*y1 + a2*b2*c1*x3*y1 + a2*b1*b2*c1*x3*y1 + a2*b3*c1*x3*y1 + a2*b1*b3*c1*x3*y1 + c2*x3*y1 + a1*c2*x3*y1 + a2*c2*x3*y1 + a1*b1*c2*x3*y1 + a3*b1*c2*x3*y1 + b2*c2*x3*y1 + b1*b2*c2*x3*y1 + a2*b1*b2*c2*x3*y1 + a3*b1*b2*c2*x3*y1 + b3*c2*x3*y1 + a1*b1*b3*c2*x3*y1 + a2*b1*b3*c2*x3*y1 + a3*b1*b3*c2*x3*y1 + b2*b3*c2*x3*y1 + a1*b2*b3*c2*x3*y1 + b1*b2*b3*c2*x3*y1 + a2*b1*b2*b3*c2*x3*y1 + c1*c2*x3*y1 + b1*c1*c2*x3*y1 + b2*b3*c1*c2*x3*y1 + b1*b2*b3*c1*c2*x3*y1 + a2*c3*x3*y1 + a2*b2*c3*x3*y1 + a2*b3*c3*x3*y1 + a2*b1*b3*c3*x3*y1 + b2*b3*c3*x3*y1 + a2*b2*b3*c3*x3*y1 + b1*b2*b3*c3*x3*y1 + a1*b1*b2*b3*c3*x3*y1 + c2*c3*x3*y1 + b1*c2*c3*x3*y1 + b3*c2*c3*x3*y1 + b1*b3*c2*c3*x3*y1 + b2*b3*c2*c3*x3*y1 + a1*a2*a3*y2 + a3*b1*y2 + a1*a3*b1*y2 + a2*a3*b1*y2 + a3*b1*b2*y2 + a2*a3*b1*b2*y2 + a1*b3*y2 + a1*a2*a3*b3*y2 + a1*b1*b3*y2 + a2*b1*b3*y2 + a1*a2*b1*b3*y2 + a3*b1*b3*y2 + a1*a3*b1*b3*y2 + a1*b2*b3*y2 + a1*a3*b2*b3*y2 + a1*a2*a3*b2*b3*y2 + a2*a3*b1*b2*b3*y2 + a1*a2*a3*b1*b2*b3*y2 + a3*c1*y2 + a1*a2*a3*b1*c1*y2 + a2*a3*b2*c1*y2 + a1*a3*b1*b2*c1*y2 + a2*a3*b1*b2*c1*y2 + a1*b3*c1*y2 + a1*a3*b3*c1*y2 + a2*a3*b3*c1*y2 + a1*a2*a3*b3*c1*y2 + a2*b1*b3*c1*y2 + a3*b1*b3*c1*y2 + a1*a3*b1*b3*c1*y2 + b2*b3*c1*y2 + a1*b2*b3*c1*y2 + a2*b2*b3*c1*y2 + a2*a3*b2*b3*c1*y2 + b1*b2*b3*c1*y2 + a2*b1*b2*b3*c1*y2 + a1*a3*b1*b2*b3*c1*y2 + a1*a2*a3*c2*y2 + a3*b1*c2*y2 + a1*a3*b1*c2*y2 + a1*a3*b2*c2*y2 + a2*a3*b1*b2*c2*y2 + a1*a2*a3*b1*b2*c2*y2 + a1*b3*c2*y2 + a1*a3*b3*c2*y2 + a1*a2*a3*b3*c2*y2 + a1*b1*b3*c2*y2 + a2*b1*b3*c2*y2 + a1*a3*b1*b3*c2*y2 + a1*a2*a3*b1*b3*c2*y2 + a1*b2*b3*c2*y2 + a1*a2*b2*b3*c2*y2 + a1*a2*a3*b2*b3*c2*y2 + a1*b1*b2*b3*c2*y2 + a2*b1*b2*b3*c2*y2 + a3*b1*b2*b3*c2*y2 + a2*a3*b1*b2*b3*c2*y2 + a3*c1*c2*y2 + a1*a3*c1*c2*y2 + a3*b1*c1*c2*y2 + a2*a3*b1*c1*c2*y2 + a1*a3*b1*b2*c1*c2*y2 + a2*a3*b1*b2*c1*c2*y2 + a3*b3*c1*c2*y2 + a1*a3*b3*c1*c2*y2 + a2*a3*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a3*b1*b3*c1*c2*y2 + a2*a3*b1*b3*c1*c2*y2 + b2*b3*c1*c2*y2 + a1*a3*b2*b3*c1*c2*y2 + a1*c3*y2 + a1*a2*c3*y2 + a1*b1*c3*y2 + a2*b1*c3*y2 + a1*a2*b1*c3*y2 + a3*b1*c3*y2 + a1*b2*c3*y2 + a1*b1*b2*c3*y2 + a2*b1*b2*c3*y2 + a1*a2*b1*b2*c3*y2 + a2*a3*b1*b2*c3*y2 + a1*a2*b3*c3*y2 + a1*a2*b1*b3*c3*y2 + a1*a3*b1*b3*c3*y2 + a2*a3*b1*b3*c3*y2 + a1*b1*b2*b3*c3*y2 + a3*b1*b2*b3*c3*y2 + a1*a3*b1*b2*b3*c3*y2 + c1*c3*y2 + a1*c1*c3*y2 + a1*a2*c1*c3*y2 + a3*c1*c3*y2 + a1*a3*c1*c3*y2 + b1*c1*c3*y2 + a1*b1*c1*c3*y2 + a1*a2*b1*c1*c3*y2 + a3*b1*c1*c3*y2 + b2*c1*c3*y2 + a1*a2*b2*c1*c3*y2 + a1*b1*b2*c1*c3*y2 + a2*b1*b2*c1*c3*y2 + a1*b3*c1*c3*y2 + a2*b3*c1*c3*y2 + a1*a2*b1*b3*c1*c3*y2 + a3*b1*b3*c1*c3*y2 + b2*b3*c1*c3*y2 + a3*b2*b3*c1*c3*y2 + b1*b2*b3*c1*c3*y2 + a1*b1*b2*b3*c1*c3*y2 + b1*c2*c3*y2 + a1*b1*c2*c3*y2 + a2*b1*c2*c3*y2 + a1*a2*b1*c2*c3*y2 + a1*a3*b1*c2*c3*y2 + a1*b2*c2*c3*y2 + a1*a2*b2*c2*c3*y2 + a1*a3*b2*c2*c3*y2 + a1*b1*b2*c2*c3*y2 + a1*a2*b1*b2*c2*c3*y2 + a1*a3*b3*c2*c3*y2 + a1*b1*b3*c2*c3*y2 + b1*b2*b3*c2*c3*y2 + a1*a2*b1*c1*c2*c3*y2 + b2*c1*c2*c3*y2 + a1*b2*c1*c2*c3*y2 + a1*a2*b2*c1*c2*c3*y2 + b1*b2*c1*c2*c3*y2 + a1*b1*b2*c1*c2*c3*y2 + a2*b1*b2*c1*c2*c3*y2 + a1*b3*c1*c2*c3*y2 + a2*b1*b3*c1*c2*c3*y2 + b2*b3*c1*c2*c3*y2 + b1*b2*b3*c1*c2*c3*y2 + a1*b1*b2*b3*c1*c2*c3*y2 + a3*x1*y2 + a1*a3*x1*y2 + a2*a3*x1*y2 + a1*a2*a3*x1*y2 + a3*b1*x1*y2 + a3*b1*b2*x1*y2 + b3*x1*y2 + b1*b3*x1*y2 + b2*b3*x1*y2 + a1*b2*b3*x1*y2 + a3*c1*x1*y2 + a2*a3*c1*x1*y2 + a2*a3*b1*c1*x1*y2 + a3*b1*b2*c1*x1*y2 + a1*b3*c1*x1*y2 + a1*b1*b3*c1*x1*y2 + a2*b1*b3*c1*x1*y2 + a3*b1*b3*c1*x1*y2 + b2*b3*c1*x1*y2 + b1*b2*b3*c1*x1*y2 + a3*c2*x1*y2 + a1*a3*c2*x1*y2 + a3*b1*c2*x1*y2 + a2*a3*b1*c2*x1*y2 + a3*b2*c2*x1*y2 + a1*a3*b2*c2*x1*y2 + b3*c2*x1*y2 + a2*b1*b3*c2*x1*y2 + a3*b1*b3*c2*x1*y2 + a3*c1*c2*x1*y2 + a3*b1*c1*c2*x1*y2 + a3*b2*c1*c2*x1*y2 + a3*b1*b2*c1*c2*x1*y2 + b1*b3*c1*c2*x1*y2 + b1*b2*b3*c1*c2*x1*y2 + a1*c3*x1*y2 + b2*c3*x1*y2 + a1*b1*b2*c3*x1*y2 + b3*c3*x1*y2 + a2*b3*c3*x1*y2 + a1*a2*b3*c3*x1*y2 + b1*b3*c3*x1*y2 + b2*b3*c3*x1*y2 + a1*b2*b3*c3*x1*y2 + b1*b2*b3*c3*x1*y2 + c1*c3*x1*y2 + b1*c1*c3*x1*y2 + b1*b2*c1*c3*x1*y2 + a2*b3*c1*c3*x1*y2 + b1*b3*c1*c3*x1*y2 + a2*b1*b3*c1*c3*x1*y2 + b2*b3*c1*c3*x1*y2 + b1*b2*b3*c1*c3*x1*y2 + b3*c2*c3*x1*y2 + a1*b3*c2*c3*x1*y2 + a2*b1*b3*c2*c3*x1*y2 + b2*b3*c2*c3*x1*y2 + a1*b2*b3*c2*c3*x1*y2 + b3*c1*c2*c3*x1*y2 + b1*b3*c1*c2*c3*x1*y2 + b2*b3*c1*c2*c3*x1*y2 + b1*b2*b3*c1*c2*c3*x1*y2 + a1*a3*x2*y2 + a1*a3*b2*x2*y2 + a1*a2*b3*x2*y2 + a1*a3*b3*x2*y2 + a1*b2*b3*c2*x2*y2 + a1*b1*c3*x2*y2 + a1*b2*c3*x2*y2 + b1*c1*c3*x2*y2 + b2*c1*c3*x2*y2 + a1*x3*y2 + a1*b1*x3*y2 + a2*b1*x3*y2 + a1*b2*x3*y2 + a1*a3*b2*x3*y2 + a1*a2*a3*b2*x3*y2 + b1*b2*x3*y2 + a2*b1*b2*x3*y2 + a3*b1*b2*x3*y2 + a1*a3*b1*b2*x3*y2 + a2*a3*b1*b2*x3*y2 + a1*b3*x3*y2 + a1*a2*b3*x3*y2 + a1*a2*a3*b3*x3*y2 + a1*a3*b1*b3*x3*y2 + a2*a3*b1*b3*x3*y2 + a1*a2*b2*b3*x3*y2 + a1*a3*b2*b3*x3*y2 + b1*b2*b3*x3*y2 + a1*b1*b2*b3*x3*y2 + a2*b1*b2*b3*x3*y2 + a1*a2*b1*b2*b3*x3*y2 + a3*b1*b2*b3*x3*y2 + a1*a3*b1*b2*b3*x3*y2 + c1*x3*y2 + a1*a2*c1*x3*y2 + a3*c1*x3*y2 + a2*a3*c1*x3*y2 + b1*c1*x3*y2 + a1*b1*c1*x3*y2 + b2*c1*x3*y2 + a3*b2*c1*x3*y2 + a1*a3*b2*c1*x3*y2 + a1*b3*c1*x3*y2 + a1*a2*b3*c1*x3*y2 + a3*b3*c1*x3*y2 + b1*b3*c1*x3*y2 + a2*b1*b3*c1*x3*y2 + a3*b1*b3*c1*x3*y2 + a2*b2*b3*c1*x3*y2 + a3*b2*b3*c1*x3*y2 + b1*b2*b3*c1*x3*y2 + a1*b1*b2*b3*c1*x3*y2 + a1*c2*x3*y2 + a1*b1*c2*x3*y2 + a1*a2*b2*c2*x3*y2 + a1*a3*b2*c2*x3*y2 + b1*b2*c2*x3*y2 + a3*b1*b2*c2*x3*y2 + a1*b3*c2*x3*y2 + a1*a3*b3*c2*x3*y2 + a2*b1*b3*c2*x3*y2 + a3*b1*b3*c2*x3*y2 + a1*b2*b3*c2*x3*y2 + a1*a2*b2*b3*c2*x3*y2 + a1*b1*b2*b3*c2*x3*y2 + a2*b1*b2*b3*c2*x3*y2 + c1*c2*x3*y2 + a1*c1*c2*x3*y2 + a2*c1*c2*x3*y2 + a3*c1*c2*x3*y2 + b1*c1*c2*x3*y2 + b2*c1*c2*x3*y2 + a1*b2*c1*c2*x3*y2 + b1*b2*c1*c2*x3*y2 + a1*b3*c1*c2*x3*y2 + a2*b3*c1*c2*x3*y2 + b1*b3*c1*c2*x3*y2 + b2*b3*c1*c2*x3*y2 + a1*b2*b3*c1*c2*x3*y2 + b1*b2*c3*x3*y2 + a1*b1*b2*c3*x3*y2 + a2*b1*b2*c3*x3*y2 + a1*b3*c3*x3*y2 + a1*b1*b3*c3*x3*y2 + a2*b1*b3*c3*x3*y2 + b1*b2*b3*c3*x3*y2 + a1*b1*b2*b3*c3*x3*y2 + b1*b2*c1*c3*x3*y2 + b3*c1*c3*x3*y2 + b1*b3*c1*c3*x3*y2 + b2*b3*c1*c3*x3*y2 + b1*b2*c2*c3*x3*y2 + b1*b3*c2*c3*x3*y2 + a1*a2*a3*y1*y2 + a3*b1*y1*y2 + a3*b2*y1*y2 + a3*b1*b2*y1*y2 + a1*b3*y1*y2 + a2*b3*y1*y2 + a3*b3*y1*y2 + b1*b3*y1*y2 + a1*b2*b3*y1*y2 + a2*a3*c1*y1*y2 + a2*a3*b1*c1*y1*y2 + a3*b1*b2*c1*y1*y2 + b3*c1*y1*y2 + b1*b3*c1*y1*y2 + a1*b1*b3*c1*y1*y2 + a2*b1*b3*c1*y1*y2 + a3*b1*b3*c1*y1*y2 + b2*b3*c1*y1*y2 + b1*b2*b3*c1*y1*y2 + a1*a3*c2*y1*y2 + a3*b1*c2*y1*y2 + a2*a3*b1*c2*y1*y2 + a1*a3*b2*c2*y1*y2 + b3*c2*y1*y2 + a1*b3*c2*y1*y2 + a2*b1*b3*c2*y1*y2 + a3*b1*b3*c2*y1*y2 + b2*b3*c2*y1*y2 + a3*c1*c2*y1*y2 + a3*b1*c1*c2*y1*y2 + a3*b2*c1*c2*y1*y2 + a3*b1*b2*c1*c2*y1*y2 + b3*c1*c2*y1*y2 + b1*b3*c1*c2*y1*y2 + b1*b2*b3*c1*c2*y1*y2 + c3*y1*y2 + a1*c3*y1*y2 + b1*c3*y1*y2 + a1*b1*c3*y1*y2 + a1*b2*c3*y1*y2 + a1*b1*b2*c3*y1*y2 + a1*a2*b3*c3*y1*y2 + b1*b3*c3*y1*y2 + a1*b2*b3*c3*y1*y2 + b1*b2*b3*c3*y1*y2 + c1*c3*y1*y2 + b2*c1*c3*y1*y2 + b1*b2*c1*c3*y1*y2 + a2*b3*c1*c3*y1*y2 + b1*b3*c1*c3*y1*y2 + a2*b1*b3*c1*c3*y1*y2 + b2*b3*c1*c3*y1*y2 + b1*b2*b3*c1*c3*y1*y2 + a1*b3*c2*c3*y1*y2 + a2*b1*b3*c2*c3*y1*y2 + a1*b2*b3*c2*c3*y1*y2 + b3*c1*c2*c3*y1*y2 + b1*b3*c1*c2*c3*y1*y2 + b2*b3*c1*c2*c3*y1*y2 + b1*b2*b3*c1*c2*c3*y1*y2 + a1*a2*y3 + a1*a2*a3*y3 + a2*b1*y3 + a1*a2*b1*y3 + a2*a3*b1*y3 + a1*a2*a3*b1*y3 + a1*a2*b2*y3 + a1*a2*a3*b2*y3 + b1*b2*y3 + a2*b1*b2*y3 + a1*a2*b1*b2*y3 + a3*b1*b2*y3 + a1*a2*a3*b1*b2*y3 + a1*a2*a3*b3*y3 + a1*a2*b1*b3*y3 + a1*a2*a3*b1*b3*y3 + a1*b2*b3*y3 + a1*a3*b2*b3*y3 + b1*b2*b3*y3 + a1*b1*b2*b3*y3 + a2*b1*b2*b3*y3 + a3*b1*b2*b3*y3 + a1*a3*b1*b2*b3*y3 + a1*a2*a3*b1*b2*b3*y3 + a1*a2*c1*y3 + a1*a2*b1*c1*y3 + a1*b2*c1*y3 + a2*b2*c1*y3 + a1*a2*b2*c1*y3 + a1*a3*b2*c1*y3 + b1*b2*c1*y3 + a2*b1*b2*c1*y3 + a1*a2*b1*b2*c1*y3 + a3*b1*b2*c1*y3 + a2*b3*c1*y3 + a1*a2*b3*c1*y3 + a1*a2*a3*b3*c1*y3 + b2*b3*c1*y3 + a1*a2*b2*b3*c1*y3 + a3*b2*b3*c1*y3 + a1*a3*b1*b2*b3*c1*y3 + a1*a3*c2*y3 + b1*c2*y3 + a1*b1*c2*y3 + a1*a2*b1*c2*y3 + a2*a3*b1*c2*y3 + a1*b2*c2*y3 + b1*b2*c2*y3 + a1*a2*b1*b2*c2*y3 + a2*a3*b1*b2*c2*y3 + a1*a3*b3*c2*y3 + a1*a2*a3*b3*c2*y3 + a1*b1*b3*c2*y3 + a2*b1*b3*c2*y3 + a3*b1*b3*c2*y3 + a1*a3*b1*b3*c2*y3 + a1*a3*b2*b3*c2*y3 + a1*a2*a3*b2*b3*c2*y3 + b1*b2*b3*c2*y3 + a2*b1*b2*b3*c2*y3 + a1*a2*b1*b2*b3*c2*y3 + a1*a3*b1*b2*b3*c2*y3 + a2*a3*b1*b2*b3*c2*y3 + a1*c1*c2*y3 + a2*a3*c1*c2*y3 + b1*c1*c2*y3 + a1*b1*c1*c2*y3 + a2*b1*c1*c2*y3 + a1*a3*b1*c1*c2*y3 + a2*a3*b2*c1*c2*y3 + a2*b1*b2*c1*c2*y3 + a2*b3*c1*c2*y3 + a1*a2*b3*c1*c2*y3 + a3*b3*c1*c2*y3 + a2*a3*b3*c1*c2*y3 + b1*b3*c1*c2*y3 + a1*a3*b1*b3*c1*c2*y3 + a2*a3*b1*b3*c1*c2*y3 + b2*b3*c1*c2*y3 + a1*b2*b3*c1*c2*y3 + a2*b2*b3*c1*c2*y3 + a3*b2*b3*c1*c2*y3 + a1*a3*b2*b3*c1*c2*y3 + a2*a3*b2*b3*c1*c2*y3 + a1*b1*b2*b3*c1*c2*y3 + a3*b1*b2*b3*c1*c2*y3 + a2*b1*c3*y3 + b1*b2*c3*y3 + a2*b1*b2*c3*y3 + a1*a3*b1*b2*c3*y3 + a2*a3*b1*b2*c3*y3 + a1*a2*b1*b3*c3*y3 + a1*a2*b2*b3*c3*y3 + a1*a3*b2*b3*c3*y3 + b1*b2*b3*c3*y3 + a2*b1*b2*b3*c3*y3 + a1*a2*b1*b2*b3*c3*y3 + a3*b1*b2*b3*c3*y3 + a2*b1*c1*c3*y3 + b1*b2*c1*c3*y3 + a2*b1*b2*c1*c3*y3 + a3*b1*b2*c1*c3*y3 + a1*a2*b3*c1*c3*y3 + a1*b1*b2*b3*c1*c3*y3 + a3*b1*b2*b3*c1*c3*y3 + a1*c2*c3*y3 + a1*a3*c2*c3*y3 + a1*b1*c2*c3*y3 + a2*b1*c2*c3*y3 + a1*a3*b1*c2*c3*y3 + a2*a3*b1*c2*c3*y3 + a1*b2*c2*c3*y3 + a1*a2*a3*b2*c2*c3*y3 + a1*b1*b2*c2*c3*y3 + a2*b1*b2*c2*c3*y3 + a1*a2*b3*c2*c3*y3 + a1*a2*a3*b3*c2*c3*y3 + b1*b3*c2*c3*y3 + a3*b1*b3*c2*c3*y3 + a1*b2*b3*c2*c3*y3 + a1*a2*b2*b3*c2*c3*y3 + a1*b1*b2*b3*c2*c3*y3 + a2*b1*b2*b3*c2*c3*y3 + a3*b1*b2*b3*c2*c3*y3 + a1*c1*c2*c3*y3 + a3*c1*c2*c3*y3 + a1*b1*c1*c2*c3*y3 + a3*b1*c1*c2*c3*y3 + a2*a3*b1*c1*c2*c3*y3 + a1*b2*c1*c2*c3*y3 + a2*b2*c1*c2*c3*y3 + a3*b2*c1*c2*c3*y3 + a3*b1*b2*c1*c2*c3*y3 + b3*c1*c2*c3*y3 + a1*b3*c1*c2*c3*y3 + b1*b3*c1*c2*c3*y3 + b1*b2*b3*c1*c2*c3*y3 + a1*a2*x1*y3 + a2*a3*b1*x1*y3 + b2*x1*y3 + a1*b2*x1*y3 + a2*b2*x1*y3 + a1*a2*b2*x1*y3 + a3*b2*x1*y3 + b1*b2*x1*y3 + a1*b1*b2*x1*y3 + a2*b1*b2*x1*y3 + a3*b1*b2*x1*y3 + a2*a3*b1*b2*x1*y3 + a2*b3*x1*y3 + a1*a2*b3*x1*y3 + a2*b1*b3*x1*y3 + a2*a3*b1*b3*x1*y3 + b2*b3*x1*y3 + a3*b2*b3*x1*y3 + a1*a2*b1*b2*b3*x1*y3 + a1*a3*b1*b2*b3*x1*y3 + a2*c1*x1*y3 + a2*b1*c1*x1*y3 + b2*c1*x1*y3 + a2*b2*c1*x1*y3 + b1*b2*c1*x1*y3 + a2*b1*b2*c1*x1*y3 + a2*b3*c1*x1*y3 + a2*b1*b3*c1*x1*y3 + c2*x1*y3 + a1*c2*x1*y3 + a2*c2*x1*y3 + b1*c2*x1*y3 + a1*b1*c2*x1*y3 + a3*b1*c2*x1*y3 + b1*b2*c2*x1*y3 + a2*b1*b2*c2*x1*y3 + a3*b1*b2*c2*x1*y3 + b3*c2*x1*y3 + a1*b1*b3*c2*x1*y3 + a2*b1*b3*c2*x1*y3 + a3*b1*b3*c2*x1*y3 + b2*b3*c2*x1*y3 + a1*b2*b3*c2*x1*y3 + a2*b1*b2*b3*c2*x1*y3 + c1*c2*x1*y3 + b1*c1*c2*x1*y3 + b2*b3*c1*c2*x1*y3 + b1*b2*b3*c1*c2*x1*y3 + a2*c3*x1*y3 + b2*c3*x1*y3 + a2*b2*c3*x1*y3 + a2*b3*c3*x1*y3 + a2*b1*b3*c3*x1*y3 + a2*b2*b3*c3*x1*y3 + a1*b1*b2*b3*c3*x1*y3 + c2*c3*x1*y3 + b1*c2*c3*x1*y3 + b3*c2*c3*x1*y3 + b1*b3*c2*c3*x1*y3 + b2*b3*c2*c3*x1*y3 + a1*x2*y3 + a1*b1*x2*y3 + a1*b2*x2*y3 + a1*a2*b2*x2*y3 + a1*a2*a3*b2*x2*y3 + a1*b1*b2*x2*y3 + a1*a3*b1*b2*x2*y3 + a2*a3*b1*b2*x2*y3 + a1*a2*b3*x2*y3 + a1*a2*a3*b3*x2*y3 + b1*b3*x2*y3 + a1*b1*b3*x2*y3 + a2*b1*b3*x2*y3 + a3*b1*b3*x2*y3 + a1*a3*b1*b3*x2*y3 + a2*a3*b1*b3*x2*y3 + a1*b2*b3*x2*y3 + a1*a2*b1*b2*b3*x2*y3 + a1*a3*b1*b2*b3*x2*y3 + a1*a2*c1*x2*y3 + a3*c1*x2*y3 + a2*a3*c1*x2*y3 + b1*c1*x2*y3 + a1*b1*c1*x2*y3 + a2*b1*c1*x2*y3 + b2*c1*x2*y3 + a1*b2*c1*x2*y3 + a1*a3*b2*c1*x2*y3 + b1*b2*c1*x2*y3 + a1*b3*c1*x2*y3 + a2*b3*c1*x2*y3 + a1*a2*b3*c1*x2*y3 + a3*b3*c1*x2*y3 + a2*b1*b3*c1*x2*y3 + a3*b1*b3*c1*x2*y3 + b2*b3*c1*x2*y3 + a2*b2*b3*c1*x2*y3 + a3*b2*b3*c1*x2*y3 + a1*b1*b2*b3*c1*x2*y3 + a1*c2*x2*y3 + a1*b1*c2*x2*y3 + a2*b1*c2*x2*y3 + a1*a2*b2*c2*x2*y3 + a1*a3*b2*c2*x2*y3 + b1*b2*c2*x2*y3 + a3*b1*b2*c2*x2*y3 + a1*b3*c2*x2*y3 + a1*a3*b3*c2*x2*y3 + b1*b3*c2*x2*y3 + a2*b1*b3*c2*x2*y3 + a3*b1*b3*c2*x2*y3 + a1*b2*b3*c2*x2*y3 + a1*a2*b2*b3*c2*x2*y3 + b1*b2*b3*c2*x2*y3 + a1*b1*b2*b3*c2*x2*y3 + a2*b1*b2*b3*c2*x2*y3 + c1*c2*x2*y3 + a1*c1*c2*x2*y3 + a2*c1*c2*x2*y3 + a3*c1*c2*x2*y3 + a1*b2*c1*c2*x2*y3 + b1*b2*c1*c2*x2*y3 + b3*c1*c2*x2*y3 + a1*b3*c1*c2*x2*y3 + a2*b3*c1*c2*x2*y3 + b1*b3*c1*c2*x2*y3 + a1*b2*b3*c1*c2*x2*y3 + b1*c3*x2*y3 + a2*b1*c3*x2*y3 + b1*b2*c3*x2*y3 + a1*b1*b2*c3*x2*y3 + a2*b1*b2*c3*x2*y3 + a1*b3*c3*x2*y3 + b1*b3*c3*x2*y3 + a1*b1*b3*c3*x2*y3 + a2*b1*b3*c3*x2*y3 + a1*b1*b2*b3*c3*x2*y3 + b1*b2*c1*c3*x2*y3 + b3*c1*c3*x2*y3 + b1*b3*c1*c3*x2*y3 + b2*b3*c1*c3*x2*y3 + b1*c2*c3*x2*y3 + b1*b2*c2*c3*x2*y3 + b1*b3*c2*c3*x2*y3 + a2*b1*x3*y3 + a1*a2*b3*x3*y3 + a1*b2*b3*x3*y3 + a1*a2*b2*b3*x3*y3 + a1*a3*b2*b3*x3*y3 + b1*b2*b3*x3*y3 + a1*b1*b2*b3*x3*y3 + a2*b1*b2*b3*x3*y3 + a3*b1*b2*b3*x3*y3 + a2*b1*c1*x3*y3 + a3*b2*c1*x3*y3 + b1*b2*c1*x3*y3 + a3*b2*b3*c1*x3*y3 + b1*b2*b3*c1*x3*y3 + a1*c2*x3*y3 + a2*b1*c2*x3*y3 + b1*b2*c2*x3*y3 + a1*b2*b3*c2*x3*y3 + b1*c1*c2*x3*y3 + a2*b1*c3*x3*y3 + b1*b2*c3*x3*y3 + b1*b2*b3*c3*x3*y3 + b1*c2*c3*x3*y3 + a2*y1*y3 + a1*a2*y1*y3 + a2*a3*b1*y1*y3 + b2*y1*y3 + a1*b2*y1*y3 + a1*a2*b2*y1*y3 + a3*b2*y1*y3 + a1*b1*b2*y1*y3 + a2*b1*b2*y1*y3 + a3*b1*b2*y1*y3 + a2*a3*b1*b2*y1*y3 + a1*a2*b3*y1*y3 + a2*b1*b3*y1*y3 + a2*a3*b1*b3*y1*y3 + b2*b3*y1*y3 + a2*b2*b3*y1*y3 + a2*b1*b2*b3*y1*y3 + a1*a2*b1*b2*b3*y1*y3 + a3*b1*b2*b3*y1*y3 + a1*a3*b1*b2*b3*y1*y3 + a2*c1*y1*y3 + a2*b1*c1*y1*y3 + b2*c1*y1*y3 + a2*b2*c1*y1*y3 + b1*b2*c1*y1*y3 + a2*b1*b2*c1*y1*y3 + a2*b3*c1*y1*y3 + a2*b1*b3*c1*y1*y3 + c2*y1*y3 + a1*c2*y1*y3 + a2*c2*y1*y3 + a1*b1*c2*y1*y3 + a3*b1*c2*y1*y3 + b1*b2*c2*y1*y3 + a2*b1*b2*c2*y1*y3 + a3*b1*b2*c2*y1*y3 + b1*b3*c2*y1*y3 + a1*b1*b3*c2*y1*y3 + a2*b1*b3*c2*y1*y3 + a3*b1*b3*c2*y1*y3 + a1*b2*b3*c2*y1*y3 + a2*b1*b2*b3*c2*y1*y3 + c1*c2*y1*y3 + b1*c1*c2*y1*y3 + b2*b3*c1*c2*y1*y3 + b1*b2*b3*c1*c2*y1*y3 + a2*c3*y1*y3 + b2*c3*y1*y3 + a2*b2*c3*y1*y3 + a2*b3*c3*y1*y3 + a2*b1*b3*c3*y1*y3 + b2*b3*c3*y1*y3 + a2*b2*b3*c3*y1*y3 + b1*b2*b3*c3*y1*y3 + a1*b1*b2*b3*c3*y1*y3 + c2*c3*y1*y3 + b1*c2*c3*y1*y3 + b3*c2*c3*y1*y3 + b1*b3*c2*c3*y1*y3 + b2*b3*c2*c3*y1*y3 + a1*y2*y3 + b1*y2*y3 + a1*b1*y2*y3 + a2*b1*y2*y3 + a1*b2*y2*y3 + a1*a2*b2*y2*y3 + a1*a2*a3*b2*y2*y3 + a1*b1*b2*y2*y3 + a1*a3*b1*b2*y2*y3 + a2*a3*b1*b2*y2*y3 + a1*b3*y2*y3 + a1*a3*b3*y2*y3 + a1*a2*a3*b3*y2*y3 + b1*b3*y2*y3 + a1*b1*b3*y2*y3 + a2*b1*b3*y2*y3 + a3*b1*b3*y2*y3 + a1*a3*b1*b3*y2*y3 + a2*a3*b1*b3*y2*y3 + a1*a2*b2*b3*y2*y3 + a1*a3*b2*b3*y2*y3 + b1*b2*b3*y2*y3 + a1*b1*b2*b3*y2*y3 + a2*b1*b2*b3*y2*y3 + a1*a2*b1*b2*b3*y2*y3 + a3*b1*b2*b3*y2*y3 + a1*a3*b1*b2*b3*y2*y3 + c1*y2*y3 + a1*c1*y2*y3 + a2*c1*y2*y3 + a1*a2*c1*y2*y3 + a2*a3*c1*y2*y3 + b1*c1*y2*y3 + a1*b1*c1*y2*y3 + a1*b2*c1*y2*y3 + a3*b2*c1*y2*y3 + a1*a3*b2*c1*y2*y3 + b3*c1*y2*y3 + a1*a2*b3*c1*y2*y3 + a3*b3*c1*y2*y3 + b1*b3*c1*y2*y3 + a2*b1*b3*c1*y2*y3 + a3*b1*b3*c1*y2*y3 + a2*b2*b3*c1*y2*y3 + a3*b2*b3*c1*y2*y3 + b1*b2*b3*c1*y2*y3 + a1*b1*b2*b3*c1*y2*y3 + a1*c2*y2*y3 + a1*b1*c2*y2*y3 + a1*a2*b2*c2*y2*y3 + a1*a3*b2*c2*y2*y3 + a3*b1*b2*c2*y2*y3 + a1*a3*b3*c2*y2*y3 + a2*b1*b3*c2*y2*y3 + a3*b1*b3*c2*y2*y3 + a1*a2*b2*b3*c2*y2*y3 + b1*b2*b3*c2*y2*y3 + a1*b1*b2*b3*c2*y2*y3 + a2*b1*b2*b3*c2*y2*y3 + c1*c2*y2*y3 + a1*c1*c2*y2*y3 + a2*c1*c2*y2*y3 + a3*c1*c2*y2*y3 + b1*c1*c2*y2*y3 + b2*c1*c2*y2*y3 + a1*b2*c1*c2*y2*y3 + b1*b2*c1*c2*y2*y3 + b3*c1*c2*y2*y3 + a1*b3*c1*c2*y2*y3 + a2*b3*c1*c2*y2*y3 + b1*b3*c1*c2*y2*y3 + b2*b3*c1*c2*y2*y3 + a1*b2*b3*c1*c2*y2*y3 + a1*b1*b2*c3*y2*y3 + a2*b1*b2*c3*y2*y3 + a1*b3*c3*y2*y3 + b1*b3*c3*y2*y3 + a1*b1*b3*c3*y2*y3 + a2*b1*b3*c3*y2*y3 + b1*b2*b3*c3*y2*y3 + a1*b1*b2*b3*c3*y2*y3 + b1*b2*c1*c3*y2*y3 + b3*c1*c3*y2*y3 + b1*b3*c1*c3*y2*y3 + b2*b3*c1*c3*y2*y3 + b1*b2*c2*c3*y2*y3 + b1*b3*c2*c3*y2*y3 + a1*a2*a3*z1 + a1*a2*a3*b1*z1 + a1*a3*b1*b2*z1 + a1*a2*b1*b3*z1 + a2*a3*b1*b3*z1 + a1*a2*b2*b3*z1 + a1*a3*b2*b3*z1 + a1*a2*a3*b2*b3*z1 + a1*a3*b1*b2*b3*z1 + a1*a2*a3*b1*b2*b3*z1 + a2*a3*b1*c1*z1 + a1*a3*b2*c1*z1 + a3*b1*b2*c1*z1 + a2*b1*b3*c1*z1 + b1*b2*b3*c1*z1 + a2*b1*b2*b3*c1*z1 + a1*a2*a3*c2*z1 + a3*b1*c2*z1 + a2*a3*b1*c2*z1 + a1*a2*a3*b1*c2*z1 + a1*a3*b2*c2*z1 + a2*a3*b2*c2*z1 + a1*a3*b1*b2*c2*z1 + a2*a3*b1*b2*c2*z1 + a1*a2*a3*b1*b2*c2*z1 + a1*b3*c2*z1 + a2*a3*b3*c2*z1 + a1*a2*a3*b3*c2*z1 + b1*b3*c2*z1 + a1*b1*b3*c2*z1 + a2*b1*b3*c2*z1 + a1*a2*a3*b1*b3*c2*z1 + b2*b3*c2*z1 + a2*b2*b3*c2*z1 + a1*a2*b2*b3*c2*z1 + a3*b2*b3*c2*z1 + a2*a3*b2*b3*c2*z1 + a1*b1*b2*b3*c2*z1 + a3*b1*b2*b3*c2*z1 + a1*a3*b1*b2*b3*c2*z1 + a2*a3*b1*b2*b3*c2*z1 + a1*a3*c1*c2*z1 + a1*a2*a3*c1*c2*z1 + a3*b1*c1*c2*z1 + a1*a3*b1*c1*c2*z1 + a3*b1*b2*c1*c2*z1 + a2*a3*b1*b2*c1*c2*z1 + a1*a2*b3*c1*c2*z1 + a1*a3*b3*c1*c2*z1 + b1*b3*c1*c2*z1 + a1*b1*b3*c1*c2*z1 + b1*b2*b3*c1*c2*z1 + a2*b1*b2*b3*c1*c2*z1 + a3*b1*b2*b3*c1*c2*z1 + a2*a3*b1*c3*z1 + a1*a3*b2*c3*z1 + a1*a3*b1*b2*c3*z1 + a1*a2*b3*c3*z1 + a1*a2*b1*b3*c3*z1 + a1*a2*b2*b3*c3*z1 + a2*b1*b2*b3*c3*z1 + a1*a3*b1*b2*b3*c3*z1 + a1*b2*c1*c3*z1 + b1*b2*c1*c3*z1 + a2*b1*b3*c1*c3*z1 + a1*b2*b3*c1*c3*z1 + b1*b2*b3*c1*c3*z1 + a2*b1*b2*b3*c1*c3*z1 + a3*b1*b2*b3*c1*c3*z1 + a1*a3*c2*c3*z1 + b1*c2*c3*z1 + a1*a2*b1*c2*c3*z1 + a3*b1*c2*c3*z1 + a1*a3*b1*c2*c3*z1 + b2*c2*c3*z1 + a1*b1*b2*c2*c3*z1 + a1*a2*b1*b2*c2*c3*z1 + b3*c2*c3*z1 + a2*b3*c2*c3*z1 + b1*b3*c2*c3*z1 + a1*b1*b3*c2*c3*z1 + a1*a2*b1*b3*c2*c3*z1 + b2*b3*c2*c3*z1 + a1*a2*b2*b3*c2*c3*z1 + c1*c2*c3*z1 + a2*b1*c1*c2*c3*z1 + b1*b2*c1*c2*c3*z1 + a2*b1*b2*c1*c2*c3*z1 + a1*a2*b3*c1*c2*c3*z1 + a1*b1*b3*c1*c2*c3*z1 + a2*b1*b3*c1*c2*c3*z1 + b1*b2*b3*c1*c2*c3*z1 + a2*b1*b2*b3*c1*c2*c3*z1 + a3*b2*x1*z1 + a2*a3*c1*x1*z1 + b2*b3*c1*x1*z1 + a1*a3*c2*x1*z1 + a2*a3*c2*x1*z1 + b3*c2*x1*z1 + a1*b3*c2*x1*z1 + a2*b3*c2*x1*z1 + a3*b3*c2*x1*z1 + a3*b2*c1*c2*x1*z1 + b2*c3*x1*z1 + b1*b2*c3*x1*z1 + b2*b3*c3*x1*z1 + b2*c1*c3*x1*z1 + a1*b2*c1*c3*x1*z1 + a2*b3*c1*c3*x1*z1 + b2*b3*c1*c3*x1*z1 + b3*c2*c3*x1*z1 + a1*b3*c2*c3*x1*z1 + a2*b3*c2*c3*x1*z1 + b2*b3*c1*c2*c3*x1*z1 + a3*x2*z1 + a1*a3*x2*z1 + a1*a2*a3*x2*z1 + a3*b1*x2*z1 + a1*a3*b1*x2*z1 + a3*b2*x2*z1 + a1*a3*b2*x2*z1 + a3*b1*b2*x2*z1 + a1*a2*b3*x2*z1 + a1*a3*b3*x2*z1 + a1*b1*b3*x2*z1 + a1*b2*b3*x2*z1 + a2*a3*b1*c1*x2*z1 + a3*b1*b2*c1*x2*z1 + b1*b3*c1*x2*z1 + a2*b1*b3*c1*x2*z1 + a3*b1*b3*c1*x2*z1 + b1*b2*b3*c1*x2*z1 + a1*a3*c2*x2*z1 + a2*a3*c2*x2*z1 + a2*a3*b1*c2*x2*z1 + a1*a3*b2*c2*x2*z1 + b3*c2*x2*z1 + a1*b3*c2*x2*z1 + a2*b3*c2*x2*z1 + a3*b3*c2*x2*z1 + b1*b3*c2*x2*z1 + a1*b1*b3*c2*x2*z1 + a2*b1*b3*c2*x2*z1 + a3*b1*b3*c2*x2*z1 + a1*b2*b3*c2*x2*z1 + a3*b1*c1*c2*x2*z1 + a3*b1*b2*c1*c2*x2*z1 + b1*b2*b3*c1*c2*x2*z1 + a1*c3*x2*z1 + a1*b1*c3*x2*z1 + a1*b1*b2*c3*x2*z1 + b3*c3*x2*z1 + a1*a2*b3*c3*x2*z1 + b1*b3*c3*x2*z1 + b2*b3*c3*x2*z1 + a1*b2*b3*c3*x2*z1 + b1*b2*b3*c3*x2*z1 + b1*b2*c1*c3*x2*z1 + a2*b1*b3*c1*c3*x2*z1 + b1*b2*b3*c1*c3*x2*z1 + b3*c2*c3*x2*z1 + a1*b3*c2*c3*x2*z1 + a2*b3*c2*c3*x2*z1 + b1*b3*c2*c3*x2*z1 + a2*b1*b3*c2*c3*x2*z1 + a1*b2*b3*c2*c3*x2*z1 + b1*b3*c1*c2*c3*x2*z1 + b1*b2*b3*c1*c2*c3*x2*z1 + a1*a2*x3*z1 + a2*a3*x3*z1 + a2*b1*x3*z1 + a2*a3*b1*x3*z1 + a1*b2*x3*z1 + a2*b2*x3*z1 + a1*a2*b2*x3*z1 + a2*a3*b2*x3*z1 + a1*b1*b2*x3*z1 + a2*a3*b1*b2*x3*z1 + a1*a2*b3*x3*z1 + a2*a3*b3*x3*z1 + a2*a3*b1*b3*x3*z1 + a1*a2*b2*b3*x3*z1 + a1*a3*b2*b3*x3*z1 + a1*a2*b1*b2*b3*x3*z1 + a1*a3*b1*b2*b3*x3*z1 + a2*b1*c1*x3*z1 + a2*b1*b2*c1*x3*z1 + a2*b1*b3*c1*x3*z1 + a2*c2*x3*z1 + a3*c2*x3*z1 + b1*c2*x3*z1 + a1*b1*c2*x3*z1 + a3*b1*c2*x3*z1 + a2*b2*c2*x3*z1 + a3*b2*c2*x3*z1 + b1*b2*c2*x3*z1 + a2*b1*b2*c2*x3*z1 + a3*b1*b2*c2*x3*z1 + b3*c2*x3*z1 + a1*b3*c2*x3*z1 + a2*b3*c2*x3*z1 + a3*b3*c2*x3*z1 + b1*b3*c2*x3*z1 + a1*b1*b3*c2*x3*z1 + a2*b1*b3*c2*x3*z1 + a3*b1*b3*c2*x3*z1 + b2*b3*c2*x3*z1 + a1*b2*b3*c2*x3*z1 + a2*b2*b3*c2*x3*z1 + b1*b2*b3*c2*x3*z1 + a2*b1*b2*b3*c2*x3*z1 + b1*c1*c2*x3*z1 + b1*b2*b3*c1*c2*x3*z1 + a2*c3*x3*z1 + a2*b2*c3*x3*z1 + a2*b1*b3*c3*x3*z1 + a1*b2*b3*c3*x3*z1 + a2*b2*b3*c3*x3*z1 + a1*b1*b2*b3*c3*x3*z1 + b1*c2*c3*x3*z1 + b1*b3*c2*c3*x3*z1 + b2*b3*c2*c3*x3*z1 + a2*a3*y1*z1 + a3*b2*y1*z1 + b2*b3*y1*z1 + a2*a3*c1*y1*z1 + b2*b3*c1*y1*z1 + a1*a3*c2*y1*z1 + a2*a3*c2*y1*z1 + a3*b1*c2*y1*z1 + a3*b2*c2*y1*z1 + b3*c2*y1*z1 + a1*b3*c2*y1*z1 + a2*b3*c2*y1*z1 + a3*b3*c2*y1*z1 + b1*b3*c2*y1*z1 + a3*b2*c1*c2*y1*z1 + a1*b2*c3*y1*z1 + a2*b3*c3*y1*z1 + b2*c1*c3*y1*z1 + a1*b2*c1*c3*y1*z1 + b1*b2*c1*c3*y1*z1 + a2*b3*c1*c3*y1*z1 + b2*b3*c1*c3*y1*z1 + b3*c2*c3*y1*z1 + a1*b3*c2*c3*y1*z1 + a2*b3*c2*c3*y1*z1 + b1*b3*c2*c3*y1*z1 + b2*b3*c2*c3*y1*z1 + b2*b3*c1*c2*c3*y1*z1 + a2*a3*y2*z1 + a1*a2*a3*y2*z1 + a3*b1*y2*z1 + a1*a3*b1*y2*z1 + a3*b2*y2*z1 + a1*a3*b2*y2*z1 + a1*a2*b3*y2*z1 + a1*a3*b3*y2*z1 + a1*b1*b3*y2*z1 + a2*b1*b3*y2*z1 + a3*b1*b3*y2*z1 + b2*b3*y2*z1 + a1*b2*b3*y2*z1 + a3*b1*c1*y2*z1 + a2*a3*b1*c1*y2*z1 + a3*b1*b2*c1*y2*z1 + b1*b3*c1*y2*z1 + a2*b1*b3*c1*y2*z1 + a3*b1*b3*c1*y2*z1 + b1*b2*b3*c1*y2*z1 + a1*a3*c2*y2*z1 + a2*a3*c2*y2*z1 + a3*b1*c2*y2*z1 + a2*a3*b1*c2*y2*z1 + a3*b2*c2*y2*z1 + a1*a3*b2*c2*y2*z1 + b3*c2*y2*z1 + a1*b3*c2*y2*z1 + a2*b3*c2*y2*z1 + a3*b3*c2*y2*z1 + a1*b1*b3*c2*y2*z1 + a2*b1*b3*c2*y2*z1 + a3*b1*b3*c2*y2*z1 + a1*b2*b3*c2*y2*z1 + b1*b2*b3*c2*y2*z1 + a3*b1*c1*c2*y2*z1 + a3*b1*b2*c1*c2*y2*z1 + b1*b2*b3*c1*c2*y2*z1 + a1*c3*y2*z1 + b1*c3*y2*z1 + a1*b1*c3*y2*z1 + a1*b1*b2*c3*y2*z1 + a1*b3*c3*y2*z1 + a2*b3*c3*y2*z1 + a1*a2*b3*c3*y2*z1 + a1*b2*b3*c3*y2*z1 + b1*b2*b3*c3*y2*z1 + b1*b2*c1*c3*y2*z1 + b1*b3*c1*c3*y2*z1 + a2*b1*b3*c1*c3*y2*z1 + b1*b2*b3*c1*c3*y2*z1 + b3*c2*c3*y2*z1 + a1*b3*c2*c3*y2*z1 + a2*b3*c2*c3*y2*z1 + a2*b1*b3*c2*c3*y2*z1 + b2*b3*c2*c3*y2*z1 + a1*b2*b3*c2*c3*y2*z1 + b1*b3*c1*c2*c3*y2*z1 + b1*b2*b3*c1*c2*c3*y2*z1 + a1*a2*y3*z1 + a2*a3*y3*z1 + a2*a3*b1*y3*z1 + a1*a2*b2*y3*z1 + a2*a3*b2*y3*z1 + b1*b2*y3*z1 + a1*b1*b2*y3*z1 + a2*b1*b2*y3*z1 + a3*b1*b2*y3*z1 + a2*a3*b1*b2*y3*z1 + a1*a2*b3*y3*z1 + a2*a3*b3*y3*z1 + a2*b1*b3*y3*z1 + a2*a3*b1*b3*y3*z1 + b2*b3*y3*z1 + a1*a2*b2*b3*y3*z1 + a3*b2*b3*y3*z1 + a1*a3*b2*b3*y3*z1 + a1*a2*b1*b2*b3*y3*z1 + a1*a3*b1*b2*b3*y3*z1 + a2*b1*c1*y3*z1 + b1*b2*c1*y3*z1 + a2*b1*b2*c1*y3*z1 + a2*b1*b3*c1*y3*z1 + a2*c2*y3*z1 + a3*c2*y3*z1 + b1*c2*y3*z1 + a1*b1*c2*y3*z1 + a3*b1*c2*y3*z1 + b2*c2*y3*z1 + a2*b2*c2*y3*z1 + a3*b2*c2*y3*z1 + b1*b2*c2*y3*z1 + a2*b1*b2*c2*y3*z1 + a3*b1*b2*c2*y3*z1 + b3*c2*y3*z1 + a1*b3*c2*y3*z1 + a2*b3*c2*y3*z1 + a3*b3*c2*y3*z1 + a1*b1*b3*c2*y3*z1 + a2*b1*b3*c2*y3*z1 + a3*b1*b3*c2*y3*z1 + b2*b3*c2*y3*z1 + a1*b2*b3*c2*y3*z1 + a2*b2*b3*c2*y3*z1 + a2*b1*b2*b3*c2*y3*z1 + b1*c1*c2*y3*z1 + b1*b2*b3*c1*c2*y3*z1 + a2*c3*y3*z1 + b2*c3*y3*z1 + a2*b2*c3*y3*z1 + a2*b1*b3*c3*y3*z1 + a1*b2*b3*c3*y3*z1 + a2*b2*b3*c3*y3*z1 + a1*b1*b2*b3*c3*y3*z1 + b1*c2*c3*y3*z1 + b1*b3*c2*c3*y3*z1 + b2*b3*c2*c3*y3*z1 + a1*a2*a3*b1*z2 + a1*a2*a3*b1*b2*z2 + a1*a2*b1*b3*z2 + a1*a2*a3*b1*b3*z2 + a1*a3*b1*b2*b3*z2 + a1*a2*a3*b1*b2*b3*z2 + a1*a2*a3*b1*c1*z2 + a1*a3*b2*c1*z2 + a1*a2*a3*b3*c1*z2 + a1*a2*b1*b3*c1*z2 + a1*a3*b1*b3*c1*z2 + a1*a3*b2*b3*c1*z2 + a2*b1*b2*b3*c1*z2 + a3*b1*b2*b3*c1*z2 + a1*a3*b1*b2*b3*c1*z2 + a1*a3*b1*b2*c2*z2 + a1*a2*a3*b1*b2*c2*z2 + a1*a2*b1*b3*c2*z2 + a1*a3*b1*b3*c2*z2 + a1*a2*a3*b1*b3*c2*z2 + a1*b1*b2*b3*c2*z2 + a1*a2*b1*b2*b3*c2*z2 + a1*a3*b1*b2*b3*c2*z2 + a3*b1*c1*c2*z2 + a1*a3*b1*c1*c2*z2 + a2*a3*b1*c1*c2*z2 + a3*b1*b2*c1*c2*z2 + a1*a3*b1*b2*c1*c2*z2 + a2*a3*b1*b2*c1*c2*z2 + a2*b1*b3*c1*c2*z2 + a3*b1*b3*c1*c2*z2 + a2*a3*b1*b3*c1*c2*z2 + a1*a3*b2*b3*c1*c2*z2 + b1*b2*b3*c1*c2*z2 + a1*b1*b2*b3*c1*c2*z2 + a2*b1*b2*b3*c1*c2*z2 + a1*a2*b1*c3*z2 + a1*b1*b2*c3*z2 + a1*a3*b1*b2*c3*z2 + a1*b1*b2*b3*c3*z2 + a1*a3*b1*b2*b3*c3*z2 + a1*a2*c1*c3*z2 + a1*a3*c1*c3*z2 + a2*b1*c1*c3*z2 + a3*b1*c1*c3*z2 + a1*b1*b2*c1*c3*z2 + a3*b1*b2*c1*c3*z2 + a1*b3*c1*c3*z2 + a1*b1*b3*c1*c3*z2 + a2*b1*b3*c1*c3*z2 + a1*a2*b1*b3*c1*c3*z2 + a3*b1*b3*c1*c3*z2 + b1*b2*b3*c1*c3*z2 + a1*b1*b2*b3*c1*c3*z2 + a1*a2*b1*c2*c3*z2 + a1*a3*b1*c2*c3*z2 + a1*b1*b2*c2*c3*z2 + a1*a2*b1*b2*c2*c3*z2 + c1*c2*c3*z2 + a1*a2*b1*c1*c2*c3*z2 + a1*b2*c1*c2*c3*z2 + a1*a2*b2*c1*c2*c3*z2 + b1*b2*c1*c2*c3*z2 + a1*b1*b2*c1*c2*c3*z2 + a2*b1*b2*c1*c2*c3*z2 + a1*b1*b3*c1*c2*c3*z2 + a2*b1*b3*c1*c2*c3*z2 + b1*b2*b3*c1*c2*c3*z2 + a1*b1*b2*b3*c1*c2*c3*z2 + a1*a2*a3*x1*z2 + a1*a3*b1*x1*z2 + a1*a3*b1*b2*x1*z2 + b3*x1*z2 + a2*b3*x1*z2 + a3*b3*x1*z2 + b1*b3*x1*z2 + a2*b1*b3*x1*z2 + a1*a2*b1*b3*x1*z2 + a3*b1*b3*x1*z2 + a1*a3*b1*b3*x1*z2 + a1*b2*b3*x1*z2 + a2*a3*c1*x1*z2 + a2*a3*b1*c1*x1*z2 + a3*b2*c1*x1*z2 + a3*b1*b2*c1*x1*z2 + b3*c1*x1*z2 + a2*b3*c1*x1*z2 + a3*b3*c1*x1*z2 + b1*b3*c1*x1*z2 + a1*b1*b3*c1*x1*z2 + a2*b1*b3*c1*x1*z2 + a3*b1*b3*c1*x1*z2 + b2*b3*c1*x1*z2 + b1*b2*b3*c1*x1*z2 + a2*a3*c2*x1*z2 + a2*a3*b1*c2*x1*z2 + a1*a3*b2*c2*x1*z2 + b3*c2*x1*z2 + a2*b3*c2*x1*z2 + a3*b3*c2*x1*z2 + b1*b3*c2*x1*z2 + a1*b1*b3*c2*x1*z2 + a2*b1*b3*c2*x1*z2 + a3*b1*b3*c2*x1*z2 + b2*b3*c2*x1*z2 + b1*b2*b3*c2*x1*z2 + a1*b1*b2*b3*c2*x1*z2 + a3*b2*c1*c2*x1*z2 + a3*b1*b2*c1*c2*x1*z2 + b2*b3*c1*c2*x1*z2 + b1*b2*b3*c1*c2*x1*z2 + a1*b2*c3*x1*z2 + b3*c3*x1*z2 + a1*a2*b3*c3*x1*z2 + b1*b3*c3*x1*z2 + a1*b1*b3*c3*x1*z2 + b2*b3*c3*x1*z2 + a1*b2*b3*c3*x1*z2 + b1*b2*b3*c3*x1*z2 + c1*c3*x1*z2 + b1*c1*c3*x1*z2 + b3*c1*c3*x1*z2 + a2*b3*c1*c3*x1*z2 + b1*b3*c1*c3*x1*z2 + a2*b1*b3*c1*c3*x1*z2 + b2*b3*c1*c3*x1*z2 + b1*b2*b3*c1*c3*x1*z2 + b3*c2*c3*x1*z2 + a2*b3*c2*c3*x1*z2 + b1*b3*c2*c3*x1*z2 + a2*b1*b3*c2*c3*x1*z2 + a1*b2*b3*c2*c3*x1*z2 + b2*b3*c1*c2*c3*x1*z2 + b1*b2*b3*c1*c2*c3*x1*z2 + a1*a3*x2*z2 + a3*b1*x2*z2 + a1*a3*b1*x2*z2 + a3*b1*b2*x2*z2 + a1*a3*b1*b2*x2*z2 + a1*b3*x2*z2 + b1*b3*x2*z2 + a1*b1*b3*x2*z2 + a2*b1*b3*x2*z2 + a1*a2*b1*b3*x2*z2 + a3*b1*b3*x2*z2 + a1*a3*b1*b3*x2*z2 + a3*b1*c1*x2*z2 + a3*b1*b2*c1*x2*z2 + b1*b3*c1*x2*z2 + a2*b1*b3*c1*x2*z2 + a3*b1*b3*c1*x2*z2 + a1*b3*c2*x2*z2 + b1*b3*c2*x2*z2 + a1*b1*b3*c2*x2*z2 + b1*b2*b3*c2*x2*z2 + a1*b1*b2*b3*c2*x2*z2 + b1*b3*c1*c2*x2*z2 + b1*b2*b3*c1*c2*x2*z2 + a1*b1*c3*x2*z2 + a1*b2*c3*x2*z2 + a1*b1*b2*c3*x2*z2 + b1*b3*c3*x2*z2 + a1*b1*b3*c3*x2*z2 + a1*b1*c1*c3*x2*z2 + a1*b2*c1*c3*x2*z2 + b1*b2*c1*c3*x2*z2 + b1*b3*c1*c3*x2*z2 + a1*b1*b2*x3*z2 + a1*a2*b1*b2*b3*x3*z2 + a1*a3*b1*b2*b3*x3*z2 + a1*a2*c1*x3*z2 + a1*a3*c1*x3*z2 + a1*b1*c1*x3*z2 + a1*a3*b2*c1*x3*z2 + a1*b3*c1*x3*z2 + a1*a2*b3*c1*x3*z2 + a1*b1*b3*c1*x3*z2 + a1*b2*b3*c1*x3*z2 + a1*b1*b2*b3*c1*x3*z2 + a1*b1*c2*x3*z2 + a1*b1*b3*c2*x3*z2 + a1*b2*c1*c2*x3*z2 + a1*b2*b3*c1*c2*x3*z2 + a1*b1*b2*b3*c3*x3*z2 + a3*y1*z2 + a1*a3*y1*z2 + a2*a3*y1*z2 + a1*a2*a3*y1*z2 + a3*b1*y1*z2 + a1*a3*b1*y1*z2 + a3*b1*b2*y1*z2 + a1*a3*b1*b2*y1*z2 + a1*b3*y1*z2 + a2*b3*y1*z2 + a3*b3*y1*z2 + b1*b3*y1*z2 + a1*a2*b1*b3*y1*z2 + a1*a3*b1*b3*y1*z2 + b2*b3*y1*z2 + a1*b2*b3*y1*z2 + a2*a3*c1*y1*z2 + a2*a3*b1*c1*y1*z2 + a3*b2*c1*y1*z2 + a3*b1*b2*c1*y1*z2 + a1*b3*c1*y1*z2 + a2*b3*c1*y1*z2 + a3*b3*c1*y1*z2 + a1*b1*b3*c1*y1*z2 + a2*b1*b3*c1*y1*z2 + a3*b1*b3*c1*y1*z2 + b2*b3*c1*y1*z2 + b1*b2*b3*c1*y1*z2 + a2*a3*c2*y1*z2 + a2*a3*b1*c2*y1*z2 + a3*b2*c2*y1*z2 + a1*a3*b2*c2*y1*z2 + a1*b3*c2*y1*z2 + a2*b3*c2*y1*z2 + a3*b3*c2*y1*z2 + a1*b1*b3*c2*y1*z2 + a2*b1*b3*c2*y1*z2 + a3*b1*b3*c2*y1*z2 + b2*b3*c2*y1*z2 + a1*b1*b2*b3*c2*y1*z2 + a3*b2*c1*c2*y1*z2 + a3*b1*b2*c1*c2*y1*z2 + b2*b3*c1*c2*y1*z2 + b1*b2*b3*c1*c2*y1*z2 + b1*c3*y1*z2 + a1*b1*c3*y1*z2 + b2*c3*y1*z2 + b1*b2*c3*y1*z2 + b3*c3*y1*z2 + a2*b3*c3*y1*z2 + a1*a2*b3*c3*y1*z2 + a1*b1*b3*c3*y1*z2 + a1*b2*b3*c3*y1*z2 + b1*b2*b3*c3*y1*z2 + c1*c3*y1*z2 + b1*c1*c3*y1*z2 + b3*c1*c3*y1*z2 + a2*b3*c1*c3*y1*z2 + b1*b3*c1*c3*y1*z2 + a2*b1*b3*c1*c3*y1*z2 + b2*b3*c1*c3*y1*z2 + b1*b2*b3*c1*c3*y1*z2 + b3*c2*c3*y1*z2 + a2*b3*c2*c3*y1*z2 + b1*b3*c2*c3*y1*z2 + a2*b1*b3*c2*c3*y1*z2 + b2*b3*c2*c3*y1*z2 + a1*b2*b3*c2*c3*y1*z2 + b2*b3*c1*c2*c3*y1*z2 + b1*b2*b3*c1*c2*c3*y1*z2 + a1*a3*b1*y2*z2 + a1*a3*b1*b2*y2*z2 + a1*a2*b1*b3*y2*z2 + a1*a3*b1*b3*y2*z2 + a3*b1*c1*y2*z2 + a3*b1*b2*c1*y2*z2 + a2*b1*b3*c1*y2*z2 + a3*b1*b3*c1*y2*z2 + a1*b1*b3*c2*y2*z2 + a1*b1*b2*b3*c2*y2*z2 + b1*b3*c1*c2*y2*z2 + b1*b2*b3*c1*c2*y2*z2 + b1*b2*c3*y2*z2 + a1*b1*b2*c3*y2*z2 + a1*b1*b3*c3*y2*z2 + a1*b1*c1*c3*y2*z2 + a1*b2*c1*c3*y2*z2 + b1*b2*c1*c3*y2*z2 + b1*b3*c1*c3*y2*z2 + a1*b1*b2*y3*z2 + a1*a2*b1*b2*b3*y3*z2 + a1*a3*b1*b2*b3*y3*z2 + a1*a2*c1*y3*z2 + a1*a3*c1*y3*z2 + a1*b1*c1*y3*z2 + a1*b2*c1*y3*z2 + a1*a3*b2*c1*y3*z2 + a1*a2*b3*c1*y3*z2 + a1*b1*b3*c1*y3*z2 + a1*b2*b3*c1*y3*z2 + a1*b1*b2*b3*c1*y3*z2 + a1*b1*c2*y3*z2 + a1*b1*b3*c2*y3*z2 + a1*b2*c1*c2*y3*z2 + a1*b2*b3*c1*c2*y3*z2 + a1*b1*b2*b3*c3*y3*z2 + a1*a2*a3*z1*z2 + a3*b1*b2*z1*z2 + a1*a3*b1*b2*z1*z2 + a1*b1*b3*z1*z2 + a1*a2*b1*b3*z1*z2 + a1*a3*b1*b3*z1*z2 + a1*b2*b3*z1*z2 + a2*a3*b1*c1*z1*z2 + a3*b1*b2*c1*z1*z2 + b1*b3*c1*z1*z2 + a2*b1*b3*c1*z1*z2 + a3*b1*b3*c1*z1*z2 + b1*b2*b3*c1*z1*z2 + a2*a3*b1*c2*z1*z2 + a1*a3*b2*c2*z1*z2 + b1*b3*c2*z1*z2 + a2*b1*b3*c2*z1*z2 + a3*b1*b3*c2*z1*z2 + a1*b1*b2*b3*c2*z1*z2 + a3*b1*b2*c1*c2*z1*z2 + b1*b2*b3*c1*c2*z1*z2 + a1*b1*c3*z1*z2 + a1*a2*b3*c3*z1*z2 + a1*b1*b3*c3*z1*z2 + a1*b2*b3*c3*z1*z2 + b1*b2*b3*c3*z1*z2 + b1*c1*c3*z1*z2 + b1*b3*c1*c3*z1*z2 + a2*b1*b3*c1*c3*z1*z2 + b1*b2*b3*c1*c3*z1*z2 + b1*b3*c2*c3*z1*z2 + a2*b1*b3*c2*c3*z1*z2 + a1*b2*b3*c2*c3*z1*z2 + b1*b2*b3*c1*c2*c3*z1*z2 + a1*a2*a3*b2*z3 + a1*a2*b2*b3*z3 + a2*a3*b1*b2*b3*z3 + a1*a2*a3*b1*b2*b3*z3 + a2*b1*b2*c1*z3 + a1*a2*b1*b2*c1*z3 + a1*a2*b2*b3*c1*z3 + a1*b1*c2*z3 + a1*b2*c2*z3 + a1*a2*b2*c2*z3 + a1*a2*b1*b2*c2*z3 + a1*a2*b3*c2*z3 + a1*a2*a3*b3*c2*z3 + a1*a2*a3*b2*b3*c2*z3 + a1*b1*b2*b3*c2*z3 + a2*b1*b2*b3*c2*z3 + a3*b1*b2*b3*c2*z3 + a1*a3*b1*b2*b3*c2*z3 + a2*a3*b1*b2*b3*c2*z3 + a1*a2*c1*c2*z3 + a3*b1*c1*c2*z3 + a1*a3*b1*c1*c2*z3 + a2*a3*b1*c1*c2*z3 + a1*a3*b2*c1*c2*z3 + a2*a3*b2*c1*c2*z3 + b1*b2*c1*c2*z3 + a1*b1*b2*c1*c2*z3 + a2*b1*b2*c1*c2*z3 + a3*b1*b2*c1*c2*z3 + a2*b1*b3*c1*c2*z3 + a3*b1*b3*c1*c2*z3 + a3*b1*b2*b3*c1*c2*z3 + a1*a2*b1*b2*c3*z3 + a2*b1*b2*b3*c3*z3 + a1*a2*b1*b2*b3*c3*z3 + a2*b1*b2*c1*c3*z3 + a1*a3*c2*c3*z3 + a2*b1*c2*c3*z3 + a3*b1*c2*c3*z3 + a1*a3*b1*c2*c3*z3 + a1*a2*a3*b2*c2*c3*z3 + a1*b3*c2*c3*z3 + a1*a2*b3*c2*c3*z3 + a1*a2*a3*b3*c2*c3*z3 + a1*b1*b3*c2*c3*z3 + a3*b1*b3*c2*c3*z3 + a1*b2*b3*c2*c3*z3 + a1*a2*b2*b3*c2*c3*z3 + a1*b1*b2*b3*c2*c3*z3 + a2*b1*b2*b3*c2*c3*z3 + c1*c2*c3*z3 + a2*c1*c2*c3*z3 + a2*a3*b1*c1*c2*c3*z3 + a3*b2*c1*c2*c3*z3 + b1*b2*c1*c2*c3*z3 + a3*b1*b2*c1*c2*c3*z3 + a1*b1*b3*c1*c2*c3*z3 + a2*b1*b3*c1*c2*c3*z3 + b2*b3*c1*c2*c3*z3 + a1*b2*b3*c1*c2*c3*z3 + a2*b2*b3*c1*c2*c3*z3 + b1*b2*b3*c1*c2*c3*z3 + a1*a2*x1*z3 + a1*a2*b1*x1*z3 + a1*b2*x1*z3 + a1*a2*b2*x1*z3 + a1*a3*b2*x1*z3 + a2*a3*b2*x1*z3 + a1*b1*b2*x1*z3 + a1*a2*b1*b2*x1*z3 + a1*a3*b1*b2*x1*z3 + a2*a3*b1*b2*x1*z3 + a1*a2*b3*x1*z3 + a1*a2*b1*b3*x1*z3 + a1*a3*b2*b3*x1*z3 + a2*a3*b2*b3*x1*z3 + a1*a2*b1*b2*b3*x1*z3 + a1*a3*b1*b2*b3*x1*z3 + a2*c1*x1*z3 + a2*b1*c1*x1*z3 + b2*c1*x1*z3 + a2*b2*c1*x1*z3 + a3*b2*c1*x1*z3 + b1*b2*c1*x1*z3 + a2*b1*b2*c1*x1*z3 + a3*b1*b2*c1*x1*z3 + a2*b3*c1*x1*z3 + a2*b1*b3*c1*x1*z3 + a3*b2*b3*c1*x1*z3 + a3*b1*b2*b3*c1*x1*z3 + c2*x1*z3 + a1*c2*x1*z3 + a2*c2*x1*z3 + a1*b1*c2*x1*z3 + a2*b1*c2*x1*z3 + a1*b1*b2*c2*x1*z3 + a1*b2*b3*c2*x1*z3 + a1*b1*b2*b3*c2*x1*z3 + a2*b1*b2*b3*c2*x1*z3 + c1*c2*x1*z3 + b1*c1*c2*x1*z3 + b2*b3*c1*c2*x1*z3 + b1*b2*b3*c1*c2*x1*z3 + a1*b2*c3*x1*z3 + a2*b2*c3*x1*z3 + a1*b1*b2*c3*x1*z3 + a1*b2*b3*c3*x1*z3 + a1*b1*b2*b3*c3*x1*z3 + b2*c1*c3*x1*z3 + b1*b2*c1*c3*x1*z3 + b2*b3*c1*c3*x1*z3 + b1*b2*b3*c1*c3*x1*z3 + c2*c3*x1*z3 + b1*c2*c3*x1*z3 + b2*c2*c3*x1*z3 + a1*a3*x2*z3 + b1*x2*z3 + a2*b1*x2*z3 + a1*a2*b1*x2*z3 + a3*b1*x2*z3 + a1*a3*b2*x2*z3 + a1*a2*a3*b2*x2*z3 + b1*b2*x2*z3 + a2*b1*b2*x2*z3 + a1*a2*b1*b2*x2*z3 + a3*b1*b2*x2*z3 + a2*a3*b1*b2*x2*z3 + a1*b3*x2*z3 + a1*a2*a3*b3*x2*z3 + a1*a2*b1*b3*x2*z3 + a1*a3*b1*b3*x2*z3 + a2*a3*b1*b3*x2*z3 + a1*b2*b3*x2*z3 + a1*a2*b1*b2*b3*x2*z3 + a1*a3*b1*b2*b3*x2*z3 + c1*x2*z3 + a1*c1*x2*z3 + a2*c1*x2*z3 + a3*c1*x2*z3 + a1*a3*c1*x2*z3 + a2*a3*c1*x2*z3 + a2*b2*c1*x2*z3 + a3*b2*c1*x2*z3 + a1*a3*b2*c1*x2*z3 + b1*b2*c1*x2*z3 + a1*b1*b2*c1*x2*z3 + b3*c1*x2*z3 + a1*a2*b3*c1*x2*z3 + a3*b3*c1*x2*z3 + a1*b1*b3*c1*x2*z3 + a2*b1*b3*c1*x2*z3 + b2*b3*c1*x2*z3 + a2*b2*b3*c1*x2*z3 + a3*b2*b3*c1*x2*z3 + a1*b1*b2*b3*c1*x2*z3 + a1*c2*x2*z3 + a1*b1*c2*x2*z3 + a2*b1*c2*x2*z3 + a2*b1*b2*c2*x2*z3 + a1*b3*c2*x2*z3 + a1*a2*b3*c2*x2*z3 + b1*b3*c2*x2*z3 + a1*b2*b3*c2*x2*z3 + a1*a2*b2*b3*c2*x2*z3 + b1*b2*b3*c2*x2*z3 + a2*b1*b2*b3*c2*x2*z3 + b2*c1*c2*x2*z3 + b1*b2*c1*c2*x2*z3 + b3*c1*c2*x2*z3 + a1*b3*c1*c2*x2*z3 + a2*b3*c1*c2*x2*z3 + b2*b3*c1*c2*x2*z3 + a1*b2*b3*c1*c2*x2*z3 + a2*b1*c3*x2*z3 + a2*b1*b2*c3*x2*z3 + a1*b1*b3*c3*x2*z3 + a2*b1*b3*c3*x2*z3 + a1*b1*b2*b3*c3*x2*z3 + c1*c3*x2*z3 + b1*c1*c3*x2*z3 + b2*c1*c3*x2*z3 + b1*b2*c1*c3*x2*z3 + b3*c1*c3*x2*z3 + b2*b3*c1*c3*x2*z3 + a2*b1*x3*z3 + a1*a3*b2*x3*z3 + a1*a2*a3*b2*x3*z3 + b1*b2*x3*z3 + a1*b1*b2*x3*z3 + a2*b1*b2*x3*z3 + a3*b1*b2*x3*z3 + a1*a3*b1*b2*x3*z3 + a2*a3*b1*b2*x3*z3 + a1*a2*a3*b3*x3*z3 + a1*b2*b3*x3*z3 + a1*a3*b2*b3*x3*z3 + a2*b1*c1*x3*z3 + a3*b2*c1*x3*z3 + b2*b3*c1*x3*z3 + b1*b2*b3*c1*x3*z3 + a3*b1*b2*b3*c1*x3*z3 + a1*a3*c2*x3*z3 + a2*b1*c2*x3*z3 + a1*a2*b2*c2*x3*z3 + a1*a3*b2*c2*x3*z3 + b1*b2*c2*x3*z3 + a3*b1*b2*c2*x3*z3 + a1*b3*c2*x3*z3 + a1*a2*b3*c2*x3*z3 + a1*b2*b3*c2*x3*z3 + a1*a3*b2*b3*c2*x3*z3 + b1*b2*b3*c2*x3*z3 + a3*b1*b2*b3*c2*x3*z3 + a2*b1*c1*c2*x3*z3 + a2*b1*c3*x3*z3 + a1*b1*b2*c3*x3*z3 + a2*b1*b2*c3*x3*z3 + a1*b2*b3*c3*x3*z3 + b1*b2*c1*c3*x3*z3 + b1*b2*b3*c1*c3*x3*z3 + a2*b1*c2*c3*x3*z3 + b1*b2*b3*c2*c3*x3*z3 + a1*a2*y1*z3 + a2*b1*y1*z3 + a1*a2*b1*y1*z3 + a1*b2*y1*z3 + a1*a2*b2*y1*z3 + a1*a3*b2*y1*z3 + a2*a3*b2*y1*z3 + b1*b2*y1*z3 + a1*b1*b2*y1*z3 + a2*b1*b2*y1*z3 + a1*a2*b1*b2*y1*z3 + a3*b1*b2*y1*z3 + a1*a3*b1*b2*y1*z3 + a2*a3*b1*b2*y1*z3 + a1*a2*b3*y1*z3 + a2*b1*b3*y1*z3 + a1*a2*b1*b3*y1*z3 + a2*b2*b3*y1*z3 + a1*a3*b2*b3*y1*z3 + a2*a3*b2*b3*y1*z3 + a2*b1*b2*b3*y1*z3 + a1*a2*b1*b2*b3*y1*z3 + a3*b1*b2*b3*y1*z3 + a1*a3*b1*b2*b3*y1*z3 + a2*c1*y1*z3 + a2*b1*c1*y1*z3 + b2*c1*y1*z3 + a2*b2*c1*y1*z3 + a3*b2*c1*y1*z3 + b1*b2*c1*y1*z3 + a2*b1*b2*c1*y1*z3 + a3*b1*b2*c1*y1*z3 + a2*b3*c1*y1*z3 + a2*b1*b3*c1*y1*z3 + a3*b2*b3*c1*y1*z3 + a3*b1*b2*b3*c1*y1*z3 + c2*y1*z3 + a1*c2*y1*z3 + a2*c2*y1*z3 + b1*c2*y1*z3 + a1*b1*c2*y1*z3 + a2*b1*c2*y1*z3 + b2*c2*y1*z3 + b1*b2*c2*y1*z3 + a1*b1*b2*c2*y1*z3 + a1*b2*b3*c2*y1*z3 + b1*b2*b3*c2*y1*z3 + a1*b1*b2*b3*c2*y1*z3 + a2*b1*b2*b3*c2*y1*z3 + c1*c2*y1*z3 + b1*c1*c2*y1*z3 + b2*b3*c1*c2*y1*z3 + b1*b2*b3*c1*c2*y1*z3 + a1*b2*c3*y1*z3 + a2*b2*c3*y1*z3 + b1*b2*c3*y1*z3 + a1*b1*b2*c3*y1*z3 + a1*b2*b3*c3*y1*z3 + b1*b2*b3*c3*y1*z3 + a1*b1*b2*b3*c3*y1*z3 + b2*c1*c3*y1*z3 + b1*b2*c1*c3*y1*z3 + b2*b3*c1*c3*y1*z3 + b1*b2*b3*c1*c3*y1*z3 + c2*c3*y1*z3 + b1*c2*c3*y1*z3 + b2*c2*c3*y1*z3 + a1*a3*y2*z3 + b1*y2*z3 + a1*b1*y2*z3 + a2*b1*y2*z3 + a1*a2*b1*y2*z3 + a3*b1*y2*z3 + a1*b2*y2*z3 + a1*a2*b2*y2*z3 + a1*a2*a3*b2*y2*z3 + a1*b1*b2*y2*z3 + a1*a2*b1*b2*y2*z3 + a2*a3*b1*b2*y2*z3 + a1*b3*y2*z3 + a1*a2*a3*b3*y2*z3 + b1*b3*y2*z3 + a1*b1*b3*y2*z3 + a2*b1*b3*y2*z3 + a1*a2*b1*b3*y2*z3 + a1*a3*b1*b3*y2*z3 + a2*a3*b1*b3*y2*z3 + a1*a2*b2*b3*y2*z3 + a1*a3*b2*b3*y2*z3 + b1*b2*b3*y2*z3 + a1*b1*b2*b3*y2*z3 + a2*b1*b2*b3*y2*z3 + a1*a2*b1*b2*b3*y2*z3 + a3*b1*b2*b3*y2*z3 + a1*a3*b1*b2*b3*y2*z3 + c1*y2*z3 + a1*c1*y2*z3 + a2*c1*y2*z3 + a3*c1*y2*z3 + a1*a3*c1*y2*z3 + a2*a3*c1*y2*z3 + a2*b1*c1*y2*z3 + b2*c1*y2*z3 + a2*b2*c1*y2*z3 + a1*a3*b2*c1*y2*z3 + b1*b2*c1*y2*z3 + a1*b1*b2*c1*y2*z3 + a1*b3*c1*y2*z3 + a2*b3*c1*y2*z3 + a1*a2*b3*c1*y2*z3 + a3*b3*c1*y2*z3 + a1*b1*b3*c1*y2*z3 + a2*b1*b3*c1*y2*z3 + a2*b2*b3*c1*y2*z3 + a3*b2*b3*c1*y2*z3 + b1*b2*b3*c1*y2*z3 + a1*b1*b2*b3*c1*y2*z3 + a1*c2*y2*z3 + a1*b1*c2*y2*z3 + a2*b1*b2*c2*y2*z3 + a1*b3*c2*y2*z3 + a1*a2*b3*c2*y2*z3 + b1*b3*c2*y2*z3 + a1*b2*b3*c2*y2*z3 + a1*a2*b2*b3*c2*y2*z3 + a2*b1*b2*b3*c2*y2*z3 + b2*c1*c2*y2*z3 + b1*b2*c1*c2*y2*z3 + b3*c1*c2*y2*z3 + a1*b3*c1*c2*y2*z3 + a2*b3*c1*c2*y2*z3 + a1*b2*b3*c1*c2*y2*z3 + b1*c3*y2*z3 + a2*b1*b2*c3*y2*z3 + a1*b1*b3*c3*y2*z3 + a2*b1*b3*c3*y2*z3 + b1*b2*b3*c3*y2*z3 + a1*b1*b2*b3*c3*y2*z3 + c1*c3*y2*z3 + b1*c1*c3*y2*z3 + b2*c1*c3*y2*z3 + b1*b2*c1*c3*y2*z3 + b3*c1*c3*y2*z3 + b2*b3*c1*c3*y2*z3 + a1*a2*b2*y3*z3 + a1*a2*a3*b2*y3*z3 + a1*a3*b1*b2*y3*z3 + a2*a3*b1*b2*y3*z3 + a1*a2*a3*b3*y3*z3 + a1*b2*b3*y3*z3 + a1*a2*b2*b3*y3*z3 + b1*b2*b3*y3*z3 + a1*b1*b2*b3*y3*z3 + a2*b1*b2*b3*y3*z3 + a3*b1*b2*b3*y3*z3 + b1*b2*c1*y3*z3 + b1*b2*b3*c1*y3*z3 + a3*b1*b2*b3*c1*y3*z3 + a1*a3*c2*y3*z3 + a1*a2*b2*c2*y3*z3 + a1*a3*b2*c2*y3*z3 + b1*b2*c2*y3*z3 + a3*b1*b2*c2*y3*z3 + a1*a2*b3*c2*y3*z3 + a1*b2*b3*c2*y3*z3 + a1*a3*b2*b3*c2*y3*z3 + a3*b1*b2*b3*c2*y3*z3 + a2*b1*c1*c2*y3*z3 + a1*b1*b2*c3*y3*z3 + a2*b1*b2*c3*y3*z3 + a1*b2*b3*c3*y3*z3 + b1*b2*b3*c3*y3*z3 + b1*b2*c1*c3*y3*z3 + b1*b2*b3*c1*c3*y3*z3 + a2*b1*c2*c3*y3*z3 + b1*b2*b3*c2*c3*y3*z3 + a1*a2*b1*z1*z3 + a1*b1*b2*z1*z3 + a1*a2*b1*b2*z1*z3 + a1*a3*b1*b2*z1*z3 + a2*a3*b1*b2*z1*z3 + a1*a2*b1*b3*z1*z3 + a1*a2*b2*b3*z1*z3 + a2*a3*b2*b3*z1*z3 + a1*a2*b1*b2*b3*z1*z3 + a1*a3*b1*b2*b3*z1*z3 + a2*b1*c1*z1*z3 + b1*b2*c1*z1*z3 + a2*b1*b2*c1*z1*z3 + a3*b1*b2*c1*z1*z3 + a2*b1*b3*c1*z1*z3 + a3*b1*b2*b3*c1*z1*z3 + c2*z1*z3 + a1*b1*c2*z1*z3 + a2*b1*c2*z1*z3 + a1*b2*c2*z1*z3 + a1*b1*b2*c2*z1*z3 + a2*b2*b3*c2*z1*z3 + a1*b1*b2*b3*c2*z1*z3 + a2*b1*b2*b3*c2*z1*z3 + b1*c1*c2*z1*z3 + b1*b2*b3*c1*c2*z1*z3 + a2*b2*c3*z1*z3 + a1*b1*b2*c3*z1*z3 + a1*b1*b2*b3*c3*z1*z3 + b1*b2*c1*c3*z1*z3 + b1*b2*b3*c1*c3*z1*z3 + b1*c2*c3*z1*z3 + b2*c2*c3*z1*z3 + a1*a2*b1*z2*z3 + a1*b1*b2*z2*z3 + a1*a2*b1*b2*z2*z3 + a1*a3*b1*b2*z2*z3 + a1*a2*b1*b3*z2*z3 + a1*a2*b1*b2*b3*z2*z3 + a1*a3*b1*b2*b3*z2*z3 + a1*b1*c1*z2*z3 + a1*b2*c1*z2*z3 + a1*a3*b2*c1*z2*z3 + a1*b1*b2*c1*z2*z3 + a1*a2*b3*c1*z2*z3 + a1*b2*b3*c1*z2*z3 + a1*b1*b2*b3*c1*z2*z3 + a1*b1*c2*z2*z3 + a1*b1*b2*c2*z2*z3 + a1*b1*b2*b3*c2*z2*z3 + a1*b2*b3*c1*c2*z2*z3 + a1*b1*b2*c3*z2*z3 + a1*b1*b2*b3*c3*z2*z3;
end;
#####################################################################
C2in109:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3 + a1*a2*a3*b1 + a1*a2*a3*b2 + a1*a3*b1*b2 + a2*a3*b1*b2 + a1*a2*a3*b1*b3 + a1*a2*b2*b3 + a1*a3*b2*b3 + a1*a2*a3*b2*b3 + a1*a2*a3*b1*b2*b3 + a1*a2*a3*c1 + a2*a3*b1*c1 + a1*a2*a3*b1*c1 + a1*a3*b2*c1 + a3*b1*b2*c1 + a2*a3*b1*b2*c1 + a2*b1*b3*c1 + a2*a3*b1*b3*c1 + a1*a2*a3*b1*b3*c1 + a1*a2*b1*b2*b3*c1 + a1*a3*b1*b2*b3*c1 + a1*a3*b1*c2 + a1*a2*a3*b2*c2 + a3*b1*b2*c2 + a1*a2*a3*b1*b2*c2 + a1*a2*a3*b3*c2 + a1*b1*b3*c2 + a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a1*a2*a3*b1*b3*c2 + a1*b2*b3*c2 + a1*a3*b2*b3*c2 + b1*b2*b3*c2 + a1*b1*b2*b3*c2 + a2*b1*b2*b3*c2 + a1*a2*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a2*a3*b1*b2*b3*c2 + a1*a2*a3*b1*b2*b3*c2 + a2*a3*c1*c2 + a2*a3*b1*c1*c2 + a3*b2*c1*c2 + a2*a3*b2*c1*c2 + a1*a2*a3*b1*b2*c1*c2 + a1*b3*c1*c2 + a2*b3*c1*c2 + a2*a3*b3*c1*c2 + b1*b3*c1*c2 + a1*a3*b1*b3*c1*c2 + a2*a3*b1*b3*c1*c2 + a1*a2*a3*b1*b3*c1*c2 + b2*b3*c1*c2 + a1*b2*b3*c1*c2 + a1*a2*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + a1*a2*a3*b2*b3*c1*c2 + b1*b2*b3*c1*c2 + a1*b1*b2*b3*c1*c2 + a2*b1*b2*b3*c1*c2 + a1*a2*b1*b2*b3*c1*c2 + a1*a2*a3*b1*b2*b3*c1*c2 + a1*a2*b1*c3 + a1*a2*a3*b1*c3 + a1*a2*a3*b2*c3 + a1*b1*b2*c3 + a2*b1*b2*c3 + a1*a2*b1*b2*c3 + a3*b1*b2*c3 + a2*a3*b1*b2*c3 + a1*a2*a3*b1*b2*c3 + a1*a2*b3*c3 + a1*a2*b1*b3*c3 + a1*b2*b3*c3 + a1*a2*a3*b2*b3*c3 + a1*a2*b1*b2*b3*c3 + a2*a3*b1*b2*b3*c3 + a1*a2*c1*c3 + a2*a3*b1*c1*c3 + a1*a2*a3*b1*c1*c3 + a1*a2*b2*c1*c3 + a1*a3*b2*c1*c3 + a1*a2*a3*b2*c1*c3 + b1*b2*c1*c3 + a1*a2*b1*b2*c1*c3 + a3*b1*b2*c1*c3 + b1*b2*b3*c1*c3 + a1*b1*b2*b3*c1*c3 + a2*b1*b2*b3*c1*c3 + a3*b1*b2*b3*c1*c3 + a2*a3*b1*b2*b3*c1*c3 + a1*c2*c3 + a1*a2*b1*c2*c3 + a3*b1*c2*c3 + a1*a3*b1*c2*c3 + a2*a3*b1*c2*c3 + a1*a2*b2*c2*c3 + a1*a2*a3*b2*c2*c3 + a1*b1*b2*c2*c3 + a3*b1*b2*c2*c3 + a1*a3*b1*b2*c2*c3 + a2*a3*b1*b2*c2*c3 + a1*a2*a3*b1*b2*c2*c3 + a1*b3*c2*c3 + a1*a2*a3*b3*c2*c3 + a1*b1*b3*c2*c3 + a2*b1*b3*c2*c3 + a1*a2*b1*b3*c2*c3 + a3*b1*b3*c2*c3 + a1*a3*b1*b3*c2*c3 + a1*b2*b3*c2*c3 + a1*a3*b2*b3*c2*c3 + b1*b2*b3*c2*c3 + a1*a2*b1*b2*b3*c2*c3 + a1*a3*b1*b2*b3*c2*c3 + a1*a2*a3*b1*b2*b3*c2*c3 + a2*c1*c2*c3 + a2*a3*c1*c2*c3 + a1*a2*a3*c1*c2*c3 + b1*c1*c2*c3 + a1*b1*c1*c2*c3 + a2*b1*c1*c2*c3 + a3*b1*c1*c2*c3 + a1*a3*b1*c1*c2*c3 + a1*a2*a3*b1*c1*c2*c3 + b2*c1*c2*c3 + a1*b2*c1*c2*c3 + a2*b2*c1*c2*c3 + a1*a3*b2*c1*c2*c3 + a1*a2*a3*b2*c1*c2*c3 + b1*b2*c1*c2*c3 + a1*b1*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + a1*a3*b1*b2*c1*c2*c3 + a2*a3*b1*b2*c1*c2*c3 + a1*a2*a3*b1*b2*c1*c2*c3 + a1*a2*b3*c1*c2*c3 + a1*a3*b3*c1*c2*c3 + a1*a2*a3*b3*c1*c2*c3 + b1*b3*c1*c2*c3 + a1*a2*a3*b1*b3*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + a2*b2*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + a2*a3*b2*b3*c1*c2*c3 + b1*b2*b3*c1*c2*c3 + a1*b1*b2*b3*c1*c2*c3 + a2*a3*b1*b2*b3*c1*c2*c3 + a2*a3*x1 + a2*a3*b1*x1 + a1*a2*a3*b2*x1 + a3*b1*b2*x1 + a1*a3*b1*b2*x1 + a1*a2*a3*b1*b2*x1 + a2*b3*x1 + a1*a2*b3*x1 + a1*a2*a3*b3*x1 + a2*b1*b3*x1 + a1*a2*b1*b3*x1 + a2*a3*b1*b3*x1 + a1*b2*b3*x1 + a2*b2*b3*x1 + a1*a2*b2*b3*x1 + a3*b2*b3*x1 + a1*a3*b2*b3*x1 + a2*a3*b2*b3*x1 + a1*a3*b1*b2*b3*x1 + a1*a2*a3*b1*b2*b3*x1 + a2*a3*c1*x1 + a2*a3*b1*c1*x1 + a3*b1*b2*c1*x1 + a2*a3*b1*b2*c1*x1 + a1*a2*b3*c1*x1 + a2*a3*b3*c1*x1 + a1*a2*a3*b3*c1*x1 + b2*b3*c1*x1 + a1*a2*b2*b3*c1*x1 + a3*b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a1*b1*b2*b3*c1*x1 + a2*b1*b2*b3*c1*x1 + a2*a3*c2*x1 + a1*a2*a3*c2*x1 + a1*a3*b2*c2*x1 + a1*a2*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + a1*a2*a3*b1*b2*c2*x1 + b3*c2*x1 + a1*b3*c2*x1 + a2*b3*c2*x1 + a1*a3*b3*c2*x1 + a1*a2*a3*b3*c2*x1 + a1*b1*b3*c2*x1 + a2*b1*b3*c2*x1 + a1*a3*b1*b3*c2*x1 + a1*a2*a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a1*a2*b2*b3*c2*x1 + a3*b2*b3*c2*x1 + a1*a3*b2*b3*c2*x1 + a2*a3*b2*b3*c2*x1 + a1*a2*b1*b2*b3*c2*x1 + a3*b1*b2*b3*c2*x1 + a2*a3*b1*b2*b3*c2*x1 + a3*c1*c2*x1 + a3*b1*c1*c2*x1 + a1*a3*b2*c1*c2*x1 + a3*b1*b2*c1*c2*x1 + a1*a2*b3*c1*c2*x1 + a3*b3*c1*c2*x1 + a1*b1*b3*c1*c2*x1 + a2*b1*b3*c1*c2*x1 + a1*a2*b1*b3*c1*c2*x1 + a3*b1*b3*c1*c2*x1 + a1*b2*b3*c1*c2*x1 + a3*b2*b3*c1*c2*x1 + a1*b1*b2*b3*c1*c2*x1 + a1*a2*c3*x1 + a1*a2*a3*c3*x1 + a1*a2*b1*c3*x1 + a1*a2*a3*b1*c3*x1 + a2*b2*c3*x1 + a1*a2*b2*c3*x1 + a1*a3*b2*c3*x1 + a2*a3*b2*c3*x1 + a1*a2*a3*b2*c3*x1 + b1*b2*c3*x1 + a2*b1*b2*c3*x1 + a3*b1*b2*c3*x1 + a1*a3*b1*b2*c3*x1 + a2*a3*b1*b2*c3*x1 + a2*b3*c3*x1 + a1*a2*b3*c3*x1 + a1*a2*a3*b3*c3*x1 + b2*b3*c3*x1 + a3*b2*b3*c3*x1 + a1*a3*b2*b3*c3*x1 + a2*a3*b2*b3*c3*x1 + a1*a2*b1*b2*b3*c3*x1 + a2*c1*c3*x1 + a2*b1*c1*c3*x1 + b2*c1*c3*x1 + a1*b2*c1*c3*x1 + a1*a2*b2*c1*c3*x1 + a3*b2*c1*c3*x1 + a1*a3*b2*c1*c3*x1 + b1*b2*c1*c3*x1 + a1*a2*b1*b2*c1*c3*x1 + a3*b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a2*a3*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + b2*b3*c1*c3*x1 + a2*b2*b3*c1*c3*x1 + a1*a2*b2*b3*c1*c3*x1 + a3*b2*b3*c1*c3*x1 + b1*b2*b3*c1*c3*x1 + a2*b1*b2*b3*c1*c3*x1 + c2*c3*x1 + a1*a2*c2*c3*x1 + a3*c2*c3*x1 + a2*a3*c2*c3*x1 + a1*b1*c2*c3*x1 + a1*a2*b1*c2*c3*x1 + a3*b1*c2*c3*x1 + a1*a3*b1*c2*c3*x1 + a1*b2*c2*c3*x1 + a2*b2*c2*c3*x1 + a3*b2*c2*c3*x1 + a1*a3*b2*c2*c3*x1 + a1*a2*a3*b2*c2*c3*x1 + a1*a3*b1*b2*c2*c3*x1 + a1*a2*a3*b1*b2*c2*c3*x1 + a1*b3*c2*c3*x1 + a1*a3*b3*c2*c3*x1 + a2*a3*b3*c2*c3*x1 + b1*b3*c2*c3*x1 + a1*b1*b3*c2*c3*x1 + a1*a2*b1*b3*c2*c3*x1 + a1*a2*b2*b3*c2*c3*x1 + a1*a3*b2*b3*c2*c3*x1 + a1*a2*a3*b2*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + a1*b1*b2*b3*c2*c3*x1 + a1*a3*b1*b2*b3*c2*c3*x1 + a1*a2*a3*b1*b2*b3*c2*c3*x1 + a3*c1*c2*c3*x1 + a1*a3*c1*c2*c3*x1 + a2*a3*c1*c2*c3*x1 + a2*b1*c1*c2*c3*x1 + a3*b1*c1*c2*c3*x1 + a1*a3*b1*c1*c2*c3*x1 + a2*a3*b1*c1*c2*c3*x1 + a1*a3*b2*c1*c2*c3*x1 + b1*b2*c1*c2*c3*x1 + a2*a3*b1*b2*c1*c2*c3*x1 + a3*b3*c1*c2*c3*x1 + a1*a3*b3*c1*c2*c3*x1 + a2*a3*b3*c1*c2*c3*x1 + a2*b1*b3*c1*c2*c3*x1 + a1*b2*b3*c1*c2*c3*x1 + a2*b2*b3*c1*c2*c3*x1 + a3*b2*b3*c1*c2*c3*x1 + a2*a3*b2*b3*c1*c2*c3*x1 + a3*b1*b2*b3*c1*c2*c3*x1 + a2*a3*b1*b2*b3*c1*c2*c3*x1 + (a2*a3*x1*(1 + x1))/2 + (a2*a3*b1*x1*(1 + x1))/2 + (a2*a3*b2*x1*(1 + x1))/2 + (a3*b1*b2*x1*(1 + x1))/2 + (a1*a2*b3*x1*(1 + x1))/2 + (a2*a3*b3*x1*(1 + x1))/2 + (a1*b2*b3*x1*(1 + x1))/2 + (a2*b2*b3*x1*(1 + x1))/2 + (a3*b2*b3*x1*(1 + x1))/2 + (a2*b1*b3*c1*x1*(1 + x1))/2 + (b2*b3*c1*x1*(1 + x1))/2 + (b1*b2*b3*c1*x1*(1 + x1))/2 + (a3*b1*b2*c2*x1*(1 + x1))/2 + (b1*b3*c2*x1*(1 + x1))/2 + (a1*b1*b3*c2*x1*(1 + x1))/2 + (a2*b1*b3*c2*x1*(1 + x1))/2 + (a1*b2*b3*c2*x1*(1 + x1))/2 + (a3*b2*b3*c2*x1*(1 + x1))/2 + (b1*b3*c1*c2*x1*(1 + x1))/2 + (b1*b2*b3*c1*c2*x1*(1 + x1))/2 + (b1*b2*c3*x1*(1 + x1))/2 + (a2*b1*b2*c3*x1*(1 + x1))/2 + (a3*b1*b2*c3*x1*(1 + x1))/2 + (a2*b1*b3*c3*x1*(1 + x1))/2 + (b2*b3*c3*x1*(1 + x1))/2 + (a3*b2*b3*c3*x1*(1 + x1))/2 + (c2*c3*x1*(1 + x1))/2 + (b1*b3*c2*c3*x1*(1 + x1))/2 + (b1*b2*b3*c2*c3*x1*(1 + x1))/2 + a1*a3*x2 + a1*a3*b1*x2 + a2*a3*b1*x2 + a1*a3*b2*x2 + a1*a2*a3*b2*x2 + a3*b1*b2*x2 + a1*a2*a3*b3*x2 + b1*b3*x2 + a1*a2*b1*b3*x2 + a1*a3*b1*b3*x2 + a1*a2*a3*b1*b3*x2 + a1*a2*a3*b1*b2*b3*x2 + a3*c1*x2 + a2*a3*c1*x2 + a1*a2*a3*c1*x2 + a3*b1*c1*x2 + a1*a3*b1*c1*x2 + a2*a3*b1*c1*x2 + a1*a2*a3*b1*c1*x2 + a3*b2*c1*x2 + a2*a3*b2*c1*x2 + a3*b1*b2*c1*x2 + a1*a2*a3*b1*b2*c1*x2 + a1*b3*c1*x2 + a1*a2*b3*c1*x2 + a3*b3*c1*x2 + a2*a3*b3*c1*x2 + a1*b1*b3*c1*x2 + a1*a2*b1*b3*c1*x2 + a3*b1*b3*c1*x2 + a1*a3*b1*b3*c1*x2 + a1*a2*a3*b1*b3*c1*x2 + a3*b2*b3*c1*x2 + a1*a3*b2*b3*c1*x2 + a2*a3*b2*b3*c1*x2 + a1*b1*b2*b3*c1*x2 + a2*b1*b2*b3*c1*x2 + a1*a2*b1*b2*b3*c1*x2 + a1*a3*b1*b2*b3*c1*x2 + a1*a2*a3*c2*x2 + a2*a3*b1*c2*x2 + a1*a2*a3*b1*c2*x2 + a1*a3*b1*b2*c2*x2 + a1*a2*b3*c2*x2 + a1*a3*b3*c2*x2 + a1*b1*b3*c2*x2 + a2*b1*b3*c2*x2 + a1*a2*b1*b3*c2*x2 + a1*b2*b3*c2*x2 + a1*a3*b2*b3*c2*x2 + a2*b1*b2*b3*c2*x2 + a1*a2*b1*b2*b3*c2*x2 + a1*a3*b1*b2*b3*c2*x2 + a2*a3*b1*c1*c2*x2 + a2*a3*b2*c1*c2*x2 + a1*a3*b1*b2*c1*c2*x2 + a1*a2*a3*b1*b2*c1*c2*x2 + a1*b3*c1*c2*x2 + a2*b3*c1*c2*x2 + a3*b3*c1*c2*x2 + a1*a3*b3*c1*c2*x2 + a2*a3*b3*c1*c2*x2 + a1*b1*b3*c1*c2*x2 + a1*a3*b1*b3*c1*c2*x2 + a1*a2*a3*b1*b3*c1*c2*x2 + a1*b2*b3*c1*c2*x2 + a1*b1*b2*b3*c1*c2*x2 + a1*a2*b1*b2*b3*c1*c2*x2 + a3*b1*b2*b3*c1*c2*x2 + a1*a3*b1*b2*b3*c1*c2*x2 + a1*a3*c3*x2 + a1*a3*b1*c3*x2 + a1*a2*b2*c3*x2 + a1*a3*b2*c3*x2 + a1*b1*b2*c3*x2 + a1*a2*b1*b2*c3*x2 + a1*a2*a3*b1*b2*c3*x2 + a1*a3*b3*c3*x2 + a1*b1*b3*c3*x2 + a2*b1*b3*c3*x2 + a1*a3*b1*b3*c3*x2 + a2*a3*b1*b3*c3*x2 + a1*a2*a3*b1*b3*c3*x2 + a1*a2*b2*b3*c3*x2 + a1*a3*b2*b3*c3*x2 + b1*b2*b3*c3*x2 + a2*b1*b2*b3*c3*x2 + a1*a2*b1*b2*b3*c3*x2 + a2*a3*b1*b2*b3*c3*x2 + c1*c3*x2 + a1*c1*c3*x2 + a2*c1*c3*x2 + b1*c1*c3*x2 + a3*b1*c1*c3*x2 + a1*b2*c1*c3*x2 + a2*b1*b2*c1*c3*x2 + a1*a2*b1*b2*c1*c3*x2 + a3*b1*b2*c1*c3*x2 + a1*a3*b1*b2*c1*c3*x2 + a2*a3*b1*b2*c1*c3*x2 + a1*a2*a3*b1*b2*c1*c3*x2 + b3*c1*c3*x2 + a2*b3*c1*c3*x2 + a2*a3*b3*c1*c3*x2 + b1*b3*c1*c3*x2 + a1*b1*b3*c1*c3*x2 + a1*a2*b1*b3*c1*c3*x2 + a3*b1*b3*c1*c3*x2 + a1*a3*b1*b3*c1*c3*x2 + b2*b3*c1*c3*x2 + a2*b2*b3*c1*c3*x2 + a3*b2*b3*c1*c3*x2 + a1*a3*b2*b3*c1*c3*x2 + a2*a3*b2*b3*c1*c3*x2 + b1*b2*b3*c1*c3*x2 + a1*b1*b2*b3*c1*c3*x2 + a3*b1*b2*b3*c1*c3*x2 + a1*a3*b1*b2*b3*c1*c3*x2 + a2*a3*b1*b2*b3*c1*c3*x2 + a1*a2*a3*b1*b2*b3*c1*c3*x2 + a1*c2*c3*x2 + a1*a2*c2*c3*x2 + a1*a3*c2*c3*x2 + b1*c2*c3*x2 + a1*b1*c2*c3*x2 + a2*b1*c2*c3*x2 + a1*a2*b1*c2*c3*x2 + a3*b1*c2*c3*x2 + a1*a3*b1*c2*c3*x2 + a1*b2*c2*c3*x2 + a1*b1*b2*c2*c3*x2 + a1*a3*b1*b2*c2*c3*x2 + a1*a2*a3*b1*b2*c2*c3*x2 + a1*b3*c2*c3*x2 + b1*b3*c2*c3*x2 + a1*b1*b3*c2*c3*x2 + a2*b1*b3*c2*c3*x2 + a1*a2*b1*b3*c2*c3*x2 + a1*a3*b1*b3*c2*c3*x2 + a1*a3*b2*b3*c2*c3*x2 + a1*a2*b1*b2*b3*c2*c3*x2 + a1*a3*b1*b2*b3*c2*c3*x2 + a2*a3*b1*b2*b3*c2*c3*x2 + a1*a2*a3*b1*b2*b3*c2*c3*x2 + c1*c2*c3*x2 + a1*c1*c2*c3*x2 + a1*b1*c1*c2*c3*x2 + a2*b1*c1*c2*c3*x2 + a3*b1*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + a1*b1*b2*c1*c2*c3*x2 + a1*a2*b1*b2*c1*c2*c3*x2 + a1*a3*b1*b2*c1*c2*c3*x2 + a2*a3*b1*b2*c1*c2*c3*x2 + a1*a2*a3*b1*b2*c1*c2*c3*x2 + b3*c1*c2*c3*x2 + a3*b3*c1*c2*c3*x2 + a1*b1*b3*c1*c2*c3*x2 + a2*b1*b3*c1*c2*c3*x2 + a1*a2*b1*b3*c1*c2*c3*x2 + a3*b1*b3*c1*c2*c3*x2 + a1*a2*a3*b1*b3*c1*c2*c3*x2 + a3*b2*b3*c1*c2*c3*x2 + b1*b2*b3*c1*c2*c3*x2 + a2*b1*b2*b3*c1*c2*c3*x2 + a1*a3*b1*b2*b3*c1*c2*c3*x2 + a2*a3*b1*b2*b3*c1*c2*c3*x2 + a3*x1*x2 + a2*a3*x1*x2 + a3*b1*x1*x2 + a1*a3*b1*x1*x2 + a2*a3*b1*x1*x2 + a3*b2*x1*x2 + a1*a3*b2*x1*x2 + a2*a3*b2*x1*x2 + a1*a3*b1*b2*x1*x2 + a2*a3*b1*b2*x1*x2 + b3*x1*x2 + a2*b3*x1*x2 + a3*b3*x1*x2 + a1*a3*b3*x1*x2 + a2*a3*b3*x1*x2 + a1*a2*b1*b3*x1*x2 + a1*b2*b3*x1*x2 + a2*b2*b3*x1*x2 + a1*a2*b2*b3*x1*x2 + a3*b2*b3*x1*x2 + a1*a3*c1*x1*x2 + a1*a3*b1*c1*x1*x2 + a3*b2*c1*x1*x2 + a1*a3*b2*c1*x1*x2 + a3*b1*b2*c1*x1*x2 + a2*b3*c1*x1*x2 + a1*a2*b3*c1*x1*x2 + a3*b3*c1*x1*x2 + a1*a3*b3*c1*x1*x2 + b1*b3*c1*x1*x2 + a2*b1*b3*c1*x1*x2 + a3*b1*b3*c1*x1*x2 + b2*b3*c1*x1*x2 + a2*b2*b3*c1*x1*x2 + b1*b2*b3*c1*x1*x2 + a2*b1*b2*b3*c1*x1*x2 + a1*a3*c2*x1*x2 + a3*b1*c2*x1*x2 + a1*a3*b1*c2*x1*x2 + a1*a3*b2*c2*x1*x2 + a3*b1*b2*c2*x1*x2 + b3*c2*x1*x2 + a1*b3*c2*x1*x2 + a1*a2*b3*c2*x1*x2 + a1*a3*b3*c2*x1*x2 + b1*b3*c2*x1*x2 + a1*b1*b3*c2*x1*x2 + a3*b1*b3*c2*x1*x2 + b2*b3*c2*x1*x2 + a1*b2*b3*c2*x1*x2 + a3*b2*b3*c2*x1*x2 + b1*b2*b3*c2*x1*x2 + a1*b1*b2*b3*c2*x1*x2 + a2*b1*b2*b3*c2*x1*x2 + a3*c1*c2*x1*x2 + a3*b1*c1*c2*x1*x2 + a3*b2*c1*c2*x1*x2 + a1*b3*c1*c2*x1*x2 + a2*b3*c1*c2*x1*x2 + a3*b3*c1*c2*x1*x2 + b1*b3*c1*c2*x1*x2 + a1*b2*b3*c1*c2*x1*x2 + b1*b2*b3*c1*c2*x1*x2 + c3*x1*x2 + a1*a2*c3*x1*x2 + a1*a3*c3*x1*x2 + b1*c3*x1*x2 + a1*b1*c3*x1*x2 + a2*b1*c3*x1*x2 + a1*a2*b1*c3*x1*x2 + a3*b1*c3*x1*x2 + a1*a3*b1*c3*x1*x2 + b2*c3*x1*x2 + a1*a2*b2*c3*x1*x2 + a1*a3*b2*c3*x1*x2 + b1*b2*c3*x1*x2 + a1*b1*b2*c3*x1*x2 + a2*b1*b2*c3*x1*x2 + a3*b1*b2*c3*x1*x2 + b3*c3*x1*x2 + a1*a2*b3*c3*x1*x2 + a1*a3*b3*c3*x1*x2 + b1*b3*c3*x1*x2 + a1*b1*b3*c3*x1*x2 + a2*b1*b3*c3*x1*x2 + b2*b3*c3*x1*x2 + a3*b2*b3*c3*x1*x2 + b1*b2*b3*c3*x1*x2 + a1*b1*b2*b3*c3*x1*x2 + a2*b1*b2*b3*c3*x1*x2 + a1*c1*c3*x1*x2 + a2*c1*c3*x1*x2 + a3*c1*c3*x1*x2 + a1*b1*c1*c3*x1*x2 + a2*b1*c1*c3*x1*x2 + a3*b1*c1*c3*x1*x2 + b2*c1*c3*x1*x2 + a1*b2*c1*c3*x1*x2 + a2*b2*c1*c3*x1*x2 + a3*b2*c1*c3*x1*x2 + b1*b2*c1*c3*x1*x2 + a1*b1*b2*c1*c3*x1*x2 + b3*c1*c3*x1*x2 + a1*b3*c1*c3*x1*x2 + a2*b3*c1*c3*x1*x2 + a3*b3*c1*c3*x1*x2 + b1*b3*c1*c3*x1*x2 + a1*b1*b3*c1*c3*x1*x2 + c2*c3*x1*x2 + b1*c2*c3*x1*x2 + a1*b1*b3*c2*c3*x1*x2 + a1*b2*b3*c2*c3*x1*x2 + b1*b3*c1*c2*c3*x1*x2 + b2*b3*c1*c2*c3*x1*x2 + (a3*b1*b2*x2*(1 + x2))/2 + (a1*a3*b1*b2*x2*(1 + x2))/2 + (a1*a2*b3*x2*(1 + x2))/2 + (b1*b3*x2*(1 + x2))/2 + (a1*a2*b1*b3*x2*(1 + x2))/2 + (a1*a3*b1*b3*x2*(1 + x2))/2 + (a3*b1*b2*c1*x2*(1 + x2))/2 + (a1*a3*b1*b2*c1*x2*(1 + x2))/2 + (a2*b1*b3*c1*x2*(1 + x2))/2 + (a1*a2*b1*b3*c1*x2*(1 + x2))/2 + (a3*b1*b3*c1*x2*(1 + x2))/2 + (a1*a3*b1*b3*c1*x2*(1 + x2))/2 + (a1*a3*b1*b2*c2*x2*(1 + x2))/2 + (a1*b1*b3*c2*x2*(1 + x2))/2 + (a1*a2*b1*b3*c2*x2*(1 + x2))/2 + (a1*a3*b1*b3*c2*x2*(1 + x2))/2 + (a1*b2*b3*c2*x2*(1 + x2))/2 + (a3*b1*b2*c1*c2*x2*(1 + x2))/2 + (a1*b1*b3*c1*c2*x2*(1 + x2))/2 + (a2*b1*b3*c1*c2*x2*(1 + x2))/2 + (a3*b1*b3*c1*c2*x2*(1 + x2))/2 + (a1*b1*b2*b3*c1*c2*x2*(1 + x2))/2 + (a1*b1*b2*c3*x2*(1 + x2))/2 + (a1*a2*b1*b2*c3*x2*(1 + x2))/2 + (a1*a3*b1*b2*c3*x2*(1 + x2))/2 + (a1*b1*b3*c3*x2*(1 + x2))/2 + (a1*a2*b1*b3*c3*x2*(1 + x2))/2 + (a1*a3*b1*b3*c3*x2*(1 + x2))/2 + (b1*b2*b3*c3*x2*(1 + x2))/2 + (a2*b1*b2*c1*c3*x2*(1 + x2))/2 + (a3*b1*b2*c1*c3*x2*(1 + x2))/2 + (a2*b1*b3*c1*c3*x2*(1 + x2))/2 + (a3*b1*b3*c1*c3*x2*(1 + x2))/2 + (a1*b1*b3*c2*c3*x2*(1 + x2))/2 + (a1*b1*b2*b3*c2*c3*x2*(1 + x2))/2 + (b1*b3*c1*c2*c3*x2*(1 + x2))/2 + (b1*b2*b3*c1*c2*c3*x2*(1 + x2))/2 + a1*a2*x3 + a1*a2*a3*x3 + a2*a3*b1*x3 + a1*a2*a3*b1*x3 + a1*a2*b2*x3 + a1*a2*a3*b2*x3 + b1*b2*x3 + a1*b1*b2*x3 + a3*b1*b2*x3 + a1*a2*a3*b1*b2*x3 + a1*a2*a3*b1*b3*x3 + a1*a2*b2*b3*x3 + a1*a3*b2*b3*x3 + a1*b1*b2*b3*x3 + a1*a3*b1*b2*b3*x3 + a1*a2*a3*b1*b2*b3*x3 + a1*a2*a3*c1*x3 + a2*b1*c1*x3 + a1*a2*a3*b2*c1*x3 + b1*b2*c1*x3 + a1*b1*b2*c1*x3 + a1*a3*b1*b2*c1*x3 + a2*a3*b1*b2*c1*x3 + a1*a2*a3*b3*c1*x3 + a2*a3*b1*b3*c1*x3 + b2*b3*c1*x3 + a1*b2*b3*c1*x3 + a2*b2*b3*c1*x3 + a3*b2*b3*c1*x3 + a1*a3*b2*b3*c1*x3 + a2*a3*b2*b3*c1*x3 + a2*b1*b2*b3*c1*x3 + a3*b1*b2*b3*c1*x3 + a1*a3*b1*b2*b3*c1*x3 + a1*c2*x3 + a1*a3*c2*x3 + b1*c2*x3 + a2*b1*c2*x3 + a3*b1*c2*x3 + a1*a3*b1*c2*x3 + a1*b2*c2*x3 + a1*a3*b2*c2*x3 + a1*b1*b2*c2*x3 + a2*b1*b2*c2*x3 + a1*a3*b1*b2*c2*x3 + a2*a3*b1*b2*c2*x3 + a1*a2*b3*c2*x3 + a1*a2*a3*b3*c2*x3 + b1*b3*c2*x3 + a1*b1*b3*c2*x3 + a1*a2*b1*b3*c2*x3 + a3*b1*b3*c2*x3 + a1*a3*b2*b3*c2*x3 + a2*b1*b2*b3*c2*x3 + a2*a3*b1*b2*b3*c2*x3 + a1*c1*c2*x3 + a1*a2*c1*c2*x3 + a1*a3*c1*c2*x3 + a2*b1*c1*c2*x3 + a1*b2*c1*c2*x3 + a1*a2*b2*c1*c2*x3 + a1*a3*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a1*a2*b1*b2*c1*c2*x3 + a2*a3*b1*b2*c1*c2*x3 + a1*a2*a3*b1*b2*c1*c2*x3 + a2*b3*c1*c2*x3 + a1*a2*b3*c1*c2*x3 + a2*a3*b3*c1*c2*x3 + b1*b3*c1*c2*x3 + a2*b1*b3*c1*c2*x3 + a3*b1*b3*c1*c2*x3 + a2*a3*b1*b3*c1*c2*x3 + b2*b3*c1*c2*x3 + a1*b2*b3*c1*c2*x3 + a1*a2*b2*b3*c1*c2*x3 + a3*b2*b3*c1*c2*x3 + b1*b2*b3*c1*c2*x3 + a1*b1*b2*b3*c1*c2*x3 + a2*b1*b2*b3*c1*c2*x3 + a1*a2*b1*b2*b3*c1*c2*x3 + a2*a3*b1*b2*b3*c1*c2*x3 + a1*a2*a3*b1*b2*b3*c1*c2*x3 + a1*a2*c3*x3 + a1*a2*b1*c3*x3 + a1*a2*b2*c3*x3 + b1*b2*c3*x3 + a1*b1*b2*c3*x3 + a2*b1*b2*c3*x3 + a1*a2*b1*b2*c3*x3 + a3*b1*b2*c3*x3 + a1*a2*b3*c3*x3 + a2*b1*b3*c3*x3 + a2*a3*b1*b3*c3*x3 + a1*b2*b3*c3*x3 + a1*a2*b2*b3*c3*x3 + b1*b2*b3*c3*x3 + a2*b1*b2*b3*c3*x3 + a3*b1*b2*b3*c3*x3 + a2*b1*c1*c3*x3 + b1*b2*c1*c3*x3 + a1*b1*b2*c1*c3*x3 + a1*a3*b1*b2*c1*c3*x3 + a2*a3*b1*b2*c1*c3*x3 + a2*b1*b3*c1*c3*x3 + a1*a2*b1*b3*c1*c3*x3 + a2*a3*b1*b3*c1*c3*x3 + a1*a2*a3*b1*b3*c1*c3*x3 + b1*b2*b3*c1*c3*x3 + a1*b1*b2*b3*c1*c3*x3 + a1*a2*b1*b2*b3*c1*c3*x3 + a1*a3*b1*b2*b3*c1*c3*x3 + a1*a2*a3*b1*b2*b3*c1*c3*x3 + a1*c2*c3*x3 + a1*a3*c2*c3*x3 + b1*c2*c3*x3 + a1*b1*c2*c3*x3 + a2*b1*c2*c3*x3 + a3*b1*c2*c3*x3 + a1*a3*b1*c2*c3*x3 + a1*b2*c2*c3*x3 + a1*a3*b2*c2*c3*x3 + a1*b1*b2*c2*c3*x3 + a3*b1*b2*c2*c3*x3 + a1*a3*b1*b2*c2*c3*x3 + a2*a3*b1*b2*c2*c3*x3 + a1*a2*a3*b1*b2*c2*c3*x3 + a1*a2*b3*c2*c3*x3 + a2*b1*b3*c2*c3*x3 + a1*a2*b1*b3*c2*c3*x3 + a1*a3*b1*b3*c2*c3*x3 + a1*a2*a3*b1*b3*c2*c3*x3 + a1*b2*b3*c2*c3*x3 + a1*a3*b2*b3*c2*c3*x3 + b1*b2*b3*c2*c3*x3 + a1*a2*b1*b2*b3*c2*c3*x3 + a1*a3*b1*b2*b3*c2*c3*x3 + a2*a3*b1*b2*b3*c2*c3*x3 + a1*a3*c1*c2*c3*x3 + a2*a3*c1*c2*c3*x3 + b1*c1*c2*c3*x3 + a1*a3*b1*c1*c2*c3*x3 + a2*a3*b1*c1*c2*c3*x3 + a1*a3*b2*c1*c2*c3*x3 + a2*a3*b2*c1*c2*c3*x3 + b1*b2*c1*c2*c3*x3 + a2*b1*b2*c1*c2*c3*x3 + a1*a2*b1*b2*c1*c2*c3*x3 + a3*b1*b2*c1*c2*c3*x3 + a1*b3*c1*c2*c3*x3 + a2*b3*c1*c2*c3*x3 + a1*a3*b3*c1*c2*c3*x3 + a2*a3*b3*c1*c2*c3*x3 + b1*b3*c1*c2*c3*x3 + a1*b1*b3*c1*c2*c3*x3 + a3*b1*b3*c1*c2*c3*x3 + a1*a3*b1*b3*c1*c2*c3*x3 + a2*a3*b1*b3*c1*c2*c3*x3 + a1*b2*b3*c1*c2*c3*x3 + a2*b2*b3*c1*c2*c3*x3 + a1*a3*b2*b3*c1*c2*c3*x3 + a2*a3*b2*b3*c1*c2*c3*x3 + a2*b1*b2*b3*c1*c2*c3*x3 + a1*a2*b1*b2*b3*c1*c2*c3*x3 + a3*b1*b2*b3*c1*c2*c3*x3 + a1*a2*x1*x3 + a2*a3*b1*x1*x3 + a1*a2*a3*b2*x1*x3 + a1*a2*b1*b2*x1*x3 + a2*a3*b1*b2*x1*x3 + a1*a2*a3*b1*b2*x1*x3 + a1*a2*a3*b3*x1*x3 + a1*a2*b1*b3*x1*x3 + a2*a3*b1*b3*x1*x3 + a1*a2*a3*b1*b3*x1*x3 + a1*a2*b1*b2*b3*x1*x3 + a1*a3*b1*b2*b3*x1*x3 + a2*c1*x1*x3 + a2*b1*c1*x1*x3 + a2*a3*b2*c1*x1*x3 + a2*a3*b1*b2*c1*x1*x3 + a2*a3*b3*c1*x1*x3 + a2*a3*b1*b3*c1*x1*x3 + a1*c2*x1*x3 + b1*c2*x1*x3 + a2*b1*c2*x1*x3 + a3*b1*c2*x1*x3 + a1*b2*c2*x1*x3 + a1*a2*b2*c2*x1*x3 + a1*a2*a3*b2*c2*x1*x3 + b1*b2*c2*x1*x3 + a2*b1*b2*c2*x1*x3 + a1*a2*b1*b2*c2*x1*x3 + a3*b1*b2*c2*x1*x3 + a1*a2*a3*b1*b2*c2*x1*x3 + a1*b3*c2*x1*x3 + a1*a2*b3*c2*x1*x3 + a1*a2*a3*b3*c2*x1*x3 + b1*b3*c2*x1*x3 + a2*b1*b3*c2*x1*x3 + a1*a2*b1*b3*c2*x1*x3 + a3*b1*b3*c2*x1*x3 + a1*a2*a3*b1*b3*c2*x1*x3 + b1*b2*b3*c2*x1*x3 + a1*b1*b2*b3*c2*x1*x3 + a2*b1*b2*b3*c2*x1*x3 + c1*c2*x1*x3 + b1*c1*c2*x1*x3 + b2*c1*c2*x1*x3 + a2*b2*c1*c2*x1*x3 + a2*a3*b2*c1*c2*x1*x3 + b1*b2*c1*c2*x1*x3 + a2*b1*b2*c1*c2*x1*x3 + a2*a3*b1*b2*c1*c2*x1*x3 + b3*c1*c2*x1*x3 + a2*b3*c1*c2*x1*x3 + a2*a3*b3*c1*c2*x1*x3 + b1*b3*c1*c2*x1*x3 + a2*b1*b3*c1*c2*x1*x3 + a2*a3*b1*b3*c1*c2*x1*x3 + a1*a2*b2*c3*x1*x3 + a1*a2*a3*b2*c3*x1*x3 + a1*a2*b1*b2*c3*x1*x3 + a1*a2*a3*b1*b2*c3*x1*x3 + a1*a2*b3*c3*x1*x3 + a1*a2*a3*b3*c3*x1*x3 + a1*a2*b1*b3*c3*x1*x3 + a1*a2*a3*b1*b3*c3*x1*x3 + a2*b2*c1*c3*x1*x3 + a2*a3*b2*c1*c3*x1*x3 + a2*b1*b2*c1*c3*x1*x3 + a2*a3*b1*b2*c1*c3*x1*x3 + a2*b3*c1*c3*x1*x3 + a2*a3*b3*c1*c3*x1*x3 + a2*b1*b3*c1*c3*x1*x3 + a2*a3*b1*b3*c1*c3*x1*x3 + a1*a2*b2*c2*c3*x1*x3 + a1*a3*b2*c2*c3*x1*x3 + a1*a2*b1*b2*c2*c3*x1*x3 + a1*a3*b1*b2*c2*c3*x1*x3 + a1*b3*c2*c3*x1*x3 + a1*a3*b3*c2*c3*x1*x3 + a1*b1*b3*c2*c3*x1*x3 + a1*a3*b1*b3*c2*c3*x1*x3 + a1*b2*b3*c2*c3*x1*x3 + a1*a2*b2*b3*c2*c3*x1*x3 + a1*b1*b2*b3*c2*c3*x1*x3 + a1*a2*b1*b2*b3*c2*c3*x1*x3 + a2*b2*c1*c2*c3*x1*x3 + a3*b2*c1*c2*c3*x1*x3 + a2*b1*b2*c1*c2*c3*x1*x3 + a3*b1*b2*c1*c2*c3*x1*x3 + b3*c1*c2*c3*x1*x3 + a3*b3*c1*c2*c3*x1*x3 + b1*b3*c1*c2*c3*x1*x3 + a3*b1*b3*c1*c2*c3*x1*x3 + b2*b3*c1*c2*c3*x1*x3 + a2*b2*b3*c1*c2*c3*x1*x3 + b1*b2*b3*c1*c2*c3*x1*x3 + a2*b1*b2*b3*c1*c2*c3*x1*x3 + a1*x2*x3 + a1*a3*x2*x3 + b1*x2*x3 + a1*b1*x2*x3 + a2*b1*x2*x3 + a3*b1*x2*x3 + a1*a3*b1*x2*x3 + a2*a3*b1*x2*x3 + a1*b2*x2*x3 + a1*a3*b2*x2*x3 + a1*a2*b1*b2*x2*x3 + a1*a3*b1*b2*x2*x3 + a1*a2*a3*b1*b2*x2*x3 + a1*b3*x2*x3 + a1*a2*b3*x2*x3 + a1*b1*b3*x2*x3 + a1*a2*b1*b3*x2*x3 + a1*a3*b1*b3*x2*x3 + a1*a2*a3*b1*b3*x2*x3 + a1*b1*b2*b3*x2*x3 + a1*a2*b1*b2*b3*x2*x3 + a1*a3*b1*b2*b3*x2*x3 + c1*x2*x3 + a1*c1*x2*x3 + a2*c1*x2*x3 + a3*c1*x2*x3 + a1*a3*c1*x2*x3 + a2*a3*c1*x2*x3 + b1*c1*x2*x3 + a1*b1*c1*x2*x3 + a2*b1*c1*x2*x3 + a3*b1*c1*x2*x3 + a1*a3*b1*c1*x2*x3 + a2*a3*b1*c1*x2*x3 + b2*c1*x2*x3 + a1*b2*c1*x2*x3 + a2*b2*c1*x2*x3 + a3*b2*c1*x2*x3 + a1*a3*b2*c1*x2*x3 + a2*a3*b2*c1*x2*x3 + a1*a2*b1*b2*c1*x2*x3 + a3*b1*b2*c1*x2*x3 + a1*a2*a3*b1*b2*c1*x2*x3 + b3*c1*x2*x3 + a1*a3*b3*c1*x2*x3 + a2*a3*b3*c1*x2*x3 + b1*b3*c1*x2*x3 + a1*b1*b3*c1*x2*x3 + a1*a2*b1*b3*c1*x2*x3 + a3*b1*b3*c1*x2*x3 + a1*a2*a3*b1*b3*c1*x2*x3 + a1*b2*b3*c1*x2*x3 + a2*b2*b3*c1*x2*x3 + a3*b2*b3*c1*x2*x3 + b1*b2*b3*c1*x2*x3 + a1*b1*b2*b3*c1*x2*x3 + a1*c2*x2*x3 + a1*a3*c2*x2*x3 + b1*c2*x2*x3 + a1*b1*c2*x2*x3 + a2*b1*c2*x2*x3 + a3*b1*c2*x2*x3 + a1*a3*b1*c2*x2*x3 + a2*a3*b1*c2*x2*x3 + a1*b2*c2*x2*x3 + a1*a3*b2*c2*x2*x3 + a1*a2*b1*b2*c2*x2*x3 + a2*a3*b1*b2*c2*x2*x3 + a1*a2*a3*b1*b2*c2*x2*x3 + a1*a3*b3*c2*x2*x3 + a2*b1*b3*c2*x2*x3 + a1*a2*b1*b3*c2*x2*x3 + a2*a3*b1*b3*c2*x2*x3 + a1*a2*a3*b1*b3*c2*x2*x3 + a1*b2*b3*c2*x2*x3 + a3*b1*b2*b3*c2*x2*x3 + b1*b2*c1*c2*x2*x3 + a2*b1*b2*c1*c2*x2*x3 + a3*b1*b2*c1*c2*x2*x3 + a2*a3*b1*b2*c1*c2*x2*x3 + a1*b1*b3*c1*c2*x2*x3 + a2*b1*b3*c1*c2*x2*x3 + a3*b1*b3*c1*c2*x2*x3 + a1*a3*b1*b3*c1*c2*x2*x3 + a2*a3*b1*b3*c1*c2*x2*x3 + b2*b3*c1*c2*x2*x3 + a3*b2*b3*c1*c2*x2*x3 + a1*b1*b2*b3*c1*c2*x2*x3 + a3*b1*b2*b3*c1*c2*x2*x3 + a1*a3*b1*b2*b3*c1*c2*x2*x3 + a1*c3*x2*x3 + a1*a3*c3*x2*x3 + b1*c3*x2*x3 + a1*b1*c3*x2*x3 + a2*b1*c3*x2*x3 + a3*b1*c3*x2*x3 + a1*a3*b1*c3*x2*x3 + a2*a3*b1*c3*x2*x3 + a1*b2*c3*x2*x3 + a1*a3*b2*c3*x2*x3 + b1*b2*c3*x2*x3 + a1*b1*b2*c3*x2*x3 + a2*b1*b2*c3*x2*x3 + a1*a2*b1*b2*c3*x2*x3 + a3*b1*b2*c3*x2*x3 + a2*a3*b1*b2*c3*x2*x3 + a1*a2*a3*b1*b2*c3*x2*x3 + a1*b3*c3*x2*x3 + a1*a3*b3*c3*x2*x3 + b1*b3*c3*x2*x3 + a2*b1*b3*c3*x2*x3 + a1*a2*b1*b3*c3*x2*x3 + a3*b1*b3*c3*x2*x3 + a2*a3*b1*b3*c3*x2*x3 + a1*a2*a3*b1*b3*c3*x2*x3 + a1*b2*b3*c3*x2*x3 + b1*b2*b3*c3*x2*x3 + a2*b1*b2*b3*c3*x2*x3 + a3*b1*b2*b3*c3*x2*x3 + c1*c3*x2*x3 + a1*c1*c3*x2*x3 + a2*c1*c3*x2*x3 + a3*c1*c3*x2*x3 + b1*c1*c3*x2*x3 + a1*b1*c1*c3*x2*x3 + a2*b1*c1*c3*x2*x3 + a3*b1*c1*c3*x2*x3 + b2*c1*c3*x2*x3 + a1*b2*c1*c3*x2*x3 + a2*b2*c1*c3*x2*x3 + a3*b2*c1*c3*x2*x3 + b1*b2*c1*c3*x2*x3 + a1*a2*b1*b2*c1*c3*x2*x3 + a1*a3*b1*b2*c1*c3*x2*x3 + a2*a3*b1*b2*c1*c3*x2*x3 + a1*b3*c1*c3*x2*x3 + a2*b3*c1*c3*x2*x3 + a3*b3*c1*c3*x2*x3 + b1*b3*c1*c3*x2*x3 + a1*b1*b3*c1*c3*x2*x3 + a2*a3*b1*b3*c1*c3*x2*x3 + a1*b2*b3*c1*c3*x2*x3 + a2*b2*b3*c1*c3*x2*x3 + a3*b2*b3*c1*c3*x2*x3 + b1*b2*b3*c1*c3*x2*x3 + a2*b1*b2*b3*c1*c3*x2*x3 + a1*a2*b1*b2*b3*c1*c3*x2*x3 + a3*b1*b2*b3*c1*c3*x2*x3 + a1*a3*b1*b2*b3*c1*c3*x2*x3 + a1*c2*c3*x2*x3 + b1*c2*c3*x2*x3 + a1*b1*c2*c3*x2*x3 + a2*b1*c2*c3*x2*x3 + a3*b1*c2*c3*x2*x3 + a1*b2*c2*c3*x2*x3 + b1*b2*c2*c3*x2*x3 + a2*b1*b2*c2*c3*x2*x3 + a1*a2*b1*b2*c2*c3*x2*x3 + a3*b1*b2*c2*c3*x2*x3 + a1*a3*b1*b2*c2*c3*x2*x3 + a1*b3*c2*c3*x2*x3 + b1*b3*c2*c3*x2*x3 + a2*b1*b3*c2*c3*x2*x3 + a3*b1*b3*c2*c3*x2*x3 + a1*a3*b1*b3*c2*c3*x2*x3 + a1*b2*b3*c2*c3*x2*x3 + b1*b2*b3*c2*c3*x2*x3 + a1*b1*b2*b3*c2*c3*x2*x3 + a2*b1*b2*b3*c2*c3*x2*x3 + a1*a2*b1*b2*b3*c2*c3*x2*x3 + b1*b2*c1*c2*c3*x2*x3 + a2*b1*b2*c1*c2*c3*x2*x3 + a3*b1*b2*c1*c2*c3*x2*x3 + b1*b3*c1*c2*c3*x2*x3 + a3*b1*b3*c1*c2*c3*x2*x3 + a2*b1*b2*b3*c1*c2*c3*x2*x3 + (a2*a3*b1*x3*(1 + x3))/2 + (b1*b2*x3*(1 + x3))/2 + (a1*b1*b2*x3*(1 + x3))/2 + (a3*b1*b2*x3*(1 + x3))/2 + (a1*a3*b1*b2*x3*(1 + x3))/2 + (a1*a2*b3*x3*(1 + x3))/2 + (a2*a3*b1*b3*x3*(1 + x3))/2 + (a1*a3*b2*b3*x3*(1 + x3))/2 + (a1*b1*b2*b3*x3*(1 + x3))/2 + (b1*b2*c1*x3*(1 + x3))/2 + (a1*b1*b2*c1*x3*(1 + x3))/2 + (a2*b1*b2*c1*x3*(1 + x3))/2 + (a3*b1*b2*c1*x3*(1 + x3))/2 + (a1*a3*b1*b2*c1*x3*(1 + x3))/2 + (a2*a3*b1*b2*c1*x3*(1 + x3))/2 + (a2*b1*b3*c1*x3*(1 + x3))/2 + (b2*b3*c1*x3*(1 + x3))/2 + (a1*b2*b3*c1*x3*(1 + x3))/2 + (a2*b2*b3*c1*x3*(1 + x3))/2 + (a3*b2*b3*c1*x3*(1 + x3))/2 + (a1*a3*b2*b3*c1*x3*(1 + x3))/2 + (a2*a3*b2*b3*c1*x3*(1 + x3))/2 + (a2*a3*b1*c2*x3*(1 + x3))/2 + (b1*b2*c2*x3*(1 + x3))/2 + (a1*b1*b2*c2*x3*(1 + x3))/2 + (a1*a3*b1*b2*c2*x3*(1 + x3))/2 + (a2*a3*b1*b2*c2*x3*(1 + x3))/2 + (a1*b1*b3*c2*x3*(1 + x3))/2 + (a1*a3*b2*b3*c2*x3*(1 + x3))/2 + (b1*b2*b3*c2*x3*(1 + x3))/2 + (a3*b1*b2*b3*c2*x3*(1 + x3))/2 + (b1*b2*c1*c2*x3*(1 + x3))/2 + (a3*b1*b2*c1*c2*x3*(1 + x3))/2 + (b1*b3*c1*c2*x3*(1 + x3))/2 + (b2*b3*c1*c2*x3*(1 + x3))/2 + (a3*b2*b3*c1*c2*x3*(1 + x3))/2 + (b1*b2*b3*c1*c2*x3*(1 + x3))/2 + (a2*a3*b1*c3*x3*(1 + x3))/2 + (b1*b2*c3*x3*(1 + x3))/2 + (a1*b1*b2*c3*x3*(1 + x3))/2 + (a2*b1*b2*c3*x3*(1 + x3))/2 + (a3*b1*b2*c3*x3*(1 + x3))/2 + (a1*a3*b1*b2*c3*x3*(1 + x3))/2 + (a2*a3*b1*b2*c3*x3*(1 + x3))/2 + (a2*b1*b3*c3*x3*(1 + x3))/2 + (a1*b2*b3*c3*x3*(1 + x3))/2 + (a1*a3*b2*b3*c3*x3*(1 + x3))/2 + (b1*b2*b3*c3*x3*(1 + x3))/2 + (a2*b1*b2*b3*c3*x3*(1 + x3))/2 + (a3*b1*b2*b3*c3*x3*(1 + x3))/2 + (b1*b2*c1*c3*x3*(1 + x3))/2 + (a1*b1*b2*c1*c3*x3*(1 + x3))/2 + (a2*b1*b2*c1*c3*x3*(1 + x3))/2 + (b1*b2*b3*c1*c3*x3*(1 + x3))/2 + (a1*b1*b2*b3*c1*c3*x3*(1 + x3))/2 + (a2*b1*b2*b3*c1*c3*x3*(1 + x3))/2 + (b1*c2*c3*x3*(1 + x3))/2 + (a2*b1*c2*c3*x3*(1 + x3))/2 + (a3*b1*c2*c3*x3*(1 + x3))/2 + (b1*b2*c2*c3*x3*(1 + x3))/2 + (a1*b1*b2*c2*c3*x3*(1 + x3))/2 + (a2*b1*b2*c2*c3*x3*(1 + x3))/2 + (a3*b1*b2*c2*c3*x3*(1 + x3))/2 + (b1*b3*c2*c3*x3*(1 + x3))/2 + (a2*b1*b3*c2*c3*x3*(1 + x3))/2 + (b1*b2*b3*c2*c3*x3*(1 + x3))/2 + (a1*b1*b2*b3*c2*c3*x3*(1 + x3))/2 + (a2*b1*b2*b3*c2*c3*x3*(1 + x3))/2 + (b1*b2*c1*c2*c3*x3*(1 + x3))/2 + (b1*b2*b3*c1*c2*c3*x3*(1 + x3))/2 + a2*a3*b1*y1 + a3*b2*y1 + a1*a3*b2*y1 + a1*a2*a3*b2*y1 + a1*a3*b1*b2*y1 + a2*a3*b1*b2*y1 + a1*a2*a3*b1*b2*y1 + a2*b3*y1 + a2*a3*b3*y1 + a1*a2*a3*b3*y1 + a2*b1*b3*y1 + a1*a2*b1*b3*y1 + a2*a3*b1*b3*y1 + b2*b3*y1 + a1*b2*b3*y1 + a2*b2*b3*y1 + a3*b2*b3*y1 + a1*a3*b2*b3*y1 + a3*b1*b2*b3*y1 + a1*a3*b1*b2*b3*y1 + a2*a3*b1*b2*b3*y1 + a1*a2*a3*b1*b2*b3*y1 + a2*a3*c1*y1 + a2*a3*b2*c1*y1 + a2*a3*b1*b2*c1*y1 + a2*b3*c1*y1 + a2*a3*b3*c1*y1 + a1*a2*a3*b3*c1*y1 + a2*b1*b3*c1*y1 + b2*b3*c1*y1 + a1*a2*b2*b3*c1*y1 + a3*b2*b3*c1*y1 + a2*b1*b2*b3*c1*y1 + a1*a2*a3*c2*y1 + a2*a3*b1*c2*y1 + a1*a3*b2*c2*y1 + a2*a3*b2*c2*y1 + a1*a2*a3*b2*c2*y1 + a3*b1*b2*c2*y1 + a2*a3*b1*b2*c2*y1 + a1*a2*a3*b1*b2*c2*y1 + b3*c2*y1 + a3*b3*c2*y1 + a1*a3*b3*c2*y1 + a2*a3*b3*c2*y1 + a1*a2*a3*b3*c2*y1 + a1*b1*b3*c2*y1 + a2*b1*b3*c2*y1 + a3*b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + a2*a3*b1*b3*c2*y1 + a1*a2*a3*b1*b3*c2*y1 + a1*a2*b2*b3*c2*y1 + a1*a3*b2*b3*c2*y1 + a2*a3*b2*b3*c2*y1 + a1*a2*b1*b2*b3*c2*y1 + a3*b1*b2*b3*c2*y1 + a2*a3*b1*b2*b3*c2*y1 + a3*c1*c2*y1 + a1*a3*b2*c1*c2*y1 + a3*b1*b2*c1*c2*y1 + b3*c1*c2*y1 + a1*b3*c1*c2*y1 + a2*b3*c1*c2*y1 + a1*a2*b3*c1*c2*y1 + a3*b3*c1*c2*y1 + b1*b3*c1*c2*y1 + a1*a2*b1*b3*c1*c2*y1 + a3*b1*b3*c1*c2*y1 + a2*b2*b3*c1*c2*y1 + a3*b2*b3*c1*c2*y1 + b1*b2*b3*c1*c2*y1 + a1*b1*b2*b3*c1*c2*y1 + a1*a2*c3*y1 + a1*a2*a3*c3*y1 + a2*b1*c3*y1 + a1*a2*b1*c3*y1 + a1*a2*a3*b1*c3*y1 + b2*c3*y1 + a1*b2*c3*y1 + a1*a2*b2*c3*y1 + a3*b2*c3*y1 + a1*a3*b2*c3*y1 + a2*a3*b2*c3*y1 + a1*a2*a3*b2*c3*y1 + a1*b1*b2*c3*y1 + a1*a3*b1*b2*c3*y1 + a2*a3*b1*b2*c3*y1 + a2*b3*c3*y1 + a1*a2*b3*c3*y1 + a1*a2*a3*b3*c3*y1 + a1*b2*b3*c3*y1 + a2*b2*b3*c3*y1 + a1*a3*b2*b3*c3*y1 + a2*a3*b2*b3*c3*y1 + a2*b1*b2*b3*c3*y1 + a1*a2*b1*b2*b3*c3*y1 + a2*c1*c3*y1 + a2*b1*c1*c3*y1 + a1*b2*c1*c3*y1 + a2*b2*c1*c3*y1 + a1*a2*b2*c1*c3*y1 + a1*a3*b2*c1*c3*y1 + a1*a2*b1*b2*c1*c3*y1 + a3*b1*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a2*a3*b3*c1*c3*y1 + a1*a2*b2*b3*c1*c3*y1 + a3*b2*b3*c1*c3*y1 + a2*b1*b2*b3*c1*c3*y1 + c2*c3*y1 + a1*a2*c2*c3*y1 + a2*a3*c2*c3*y1 + b1*c2*c3*y1 + a1*b1*c2*c3*y1 + a2*b1*c2*c3*y1 + a1*a2*b1*c2*c3*y1 + a1*a3*b1*c2*c3*y1 + b2*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + a3*b2*c2*c3*y1 + a1*a3*b2*c2*c3*y1 + a1*a2*a3*b2*c2*c3*y1 + a3*b1*b2*c2*c3*y1 + a1*a3*b1*b2*c2*c3*y1 + a2*a3*b1*b2*c2*c3*y1 + a1*a2*a3*b1*b2*c2*c3*y1 + b3*c2*c3*y1 + a1*b3*c2*c3*y1 + a3*b3*c2*c3*y1 + a1*a3*b3*c2*c3*y1 + a2*a3*b3*c2*c3*y1 + b1*b3*c2*c3*y1 + a1*b1*b3*c2*c3*y1 + a1*a2*b1*b3*c2*c3*y1 + b2*b3*c2*c3*y1 + a1*a2*b2*b3*c2*c3*y1 + a1*a3*b2*b3*c2*c3*y1 + a1*a2*a3*b2*b3*c2*c3*y1 + a1*b1*b2*b3*c2*c3*y1 + a3*b1*b2*b3*c2*c3*y1 + a1*a3*b1*b2*b3*c2*c3*y1 + a2*a3*b1*b2*b3*c2*c3*y1 + a1*a2*a3*b1*b2*b3*c2*c3*y1 + a3*c1*c2*c3*y1 + a1*a3*c1*c2*c3*y1 + a2*a3*c1*c2*c3*y1 + a2*b1*c1*c2*c3*y1 + a3*b1*c1*c2*c3*y1 + a1*a3*b1*c1*c2*c3*y1 + a2*a3*b1*c1*c2*c3*y1 + a1*a3*b2*c1*c2*c3*y1 + b1*b2*c1*c2*c3*y1 + a2*a3*b1*b2*c1*c2*c3*y1 + a3*b3*c1*c2*c3*y1 + a1*a3*b3*c1*c2*c3*y1 + a2*a3*b3*c1*c2*c3*y1 + b1*b3*c1*c2*c3*y1 + a2*b1*b3*c1*c2*c3*y1 + a1*b2*b3*c1*c2*c3*y1 + a2*b2*b3*c1*c2*c3*y1 + a3*b2*b3*c1*c2*c3*y1 + a2*a3*b2*b3*c1*c2*c3*y1 + a3*b1*b2*b3*c1*c2*c3*y1 + a2*a3*b1*b2*b3*c1*c2*c3*y1 + a2*a3*x1*y1 + a2*a3*b1*x1*y1 + a2*a3*b2*x1*y1 + a3*b1*b2*x1*y1 + a1*a2*b3*x1*y1 + a2*a3*b3*x1*y1 + a2*b1*b3*x1*y1 + b2*b3*x1*y1 + a3*b2*b3*x1*y1 + a2*b1*b3*c1*x1*y1 + a3*b1*b2*c2*x1*y1 + b1*b3*c2*x1*y1 + a1*b1*b3*c2*x1*y1 + a2*b1*b3*c2*x1*y1 + a1*b2*b3*c2*x1*y1 + a3*b2*b3*c2*x1*y1 + b1*b3*c1*c2*x1*y1 + b1*b2*b3*c1*c2*x1*y1 + b1*b2*c3*x1*y1 + a2*b1*b2*c3*x1*y1 + a3*b1*b2*c3*x1*y1 + a2*b1*b3*c3*x1*y1 + b2*b3*c3*x1*y1 + a3*b2*b3*c3*x1*y1 + c2*c3*x1*y1 + b1*b3*c2*c3*x1*y1 + b1*b2*b3*c2*c3*x1*y1 + a2*a3*x2*y1 + a3*b1*x2*y1 + a1*a3*b1*x2*y1 + a2*a3*b1*x2*y1 + a1*a3*b2*x2*y1 + a2*a3*b2*x2*y1 + a3*b1*b2*x2*y1 + a1*a3*b1*b2*x2*y1 + a2*a3*b1*b2*x2*y1 + a1*a3*b3*x2*y1 + a2*a3*b3*x2*y1 + b1*b3*x2*y1 + a1*b1*b3*x2*y1 + a1*a2*b1*b3*x2*y1 + b2*b3*x2*y1 + a1*b2*b3*x2*y1 + a1*a2*b2*b3*x2*y1 + a3*b2*b3*x2*y1 + a1*a3*c1*x2*y1 + a1*a3*b1*c1*x2*y1 + a3*b2*c1*x2*y1 + a1*a3*b2*c1*x2*y1 + a3*b1*b2*c1*x2*y1 + a2*b3*c1*x2*y1 + a1*a2*b3*c1*x2*y1 + a3*b3*c1*x2*y1 + a1*a3*b3*c1*x2*y1 + a2*b1*b3*c1*x2*y1 + a3*b1*b3*c1*x2*y1 + b2*b3*c1*x2*y1 + a2*b2*b3*c1*x2*y1 + b1*b2*b3*c1*x2*y1 + a2*b1*b2*b3*c1*x2*y1 + a1*a3*c2*x2*y1 + a3*b1*c2*x2*y1 + a1*a3*b1*c2*x2*y1 + a1*a3*b2*c2*x2*y1 + a3*b1*b2*c2*x2*y1 + a1*b3*c2*x2*y1 + a1*a2*b3*c2*x2*y1 + a1*a3*b3*c2*x2*y1 + b1*b3*c2*x2*y1 + a1*b1*b3*c2*x2*y1 + a3*b1*b3*c2*x2*y1 + a1*b2*b3*c2*x2*y1 + a3*b2*b3*c2*x2*y1 + b1*b2*b3*c2*x2*y1 + a1*b1*b2*b3*c2*x2*y1 + a2*b1*b2*b3*c2*x2*y1 + a3*c1*c2*x2*y1 + a3*b1*c1*c2*x2*y1 + a3*b2*c1*c2*x2*y1 + a1*b3*c1*c2*x2*y1 + a2*b3*c1*c2*x2*y1 + a3*b3*c1*c2*x2*y1 + b1*b3*c1*c2*x2*y1 + a1*b2*b3*c1*c2*x2*y1 + b1*b2*b3*c1*c2*x2*y1 + a1*a2*c3*x2*y1 + a1*a3*c3*x2*y1 + b1*c3*x2*y1 + a1*b1*c3*x2*y1 + a2*b1*c3*x2*y1 + a1*a2*b1*c3*x2*y1 + a3*b1*c3*x2*y1 + a1*a3*b1*c3*x2*y1 + a1*a2*b2*c3*x2*y1 + a1*a3*b2*c3*x2*y1 + b1*b2*c3*x2*y1 + a1*b1*b2*c3*x2*y1 + a2*b1*b2*c3*x2*y1 + a3*b1*b2*c3*x2*y1 + a1*a2*b3*c3*x2*y1 + a1*a3*b3*c3*x2*y1 + b1*b3*c3*x2*y1 + a1*b1*b3*c3*x2*y1 + a2*b1*b3*c3*x2*y1 + b2*b3*c3*x2*y1 + a3*b2*b3*c3*x2*y1 + a1*b1*b2*b3*c3*x2*y1 + a2*b1*b2*b3*c3*x2*y1 + a1*c1*c3*x2*y1 + a2*c1*c3*x2*y1 + a3*c1*c3*x2*y1 + a1*b1*c1*c3*x2*y1 + a2*b1*c1*c3*x2*y1 + a3*b1*c1*c3*x2*y1 + b2*c1*c3*x2*y1 + a1*b2*c1*c3*x2*y1 + a2*b2*c1*c3*x2*y1 + a3*b2*c1*c3*x2*y1 + b1*b2*c1*c3*x2*y1 + a1*b1*b2*c1*c3*x2*y1 + b3*c1*c3*x2*y1 + a1*b3*c1*c3*x2*y1 + a2*b3*c1*c3*x2*y1 + a3*b3*c1*c3*x2*y1 + b1*b3*c1*c3*x2*y1 + a1*b1*b3*c1*c3*x2*y1 + c2*c3*x2*y1 + b1*c2*c3*x2*y1 + a1*b1*b3*c2*c3*x2*y1 + a1*b2*b3*c2*c3*x2*y1 + b1*b3*c1*c2*c3*x2*y1 + b2*b3*c1*c2*c3*x2*y1 + a2*x3*y1 + a1*a2*x3*y1 + a2*a3*b1*x3*y1 + a2*b2*x3*y1 + a1*a2*a3*b2*x3*y1 + a2*b1*b2*x3*y1 + a1*a2*b1*b2*x3*y1 + a1*a2*a3*b1*b2*x3*y1 + a2*b3*x3*y1 + a1*a2*a3*b3*x3*y1 + a2*b1*b3*x3*y1 + a1*a2*b1*b3*x3*y1 + a1*a2*a3*b1*b3*x3*y1 + a2*b2*b3*x3*y1 + a3*b2*b3*x3*y1 + a2*b1*b2*b3*x3*y1 + a1*a2*b1*b2*b3*x3*y1 + a3*b1*b2*b3*x3*y1 + a1*a3*b1*b2*b3*x3*y1 + a2*c1*x3*y1 + a2*b1*c1*x3*y1 + a2*a3*b2*c1*x3*y1 + a2*a3*b1*b2*c1*x3*y1 + a2*a3*b3*c1*x3*y1 + a2*a3*b1*b3*c1*x3*y1 + c2*x3*y1 + a1*c2*x3*y1 + b1*c2*x3*y1 + a2*b1*c2*x3*y1 + a3*b1*c2*x3*y1 + b2*c2*x3*y1 + a1*b2*c2*x3*y1 + a1*a2*b2*c2*x3*y1 + a1*a2*a3*b2*c2*x3*y1 + b1*b2*c2*x3*y1 + a1*a2*b1*b2*c2*x3*y1 + a3*b1*b2*c2*x3*y1 + a2*a3*b1*b2*c2*x3*y1 + a1*a2*a3*b1*b2*c2*x3*y1 + b3*c2*x3*y1 + a1*b3*c2*x3*y1 + a1*a2*b3*c2*x3*y1 + a1*a2*a3*b3*c2*x3*y1 + b1*b3*c2*x3*y1 + a1*a2*b1*b3*c2*x3*y1 + a3*b1*b3*c2*x3*y1 + a2*a3*b1*b3*c2*x3*y1 + a1*a2*a3*b1*b3*c2*x3*y1 + b2*b3*c2*x3*y1 + a1*b1*b2*b3*c2*x3*y1 + a2*b1*b2*b3*c2*x3*y1 + c1*c2*x3*y1 + b1*c1*c2*x3*y1 + b2*c1*c2*x3*y1 + a2*b2*c1*c2*x3*y1 + a2*a3*b2*c1*c2*x3*y1 + b1*b2*c1*c2*x3*y1 + a2*b1*b2*c1*c2*x3*y1 + a2*a3*b1*b2*c1*c2*x3*y1 + b3*c1*c2*x3*y1 + a2*b3*c1*c2*x3*y1 + a2*a3*b3*c1*c2*x3*y1 + b1*b3*c1*c2*x3*y1 + a2*b1*b3*c1*c2*x3*y1 + a2*a3*b1*b3*c1*c2*x3*y1 + a1*a2*b2*c3*x3*y1 + a1*a2*a3*b2*c3*x3*y1 + a2*b1*b2*c3*x3*y1 + a1*a2*b1*b2*c3*x3*y1 + a2*a3*b1*b2*c3*x3*y1 + a1*a2*a3*b1*b2*c3*x3*y1 + a1*a2*b3*c3*x3*y1 + a1*a2*a3*b3*c3*x3*y1 + a2*b1*b3*c3*x3*y1 + a1*a2*b1*b3*c3*x3*y1 + a2*a3*b1*b3*c3*x3*y1 + a1*a2*a3*b1*b3*c3*x3*y1 + a2*b2*c1*c3*x3*y1 + a2*a3*b2*c1*c3*x3*y1 + a2*b1*b2*c1*c3*x3*y1 + a2*a3*b1*b2*c1*c3*x3*y1 + a2*b3*c1*c3*x3*y1 + a2*a3*b3*c1*c3*x3*y1 + a2*b1*b3*c1*c3*x3*y1 + a2*a3*b1*b3*c1*c3*x3*y1 + a1*a2*b2*c2*c3*x3*y1 + a1*a3*b2*c2*c3*x3*y1 + a2*b1*b2*c2*c3*x3*y1 + a1*a2*b1*b2*c2*c3*x3*y1 + a3*b1*b2*c2*c3*x3*y1 + a1*a3*b1*b2*c2*c3*x3*y1 + a1*b3*c2*c3*x3*y1 + a1*a3*b3*c2*c3*x3*y1 + b1*b3*c2*c3*x3*y1 + a1*b1*b3*c2*c3*x3*y1 + a3*b1*b3*c2*c3*x3*y1 + a1*a3*b1*b3*c2*c3*x3*y1 + a1*b2*b3*c2*c3*x3*y1 + a1*a2*b2*b3*c2*c3*x3*y1 + b1*b2*b3*c2*c3*x3*y1 + a1*b1*b2*b3*c2*c3*x3*y1 + a2*b1*b2*b3*c2*c3*x3*y1 + a1*a2*b1*b2*b3*c2*c3*x3*y1 + a2*b2*c1*c2*c3*x3*y1 + a3*b2*c1*c2*c3*x3*y1 + a2*b1*b2*c1*c2*c3*x3*y1 + a3*b1*b2*c1*c2*c3*x3*y1 + b3*c1*c2*c3*x3*y1 + a3*b3*c1*c2*c3*x3*y1 + b1*b3*c1*c2*c3*x3*y1 + a3*b1*b3*c1*c2*c3*x3*y1 + b2*b3*c1*c2*c3*x3*y1 + a2*b2*b3*c1*c2*c3*x3*y1 + b1*b2*b3*c1*c2*c3*x3*y1 + a2*b1*b2*b3*c1*c2*c3*x3*y1 + (a2*a3*y1*(1 + y1))/2 + (a2*a3*b1*y1*(1 + y1))/2 + (a2*a3*b2*y1*(1 + y1))/2 + (a3*b1*b2*y1*(1 + y1))/2 + (a1*a2*b3*y1*(1 + y1))/2 + (a2*a3*b3*y1*(1 + y1))/2 + (b2*b3*y1*(1 + y1))/2 + (a1*b2*b3*y1*(1 + y1))/2 + (a2*b2*b3*y1*(1 + y1))/2 + (a3*b2*b3*y1*(1 + y1))/2 + (a2*b1*b3*c1*y1*(1 + y1))/2 + (b2*b3*c1*y1*(1 + y1))/2 + (b1*b2*b3*c1*y1*(1 + y1))/2 + (a3*b1*b2*c2*y1*(1 + y1))/2 + (b1*b3*c2*y1*(1 + y1))/2 + (a1*b1*b3*c2*y1*(1 + y1))/2 + (a2*b1*b3*c2*y1*(1 + y1))/2 + (a1*b2*b3*c2*y1*(1 + y1))/2 + (a3*b2*b3*c2*y1*(1 + y1))/2 + (b1*b3*c1*c2*y1*(1 + y1))/2 + (b1*b2*b3*c1*c2*y1*(1 + y1))/2 + (b1*b2*c3*y1*(1 + y1))/2 + (a2*b1*b2*c3*y1*(1 + y1))/2 + (a3*b1*b2*c3*y1*(1 + y1))/2 + (a2*b1*b3*c3*y1*(1 + y1))/2 + (b2*b3*c3*y1*(1 + y1))/2 + (a3*b2*b3*c3*y1*(1 + y1))/2 + (c2*c3*y1*(1 + y1))/2 + (b1*b3*c2*c3*y1*(1 + y1))/2 + (b1*b2*b3*c2*c3*y1*(1 + y1))/2 + a1*a3*y2 + a3*b1*y2 + a2*a3*b1*y2 + a1*a2*a3*b2*y2 + a3*b1*b2*y2 + a1*a3*b1*b2*y2 + a2*a3*b1*b2*y2 + a1*a2*a3*b1*b2*y2 + a1*a2*b3*y2 + a1*a2*a3*b3*y2 + a2*b1*b3*y2 + a2*a3*b1*b3*y2 + a1*a2*b2*b3*y2 + a1*a3*b2*b3*y2 + a1*a3*b1*b2*b3*y2 + a1*a2*a3*b1*b2*b3*y2 + a2*a3*c1*y2 + a1*a2*a3*c1*y2 + a3*b1*c1*y2 + a1*a2*a3*b1*c1*y2 + a3*b2*c1*y2 + a3*b1*b2*c1*y2 + a1*a3*b1*b2*c1*y2 + a2*a3*b1*b2*c1*y2 + b3*c1*y2 + a2*b3*c1*y2 + a3*b3*c1*y2 + a2*a3*b3*c1*y2 + b1*b3*c1*y2 + a1*b1*b3*c1*y2 + a2*b1*b3*c1*y2 + a2*a3*b1*b3*c1*y2 + a3*b2*b3*c1*y2 + a1*a3*b2*b3*c1*y2 + a2*a3*b2*b3*c1*y2 + b1*b2*b3*c1*y2 + a2*b1*b2*b3*c1*y2 + a1*a2*b1*b2*b3*c1*y2 + a1*a3*b1*b2*b3*c1*y2 + a1*a3*c2*y2 + a1*a2*a3*c2*y2 + a3*b1*c2*y2 + a1*a3*b1*c2*y2 + a2*a3*b1*c2*y2 + a1*a2*a3*b1*c2*y2 + a1*a3*b2*c2*y2 + a3*b1*b2*c2*y2 + a1*a3*b1*b2*c2*y2 + a1*a2*a3*b1*b2*c2*y2 + a1*b3*c2*y2 + a1*a2*b3*c2*y2 + a1*a2*a3*b1*b3*c2*y2 + a1*b2*b3*c2*y2 + a1*a3*b2*b3*c2*y2 + a2*b1*b2*b3*c2*y2 + a1*a2*b1*b2*b3*c2*y2 + a3*b1*b2*b3*c2*y2 + a1*a3*b1*b2*b3*c2*y2 + a3*c1*c2*y2 + a1*a3*c1*c2*y2 + a1*a3*b1*c1*c2*y2 + a2*a3*b1*c1*c2*y2 + a1*a3*b2*c1*c2*y2 + a2*a3*b2*c1*c2*y2 + a3*b1*b2*c1*c2*y2 + a1*a3*b1*b2*c1*c2*y2 + a1*a2*a3*b1*b2*c1*c2*y2 + b3*c1*c2*y2 + a1*b3*c1*c2*y2 + a1*a2*b3*c1*c2*y2 + a3*b3*c1*c2*y2 + a2*a3*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a1*b1*b3*c1*c2*y2 + a2*b1*b3*c1*c2*y2 + a1*a3*b1*b3*c1*c2*y2 + a1*a2*a3*b1*b3*c1*c2*y2 + a1*b2*b3*c1*c2*y2 + a2*b2*b3*c1*c2*y2 + b1*b2*b3*c1*c2*y2 + a1*b1*b2*b3*c1*c2*y2 + a1*a3*b1*b2*b3*c1*c2*y2 + a1*a3*c3*y2 + b1*c3*y2 + a1*b1*c3*y2 + a2*b1*c3*y2 + a1*a3*b1*c3*y2 + a2*a3*b1*c3*y2 + a1*b2*c3*y2 + a1*a2*b2*c3*y2 + a1*a3*b2*c3*y2 + a1*b1*b2*c3*y2 + a1*a3*b1*b2*c3*y2 + a1*a3*b3*c3*y2 + a1*a2*b1*b3*c3*y2 + a1*b2*b3*c3*y2 + a1*a2*b2*b3*c3*y2 + a1*a3*b2*b3*c3*y2 + b1*b2*b3*c3*y2 + a1*a2*b1*b2*b3*c3*y2 + a1*a2*c1*c3*y2 + a3*c1*c3*y2 + a1*a3*c1*c3*y2 + a1*b1*c1*c3*y2 + a2*b1*c1*c3*y2 + a1*a2*b1*c1*c3*y2 + a1*a3*b1*c1*c3*y2 + b2*c1*c3*y2 + a2*b2*c1*c3*y2 + a1*a2*b2*c1*c3*y2 + a3*b2*c1*c3*y2 + a1*a3*b2*c1*c3*y2 + a1*b1*b2*c1*c3*y2 + a2*b1*b2*c1*c3*y2 + a1*a3*b1*b2*c1*c3*y2 + a2*a3*b1*b2*c1*c3*y2 + a1*a2*a3*b1*b2*c1*c3*y2 + b3*c1*c3*y2 + a1*b3*c1*c3*y2 + a2*b3*c1*c3*y2 + a1*a2*b3*c1*c3*y2 + a1*a3*b3*c1*c3*y2 + a2*a3*b3*c1*c3*y2 + a2*b1*b3*c1*c3*y2 + a3*b1*b3*c1*c3*y2 + a2*a3*b1*b3*c1*c3*y2 + a3*b2*b3*c1*c3*y2 + a1*a3*b2*b3*c1*c3*y2 + a2*a3*b2*b3*c1*c3*y2 + a1*b1*b2*b3*c1*c3*y2 + a1*a2*a3*b1*b2*b3*c1*c3*y2 + a1*a2*c2*c3*y2 + a1*a3*c2*c3*y2 + b1*c2*c3*y2 + a1*a2*b1*c2*c3*y2 + a1*a3*b1*c2*c3*y2 + a2*a3*b1*c2*c3*y2 + b1*b2*c2*c3*y2 + a1*b1*b2*c2*c3*y2 + a1*a2*a3*b1*b2*c2*c3*y2 + b1*b3*c2*c3*y2 + a2*b1*b3*c2*c3*y2 + a3*b1*b3*c2*c3*y2 + a1*a3*b1*b3*c2*c3*y2 + a1*a3*b2*b3*c2*c3*y2 + a1*b1*b2*b3*c2*c3*y2 + a1*a2*a3*b1*b2*b3*c2*c3*y2 + c1*c2*c3*y2 + a1*c1*c2*c3*y2 + a1*b1*c1*c2*c3*y2 + a2*b1*c1*c2*c3*y2 + a3*b1*c1*c2*c3*y2 + a2*b1*b2*c1*c2*c3*y2 + a1*a2*b1*b2*c1*c2*c3*y2 + a3*b1*b2*c1*c2*c3*y2 + a1*a2*a3*b1*b2*c1*c2*c3*y2 + a3*b3*c1*c2*c3*y2 + a2*b1*b3*c1*c2*c3*y2 + a1*a2*b1*b3*c1*c2*c3*y2 + a1*a3*b1*b3*c1*c2*c3*y2 + a2*a3*b1*b3*c1*c2*c3*y2 + a1*a2*a3*b1*b3*c1*c2*c3*y2 + a1*b2*b3*c1*c2*c3*y2 + a3*b2*b3*c1*c2*c3*y2 + a1*b1*b2*b3*c1*c2*c3*y2 + a1*a3*b1*b2*b3*c1*c2*c3*y2 + a2*a3*b1*b2*b3*c1*c2*c3*y2 + a2*a3*x1*y2 + a1*a3*b1*x1*y2 + a2*a3*b1*x1*y2 + a3*b2*x1*y2 + a2*a3*b2*x1*y2 + a3*b1*b2*x1*y2 + a2*a3*b1*b2*x1*y2 + a1*b3*x1*y2 + a2*b3*x1*y2 + a1*a2*b3*x1*y2 + a3*b3*x1*y2 + a2*a3*b3*x1*y2 + a1*b1*b3*x1*y2 + a3*b1*b3*x1*y2 + a1*a3*b1*b3*x1*y2 + b2*b3*x1*y2 + a1*a2*b2*b3*x1*y2 + a3*b2*b3*x1*y2 + a3*c1*x1*y2 + a1*a3*c1*x1*y2 + a3*b1*c1*x1*y2 + a1*a3*b1*c1*x1*y2 + a3*b2*c1*x1*y2 + a1*a3*b2*c1*x1*y2 + b3*c1*x1*y2 + a1*b3*c1*x1*y2 + a2*b3*c1*x1*y2 + a1*a2*b3*c1*x1*y2 + a3*b3*c1*x1*y2 + a1*a3*b3*c1*x1*y2 + b1*b3*c1*x1*y2 + a2*b2*b3*c1*x1*y2 + a2*b1*b2*b3*c1*x1*y2 + a3*c2*x1*y2 + a1*a3*c2*x1*y2 + a1*a3*b1*c2*x1*y2 + a3*b2*c2*x1*y2 + a3*b1*b2*c2*x1*y2 + a1*a3*b1*b2*c2*x1*y2 + b3*c2*x1*y2 + a2*b3*c2*x1*y2 + a3*b3*c2*x1*y2 + a1*b1*b3*c2*x1*y2 + a1*a2*b1*b3*c2*x1*y2 + a3*b1*b3*c2*x1*y2 + a1*a3*b1*b3*c2*x1*y2 + a1*b2*b3*c2*x1*y2 + a3*b2*b3*c2*x1*y2 + a1*b1*b2*b3*c2*x1*y2 + a2*b1*b2*b3*c2*x1*y2 + a3*c1*c2*x1*y2 + a3*b1*c1*c2*x1*y2 + a3*b1*b2*c1*c2*x1*y2 + a1*b3*c1*c2*x1*y2 + b1*b3*c1*c2*x1*y2 + a2*b1*b3*c1*c2*x1*y2 + a3*b1*b3*c1*c2*x1*y2 + b2*b3*c1*c2*x1*y2 + a1*b2*b3*c1*c2*x1*y2 + b1*b2*b3*c1*c2*x1*y2 + a1*c3*x1*y2 + a2*c3*x1*y2 + a1*a2*c3*x1*y2 + a3*c3*x1*y2 + a1*a3*c3*x1*y2 + a1*a2*b1*c3*x1*y2 + a1*a3*b1*c3*x1*y2 + a1*b2*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + b1*b2*c3*x1*y2 + a1*b1*b2*c3*x1*y2 + a2*b1*b2*c3*x1*y2 + a1*a2*b1*b2*c3*x1*y2 + a3*b1*b2*c3*x1*y2 + a1*a3*b1*b2*c3*x1*y2 + a1*b3*c3*x1*y2 + a2*b3*c3*x1*y2 + a3*b3*c3*x1*y2 + b1*b3*c3*x1*y2 + a1*b1*b3*c3*x1*y2 + a2*b1*b3*c3*x1*y2 + a1*a2*b1*b3*c3*x1*y2 + a1*a3*b1*b3*c3*x1*y2 + b2*b3*c3*x1*y2 + a3*b2*b3*c3*x1*y2 + b1*b2*b3*c3*x1*y2 + a1*b1*b2*b3*c3*x1*y2 + a2*b1*b2*b3*c3*x1*y2 + a1*c1*c3*x1*y2 + a2*c1*c3*x1*y2 + a3*c1*c3*x1*y2 + a1*b1*c1*c3*x1*y2 + a2*b1*c1*c3*x1*y2 + a3*b1*c1*c3*x1*y2 + b2*c1*c3*x1*y2 + a1*b2*c1*c3*x1*y2 + a1*b1*b2*c1*c3*x1*y2 + a2*b1*b2*c1*c3*x1*y2 + a3*b1*b2*c1*c3*x1*y2 + b3*c1*c3*x1*y2 + a1*b3*c1*c3*x1*y2 + a1*b1*b3*c1*c3*x1*y2 + a2*b1*b3*c1*c3*x1*y2 + a3*b1*b3*c1*c3*x1*y2 + c2*c3*x1*y2 + b1*c2*c3*x1*y2 + a1*b3*c2*c3*x1*y2 + b1*b3*c2*c3*x1*y2 + b2*b3*c2*c3*x1*y2 + a1*b1*b2*b3*c2*c3*x1*y2 + b3*c1*c2*c3*x1*y2 + b1*b2*b3*c1*c2*c3*x1*y2 + a1*a2*b3*x2*y2 + a1*b1*b3*c1*x2*y2 + a1*b2*b3*c2*x2*y2 + b1*b3*c1*c2*x2*y2 + b1*b2*c1*c3*x2*y2 + b1*b3*c1*c3*x2*y2 + a1*x3*y2 + a1*a3*x3*y2 + b1*x3*y2 + a1*b1*x3*y2 + a2*b1*x3*y2 + a3*b1*x3*y2 + a1*a3*b1*x3*y2 + a1*b2*x3*y2 + a1*a3*b2*x3*y2 + b1*b2*x3*y2 + a1*b1*b2*x3*y2 + a1*a2*b1*b2*x3*y2 + a3*b1*b2*x3*y2 + a1*a2*a3*b1*b2*x3*y2 + a1*b3*x3*y2 + a1*a2*b3*x3*y2 + a2*b1*b3*x3*y2 + a1*a2*b1*b3*x3*y2 + a1*a2*a3*b1*b3*x3*y2 + a1*b2*b3*x3*y2 + a1*a2*b1*b2*b3*x3*y2 + a1*a3*b1*b2*b3*x3*y2 + c1*x3*y2 + a1*c1*x3*y2 + a2*c1*x3*y2 + a3*c1*x3*y2 + a1*a3*c1*x3*y2 + a2*a3*c1*x3*y2 + b1*c1*x3*y2 + a1*b1*c1*x3*y2 + a2*b1*c1*x3*y2 + a3*b1*c1*x3*y2 + a1*a3*b1*c1*x3*y2 + a2*a3*b1*c1*x3*y2 + b2*c1*x3*y2 + a1*b2*c1*x3*y2 + a2*b2*c1*x3*y2 + a3*b2*c1*x3*y2 + a1*a3*b2*c1*x3*y2 + a2*a3*b2*c1*x3*y2 + b1*b2*c1*x3*y2 + a1*b1*b2*c1*x3*y2 + a2*b1*b2*c1*x3*y2 + a1*a2*b1*b2*c1*x3*y2 + a1*a3*b1*b2*c1*x3*y2 + a2*a3*b1*b2*c1*x3*y2 + a1*a2*a3*b1*b2*c1*x3*y2 + b3*c1*x3*y2 + a1*a3*b3*c1*x3*y2 + a2*a3*b3*c1*x3*y2 + a2*b1*b3*c1*x3*y2 + a1*a2*b1*b3*c1*x3*y2 + a1*a3*b1*b3*c1*x3*y2 + a2*a3*b1*b3*c1*x3*y2 + a1*a2*a3*b1*b3*c1*x3*y2 + a1*b2*b3*c1*x3*y2 + a2*b2*b3*c1*x3*y2 + a3*b2*b3*c1*x3*y2 + b1*b2*b3*c1*x3*y2 + a1*b1*b2*b3*c1*x3*y2 + a1*c2*x3*y2 + a1*a3*c2*x3*y2 + b1*c2*x3*y2 + a1*b1*c2*x3*y2 + a2*b1*c2*x3*y2 + a3*b1*c2*x3*y2 + a1*a3*b1*c2*x3*y2 + a1*b2*c2*x3*y2 + a1*a3*b2*c2*x3*y2 + b1*b2*c2*x3*y2 + a1*b1*b2*c2*x3*y2 + a1*a2*b1*b2*c2*x3*y2 + a1*a3*b1*b2*c2*x3*y2 + a1*a2*a3*b1*b2*c2*x3*y2 + a1*a3*b3*c2*x3*y2 + b1*b3*c2*x3*y2 + a1*b1*b3*c2*x3*y2 + a2*b1*b3*c2*x3*y2 + a1*a2*b1*b3*c2*x3*y2 + a3*b1*b3*c2*x3*y2 + a1*a3*b1*b3*c2*x3*y2 + a1*a2*a3*b1*b3*c2*x3*y2 + a1*b2*b3*c2*x3*y2 + b1*b2*b3*c2*x3*y2 + a2*b1*b2*c1*c2*x3*y2 + a2*a3*b1*b2*c1*c2*x3*y2 + a1*b1*b3*c1*c2*x3*y2 + a2*b1*b3*c1*c2*x3*y2 + a3*b1*b3*c1*c2*x3*y2 + a1*a3*b1*b3*c1*c2*x3*y2 + a2*a3*b1*b3*c1*c2*x3*y2 + b2*b3*c1*c2*x3*y2 + a3*b2*b3*c1*c2*x3*y2 + b1*b2*b3*c1*c2*x3*y2 + a1*b1*b2*b3*c1*c2*x3*y2 + a1*a3*b1*b2*b3*c1*c2*x3*y2 + a1*c3*x3*y2 + a1*a3*c3*x3*y2 + b1*c3*x3*y2 + a1*b1*c3*x3*y2 + a2*b1*c3*x3*y2 + a3*b1*c3*x3*y2 + a1*a3*b1*c3*x3*y2 + a1*b2*c3*x3*y2 + a1*a3*b2*c3*x3*y2 + a1*a2*b1*b2*c3*x3*y2 + a1*a3*b1*b2*c3*x3*y2 + a1*a2*a3*b1*b2*c3*x3*y2 + a1*b3*c3*x3*y2 + a1*a3*b3*c3*x3*y2 + b1*b3*c3*x3*y2 + a1*b1*b3*c3*x3*y2 + a2*b1*b3*c3*x3*y2 + a1*a2*b1*b3*c3*x3*y2 + a3*b1*b3*c3*x3*y2 + a1*a3*b1*b3*c3*x3*y2 + a1*a2*a3*b1*b3*c3*x3*y2 + a1*b2*b3*c3*x3*y2 + c1*c3*x3*y2 + a1*c1*c3*x3*y2 + a2*c1*c3*x3*y2 + a3*c1*c3*x3*y2 + b1*c1*c3*x3*y2 + a1*b1*c1*c3*x3*y2 + a2*b1*c1*c3*x3*y2 + a3*b1*c1*c3*x3*y2 + b2*c1*c3*x3*y2 + a1*b2*c1*c3*x3*y2 + a2*b2*c1*c3*x3*y2 + a3*b2*c1*c3*x3*y2 + a1*b1*b2*c1*c3*x3*y2 + a2*b1*b2*c1*c3*x3*y2 + a1*a2*b1*b2*c1*c3*x3*y2 + a1*a3*b1*b2*c1*c3*x3*y2 + a2*a3*b1*b2*c1*c3*x3*y2 + a1*b3*c1*c3*x3*y2 + a2*b3*c1*c3*x3*y2 + a3*b3*c1*c3*x3*y2 + a1*b1*b3*c1*c3*x3*y2 + a3*b1*b3*c1*c3*x3*y2 + a2*a3*b1*b3*c1*c3*x3*y2 + a1*b2*b3*c1*c3*x3*y2 + a2*b2*b3*c1*c3*x3*y2 + a3*b2*b3*c1*c3*x3*y2 + b1*b2*b3*c1*c3*x3*y2 + a1*b1*b2*b3*c1*c3*x3*y2 + a1*a2*b1*b2*b3*c1*c3*x3*y2 + a1*a3*b1*b2*b3*c1*c3*x3*y2 + a1*c2*c3*x3*y2 + a1*b1*c2*c3*x3*y2 + a1*b2*c2*c3*x3*y2 + a1*b1*b2*c2*c3*x3*y2 + a1*a2*b1*b2*c2*c3*x3*y2 + a1*a3*b1*b2*c2*c3*x3*y2 + a1*b3*c2*c3*x3*y2 + a1*a3*b1*b3*c2*c3*x3*y2 + a1*b2*b3*c2*c3*x3*y2 + a1*a2*b1*b2*b3*c2*c3*x3*y2 + a2*b1*b2*c1*c2*c3*x3*y2 + a3*b1*b2*c1*c2*c3*x3*y2 + b1*b3*c1*c2*c3*x3*y2 + a3*b1*b3*c1*c2*c3*x3*y2 + b1*b2*b3*c1*c2*c3*x3*y2 + a2*b1*b2*b3*c1*c2*c3*x3*y2 + a3*y1*y2 + a2*a3*y1*y2 + a1*a3*b1*y1*y2 + a2*a3*b1*y1*y2 + a2*a3*b2*y1*y2 + a3*b1*b2*y1*y2 + a2*a3*b1*b2*y1*y2 + b3*y1*y2 + a1*b3*y1*y2 + a1*a2*b3*y1*y2 + a2*a3*b3*y1*y2 + a2*b1*b3*y1*y2 + a1*a3*b1*b3*y1*y2 + b2*b3*y1*y2 + a2*b2*b3*y1*y2 + a1*a2*b2*b3*y1*y2 + a3*b2*b3*y1*y2 + a3*c1*y1*y2 + a1*a3*c1*y1*y2 + a3*b1*c1*y1*y2 + a1*a3*b1*c1*y1*y2 + a3*b2*c1*y1*y2 + a1*a3*b2*c1*y1*y2 + b3*c1*y1*y2 + a1*b3*c1*y1*y2 + a2*b3*c1*y1*y2 + a1*a2*b3*c1*y1*y2 + a3*b3*c1*y1*y2 + a1*a3*b3*c1*y1*y2 + a2*b2*b3*c1*y1*y2 + a2*b1*b2*b3*c1*y1*y2 + a3*c2*y1*y2 + a1*a3*c2*y1*y2 + a1*a3*b1*c2*y1*y2 + a3*b2*c2*y1*y2 + a1*a3*b1*b2*c2*y1*y2 + a2*b3*c2*y1*y2 + a3*b3*c2*y1*y2 + a1*b1*b3*c2*y1*y2 + a2*b1*b3*c2*y1*y2 + a1*a2*b1*b3*c2*y1*y2 + a1*a3*b1*b3*c2*y1*y2 + b2*b3*c2*y1*y2 + a1*b2*b3*c2*y1*y2 + a3*b2*b3*c2*y1*y2 + a1*b1*b2*b3*c2*y1*y2 + a2*b1*b2*b3*c2*y1*y2 + a3*c1*c2*y1*y2 + a3*b1*c1*c2*y1*y2 + a3*b1*b2*c1*c2*y1*y2 + a1*b3*c1*c2*y1*y2 + b1*b3*c1*c2*y1*y2 + a2*b1*b3*c1*c2*y1*y2 + a3*b1*b3*c1*c2*y1*y2 + b2*b3*c1*c2*y1*y2 + a1*b2*b3*c1*c2*y1*y2 + b1*b2*b3*c1*c2*y1*y2 + c3*y1*y2 + a1*c3*y1*y2 + a2*c3*y1*y2 + a1*a2*c3*y1*y2 + a3*c3*y1*y2 + a1*a3*c3*y1*y2 + a1*a2*b1*c3*y1*y2 + a1*a3*b1*c3*y1*y2 + b2*c3*y1*y2 + a1*b2*c3*y1*y2 + a2*b2*c3*y1*y2 + a3*b2*c3*y1*y2 + b1*b2*c3*y1*y2 + a1*b1*b2*c3*y1*y2 + a1*a2*b1*b2*c3*y1*y2 + a1*a3*b1*b2*c3*y1*y2 + b3*c3*y1*y2 + a1*b3*c3*y1*y2 + a2*b3*c3*y1*y2 + a3*b3*c3*y1*y2 + b1*b3*c3*y1*y2 + a1*b1*b3*c3*y1*y2 + a1*a2*b1*b3*c3*y1*y2 + a3*b1*b3*c3*y1*y2 + a1*a3*b1*b3*c3*y1*y2 + b2*b3*c3*y1*y2 + a3*b2*b3*c3*y1*y2 + a1*b1*b2*b3*c3*y1*y2 + a2*b1*b2*b3*c3*y1*y2 + a1*c1*c3*y1*y2 + a2*c1*c3*y1*y2 + a3*c1*c3*y1*y2 + a1*b1*c1*c3*y1*y2 + a2*b1*c1*c3*y1*y2 + a3*b1*c1*c3*y1*y2 + b2*c1*c3*y1*y2 + a1*b2*c1*c3*y1*y2 + a1*b1*b2*c1*c3*y1*y2 + a2*b1*b2*c1*c3*y1*y2 + a3*b1*b2*c1*c3*y1*y2 + b3*c1*c3*y1*y2 + a1*b3*c1*c3*y1*y2 + a1*b1*b3*c1*c3*y1*y2 + a2*b1*b3*c1*c3*y1*y2 + a3*b1*b3*c1*c3*y1*y2 + c2*c3*y1*y2 + b1*c2*c3*y1*y2 + a1*b3*c2*c3*y1*y2 + b2*b3*c2*c3*y1*y2 + b1*b2*b3*c2*c3*y1*y2 + a1*b1*b2*b3*c2*c3*y1*y2 + b3*c1*c2*c3*y1*y2 + b1*b2*b3*c1*c2*c3*y1*y2 + (a3*b1*y2*(1 + y2))/2 + (a3*b1*b2*y2*(1 + y2))/2 + (a1*a3*b1*b2*y2*(1 + y2))/2 + (a1*a2*b3*y2*(1 + y2))/2 + (b1*b3*y2*(1 + y2))/2 + (a1*b1*b3*y2*(1 + y2))/2 + (a1*a2*b1*b3*y2*(1 + y2))/2 + (a1*a3*b1*b3*y2*(1 + y2))/2 + (a1*a3*b1*b2*c1*y2*(1 + y2))/2 + (b1*b3*c1*y2*(1 + y2))/2 + (a1*b1*b3*c1*y2*(1 + y2))/2 + (a1*a2*b1*b3*c1*y2*(1 + y2))/2 + (a1*a3*b1*b3*c1*y2*(1 + y2))/2 + (a3*b1*c2*y2*(1 + y2))/2 + (a3*b1*b2*c2*y2*(1 + y2))/2 + (a1*a3*b1*b2*c2*y2*(1 + y2))/2 + (a2*b1*b3*c2*y2*(1 + y2))/2 + (a1*a2*b1*b3*c2*y2*(1 + y2))/2 + (a3*b1*b3*c2*y2*(1 + y2))/2 + (a1*a3*b1*b3*c2*y2*(1 + y2))/2 + (a1*b2*b3*c2*y2*(1 + y2))/2 + (b1*b2*b3*c2*y2*(1 + y2))/2 + (a3*b1*b2*c1*c2*y2*(1 + y2))/2 + (a1*b1*b3*c1*c2*y2*(1 + y2))/2 + (a2*b1*b3*c1*c2*y2*(1 + y2))/2 + (a3*b1*b3*c1*c2*y2*(1 + y2))/2 + (b1*b2*b3*c1*c2*y2*(1 + y2))/2 + (a1*b1*b2*b3*c1*c2*y2*(1 + y2))/2 + (b1*c3*y2*(1 + y2))/2 + (a2*b1*c3*y2*(1 + y2))/2 + (a3*b1*c3*y2*(1 + y2))/2 + (b1*b2*c3*y2*(1 + y2))/2 + (a2*b1*b2*c3*y2*(1 + y2))/2 + (a1*a2*b1*b2*c3*y2*(1 + y2))/2 + (a3*b1*b2*c3*y2*(1 + y2))/2 + (a1*a3*b1*b2*c3*y2*(1 + y2))/2 + (b1*b3*c3*y2*(1 + y2))/2 + (a2*b1*b3*c3*y2*(1 + y2))/2 + (a1*a2*b1*b3*c3*y2*(1 + y2))/2 + (a3*b1*b3*c3*y2*(1 + y2))/2 + (a1*a3*b1*b3*c3*y2*(1 + y2))/2 + (b1*b2*b3*c3*y2*(1 + y2))/2 + (b1*b2*c1*c3*y2*(1 + y2))/2 + (a2*b1*b2*c1*c3*y2*(1 + y2))/2 + (a3*b1*b2*c1*c3*y2*(1 + y2))/2 + (b1*b3*c1*c3*y2*(1 + y2))/2 + (a2*b1*b3*c1*c3*y2*(1 + y2))/2 + (a3*b1*b3*c1*c3*y2*(1 + y2))/2 + (a1*b1*b3*c2*c3*y2*(1 + y2))/2 + (b1*b2*b3*c2*c3*y2*(1 + y2))/2 + (a1*b1*b2*b3*c2*c3*y2*(1 + y2))/2 + (b1*b3*c1*c2*c3*y2*(1 + y2))/2 + (b1*b2*b3*c1*c2*c3*y2*(1 + y2))/2 + a1*a2*y3 + a1*a2*a3*y3 + a1*a2*b1*y3 + a1*a2*a3*b1*y3 + a1*b2*y3 + a1*a2*a3*b2*y3 + a1*b1*b2*y3 + a1*a2*b1*b2*y3 + a3*b1*b2*y3 + a1*a3*b1*b2*y3 + a1*a2*b3*y3 + a2*b1*b3*y3 + a1*a2*b1*b3*y3 + a1*a2*b2*b3*y3 + a1*a3*b2*b3*y3 + a1*a2*a3*b2*b3*y3 + a1*b1*b2*b3*y3 + a1*a2*a3*b1*b2*b3*y3 + a1*a2*c1*y3 + a1*a2*a3*c1*y3 + b2*c1*y3 + a2*b2*c1*y3 + a1*a2*b2*c1*y3 + a1*a3*b2*c1*y3 + a1*a2*a3*b2*c1*y3 + a2*b1*b2*c1*y3 + a2*a3*b1*b2*c1*y3 + a1*a2*a3*b1*b2*c1*y3 + a1*a2*b3*c1*y3 + a1*a2*a3*b1*b3*c1*y3 + b2*b3*c1*y3 + a1*b2*b3*c1*y3 + a2*b2*b3*c1*y3 + b1*b2*b3*c1*y3 + a2*b1*b2*b3*c1*y3 + a1*c2*y3 + b1*c2*y3 + a1*b1*c2*y3 + a2*b1*c2*y3 + a1*a3*b1*c2*y3 + a2*a3*b1*c2*y3 + a1*a3*b2*c2*y3 + a1*b1*b2*c2*y3 + a2*b1*b2*c2*y3 + a3*b1*b2*c2*y3 + a1*a3*b1*b2*c2*y3 + a1*a2*a3*b1*b2*c2*y3 + a1*a2*b3*c2*y3 + a1*a3*b3*c2*y3 + a1*a2*a3*b3*c2*y3 + a1*a2*b1*b3*c2*y3 + a1*a3*b1*b3*c2*y3 + a2*a3*b1*b3*c2*y3 + a1*a2*a3*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + a3*b1*b2*b3*c2*y3 + a2*a3*b1*b2*b3*c2*y3 + c1*c2*y3 + a1*c1*c2*y3 + a2*c1*c2*y3 + a1*a2*c1*c2*y3 + a3*c1*c2*y3 + a2*a3*c1*c2*y3 + b1*c1*c2*y3 + a2*b1*c1*c2*y3 + a1*a3*b1*c1*c2*y3 + a2*a3*b1*c1*c2*y3 + b2*c1*c2*y3 + a1*b2*c1*c2*y3 + a1*a2*b2*c1*c2*y3 + a3*b2*c1*c2*y3 + a2*a3*b2*c1*c2*y3 + a2*b1*b2*c1*c2*y3 + a3*b1*b2*c1*c2*y3 + a2*a3*b1*b2*c1*c2*y3 + a1*a2*a3*b1*b2*c1*c2*y3 + b3*c1*c2*y3 + a1*a2*b3*c1*c2*y3 + a3*b3*c1*c2*y3 + a1*a3*b3*c1*c2*y3 + a2*a3*b3*c1*c2*y3 + b1*b3*c1*c2*y3 + a1*b1*b3*c1*c2*y3 + a3*b1*b3*c1*c2*y3 + a1*a3*b1*b3*c1*c2*y3 + b2*b3*c1*c2*y3 + a1*b2*b3*c1*c2*y3 + a2*b2*b3*c1*c2*y3 + a1*a2*b2*b3*c1*c2*y3 + a1*a3*b2*b3*c1*c2*y3 + a2*a3*b2*b3*c1*c2*y3 + b1*b2*b3*c1*c2*y3 + a1*b1*b2*b3*c1*c2*y3 + a2*a3*b1*b2*b3*c1*c2*y3 + a1*a2*a3*b1*b2*b3*c1*c2*y3 + a1*a2*c3*y3 + a1*a2*b1*c3*y3 + a2*a3*b1*c3*y3 + a1*a2*b2*c3*y3 + b1*b2*c3*y3 + a1*b1*b2*c3*y3 + a2*b1*b2*c3*y3 + a1*a2*b1*b2*c3*y3 + a3*b1*b2*c3*y3 + a1*a3*b1*b2*c3*y3 + a2*a3*b1*b2*c3*y3 + a1*a2*a3*b1*b2*c3*y3 + a1*a2*b3*c3*y3 + a2*b1*b3*c3*y3 + a2*a3*b1*b3*c3*y3 + a1*a2*a3*b1*b3*c3*y3 + a1*b2*b3*c3*y3 + a1*a2*b2*b3*c3*y3 + a1*a3*b2*b3*c3*y3 + a1*a2*a3*b2*b3*c3*y3 + b1*b2*b3*c3*y3 + a2*b1*b2*b3*c3*y3 + a3*b1*b2*b3*c3*y3 + a2*a3*b1*b2*b3*c3*y3 + a2*b1*c1*c3*y3 + b2*c1*c3*y3 + a1*b1*b2*c1*c3*y3 + a2*b1*b2*c1*c3*y3 + a1*a2*b1*b2*c1*c3*y3 + a3*b1*b2*c1*c3*y3 + a1*a3*b1*b2*c1*c3*y3 + a2*a3*b1*b2*c1*c3*y3 + a1*a2*a3*b3*c1*c3*y3 + a2*a3*b1*b3*c1*c3*y3 + a1*a2*a3*b1*b3*c1*c3*y3 + b2*b3*c1*c3*y3 + a1*a3*b2*b3*c1*c3*y3 + a2*a3*b2*b3*c1*c3*y3 + b1*b2*b3*c1*c3*y3 + a1*b1*b2*b3*c1*c3*y3 + a1*a2*b1*b2*b3*c1*c3*y3 + a3*b1*b2*b3*c1*c3*y3 + a1*a3*b1*b2*b3*c1*c3*y3 + a2*a3*b1*b2*b3*c1*c3*y3 + a1*a2*a3*b1*b2*b3*c1*c3*y3 + a1*c2*c3*y3 + a1*b1*c2*c3*y3 + a2*b1*c2*c3*y3 + a3*b1*c2*c3*y3 + a1*b2*c2*c3*y3 + b1*b2*c2*c3*y3 + a1*b1*b2*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + a2*a3*b1*b2*c2*c3*y3 + a1*a2*a3*b1*b2*c2*c3*y3 + a1*a2*b3*c2*c3*y3 + a1*a3*b3*c2*c3*y3 + b1*b3*c2*c3*y3 + a2*b1*b3*c2*c3*y3 + a3*b1*b3*c2*c3*y3 + a1*a2*a3*b1*b3*c2*c3*y3 + b1*b2*b3*c2*c3*y3 + a1*b1*b2*b3*c2*c3*y3 + a2*b1*b2*b3*c2*c3*y3 + a1*a3*c1*c2*c3*y3 + a2*a3*c1*c2*c3*y3 + b1*c1*c2*c3*y3 + a1*a3*b1*c1*c2*c3*y3 + a2*a3*b1*c1*c2*c3*y3 + a1*a3*b2*c1*c2*c3*y3 + a2*a3*b2*c1*c2*c3*y3 + b1*b2*c1*c2*c3*y3 + a1*b1*b2*c1*c2*c3*y3 + a1*a2*b1*b2*c1*c2*c3*y3 + a3*b1*b2*c1*c2*c3*y3 + a1*a3*b1*b2*c1*c2*c3*y3 + a2*a3*b1*b2*c1*c2*c3*y3 + a1*b3*c1*c2*c3*y3 + a2*b3*c1*c2*c3*y3 + a1*a3*b3*c1*c2*c3*y3 + b1*b3*c1*c2*c3*y3 + a1*b1*b3*c1*c2*c3*y3 + a3*b1*b3*c1*c2*c3*y3 + a1*a3*b1*b3*c1*c2*c3*y3 + a2*a3*b1*b3*c1*c2*c3*y3 + a1*b2*b3*c1*c2*c3*y3 + a2*b2*b3*c1*c2*c3*y3 + a1*b1*b2*b3*c1*c2*c3*y3 + a1*a2*b1*b2*b3*c1*c2*c3*y3 + a2*x1*y3 + a1*a2*x1*y3 + a2*b1*x1*y3 + a2*a3*b1*x1*y3 + b2*x1*y3 + a1*b2*x1*y3 + a1*a2*b2*x1*y3 + a3*b2*x1*y3 + a1*a3*b2*x1*y3 + a1*a2*a3*b2*x1*y3 + b1*b2*x1*y3 + a2*b1*b2*x1*y3 + a3*b1*b2*x1*y3 + a1*a3*b1*b2*x1*y3 + a2*a3*b1*b2*x1*y3 + a1*a2*a3*b1*b2*x1*y3 + a2*b3*x1*y3 + a1*a2*b3*x1*y3 + a2*a3*b3*x1*y3 + a1*a2*a3*b3*x1*y3 + a2*b1*b3*x1*y3 + a1*a2*a3*b1*b3*x1*y3 + b2*b3*x1*y3 + a3*b2*b3*x1*y3 + a1*a3*b2*b3*x1*y3 + a2*a3*b2*b3*x1*y3 + a1*a2*b1*b2*b3*x1*y3 + a1*a3*b1*b2*b3*x1*y3 + a2*c1*x1*y3 + a2*b1*c1*x1*y3 + b2*c1*x1*y3 + a2*b2*c1*x1*y3 + a3*b2*c1*x1*y3 + a2*a3*b2*c1*x1*y3 + b1*b2*c1*x1*y3 + a2*b1*b2*c1*x1*y3 + a3*b1*b2*c1*x1*y3 + a2*a3*b1*b2*c1*x1*y3 + a2*b3*c1*x1*y3 + a2*a3*b3*c1*x1*y3 + a2*b1*b3*c1*x1*y3 + a2*a3*b1*b3*c1*x1*y3 + a3*b2*b3*c1*x1*y3 + a3*b1*b2*b3*c1*x1*y3 + c2*x1*y3 + a1*c2*x1*y3 + a2*b1*c2*x1*y3 + a3*b1*c2*x1*y3 + b2*c2*x1*y3 + a1*b2*c2*x1*y3 + a1*a3*b2*c2*x1*y3 + a1*a2*a3*b2*c2*x1*y3 + b1*b2*c2*x1*y3 + a2*b1*b2*c2*x1*y3 + a3*b1*b2*c2*x1*y3 + a1*a3*b1*b2*c2*x1*y3 + a1*a2*a3*b1*b2*c2*x1*y3 + b3*c2*x1*y3 + a1*b3*c2*x1*y3 + a3*b3*c2*x1*y3 + a1*a3*b3*c2*x1*y3 + a1*a2*a3*b3*c2*x1*y3 + a2*b1*b3*c2*x1*y3 + a1*a3*b1*b3*c2*x1*y3 + a1*a2*a3*b1*b3*c2*x1*y3 + b2*b3*c2*x1*y3 + a3*b2*b3*c2*x1*y3 + a1*b1*b2*b3*c2*x1*y3 + a2*b1*b2*b3*c2*x1*y3 + c1*c2*x1*y3 + b1*c1*c2*x1*y3 + b2*c1*c2*x1*y3 + a3*b2*c1*c2*x1*y3 + a2*a3*b2*c1*c2*x1*y3 + b1*b2*c1*c2*x1*y3 + a3*b1*b2*c1*c2*x1*y3 + a2*a3*b1*b2*c1*c2*x1*y3 + b3*c1*c2*x1*y3 + a3*b3*c1*c2*x1*y3 + a2*a3*b3*c1*c2*x1*y3 + b1*b3*c1*c2*x1*y3 + a3*b1*b3*c1*c2*x1*y3 + a2*a3*b1*b3*c1*c2*x1*y3 + a1*a3*b2*c3*x1*y3 + a1*a2*a3*b2*c3*x1*y3 + a1*a3*b1*b2*c3*x1*y3 + a1*a2*a3*b1*b2*c3*x1*y3 + a2*a3*b3*c3*x1*y3 + a1*a2*a3*b3*c3*x1*y3 + a2*a3*b1*b3*c3*x1*y3 + a1*a2*a3*b1*b3*c3*x1*y3 + a1*a3*b2*b3*c3*x1*y3 + a2*a3*b2*b3*c3*x1*y3 + a3*b2*c1*c3*x1*y3 + a2*a3*b2*c1*c3*x1*y3 + a3*b1*b2*c1*c3*x1*y3 + a2*a3*b1*b2*c1*c3*x1*y3 + a2*a3*b3*c1*c3*x1*y3 + a2*a3*b1*b3*c1*c3*x1*y3 + a3*b2*b3*c1*c3*x1*y3 + a3*b1*b2*b3*c1*c3*x1*y3 + a1*a2*b2*c2*c3*x1*y3 + a1*a3*b2*c2*c3*x1*y3 + a1*a2*b1*b2*c2*c3*x1*y3 + a1*a3*b1*b2*c2*c3*x1*y3 + a3*b3*c2*c3*x1*y3 + a1*a3*b3*c2*c3*x1*y3 + a3*b1*b3*c2*c3*x1*y3 + a1*a3*b1*b3*c2*c3*x1*y3 + a1*a2*b2*b3*c2*c3*x1*y3 + a3*b2*b3*c2*c3*x1*y3 + a1*a2*b1*b2*b3*c2*c3*x1*y3 + a2*b2*c1*c2*c3*x1*y3 + a3*b2*c1*c2*c3*x1*y3 + a2*b1*b2*c1*c2*c3*x1*y3 + a3*b1*b2*c1*c2*c3*x1*y3 + a3*b3*c1*c2*c3*x1*y3 + a3*b1*b3*c1*c2*c3*x1*y3 + a2*b2*b3*c1*c2*c3*x1*y3 + a2*b1*b2*b3*c1*c2*c3*x1*y3 + a1*a3*x2*y3 + a1*a3*b1*x2*y3 + a2*a3*b1*x2*y3 + a1*a3*b2*x2*y3 + a1*b1*b2*x2*y3 + a1*a2*a3*b1*b2*x2*y3 + a1*a2*b3*x2*y3 + a1*a3*b3*x2*y3 + a1*a3*b1*b3*x2*y3 + a1*a2*a3*b1*b3*x2*y3 + a1*b1*b2*b3*x2*y3 + a1*a2*b1*b2*b3*x2*y3 + a1*a3*b1*b2*b3*x2*y3 + a1*a3*c1*x2*y3 + a2*a3*c1*x2*y3 + a1*a3*b1*c1*x2*y3 + a2*a3*b1*c1*x2*y3 + a1*a3*b2*c1*x2*y3 + a2*a3*b2*c1*x2*y3 + b1*b2*c1*x2*y3 + a3*b1*b2*c1*x2*y3 + a1*a3*b1*b2*c1*x2*y3 + a1*a2*a3*b1*b2*c1*x2*y3 + a1*b3*c1*x2*y3 + a2*b3*c1*x2*y3 + a1*a3*b3*c1*x2*y3 + a2*a3*b3*c1*x2*y3 + a1*b1*b3*c1*x2*y3 + a1*a3*b1*b3*c1*x2*y3 + a1*a2*a3*b1*b3*c1*x2*y3 + a1*b2*b3*c1*x2*y3 + a2*b2*b3*c1*x2*y3 + a3*b2*b3*c1*x2*y3 + b1*b2*b3*c1*x2*y3 + a1*b1*b2*b3*c1*x2*y3 + a1*a3*c2*x2*y3 + a1*a3*b1*c2*x2*y3 + a2*a3*b1*c2*x2*y3 + a1*a3*b2*c2*x2*y3 + b1*b2*c2*x2*y3 + a2*b1*b2*c2*x2*y3 + a3*b1*b2*c2*x2*y3 + a1*a3*b1*b2*c2*x2*y3 + a2*a3*b1*b2*c2*x2*y3 + a1*a2*a3*b1*b2*c2*x2*y3 + a1*b3*c2*x2*y3 + a1*a3*b3*c2*x2*y3 + a3*b1*b3*c2*x2*y3 + a1*a3*b1*b3*c2*x2*y3 + a2*a3*b1*b3*c2*x2*y3 + a1*a2*a3*b1*b3*c2*x2*y3 + a1*b2*b3*c2*x2*y3 + b1*b2*b3*c2*x2*y3 + a3*b1*b2*b3*c2*x2*y3 + a2*a3*b1*b2*c1*c2*x2*y3 + b1*b3*c1*c2*x2*y3 + a1*a3*b1*b3*c1*c2*x2*y3 + a2*a3*b1*b3*c1*c2*x2*y3 + a3*b2*b3*c1*c2*x2*y3 + b1*b2*b3*c1*c2*x2*y3 + a3*b1*b2*b3*c1*c2*x2*y3 + a1*a3*b1*b2*b3*c1*c2*x2*y3 + a1*a3*c3*x2*y3 + a1*a3*b1*c3*x2*y3 + a2*a3*b1*c3*x2*y3 + a1*a3*b2*c3*x2*y3 + a1*b1*b2*c3*x2*y3 + a1*a3*b1*b2*c3*x2*y3 + a2*a3*b1*b2*c3*x2*y3 + a1*a2*a3*b1*b2*c3*x2*y3 + a2*a3*b1*b3*c3*x2*y3 + a1*a2*a3*b1*b3*c3*x2*y3 + a1*b2*b3*c3*x2*y3 + b1*b2*b3*c3*x2*y3 + a2*b1*b2*b3*c3*x2*y3 + a3*b1*b2*b3*c3*x2*y3 + c1*c3*x2*y3 + a1*c1*c3*x2*y3 + a2*c1*c3*x2*y3 + a3*c1*c3*x2*y3 + b1*c1*c3*x2*y3 + a1*b1*c1*c3*x2*y3 + a2*b1*c1*c3*x2*y3 + a3*b1*c1*c3*x2*y3 + b2*c1*c3*x2*y3 + a1*b2*c1*c3*x2*y3 + a2*b2*c1*c3*x2*y3 + a3*b2*c1*c3*x2*y3 + a2*b1*b2*c1*c3*x2*y3 + a1*a2*b1*b2*c1*c3*x2*y3 + a3*b1*b2*c1*c3*x2*y3 + a1*a3*b1*b2*c1*c3*x2*y3 + a2*a3*b1*b2*c1*c3*x2*y3 + a1*b3*c1*c3*x2*y3 + a2*b3*c1*c3*x2*y3 + a1*b1*b3*c1*c3*x2*y3 + a2*b1*b3*c1*c3*x2*y3 + a2*a3*b1*b3*c1*c3*x2*y3 + a1*b2*b3*c1*c3*x2*y3 + a2*b2*b3*c1*c3*x2*y3 + a3*b2*b3*c1*c3*x2*y3 + b1*b2*b3*c1*c3*x2*y3 + a2*b1*b2*b3*c1*c3*x2*y3 + a1*a2*b1*b2*b3*c1*c3*x2*y3 + a3*b1*b2*b3*c1*c3*x2*y3 + a1*a3*b1*b2*b3*c1*c3*x2*y3 + a1*c2*c3*x2*y3 + b1*c2*c3*x2*y3 + a1*b1*c2*c3*x2*y3 + a2*b1*c2*c3*x2*y3 + a3*b1*c2*c3*x2*y3 + a1*b2*c2*c3*x2*y3 + b1*b2*c2*c3*x2*y3 + a2*b1*b2*c2*c3*x2*y3 + a1*a2*b1*b2*c2*c3*x2*y3 + a3*b1*b2*c2*c3*x2*y3 + a1*a3*b1*b2*c2*c3*x2*y3 + a1*b3*c2*c3*x2*y3 + b1*b3*c2*c3*x2*y3 + a1*b1*b3*c2*c3*x2*y3 + a2*b1*b3*c2*c3*x2*y3 + a3*b1*b3*c2*c3*x2*y3 + a1*a3*b1*b3*c2*c3*x2*y3 + a1*b2*b3*c2*c3*x2*y3 + a2*b1*b2*b3*c2*c3*x2*y3 + a1*a2*b1*b2*b3*c2*c3*x2*y3 + b1*b2*c1*c2*c3*x2*y3 + a2*b1*b2*c1*c2*c3*x2*y3 + a3*b1*b2*c1*c2*c3*x2*y3 + a3*b1*b3*c1*c2*c3*x2*y3 + b1*b2*b3*c1*c2*c3*x2*y3 + a2*b1*b2*b3*c1*c2*c3*x2*y3 + a1*a2*b3*x3*y3 + a2*b1*b3*c1*x3*y3 + a1*b1*b3*c2*x3*y3 + a2*b1*b3*c2*x3*y3 + a1*b2*b3*c2*x3*y3 + b1*b3*c1*c2*x3*y3 + b1*b2*b3*c1*c2*x3*y3 + b1*b3*c2*c3*x3*y3 + a1*a2*y1*y3 + a2*b1*y1*y3 + a2*a3*b1*y1*y3 + a1*b2*y1*y3 + a2*b2*y1*y3 + a1*a2*b2*y1*y3 + a3*b2*y1*y3 + a1*a3*b2*y1*y3 + a1*a2*a3*b2*y1*y3 + b1*b2*y1*y3 + a2*b1*b2*y1*y3 + a1*a3*b1*b2*y1*y3 + a1*a2*a3*b1*b2*y1*y3 + a1*a2*b3*y1*y3 + a2*a3*b3*y1*y3 + a1*a2*a3*b3*y1*y3 + a2*b1*b3*y1*y3 + a2*a3*b1*b3*y1*y3 + a1*a2*a3*b1*b3*y1*y3 + b2*b3*y1*y3 + a2*b2*b3*y1*y3 + a3*b2*b3*y1*y3 + a1*a3*b2*b3*y1*y3 + a2*a3*b2*b3*y1*y3 + a2*b1*b2*b3*y1*y3 + a1*a2*b1*b2*b3*y1*y3 + a3*b1*b2*b3*y1*y3 + a1*a3*b1*b2*b3*y1*y3 + a2*c1*y1*y3 + a2*b1*c1*y1*y3 + b2*c1*y1*y3 + a2*b2*c1*y1*y3 + a3*b2*c1*y1*y3 + a2*a3*b2*c1*y1*y3 + b1*b2*c1*y1*y3 + a2*b1*b2*c1*y1*y3 + a3*b1*b2*c1*y1*y3 + a2*a3*b1*b2*c1*y1*y3 + a2*b3*c1*y1*y3 + a2*a3*b3*c1*y1*y3 + a2*b1*b3*c1*y1*y3 + a2*a3*b1*b3*c1*y1*y3 + a3*b2*b3*c1*y1*y3 + a3*b1*b2*b3*c1*y1*y3 + a1*c2*y1*y3 + a2*b1*c2*y1*y3 + a3*b1*c2*y1*y3 + a1*b2*c2*y1*y3 + a1*a3*b2*c2*y1*y3 + a1*a2*a3*b2*c2*y1*y3 + b1*b2*c2*y1*y3 + a2*b1*b2*c2*y1*y3 + a1*a3*b1*b2*c2*y1*y3 + a2*a3*b1*b2*c2*y1*y3 + a1*a2*a3*b1*b2*c2*y1*y3 + a1*b3*c2*y1*y3 + a3*b3*c2*y1*y3 + a1*a3*b3*c2*y1*y3 + a1*a2*a3*b3*c2*y1*y3 + a2*b1*b3*c2*y1*y3 + a3*b1*b3*c2*y1*y3 + a1*a3*b1*b3*c2*y1*y3 + a2*a3*b1*b3*c2*y1*y3 + a1*a2*a3*b1*b3*c2*y1*y3 + a3*b2*b3*c2*y1*y3 + b1*b2*b3*c2*y1*y3 + a1*b1*b2*b3*c2*y1*y3 + a2*b1*b2*b3*c2*y1*y3 + c1*c2*y1*y3 + b1*c1*c2*y1*y3 + b2*c1*c2*y1*y3 + a3*b2*c1*c2*y1*y3 + a2*a3*b2*c1*c2*y1*y3 + b1*b2*c1*c2*y1*y3 + a3*b1*b2*c1*c2*y1*y3 + a2*a3*b1*b2*c1*c2*y1*y3 + b3*c1*c2*y1*y3 + a3*b3*c1*c2*y1*y3 + a2*a3*b3*c1*c2*y1*y3 + b1*b3*c1*c2*y1*y3 + a3*b1*b3*c1*c2*y1*y3 + a2*a3*b1*b3*c1*c2*y1*y3 + a1*a3*b2*c3*y1*y3 + a1*a2*a3*b2*c3*y1*y3 + a3*b1*b2*c3*y1*y3 + a1*a3*b1*b2*c3*y1*y3 + a2*a3*b1*b2*c3*y1*y3 + a1*a2*a3*b1*b2*c3*y1*y3 + a2*a3*b3*c3*y1*y3 + a1*a2*a3*b3*c3*y1*y3 + a1*a2*a3*b1*b3*c3*y1*y3 + a3*b2*b3*c3*y1*y3 + a1*a3*b2*b3*c3*y1*y3 + a2*a3*b2*b3*c3*y1*y3 + a3*b2*c1*c3*y1*y3 + a2*a3*b2*c1*c3*y1*y3 + a3*b1*b2*c1*c3*y1*y3 + a2*a3*b1*b2*c1*c3*y1*y3 + a2*a3*b3*c1*c3*y1*y3 + a2*a3*b1*b3*c1*c3*y1*y3 + a3*b2*b3*c1*c3*y1*y3 + a3*b1*b2*b3*c1*c3*y1*y3 + a1*a2*b2*c2*c3*y1*y3 + a1*a3*b2*c2*c3*y1*y3 + a2*b1*b2*c2*c3*y1*y3 + a1*a2*b1*b2*c2*c3*y1*y3 + a3*b1*b2*c2*c3*y1*y3 + a1*a3*b1*b2*c2*c3*y1*y3 + a3*b3*c2*c3*y1*y3 + a1*a3*b3*c2*c3*y1*y3 + a1*a3*b1*b3*c2*c3*y1*y3 + a1*a2*b2*b3*c2*c3*y1*y3 + a3*b2*b3*c2*c3*y1*y3 + a2*b1*b2*b3*c2*c3*y1*y3 + a1*a2*b1*b2*b3*c2*c3*y1*y3 + a2*b2*c1*c2*c3*y1*y3 + a3*b2*c1*c2*c3*y1*y3 + a2*b1*b2*c1*c2*c3*y1*y3 + a3*b1*b2*c1*c2*c3*y1*y3 + a3*b3*c1*c2*c3*y1*y3 + a3*b1*b3*c1*c2*c3*y1*y3 + a2*b2*b3*c1*c2*c3*y1*y3 + a2*b1*b2*b3*c1*c2*c3*y1*y3 + a1*a3*y2*y3 + b1*y2*y3 + a2*b1*y2*y3 + a3*b1*y2*y3 + a1*a3*b1*y2*y3 + a1*a3*b2*y2*y3 + a1*b1*b2*y2*y3 + a3*b1*b2*y2*y3 + a1*a3*b1*b2*y2*y3 + a1*a2*a3*b1*b2*y2*y3 + a1*a2*b3*y2*y3 + a1*a3*b3*y2*y3 + b1*b3*y2*y3 + a2*b1*b3*y2*y3 + a3*b1*b3*y2*y3 + a1*a2*a3*b1*b3*y2*y3 + a1*b2*b3*y2*y3 + a1*a2*b1*b2*b3*y2*y3 + a1*a3*b1*b2*b3*y2*y3 + a1*a3*c1*y2*y3 + a2*a3*c1*y2*y3 + a1*a3*b1*c1*y2*y3 + a2*a3*b1*c1*y2*y3 + a1*a3*b2*c1*y2*y3 + a2*a3*b2*c1*y2*y3 + b1*b2*c1*y2*y3 + a3*b1*b2*c1*y2*y3 + a2*a3*b1*b2*c1*y2*y3 + a1*a2*a3*b1*b2*c1*y2*y3 + a1*b3*c1*y2*y3 + a2*b3*c1*y2*y3 + a1*a3*b3*c1*y2*y3 + a2*a3*b3*c1*y2*y3 + a1*b1*b3*c1*y2*y3 + a2*a3*b1*b3*c1*y2*y3 + a1*a2*a3*b1*b3*c1*y2*y3 + a1*b2*b3*c1*y2*y3 + a2*b2*b3*c1*y2*y3 + a3*b2*b3*c1*y2*y3 + b1*b2*b3*c1*y2*y3 + a1*b1*b2*b3*c1*y2*y3 + a1*a3*c2*y2*y3 + b1*c2*y2*y3 + a2*b1*c2*y2*y3 + a3*b1*c2*y2*y3 + a1*a3*b1*c2*y2*y3 + a1*a3*b2*c2*y2*y3 + b1*b2*c2*y2*y3 + a1*a2*a3*b1*b2*c2*y2*y3 + a1*b3*c2*y2*y3 + a1*a3*b3*c2*y2*y3 + b1*b3*c2*y2*y3 + a2*b1*b3*c2*y2*y3 + a3*b1*b3*c2*y2*y3 + a1*a2*a3*b1*b3*c2*y2*y3 + a1*b2*b3*c2*y2*y3 + b1*b2*b3*c2*y2*y3 + a3*b1*b2*c1*c2*y2*y3 + a2*a3*b1*b2*c1*c2*y2*y3 + b1*b3*c1*c2*y2*y3 + a1*a3*b1*b3*c1*c2*y2*y3 + a2*a3*b1*b3*c1*c2*y2*y3 + a3*b2*b3*c1*c2*y2*y3 + b1*b2*b3*c1*c2*y2*y3 + a1*a3*b1*b2*b3*c1*c2*y2*y3 + a1*a3*c3*y2*y3 + b1*c3*y2*y3 + a2*b1*c3*y2*y3 + a3*b1*c3*y2*y3 + a1*a3*b1*c3*y2*y3 + a1*a3*b2*c3*y2*y3 + a1*b1*b2*c3*y2*y3 + a1*a2*a3*b1*b2*c3*y2*y3 + b1*b3*c3*y2*y3 + a2*b1*b3*c3*y2*y3 + a1*a3*b1*b3*c3*y2*y3 + a1*a2*a3*b1*b3*c3*y2*y3 + a1*b2*b3*c3*y2*y3 + c1*c3*y2*y3 + a1*c1*c3*y2*y3 + a2*c1*c3*y2*y3 + a3*c1*c3*y2*y3 + b1*c1*c3*y2*y3 + a1*b1*c1*c3*y2*y3 + a2*b1*c1*c3*y2*y3 + a3*b1*c1*c3*y2*y3 + b2*c1*c3*y2*y3 + a1*b2*c1*c3*y2*y3 + a2*b2*c1*c3*y2*y3 + a3*b2*c1*c3*y2*y3 + a1*b1*b2*c1*c3*y2*y3 + a1*a2*b1*b2*c1*c3*y2*y3 + a3*b1*b2*c1*c3*y2*y3 + a1*a3*b1*b2*c1*c3*y2*y3 + a2*a3*b1*b2*c1*c3*y2*y3 + a1*b3*c1*c3*y2*y3 + a2*b3*c1*c3*y2*y3 + a1*b1*b3*c1*c3*y2*y3 + a2*b1*b3*c1*c3*y2*y3 + a3*b1*b3*c1*c3*y2*y3 + a2*a3*b1*b3*c1*c3*y2*y3 + a1*b2*b3*c1*c3*y2*y3 + a2*b2*b3*c1*c3*y2*y3 + a3*b2*b3*c1*c3*y2*y3 + b1*b2*b3*c1*c3*y2*y3 + a1*b1*b2*b3*c1*c3*y2*y3 + a1*a2*b1*b2*b3*c1*c3*y2*y3 + a1*a3*b1*b2*b3*c1*c3*y2*y3 + a1*c2*c3*y2*y3 + a1*b1*c2*c3*y2*y3 + a1*b2*c2*c3*y2*y3 + a1*b1*b2*c2*c3*y2*y3 + a1*a2*b1*b2*c2*c3*y2*y3 + a1*a3*b1*b2*c2*c3*y2*y3 + a1*b3*c2*c3*y2*y3 + a1*b1*b3*c2*c3*y2*y3 + a1*a3*b1*b3*c2*c3*y2*y3 + a1*b2*b3*c2*c3*y2*y3 + a1*b1*b2*b3*c2*c3*y2*y3 + a1*a2*b1*b2*b3*c2*c3*y2*y3 + a2*b1*b2*c1*c2*c3*y2*y3 + a3*b1*b2*c1*c2*c3*y2*y3 + a3*b1*b3*c1*c2*c3*y2*y3 + a2*b1*b2*b3*c1*c2*c3*y2*y3 + (a2*b1*y3*(1 + y3))/2 + (a2*a3*b1*y3*(1 + y3))/2 + (a3*b1*b2*y3*(1 + y3))/2 + (a1*a3*b1*b2*y3*(1 + y3))/2 + (a1*a2*b3*y3*(1 + y3))/2 + (a2*b1*b3*y3*(1 + y3))/2 + (a2*a3*b1*b3*y3*(1 + y3))/2 + (a1*b2*b3*y3*(1 + y3))/2 + (a1*a3*b2*b3*y3*(1 + y3))/2 + (a1*b1*b2*b3*y3*(1 + y3))/2 + (a1*a3*b1*b2*c1*y3*(1 + y3))/2 + (a2*a3*b1*b2*c1*y3*(1 + y3))/2 + (a2*b1*b3*c1*y3*(1 + y3))/2 + (a1*a3*b2*b3*c1*y3*(1 + y3))/2 + (a2*a3*b2*b3*c1*y3*(1 + y3))/2 + (b1*c2*y3*(1 + y3))/2 + (a2*b1*c2*y3*(1 + y3))/2 + (a3*b1*c2*y3*(1 + y3))/2 + (a2*a3*b1*c2*y3*(1 + y3))/2 + (a2*b1*b2*c2*y3*(1 + y3))/2 + (a3*b1*b2*c2*y3*(1 + y3))/2 + (a1*a3*b1*b2*c2*y3*(1 + y3))/2 + (a2*a3*b1*b2*c2*y3*(1 + y3))/2 + (b1*b3*c2*y3*(1 + y3))/2 + (a1*b1*b3*c2*y3*(1 + y3))/2 + (a1*b2*b3*c2*y3*(1 + y3))/2 + (a1*a3*b2*b3*c2*y3*(1 + y3))/2 + (a3*b1*b2*b3*c2*y3*(1 + y3))/2 + (a3*b1*b2*c1*c2*y3*(1 + y3))/2 + (b1*b3*c1*c2*y3*(1 + y3))/2 + (a3*b2*b3*c1*c2*y3*(1 + y3))/2 + (b1*b2*b3*c1*c2*y3*(1 + y3))/2 + (a2*b1*c3*y3*(1 + y3))/2 + (a2*a3*b1*c3*y3*(1 + y3))/2 + (a1*a3*b1*b2*c3*y3*(1 + y3))/2 + (a2*a3*b1*b2*c3*y3*(1 + y3))/2 + (a2*b1*b3*c3*y3*(1 + y3))/2 + (a1*a3*b2*b3*c3*y3*(1 + y3))/2 + (b1*b2*b3*c3*y3*(1 + y3))/2 + (a2*b1*b2*b3*c3*y3*(1 + y3))/2 + (a3*b1*b2*b3*c3*y3*(1 + y3))/2 + (a1*b1*b2*c1*c3*y3*(1 + y3))/2 + (a2*b1*b2*c1*c3*y3*(1 + y3))/2 + (a1*b1*b2*b3*c1*c3*y3*(1 + y3))/2 + (a2*b1*b2*b3*c1*c3*y3*(1 + y3))/2 + (b1*c2*c3*y3*(1 + y3))/2 + (a2*b1*c2*c3*y3*(1 + y3))/2 + (a3*b1*c2*c3*y3*(1 + y3))/2 + (b1*b2*c2*c3*y3*(1 + y3))/2 + (a1*b1*b2*c2*c3*y3*(1 + y3))/2 + (a2*b1*b2*c2*c3*y3*(1 + y3))/2 + (a3*b1*b2*c2*c3*y3*(1 + y3))/2 + (a2*b1*b3*c2*c3*y3*(1 + y3))/2 + (a1*b1*b2*b3*c2*c3*y3*(1 + y3))/2 + (a2*b1*b2*b3*c2*c3*y3*(1 + y3))/2 + (b1*b2*c1*c2*c3*y3*(1 + y3))/2 + (b1*b2*b3*c1*c2*c3*y3*(1 + y3))/2 + a1*a3*b2*z1 + a2*a3*b2*z1 + a1*a3*b1*b2*z1 + a1*a2*a3*b1*b2*z1 + a1*a2*a3*b3*z1 + a2*b1*b3*z1 + a1*a2*b1*b3*z1 + a2*a3*b1*b3*z1 + a1*a2*b2*b3*z1 + a2*a3*b2*b3*z1 + a1*a2*a3*b2*b3*z1 + a1*a3*b1*b2*b3*z1 + a1*a2*a3*b1*b2*b3*z1 + a2*a3*b1*c1*z1 + a1*a2*a3*b1*c1*z1 + a1*a2*a3*b2*c1*z1 + a1*a3*b1*b2*c1*z1 + a1*a2*b3*c1*z1 + b1*b2*b3*c1*z1 + a2*b1*b2*b3*c1*z1 + a2*a3*c2*z1 + a1*a2*a3*c2*z1 + a2*a3*b1*c2*z1 + a1*a2*a3*b1*c2*z1 + a1*a3*b2*c2*z1 + a1*a2*a3*b2*c2*z1 + a2*a3*b1*b2*c2*z1 + a1*a2*a3*b1*b2*c2*z1 + a1*b3*c2*z1 + a2*b3*c2*z1 + a1*a3*b3*c2*z1 + a1*a2*a3*b3*c2*z1 + b1*b3*c2*z1 + a1*a3*b1*b3*c2*z1 + a1*a2*a3*b1*b3*c2*z1 + b2*b3*c2*z1 + a1*b2*b3*c2*z1 + a3*b2*b3*c2*z1 + a1*a3*b2*b3*c2*z1 + a1*a2*b1*b2*b3*c2*z1 + a3*b1*b2*b3*c2*z1 + a2*a3*b1*b2*b3*c2*z1 + a1*a3*b1*c1*c2*z1 + a2*a3*b1*c1*c2*z1 + a3*b2*c1*c2*z1 + a2*a3*b2*c1*c2*z1 + a1*b3*c1*c2*z1 + a1*a2*b3*c1*c2*z1 + a2*a3*b3*c1*c2*z1 + b1*b3*c1*c2*z1 + a1*a2*b1*b3*c1*c2*z1 + a3*b1*b3*c1*c2*z1 + b2*b3*c1*c2*z1 + a2*b2*b3*c1*c2*z1 + a1*a2*b2*b3*c1*c2*z1 + a1*a2*b1*c3*z1 + a2*a3*b1*c3*z1 + a1*b2*c3*z1 + a2*b2*c3*z1 + a1*a2*b1*b2*c3*z1 + a1*a3*b1*b2*c3*z1 + a1*a2*b3*c3*z1 + a1*a2*b2*b3*c3*z1 + a1*a3*b2*b3*c3*z1 + a2*a3*b2*b3*c3*z1 + a2*b1*b2*b3*c3*z1 + a1*a2*b1*b2*b3*c3*z1 + a2*b1*c1*c3*z1 + a1*b2*c1*c3*z1 + a1*a2*b2*c1*c3*z1 + a1*a3*b2*c1*c3*z1 + b1*b2*c1*c3*z1 + a1*b1*b2*c1*c3*z1 + a3*b1*b2*c1*c3*z1 + a1*a2*b1*b3*c1*c3*z1 + a1*b2*b3*c1*c3*z1 + a1*a2*b2*b3*c1*c3*z1 + b1*b2*b3*c1*c3*z1 + a1*b1*b2*b3*c1*c3*z1 + a1*a3*c2*c3*z1 + a2*a3*c2*c3*z1 + a1*b1*c2*c3*z1 + a1*a2*b1*c2*c3*z1 + a3*b1*c2*c3*z1 + a1*a3*b1*c2*c3*z1 + a1*b2*c2*c3*z1 + a2*b2*c2*c3*z1 + a3*b2*c2*c3*z1 + a1*a3*b1*b2*c2*c3*z1 + a1*a2*a3*b1*b2*c2*c3*z1 + a1*a3*b3*c2*c3*z1 + a2*a3*b3*c2*c3*z1 + a2*b1*b3*c2*c3*z1 + a1*b1*b2*b3*c2*c3*z1 + a2*b1*b2*b3*c2*c3*z1 + a1*a3*b1*b2*b3*c2*c3*z1 + a1*a2*a3*b1*b2*b3*c2*c3*z1 + a2*c1*c2*c3*z1 + a2*b1*c1*c2*c3*z1 + a3*b1*c1*c2*c3*z1 + b2*c1*c2*c3*z1 + a3*b2*c1*c2*c3*z1 + b1*b2*c1*c2*c3*z1 + a3*b1*b2*c1*c2*c3*z1 + a2*a3*b1*b2*c1*c2*c3*z1 + a1*b1*b3*c1*c2*c3*z1 + a3*b2*b3*c1*c2*c3*z1 + b1*b2*b3*c1*c2*c3*z1 + a3*b1*b2*b3*c1*c2*c3*z1 + a2*a3*b1*b2*b3*c1*c2*c3*z1 + a3*b2*x1*z1 + a1*a3*b2*x1*z1 + a3*b1*b2*x1*z1 + a1*a2*b3*x1*z1 + a2*a3*b3*x1*z1 + a1*b2*b3*x1*z1 + a2*b2*b3*x1*z1 + a3*b2*b3*x1*z1 + a3*b2*c1*x1*z1 + a3*b1*b2*c1*x1*z1 + a2*b3*c1*x1*z1 + b2*b3*c1*x1*z1 + a1*b2*b3*c1*x1*z1 + a2*b2*b3*c1*x1*z1 + a3*b1*b2*c2*x1*z1 + a3*b3*c2*x1*z1 + b2*b3*c2*x1*z1 + a2*b2*b3*c2*x1*z1 + a3*b2*b3*c2*x1*z1 + a1*b2*c3*x1*z1 + a1*b1*b2*c3*x1*z1 + a2*b1*b2*c3*x1*z1 + a3*b1*b2*c3*x1*z1 + a2*b3*c3*x1*z1 + a1*b2*b3*c3*x1*z1 + a2*b2*b3*c3*x1*z1 + a3*b2*b3*c3*x1*z1 + b2*c1*c3*x1*z1 + b1*b2*c1*c3*x1*z1 + b2*b3*c1*c3*x1*z1 + b1*b2*b3*c1*c3*x1*z1 + b3*c2*c3*x1*z1 + b2*b3*c2*c3*x1*z1 + b1*b2*b3*c2*c3*x1*z1 + a1*a3*x2*z1 + a2*a3*b1*x2*z1 + a1*a3*b2*x2*z1 + a1*a3*b1*b2*x2*z1 + a2*a3*b1*b2*x2*z1 + a1*b3*x2*z1 + a2*b3*x2*z1 + a1*a2*b3*x2*z1 + a3*b3*x2*z1 + a1*a3*b3*x2*z1 + a2*a3*b3*x2*z1 + a1*a2*b1*b3*x2*z1 + a1*b2*b3*x2*z1 + a2*b2*b3*x2*z1 + a1*a2*b2*b3*x2*z1 + a3*b2*b3*x2*z1 + a3*b1*c1*x2*z1 + b1*b3*c1*x2*z1 + a1*b1*b3*c1*x2*z1 + a2*b1*b3*c1*x2*z1 + a3*b1*b3*c1*x2*z1 + b1*b2*b3*c1*x2*z1 + a2*b1*b2*b3*c1*x2*z1 + a3*c2*x2*z1 + a3*b2*c2*x2*z1 + b3*c2*x2*z1 + a1*b3*c2*x2*z1 + a2*b3*c2*x2*z1 + a3*b1*b3*c2*x2*z1 + b2*b3*c2*x2*z1 + a1*b2*b3*c2*x2*z1 + a2*b2*b3*c2*x2*z1 + a3*b2*b3*c2*x2*z1 + b1*b2*b3*c2*x2*z1 + a1*b1*b2*b3*c2*x2*z1 + a2*b1*b2*b3*c2*x2*z1 + b1*b2*b3*c1*c2*x2*z1 + a1*c3*x2*z1 + a2*c3*x2*z1 + a3*c3*x2*z1 + a1*b2*c3*x2*z1 + a2*b2*c3*x2*z1 + a3*b2*c3*x2*z1 + a1*b3*c3*x2*z1 + a3*b3*c3*x2*z1 + a2*b1*b3*c3*x2*z1 + a2*b2*b3*c3*x2*z1 + a3*b2*b3*c3*x2*z1 + a1*b1*b2*b3*c3*x2*z1 + a2*b1*b2*b3*c3*x2*z1 + b1*c1*c3*x2*z1 + b1*b2*b3*c1*c3*x2*z1 + b1*c2*c3*x2*z1 + b3*c2*c3*x2*z1 + b1*b3*c2*c3*x2*z1 + b1*b2*b3*c2*c3*x2*z1 + a1*a2*x3*z1 + a2*a3*x3*z1 + a2*a3*b1*x3*z1 + a1*a2*b2*x3*z1 + a2*a3*b2*x3*z1 + a1*a2*b1*b2*x3*z1 + a2*a3*b1*b2*x3*z1 + a1*a2*a3*b1*b2*x3*z1 + a1*a2*b3*x3*z1 + a2*a3*b3*x3*z1 + a1*a2*b1*b3*x3*z1 + a2*a3*b1*b3*x3*z1 + a1*a2*a3*b1*b3*x3*z1 + a1*a2*b2*b3*x3*z1 + a1*a3*b2*b3*x3*z1 + a1*a2*b1*b2*b3*x3*z1 + a1*a3*b1*b2*b3*x3*z1 + a2*b1*c1*x3*z1 + a2*a3*b1*b2*c1*x3*z1 + a2*a3*b1*b3*c1*x3*z1 + c2*x3*z1 + a1*c2*x3*z1 + a2*c2*x3*z1 + a3*c2*x3*z1 + b1*c2*x3*z1 + a2*b1*c2*x3*z1 + a3*b1*c2*x3*z1 + b2*c2*x3*z1 + a1*b2*c2*x3*z1 + a2*b2*c2*x3*z1 + a3*b2*c2*x3*z1 + b1*b2*c2*x3*z1 + a2*b1*b2*c2*x3*z1 + a1*a2*b1*b2*c2*x3*z1 + a3*b1*b2*c2*x3*z1 + a1*a2*a3*b1*b2*c2*x3*z1 + b3*c2*x3*z1 + a1*b3*c2*x3*z1 + a2*b3*c2*x3*z1 + a3*b3*c2*x3*z1 + b1*b3*c2*x3*z1 + a2*b1*b3*c2*x3*z1 + a1*a2*b1*b3*c2*x3*z1 + a3*b1*b3*c2*x3*z1 + a1*a2*a3*b1*b3*c2*x3*z1 + b2*b3*c2*x3*z1 + a1*b2*b3*c2*x3*z1 + a2*b2*b3*c2*x3*z1 + b1*b2*b3*c2*x3*z1 + a1*b1*b2*b3*c2*x3*z1 + a2*b1*b2*b3*c2*x3*z1 + b1*c1*c2*x3*z1 + b1*b2*c1*c2*x3*z1 + a2*b1*b2*c1*c2*x3*z1 + a2*a3*b1*b2*c1*c2*x3*z1 + b1*b3*c1*c2*x3*z1 + a2*b1*b3*c1*c2*x3*z1 + a2*a3*b1*b3*c1*c2*x3*z1 + a1*a2*b1*b2*c3*x3*z1 + a1*a2*a3*b1*b2*c3*x3*z1 + a1*a2*b1*b3*c3*x3*z1 + a1*a2*a3*b1*b3*c3*x3*z1 + a2*b1*b2*c1*c3*x3*z1 + a2*a3*b1*b2*c1*c3*x3*z1 + a2*b1*b3*c1*c3*x3*z1 + a2*a3*b1*b3*c1*c3*x3*z1 + a1*a2*b1*b2*c2*c3*x3*z1 + a1*a3*b1*b2*c2*c3*x3*z1 + a1*b1*b3*c2*c3*x3*z1 + a1*a3*b1*b3*c2*c3*x3*z1 + a1*b1*b2*b3*c2*c3*x3*z1 + a1*a2*b1*b2*b3*c2*c3*x3*z1 + a2*b1*b2*c1*c2*c3*x3*z1 + a3*b1*b2*c1*c2*c3*x3*z1 + b1*b3*c1*c2*c3*x3*z1 + a3*b1*b3*c1*c2*c3*x3*z1 + b1*b2*b3*c1*c2*c3*x3*z1 + a2*b1*b2*b3*c1*c2*c3*x3*z1 + a1*a3*b2*y1*z1 + a3*b1*b2*y1*z1 + a2*b3*y1*z1 + a1*a2*b3*y1*z1 + a2*a3*b3*y1*z1 + a2*b1*b3*y1*z1 + b2*b3*y1*z1 + a3*b2*b3*y1*z1 + a3*b2*c1*y1*z1 + a3*b1*b2*c1*y1*z1 + a2*b3*c1*y1*z1 + b2*b3*c1*y1*z1 + a1*b2*b3*c1*y1*z1 + a2*b2*b3*c1*y1*z1 + b1*b2*b3*c1*y1*z1 + a3*b1*b2*c2*y1*z1 + a3*b3*c2*y1*z1 + b2*b3*c2*y1*z1 + a2*b2*b3*c2*y1*z1 + a3*b2*b3*c2*y1*z1 + b2*c3*y1*z1 + a1*b2*c3*y1*z1 + b1*b2*c3*y1*z1 + a1*b1*b2*c3*y1*z1 + a2*b1*b2*c3*y1*z1 + a3*b1*b2*c3*y1*z1 + a2*b3*c3*y1*z1 + b2*b3*c3*y1*z1 + a1*b2*b3*c3*y1*z1 + a2*b2*b3*c3*y1*z1 + a3*b2*b3*c3*y1*z1 + b2*c1*c3*y1*z1 + b1*b2*c1*c3*y1*z1 + b2*b3*c1*c3*y1*z1 + b1*b2*b3*c1*c3*y1*z1 + b3*c2*c3*y1*z1 + b2*b3*c2*c3*y1*z1 + b1*b2*b3*c2*c3*y1*z1 + a1*a3*y2*z1 + a2*a3*b1*y2*z1 + a1*a3*b2*y2*z1 + a3*b1*b2*y2*z1 + a2*a3*b1*b2*y2*z1 + a1*b3*y2*z1 + a2*b3*y2*z1 + a1*a2*b3*y2*z1 + a1*a3*b3*y2*z1 + a2*a3*b3*y2*z1 + a1*b1*b3*y2*z1 + a3*b1*b3*y2*z1 + a1*a3*b1*b3*y2*z1 + b2*b3*y2*z1 + a1*a2*b2*b3*y2*z1 + a3*b2*b3*y2*z1 + a3*b1*c1*y2*z1 + a3*b1*b2*c1*y2*z1 + a1*b1*b3*c1*y2*z1 + a2*b1*b2*b3*c1*y2*z1 + a3*c2*y2*z1 + a3*b2*c2*y2*z1 + a1*a3*b1*b2*c2*y2*z1 + b3*c2*y2*z1 + a1*b3*c2*y2*z1 + a2*b3*c2*y2*z1 + a1*a2*b1*b3*c2*y2*z1 + a3*b1*b3*c2*y2*z1 + a1*a3*b1*b3*c2*y2*z1 + a1*b2*b3*c2*y2*z1 + a2*b2*b3*c2*y2*z1 + a3*b2*b3*c2*y2*z1 + a1*b1*b2*b3*c2*y2*z1 + a2*b1*b2*b3*c2*y2*z1 + a3*b1*b2*c1*c2*y2*z1 + a2*b1*b3*c1*c2*y2*z1 + a3*b1*b3*c1*c2*y2*z1 + b1*b2*b3*c1*c2*y2*z1 + a1*c3*y2*z1 + a2*c3*y2*z1 + a3*c3*y2*z1 + a1*b2*c3*y2*z1 + a2*b2*c3*y2*z1 + a3*b2*c3*y2*z1 + a1*a2*b1*b2*c3*y2*z1 + a1*a3*b1*b2*c3*y2*z1 + b3*c3*y2*z1 + a1*b3*c3*y2*z1 + a3*b3*c3*y2*z1 + b1*b3*c3*y2*z1 + a2*b1*b3*c3*y2*z1 + a1*a2*b1*b3*c3*y2*z1 + a1*a3*b1*b3*c3*y2*z1 + b2*b3*c3*y2*z1 + a2*b2*b3*c3*y2*z1 + a3*b2*b3*c3*y2*z1 + a1*b1*b2*b3*c3*y2*z1 + a2*b1*b2*b3*c3*y2*z1 + b1*c1*c3*y2*z1 + a2*b1*b2*c1*c3*y2*z1 + a3*b1*b2*c1*c3*y2*z1 + a2*b1*b3*c1*c3*y2*z1 + a3*b1*b3*c1*c3*y2*z1 + b1*b2*b3*c1*c3*y2*z1 + b1*c2*c3*y2*z1 + b3*c2*c3*y2*z1 + b1*b3*c2*c3*y2*z1 + a1*b1*b3*c2*c3*y2*z1 + b1*b2*b3*c2*c3*y2*z1 + a1*b1*b2*b3*c2*c3*y2*z1 + b1*b3*c1*c2*c3*y2*z1 + b1*b2*b3*c1*c2*c3*y2*z1 + a1*a2*y3*z1 + a2*a3*y3*z1 + a2*b1*y3*z1 + a2*a3*b1*y3*z1 + a1*b2*y3*z1 + a2*b2*y3*z1 + a1*a2*b2*y3*z1 + a2*a3*b2*y3*z1 + b1*b2*y3*z1 + a2*b1*b2*y3*z1 + a3*b1*b2*y3*z1 + a1*a3*b1*b2*y3*z1 + a2*a3*b1*b2*y3*z1 + a1*a2*a3*b1*b2*y3*z1 + a1*a2*b3*y3*z1 + a2*a3*b3*y3*z1 + a2*b1*b3*y3*z1 + a1*a2*a3*b1*b3*y3*z1 + b2*b3*y3*z1 + a1*a2*b2*b3*y3*z1 + a3*b2*b3*y3*z1 + a2*a3*b2*b3*y3*z1 + a1*a2*b1*b2*b3*y3*z1 + a1*a3*b1*b2*b3*y3*z1 + a2*b1*c1*y3*z1 + b1*b2*c1*y3*z1 + a2*b1*b2*c1*y3*z1 + a3*b1*b2*c1*y3*z1 + a2*a3*b1*b2*c1*y3*z1 + a2*b1*b3*c1*y3*z1 + a2*a3*b1*b3*c1*y3*z1 + a3*b1*b2*b3*c1*y3*z1 + c2*y3*z1 + a1*c2*y3*z1 + a2*c2*y3*z1 + a3*c2*y3*z1 + a2*b1*c2*y3*z1 + a3*b1*c2*y3*z1 + a1*b2*c2*y3*z1 + a2*b2*c2*y3*z1 + a3*b2*c2*y3*z1 + b1*b2*c2*y3*z1 + a2*b1*b2*c2*y3*z1 + a3*b1*b2*c2*y3*z1 + a1*a3*b1*b2*c2*y3*z1 + a1*a2*a3*b1*b2*c2*y3*z1 + b3*c2*y3*z1 + a1*b3*c2*y3*z1 + a2*b3*c2*y3*z1 + a3*b3*c2*y3*z1 + a2*b1*b3*c2*y3*z1 + a1*a3*b1*b3*c2*y3*z1 + a1*a2*a3*b1*b3*c2*y3*z1 + b2*b3*c2*y3*z1 + a1*b2*b3*c2*y3*z1 + a2*b2*b3*c2*y3*z1 + a3*b2*b3*c2*y3*z1 + a1*b1*b2*b3*c2*y3*z1 + a2*b1*b2*b3*c2*y3*z1 + b1*c1*c2*y3*z1 + b1*b2*c1*c2*y3*z1 + a3*b1*b2*c1*c2*y3*z1 + a2*a3*b1*b2*c1*c2*y3*z1 + b1*b3*c1*c2*y3*z1 + a3*b1*b3*c1*c2*y3*z1 + a2*a3*b1*b3*c1*c2*y3*z1 + a1*a3*b1*b2*c3*y3*z1 + a1*a2*a3*b1*b2*c3*y3*z1 + a2*a3*b1*b3*c3*y3*z1 + a1*a2*a3*b1*b3*c3*y3*z1 + a1*a3*b2*b3*c3*y3*z1 + a2*a3*b2*b3*c3*y3*z1 + a3*b1*b2*c1*c3*y3*z1 + a2*a3*b1*b2*c1*c3*y3*z1 + a2*a3*b1*b3*c1*c3*y3*z1 + a3*b1*b2*b3*c1*c3*y3*z1 + a1*a2*b1*b2*c2*c3*y3*z1 + a1*a3*b1*b2*c2*c3*y3*z1 + a3*b1*b3*c2*c3*y3*z1 + a1*a3*b1*b3*c2*c3*y3*z1 + a3*b2*b3*c2*c3*y3*z1 + a1*a2*b1*b2*b3*c2*c3*y3*z1 + a2*b1*b2*c1*c2*c3*y3*z1 + a3*b1*b2*c1*c2*c3*y3*z1 + a3*b1*b3*c1*c2*c3*y3*z1 + a2*b1*b2*b3*c1*c2*c3*y3*z1 + (a2*a3*b1*z1*(1 + z1))/2 + (a2*a3*b2*z1*(1 + z1))/2 + (a3*b1*b2*z1*(1 + z1))/2 + (a1*a2*b3*z1*(1 + z1))/2 + (a2*a3*b3*z1*(1 + z1))/2 + (a1*b2*b3*z1*(1 + z1))/2 + (a2*b2*b3*z1*(1 + z1))/2 + (a3*b2*b3*z1*(1 + z1))/2 + (a2*b3*c1*z1*(1 + z1))/2 + (a2*b1*b3*c1*z1*(1 + z1))/2 + (b1*b2*b3*c1*z1*(1 + z1))/2 + (a3*b2*c2*z1*(1 + z1))/2 + (a3*b1*b2*c2*z1*(1 + z1))/2 + (b3*c2*z1*(1 + z1))/2 + (a1*b3*c2*z1*(1 + z1))/2 + (a2*b3*c2*z1*(1 + z1))/2 + (b1*b3*c2*z1*(1 + z1))/2 + (a1*b1*b3*c2*z1*(1 + z1))/2 + (a2*b1*b3*c2*z1*(1 + z1))/2 + (a1*b2*b3*c2*z1*(1 + z1))/2 + (a3*b2*b3*c2*z1*(1 + z1))/2 + (b3*c1*c2*z1*(1 + z1))/2 + (b1*b3*c1*c2*z1*(1 + z1))/2 + (b2*b3*c1*c2*z1*(1 + z1))/2 + (b1*b2*b3*c1*c2*z1*(1 + z1))/2 + (a2*b2*c3*z1*(1 + z1))/2 + (a3*b2*c3*z1*(1 + z1))/2 + (a2*b1*b2*c3*z1*(1 + z1))/2 + (a3*b1*b2*c3*z1*(1 + z1))/2 + (a2*b3*c3*z1*(1 + z1))/2 + (a2*b1*b3*c3*z1*(1 + z1))/2 + (a3*b2*b3*c3*z1*(1 + z1))/2 + (c2*c3*z1*(1 + z1))/2 + (b3*c2*c3*z1*(1 + z1))/2 + (b1*b3*c2*c3*z1*(1 + z1))/2 + (b2*b3*c2*c3*z1*(1 + z1))/2 + (b1*b2*b3*c2*c3*z1*(1 + z1))/2 + a1*a2*a3*b1*z2 + a1*a2*a3*b1*b2*z2 + a1*a3*b1*b2*b3*z2 + a1*a2*a3*b1*b2*b3*z2 + a1*a2*a3*b1*c1*z2 + a3*b1*b2*c1*z2 + a1*a3*b1*b2*c1*z2 + a2*a3*b1*b2*c1*z2 + a1*a2*a3*b1*b2*c1*z2 + a2*b1*b3*c1*z2 + a2*a3*b1*b3*c1*z2 + a1*a2*a3*b1*b3*c1*z2 + a1*b1*b2*b3*c1*z2 + a2*b1*b2*b3*c1*z2 + a1*a2*b1*b2*b3*c1*z2 + a1*a3*b1*b2*b3*c1*z2 + a1*a2*a3*b1*c2*z2 + a1*a3*b1*b2*c2*z2 + a1*a2*b1*b3*c2*z2 + a3*b2*c1*c2*z2 + a2*a3*b2*c1*c2*z2 + a3*b1*b2*c1*c2*z2 + a2*a3*b1*b2*c1*c2*z2 + a2*a3*b3*c1*c2*z2 + a1*a2*b1*b3*c1*c2*z2 + a3*b1*b3*c1*c2*z2 + a2*a3*b1*b3*c1*c2*z2 + b2*b3*c1*c2*z2 + a2*b2*b3*c1*c2*z2 + b1*b2*b3*c1*c2*z2 + a2*b1*b2*b3*c1*c2*z2 + a1*a3*b1*b2*b3*c1*c2*z2 + a1*a2*b1*c3*z2 + a1*a2*b1*b2*c3*z2 + a1*a2*a3*b1*b2*c3*z2 + a1*a2*b1*b3*c3*z2 + a1*a2*a3*b1*b3*c3*z2 + a1*a2*b1*b2*b3*c3*z2 + a2*b1*b2*c1*c3*z2 + a1*a2*b1*b2*c1*c3*z2 + a3*b1*b2*c1*c3*z2 + a1*b1*b3*c1*c3*z2 + a2*b1*b3*c1*c3*z2 + a1*a2*b1*b3*c1*c3*z2 + a3*b1*b3*c1*c3*z2 + a2*a3*b1*b3*c1*c3*z2 + a1*a2*a3*b1*b3*c1*c3*z2 + a1*a2*a3*b1*b2*b3*c1*c3*z2 + a1*a2*b1*c2*c3*z2 + a1*a3*b1*c2*c3*z2 + a1*a3*b1*b2*c2*c3*z2 + a1*a2*a3*b1*b2*c2*c3*z2 + a1*b1*b3*c2*c3*z2 + a1*a2*b1*b3*c2*c3*z2 + a1*b1*b2*b3*c2*c3*z2 + a1*a2*b1*b2*b3*c2*c3*z2 + a1*a3*b1*b2*b3*c2*c3*z2 + a1*a2*a3*b1*b2*b3*c2*c3*z2 + a2*c1*c2*c3*z2 + b1*c1*c2*c3*z2 + a1*b1*c1*c2*c3*z2 + a3*b1*c1*c2*c3*z2 + b2*c1*c2*c3*z2 + a3*b2*c1*c2*c3*z2 + b1*b2*c1*c2*c3*z2 + a1*b1*b2*c1*c2*c3*z2 + a1*a2*b1*b2*c1*c2*c3*z2 + a1*a3*b1*b2*c1*c2*c3*z2 + a2*a3*b1*b2*c1*c2*c3*z2 + a1*a2*a3*b1*b2*c1*c2*c3*z2 + a1*b1*b3*c1*c2*c3*z2 + a2*b1*b3*c1*c2*c3*z2 + a1*a3*b1*b3*c1*c2*c3*z2 + a2*a3*b1*b3*c1*c2*c3*z2 + a1*a2*a3*b1*b3*c1*c2*c3*z2 + a3*b2*b3*c1*c2*c3*z2 + b1*b2*b3*c1*c2*c3*z2 + a2*b1*b2*b3*c1*c2*c3*z2 + a1*a2*b1*b2*b3*c1*c2*c3*z2 + a3*b1*b2*b3*c1*c2*c3*z2 + a3*x1*z2 + a1*a3*x1*z2 + a3*b1*x1*z2 + a1*a3*b1*x1*z2 + a3*b2*x1*z2 + a2*a3*b1*b2*x1*z2 + b3*x1*z2 + a1*b3*x1*z2 + a1*a3*b3*x1*z2 + a2*a3*b3*x1*z2 + a1*a3*b1*b3*x1*z2 + a1*b2*b3*x1*z2 + a2*b2*b3*x1*z2 + a1*a2*b2*b3*x1*z2 + a3*b2*b3*x1*z2 + a1*a3*c1*x1*z2 + a1*a3*b1*c1*x1*z2 + a3*b2*c1*x1*z2 + a1*a3*b2*c1*x1*z2 + a2*b3*c1*x1*z2 + a1*a2*b3*c1*x1*z2 + a1*a3*b3*c1*x1*z2 + a2*b1*b3*c1*x1*z2 + a3*b1*b3*c1*x1*z2 + b2*b3*c1*x1*z2 + a2*b2*b3*c1*x1*z2 + b1*b2*b3*c1*x1*z2 + a2*b1*b2*b3*c1*x1*z2 + a1*a3*c2*x1*z2 + a1*a3*b1*c2*x1*z2 + a3*b2*c2*x1*z2 + a1*a3*b2*c2*x1*z2 + a3*b1*b2*c2*x1*z2 + a2*b3*c2*x1*z2 + a1*a2*b3*c2*x1*z2 + a1*a3*b3*c2*x1*z2 + a2*b1*b3*c2*x1*z2 + a3*b1*b3*c2*x1*z2 + a2*b2*b3*c2*x1*z2 + a3*b2*b3*c2*x1*z2 + b1*b2*b3*c2*x1*z2 + a2*b1*b2*b3*c2*x1*z2 + a1*b2*b3*c1*c2*x1*z2 + a1*a2*c3*x1*z2 + a1*a3*c3*x1*z2 + a1*a2*b1*c3*x1*z2 + a1*a3*b1*c3*x1*z2 + a1*b2*c3*x1*z2 + a2*b2*c3*x1*z2 + a1*a2*b2*c3*x1*z2 + a3*b2*c3*x1*z2 + a1*a3*b2*c3*x1*z2 + b1*b2*c3*x1*z2 + a1*b1*b2*c3*x1*z2 + a2*b1*b2*c3*x1*z2 + a3*b1*b2*c3*x1*z2 + a1*a2*b3*c3*x1*z2 + a3*b3*c3*x1*z2 + a1*a3*b3*c3*x1*z2 + a1*b2*b3*c3*x1*z2 + a2*b2*b3*c3*x1*z2 + a3*b2*b3*c3*x1*z2 + b1*b2*b3*c3*x1*z2 + a1*b1*b2*b3*c3*x1*z2 + a2*b1*b2*b3*c3*x1*z2 + b1*c1*c3*x1*z2 + b2*c1*c3*x1*z2 + b1*b2*c1*c3*x1*z2 + a1*b1*b2*c1*c3*x1*z2 + a1*b1*b3*c1*c3*x1*z2 + b2*b3*c1*c3*x1*z2 + b1*b2*b3*c1*c3*x1*z2 + b1*c2*c3*x1*z2 + a1*b1*b3*c2*c3*x1*z2 + a1*b2*b3*c2*c3*x1*z2 + a3*b1*b2*x2*z2 + b1*b3*x2*z2 + a1*b1*b3*x2*z2 + a1*a3*b1*b2*c1*x2*z2 + b1*b3*c1*x2*z2 + a1*b1*b3*c1*x2*z2 + a1*a2*b1*b3*c1*x2*z2 + a1*a3*b1*b3*c1*x2*z2 + a1*a3*b1*b2*c2*x2*z2 + b1*b3*c2*x2*z2 + a1*b1*b3*c2*x2*z2 + a2*b1*b3*c2*x2*z2 + a1*a2*b1*b3*c2*x2*z2 + a3*b1*b3*c2*x2*z2 + a1*a3*b1*b3*c2*x2*z2 + b1*b2*b3*c2*x2*z2 + a1*b1*b2*b3*c2*x2*z2 + a3*b1*b2*c1*c2*x2*z2 + a1*a3*b1*b2*c1*c2*x2*z2 + b1*b3*c1*c2*x2*z2 + a1*b1*b3*c1*c2*x2*z2 + a2*b1*b3*c1*c2*x2*z2 + a1*a2*b1*b3*c1*c2*x2*z2 + a3*b1*b3*c1*c2*x2*z2 + a1*a3*b1*b3*c1*c2*x2*z2 + b1*b2*b3*c1*c2*x2*z2 + a1*a2*b1*b2*c3*x2*z2 + a1*a3*b1*b2*c3*x2*z2 + a2*b1*b3*c3*x2*z2 + a1*a2*b1*b3*c3*x2*z2 + a3*b1*b3*c3*x2*z2 + a1*a3*b1*b3*c3*x2*z2 + a1*b1*b2*c1*c3*x2*z2 + a2*b1*b2*c1*c3*x2*z2 + a1*a2*b1*b2*c1*c3*x2*z2 + a3*b1*b2*c1*c3*x2*z2 + a1*a3*b1*b2*c1*c3*x2*z2 + a1*b1*b3*c1*c3*x2*z2 + a2*b1*b3*c1*c3*x2*z2 + a1*a2*b1*b3*c1*c3*x2*z2 + a3*b1*b3*c1*c3*x2*z2 + a1*a3*b1*b3*c1*c3*x2*z2 + b1*b3*c2*c3*x2*z2 + a1*b1*b3*c2*c3*x2*z2 + a1*b1*b2*b3*c2*c3*x2*z2 + b1*b3*c1*c2*c3*x2*z2 + a1*b1*b3*c1*c2*c3*x2*z2 + b1*b2*b3*c1*c2*c3*x2*z2 + a1*b1*b2*b3*c1*c2*c3*x2*z2 + a1*a2*b1*b2*x3*z2 + a1*a2*a3*b1*b2*x3*z2 + a1*a2*b1*b3*x3*z2 + a1*a2*a3*b1*b3*x3*z2 + a1*a2*b1*b2*b3*x3*z2 + a1*a3*b1*b2*b3*x3*z2 + a1*a2*b1*b2*c1*x3*z2 + a1*a2*a3*b1*b2*c1*x3*z2 + a1*a2*b1*b3*c1*x3*z2 + a1*a2*a3*b1*b3*c1*x3*z2 + b1*b2*b3*c1*x3*z2 + a1*b1*b2*b3*c1*x3*z2 + a1*a2*b1*b2*c2*x3*z2 + a1*a2*a3*b1*b2*c2*x3*z2 + a1*a2*b1*b3*c2*x3*z2 + a1*a2*a3*b1*b3*c2*x3*z2 + a1*b1*b2*b3*c2*x3*z2 + a1*b1*b2*c1*c2*x3*z2 + a1*a3*b1*b2*c1*c2*x3*z2 + b1*b2*b3*c1*c2*x3*z2 + a1*b1*b2*b3*c1*c2*x3*z2 + a1*a3*b1*b2*b3*c1*c2*x3*z2 + a1*a2*b1*b2*c3*x3*z2 + a1*a2*a3*b1*b2*c3*x3*z2 + a1*a2*b1*b3*c3*x3*z2 + a1*a2*a3*b1*b3*c3*x3*z2 + a1*a2*b1*b2*c1*c3*x3*z2 + a1*b1*b3*c1*c3*x3*z2 + a1*a3*b1*b3*c1*c3*x3*z2 + b1*b2*b3*c1*c3*x3*z2 + a1*b1*b2*b3*c1*c3*x3*z2 + a1*a2*b1*b2*b3*c1*c3*x3*z2 + a1*a3*b1*b2*b3*c1*c3*x3*z2 + a1*a2*b1*b2*c2*c3*x3*z2 + a1*a3*b1*b2*c2*c3*x3*z2 + a1*b1*b3*c2*c3*x3*z2 + a1*a3*b1*b3*c2*c3*x3*z2 + a1*b1*b2*b3*c2*c3*x3*z2 + a1*a2*b1*b2*b3*c2*c3*x3*z2 + a1*b1*b2*c1*c2*c3*x3*z2 + a1*b1*b2*b3*c1*c2*c3*x3*z2 + a3*y1*z2 + a1*a3*y1*z2 + a3*b1*y1*z2 + a1*a3*b1*y1*z2 + a2*a3*b1*b2*y1*z2 + a2*b3*y1*z2 + a1*a3*b3*y1*z2 + a2*a3*b3*y1*z2 + b1*b3*y1*z2 + a1*b1*b3*y1*z2 + a2*b1*b3*y1*z2 + a3*b1*b3*y1*z2 + a1*a3*b1*b3*y1*z2 + b2*b3*y1*z2 + a1*b2*b3*y1*z2 + a1*a2*b2*b3*y1*z2 + a3*b2*b3*y1*z2 + a1*a3*c1*y1*z2 + a1*a3*b1*c1*y1*z2 + a3*b2*c1*y1*z2 + a1*a3*b2*c1*y1*z2 + a2*b3*c1*y1*z2 + a1*a2*b3*c1*y1*z2 + a1*a3*b3*c1*y1*z2 + a2*b1*b3*c1*y1*z2 + a3*b1*b3*c1*y1*z2 + b2*b3*c1*y1*z2 + a2*b2*b3*c1*y1*z2 + b1*b2*b3*c1*y1*z2 + a2*b1*b2*b3*c1*y1*z2 + a1*a3*c2*y1*z2 + a1*a3*b1*c2*y1*z2 + a3*b2*c2*y1*z2 + a1*a3*b2*c2*y1*z2 + a3*b1*b2*c2*y1*z2 + a2*b3*c2*y1*z2 + a1*a2*b3*c2*y1*z2 + a1*a3*b3*c2*y1*z2 + a2*b1*b3*c2*y1*z2 + a3*b1*b3*c2*y1*z2 + a2*b2*b3*c2*y1*z2 + a3*b2*b3*c2*y1*z2 + a2*b1*b2*b3*c2*y1*z2 + a1*b2*b3*c1*c2*y1*z2 + a1*a2*c3*y1*z2 + a1*a3*c3*y1*z2 + a1*a2*b1*c3*y1*z2 + a1*a3*b1*c3*y1*z2 + b2*c3*y1*z2 + a1*b2*c3*y1*z2 + a2*b2*c3*y1*z2 + a1*a2*b2*c3*y1*z2 + a3*b2*c3*y1*z2 + a1*a3*b2*c3*y1*z2 + b1*b2*c3*y1*z2 + a1*b1*b2*c3*y1*z2 + a2*b1*b2*c3*y1*z2 + a3*b1*b2*c3*y1*z2 + a1*a2*b3*c3*y1*z2 + a3*b3*c3*y1*z2 + a1*a3*b3*c3*y1*z2 + b1*b3*c3*y1*z2 + b2*b3*c3*y1*z2 + a1*b2*b3*c3*y1*z2 + a2*b2*b3*c3*y1*z2 + a3*b2*b3*c3*y1*z2 + a1*b1*b2*b3*c3*y1*z2 + a2*b1*b2*b3*c3*y1*z2 + b1*c1*c3*y1*z2 + b2*c1*c3*y1*z2 + b1*b2*c1*c3*y1*z2 + a1*b1*b2*c1*c3*y1*z2 + a1*b1*b3*c1*c3*y1*z2 + b2*b3*c1*c3*y1*z2 + b1*b2*b3*c1*c3*y1*z2 + b1*c2*c3*y1*z2 + a1*b1*b3*c2*c3*y1*z2 + a1*b2*b3*c2*c3*y1*z2 + a1*a3*b1*b2*y2*z2 + a1*a2*b1*b3*y2*z2 + a1*a3*b1*b3*y2*z2 + a3*b1*b2*c1*y2*z2 + a2*b1*b3*c1*y2*z2 + a3*b1*b3*c1*y2*z2 + a3*b1*b2*c2*y2*z2 + a1*b1*b2*b3*c2*y2*z2 + a3*b1*b2*c1*c2*y2*z2 + a1*a3*b1*b2*c1*c2*y2*z2 + b1*b3*c1*c2*y2*z2 + a1*b1*b3*c1*c2*y2*z2 + a2*b1*b3*c1*c2*y2*z2 + a1*a2*b1*b3*c1*c2*y2*z2 + a3*b1*b3*c1*c2*y2*z2 + a1*a3*b1*b3*c1*c2*y2*z2 + a1*b1*b2*b3*c1*c2*y2*z2 + b1*b2*c3*y2*z2 + a1*b1*b2*c3*y2*z2 + a2*b1*b2*c3*y2*z2 + a3*b1*b2*c3*y2*z2 + a1*b1*b3*c3*y2*z2 + b1*b2*b3*c3*y2*z2 + b1*b2*c1*c3*y2*z2 + a2*b1*b2*c1*c3*y2*z2 + a1*a2*b1*b2*c1*c3*y2*z2 + a3*b1*b2*c1*c3*y2*z2 + a1*a3*b1*b2*c1*c3*y2*z2 + b1*b3*c1*c3*y2*z2 + a2*b1*b3*c1*c3*y2*z2 + a1*a2*b1*b3*c1*c3*y2*z2 + a3*b1*b3*c1*c3*y2*z2 + a1*a3*b1*b3*c1*c3*y2*z2 + b1*b2*b3*c2*c3*y2*z2 + b1*b3*c1*c2*c3*y2*z2 + a1*b1*b3*c1*c2*c3*y2*z2 + b1*b2*b3*c1*c2*c3*y2*z2 + a1*b1*b2*b3*c1*c2*c3*y2*z2 + a1*a3*b1*b2*y3*z2 + a1*a2*a3*b1*b2*y3*z2 + a1*a2*a3*b1*b3*y3*z2 + a1*a2*b1*b2*b3*y3*z2 + a1*a3*b1*b2*b3*y3*z2 + a1*a3*b1*b2*c1*y3*z2 + a1*a2*a3*b1*b2*c1*y3*z2 + a1*a3*b1*b3*c1*y3*z2 + a1*a2*a3*b1*b3*c1*y3*z2 + b1*b2*b3*c1*y3*z2 + a1*b1*b2*b3*c1*y3*z2 + a1*a3*b1*b2*c2*y3*z2 + a1*a2*a3*b1*b2*c2*y3*z2 + a1*a3*b1*b3*c2*y3*z2 + a1*a2*a3*b1*b3*c2*y3*z2 + a1*b1*b2*b3*c2*y3*z2 + a1*a3*b1*b2*c1*c2*y3*z2 + b1*b2*b3*c1*c2*y3*z2 + a1*a3*b1*b2*b3*c1*c2*y3*z2 + a1*a3*b1*b2*c3*y3*z2 + a1*a2*a3*b1*b2*c3*y3*z2 + a1*a2*a3*b1*b3*c3*y3*z2 + a1*b1*b2*c1*c3*y3*z2 + a1*a2*b1*b2*c1*c3*y3*z2 + a1*a3*b1*b3*c1*c3*y3*z2 + b1*b2*b3*c1*c3*y3*z2 + a1*b1*b2*b3*c1*c3*y3*z2 + a1*a2*b1*b2*b3*c1*c3*y3*z2 + a1*a3*b1*b2*b3*c1*c3*y3*z2 + a1*a2*b1*b2*c2*c3*y3*z2 + a1*a3*b1*b2*c2*c3*y3*z2 + a1*a3*b1*b3*c2*c3*y3*z2 + a1*a2*b1*b2*b3*c2*c3*y3*z2 + a1*b1*b2*c1*c2*c3*y3*z2 + a1*b1*b2*b3*c1*c2*c3*y3*z2 + a1*a3*b2*z1*z2 + a2*a3*b2*z1*z2 + a2*a3*b1*b2*z1*z2 + a2*a3*b3*z1*z2 + a1*a3*b1*b3*z1*z2 + a1*b2*b3*z1*z2 + a2*b2*b3*z1*z2 + a1*a2*b2*b3*z1*z2 + a3*b2*b3*z1*z2 + a3*b1*b2*c1*z1*z2 + b3*c1*z1*z2 + a1*b3*c1*z1*z2 + a2*b3*c1*z1*z2 + b1*b3*c1*z1*z2 + a1*b1*b3*c1*z1*z2 + a2*b1*b3*c1*z1*z2 + a3*b1*b3*c1*z1*z2 + b1*b2*b3*c1*z1*z2 + a2*b1*b2*b3*c1*z1*z2 + a3*b2*c2*z1*z2 + b3*c2*z1*z2 + a1*b3*c2*z1*z2 + a2*b3*c2*z1*z2 + b1*b3*c2*z1*z2 + a1*b1*b3*c2*z1*z2 + a2*b1*b3*c2*z1*z2 + a3*b1*b3*c2*z1*z2 + a1*b2*b3*c2*z1*z2 + a3*b2*b3*c2*z1*z2 + b1*b2*b3*c2*z1*z2 + a2*b1*b2*b3*c2*z1*z2 + b2*b3*c1*c2*z1*z2 + a1*b2*c3*z1*z2 + a2*b2*c3*z1*z2 + a3*b2*c3*z1*z2 + a2*b3*c3*z1*z2 + a1*b1*b3*c3*z1*z2 + a1*b2*b3*c3*z1*z2 + a3*b2*b3*c3*z1*z2 + a1*b1*b2*b3*c3*z1*z2 + a2*b1*b2*b3*c3*z1*z2 + c1*c3*z1*z2 + b1*c1*c3*z1*z2 + b2*c1*c3*z1*z2 + b3*c1*c3*z1*z2 + c2*c3*z1*z2 + b1*c2*c3*z1*z2 + b3*c2*c3*z1*z2 + b2*b3*c2*c3*z1*z2 + b1*b2*b3*c2*c3*z1*z2 + (a3*b1*b2*z2*(1 + z2))/2 + (a1*a3*b1*b2*z2*(1 + z2))/2 + (a1*a2*b3*z2*(1 + z2))/2 + (b1*b3*z2*(1 + z2))/2 + (a1*b1*b3*z2*(1 + z2))/2 + (a1*a2*b1*b3*z2*(1 + z2))/2 + (a1*a3*b1*b3*z2*(1 + z2))/2 + (a3*b1*b2*c1*z2*(1 + z2))/2 + (a1*a3*b1*b2*c1*z2*(1 + z2))/2 + (b3*c1*z2*(1 + z2))/2 + (a1*b3*c1*z2*(1 + z2))/2 + (a2*b3*c1*z2*(1 + z2))/2 + (a2*b1*b3*c1*z2*(1 + z2))/2 + (a1*a2*b1*b3*c1*z2*(1 + z2))/2 + (a3*b1*b3*c1*z2*(1 + z2))/2 + (a1*a3*b1*b3*c1*z2*(1 + z2))/2 + (a3*b1*b2*c2*z2*(1 + z2))/2 + (a1*a3*b1*b2*c2*z2*(1 + z2))/2 + (a1*b3*c2*z2*(1 + z2))/2 + (b1*b3*c2*z2*(1 + z2))/2 + (a1*b1*b3*c2*z2*(1 + z2))/2 + (a2*b1*b3*c2*z2*(1 + z2))/2 + (a1*a2*b1*b3*c2*z2*(1 + z2))/2 + (a3*b1*b3*c2*z2*(1 + z2))/2 + (a1*a3*b1*b3*c2*z2*(1 + z2))/2 + (a1*b2*b3*c2*z2*(1 + z2))/2 + (b1*b2*b3*c2*z2*(1 + z2))/2 + (b1*b3*c1*c2*z2*(1 + z2))/2 + (b2*b3*c1*c2*z2*(1 + z2))/2 + (b1*b2*b3*c1*c2*z2*(1 + z2))/2 + (a1*b1*b2*b3*c1*c2*z2*(1 + z2))/2 + (b1*b2*c3*z2*(1 + z2))/2 + (a1*b1*b2*c3*z2*(1 + z2))/2 + (a2*b1*b2*c3*z2*(1 + z2))/2 + (a1*a2*b1*b2*c3*z2*(1 + z2))/2 + (a3*b1*b2*c3*z2*(1 + z2))/2 + (a1*a3*b1*b2*c3*z2*(1 + z2))/2 + (a1*b1*b3*c3*z2*(1 + z2))/2 + (a2*b1*b3*c3*z2*(1 + z2))/2 + (a1*a2*b1*b3*c3*z2*(1 + z2))/2 + (a3*b1*b3*c3*z2*(1 + z2))/2 + (a1*a3*b1*b3*c3*z2*(1 + z2))/2 + (b1*b2*b3*c3*z2*(1 + z2))/2 + (c1*c3*z2*(1 + z2))/2 + (b1*c1*c3*z2*(1 + z2))/2 + (b2*c1*c3*z2*(1 + z2))/2 + (a1*b1*b2*c1*c3*z2*(1 + z2))/2 + (b3*c1*c3*z2*(1 + z2))/2 + (a1*b1*b3*c1*c3*z2*(1 + z2))/2 + (b1*b3*c2*c3*z2*(1 + z2))/2 + (a1*b1*b3*c2*c3*z2*(1 + z2))/2 + (b1*b2*b3*c2*c3*z2*(1 + z2))/2 + (a1*b1*b2*b3*c2*c3*z2*(1 + z2))/2 + a1*a2*b2*b3*z3 + a1*a2*a3*b2*b3*z3 + a1*a2*a3*b1*b2*b3*z3 + a1*a2*a3*b2*c1*z3 + a2*b1*b2*b3*c1*z3 + a1*a2*a3*c2*z3 + a1*a2*b1*b2*c2*z3 + a1*a2*a3*b3*c2*z3 + a2*b1*b2*b3*c2*z3 + a1*a2*b1*b2*b3*c2*z3 + a2*a3*b1*b2*b3*c2*z3 + a2*a3*b1*c1*c2*z3 + a1*a2*b1*b2*c1*c2*z3 + a2*a3*b1*b2*c1*c2*z3 + a1*a2*a3*b1*b2*c1*c2*z3 + b1*b3*c1*c2*z3 + a1*b1*b3*c1*c2*z3 + a2*b1*b3*c1*c2*z3 + a3*b1*b3*c1*c2*z3 + a1*a3*b1*b3*c1*c2*z3 + a1*b2*b3*c1*c2*z3 + a2*b2*b3*c1*c2*z3 + a1*a2*b2*b3*c1*c2*z3 + a1*a3*b2*b3*c1*c2*z3 + a2*a3*b2*b3*c1*c2*z3 + b1*b2*b3*c1*c2*z3 + a2*b1*b2*b3*c1*c2*z3 + a1*a2*b1*b2*b3*c1*c2*z3 + a3*b1*b2*b3*c1*c2*z3 + a2*a3*b1*b2*b3*c1*c2*z3 + a1*a2*a3*b1*b2*b3*c1*c2*z3 + a1*a2*b1*b2*c3*z3 + a1*a2*b2*b3*c3*z3 + a2*a3*b1*b2*b3*c3*z3 + a1*a2*b1*b2*c1*c3*z3 + a2*a3*b1*b2*c1*c3*z3 + a1*a2*a3*b1*b2*c1*c3*z3 + a2*b1*b2*b3*c1*c3*z3 + a1*a2*b1*b2*b3*c1*c3*z3 + a2*a3*b1*b2*b3*c1*c3*z3 + a1*a2*a3*b1*b2*b3*c1*c3*z3 + a1*a2*c2*c3*z3 + a1*a3*b1*c2*c3*z3 + a1*a3*b2*c2*c3*z3 + b1*b2*c2*c3*z3 + a3*b1*b2*c2*c3*z3 + a1*a3*b1*b2*c2*c3*z3 + a1*a2*b3*c2*c3*z3 + a2*b1*b3*c2*c3*z3 + a3*b1*b3*c2*c3*z3 + a2*a3*b1*b3*c2*c3*z3 + a1*a3*b2*b3*c2*c3*z3 + b1*b2*b3*c2*c3*z3 + a2*b1*b2*b3*c2*c3*z3 + b1*c1*c2*c3*z3 + a1*b1*c1*c2*c3*z3 + a3*b1*c1*c2*c3*z3 + a1*b2*c1*c2*c3*z3 + a2*b2*c1*c2*c3*z3 + b1*b2*c1*c2*c3*z3 + a1*b1*b2*c1*c2*c3*z3 + a2*b1*b2*c1*c2*c3*z3 + a1*a3*b1*b2*c1*c2*c3*z3 + a2*a3*b1*b2*c1*c2*c3*z3 + a2*b1*b3*c1*c2*c3*z3 + a3*b1*b3*c1*c2*c3*z3 + a1*a3*b2*b3*c1*c2*c3*z3 + a2*a3*b2*b3*c1*c2*c3*z3 + a1*b1*b2*b3*c1*c2*c3*z3 + a2*b1*b2*b3*c1*c2*c3*z3 + a1*a2*x1*z3 + a1*a2*b1*x1*z3 + a1*a3*b2*x1*z3 + a2*a3*b2*x1*z3 + a1*a2*a3*b2*x1*z3 + a1*a3*b1*b2*x1*z3 + a2*a3*b1*b2*x1*z3 + a1*a2*a3*b1*b2*x1*z3 + a1*a2*a3*b3*x1*z3 + a1*a2*a3*b1*b3*x1*z3 + a1*a3*b2*b3*x1*z3 + a2*a3*b2*b3*x1*z3 + a1*a2*b1*b2*b3*x1*z3 + a1*a3*b1*b2*b3*x1*z3 + a2*c1*x1*z3 + a2*b1*c1*x1*z3 + a3*b2*c1*x1*z3 + a2*a3*b2*c1*x1*z3 + a3*b1*b2*c1*x1*z3 + a2*a3*b1*b2*c1*x1*z3 + a2*a3*b3*c1*x1*z3 + a2*a3*b1*b3*c1*x1*z3 + a3*b2*b3*c1*x1*z3 + a3*b1*b2*b3*c1*x1*z3 + a1*a2*b2*c2*x1*z3 + a1*a2*a3*b2*c2*x1*z3 + a1*a2*b1*b2*c2*x1*z3 + a1*a2*a3*b1*b2*c2*x1*z3 + a1*a2*b3*c2*x1*z3 + a1*a2*a3*b3*c2*x1*z3 + a1*a2*b1*b3*c2*x1*z3 + a1*a2*a3*b1*b3*c2*x1*z3 + a2*b1*b2*b3*c2*x1*z3 + a2*b2*c1*c2*x1*z3 + a2*a3*b2*c1*c2*x1*z3 + a2*b1*b2*c1*c2*x1*z3 + a2*a3*b1*b2*c1*c2*x1*z3 + a2*b3*c1*c2*x1*z3 + a2*a3*b3*c1*c2*x1*z3 + a2*b1*b3*c1*c2*x1*z3 + a2*a3*b1*b3*c1*c2*x1*z3 + a1*a2*b2*c3*x1*z3 + a1*a2*a3*b2*c3*x1*z3 + a1*a2*b1*b2*c3*x1*z3 + a1*a2*a3*b1*b2*c3*x1*z3 + a1*a2*b3*c3*x1*z3 + a1*a2*a3*b3*c3*x1*z3 + a1*a2*b1*b3*c3*x1*z3 + a1*a2*a3*b1*b3*c3*x1*z3 + a2*b2*c1*c3*x1*z3 + a2*a3*b2*c1*c3*x1*z3 + a2*b1*b2*c1*c3*x1*z3 + a2*a3*b1*b2*c1*c3*x1*z3 + a2*b3*c1*c3*x1*z3 + a2*a3*b3*c1*c3*x1*z3 + a2*b1*b3*c1*c3*x1*z3 + a2*a3*b1*b3*c1*c3*x1*z3 + a1*a2*b3*c2*c3*x1*z3 + a1*a2*b1*b3*c2*c3*x1*z3 + a1*a2*b2*b3*c2*c3*x1*z3 + a1*a2*b1*b2*b3*c2*c3*x1*z3 + a2*b3*c1*c2*c3*x1*z3 + a2*b1*b3*c1*c2*c3*x1*z3 + a2*b2*b3*c1*c2*c3*x1*z3 + a2*b1*b2*b3*c1*c2*c3*x1*z3 + a1*x2*z3 + a1*a2*x2*z3 + a1*a3*x2*z3 + b1*x2*z3 + a1*b1*x2*z3 + a2*b1*x2*z3 + a1*a2*b1*x2*z3 + a3*b1*x2*z3 + a1*a3*b1*x2*z3 + a2*a3*b1*x2*z3 + a1*b2*x2*z3 + a1*a3*b2*x2*z3 + a1*b1*b2*x2*z3 + a1*a2*a3*b1*b2*x2*z3 + a1*b3*x2*z3 + a1*a2*b3*x2*z3 + a1*a3*b3*x2*z3 + a1*a3*b1*b3*x2*z3 + a1*a2*a3*b1*b3*x2*z3 + a1*b1*b2*b3*x2*z3 + a1*a2*b1*b2*b3*x2*z3 + a1*a3*b1*b2*b3*x2*z3 + c1*x2*z3 + a1*c1*x2*z3 + a2*c1*x2*z3 + a1*a3*c1*x2*z3 + a2*a3*c1*x2*z3 + b1*c1*x2*z3 + a1*b1*c1*x2*z3 + a2*b1*c1*x2*z3 + a1*a3*b1*c1*x2*z3 + a2*a3*b1*c1*x2*z3 + b2*c1*x2*z3 + a1*a3*b2*c1*x2*z3 + a2*a3*b2*c1*x2*z3 + b1*b2*c1*x2*z3 + a1*b1*b2*c1*x2*z3 + a1*a2*b1*b2*c1*x2*z3 + a3*b1*b2*c1*x2*z3 + a1*a2*a3*b1*b2*c1*x2*z3 + b3*c1*x2*z3 + a1*b3*c1*x2*z3 + a2*b3*c1*x2*z3 + a1*a3*b3*c1*x2*z3 + a2*a3*b3*c1*x2*z3 + a1*a2*b1*b3*c1*x2*z3 + a1*a2*a3*b1*b3*c1*x2*z3 + a1*b2*b3*c1*x2*z3 + a2*b2*b3*c1*x2*z3 + a3*b2*b3*c1*x2*z3 + b1*b2*b3*c1*x2*z3 + a1*b1*b2*b3*c1*x2*z3 + a1*a3*c2*x2*z3 + a1*a3*b1*c2*x2*z3 + a2*a3*b1*c2*x2*z3 + a1*a3*b2*c2*x2*z3 + a1*b1*b2*c2*x2*z3 + a1*a2*b1*b2*c2*x2*z3 + a2*a3*b1*b2*c2*x2*z3 + a1*a2*a3*b1*b2*c2*x2*z3 + a1*a3*b3*c2*x2*z3 + b1*b3*c2*x2*z3 + a1*b1*b3*c2*x2*z3 + a2*b1*b3*c2*x2*z3 + a1*a2*b1*b3*c2*x2*z3 + a2*a3*b1*b3*c2*x2*z3 + a1*a2*a3*b1*b3*c2*x2*z3 + a1*b2*b3*c2*x2*z3 + a1*b1*b2*b3*c2*x2*z3 + a3*b1*b2*b3*c2*x2*z3 + b2*c1*c2*x2*z3 + a2*b1*b2*c1*c2*x2*z3 + a3*b1*b2*c1*c2*x2*z3 + a2*a3*b1*b2*c1*c2*x2*z3 + b1*b3*c1*c2*x2*z3 + a1*b1*b3*c1*c2*x2*z3 + a2*b1*b3*c1*c2*x2*z3 + a3*b1*b3*c1*c2*x2*z3 + a1*a3*b1*b3*c1*c2*x2*z3 + a2*a3*b1*b3*c1*c2*x2*z3 + a3*b2*b3*c1*c2*x2*z3 + a1*b1*b2*b3*c1*c2*x2*z3 + a3*b1*b2*b3*c1*c2*x2*z3 + a1*a3*b1*b2*b3*c1*c2*x2*z3 + a1*a3*c3*x2*z3 + a1*a3*b1*c3*x2*z3 + a2*a3*b1*c3*x2*z3 + a1*a3*b2*c3*x2*z3 + a1*b1*b2*c3*x2*z3 + a1*a2*b1*b2*c3*x2*z3 + a2*a3*b1*b2*c3*x2*z3 + a1*a2*a3*b1*b2*c3*x2*z3 + a1*a3*b3*c3*x2*z3 + a1*a2*b1*b3*c3*x2*z3 + a2*a3*b1*b3*c3*x2*z3 + a1*a2*a3*b1*b3*c3*x2*z3 + a1*b2*b3*c3*x2*z3 + b1*b2*b3*c3*x2*z3 + a2*b1*b2*b3*c3*x2*z3 + a3*b1*b2*b3*c3*x2*z3 + b2*c1*c3*x2*z3 + a2*b1*b2*c1*c3*x2*z3 + a3*b1*b2*c1*c3*x2*z3 + a2*a3*b1*b2*c1*c3*x2*z3 + a1*b1*b3*c1*c3*x2*z3 + a2*b1*b3*c1*c3*x2*z3 + a1*a2*b1*b3*c1*c3*x2*z3 + a3*b1*b3*c1*c3*x2*z3 + a1*a3*b1*b3*c1*c3*x2*z3 + a2*a3*b1*b3*c1*c3*x2*z3 + a1*b2*b3*c1*c3*x2*z3 + a2*b2*b3*c1*c3*x2*z3 + a3*b2*b3*c1*c3*x2*z3 + b1*b2*b3*c1*c3*x2*z3 + a2*b1*b2*b3*c1*c3*x2*z3 + a1*a2*b1*b2*b3*c1*c3*x2*z3 + a3*b1*b2*b3*c1*c3*x2*z3 + a1*a3*b1*b2*b3*c1*c3*x2*z3 + a1*b1*b3*c2*c3*x2*z3 + a1*a2*b1*b3*c2*c3*x2*z3 + a1*b2*b3*c2*c3*x2*z3 + b1*b2*b3*c2*c3*x2*z3 + a2*b1*b2*b3*c2*c3*x2*z3 + a1*a2*b1*b2*b3*c2*c3*x2*z3 + b1*b3*c1*c2*c3*x2*z3 + a1*b1*b3*c1*c2*c3*x2*z3 + a2*b1*b3*c1*c2*c3*x2*z3 + b2*b3*c1*c2*c3*x2*z3 + a1*b1*b2*b3*c1*c2*c3*x2*z3 + a2*b1*b2*b3*c1*c2*c3*x2*z3 + a2*a3*b1*x3*z3 + b1*b2*x3*z3 + a1*b1*b2*x3*z3 + a3*b1*b2*x3*z3 + a2*b1*b3*x3*z3 + a1*b2*b3*x3*z3 + b1*b2*c1*x3*z3 + a1*b1*b2*c1*x3*z3 + a2*b1*b2*c1*x3*z3 + a1*a3*b1*b2*c1*x3*z3 + a2*a3*b1*b2*c1*x3*z3 + b2*b3*c1*x3*z3 + a1*b2*b3*c1*x3*z3 + a2*b2*b3*c1*x3*z3 + a3*b2*b3*c1*x3*z3 + a1*a3*b2*b3*c1*x3*z3 + a2*a3*b2*b3*c1*x3*z3 + a3*b1*b2*b3*c1*x3*z3 + a2*a3*b1*c2*x3*z3 + b1*b2*c2*x3*z3 + a1*b1*b2*c2*x3*z3 + a3*b1*b2*c2*x3*z3 + a1*a3*b1*b2*c2*x3*z3 + a2*a3*b1*b2*c2*x3*z3 + a2*b1*b3*c2*x3*z3 + a1*b2*b3*c2*x3*z3 + a1*a3*b2*b3*c2*x3*z3 + a3*b1*b2*b3*c2*x3*z3 + b1*b2*c1*c2*x3*z3 + a3*b1*b2*c1*c2*x3*z3 + b2*b3*c1*c2*x3*z3 + a3*b2*b3*c1*c2*x3*z3 + a2*a3*b1*c3*x3*z3 + a1*a3*b1*b2*c3*x3*z3 + a2*a3*b1*b3*c3*x3*z3 + a1*a3*b2*b3*c3*x3*z3 + a1*b1*b2*c1*c3*x3*z3 + a2*b1*b2*c1*c3*x3*z3 + a3*b1*b2*c1*c3*x3*z3 + a1*a3*b1*b2*c1*c3*x3*z3 + a2*a3*b1*b2*c1*c3*x3*z3 + b2*b3*c1*c3*x3*z3 + a1*b2*b3*c1*c3*x3*z3 + a2*b2*b3*c1*c3*x3*z3 + a3*b2*b3*c1*c3*x3*z3 + a1*a3*b2*b3*c1*c3*x3*z3 + a2*a3*b2*b3*c1*c3*x3*z3 + b1*b2*b3*c1*c3*x3*z3 + a2*a3*b1*c2*c3*x3*z3 + a1*b1*b2*c2*c3*x3*z3 + a1*a3*b1*b2*c2*c3*x3*z3 + a2*a3*b1*b2*c2*c3*x3*z3 + a2*b1*b3*c2*c3*x3*z3 + a1*b2*b3*c2*c3*x3*z3 + a1*a3*b2*b3*c2*c3*x3*z3 + a3*b1*b2*b3*c2*c3*x3*z3 + b1*b2*c1*c2*c3*x3*z3 + a3*b1*b2*c1*c2*c3*x3*z3 + b2*b3*c1*c2*c3*x3*z3 + a3*b2*b3*c1*c2*c3*x3*z3 + a1*a2*y1*z3 + a2*b1*y1*z3 + a1*a2*b1*y1*z3 + a1*a3*b2*y1*z3 + a2*a3*b2*y1*z3 + a1*a2*a3*b2*y1*z3 + a3*b1*b2*y1*z3 + a1*a3*b1*b2*y1*z3 + a1*a2*a3*b1*b2*y1*z3 + a1*a2*a3*b3*y1*z3 + a2*a3*b1*b3*y1*z3 + a1*a2*a3*b1*b3*y1*z3 + a2*b2*b3*y1*z3 + a1*a3*b2*b3*y1*z3 + a2*a3*b2*b3*y1*z3 + a2*b1*b2*b3*y1*z3 + a1*a2*b1*b2*b3*y1*z3 + a3*b1*b2*b3*y1*z3 + a1*a3*b1*b2*b3*y1*z3 + a2*c1*y1*z3 + a2*b1*c1*y1*z3 + a3*b2*c1*y1*z3 + a2*a3*b2*c1*y1*z3 + a3*b1*b2*c1*y1*z3 + a2*a3*b1*b2*c1*y1*z3 + a2*a3*b3*c1*y1*z3 + a2*a3*b1*b3*c1*y1*z3 + a3*b2*b3*c1*y1*z3 + a3*b1*b2*b3*c1*y1*z3 + a1*a2*b2*c2*y1*z3 + a1*a2*a3*b2*c2*y1*z3 + a2*b1*b2*c2*y1*z3 + a1*a2*b1*b2*c2*y1*z3 + a2*a3*b1*b2*c2*y1*z3 + a1*a2*a3*b1*b2*c2*y1*z3 + a1*a2*b3*c2*y1*z3 + a1*a2*a3*b3*c2*y1*z3 + a2*b1*b3*c2*y1*z3 + a1*a2*b1*b3*c2*y1*z3 + a2*a3*b1*b3*c2*y1*z3 + a1*a2*a3*b1*b3*c2*y1*z3 + a2*b1*b2*b3*c2*y1*z3 + a2*b2*c1*c2*y1*z3 + a2*a3*b2*c1*c2*y1*z3 + a2*b1*b2*c1*c2*y1*z3 + a2*a3*b1*b2*c1*c2*y1*z3 + a2*b3*c1*c2*y1*z3 + a2*a3*b3*c1*c2*y1*z3 + a2*b1*b3*c1*c2*y1*z3 + a2*a3*b1*b3*c1*c2*y1*z3 + a1*a2*b2*c3*y1*z3 + a1*a2*a3*b2*c3*y1*z3 + a2*b1*b2*c3*y1*z3 + a1*a2*b1*b2*c3*y1*z3 + a2*a3*b1*b2*c3*y1*z3 + a1*a2*a3*b1*b2*c3*y1*z3 + a1*a2*b3*c3*y1*z3 + a1*a2*a3*b3*c3*y1*z3 + a2*b1*b3*c3*y1*z3 + a1*a2*b1*b3*c3*y1*z3 + a2*a3*b1*b3*c3*y1*z3 + a1*a2*a3*b1*b3*c3*y1*z3 + a2*b2*c1*c3*y1*z3 + a2*a3*b2*c1*c3*y1*z3 + a2*b1*b2*c1*c3*y1*z3 + a2*a3*b1*b2*c1*c3*y1*z3 + a2*b3*c1*c3*y1*z3 + a2*a3*b3*c1*c3*y1*z3 + a2*b1*b3*c1*c3*y1*z3 + a2*a3*b1*b3*c1*c3*y1*z3 + a1*a2*b3*c2*c3*y1*z3 + a2*b1*b3*c2*c3*y1*z3 + a1*a2*b1*b3*c2*c3*y1*z3 + a1*a2*b2*b3*c2*c3*y1*z3 + a2*b1*b2*b3*c2*c3*y1*z3 + a1*a2*b1*b2*b3*c2*c3*y1*z3 + a2*b3*c1*c2*c3*y1*z3 + a2*b1*b3*c1*c2*c3*y1*z3 + a2*b2*b3*c1*c2*c3*y1*z3 + a2*b1*b2*b3*c1*c2*c3*y1*z3 + a1*a2*y2*z3 + a1*a3*y2*z3 + a1*a2*b1*y2*z3 + a3*b1*y2*z3 + a1*a3*b1*y2*z3 + a1*a3*b2*y2*z3 + b1*b2*y2*z3 + a1*b1*b2*y2*z3 + a3*b1*b2*y2*z3 + a1*a3*b1*b2*y2*z3 + a1*a2*a3*b1*b2*y2*z3 + a1*a2*b3*y2*z3 + a1*a3*b3*y2*z3 + a2*b1*b3*y2*z3 + a3*b1*b3*y2*z3 + a1*a2*a3*b1*b3*y2*z3 + a1*b2*b3*y2*z3 + a1*a2*b1*b2*b3*y2*z3 + a1*a3*b1*b2*b3*y2*z3 + c1*y2*z3 + a1*c1*y2*z3 + a2*c1*y2*z3 + a1*a3*c1*y2*z3 + a2*a3*c1*y2*z3 + b1*c1*y2*z3 + a1*b1*c1*y2*z3 + a2*b1*c1*y2*z3 + a1*a3*b1*c1*y2*z3 + a2*a3*b1*c1*y2*z3 + b2*c1*y2*z3 + a1*a3*b2*c1*y2*z3 + a2*a3*b2*c1*y2*z3 + a2*b1*b2*c1*y2*z3 + a1*a2*b1*b2*c1*y2*z3 + a1*a3*b1*b2*c1*y2*z3 + a2*a3*b1*b2*c1*y2*z3 + a1*a2*a3*b1*b2*c1*y2*z3 + b3*c1*y2*z3 + a1*b3*c1*y2*z3 + a2*b3*c1*y2*z3 + a1*a3*b3*c1*y2*z3 + a2*a3*b3*c1*y2*z3 + b1*b3*c1*y2*z3 + a1*b1*b3*c1*y2*z3 + a2*b1*b3*c1*y2*z3 + a1*a2*b1*b3*c1*y2*z3 + a3*b1*b3*c1*y2*z3 + a1*a3*b1*b3*c1*y2*z3 + a2*a3*b1*b3*c1*y2*z3 + a1*a2*a3*b1*b3*c1*y2*z3 + a1*b2*b3*c1*y2*z3 + a2*b2*b3*c1*y2*z3 + a3*b2*b3*c1*y2*z3 + b1*b2*b3*c1*y2*z3 + a1*b1*b2*b3*c1*y2*z3 + a1*a3*c2*y2*z3 + a1*a3*b1*c2*y2*z3 + a1*a3*b2*c2*y2*z3 + a1*a2*b1*b2*c2*y2*z3 + a1*a3*b1*b2*c2*y2*z3 + a1*a2*a3*b1*b2*c2*y2*z3 + a1*a3*b3*c2*y2*z3 + a2*b1*b3*c2*y2*z3 + a1*a2*b1*b3*c2*y2*z3 + a3*b1*b3*c2*y2*z3 + a1*a3*b1*b3*c2*y2*z3 + a1*a2*a3*b1*b3*c2*y2*z3 + a1*b2*b3*c2*y2*z3 + b1*b2*b3*c2*y2*z3 + a1*b1*b2*b3*c2*y2*z3 + b2*c1*c2*y2*z3 + b1*b2*c1*c2*y2*z3 + a2*b1*b2*c1*c2*y2*z3 + a2*a3*b1*b2*c1*c2*y2*z3 + b1*b3*c1*c2*y2*z3 + a1*b1*b3*c1*c2*y2*z3 + a2*b1*b3*c1*c2*y2*z3 + a3*b1*b3*c1*c2*y2*z3 + a1*a3*b1*b3*c1*c2*y2*z3 + a2*a3*b1*b3*c1*c2*y2*z3 + a3*b2*b3*c1*c2*y2*z3 + b1*b2*b3*c1*c2*y2*z3 + a1*b1*b2*b3*c1*c2*y2*z3 + a1*a3*b1*b2*b3*c1*c2*y2*z3 + a1*a3*c3*y2*z3 + a1*a3*b1*c3*y2*z3 + a1*a3*b2*c3*y2*z3 + a1*a2*b1*b2*c3*y2*z3 + a1*a3*b1*b2*c3*y2*z3 + a1*a2*a3*b1*b2*c3*y2*z3 + a1*a3*b3*c3*y2*z3 + b1*b3*c3*y2*z3 + a1*b1*b3*c3*y2*z3 + a2*b1*b3*c3*y2*z3 + a1*a2*b1*b3*c3*y2*z3 + a3*b1*b3*c3*y2*z3 + a1*a3*b1*b3*c3*y2*z3 + a1*a2*a3*b1*b3*c3*y2*z3 + a1*b2*b3*c3*y2*z3 + b2*c1*c3*y2*z3 + b1*b2*c1*c3*y2*z3 + a2*b1*b2*c1*c3*y2*z3 + a2*a3*b1*b2*c1*c3*y2*z3 + b1*b3*c1*c3*y2*z3 + a1*a2*b1*b3*c1*c3*y2*z3 + a3*b1*b3*c1*c3*y2*z3 + a1*a3*b1*b3*c1*c3*y2*z3 + a2*a3*b1*b3*c1*c3*y2*z3 + a1*b2*b3*c1*c3*y2*z3 + a2*b2*b3*c1*c3*y2*z3 + a3*b2*b3*c1*c3*y2*z3 + b1*b2*b3*c1*c3*y2*z3 + a1*b1*b2*b3*c1*c3*y2*z3 + a1*a2*b1*b2*b3*c1*c3*y2*z3 + a1*a3*b1*b2*b3*c1*c3*y2*z3 + b1*b3*c2*c3*y2*z3 + a1*a2*b1*b3*c2*c3*y2*z3 + a1*b2*b3*c2*c3*y2*z3 + a1*b1*b2*b3*c2*c3*y2*z3 + a1*a2*b1*b2*b3*c2*c3*y2*z3 + b1*b3*c1*c2*c3*y2*z3 + a1*b1*b3*c1*c2*c3*y2*z3 + a2*b1*b3*c1*c2*c3*y2*z3 + b2*b3*c1*c2*c3*y2*z3 + a1*b1*b2*b3*c1*c2*c3*y2*z3 + a2*b1*b2*b3*c1*c2*c3*y2*z3 + a1*b1*b2*y3*z3 + a1*a3*b1*b2*y3*z3 + a2*a3*b1*b3*y3*z3 + a1*a3*b2*b3*y3*z3 + a1*b1*b2*b3*y3*z3 + b1*b2*c1*y3*z3 + a3*b1*b2*c1*y3*z3 + b1*b2*b3*c1*y3*z3 + a3*b1*b2*b3*c1*y3*z3 + b1*b2*c2*y3*z3 + a3*b1*b2*c2*y3*z3 + b1*b2*b3*c2*y3*z3 + a1*b1*b2*c3*y3*z3 + a2*a3*b1*b2*c3*y3*z3 + a2*a3*b1*b3*c3*y3*z3 + a1*b2*b3*c3*y3*z3 + b1*b2*b3*c3*y3*z3 + a2*b1*b2*b3*c3*y3*z3 + a3*b1*b2*b3*c3*y3*z3 + b1*b2*c1*c3*y3*z3 + a1*b1*b2*c1*c3*y3*z3 + a2*b1*b2*c1*c3*y3*z3 + a1*a3*b1*b2*c1*c3*y3*z3 + a2*a3*b1*b2*c1*c3*y3*z3 + a1*a3*b2*b3*c1*c3*y3*z3 + a2*a3*b2*b3*c1*c3*y3*z3 + b1*b2*b3*c1*c3*y3*z3 + a1*b1*b2*b3*c1*c3*y3*z3 + a2*b1*b2*b3*c1*c3*y3*z3 + a2*a3*b1*c2*c3*y3*z3 + a1*b1*b2*c2*c3*y3*z3 + a1*a3*b1*b2*c2*c3*y3*z3 + a2*a3*b1*b2*c2*c3*y3*z3 + a1*a3*b2*b3*c2*c3*y3*z3 + b1*b2*b3*c2*c3*y3*z3 + a1*b1*b2*b3*c2*c3*y3*z3 + a2*b1*b2*b3*c2*c3*y3*z3 + a3*b1*b2*b3*c2*c3*y3*z3 + b1*b2*c1*c2*c3*y3*z3 + a3*b1*b2*c1*c2*c3*y3*z3 + a3*b2*b3*c1*c2*c3*y3*z3 + b1*b2*b3*c1*c2*c3*y3*z3 + a1*a2*b1*z1*z3 + a1*a3*b1*b2*z1*z3 + a2*a3*b1*b2*z1*z3 + a1*a2*a3*b1*b2*z1*z3 + a1*a2*a3*b1*b3*z1*z3 + a1*a2*b2*b3*z1*z3 + a2*a3*b2*b3*z1*z3 + a1*a2*b1*b2*b3*z1*z3 + a1*a3*b1*b2*b3*z1*z3 + a2*b1*c1*z1*z3 + a3*b1*b2*c1*z1*z3 + a2*a3*b1*b2*c1*z1*z3 + a2*a3*b1*b3*c1*z1*z3 + a3*b1*b2*b3*c1*z1*z3 + a1*a2*b1*b2*c2*z1*z3 + a1*a2*a3*b1*b2*c2*z1*z3 + a1*a2*b1*b3*c2*z1*z3 + a1*a2*a3*b1*b3*c2*z1*z3 + a2*b2*b3*c2*z1*z3 + a2*b1*b2*b3*c2*z1*z3 + a2*b1*b2*c1*c2*z1*z3 + a2*a3*b1*b2*c1*c2*z1*z3 + a2*b1*b3*c1*c2*z1*z3 + a2*a3*b1*b3*c1*c2*z1*z3 + a1*a2*b1*b2*c3*z1*z3 + a1*a2*a3*b1*b2*c3*z1*z3 + a1*a2*b1*b3*c3*z1*z3 + a1*a2*a3*b1*b3*c3*z1*z3 + a2*b1*b2*c1*c3*z1*z3 + a2*a3*b1*b2*c1*c3*z1*z3 + a2*b1*b3*c1*c3*z1*z3 + a2*a3*b1*b3*c1*c3*z1*z3 + a1*a2*b1*b3*c2*c3*z1*z3 + a1*a2*b1*b2*b3*c2*c3*z1*z3 + a2*b1*b3*c1*c2*c3*z1*z3 + a2*b1*b2*b3*c1*c2*c3*z1*z3 + a1*a2*b1*z2*z3 + a1*a3*b1*b2*z2*z3 + a1*a2*a3*b1*b2*z2*z3 + a1*a2*a3*b1*b3*z2*z3 + a1*a2*b1*b2*b3*z2*z3 + a1*a3*b1*b2*b3*z2*z3 + b1*c1*z2*z3 + a1*b1*c1*z2*z3 + b1*b2*c1*z2*z3 + a1*b1*b2*c1*z2*z3 + a1*a2*b1*b2*c1*z2*z3 + a1*a2*a3*b1*b2*c1*z2*z3 + b1*b3*c1*z2*z3 + a1*b1*b3*c1*z2*z3 + a1*a2*b1*b3*c1*z2*z3 + a1*a2*a3*b1*b3*c1*z2*z3 + b1*b2*b3*c1*z2*z3 + a1*b1*b2*b3*c1*z2*z3 + a1*a2*b1*b2*c2*z2*z3 + a1*a2*a3*b1*b2*c2*z2*z3 + a1*a2*b1*b3*c2*z2*z3 + a1*a2*a3*b1*b3*c2*z2*z3 + b1*c1*c2*z2*z3 + b1*b2*c1*c2*z2*z3 + a1*b1*b2*c1*c2*z2*z3 + a1*a3*b1*b2*c1*c2*z2*z3 + b1*b3*c1*c2*z2*z3 + b1*b2*b3*c1*c2*z2*z3 + a1*b1*b2*b3*c1*c2*z2*z3 + a1*a3*b1*b2*b3*c1*c2*z2*z3 + a1*a2*b1*b2*c3*z2*z3 + a1*a2*a3*b1*b2*c3*z2*z3 + a1*a2*b1*b3*c3*z2*z3 + a1*a2*a3*b1*b3*c3*z2*z3 + b1*c1*c3*z2*z3 + b1*b2*c1*c3*z2*z3 + a1*b1*b2*c1*c3*z2*z3 + a1*a3*b1*b2*c1*c3*z2*z3 + b1*b3*c1*c3*z2*z3 + a1*a2*b1*b3*c1*c3*z2*z3 + b1*b2*b3*c1*c3*z2*z3 + a1*b1*b2*b3*c1*c3*z2*z3 + a1*a2*b1*b2*b3*c1*c3*z2*z3 + a1*a3*b1*b2*b3*c1*c3*z2*z3 + a1*a2*b1*b3*c2*c3*z2*z3 + a1*a2*b1*b2*b3*c2*c3*z2*z3 + (a1*a2*z3*(1 + z3))/2 + (a2*a3*b1*z3*(1 + z3))/2 + (b1*b2*z3*(1 + z3))/2 + (a3*b1*b2*z3*(1 + z3))/2 + (a1*a3*b1*b2*z3*(1 + z3))/2 + (a1*a2*b3*z3*(1 + z3))/2 + (a2*b1*b3*z3*(1 + z3))/2 + (a2*a3*b1*b3*z3*(1 + z3))/2 + (a1*b2*b3*z3*(1 + z3))/2 + (a1*a3*b2*b3*z3*(1 + z3))/2 + (a1*b1*b2*b3*z3*(1 + z3))/2 + (a2*b1*c1*z3*(1 + z3))/2 + (a1*b1*b2*c1*z3*(1 + z3))/2 + (a2*b1*b2*c1*z3*(1 + z3))/2 + (a3*b1*b2*c1*z3*(1 + z3))/2 + (a1*a3*b1*b2*c1*z3*(1 + z3))/2 + (a2*a3*b1*b2*c1*z3*(1 + z3))/2 + (a2*b1*b3*c1*z3*(1 + z3))/2 + (b2*b3*c1*z3*(1 + z3))/2 + (a1*b2*b3*c1*z3*(1 + z3))/2 + (a2*b2*b3*c1*z3*(1 + z3))/2 + (a3*b2*b3*c1*z3*(1 + z3))/2 + (a1*a3*b2*b3*c1*z3*(1 + z3))/2 + (a2*a3*b2*b3*c1*z3*(1 + z3))/2 + (b1*b2*b3*c1*z3*(1 + z3))/2 + (b1*c2*z3*(1 + z3))/2 + (a1*b1*c2*z3*(1 + z3))/2 + (a2*b1*c2*z3*(1 + z3))/2 + (a2*a3*b1*c2*z3*(1 + z3))/2 + (a1*b2*c2*z3*(1 + z3))/2 + (a1*b1*b2*c2*z3*(1 + z3))/2 + (a1*a3*b1*b2*c2*z3*(1 + z3))/2 + (a2*a3*b1*b2*c2*z3*(1 + z3))/2 + (b1*b3*c2*z3*(1 + z3))/2 + (a1*b1*b3*c2*z3*(1 + z3))/2 + (a1*a3*b2*b3*c2*z3*(1 + z3))/2 + (b1*b2*b3*c2*z3*(1 + z3))/2 + (a3*b1*b2*b3*c2*z3*(1 + z3))/2 + (b1*c1*c2*z3*(1 + z3))/2 + (a3*b1*b2*c1*c2*z3*(1 + z3))/2 + (b1*b3*c1*c2*z3*(1 + z3))/2 + (b2*b3*c1*c2*z3*(1 + z3))/2 + (a3*b2*b3*c1*c2*z3*(1 + z3))/2 + (b1*b2*b3*c1*c2*z3*(1 + z3))/2 + (a2*a3*b1*c3*z3*(1 + z3))/2 + (a1*b1*b2*c3*z3*(1 + z3))/2 + (a1*a3*b1*b2*c3*z3*(1 + z3))/2 + (a2*a3*b1*b2*c3*z3*(1 + z3))/2 + (a1*b2*b3*c3*z3*(1 + z3))/2 + (a1*a3*b2*b3*c3*z3*(1 + z3))/2 + (b1*b2*b3*c3*z3*(1 + z3))/2 + (a2*b1*b2*b3*c3*z3*(1 + z3))/2 + (a3*b1*b2*b3*c3*z3*(1 + z3))/2 + (b1*b2*c1*c3*z3*(1 + z3))/2 + (a3*b1*b2*c1*c3*z3*(1 + z3))/2 + (b2*b3*c1*c3*z3*(1 + z3))/2 + (a1*b2*b3*c1*c3*z3*(1 + z3))/2 + (a2*b2*b3*c1*c3*z3*(1 + z3))/2 + (a3*b2*b3*c1*c3*z3*(1 + z3))/2 + (a1*b1*b2*b3*c1*c3*z3*(1 + z3))/2 + (a2*b1*b2*b3*c1*c3*z3*(1 + z3))/2 + (b1*c2*c3*z3*(1 + z3))/2 + (b1*b3*c2*c3*z3*(1 + z3))/2 + (a2*b1*b3*c2*c3*z3*(1 + z3))/2 + (a1*b2*b3*c2*c3*z3*(1 + z3))/2 + (b1*b2*b3*c2*c3*z3*(1 + z3))/2 + (a1*b1*b2*b3*c2*c3*z3*(1 + z3))/2 + (a2*b1*b2*b3*c2*c3*z3*(1 + z3))/2 + (b2*b3*c1*c2*c3*z3*(1 + z3))/2 + (b1*b2*b3*c1*c2*c3*z3*(1 + z3))/2;
end;
#####################################################################
#####################################################################
#Space Group No. 110 ( I4_1cd)
#####################################################################
Ampin110:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin110:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Bdeltain110:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + b1*c2;
end;
#####################################################################
CGAPin110:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3 + a1*a2*a3*b1 + a1*a2*a3*b2 + a1*b1*b2*b3 + a1*a2*b1*b2*b3 + a1*a3*b1*b2*b3 + a1*a2*a3*b1*b2*b3 + a1*a2*a3*c1 + a2*a3*b1*c1 + a1*a2*a3*b1*c1 + a3*b1*b2*c1 + a2*a3*b1*b2*c1 + a1*a2*a3*b1*b2*c1 + a1*a2*a3*b1*b3*c1 + a1*b2*b3*c1 + a1*b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a1*a3*b1*b2*b3*c1 + a1*a2*a3*b1*b2*b3*c1 + a1*a2*a3*b1*c2 + a1*a3*b2*c2 + a3*b1*b2*c2 + a1*a2*a3*b3*c2 + a1*b1*b3*c2 + a2*b1*b3*c2 + a1*a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a2*a3*b1*b3*c2 + a1*a2*b2*b3*c2 + a1*a2*a3*b2*b3*c2 + b1*b2*b3*c2 + a1*b1*b2*b3*c2 + a2*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a1*a2*a3*b1*b2*b3*c2 + a1*a3*c1*c2 + a2*a3*c1*c2 + a1*a3*b2*c1*c2 + a2*a3*b2*c1*c2 + a3*b1*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a1*b3*c1*c2 + a1*a2*b3*c1*c2 + a1*a3*b3*c1*c2 + a2*a3*b3*c1*c2 + b1*b3*c1*c2 + a1*a2*b1*b3*c1*c2 + a1*a2*a3*b1*b3*c1*c2 + a3*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + a1*a2*a3*b2*b3*c1*c2 + b1*b2*b3*c1*c2 + a1*b1*b2*b3*c1*c2 + a2*b1*b2*b3*c1*c2 + a1*a2*b1*b2*b3*c1*c2 + a2*a3*b1*b2*b3*c1*c2 + a1*a2*a3*b1*b2*b3*c1*c2 + a1*a2*b1*c3 + a1*b2*c3 + a1*a3*b2*c3 + a1*a2*a3*b2*c3 + a2*b1*b2*c3 + a3*b1*b2*c3 + a1*a2*a3*b1*b2*c3 + a1*a2*b3*c3 + a1*a2*b2*b3*c3 + a2*b1*b2*b3*c3 + a1*a2*b1*b2*b3*c3 + a3*b1*b2*b3*c3 + a2*b1*c1*c3 + a2*a3*b1*c1*c3 + a1*a2*a3*b2*c1*c3 + b1*b2*c1*c3 + a1*b1*b2*c1*c3 + a2*b1*b2*c1*c3 + a3*b1*b2*c1*c3 + a2*a3*b1*b2*c1*c3 + a1*a2*b3*c1*c3 + a2*b1*b3*c1*c3 + a1*a2*a3*b1*b3*c1*c3 + a1*b2*b3*c1*c3 + a1*a3*b2*b3*c1*c3 + a1*a2*a3*b2*b3*c1*c3 + b1*b2*b3*c1*c3 + a2*b1*b2*b3*c1*c3 + a3*b1*b2*b3*c1*c3 + a2*a3*b1*b2*b3*c1*c3 + a1*a2*c2*c3 + a2*b1*c2*c3 + a1*a2*b1*c2*c3 + a3*b1*c2*c3 + a1*b2*c2*c3 + a1*a3*b2*c2*c3 + b1*b2*c2*c3 + a1*b1*b2*c2*c3 + a1*a2*b1*b2*c2*c3 + a3*b1*b2*c2*c3 + a1*b3*c2*c3 + a1*a3*b3*c2*c3 + a1*b1*b3*c2*c3 + a2*b1*b3*c2*c3 + a3*b1*b3*c2*c3 + a1*a3*b1*b3*c2*c3 + a2*a3*b1*b3*c2*c3 + a1*a2*a3*b1*b3*c2*c3 + a1*b2*b3*c2*c3 + a1*a2*b2*b3*c2*c3 + a1*a3*b2*b3*c2*c3 + b1*b2*b3*c2*c3 + a1*b1*b2*b3*c2*c3 + a2*c1*c2*c3 + a1*a2*c1*c2*c3 + a1*a3*c1*c2*c3 + a2*a3*c1*c2*c3 + b1*c1*c2*c3 + a2*a3*b1*c1*c2*c3 + a1*a2*a3*b1*c1*c2*c3 + b2*c1*c2*c3 + a1*b2*c1*c2*c3 + a3*b2*c1*c2*c3 + a1*a3*b2*c1*c2*c3 + b1*b2*c1*c2*c3 + a1*b1*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + a1*a2*a3*b1*b2*c1*c2*c3 + a1*b3*c1*c2*c3 + a2*b3*c1*c2*c3 + a3*b3*c1*c2*c3 + a1*a3*b3*c1*c2*c3 + a2*a3*b3*c1*c2*c3 + a1*b1*b3*c1*c2*c3 + a1*a2*b1*b3*c1*c2*c3 + a3*b1*b3*c1*c2*c3 + a1*a3*b1*b3*c1*c2*c3 + a1*a2*a3*b1*b3*c1*c2*c3 + b2*b3*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + a2*b2*b3*c1*c2*c3 + a1*a2*b2*b3*c1*c2*c3 + a1*a2*a3*b2*b3*c1*c2*c3 + a2*b1*b2*b3*c1*c2*c3 + a1*a3*b1*b2*b3*c1*c2*c3 + a1*a2*a3*b1*b2*b3*c1*c2*c3 + a1*a2*a3*x1 + a1*a2*a3*b1*x1 + a3*b2*x1 + a2*a3*b2*x1 + a3*b1*b2*x1 + a2*b3*x1 + a2*a3*b3*x1 + a2*b1*b3*x1 + a2*a3*b1*b3*x1 + a1*a2*a3*b1*b3*x1 + b2*b3*x1 + a2*b2*b3*x1 + a1*a2*b2*b3*x1 + a3*b2*b3*x1 + a1*a2*a3*b2*b3*x1 + b1*b2*b3*x1 + a2*b1*b2*b3*x1 + a3*b1*b2*b3*x1 + a1*a2*a3*b1*b2*b3*x1 + a2*a3*b2*c1*x1 + a3*b1*b2*c1*x1 + a2*a3*b1*b2*c1*x1 + a1*a2*b3*c1*x1 + a2*a3*b3*c1*x1 + a1*a2*b1*b3*c1*x1 + a2*a3*b1*b3*c1*x1 + a3*b2*b3*c1*x1 + a2*a3*b2*b3*c1*x1 + a2*b1*b2*b3*c1*x1 + a2*a3*b1*b2*b3*c1*x1 + a2*a3*c2*x1 + a1*a3*b2*c2*x1 + a1*a3*b1*b2*c2*x1 + a2*a3*b1*b2*c2*x1 + b3*c2*x1 + a1*a2*b3*c2*x1 + a1*a3*b3*c2*x1 + b1*b3*c2*x1 + a1*a2*a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a2*b2*b3*c2*x1 + a2*a3*b2*b3*c2*x1 + a2*b1*b2*b3*c2*x1 + a1*a3*b1*b2*b3*c2*x1 + a2*a3*b1*b2*b3*c2*x1 + a1*a2*a3*b1*b2*b3*c2*x1 + a3*c1*c2*x1 + a2*a3*c1*c2*x1 + a3*b1*c1*c2*x1 + a1*a3*b1*c1*c2*x1 + a2*a3*b1*c1*c2*x1 + a3*b2*c1*c2*x1 + a1*a3*b2*c1*c2*x1 + a2*a3*b2*c1*c2*x1 + a1*a3*b1*b2*c1*c2*x1 + b3*c1*c2*x1 + a1*b3*c1*c2*x1 + a2*b3*c1*c2*x1 + a1*a2*b3*c1*c2*x1 + a3*b3*c1*c2*x1 + a2*a3*b3*c1*c2*x1 + a1*b1*b3*c1*c2*x1 + a1*a2*b1*b3*c1*c2*x1 + a3*b1*b3*c1*c2*x1 + a1*a3*b1*b3*c1*c2*x1 + a1*b2*b3*c1*c2*x1 + a1*b1*b2*b3*c1*c2*x1 + a2*b1*b2*b3*c1*c2*x1 + a2*c3*x1 + a2*b1*c3*x1 + b2*c3*x1 + a1*b2*c3*x1 + a1*a2*b2*c3*x1 + a1*a3*b2*c3*x1 + a2*a3*b2*c3*x1 + a1*a2*a3*b2*c3*x1 + b1*b2*c3*x1 + a1*b1*b2*c3*x1 + a2*b1*b2*c3*x1 + a1*a2*b1*b2*c3*x1 + a2*b3*c3*x1 + a2*a3*b3*c3*x1 + a2*b1*b3*c3*x1 + a2*a3*b1*b3*c3*x1 + a1*a2*a3*b1*b3*c3*x1 + b2*b3*c3*x1 + a1*b2*b3*c3*x1 + a3*b2*b3*c3*x1 + b1*b2*b3*c3*x1 + a1*b1*b2*b3*c3*x1 + a2*b1*b2*b3*c3*x1 + a3*b1*b2*b3*c3*x1 + a2*a3*b1*b2*b3*c3*x1 + b2*c1*c3*x1 + a1*b2*c1*c3*x1 + a2*b2*c1*c3*x1 + a3*b2*c1*c3*x1 + a2*a3*b2*c1*c3*x1 + b1*b2*c1*c3*x1 + a1*b1*b2*c1*c3*x1 + a1*a2*b1*b2*c1*c3*x1 + a3*b1*b2*c1*c3*x1 + a1*a3*b1*b2*c1*c3*x1 + a2*a3*b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a2*a3*b3*c1*c3*x1 + a1*a2*a3*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + a1*a2*b1*b3*c1*c3*x1 + a2*a3*b1*b3*c1*c3*x1 + b2*b3*c1*c3*x1 + a1*b2*b3*c1*c3*x1 + a3*b2*b3*c1*c3*x1 + a1*a3*b2*b3*c1*c3*x1 + a3*b1*b2*b3*c1*c3*x1 + a2*c2*c3*x1 + a1*a2*c2*c3*x1 + a2*a3*c2*c3*x1 + a1*b1*c2*c3*x1 + a1*a2*b1*c2*c3*x1 + a1*a3*b1*c2*c3*x1 + a1*a3*b2*c2*c3*x1 + a1*a2*a3*b2*c2*c3*x1 + a1*a3*b1*b2*c2*c3*x1 + a2*a3*b1*b2*c2*c3*x1 + b3*c2*c3*x1 + a2*b3*c2*c3*x1 + a1*a3*b3*c2*c3*x1 + b1*b3*c2*c3*x1 + a2*b1*b3*c2*c3*x1 + a3*b1*b3*c2*c3*x1 + a2*b2*b3*c2*c3*x1 + a1*a2*b2*b3*c2*c3*x1 + a1*a2*a3*b2*b3*c2*c3*x1 + a2*b1*b2*b3*c2*c3*x1 + a1*a2*b1*b2*b3*c2*c3*x1 + a1*a3*b1*b2*b3*c2*c3*x1 + a2*a3*b1*b2*b3*c2*c3*x1 + a1*c1*c2*c3*x1 + a1*b1*c1*c2*c3*x1 + a1*b2*c1*c2*c3*x1 + a2*b2*c1*c2*c3*x1 + a3*b2*c1*c2*c3*x1 + a2*a3*b2*c1*c2*c3*x1 + b1*b2*c1*c2*c3*x1 + a3*b1*b2*c1*c2*c3*x1 + a2*a3*b1*b2*c1*c2*c3*x1 + b3*c1*c2*c3*x1 + a1*b3*c1*c2*c3*x1 + a2*b3*c1*c2*c3*x1 + a1*a2*b3*c1*c2*c3*x1 + a1*a2*a3*b3*c1*c2*c3*x1 + a2*b1*b3*c1*c2*c3*x1 + a3*b1*b3*c1*c2*c3*x1 + a1*a3*b1*b3*c1*c2*c3*x1 + a2*a3*b1*b3*c1*c2*c3*x1 + a1*b2*b3*c1*c2*c3*x1 + a2*b2*b3*c1*c2*c3*x1 + a3*b2*b3*c1*c2*c3*x1 + a1*a3*b2*b3*c1*c2*c3*x1 + a2*a3*b2*b3*c1*c2*c3*x1 + b1*b2*b3*c1*c2*c3*x1 + a1*b1*b2*b3*c1*c2*c3*x1 + a2*b1*b2*b3*c1*c2*c3*x1 + a3*b1*b2*b3*c1*c2*c3*x1 + a2*a3*b1*b2*b3*c1*c2*c3*x1 + a1*a2*a3*b1*x2 + a1*b3*x2 + a1*a2*b3*x2 + a1*a3*b3*x2 + b1*b3*x2 + a1*a2*b1*b3*x2 + a3*b1*b3*x2 + a2*a3*b1*b3*x2 + a1*a2*a3*b1*b3*x2 + a1*b2*b3*x2 + a1*a3*b2*b3*x2 + a1*b1*b2*b3*x2 + a1*a2*b1*b2*b3*x2 + a1*a3*b1*b2*b3*x2 + a1*a2*a3*b1*b2*b3*x2 + a2*a3*c1*x2 + a2*a3*b1*c1*x2 + a1*a2*a3*b1*c1*x2 + a2*a3*b2*c1*x2 + a1*b3*c1*x2 + a2*b3*c1*x2 + a1*a2*b3*c1*x2 + a3*b3*c1*x2 + a2*a3*b3*c1*x2 + b1*b3*c1*x2 + a1*b1*b3*c1*x2 + a2*b1*b3*c1*x2 + a1*a2*b1*b3*c1*x2 + a3*b1*b3*c1*x2 + a1*a3*b1*b3*c1*x2 + a2*a3*b1*b3*c1*x2 + a1*a2*a3*b1*b3*c1*x2 + a1*b2*b3*c1*x2 + a2*b2*b3*c1*x2 + a1*a3*b2*b3*c1*x2 + a2*a3*b2*b3*c1*x2 + a2*b1*b2*b3*c1*x2 + a1*a2*b1*b2*b3*c1*x2 + a3*b1*b2*b3*c1*x2 + a1*a2*a3*b1*b2*b3*c1*x2 + a1*a3*c2*x2 + a1*a3*b1*c2*x2 + a2*a3*b1*c2*x2 + a1*a2*a3*b1*c2*x2 + a1*a3*b1*b2*c2*x2 + a2*a3*b1*b2*c2*x2 + a1*a2*a3*b1*b2*c2*x2 + a1*a3*b3*c2*x2 + b1*b3*c2*x2 + a1*b1*b3*c2*x2 + a1*a3*b1*b3*c2*x2 + a1*b2*b3*c2*x2 + a1*a3*b2*b3*c2*x2 + a1*b1*b2*b3*c2*x2 + a2*b1*b2*b3*c2*x2 + a1*a2*b1*b2*b3*c2*x2 + a3*b1*b2*b3*c2*x2 + a1*a3*b1*b2*b3*c2*x2 + a1*a2*a3*b1*b2*b3*c2*x2 + a3*c1*c2*x2 + a1*a3*c1*c2*x2 + a2*a3*b1*c1*c2*x2 + a3*b2*c1*c2*x2 + a1*a3*b2*c1*c2*x2 + a1*a3*b1*b2*c1*c2*x2 + a2*a3*b1*b2*c1*c2*x2 + a1*a2*a3*b1*b2*c1*c2*x2 + b3*c1*c2*x2 + a2*b3*c1*c2*x2 + a1*a2*b3*c1*c2*x2 + a3*b3*c1*c2*x2 + a1*a3*b3*c1*c2*x2 + a1*b1*b3*c1*c2*x2 + a3*b1*b3*c1*c2*x2 + a1*a2*a3*b1*b3*c1*c2*x2 + b2*b3*c1*c2*x2 + a1*b1*b2*b3*c1*c2*x2 + a2*b1*b2*b3*c1*c2*x2 + a3*b1*b2*b3*c1*c2*x2 + a2*a3*b1*b2*b3*c1*c2*x2 + b1*c3*x2 + a1*b1*c3*x2 + a2*b1*c3*x2 + a1*a2*b1*c3*x2 + a3*b1*c3*x2 + a2*a3*b1*c3*x2 + a1*a2*a3*b1*c3*x2 + a1*a2*b2*c3*x2 + b1*b2*c3*x2 + a1*b1*b2*c3*x2 + a2*b1*b2*c3*x2 + a1*a2*b1*b2*c3*x2 + a3*b1*b2*c3*x2 + a2*a3*b1*b2*c3*x2 + a1*a2*a3*b1*b2*c3*x2 + a1*a2*b3*c3*x2 + a1*a3*b3*c3*x2 + a1*a2*a3*b3*c3*x2 + a1*b1*b3*c3*x2 + a2*b1*b3*c3*x2 + a3*b1*b3*c3*x2 + a1*a2*a3*b1*b3*c3*x2 + a1*a3*b2*b3*c3*x2 + a1*b1*b2*b3*c3*x2 + a1*a2*b1*b2*b3*c3*x2 + a3*b1*b2*b3*c3*x2 + c1*c3*x2 + a2*c1*c3*x2 + a1*a2*c1*c3*x2 + a3*c1*c3*x2 + a1*a3*c1*c3*x2 + a1*a3*b1*c1*c3*x2 + a1*a2*a3*b1*c1*c3*x2 + a1*b2*c1*c3*x2 + a1*a3*b2*c1*c3*x2 + a2*a3*b2*c1*c3*x2 + a1*a2*a3*b2*c1*c3*x2 + a3*b1*b2*c1*c3*x2 + a2*a3*b1*b2*c1*c3*x2 + a2*b3*c1*c3*x2 + a3*b3*c1*c3*x2 + a1*a3*b3*c1*c3*x2 + a2*a3*b3*c1*c3*x2 + b1*b3*c1*c3*x2 + a1*b1*b3*c1*c3*x2 + a3*b1*b3*c1*c3*x2 + a1*a3*b1*b3*c1*c3*x2 + a2*a3*b1*b3*c1*c3*x2 + a1*a2*a3*b1*b3*c1*c3*x2 + a1*b2*b3*c1*c3*x2 + a2*b2*b3*c1*c3*x2 + a1*a2*b2*b3*c1*c3*x2 + b1*b2*b3*c1*c3*x2 + a2*b1*b2*b3*c1*c3*x2 + a3*b1*b2*b3*c1*c3*x2 + a1*a3*b1*b2*b3*c1*c3*x2 + a1*c2*c3*x2 + a1*b1*c2*c3*x2 + a3*b1*c2*c3*x2 + a1*a2*b2*c2*c3*x2 + a1*a3*b2*c2*c3*x2 + b1*b2*c2*c3*x2 + a2*b1*b2*c2*c3*x2 + a1*a2*b1*b2*c2*c3*x2 + a1*b3*c2*c3*x2 + a1*a2*b3*c2*c3*x2 + a1*a2*a3*b3*c2*c3*x2 + b1*b3*c2*c3*x2 + a2*b1*b3*c2*c3*x2 + a1*a2*b1*b3*c2*c3*x2 + a3*b1*b3*c2*c3*x2 + a1*a3*b1*b3*c2*c3*x2 + a1*a2*a3*b1*b3*c2*c3*x2 + a1*b2*b3*c2*c3*x2 + a1*a2*b2*b3*c2*c3*x2 + a1*a3*b2*b3*c2*c3*x2 + b1*b2*b3*c2*c3*x2 + a1*b1*b2*b3*c2*c3*x2 + a3*b1*b2*b3*c2*c3*x2 + a1*a3*b1*b2*b3*c2*c3*x2 + a1*b1*c1*c2*c3*x2 + a2*b1*c1*c2*c3*x2 + a1*a2*b1*c1*c2*c3*x2 + a3*b1*c1*c2*c3*x2 + a1*a3*b1*c1*c2*c3*x2 + a2*a3*b1*c1*c2*c3*x2 + a1*a2*a3*b1*c1*c2*c3*x2 + b2*c1*c2*c3*x2 + a2*b2*c1*c2*c3*x2 + a1*a3*b2*c1*c2*c3*x2 + a2*a3*b2*c1*c2*c3*x2 + a1*a2*a3*b2*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + a1*b1*b2*c1*c2*c3*x2 + a1*a2*b1*b2*c1*c2*c3*x2 + b3*c1*c2*c3*x2 + a1*b3*c1*c2*c3*x2 + a2*b3*c1*c2*c3*x2 + a1*a2*b3*c1*c2*c3*x2 + a3*b3*c1*c2*c3*x2 + a1*b1*b3*c1*c2*c3*x2 + a2*b1*b3*c1*c2*c3*x2 + a1*a2*b1*b3*c1*c2*c3*x2 + a1*a3*b1*b3*c1*c2*c3*x2 + b2*b3*c1*c2*c3*x2 + a1*b2*b3*c1*c2*c3*x2 + a2*b2*b3*c1*c2*c3*x2 + a3*b2*b3*c1*c2*c3*x2 + b1*b2*b3*c1*c2*c3*x2 + a1*b1*b2*b3*c1*c2*c3*x2 + a3*b1*b2*b3*c1*c2*c3*x2 + a1*a3*b1*b2*b3*c1*c2*c3*x2 + a3*b1*x1*x2 + a1*a3*b2*x1*x2 + a1*a3*b1*b2*x1*x2 + a1*b3*x1*x2 + a1*b1*b3*x1*x2 + a2*b1*b3*x1*x2 + a1*a2*b1*b3*x1*x2 + a3*b1*b3*x1*x2 + a1*a3*b1*b3*x1*x2 + a1*b2*b3*x1*x2 + a3*b2*c1*x1*x2 + b3*c1*x1*x2 + b1*b3*c1*x1*x2 + a1*b1*b3*c1*x1*x2 + a2*b1*b3*c1*x1*x2 + a3*b1*b3*c1*x1*x2 + b2*b3*c1*x1*x2 + b1*b2*b3*c1*x1*x2 + a1*a3*c2*x1*x2 + a1*a3*b1*c2*x1*x2 + a3*b1*b2*c2*x1*x2 + a1*a3*b1*b2*c2*x1*x2 + a1*b1*b3*c2*x1*x2 + a1*a2*b1*b3*c2*x1*x2 + a1*a3*b1*b3*c2*x1*x2 + a3*c1*c2*x1*x2 + a3*b1*c1*c2*x1*x2 + b1*b2*b3*c1*c2*x1*x2 + a1*a2*c3*x1*x2 + a1*a3*c3*x1*x2 + a1*b1*c3*x1*x2 + a2*b1*c3*x1*x2 + a1*a2*b1*c3*x1*x2 + a3*b1*c3*x1*x2 + a1*a3*b1*c3*x1*x2 + a2*b1*b2*c3*x1*x2 + a1*a2*b1*b2*c3*x1*x2 + a3*b1*b2*c3*x1*x2 + a1*a3*b1*b2*c3*x1*x2 + a1*a2*b3*c3*x1*x2 + a1*a3*b3*c3*x1*x2 + a1*a2*a3*b3*c3*x1*x2 + a1*b1*b3*c3*x1*x2 + a1*a2*b1*b3*c3*x1*x2 + a1*a3*b2*b3*c3*x1*x2 + b1*b2*b3*c3*x1*x2 + a2*c1*c3*x1*x2 + a3*c1*c3*x1*x2 + a2*b1*c1*c3*x1*x2 + a3*b1*c1*c3*x1*x2 + b1*b2*c1*c3*x1*x2 + a2*b3*c1*c3*x1*x2 + a3*b3*c1*c3*x1*x2 + a2*a3*b3*c1*c3*x1*x2 + b1*b3*c1*c3*x1*x2 + a2*b1*b3*c1*c3*x1*x2 + a3*b1*b3*c1*c3*x1*x2 + a2*a3*b1*b3*c1*c3*x1*x2 + a3*b2*b3*c1*c3*x1*x2 + a3*b1*b2*b3*c1*c3*x1*x2 + a1*a3*b3*c2*c3*x1*x2 + b1*b3*c2*c3*x1*x2 + a2*b1*b3*c2*c3*x1*x2 + a3*b1*b3*c2*c3*x1*x2 + a2*a3*b1*b3*c2*c3*x1*x2 + a1*b2*b3*c2*c3*x1*x2 + a1*a3*b2*b3*c2*c3*x1*x2 + b1*b2*b3*c2*c3*x1*x2 + a1*b1*b2*b3*c2*c3*x1*x2 + a3*b3*c1*c2*c3*x1*x2 + a3*b1*b3*c1*c2*c3*x1*x2 + b2*b3*c1*c2*c3*x1*x2 + a3*b2*b3*c1*c2*c3*x1*x2 + b1*b2*b3*c1*c2*c3*x1*x2 + a3*b1*b2*b3*c1*c2*c3*x1*x2 + a2*b1*x3 + a2*a3*b1*x3 + a1*a2*a3*b1*x3 + a1*b2*x3 + a1*a2*a3*b2*x3 + b1*b2*x3 + a1*b1*b2*x3 + a1*a3*b1*b2*x3 + a2*a3*b1*b2*x3 + a1*a2*a3*b1*b2*x3 + a1*a2*a3*b3*x3 + a2*a3*b1*b3*x3 + a1*b2*b3*x3 + a1*a2*b2*b3*x3 + a1*a3*b2*b3*x3 + a1*a2*a3*b2*b3*x3 + b1*b2*b3*x3 + a1*b1*b2*b3*x3 + a1*a2*b1*b2*b3*x3 + a3*b1*b2*b3*x3 + a2*a3*b1*b2*b3*x3 + a1*a2*a3*b1*b2*b3*x3 + a2*a3*b1*c1*x3 + a1*a2*a3*b1*c1*x3 + b2*c1*x3 + a1*b2*c1*x3 + a2*b2*c1*x3 + a3*b2*c1*x3 + a2*a3*b2*c1*x3 + a1*a2*a3*b2*c1*x3 + b1*b2*c1*x3 + a1*b1*b2*c1*x3 + a2*b1*b2*c1*x3 + a2*a3*b1*b2*c1*x3 + a1*a2*b3*c1*x3 + a2*a3*b3*c1*x3 + a2*b1*b3*c1*x3 + a1*a2*a3*b1*b3*c1*x3 + b2*b3*c1*x3 + a1*b2*b3*c1*x3 + a2*b2*b3*c1*x3 + a3*b2*b3*c1*x3 + b1*b2*b3*c1*x3 + a1*a2*b1*b2*b3*c1*x3 + a1*a3*b1*b2*b3*c1*x3 + a1*a2*a3*b1*b2*b3*c1*x3 + a1*c2*x3 + a1*a2*c2*x3 + a1*a3*c2*x3 + a2*b1*c2*x3 + a1*a3*b1*c2*x3 + a2*a3*b1*c2*x3 + a1*a2*a3*b1*c2*x3 + a1*a2*b2*c2*x3 + a1*a2*a3*b2*c2*x3 + b1*b2*c2*x3 + a1*b1*b2*c2*x3 + a3*b1*b2*c2*x3 + a1*a3*b1*b2*c2*x3 + a2*a3*b1*b2*c2*x3 + a1*b3*c2*x3 + a1*a2*b3*c2*x3 + a1*a3*b3*c2*x3 + a1*a2*a3*b3*c2*x3 + a2*a3*b1*b3*c2*x3 + a1*a2*b2*b3*c2*x3 + a1*b1*b2*b3*c2*x3 + a1*a2*b1*b2*b3*c2*x3 + a1*a3*b1*b2*b3*c2*x3 + a2*a3*b1*b2*b3*c2*x3 + a1*c1*c2*x3 + a1*a2*c1*c2*x3 + a3*c1*c2*x3 + a2*a3*c1*c2*x3 + a1*a2*a3*c1*c2*x3 + b1*c1*c2*x3 + a1*b1*c1*c2*x3 + a2*b1*c1*c2*x3 + a1*a2*b1*c1*c2*x3 + a1*a2*a3*b1*c1*c2*x3 + b2*c1*c2*x3 + a2*b2*c1*c2*x3 + a1*a2*b2*c1*c2*x3 + a3*b2*c1*c2*x3 + a1*b1*b2*c1*c2*x3 + a1*a3*b1*b2*c1*c2*x3 + a2*a3*b1*b2*c1*c2*x3 + b3*c1*c2*x3 + a2*b1*b3*c1*c2*x3 + a1*a2*b1*b3*c1*c2*x3 + a3*b1*b3*c1*c2*x3 + a1*a3*b1*b3*c1*c2*x3 + a2*a3*b1*b3*c1*c2*x3 + b2*b3*c1*c2*x3 + a1*b2*b3*c1*c2*x3 + a3*b2*b3*c1*c2*x3 + a2*a3*b2*b3*c1*c2*x3 + b1*b2*b3*c1*c2*x3 + a1*b1*b2*b3*c1*c2*x3 + a3*b1*b2*b3*c1*c2*x3 + a2*a3*b1*b2*b3*c1*c2*x3 + a1*a2*c3*x3 + a1*a2*a3*b1*c3*x3 + a1*b2*c3*x3 + a1*b1*b2*c3*x3 + a3*b1*b2*c3*x3 + a1*a3*b1*b2*c3*x3 + a2*a3*b1*b2*c3*x3 + a1*a2*b3*c3*x3 + a1*a2*b1*b3*c3*x3 + a1*b2*b3*c3*x3 + a1*a3*b2*b3*c3*x3 + a1*a2*a3*b2*b3*c3*x3 + a1*b1*b2*b3*c3*x3 + a2*a3*b1*b2*b3*c3*x3 + a1*a2*c1*c3*x3 + b2*c1*c3*x3 + a2*a3*b2*c1*c3*x3 + a1*a2*a3*b2*c1*c3*x3 + b1*b2*c1*c3*x3 + a1*b1*b2*c1*c3*x3 + a3*b1*b2*c1*c3*x3 + a1*a3*b1*b2*c1*c3*x3 + a2*a3*b1*b2*c1*c3*x3 + a1*a2*b3*c1*c3*x3 + a2*a3*b3*c1*c3*x3 + a2*b1*b3*c1*c3*x3 + a1*a2*b1*b3*c1*c3*x3 + a2*a3*b1*b3*c1*c3*x3 + b2*b3*c1*c3*x3 + b1*b2*b3*c1*c3*x3 + a1*b1*b2*b3*c1*c3*x3 + a2*b1*b2*b3*c1*c3*x3 + a1*a2*b1*b2*b3*c1*c3*x3 + a3*b1*b2*b3*c1*c3*x3 + a1*c2*c3*x3 + a1*a3*c2*c3*x3 + b1*c2*c3*x3 + a1*a3*b1*c2*c3*x3 + a1*a2*b2*c2*c3*x3 + a1*b1*b2*c2*c3*x3 + a2*b1*b2*c2*c3*x3 + a3*b1*b2*c2*c3*x3 + a1*a2*a3*b1*b2*c2*c3*x3 + a1*b3*c2*c3*x3 + b1*b3*c2*c3*x3 + a2*b1*b3*c2*c3*x3 + a1*a2*b1*b3*c2*c3*x3 + a1*a3*b1*b3*c2*c3*x3 + a1*a2*a3*b1*b3*c2*c3*x3 + a1*b2*b3*c2*c3*x3 + a1*a2*b2*b3*c2*c3*x3 + b1*b2*b3*c2*c3*x3 + a2*b1*b2*b3*c2*c3*x3 + a1*a3*b1*b2*b3*c2*c3*x3 + a1*a2*c1*c2*c3*x3 + a3*c1*c2*c3*x3 + a1*a3*c1*c2*c3*x3 + a2*a3*c1*c2*c3*x3 + a1*b1*c1*c2*c3*x3 + a2*b1*c1*c2*c3*x3 + a1*a2*b1*c1*c2*c3*x3 + a3*b1*c1*c2*c3*x3 + a1*a2*a3*b1*c1*c2*c3*x3 + b2*c1*c2*c3*x3 + a2*b2*c1*c2*c3*x3 + a1*a3*b2*c1*c2*c3*x3 + a2*a3*b2*c1*c2*c3*x3 + a1*a2*a3*b2*c1*c2*c3*x3 + b1*b2*c1*c2*c3*x3 + a2*b1*b2*c1*c2*c3*x3 + b3*c1*c2*c3*x3 + a1*b3*c1*c2*c3*x3 + a2*b3*c1*c2*c3*x3 + a1*a3*b3*c1*c2*c3*x3 + a1*a2*a3*b3*c1*c2*c3*x3 + b1*b3*c1*c2*c3*x3 + a1*b1*b3*c1*c2*c3*x3 + a2*b1*b3*c1*c2*c3*x3 + a3*b1*b3*c1*c2*c3*x3 + a2*a3*b1*b3*c1*c2*c3*x3 + a1*b2*b3*c1*c2*c3*x3 + a1*a2*b2*b3*c1*c2*c3*x3 + a3*b2*b3*c1*c2*c3*x3 + a2*a3*b2*b3*c1*c2*c3*x3 + a1*b1*b2*b3*c1*c2*c3*x3 + a2*b1*b2*b3*c1*c2*c3*x3 + a3*b1*b2*b3*c1*c2*c3*x3 + a1*a2*x1*x3 + a1*a2*b1*x1*x3 + a1*a2*a3*b2*x1*x3 + a1*a2*a3*b1*b2*x1*x3 + a2*b3*x1*x3 + a1*a2*b3*x1*x3 + a2*a3*b3*x1*x3 + a1*a2*a3*b3*x1*x3 + a2*b1*b3*x1*x3 + a1*a2*b1*b3*x1*x3 + a2*a3*b1*b3*x1*x3 + a1*a2*a3*b1*b3*x1*x3 + a2*b2*b3*x1*x3 + a1*a2*b2*b3*x1*x3 + a2*a3*b2*b3*x1*x3 + a1*b1*b2*b3*x1*x3 + a1*a2*b1*b2*b3*x1*x3 + a1*a3*b1*b2*b3*x1*x3 + a2*c1*x1*x3 + a2*b1*c1*x1*x3 + a2*a3*b2*c1*x1*x3 + a2*a3*b1*b2*c1*x1*x3 + a2*b3*c1*x1*x3 + a2*a3*b3*c1*x1*x3 + a2*b1*b3*c1*x1*x3 + a2*a3*b1*b3*c1*x1*x3 + a2*b2*b3*c1*x1*x3 + a2*b1*b2*b3*c1*x1*x3 + c2*x1*x3 + a2*c2*x1*x3 + a1*a2*c2*x1*x3 + a3*c2*x1*x3 + a1*a3*c2*x1*x3 + a2*a3*c2*x1*x3 + b1*c2*x1*x3 + a2*b1*c2*x1*x3 + a1*a2*b1*c2*x1*x3 + a3*b1*c2*x1*x3 + a1*a3*b1*c2*x1*x3 + a2*a3*b1*c2*x1*x3 + b2*c2*x1*x3 + a2*b2*c2*x1*x3 + a3*b2*c2*x1*x3 + a2*a3*b2*c2*x1*x3 + b1*b2*c2*x1*x3 + a2*b1*b2*c2*x1*x3 + a3*b1*b2*c2*x1*x3 + a2*a3*b1*b2*c2*x1*x3 + a1*b3*c2*x1*x3 + a2*b3*c2*x1*x3 + a1*a3*b3*c2*x1*x3 + a2*a3*b3*c2*x1*x3 + a2*b1*b3*c2*x1*x3 + a1*a2*b1*b3*c2*x1*x3 + a2*a3*b1*b3*c2*x1*x3 + a1*b2*b3*c2*x1*x3 + a2*b2*b3*c2*x1*x3 + a3*b2*b3*c2*x1*x3 + a1*a3*b2*b3*c2*x1*x3 + b1*b2*b3*c2*x1*x3 + a2*b1*b2*b3*c2*x1*x3 + a1*a2*b1*b2*b3*c2*x1*x3 + a2*c1*c2*x1*x3 + a3*c1*c2*x1*x3 + a2*b1*c1*c2*x1*x3 + a3*b1*c1*c2*x1*x3 + b3*c1*c2*x1*x3 + a3*b3*c1*c2*x1*x3 + b1*b3*c1*c2*x1*x3 + a3*b1*b3*c1*c2*x1*x3 + b2*b3*c1*c2*x1*x3 + a3*b2*b3*c1*c2*x1*x3 + b1*b2*b3*c1*c2*x1*x3 + a3*b1*b2*b3*c1*c2*x1*x3 + a2*c3*x1*x3 + a1*a2*c3*x1*x3 + a2*b1*c3*x1*x3 + a1*a2*b1*c3*x1*x3 + a2*b2*c3*x1*x3 + a1*a2*b2*c3*x1*x3 + a1*b1*b2*c3*x1*x3 + a1*a2*b1*b2*c3*x1*x3 + a1*a3*b1*b2*c3*x1*x3 + a2*a3*b1*b2*c3*x1*x3 + a2*b3*c3*x1*x3 + a2*a3*b3*c3*x1*x3 + a2*b1*b3*c3*x1*x3 + a1*a2*b1*b3*c3*x1*x3 + a2*b2*b3*c3*x1*x3 + a1*a2*b2*b3*c3*x1*x3 + a2*a3*b2*b3*c3*x1*x3 + a1*b1*b2*b3*c3*x1*x3 + a2*c1*c3*x1*x3 + a2*b1*c1*c3*x1*x3 + a2*b2*c1*c3*x1*x3 + a2*b1*b2*c1*c3*x1*x3 + a2*b2*b3*c1*c3*x1*x3 + a2*b1*b2*b3*c1*c3*x1*x3 + a2*c2*c3*x1*x3 + a2*b1*c2*c3*x1*x3 + a2*b2*c2*c3*x1*x3 + b1*b2*c2*c3*x1*x3 + a2*b1*b2*c2*c3*x1*x3 + a3*b1*b2*c2*c3*x1*x3 + a1*b3*c2*c3*x1*x3 + a2*b3*c2*c3*x1*x3 + a3*b3*c2*c3*x1*x3 + a2*b1*b3*c2*c3*x1*x3 + a3*b1*b3*c2*c3*x1*x3 + a2*b2*b3*c2*c3*x1*x3 + b1*b2*b3*c2*c3*x1*x3 + a1*b1*b2*b3*c2*c3*x1*x3 + a2*b1*b2*b3*c2*c3*x1*x3 + b3*c1*c2*c3*x1*x3 + b1*b3*c1*c2*c3*x1*x3 + a2*a3*b1*x2*x3 + a1*a2*b2*x2*x3 + b1*b2*x2*x3 + a2*b1*b2*x2*x3 + a1*a2*b1*b2*x2*x3 + a3*b1*b2*x2*x3 + a1*a3*b1*b2*x2*x3 + a1*a2*a3*b1*b2*x2*x3 + a1*b3*x2*x3 + a1*a2*b3*x2*x3 + a1*a3*b3*x2*x3 + a1*b1*b3*x2*x3 + a1*a3*b1*b3*x2*x3 + a1*a2*a3*b1*b3*x2*x3 + a1*b2*b3*x2*x3 + a1*b1*b2*b3*x2*x3 + a1*a2*b1*b2*b3*x2*x3 + a1*a3*b1*b2*b3*x2*x3 + a1*a2*b2*c1*x2*x3 + a3*b2*c1*x2*x3 + a1*a3*b2*c1*x2*x3 + a1*b1*b2*c1*x2*x3 + a2*a3*b1*b2*c1*x2*x3 + b3*c1*x2*x3 + a1*a2*b3*c1*x2*x3 + a1*a3*b3*c1*x2*x3 + b1*b3*c1*x2*x3 + a2*b1*b3*c1*x2*x3 + a1*a2*b1*b3*c1*x2*x3 + a1*a3*b1*b3*c1*x2*x3 + a2*a3*b1*b3*c1*x2*x3 + a1*b2*b3*c1*x2*x3 + a2*b2*b3*c1*x2*x3 + a3*b2*b3*c1*x2*x3 + a1*a2*b1*b2*b3*c1*x2*x3 + a1*a3*b1*b2*b3*c1*x2*x3 + a3*b1*c2*x2*x3 + a1*a2*b2*c2*x2*x3 + a1*a3*b2*c2*x2*x3 + b1*b2*c2*x2*x3 + a1*b1*b2*c2*x2*x3 + a2*b1*b2*c2*x2*x3 + a1*a2*b3*c2*x2*x3 + a1*a3*b3*c2*x2*x3 + a1*b1*b3*c2*x2*x3 + a1*a2*b1*b3*c2*x2*x3 + a1*b2*b3*c2*x2*x3 + b1*b2*b3*c2*x2*x3 + a1*b1*b2*b3*c2*x2*x3 + a1*a2*b1*b2*b3*c2*x2*x3 + a2*b2*c1*c2*x2*x3 + a3*b2*c1*c2*x2*x3 + b1*b2*c1*c2*x2*x3 + b3*c1*c2*x2*x3 + a1*b3*c1*c2*x2*x3 + a2*b3*c1*c2*x2*x3 + a3*b3*c1*c2*x2*x3 + a1*b1*b3*c1*c2*x2*x3 + a2*b1*b3*c1*c2*x2*x3 + a1*b2*b3*c1*c2*x2*x3 + a1*b1*b2*b3*c1*c2*x2*x3 + a2*b1*b2*b3*c1*c2*x2*x3 + a1*c3*x2*x3 + a1*a3*c3*x2*x3 + a1*b1*c3*x2*x3 + a2*b1*c3*x2*x3 + a1*a3*b1*c3*x2*x3 + a1*b2*c3*x2*x3 + a1*a2*b2*c3*x2*x3 + a1*a3*b2*c3*x2*x3 + a2*b1*b2*c3*x2*x3 + a1*a2*b1*b2*c3*x2*x3 + a1*a3*b1*b2*c3*x2*x3 + a1*b3*c3*x2*x3 + a1*a2*b3*c3*x2*x3 + a1*b1*b3*c3*x2*x3 + a2*b1*b3*c3*x2*x3 + a1*a2*b1*b3*c3*x2*x3 + a1*b1*b2*b3*c3*x2*x3 + c1*c3*x2*x3 + a3*c1*c3*x2*x3 + b1*c1*c3*x2*x3 + a3*b1*c1*c3*x2*x3 + b2*c1*c3*x2*x3 + a2*b2*c1*c3*x2*x3 + a3*b2*c1*c3*x2*x3 + a2*b1*b2*c1*c3*x2*x3 + a3*b1*b2*c1*c3*x2*x3 + b3*c1*c3*x2*x3 + a2*b3*c1*c3*x2*x3 + b1*b3*c1*c3*x2*x3 + a2*b1*b3*c1*c3*x2*x3 + b2*b3*c1*c3*x2*x3 + b1*c2*c3*x2*x3 + b1*b2*c2*c3*x2*x3 + a1*b3*c2*c3*x2*x3 + b1*b3*c2*c3*x2*x3 + a1*b1*b3*c2*c3*x2*x3 + a1*b2*b3*c2*c3*x2*x3 + a1*b1*b2*b3*c2*c3*x2*x3 + b3*c1*c2*c3*x2*x3 + b1*b3*c1*c2*c3*x2*x3 + b2*b3*c1*c2*c3*x2*x3 + b1*b2*b3*c1*c2*c3*x2*x3 + a1*a2*a3*y1 + a3*b2*y1 + a1*a3*b2*y1 + a2*a3*b2*y1 + a1*a2*a3*b2*y1 + a3*b1*b2*y1 + a2*a3*b1*b2*y1 + a2*b3*y1 + a1*a2*a3*b3*y1 + a1*a2*b1*b3*y1 + a2*a3*b1*b3*y1 + a1*a2*a3*b1*b3*y1 + a1*b2*b3*y1 + a1*a2*b2*b3*y1 + a3*b2*b3*y1 + a1*a2*a3*b2*b3*y1 + b1*b2*b3*y1 + a1*b1*b2*b3*y1 + a2*a3*b1*b2*b3*y1 + a1*a2*a3*b1*b2*b3*y1 + a1*a2*a3*b1*c1*y1 + a3*b2*c1*y1 + a1*a2*a3*b2*c1*y1 + a3*b1*b2*c1*y1 + a1*a2*b3*c1*y1 + a1*a2*a3*b3*c1*y1 + a3*b2*b3*c1*y1 + a2*a3*b2*b3*c1*y1 + b1*b2*b3*c1*y1 + a1*b1*b2*b3*c1*y1 + a3*b1*b2*b3*c1*y1 + a2*a3*b1*b2*b3*c1*y1 + a3*c2*y1 + a2*a3*c2*y1 + a1*a2*a3*b1*c2*y1 + a3*b2*c2*y1 + a2*a3*b2*c2*y1 + a1*a2*a3*b2*c2*y1 + a3*b1*b2*c2*y1 + a2*b3*c2*y1 + a3*b3*c2*y1 + a1*a2*a3*b3*c2*y1 + b1*b3*c2*y1 + a2*b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + a1*a2*a3*b1*b3*c2*y1 + a1*b2*b3*c2*y1 + a3*b2*b3*c2*y1 + b1*b2*b3*c2*y1 + a1*a3*b1*b2*b3*c2*y1 + a1*a2*a3*b1*b2*b3*c2*y1 + a2*a3*c1*c2*y1 + b3*c1*c2*y1 + a1*b3*c1*c2*y1 + a1*a2*b3*c1*c2*y1 + a1*a3*b3*c1*c2*y1 + b1*b3*c1*c2*y1 + a2*b1*b3*c1*c2*y1 + a1*b2*b3*c1*c2*y1 + a2*b2*b3*c1*c2*y1 + a1*a2*b2*b3*c1*c2*y1 + a3*b2*b3*c1*c2*y1 + a2*c3*y1 + a1*a2*b1*c3*y1 + a1*a2*a3*b1*c3*y1 + b2*c3*y1 + a2*a3*b2*c3*y1 + a1*b1*b2*c3*y1 + a1*a2*b1*b2*c3*y1 + a1*a3*b1*b2*c3*y1 + a2*a3*b1*b2*c3*y1 + a1*a2*b3*c3*y1 + a2*a3*b3*c3*y1 + a1*a2*a3*b3*c3*y1 + a1*a2*a3*b1*b3*c3*y1 + a1*b2*b3*c3*y1 + a1*a3*b2*b3*c3*y1 + a3*b1*b2*b3*c3*y1 + a2*a3*b1*b2*b3*c3*y1 + a2*b2*c1*c3*y1 + a1*a2*b2*c1*c3*y1 + a2*a3*b2*c1*c3*y1 + b1*b2*c1*c3*y1 + a1*b1*b2*c1*c3*y1 + a1*a2*b1*b2*c1*c3*y1 + a2*a3*b1*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a1*a2*b3*c1*c3*y1 + a2*a3*b3*c1*c3*y1 + a1*a2*a3*b3*c1*c3*y1 + a1*a2*b1*b3*c1*c3*y1 + a2*a3*b1*b3*c1*c3*y1 + b2*b3*c1*c3*y1 + a2*b2*b3*c1*c3*y1 + a3*b2*b3*c1*c3*y1 + a1*a3*b2*b3*c1*c3*y1 + b1*b2*b3*c1*c3*y1 + a3*b1*b2*b3*c1*c3*y1 + c2*c3*y1 + a2*c2*c3*y1 + a1*a2*c2*c3*y1 + a3*c2*c3*y1 + a2*a3*c2*c3*y1 + b1*c2*c3*y1 + a1*b1*c2*c3*y1 + a2*b1*c2*c3*y1 + a1*a2*b1*c2*c3*y1 + a3*b1*c2*c3*y1 + a1*a3*b1*c2*c3*y1 + a1*a3*b2*c2*c3*y1 + a2*a3*b2*c2*c3*y1 + a1*a2*a3*b2*c2*c3*y1 + a3*b1*b2*c2*c3*y1 + a1*a3*b1*b2*c2*c3*y1 + a2*a3*b1*b2*c2*c3*y1 + b3*c2*c3*y1 + a1*b3*c2*c3*y1 + a2*b3*c2*c3*y1 + a1*a2*b3*c2*c3*y1 + a1*a3*b3*c2*c3*y1 + a2*a3*b3*c2*c3*y1 + a1*a2*b1*b3*c2*c3*y1 + a1*a3*b1*b3*c2*c3*y1 + a1*a3*b2*b3*c2*c3*y1 + a2*a3*b2*b3*c2*c3*y1 + a1*a2*a3*b2*b3*c2*c3*y1 + b1*b2*b3*c2*c3*y1 + a1*b1*b2*b3*c2*c3*y1 + a2*b1*b2*b3*c2*c3*y1 + a1*a2*b1*b2*b3*c2*c3*y1 + a3*b1*b2*b3*c2*c3*y1 + a1*a3*b1*b2*b3*c2*c3*y1 + a2*a3*b1*b2*b3*c2*c3*y1 + a1*c1*c2*c3*y1 + b1*c1*c2*c3*y1 + a2*b1*c1*c2*c3*y1 + a3*b1*c1*c2*c3*y1 + a1*a3*b1*c1*c2*c3*y1 + a2*a3*b1*c1*c2*c3*y1 + a3*b2*c1*c2*c3*y1 + a1*a3*b2*c1*c2*c3*y1 + a2*a3*b1*b2*c1*c2*c3*y1 + a2*b3*c1*c2*c3*y1 + a1*a2*b3*c1*c2*c3*y1 + a3*b3*c1*c2*c3*y1 + a2*a3*b3*c1*c2*c3*y1 + a1*a2*a3*b3*c1*c2*c3*y1 + b1*b3*c1*c2*c3*y1 + a1*a3*b1*b3*c1*c2*c3*y1 + a2*a3*b1*b3*c1*c2*c3*y1 + a3*b2*b3*c1*c2*c3*y1 + a1*a3*b2*b3*c1*c2*c3*y1 + a2*a3*b2*b3*c1*c2*c3*y1 + b1*b2*b3*c1*c2*c3*y1 + a2*b1*b2*b3*c1*c2*c3*y1 + a3*b1*b2*b3*c1*c2*c3*y1 + a2*a3*b1*b2*b3*c1*c2*c3*y1 + a3*b2*x1*y1 + b2*b3*x1*y1 + a1*a3*b2*c2*x1*y1 + a3*b1*b2*c2*x1*y1 + a1*a2*b3*c2*x1*y1 + a1*a3*b3*c2*x1*y1 + a2*b1*b3*c2*x1*y1 + a3*b1*b3*c2*x1*y1 + a1*b2*b3*c2*x1*y1 + b1*b2*b3*c2*x1*y1 + a3*b2*c1*c2*x1*y1 + a3*b1*b2*c1*c2*x1*y1 + a2*b3*c1*c2*x1*y1 + a3*b3*c1*c2*x1*y1 + a2*b1*b3*c1*c2*x1*y1 + a3*b1*b3*c1*c2*x1*y1 + b2*b3*c1*c2*x1*y1 + b1*b2*b3*c1*c2*x1*y1 + b2*c3*x1*y1 + a1*b2*c3*x1*y1 + a1*a2*b2*c3*x1*y1 + a1*a3*b2*c3*x1*y1 + a2*b1*b2*c3*x1*y1 + a3*b1*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + a1*a2*b3*c3*x1*y1 + a2*a3*b3*c3*x1*y1 + a2*b1*b3*c3*x1*y1 + a3*b2*b3*c3*x1*y1 + b2*c1*c3*x1*y1 + a2*b2*c1*c3*x1*y1 + a3*b2*c1*c3*x1*y1 + b1*b2*c1*c3*x1*y1 + a2*b1*b2*c1*c3*x1*y1 + a3*b1*b2*c1*c3*x1*y1 + a2*b3*c1*c3*x1*y1 + a2*b1*b3*c1*c3*x1*y1 + b3*c2*c3*x1*y1 + a1*b3*c2*c3*x1*y1 + a3*b3*c2*c3*x1*y1 + a3*b1*b3*c2*c3*x1*y1 + b2*b3*c2*c3*x1*y1 + a1*b2*b3*c2*c3*x1*y1 + a3*b2*b3*c2*c3*x1*y1 + b1*b2*b3*c2*c3*x1*y1 + b3*c1*c2*c3*x1*y1 + b1*b3*c1*c2*c3*x1*y1 + b2*b3*c1*c2*c3*x1*y1 + b1*b2*b3*c1*c2*c3*x1*y1 + a3*b1*x2*y1 + a1*a3*b1*x2*y1 + a3*b2*x2*y1 + a1*a3*b1*b2*x2*y1 + a1*b3*x2*y1 + a1*a2*b3*x2*y1 + a1*a3*b3*x2*y1 + b1*b3*x2*y1 + a2*b1*b3*x2*y1 + a1*a2*b1*b3*x2*y1 + a3*b1*b3*x2*y1 + a1*a3*b1*b3*x2*y1 + b2*b3*x2*y1 + a1*b2*b3*x2*y1 + a3*b1*c1*x2*y1 + a1*a3*b1*c1*x2*y1 + a3*b2*c1*x2*y1 + a1*a3*b2*c1*x2*y1 + a3*b1*b2*c1*x2*y1 + b3*c1*x2*y1 + a1*a2*b3*c1*x2*y1 + a1*a3*b3*c1*x2*y1 + b2*b3*c1*x2*y1 + b1*b2*b3*c1*x2*y1 + a1*a3*c2*x2*y1 + a3*b2*c2*x2*y1 + a1*a3*b2*c2*x2*y1 + a3*b1*b2*c2*x2*y1 + a1*a3*b1*b2*c2*x2*y1 + b3*c2*x2*y1 + a2*b3*c2*x2*y1 + a1*a2*b3*c2*x2*y1 + a3*b3*c2*x2*y1 + a1*a3*b3*c2*x2*y1 + b1*b3*c2*x2*y1 + a1*a2*b1*b3*c2*x2*y1 + a1*a3*b1*b3*c2*x2*y1 + b2*b3*c2*x2*y1 + a3*c1*c2*x2*y1 + a3*b2*c1*c2*x2*y1 + b3*c1*c2*x2*y1 + a1*b3*c1*c2*x2*y1 + a2*b3*c1*c2*x2*y1 + a3*b3*c1*c2*x2*y1 + b2*b3*c1*c2*x2*y1 + a1*b2*b3*c1*c2*x2*y1 + c3*x2*y1 + a1*a2*c3*x2*y1 + a1*a3*c3*x2*y1 + b1*c3*x2*y1 + a2*b1*c3*x2*y1 + a3*b1*c3*x2*y1 + b2*c3*x2*y1 + a2*b2*c3*x2*y1 + a1*a2*b2*c3*x2*y1 + a3*b2*c3*x2*y1 + a1*a3*b2*c3*x2*y1 + b1*b2*c3*x2*y1 + a1*b1*b2*c3*x2*y1 + a2*b1*b2*c3*x2*y1 + a1*a2*b1*b2*c3*x2*y1 + a3*b1*b2*c3*x2*y1 + a1*a3*b1*b2*c3*x2*y1 + a1*b3*c3*x2*y1 + a3*b3*c3*x2*y1 + a1*a3*b3*c3*x2*y1 + a2*a3*b3*c3*x2*y1 + a1*a2*a3*b3*c3*x2*y1 + b1*b3*c3*x2*y1 + a1*a2*b1*b3*c3*x2*y1 + a3*b2*b3*c3*x2*y1 + a1*a3*b2*b3*c3*x2*y1 + b1*b2*b3*c3*x2*y1 + a2*c1*c3*x2*y1 + a3*c1*c3*x2*y1 + b1*c1*c3*x2*y1 + a1*b1*c1*c3*x2*y1 + a2*b2*c1*c3*x2*y1 + a3*b2*c1*c3*x2*y1 + a1*b1*b2*c1*c3*x2*y1 + b3*c1*c3*x2*y1 + a3*b3*c1*c3*x2*y1 + a2*a3*b3*c1*c3*x2*y1 + a1*b1*b3*c1*c3*x2*y1 + a2*b1*b3*c1*c3*x2*y1 + a3*b1*b3*c1*c3*x2*y1 + a2*a3*b1*b3*c1*c3*x2*y1 + a3*b2*b3*c1*c3*x2*y1 + a3*b1*b2*b3*c1*c3*x2*y1 + a1*b3*c2*c3*x2*y1 + a3*b3*c2*c3*x2*y1 + a1*a3*b3*c2*c3*x2*y1 + b1*b3*c2*c3*x2*y1 + a1*b1*b3*c2*c3*x2*y1 + a2*b1*b3*c2*c3*x2*y1 + a3*b1*b3*c2*c3*x2*y1 + a2*a3*b1*b3*c2*c3*x2*y1 + a3*b2*b3*c2*c3*x2*y1 + a1*a3*b2*b3*c2*c3*x2*y1 + b1*b2*b3*c2*c3*x2*y1 + a1*b1*b2*b3*c2*c3*x2*y1 + b3*c1*c2*c3*x2*y1 + a3*b3*c1*c2*c3*x2*y1 + b1*b3*c1*c2*c3*x2*y1 + a3*b1*b3*c1*c2*c3*x2*y1 + a3*b2*b3*c1*c2*c3*x2*y1 + b1*b2*b3*c1*c2*c3*x2*y1 + a3*b1*b2*b3*c1*c2*c3*x2*y1 + a1*a2*x3*y1 + a2*b1*x3*y1 + a1*a2*b1*x3*y1 + a1*a2*a3*b2*x3*y1 + a2*a3*b1*b2*x3*y1 + a1*a2*a3*b1*b2*x3*y1 + a2*b3*x3*y1 + a1*a2*b3*x3*y1 + a2*a3*b3*x3*y1 + a1*a2*a3*b3*x3*y1 + a1*a2*b1*b3*x3*y1 + a1*a2*a3*b1*b3*x3*y1 + b2*b3*x3*y1 + a2*b2*b3*x3*y1 + a1*a2*b2*b3*x3*y1 + a3*b2*b3*x3*y1 + a2*a3*b2*b3*x3*y1 + b1*b2*b3*x3*y1 + a1*b1*b2*b3*x3*y1 + a2*b1*b2*b3*x3*y1 + a1*a2*b1*b2*b3*x3*y1 + a3*b1*b2*b3*x3*y1 + a1*a3*b1*b2*b3*x3*y1 + a2*c1*x3*y1 + a2*b1*c1*x3*y1 + a2*a3*b2*c1*x3*y1 + a2*a3*b1*b2*c1*x3*y1 + a2*b3*c1*x3*y1 + a2*a3*b3*c1*x3*y1 + a2*b1*b3*c1*x3*y1 + a2*a3*b1*b3*c1*x3*y1 + a2*b2*b3*c1*x3*y1 + a2*b1*b2*b3*c1*x3*y1 + c2*x3*y1 + a2*c2*x3*y1 + a1*a2*c2*x3*y1 + a3*c2*x3*y1 + a1*a3*c2*x3*y1 + a2*a3*c2*x3*y1 + b1*c2*x3*y1 + a1*a2*b1*c2*x3*y1 + a1*a3*b1*c2*x3*y1 + a2*a3*b1*c2*x3*y1 + b2*c2*x3*y1 + a2*b2*c2*x3*y1 + a3*b2*c2*x3*y1 + a2*a3*b2*c2*x3*y1 + b1*b2*c2*x3*y1 + a2*b1*b2*c2*x3*y1 + a3*b1*b2*c2*x3*y1 + a2*a3*b1*b2*c2*x3*y1 + b3*c2*x3*y1 + a1*b3*c2*x3*y1 + a3*b3*c2*x3*y1 + a1*a3*b3*c2*x3*y1 + a2*a3*b3*c2*x3*y1 + a1*a2*b1*b3*c2*x3*y1 + a2*a3*b1*b3*c2*x3*y1 + b2*b3*c2*x3*y1 + a1*b2*b3*c2*x3*y1 + a1*a3*b2*b3*c2*x3*y1 + b1*b2*b3*c2*x3*y1 + a1*a2*b1*b2*b3*c2*x3*y1 + a2*c1*c2*x3*y1 + a3*c1*c2*x3*y1 + a2*b1*c1*c2*x3*y1 + a3*b1*c1*c2*x3*y1 + b3*c1*c2*x3*y1 + a3*b3*c1*c2*x3*y1 + b1*b3*c1*c2*x3*y1 + a3*b1*b3*c1*c2*x3*y1 + b2*b3*c1*c2*x3*y1 + a3*b2*b3*c1*c2*x3*y1 + b1*b2*b3*c1*c2*x3*y1 + a3*b1*b2*b3*c1*c2*x3*y1 + a2*c3*x3*y1 + a1*a2*c3*x3*y1 + a1*a2*b1*c3*x3*y1 + b2*c3*x3*y1 + a2*b2*c3*x3*y1 + a1*a2*b2*c3*x3*y1 + a3*b2*c3*x3*y1 + b1*b2*c3*x3*y1 + a1*b1*b2*c3*x3*y1 + a2*b1*b2*c3*x3*y1 + a1*a2*b1*b2*c3*x3*y1 + a3*b1*b2*c3*x3*y1 + a1*a3*b1*b2*c3*x3*y1 + a2*a3*b1*b2*c3*x3*y1 + a2*a3*b3*c3*x3*y1 + a1*a2*b1*b3*c3*x3*y1 + b2*b3*c3*x3*y1 + a1*a2*b2*b3*c3*x3*y1 + a2*a3*b2*b3*c3*x3*y1 + b1*b2*b3*c3*x3*y1 + a1*b1*b2*b3*c3*x3*y1 + a2*c1*c3*x3*y1 + a2*b1*c1*c3*x3*y1 + a2*b2*c1*c3*x3*y1 + a2*b1*b2*c1*c3*x3*y1 + a2*b2*b3*c1*c3*x3*y1 + a2*b1*b2*b3*c1*c3*x3*y1 + a2*c2*c3*x3*y1 + a2*b1*c2*c3*x3*y1 + a2*b2*c2*c3*x3*y1 + b1*b2*c2*c3*x3*y1 + a2*b1*b2*c2*c3*x3*y1 + a3*b1*b2*c2*c3*x3*y1 + b3*c2*c3*x3*y1 + a1*b3*c2*c3*x3*y1 + a2*b3*c2*c3*x3*y1 + a3*b3*c2*c3*x3*y1 + a2*b1*b3*c2*c3*x3*y1 + a3*b1*b3*c2*c3*x3*y1 + b2*b3*c2*c3*x3*y1 + a2*b2*b3*c2*c3*x3*y1 + a1*b1*b2*b3*c2*c3*x3*y1 + a2*b1*b2*b3*c2*c3*x3*y1 + b3*c1*c2*c3*x3*y1 + b1*b3*c1*c2*c3*x3*y1 + a1*a3*b1*y2 + a2*a3*b1*y2 + a1*a2*a3*b1*y2 + a1*a3*b2*y2 + a1*b3*y2 + a2*b1*b3*y2 + a1*a2*b1*b3*y2 + a3*b1*b3*y2 + a1*a3*b1*b3*y2 + a1*a2*a3*b1*b3*y2 + b1*b2*b3*y2 + a1*b1*b2*b3*y2 + a1*a2*b1*b2*b3*y2 + a1*a3*b1*b2*b3*y2 + a1*a2*a3*b1*b2*b3*y2 + a2*a3*c1*y2 + a3*b1*c1*y2 + a1*a2*a3*b1*c1*y2 + a3*b2*c1*y2 + a1*a3*b2*c1*y2 + a1*a3*b1*b2*c1*y2 + a2*a3*b1*b2*c1*y2 + a2*b3*c1*y2 + a1*a2*b3*c1*y2 + a3*b3*c1*y2 + a2*a3*b3*c1*y2 + b1*b3*c1*y2 + a1*a2*b1*b3*c1*y2 + a1*a2*a3*b1*b3*c1*y2 + a1*b2*b3*c1*y2 + a2*b2*b3*c1*y2 + a2*b1*b2*b3*c1*y2 + a1*a2*b1*b2*b3*c1*y2 + a1*a3*b1*b2*b3*c1*y2 + a2*a3*b1*b2*b3*c1*y2 + a1*a2*a3*b1*b2*b3*c1*y2 + a1*a3*c2*y2 + a1*a2*a3*b1*c2*y2 + a3*b1*b2*c2*y2 + a2*a3*b1*b2*c2*y2 + a1*a2*a3*b1*b2*c2*y2 + a1*a2*b3*c2*y2 + a1*b1*b3*c2*y2 + a3*b1*b3*c2*y2 + a2*a3*b1*b3*c2*y2 + a1*b2*b3*c2*y2 + b1*b2*b3*c2*y2 + a1*b1*b2*b3*c2*y2 + a3*b1*b2*b3*c2*y2 + a1*a2*a3*b1*b2*b3*c2*y2 + a3*b1*c1*c2*y2 + a3*b2*c1*c2*y2 + a2*a3*b1*b2*c1*c2*y2 + a1*a2*a3*b1*b2*c1*c2*y2 + b3*c1*c2*y2 + a1*b3*c1*c2*y2 + a1*a2*b3*c1*c2*y2 + a2*a3*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a3*b1*b3*c1*c2*y2 + a1*a3*b1*b3*c1*c2*y2 + a2*a3*b1*b3*c1*c2*y2 + a1*a2*a3*b1*b3*c1*c2*y2 + b2*b3*c1*c2*y2 + a2*b2*b3*c1*c2*y2 + a1*a2*b2*b3*c1*c2*y2 + a2*a3*b2*b3*c1*c2*y2 + b1*b2*b3*c1*c2*y2 + a1*b1*b2*b3*c1*c2*y2 + a2*a3*b1*b2*b3*c1*c2*y2 + a1*b1*c3*y2 + a1*a2*b1*c3*y2 + a3*b1*c3*y2 + a1*a3*b1*c3*y2 + a1*a2*a3*b1*c3*y2 + b1*b2*c3*y2 + a3*b1*b2*c3*y2 + a1*a3*b1*b2*c3*y2 + a2*a3*b1*b2*c3*y2 + a1*a2*a3*b1*b2*c3*y2 + a1*b3*c3*y2 + a1*a3*b3*c3*y2 + a1*a2*a3*b3*c3*y2 + b1*b3*c3*y2 + a1*a2*b1*b3*c3*y2 + a1*a3*b1*b3*c3*y2 + a2*a3*b1*b3*c3*y2 + a1*a2*a3*b1*b3*c3*y2 + a1*a3*b2*b3*c3*y2 + a1*b1*b2*b3*c3*y2 + a1*a2*b1*b2*b3*c3*y2 + a2*c1*c3*y2 + a3*c1*c3*y2 + b1*c1*c3*y2 + a1*b1*c1*c3*y2 + a1*a2*b1*c1*c3*y2 + a1*a2*a3*b1*c1*c3*y2 + b2*c1*c3*y2 + a1*a2*b2*c1*c3*y2 + a1*a3*b2*c1*c3*y2 + a1*a2*a3*b2*c1*c3*y2 + b1*b2*c1*c3*y2 + a1*b1*b2*c1*c3*y2 + a1*a2*b1*b2*c1*c3*y2 + a3*b1*b2*c1*c3*y2 + a2*b3*c1*c3*y2 + a1*a2*b3*c1*c3*y2 + a3*b3*c1*c3*y2 + a1*a3*b3*c1*c3*y2 + b1*b3*c1*c3*y2 + a2*b1*b3*c1*c3*y2 + a1*a2*b1*b3*c1*c3*y2 + a1*a2*a3*b1*b3*c1*c3*y2 + a1*a2*b2*b3*c1*c3*y2 + a3*b2*b3*c1*c3*y2 + a2*b1*b2*b3*c1*c3*y2 + a1*a3*b1*b2*b3*c1*c3*y2 + a1*c2*c3*y2 + a2*b1*c2*c3*y2 + a1*a2*b1*c2*c3*y2 + a1*a3*b1*c2*c3*y2 + a1*b2*c2*c3*y2 + a1*a3*b1*b2*c2*c3*y2 + a1*a2*b3*c2*c3*y2 + a1*a3*b3*c2*c3*y2 + a1*a2*a3*b3*c2*c3*y2 + b1*b3*c2*c3*y2 + a2*b1*b3*c2*c3*y2 + a1*a2*b1*b3*c2*c3*y2 + a1*a3*b1*b3*c2*c3*y2 + a2*a3*b1*b3*c2*c3*y2 + a1*a2*a3*b1*b3*c2*c3*y2 + b1*b2*b3*c2*c3*y2 + a1*b1*b2*b3*c2*c3*y2 + a3*b1*b2*b3*c2*c3*y2 + a1*a3*b1*b2*b3*c2*c3*y2 + a1*b1*c1*c2*c3*y2 + a2*b1*c1*c2*c3*y2 + a3*b1*c1*c2*c3*y2 + a1*a3*b1*c1*c2*c3*y2 + a1*a2*a3*b1*c1*c2*c3*y2 + a2*b2*c1*c2*c3*y2 + a1*a2*b2*c1*c2*c3*y2 + a3*b2*c1*c2*c3*y2 + a1*a3*b2*c1*c2*c3*y2 + a1*a2*a3*b2*c1*c2*c3*y2 + a1*b1*b2*c1*c2*c3*y2 + a2*b1*b2*c1*c2*c3*y2 + a1*a2*b1*b2*c1*c2*c3*y2 + a1*b3*c1*c2*c3*y2 + a3*b3*c1*c2*c3*y2 + a1*a3*b3*c1*c2*c3*y2 + a2*a3*b3*c1*c2*c3*y2 + b1*b3*c1*c2*c3*y2 + a2*b1*b3*c1*c2*c3*y2 + a1*a2*b1*b3*c1*c2*c3*y2 + a1*a3*b1*b3*c1*c2*c3*y2 + a1*b2*b3*c1*c2*c3*y2 + a3*b2*b3*c1*c2*c3*y2 + a1*b1*b2*b3*c1*c2*c3*y2 + a3*b1*b2*b3*c1*c2*c3*y2 + a1*a3*b1*b2*b3*c1*c2*c3*y2 + a3*b1*x1*y2 + b3*x1*y2 + a1*b3*x1*y2 + a2*b3*x1*y2 + a1*a2*b3*x1*y2 + a3*b3*x1*y2 + a1*a3*b3*x1*y2 + b1*b3*x1*y2 + a2*b1*b3*x1*y2 + a3*b1*b3*x1*y2 + b2*b3*x1*y2 + a1*b2*b3*x1*y2 + a3*b1*b2*c1*x1*y2 + b3*c1*x1*y2 + a2*b3*c1*x1*y2 + a3*b3*c1*x1*y2 + b1*b3*c1*x1*y2 + a1*b1*b3*c1*x1*y2 + b2*b3*c1*x1*y2 + b1*b2*b3*c1*x1*y2 + a3*c2*x1*y2 + a1*a3*c2*x1*y2 + a3*b1*c2*x1*y2 + a1*a3*b1*c2*x1*y2 + a3*b2*c2*x1*y2 + a1*a3*b1*b2*c2*x1*y2 + a1*b3*c2*x1*y2 + a2*b3*c2*x1*y2 + a3*b3*c2*x1*y2 + a2*b1*b3*c2*x1*y2 + a1*a2*b1*b3*c2*x1*y2 + a3*b1*b3*c2*x1*y2 + a1*a3*b1*b3*c2*x1*y2 + a1*b2*b3*c2*x1*y2 + b1*b2*b3*c2*x1*y2 + a1*b1*b2*b3*c2*x1*y2 + a3*c1*c2*x1*y2 + a3*b1*c1*c2*x1*y2 + b3*c1*c2*x1*y2 + b1*b3*c1*c2*x1*y2 + b2*b3*c1*c2*x1*y2 + a2*c3*x1*y2 + a1*a2*c3*x1*y2 + a3*c3*x1*y2 + a1*a3*c3*x1*y2 + a1*b1*c3*x1*y2 + a1*a2*b1*c3*x1*y2 + a1*a3*b1*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + b1*b2*c3*x1*y2 + a1*a2*b1*b2*c3*x1*y2 + a1*a3*b1*b2*c3*x1*y2 + b3*c3*x1*y2 + a1*b3*c3*x1*y2 + a1*a2*b3*c3*x1*y2 + a3*b3*c3*x1*y2 + a2*a3*b3*c3*x1*y2 + a1*a2*a3*b3*c3*x1*y2 + b1*b3*c3*x1*y2 + a1*b1*b3*c3*x1*y2 + a2*b1*b3*c3*x1*y2 + a1*a2*b1*b3*c3*x1*y2 + a3*b2*b3*c3*x1*y2 + a1*a3*b2*b3*c3*x1*y2 + b1*b2*b3*c3*x1*y2 + a2*c1*c3*x1*y2 + a3*c1*c3*x1*y2 + a2*b1*c1*c3*x1*y2 + a3*b1*c1*c3*x1*y2 + b1*b2*c1*c3*x1*y2 + b3*c1*c3*x1*y2 + a2*b3*c1*c3*x1*y2 + a2*a3*b3*c1*c3*x1*y2 + a2*b1*b3*c1*c3*x1*y2 + a2*a3*b1*b3*c1*c3*x1*y2 + a3*b2*b3*c1*c3*x1*y2 + a3*b1*b2*b3*c1*c3*x1*y2 + b3*c2*c3*x1*y2 + a3*b3*c2*c3*x1*y2 + a1*a3*b3*c2*c3*x1*y2 + a2*b1*b3*c2*c3*x1*y2 + a2*a3*b1*b3*c2*c3*x1*y2 + a1*b2*b3*c2*c3*x1*y2 + a3*b2*b3*c2*c3*x1*y2 + a1*a3*b2*b3*c2*c3*x1*y2 + a1*b1*b2*b3*c2*c3*x1*y2 + a3*b3*c1*c2*c3*x1*y2 + a3*b1*b3*c1*c2*c3*x1*y2 + b2*b3*c1*c2*c3*x1*y2 + a3*b2*b3*c1*c2*c3*x1*y2 + b1*b2*b3*c1*c2*c3*x1*y2 + a3*b1*b2*b3*c1*c2*c3*x1*y2 + a1*a3*b1*x2*y2 + a1*a3*b2*x2*y2 + a3*b1*b2*x2*y2 + a1*a3*b1*b2*x2*y2 + a1*a2*b3*x2*y2 + a1*a3*b3*x2*y2 + a2*b1*b3*x2*y2 + a1*a2*b1*b3*x2*y2 + a3*b1*b3*x2*y2 + a1*a3*b1*b3*x2*y2 + a1*a3*b1*c1*x2*y2 + a1*a3*b2*c1*x2*y2 + a3*b1*b2*c1*x2*y2 + a1*a2*b3*c1*x2*y2 + a1*a3*b3*c1*x2*y2 + a2*b1*b3*c1*x2*y2 + a3*b1*b3*c1*x2*y2 + a1*a3*b1*c2*x2*y2 + a1*a3*b2*c2*x2*y2 + a1*a2*b3*c2*x2*y2 + a1*a3*b3*c2*x2*y2 + b1*b3*c2*x2*y2 + a1*b1*b3*c2*x2*y2 + b1*b2*b3*c2*x2*y2 + a1*b1*b2*b3*c2*x2*y2 + a3*b1*c1*c2*x2*y2 + a3*b2*c1*c2*x2*y2 + b3*c1*c2*x2*y2 + a1*b3*c1*c2*x2*y2 + a2*b3*c1*c2*x2*y2 + a3*b3*c1*c2*x2*y2 + b1*b3*c1*c2*x2*y2 + b2*b3*c1*c2*x2*y2 + a1*b2*b3*c1*c2*x2*y2 + b1*b2*b3*c1*c2*x2*y2 + a1*a2*b1*c3*x2*y2 + a1*a3*b1*c3*x2*y2 + a1*a2*b2*c3*x2*y2 + a1*a3*b2*c3*x2*y2 + a1*b3*c3*x2*y2 + a1*a2*b3*c3*x2*y2 + b1*c1*c3*x2*y2 + a1*b1*c1*c3*x2*y2 + a2*b1*c1*c3*x2*y2 + a3*b1*c1*c3*x2*y2 + a2*b2*c1*c3*x2*y2 + a3*b2*c1*c3*x2*y2 + b1*b2*c1*c3*x2*y2 + a1*b1*b2*c1*c3*x2*y2 + b3*c1*c3*x2*y2 + a2*b3*c1*c3*x2*y2 + b1*b3*c1*c3*x2*y2 + a1*b1*b3*c1*c3*x2*y2 + a1*b3*c2*c3*x2*y2 + a1*b1*b3*c2*c3*x2*y2 + a1*b2*b3*c2*c3*x2*y2 + b3*c1*c2*c3*x2*y2 + b1*b3*c1*c2*c3*x2*y2 + b2*b3*c1*c2*c3*x2*y2 + b1*x3*y2 + a1*b1*x3*y2 + a2*b1*x3*y2 + a1*a2*b1*x3*y2 + a1*b2*x3*y2 + a1*a2*a3*b1*b2*x3*y2 + a1*b3*x3*y2 + a1*a3*b3*x3*y2 + b1*b3*x3*y2 + a1*a2*b1*b3*x3*y2 + a3*b1*b3*x3*y2 + a1*a2*a3*b1*b3*x3*y2 + a1*b1*b2*b3*x3*y2 + a1*a2*b1*b2*b3*x3*y2 + a1*a3*b1*b2*b3*x3*y2 + b1*c1*x3*y2 + a1*b1*c1*x3*y2 + a2*b1*c1*x3*y2 + a1*a2*b1*c1*x3*y2 + a3*b1*c1*x3*y2 + a2*a3*b1*c1*x3*y2 + b2*c1*x3*y2 + a1*b2*c1*x3*y2 + a2*b2*c1*x3*y2 + a1*a3*b2*c1*x3*y2 + a2*a3*b2*c1*x3*y2 + a2*a3*b1*b2*c1*x3*y2 + b3*c1*x3*y2 + a1*a3*b3*c1*x3*y2 + a2*a3*b3*c1*x3*y2 + a1*b1*b3*c1*x3*y2 + a2*b1*b3*c1*x3*y2 + a1*a2*b1*b3*c1*x3*y2 + a1*a3*b1*b3*c1*x3*y2 + a2*a3*b1*b3*c1*x3*y2 + b2*b3*c1*x3*y2 + a1*b1*b2*b3*c1*x3*y2 + a2*b1*b2*b3*c1*x3*y2 + a1*a2*b1*b2*b3*c1*x3*y2 + a3*b1*b2*b3*c1*x3*y2 + a1*a3*b1*b2*b3*c1*x3*y2 + b1*c2*x3*y2 + a1*b1*c2*x3*y2 + a2*b1*c2*x3*y2 + a1*a2*b1*c2*x3*y2 + a2*a3*b1*c2*x3*y2 + a1*b2*c2*x3*y2 + a1*a3*b2*c2*x3*y2 + a1*b1*b2*c2*x3*y2 + a2*b1*b2*c2*x3*y2 + a1*a3*b3*c2*x3*y2 + a1*b1*b3*c2*x3*y2 + a2*b1*b3*c2*x3*y2 + a1*a2*b1*b3*c2*x3*y2 + a3*b1*b3*c2*x3*y2 + b1*b2*b3*c2*x3*y2 + a1*a2*b1*b2*b3*c2*x3*y2 + b1*c1*c2*x3*y2 + a1*b1*c1*c2*x3*y2 + a2*b1*c1*c2*x3*y2 + a3*b1*c1*c2*x3*y2 + b2*c1*c2*x3*y2 + a1*b2*c1*c2*x3*y2 + a2*b2*c1*c2*x3*y2 + b1*b2*c1*c2*x3*y2 + a2*b1*b2*c1*c2*x3*y2 + b1*b3*c1*c2*x3*y2 + a1*b1*b3*c1*c2*x3*y2 + a2*b1*b3*c1*c2*x3*y2 + a1*b2*b3*c1*c2*x3*y2 + a2*b2*b3*c1*c2*x3*y2 + a1*b1*b2*b3*c1*c2*x3*y2 + a2*b1*b2*b3*c1*c2*x3*y2 + a1*c3*x3*y2 + a1*a3*c3*x3*y2 + b1*c3*x3*y2 + a1*a2*b1*c3*x3*y2 + a1*a3*b1*c3*x3*y2 + a2*a3*b1*c3*x3*y2 + a1*a3*b2*c3*x3*y2 + b1*b2*c3*x3*y2 + a2*b1*b2*c3*x3*y2 + a1*a2*b1*b2*c3*x3*y2 + a1*a3*b1*b2*c3*x3*y2 + a1*b3*c3*x3*y2 + b1*b3*c3*x3*y2 + a1*a2*b1*b3*c3*x3*y2 + a1*b2*b3*c3*x3*y2 + b1*b2*b3*c3*x3*y2 + a1*b1*b2*b3*c3*x3*y2 + c1*c3*x3*y2 + a3*c1*c3*x3*y2 + b1*c1*c3*x3*y2 + a3*b1*c1*c3*x3*y2 + a3*b2*c1*c3*x3*y2 + b1*b2*c1*c3*x3*y2 + a3*b1*b2*c1*c3*x3*y2 + b3*c1*c3*x3*y2 + b1*b3*c1*c3*x3*y2 + b1*b2*b3*c1*c3*x3*y2 + a1*b1*c2*c3*x3*y2 + a2*b1*c2*c3*x3*y2 + a3*b1*c2*c3*x3*y2 + a1*b2*c2*c3*x3*y2 + b1*b2*c2*c3*x3*y2 + a1*b1*b3*c2*c3*x3*y2 + a2*b1*b3*c2*c3*x3*y2 + a1*b2*b3*c2*c3*x3*y2 + a1*b1*b2*b3*c2*c3*x3*y2 + b2*c1*c2*c3*x3*y2 + b1*b2*c1*c2*c3*x3*y2 + b2*b3*c1*c2*c3*x3*y2 + b1*b2*b3*c1*c2*c3*x3*y2 + a1*a3*b1*y1*y2 + a1*a3*b2*y1*y2 + a3*b1*b2*y1*y2 + b1*b3*y1*y2 + a1*b1*b3*y1*y2 + a1*b2*b3*y1*y2 + a1*a3*b1*c1*y1*y2 + a3*b2*c1*y1*y2 + a1*a3*b2*c1*y1*y2 + a1*b3*c1*y1*y2 + a1*a2*b3*c1*y1*y2 + a1*a3*b3*c1*y1*y2 + a2*b1*b3*c1*y1*y2 + a3*b1*b3*c1*y1*y2 + b2*b3*c1*y1*y2 + b1*b2*b3*c1*y1*y2 + a3*c2*y1*y2 + a1*a3*c2*y1*y2 + a3*b2*c2*y1*y2 + a1*a3*b2*c2*y1*y2 + a1*a3*b1*b2*c2*y1*y2 + a2*b3*c2*y1*y2 + a1*a2*b3*c2*y1*y2 + a3*b3*c2*y1*y2 + a1*a3*b3*c2*y1*y2 + a1*b1*b3*c2*y1*y2 + a2*b1*b3*c2*y1*y2 + a1*a2*b1*b3*c2*y1*y2 + a3*b1*b3*c2*y1*y2 + a1*a3*b1*b3*c2*y1*y2 + b2*b3*c2*y1*y2 + a1*b2*b3*c2*y1*y2 + a1*b1*b2*b3*c2*y1*y2 + a3*c1*c2*y1*y2 + a3*b2*c1*c2*y1*y2 + a1*b3*c1*c2*y1*y2 + a2*b3*c1*c2*y1*y2 + a3*b3*c1*c2*y1*y2 + b1*b3*c1*c2*y1*y2 + b2*b3*c1*c2*y1*y2 + a1*b2*b3*c1*c2*y1*y2 + b1*b2*b3*c1*c2*y1*y2 + c3*y1*y2 + a2*c3*y1*y2 + a1*a2*c3*y1*y2 + a3*c3*y1*y2 + a1*a3*c3*y1*y2 + a1*b1*c3*y1*y2 + a2*b1*c3*y1*y2 + a3*b1*c3*y1*y2 + a1*b2*c3*y1*y2 + a2*b2*c3*y1*y2 + a1*a2*b2*c3*y1*y2 + a3*b2*c3*y1*y2 + a1*a3*b2*c3*y1*y2 + a1*b1*b2*c3*y1*y2 + a1*a2*b1*b2*c3*y1*y2 + a1*a3*b1*b2*c3*y1*y2 + a1*b3*c3*y1*y2 + a2*b3*c3*y1*y2 + a3*b3*c3*y1*y2 + a1*a2*a3*b3*c3*y1*y2 + a2*b1*b3*c3*y1*y2 + a1*a2*b1*b3*c3*y1*y2 + a1*a3*b2*b3*c3*y1*y2 + b1*b2*b3*c3*y1*y2 + a2*c1*c3*y1*y2 + a3*c1*c3*y1*y2 + b1*c1*c3*y1*y2 + a1*b1*c1*c3*y1*y2 + b2*c1*c3*y1*y2 + a2*b2*c1*c3*y1*y2 + a3*b2*c1*c3*y1*y2 + b1*b2*c1*c3*y1*y2 + a1*b1*b2*c1*c3*y1*y2 + b3*c1*c3*y1*y2 + a2*a3*b3*c1*c3*y1*y2 + a1*b1*b3*c1*c3*y1*y2 + a2*b1*b3*c1*c3*y1*y2 + a2*a3*b1*b3*c1*c3*y1*y2 + a3*b2*b3*c1*c3*y1*y2 + a3*b1*b2*b3*c1*c3*y1*y2 + a1*b3*c2*c3*y1*y2 + a1*a3*b3*c2*c3*y1*y2 + b1*b3*c2*c3*y1*y2 + a1*b1*b3*c2*c3*y1*y2 + a2*b1*b3*c2*c3*y1*y2 + a2*a3*b1*b3*c2*c3*y1*y2 + b2*b3*c2*c3*y1*y2 + a1*a3*b2*b3*c2*c3*y1*y2 + a1*b1*b2*b3*c2*c3*y1*y2 + b3*c1*c2*c3*y1*y2 + a3*b3*c1*c2*c3*y1*y2 + b1*b3*c1*c2*c3*y1*y2 + a3*b1*b3*c1*c2*c3*y1*y2 + a3*b2*b3*c1*c2*c3*y1*y2 + b1*b2*b3*c1*c2*c3*y1*y2 + a3*b1*b2*b3*c1*c2*c3*y1*y2 + a2*b1*y3 + a1*a2*b1*y3 + a1*a2*b2*y3 + b1*b2*y3 + a1*a2*b1*b2*y3 + a1*a3*b1*b2*y3 + a1*a2*a3*b1*b2*y3 + a1*a2*b1*b3*y3 + a2*a3*b1*b3*y3 + a1*a3*b2*b3*y3 + b1*b2*b3*y3 + a2*b1*b2*b3*y3 + a1*a2*b1*b2*b3*y3 + a2*a3*b1*b2*b3*y3 + a1*a2*a3*b1*b2*b3*y3 + a1*a2*c1*y3 + a1*a2*b1*c1*y3 + a2*a3*b1*c1*y3 + a1*b2*c1*y3 + a2*b2*c1*y3 + a1*a3*b2*c1*y3 + a2*a3*b2*c1*y3 + a1*b1*b2*c1*y3 + a2*b1*b2*c1*y3 + a1*a3*b1*b2*c1*y3 + a1*a2*a3*b1*b3*c1*y3 + a1*b2*b3*c1*y3 + a2*b2*b3*c1*y3 + b1*b2*b3*c1*y3 + a1*b1*b2*b3*c1*y3 + a1*a2*b1*b2*b3*c1*y3 + a3*b1*b2*b3*c1*y3 + a1*a3*b1*b2*b3*c1*y3 + a2*a3*b1*b2*b3*c1*y3 + a1*a2*a3*b1*b2*b3*c1*y3 + a1*c2*y3 + a1*a2*c2*y3 + a1*a3*c2*y3 + a2*b1*c2*y3 + a1*a2*b1*c2*y3 + a3*b1*c2*y3 + a1*a2*b2*c2*y3 + a1*a2*b1*b2*c2*y3 + a2*a3*b1*b2*c2*y3 + a1*a2*b3*c2*y3 + b1*b3*c2*y3 + a1*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + a1*a2*b2*b3*c2*y3 + b1*b2*b3*c2*y3 + a2*b1*b2*b3*c2*y3 + a3*b1*b2*b3*c2*y3 + a2*a3*b1*b2*b3*c2*y3 + a1*c1*c2*y3 + a1*a3*c1*c2*y3 + a2*a3*c1*c2*y3 + a1*a2*a3*c1*c2*y3 + b1*c1*c2*y3 + a1*a2*b1*c1*c2*y3 + a1*a3*b1*c1*c2*y3 + a2*a3*b1*c1*c2*y3 + a1*a2*a3*b1*c1*c2*y3 + b2*c1*c2*y3 + b1*b2*c1*c2*y3 + a1*b1*b2*c1*c2*y3 + a2*a3*b1*b2*c1*c2*y3 + a1*a2*b3*c1*c2*y3 + a1*b1*b3*c1*c2*y3 + a1*a2*b1*b3*c1*c2*y3 + a3*b1*b3*c1*c2*y3 + a1*a3*b1*b3*c1*c2*y3 + a2*a3*b1*b3*c1*c2*y3 + b2*b3*c1*c2*y3 + a3*b2*b3*c1*c2*y3 + a1*a3*b2*b3*c1*c2*y3 + a2*a3*b2*b3*c1*c2*y3 + a1*b1*b2*b3*c1*c2*y3 + a2*b1*b2*b3*c1*c2*y3 + a3*b1*b2*b3*c1*c2*y3 + a2*a3*b1*b2*b3*c1*c2*y3 + a1*a2*c3*y3 + a1*a2*b1*c3*y3 + a2*a3*b1*c3*y3 + a1*b2*c3*y3 + a1*a3*b2*c3*y3 + a1*a2*a3*b2*c3*y3 + b1*b2*c3*y3 + a1*a2*b1*b2*c3*y3 + a3*b1*b2*c3*y3 + a2*a3*b1*b2*c3*y3 + a1*a2*b3*c3*y3 + a1*a2*a3*b3*c3*y3 + a1*a2*a3*b2*b3*c3*y3 + a2*b1*b2*b3*c3*y3 + a2*a3*b1*b2*b3*c3*y3 + a1*b2*c1*c3*y3 + a1*a2*b2*c1*c3*y3 + a1*a3*b2*c1*c3*y3 + a1*a2*a3*b2*c1*c3*y3 + b1*b2*c1*c3*y3 + a1*b1*b2*c1*c3*y3 + a3*b1*b2*c1*c3*y3 + a1*a3*b1*b2*c1*c3*y3 + a2*b1*b3*c1*c3*y3 + a1*a2*b1*b3*c1*c3*y3 + b1*b2*b3*c1*c3*y3 + a1*b1*b2*b3*c1*c3*y3 + a2*b1*b2*b3*c1*c3*y3 + a1*a2*b1*b2*b3*c1*c3*y3 + a3*b1*b2*b3*c1*c3*y3 + a1*c2*c3*y3 + a1*a2*b1*c2*c3*y3 + a3*b1*c2*c3*y3 + a1*a3*b1*c2*c3*y3 + a2*a3*b1*c2*c3*y3 + b1*b2*c2*c3*y3 + a1*b1*b2*c2*c3*y3 + a1*a2*b1*b2*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + a1*a3*b1*b2*c2*c3*y3 + a1*a2*a3*b1*b2*c2*c3*y3 + a1*a2*b3*c2*c3*y3 + a1*a3*b3*c2*c3*y3 + b1*b3*c2*c3*y3 + a1*b1*b3*c2*c3*y3 + a2*b1*b3*c2*c3*y3 + a2*a3*b1*b3*c2*c3*y3 + a1*a2*a3*b1*b3*c2*c3*y3 + a1*b2*b3*c2*c3*y3 + a1*a2*b2*b3*c2*c3*y3 + a2*b1*b2*b3*c2*c3*y3 + a1*a3*b1*b2*b3*c2*c3*y3 + a1*a2*c1*c2*c3*y3 + a3*c1*c2*c3*y3 + a1*a3*c1*c2*c3*y3 + a2*a3*c1*c2*c3*y3 + b1*c1*c2*c3*y3 + a1*a3*b1*c1*c2*c3*y3 + a1*a2*a3*b1*c1*c2*c3*y3 + b2*c1*c2*c3*y3 + a1*b2*c1*c2*c3*y3 + a1*a2*b2*c1*c2*c3*y3 + a3*b2*c1*c2*c3*y3 + a2*a3*b2*c1*c2*c3*y3 + a1*a2*a3*b2*c1*c2*c3*y3 + a1*b3*c1*c2*c3*y3 + a1*a2*b3*c1*c2*c3*y3 + a1*a2*a3*b3*c1*c2*c3*y3 + b1*b3*c1*c2*c3*y3 + a3*b1*b3*c1*c2*c3*y3 + a2*a3*b1*b3*c1*c2*c3*y3 + b2*b3*c1*c2*c3*y3 + a1*b2*b3*c1*c2*c3*y3 + a1*a2*b2*b3*c1*c2*c3*y3 + a2*a3*b2*b3*c1*c2*c3*y3 + a1*b1*b2*b3*c1*c2*c3*y3 + a2*b1*b2*b3*c1*c2*c3*y3 + a3*b1*b2*b3*c1*c2*c3*y3 + a2*x1*y3 + a1*a2*x1*y3 + a2*b1*x1*y3 + a1*a2*b1*x1*y3 + a2*b2*x1*y3 + a1*a2*b2*x1*y3 + a1*a3*b2*x1*y3 + a1*a2*a3*b2*x1*y3 + a1*b1*b2*x1*y3 + a1*a2*b1*b2*x1*y3 + a1*a3*b1*b2*x1*y3 + a1*a2*a3*b1*b2*x1*y3 + a1*a2*a3*b3*x1*y3 + a1*a2*a3*b1*b3*x1*y3 + a1*b2*b3*x1*y3 + a1*a2*b2*b3*x1*y3 + a1*a3*b2*b3*x1*y3 + a1*b1*b2*b3*x1*y3 + a1*a2*b1*b2*b3*x1*y3 + a1*a3*b1*b2*b3*x1*y3 + a2*c1*x1*y3 + a2*b1*c1*x1*y3 + a2*b2*c1*x1*y3 + a3*b2*c1*x1*y3 + a2*a3*b2*c1*x1*y3 + a2*b1*b2*c1*x1*y3 + a3*b1*b2*c1*x1*y3 + a2*a3*b1*b2*c1*x1*y3 + a2*a3*b3*c1*x1*y3 + a2*a3*b1*b3*c1*x1*y3 + b2*b3*c1*x1*y3 + a2*b2*b3*c1*x1*y3 + a3*b2*b3*c1*x1*y3 + b1*b2*b3*c1*x1*y3 + a2*b1*b2*b3*c1*x1*y3 + a3*b1*b2*b3*c1*x1*y3 + c2*x1*y3 + a1*a2*c2*x1*y3 + a1*a3*c2*x1*y3 + a2*a3*c2*x1*y3 + b1*c2*x1*y3 + a1*a2*b1*c2*x1*y3 + a1*a3*b1*c2*x1*y3 + a2*a3*b1*c2*x1*y3 + b2*c2*x1*y3 + a2*a3*b2*c2*x1*y3 + a2*a3*b1*b2*c2*x1*y3 + a1*a3*b3*c2*x1*y3 + a2*a3*b3*c2*x1*y3 + a1*b1*b3*c2*x1*y3 + a1*a2*b1*b3*c2*x1*y3 + a2*a3*b1*b3*c2*x1*y3 + a2*b2*b3*c2*x1*y3 + a1*a3*b2*b3*c2*x1*y3 + a1*b1*b2*b3*c2*x1*y3 + a2*b1*b2*b3*c2*x1*y3 + a1*a2*b1*b2*b3*c2*x1*y3 + a2*c1*c2*x1*y3 + a3*c1*c2*x1*y3 + a2*b1*c1*c2*x1*y3 + a3*b1*c1*c2*x1*y3 + a3*b3*c1*c2*x1*y3 + a3*b1*b3*c1*c2*x1*y3 + a3*b2*b3*c1*c2*x1*y3 + a3*b1*b2*b3*c1*c2*x1*y3 + a1*a2*c3*x1*y3 + a1*a2*b1*c3*x1*y3 + a1*a2*b2*c3*x1*y3 + b1*b2*c3*x1*y3 + a1*b1*b2*c3*x1*y3 + a2*b1*b2*c3*x1*y3 + a1*a2*b1*b2*c3*x1*y3 + a3*b1*b2*c3*x1*y3 + a1*a3*b1*b2*c3*x1*y3 + a2*a3*b1*b2*c3*x1*y3 + a2*a3*b3*c3*x1*y3 + a1*a2*b1*b3*c3*x1*y3 + b2*b3*c3*x1*y3 + a2*b2*b3*c3*x1*y3 + a1*a2*b2*b3*c3*x1*y3 + a3*b2*b3*c3*x1*y3 + a2*a3*b2*b3*c3*x1*y3 + a1*b1*b2*b3*c3*x1*y3 + a2*c1*c3*x1*y3 + a2*b1*c1*c3*x1*y3 + a2*b2*c1*c3*x1*y3 + a2*b1*b2*c1*c3*x1*y3 + a2*b2*b3*c1*c3*x1*y3 + a2*b1*b2*b3*c1*c3*x1*y3 + a2*c2*c3*x1*y3 + a2*b1*c2*c3*x1*y3 + a2*b2*c2*c3*x1*y3 + b1*b2*c2*c3*x1*y3 + a2*b1*b2*c2*c3*x1*y3 + a3*b1*b2*c2*c3*x1*y3 + a1*b3*c2*c3*x1*y3 + a2*b3*c2*c3*x1*y3 + a3*b3*c2*c3*x1*y3 + a2*b1*b3*c2*c3*x1*y3 + a3*b1*b3*c2*c3*x1*y3 + b2*b3*c2*c3*x1*y3 + a2*b2*b3*c2*c3*x1*y3 + a1*b1*b2*b3*c2*c3*x1*y3 + a2*b1*b2*b3*c2*c3*x1*y3 + b3*c1*c2*c3*x1*y3 + b1*b3*c1*c2*c3*x1*y3 + a1*x2*y3 + b1*x2*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a3*b1*x2*y3 + a2*a3*b1*x2*y3 + a1*b2*x2*y3 + a1*a2*b2*x2*y3 + b1*b2*x2*y3 + a1*b1*b2*x2*y3 + a2*b1*b2*x2*y3 + a3*b1*b2*x2*y3 + a1*a2*a3*b1*b2*x2*y3 + a1*b3*x2*y3 + a1*a2*b3*x2*y3 + a1*b1*b3*x2*y3 + a1*a2*b1*b3*x2*y3 + a1*a3*b1*b3*x2*y3 + a1*a2*a3*b1*b3*x2*y3 + a1*b2*b3*x2*y3 + a1*b1*b2*b3*x2*y3 + a1*a2*b1*b2*b3*x2*y3 + a1*a3*b1*b2*b3*x2*y3 + c1*x2*y3 + b1*c1*x2*y3 + b2*c1*x2*y3 + a1*a2*b2*c1*x2*y3 + a3*b2*c1*x2*y3 + a1*a3*b2*c1*x2*y3 + b1*b2*c1*x2*y3 + a1*b1*b2*c1*x2*y3 + a2*b1*b2*c1*x2*y3 + a3*b1*b2*c1*x2*y3 + a2*a3*b1*b2*c1*x2*y3 + b3*c1*x2*y3 + a1*a2*b3*c1*x2*y3 + a3*b3*c1*x2*y3 + a1*a3*b3*c1*x2*y3 + b1*b3*c1*x2*y3 + a1*a2*b1*b3*c1*x2*y3 + a1*a3*b1*b3*c1*x2*y3 + a2*a3*b1*b3*c1*x2*y3 + a1*b2*b3*c1*x2*y3 + a2*b2*b3*c1*x2*y3 + a3*b2*b3*c1*x2*y3 + a1*a2*b1*b2*b3*c1*x2*y3 + a1*a3*b1*b2*b3*c1*x2*y3 + b1*c2*x2*y3 + a3*b1*c2*x2*y3 + a1*a2*b2*c2*x2*y3 + a1*a3*b2*c2*x2*y3 + a1*b1*b2*c2*x2*y3 + a2*b1*b2*c2*x2*y3 + a1*a2*b3*c2*x2*y3 + a1*a3*b3*c2*x2*y3 + a1*a2*b1*b3*c2*x2*y3 + a1*b2*b3*c2*x2*y3 + b1*b2*b3*c2*x2*y3 + a1*a2*b1*b2*b3*c2*x2*y3 + a2*b2*c1*c2*x2*y3 + a3*b2*c1*c2*x2*y3 + b1*b2*c1*c2*x2*y3 + b3*c1*c2*x2*y3 + a1*b3*c1*c2*x2*y3 + a2*b3*c1*c2*x2*y3 + a3*b3*c1*c2*x2*y3 + b1*b3*c1*c2*x2*y3 + a1*b1*b3*c1*c2*x2*y3 + a2*b1*b3*c1*c2*x2*y3 + a1*b2*b3*c1*c2*x2*y3 + b1*b2*b3*c1*c2*x2*y3 + a1*b1*b2*b3*c1*c2*x2*y3 + a2*b1*b2*b3*c1*c2*x2*y3 + a1*c3*x2*y3 + a1*a3*c3*x2*y3 + b1*c3*x2*y3 + a1*b1*c3*x2*y3 + a2*b1*c3*x2*y3 + a1*a3*b1*c3*x2*y3 + a1*b2*c3*x2*y3 + a1*a2*b2*c3*x2*y3 + a1*a3*b2*c3*x2*y3 + b1*b2*c3*x2*y3 + a2*b1*b2*c3*x2*y3 + a1*a2*b1*b2*c3*x2*y3 + a1*a3*b1*b2*c3*x2*y3 + a1*b3*c3*x2*y3 + a1*a2*b3*c3*x2*y3 + b1*b3*c3*x2*y3 + a1*b1*b3*c3*x2*y3 + a2*b1*b3*c3*x2*y3 + a1*a2*b1*b3*c3*x2*y3 + a1*b1*b2*b3*c3*x2*y3 + c1*c3*x2*y3 + a3*c1*c3*x2*y3 + b1*c1*c3*x2*y3 + a3*b1*c1*c3*x2*y3 + b2*c1*c3*x2*y3 + a2*b2*c1*c3*x2*y3 + a3*b2*c1*c3*x2*y3 + a2*b1*b2*c1*c3*x2*y3 + a3*b1*b2*c1*c3*x2*y3 + b3*c1*c3*x2*y3 + a2*b3*c1*c3*x2*y3 + b1*b3*c1*c3*x2*y3 + a2*b1*b3*c1*c3*x2*y3 + b2*b3*c1*c3*x2*y3 + b1*c2*c3*x2*y3 + b1*b2*c2*c3*x2*y3 + a1*b3*c2*c3*x2*y3 + b1*b3*c2*c3*x2*y3 + a1*b1*b3*c2*c3*x2*y3 + a1*b2*b3*c2*c3*x2*y3 + a1*b1*b2*b3*c2*c3*x2*y3 + b3*c1*c2*c3*x2*y3 + b1*b3*c1*c2*c3*x2*y3 + b2*b3*c1*c2*c3*x2*y3 + b1*b2*b3*c1*c2*c3*x2*y3 + a1*a2*b1*x3*y3 + a2*a3*b1*x3*y3 + a1*a2*b2*x3*y3 + b1*b2*x3*y3 + a2*b1*b2*x3*y3 + a1*a2*b1*b2*x3*y3 + a3*b1*b2*x3*y3 + a1*a3*b1*b2*x3*y3 + a1*a2*b3*x3*y3 + a2*b1*b3*x3*y3 + a1*a2*b1*b3*x3*y3 + a2*a3*b1*b3*x3*y3 + a1*a3*b2*b3*x3*y3 + a1*a2*b1*c1*x3*y3 + a2*a3*b1*c1*x3*y3 + a1*a2*b2*c1*x3*y3 + a2*a3*b2*c1*x3*y3 + a1*b1*b2*c1*x3*y3 + a1*a2*b3*c1*x3*y3 + a2*a3*b3*c1*x3*y3 + a2*b1*b3*c1*x3*y3 + a1*b1*b2*b3*c1*x3*y3 + a2*b1*b2*b3*c1*x3*y3 + a1*a2*b1*c2*x3*y3 + a2*a3*b1*c2*x3*y3 + a1*a2*b2*c2*x3*y3 + b1*b2*c2*x3*y3 + a1*a2*b3*c2*x3*y3 + b1*b3*c2*x3*y3 + a1*b1*b3*c2*x3*y3 + a3*b1*b3*c2*x3*y3 + a1*b1*b2*b3*c2*x3*y3 + b1*c1*c2*x3*y3 + a1*b1*c1*c2*x3*y3 + a2*b1*c1*c2*x3*y3 + a3*b1*c1*c2*x3*y3 + a1*b2*c1*c2*x3*y3 + a3*b2*c1*c2*x3*y3 + b1*b2*c1*c2*x3*y3 + a2*b1*b2*c1*c2*x3*y3 + b3*c1*c2*x3*y3 + a1*b3*c1*c2*x3*y3 + a2*b3*c1*c2*x3*y3 + a3*b3*c1*c2*x3*y3 + b1*b3*c1*c2*x3*y3 + b2*b3*c1*c2*x3*y3 + a2*b2*b3*c1*c2*x3*y3 + b1*b2*b3*c1*c2*x3*y3 + a1*a2*b1*c3*x3*y3 + a2*a3*b1*c3*x3*y3 + a1*a2*b2*c3*x3*y3 + b1*b2*c3*x3*y3 + a1*a2*b3*c3*x3*y3 + b1*b2*b3*c3*x3*y3 + a2*b2*c1*c3*x3*y3 + a2*b1*b2*c1*c3*x3*y3 + a2*b3*c1*c3*x3*y3 + a2*b1*b3*c1*c3*x3*y3 + b1*c2*c3*x3*y3 + a1*b1*c2*c3*x3*y3 + a2*b1*c2*c3*x3*y3 + a3*b1*c2*c3*x3*y3 + a1*b2*c2*c3*x3*y3 + a1*b3*c2*c3*x3*y3 + b1*b3*c2*c3*x3*y3 + a2*b1*b3*c2*c3*x3*y3 + b2*c1*c2*c3*x3*y3 + b1*b2*c1*c2*c3*x3*y3 + b3*c1*c2*c3*x3*y3 + b1*b3*c1*c2*c3*x3*y3 + a2*y1*y3 + a1*a2*y1*y3 + a1*a2*b1*y1*y3 + b2*y1*y3 + a2*b2*y1*y3 + a1*a2*b2*y1*y3 + a1*a3*b2*y1*y3 + a1*a2*a3*b2*y1*y3 + b1*b2*y1*y3 + a1*b1*b2*y1*y3 + a2*b1*b2*y1*y3 + a1*a2*b1*b2*y1*y3 + a3*b1*b2*y1*y3 + a1*a3*b1*b2*y1*y3 + a2*a3*b1*b2*y1*y3 + a1*a2*a3*b1*b2*y1*y3 + a1*a2*a3*b3*y1*y3 + a2*a3*b1*b3*y1*y3 + a1*a2*a3*b1*b3*y1*y3 + a1*b2*b3*y1*y3 + a1*a2*b2*b3*y1*y3 + a1*a3*b2*b3*y1*y3 + b1*b2*b3*y1*y3 + a1*b1*b2*b3*y1*y3 + a2*b1*b2*b3*y1*y3 + a1*a2*b1*b2*b3*y1*y3 + a3*b1*b2*b3*y1*y3 + a1*a3*b1*b2*b3*y1*y3 + a2*c1*y1*y3 + a2*b1*c1*y1*y3 + a2*b2*c1*y1*y3 + a3*b2*c1*y1*y3 + a2*a3*b2*c1*y1*y3 + a2*b1*b2*c1*y1*y3 + a3*b1*b2*c1*y1*y3 + a2*a3*b1*b2*c1*y1*y3 + a2*a3*b3*c1*y1*y3 + a2*a3*b1*b3*c1*y1*y3 + b2*b3*c1*y1*y3 + a2*b2*b3*c1*y1*y3 + a3*b2*b3*c1*y1*y3 + b1*b2*b3*c1*y1*y3 + a2*b1*b2*b3*c1*y1*y3 + a3*b1*b2*b3*c1*y1*y3 + c2*y1*y3 + a1*a2*c2*y1*y3 + a1*a3*c2*y1*y3 + a2*a3*c2*y1*y3 + b1*c2*y1*y3 + a2*b1*c2*y1*y3 + a1*a2*b1*c2*y1*y3 + a3*b1*c2*y1*y3 + a1*a3*b1*c2*y1*y3 + a2*a3*b1*c2*y1*y3 + b2*c2*y1*y3 + a2*a3*b2*c2*y1*y3 + a2*a3*b1*b2*c2*y1*y3 + b3*c2*y1*y3 + a2*b3*c2*y1*y3 + a3*b3*c2*y1*y3 + a1*a3*b3*c2*y1*y3 + a2*a3*b3*c2*y1*y3 + b1*b3*c2*y1*y3 + a1*b1*b3*c2*y1*y3 + a2*b1*b3*c2*y1*y3 + a1*a2*b1*b3*c2*y1*y3 + a2*a3*b1*b3*c2*y1*y3 + b2*b3*c2*y1*y3 + a3*b2*b3*c2*y1*y3 + a1*a3*b2*b3*c2*y1*y3 + b1*b2*b3*c2*y1*y3 + a1*b1*b2*b3*c2*y1*y3 + a1*a2*b1*b2*b3*c2*y1*y3 + a2*c1*c2*y1*y3 + a3*c1*c2*y1*y3 + a2*b1*c1*c2*y1*y3 + a3*b1*c1*c2*y1*y3 + a3*b3*c1*c2*y1*y3 + a3*b1*b3*c1*c2*y1*y3 + a3*b2*b3*c1*c2*y1*y3 + a3*b1*b2*b3*c1*c2*y1*y3 + a1*a2*c3*y1*y3 + a2*b1*c3*y1*y3 + a1*a2*b1*c3*y1*y3 + b2*c3*y1*y3 + a1*a2*b2*c3*y1*y3 + a3*b2*c3*y1*y3 + a1*b1*b2*c3*y1*y3 + a1*a2*b1*b2*c3*y1*y3 + a1*a3*b1*b2*c3*y1*y3 + a2*a3*b1*b2*c3*y1*y3 + a2*b3*c3*y1*y3 + a2*a3*b3*c3*y1*y3 + a2*b1*b3*c3*y1*y3 + a1*a2*b1*b3*c3*y1*y3 + a1*a2*b2*b3*c3*y1*y3 + a3*b2*b3*c3*y1*y3 + a2*a3*b2*b3*c3*y1*y3 + b1*b2*b3*c3*y1*y3 + a1*b1*b2*b3*c3*y1*y3 + a2*c1*c3*y1*y3 + a2*b1*c1*c3*y1*y3 + a2*b2*c1*c3*y1*y3 + a2*b1*b2*c1*c3*y1*y3 + a2*b2*b3*c1*c3*y1*y3 + a2*b1*b2*b3*c1*c3*y1*y3 + a2*c2*c3*y1*y3 + a2*b1*c2*c3*y1*y3 + a2*b2*c2*c3*y1*y3 + b1*b2*c2*c3*y1*y3 + a2*b1*b2*c2*c3*y1*y3 + a3*b1*b2*c2*c3*y1*y3 + b3*c2*c3*y1*y3 + a1*b3*c2*c3*y1*y3 + a2*b3*c2*c3*y1*y3 + a3*b3*c2*c3*y1*y3 + a2*b1*b3*c2*c3*y1*y3 + a3*b1*b3*c2*c3*y1*y3 + a2*b2*b3*c2*c3*y1*y3 + b1*b2*b3*c2*c3*y1*y3 + a1*b1*b2*b3*c2*c3*y1*y3 + a2*b1*b2*b3*c2*c3*y1*y3 + b3*c1*c2*c3*y1*y3 + b1*b3*c1*c2*c3*y1*y3 + a1*y2*y3 + b1*y2*y3 + a1*b1*y2*y3 + a2*b1*y2*y3 + a1*a2*b1*y2*y3 + a1*b2*y2*y3 + a1*b1*b2*y2*y3 + a1*a2*b1*b2*y2*y3 + a1*a3*b1*b2*y2*y3 + a1*a2*a3*b1*b2*y2*y3 + a1*a2*a3*b1*b3*y2*y3 + a1*b1*b2*b3*y2*y3 + a1*a2*b1*b2*b3*y2*y3 + a1*a3*b1*b2*b3*y2*y3 + c1*y2*y3 + b1*c1*y2*y3 + a1*a2*b1*c1*y2*y3 + a2*a3*b1*c1*y2*y3 + b2*c1*y2*y3 + a3*b2*c1*y2*y3 + a1*a3*b2*c1*y2*y3 + a2*a3*b2*c1*y2*y3 + b1*b2*c1*y2*y3 + a2*b1*b2*c1*y2*y3 + a3*b1*b2*c1*y2*y3 + a2*a3*b1*b2*c1*y2*y3 + a1*b3*c1*y2*y3 + a2*b3*c1*y2*y3 + a1*a3*b3*c1*y2*y3 + a2*a3*b3*c1*y2*y3 + a1*b1*b3*c1*y2*y3 + a1*a2*b1*b3*c1*y2*y3 + a1*a3*b1*b3*c1*y2*y3 + a2*a3*b1*b3*c1*y2*y3 + b2*b3*c1*y2*y3 + a1*b1*b2*b3*c1*y2*y3 + a2*b1*b2*b3*c1*y2*y3 + a1*a2*b1*b2*b3*c1*y2*y3 + a3*b1*b2*b3*c1*y2*y3 + a1*a3*b1*b2*b3*c1*y2*y3 + b1*c2*y2*y3 + a1*a2*b1*c2*y2*y3 + a3*b1*c2*y2*y3 + a2*a3*b1*c2*y2*y3 + a1*a3*b2*c2*y2*y3 + b1*b2*c2*y2*y3 + a1*b1*b2*c2*y2*y3 + a2*b1*b2*c2*y2*y3 + a1*b3*c2*y2*y3 + a1*a3*b3*c2*y2*y3 + a2*b1*b3*c2*y2*y3 + a1*a2*b1*b3*c2*y2*y3 + a3*b1*b3*c2*y2*y3 + b1*b2*b3*c2*y2*y3 + a1*b1*b2*b3*c2*y2*y3 + a1*a2*b1*b2*b3*c2*y2*y3 + b1*c1*c2*y2*y3 + a1*b1*c1*c2*y2*y3 + a2*b1*c1*c2*y2*y3 + a3*b1*c1*c2*y2*y3 + a1*b2*c1*c2*y2*y3 + a2*b2*c1*c2*y2*y3 + a2*b1*b2*c1*c2*y2*y3 + a1*b1*b3*c1*c2*y2*y3 + a2*b1*b3*c1*c2*y2*y3 + b2*b3*c1*c2*y2*y3 + a1*b2*b3*c1*c2*y2*y3 + a2*b2*b3*c1*c2*y2*y3 + b1*b2*b3*c1*c2*y2*y3 + a1*b1*b2*b3*c1*c2*y2*y3 + a2*b1*b2*b3*c1*c2*y2*y3 + a1*c3*y2*y3 + a1*a3*c3*y2*y3 + b1*c3*y2*y3 + a1*b1*c3*y2*y3 + a2*b1*c3*y2*y3 + a1*a2*b1*c3*y2*y3 + a3*b1*c3*y2*y3 + a1*a3*b1*c3*y2*y3 + a2*a3*b1*c3*y2*y3 + a1*b2*c3*y2*y3 + a1*a3*b2*c3*y2*y3 + a2*b1*b2*c3*y2*y3 + a1*a2*b1*b2*c3*y2*y3 + a1*a3*b1*b2*c3*y2*y3 + a1*a2*b1*b3*c3*y2*y3 + a1*b2*b3*c3*y2*y3 + b1*b2*b3*c3*y2*y3 + a1*b1*b2*b3*c3*y2*y3 + c1*c3*y2*y3 + a3*c1*c3*y2*y3 + b1*c1*c3*y2*y3 + a3*b1*c1*c3*y2*y3 + b2*c1*c3*y2*y3 + a3*b2*c1*c3*y2*y3 + a3*b1*b2*c1*c3*y2*y3 + b1*b2*b3*c1*c3*y2*y3 + a1*b1*c2*c3*y2*y3 + a2*b1*c2*c3*y2*y3 + a3*b1*c2*c3*y2*y3 + a1*b2*c2*c3*y2*y3 + b1*b2*c2*c3*y2*y3 + b1*b3*c2*c3*y2*y3 + a1*b1*b3*c2*c3*y2*y3 + a2*b1*b3*c2*c3*y2*y3 + a1*b2*b3*c2*c3*y2*y3 + a1*b1*b2*b3*c2*c3*y2*y3 + b2*c1*c2*c3*y2*y3 + b1*b2*c1*c2*c3*y2*y3 + b2*b3*c1*c2*c3*y2*y3 + b1*b2*b3*c1*c2*c3*y2*y3 + a2*a3*b1*z1 + a1*a3*b2*z1 + a2*a3*b2*z1 + a1*a2*a3*b2*z1 + a2*a3*b1*b2*z1 + a1*a2*b1*b3*z1 + a1*a2*a3*b1*b3*z1 + a1*a2*b2*b3*z1 + a1*b1*b2*b3*z1 + a1*a2*a3*b1*b2*b3*z1 + a1*a3*b2*c1*z1 + a2*a3*b1*b2*c1*z1 + a2*b1*b3*c1*z1 + a2*a3*b1*b3*c1*z1 + a2*b1*b2*b3*c1*z1 + a2*a3*b1*b2*b3*c1*z1 + a1*a3*c2*z1 + a2*a3*c2*z1 + a1*a3*b2*c2*z1 + a2*a3*b2*c2*z1 + a2*a3*b1*b2*c2*z1 + a1*b3*c2*z1 + a1*a2*b3*c2*z1 + a1*a3*b3*c2*z1 + a1*a2*a3*b3*c2*z1 + b1*b3*c2*z1 + a2*b1*b3*c2*z1 + a1*a3*b1*b3*c2*z1 + a1*a2*a3*b1*b3*c2*z1 + b2*b3*c2*z1 + a1*b2*b3*c2*z1 + a1*a2*b2*b3*c2*z1 + a1*a3*b2*b3*c2*z1 + a1*a2*a3*b2*b3*c2*z1 + a1*b1*b2*b3*c2*z1 + a1*a3*b1*b2*b3*c2*z1 + a2*a3*b1*b2*b3*c2*z1 + a1*a2*a3*b1*b2*b3*c2*z1 + a1*a3*c1*c2*z1 + a3*b1*c1*c2*z1 + a1*a3*b2*c1*c2*z1 + a1*a3*b1*b2*c1*c2*z1 + b3*c1*c2*z1 + a2*b3*c1*c2*z1 + a3*b3*c1*c2*z1 + a1*a2*b1*b3*c1*c2*z1 + a3*b1*b3*c1*c2*z1 + a1*a3*b1*b3*c1*c2*z1 + a1*b2*b3*c1*c2*z1 + b1*b2*b3*c1*c2*z1 + a1*b1*b2*b3*c1*c2*z1 + a2*b1*b2*b3*c1*c2*z1 + a2*b1*c3*z1 + a1*a2*b1*c3*z1 + a1*b2*c3*z1 + a2*b2*c3*z1 + a2*a3*b2*c3*z1 + a1*a2*a3*b2*c3*z1 + a1*b1*b2*c3*z1 + a2*b1*b2*c3*z1 + a1*a3*b1*b2*c3*z1 + a1*a2*b3*c3*z1 + a1*a2*a3*b3*c3*z1 + a2*b1*b3*c3*z1 + a1*a2*b1*b3*c3*z1 + a1*a2*a3*b1*b3*c3*z1 + a1*b2*b3*c3*z1 + a2*b2*b3*c3*z1 + a2*a3*b2*b3*c3*z1 + a1*b1*b2*b3*c3*z1 + a2*b1*b2*b3*c3*z1 + a2*a3*b1*b2*b3*c3*z1 + a2*b1*c1*c3*z1 + a1*a2*b2*c1*c3*z1 + a1*a3*b2*c1*c3*z1 + a1*b1*b2*c1*c3*z1 + a2*b1*b2*c1*c3*z1 + a1*a2*b1*b2*c1*c3*z1 + a1*a3*b1*b2*c1*c3*z1 + a2*a3*b1*b2*c1*c3*z1 + a1*a2*b1*b3*c1*c3*z1 + a2*a3*b1*b3*c1*c3*z1 + a1*b2*b3*c1*c3*z1 + a3*b1*b2*b3*c1*c3*z1 + a1*c2*c3*z1 + a2*c2*c3*z1 + a1*a3*c2*c3*z1 + a2*a3*c2*c3*z1 + a1*b1*c2*c3*z1 + a1*a2*b1*c2*c3*z1 + a1*a3*b1*c2*c3*z1 + a2*a3*b2*c2*c3*z1 + a1*a2*a3*b2*c2*c3*z1 + a1*a3*b1*b2*c2*c3*z1 + a2*a3*b1*b2*c2*c3*z1 + a1*b3*c2*c3*z1 + a1*a2*b3*c2*c3*z1 + a3*b3*c2*c3*z1 + a1*a3*b3*c2*c3*z1 + a1*a2*a3*b3*c2*c3*z1 + a1*b1*b3*c2*c3*z1 + a2*b1*b3*c2*c3*z1 + a1*b2*b3*c2*c3*z1 + a1*a3*b2*b3*c2*c3*z1 + a2*a3*b2*b3*c2*c3*z1 + a1*a2*a3*b2*b3*c2*c3*z1 + b1*b2*b3*c2*c3*z1 + a1*b1*b2*b3*c2*c3*z1 + a2*b1*b2*b3*c2*c3*z1 + a1*a2*b1*b2*b3*c2*c3*z1 + a3*b1*b2*b3*c2*c3*z1 + a1*a3*b1*b2*b3*c2*c3*z1 + a2*a3*b1*b2*b3*c2*c3*z1 + b1*c1*c2*c3*z1 + a2*b1*c1*c2*c3*z1 + b2*c1*c2*c3*z1 + a3*b1*b2*c1*c2*c3*z1 + a2*a3*b1*b2*c1*c2*c3*z1 + a2*b3*c1*c2*c3*z1 + a1*a2*b3*c1*c2*c3*z1 + a3*b3*c1*c2*c3*z1 + a1*a3*b3*c1*c2*c3*z1 + a2*a3*b3*c1*c2*c3*z1 + a1*a2*a3*b3*c1*c2*c3*z1 + a2*b1*b3*c1*c2*c3*z1 + a3*b1*b3*c1*c2*c3*z1 + a1*a3*b1*b3*c1*c2*c3*z1 + a2*a3*b1*b3*c1*c2*c3*z1 + b2*b3*c1*c2*c3*z1 + a1*b2*b3*c1*c2*c3*z1 + a1*b1*b2*b3*c1*c2*c3*z1 + a2*b1*b2*b3*c1*c2*c3*z1 + a3*b1*b2*b3*c1*c2*c3*z1 + a2*a3*b1*b2*b3*c1*c2*c3*z1 + a3*b2*x1*z1 + a3*b2*c1*x1*z1 + b2*b3*c1*x1*z1 + a3*c2*x1*z1 + a3*b2*c2*x1*z1 + b3*c2*x1*z1 + b2*b3*c2*x1*z1 + a3*b2*c1*c2*x1*z1 + a1*a3*b2*c1*c2*x1*z1 + a2*b3*c1*c2*x1*z1 + a1*a2*b3*c1*c2*x1*z1 + a3*b3*c1*c2*x1*z1 + a1*a3*b3*c1*c2*x1*z1 + b2*b3*c1*c2*x1*z1 + a1*b2*b3*c1*c2*x1*z1 + b2*c3*x1*z1 + a1*b2*c3*x1*z1 + a2*b2*c3*x1*z1 + a3*b2*c3*x1*z1 + b1*b2*c3*x1*z1 + b2*b3*c3*x1*z1 + b2*c1*c3*x1*z1 + a1*b2*c1*c3*x1*z1 + a2*b2*c1*c3*x1*z1 + a1*a2*b2*c1*c3*x1*z1 + a3*b2*c1*c3*x1*z1 + a1*a3*b2*c1*c3*x1*z1 + a1*a2*b3*c1*c3*x1*z1 + a2*a3*b3*c1*c3*x1*z1 + a3*b2*b3*c1*c3*x1*z1 + a1*b3*c2*c3*x1*z1 + a2*b3*c2*c3*x1*z1 + a3*b3*c2*c3*x1*z1 + a1*a3*b3*c2*c3*x1*z1 + a2*a3*b3*c2*c3*x1*z1 + b2*b3*c2*c3*x1*z1 + b3*c1*c2*c3*x1*z1 + a1*b3*c1*c2*c3*x1*z1 + a1*b2*b3*c1*c2*c3*x1*z1 + a3*b2*b3*c1*c2*c3*x1*z1 + a3*x2*z1 + a3*b1*x2*z1 + a1*a3*b1*x2*z1 + a3*b2*x2*z1 + a1*a3*b2*x2*z1 + a3*b1*b2*x2*z1 + a1*a3*b1*b2*x2*z1 + a1*a2*b1*b3*x2*z1 + a1*a3*b1*b3*x2*z1 + a1*b2*b3*x2*z1 + a3*b1*c1*x2*z1 + a2*b1*b3*c1*x2*z1 + a3*b1*b3*c1*x2*z1 + b1*b2*b3*c1*x2*z1 + a1*a3*b1*c2*x2*z1 + a3*b2*c2*x2*z1 + a1*a3*b2*c2*x2*z1 + a3*b1*b2*c2*x2*z1 + a1*a3*b1*b2*c2*x2*z1 + a1*b3*c2*x2*z1 + a1*a2*b3*c2*x2*z1 + a1*a3*b3*c2*x2*z1 + a1*a2*b1*b3*c2*x2*z1 + a1*a3*b1*b3*c2*x2*z1 + b2*b3*c2*x2*z1 + a1*b2*b3*c2*x2*z1 + b1*b2*b3*c2*x2*z1 + a3*b1*c1*c2*x2*z1 + b1*b3*c1*c2*x2*z1 + b1*b2*b3*c1*c2*x2*z1 + a1*c3*x2*z1 + a2*c3*x2*z1 + a3*c3*x2*z1 + a2*b1*c3*x2*z1 + a1*a2*b1*c3*x2*z1 + a3*b1*c3*x2*z1 + a1*a3*b1*c3*x2*z1 + a1*b2*c3*x2*z1 + a2*b2*c3*x2*z1 + a1*a2*b2*c3*x2*z1 + a3*b2*c3*x2*z1 + a1*a3*b2*c3*x2*z1 + a2*b1*b2*c3*x2*z1 + a1*a2*b1*b2*c3*x2*z1 + a3*b1*b2*c3*x2*z1 + a1*a3*b1*b2*c3*x2*z1 + b3*c3*x2*z1 + a1*a3*b3*c3*x2*z1 + a1*a2*a3*b3*c3*x2*z1 + b1*b3*c3*x2*z1 + a1*b1*b3*c3*x2*z1 + a1*a2*b1*b3*c3*x2*z1 + b2*b3*c3*x2*z1 + a1*a3*b2*b3*c3*x2*z1 + b1*b2*b3*c3*x2*z1 + b1*c1*c3*x2*z1 + a2*b1*c1*c3*x2*z1 + a3*b1*c1*c3*x2*z1 + b1*b2*c1*c3*x2*z1 + b1*b3*c1*c3*x2*z1 + a2*b1*b3*c1*c3*x2*z1 + a3*b1*b3*c1*c3*x2*z1 + a2*a3*b1*b3*c1*c3*x2*z1 + a3*b1*b2*b3*c1*c3*x2*z1 + b3*c2*c3*x2*z1 + a2*b3*c2*c3*x2*z1 + a3*b3*c2*c3*x2*z1 + a1*a3*b3*c2*c3*x2*z1 + a2*a3*b3*c2*c3*x2*z1 + b1*b3*c2*c3*x2*z1 + a2*b1*b3*c2*c3*x2*z1 + a3*b1*b3*c2*c3*x2*z1 + a2*a3*b1*b3*c2*c3*x2*z1 + b2*b3*c2*c3*x2*z1 + a1*a3*b2*b3*c2*c3*x2*z1 + b1*b2*b3*c2*c3*x2*z1 + a1*b1*b2*b3*c2*c3*x2*z1 + a3*b1*b3*c1*c2*c3*x2*z1 + b1*b2*b3*c1*c2*c3*x2*z1 + a3*b1*b2*b3*c1*c2*c3*x2*z1 + a1*a2*b1*x3*z1 + a1*a2*a3*b1*b2*x3*z1 + a2*b1*b3*x3*z1 + a1*a2*b1*b3*x3*z1 + a2*a3*b1*b3*x3*z1 + a1*a2*a3*b1*b3*x3*z1 + a1*b2*b3*x3*z1 + a2*b2*b3*x3*z1 + a1*a3*b2*b3*x3*z1 + a2*a3*b2*b3*x3*z1 + a1*b1*b2*b3*x3*z1 + a1*a2*b1*b2*b3*x3*z1 + a1*a3*b1*b2*b3*x3*z1 + a2*b1*c1*x3*z1 + a2*a3*b1*b2*c1*x3*z1 + a2*b1*b3*c1*x3*z1 + a2*a3*b1*b3*c1*x3*z1 + a2*b1*b2*b3*c1*x3*z1 + b1*c2*x3*z1 + a2*b1*c2*x3*z1 + a1*a2*b1*c2*x3*z1 + a3*b1*c2*x3*z1 + a1*a3*b1*c2*x3*z1 + a2*a3*b1*c2*x3*z1 + b1*b2*c2*x3*z1 + a2*b1*b2*c2*x3*z1 + a3*b1*b2*c2*x3*z1 + a2*a3*b1*b2*c2*x3*z1 + a1*b3*c2*x3*z1 + a1*a2*b3*c2*x3*z1 + a1*a3*b3*c2*x3*z1 + a2*b1*b3*c2*x3*z1 + a1*a2*b1*b3*c2*x3*z1 + a2*a3*b1*b3*c2*x3*z1 + b2*b3*c2*x3*z1 + a1*b2*b3*c2*x3*z1 + a1*a2*b2*b3*c2*x3*z1 + a3*b2*b3*c2*x3*z1 + a1*a3*b2*b3*c2*x3*z1 + b1*b2*b3*c2*x3*z1 + a2*b1*b2*b3*c2*x3*z1 + a1*a2*b1*b2*b3*c2*x3*z1 + a2*b1*c1*c2*x3*z1 + a3*b1*c1*c2*x3*z1 + b1*b3*c1*c2*x3*z1 + a3*b1*b3*c1*c2*x3*z1 + b1*b2*b3*c1*c2*x3*z1 + a3*b1*b2*b3*c1*c2*x3*z1 + a2*b1*c3*x3*z1 + a1*a2*b1*c3*x3*z1 + a1*b2*c3*x3*z1 + a2*b2*c3*x3*z1 + a1*a3*b2*c3*x3*z1 + a2*a3*b2*c3*x3*z1 + a1*b1*b2*c3*x3*z1 + a1*a2*b1*b2*c3*x3*z1 + a1*a3*b1*b2*c3*x3*z1 + a2*a3*b1*b2*c3*x3*z1 + a1*a2*b3*c3*x3*z1 + a2*a3*b3*c3*x3*z1 + a2*b1*b3*c3*x3*z1 + a1*a2*b1*b3*c3*x3*z1 + a1*b2*b3*c3*x3*z1 + a2*b2*b3*c3*x3*z1 + a1*a2*b2*b3*c3*x3*z1 + a2*a3*b2*b3*c3*x3*z1 + a1*b1*b2*b3*c3*x3*z1 + a2*b1*c1*c3*x3*z1 + a2*b1*b2*c1*c3*x3*z1 + a2*b1*b2*b3*c1*c3*x3*z1 + a2*b1*c2*c3*x3*z1 + b2*c2*c3*x3*z1 + a3*b2*c2*c3*x3*z1 + b1*b2*c2*c3*x3*z1 + a2*b1*b2*c2*c3*x3*z1 + a3*b1*b2*c2*c3*x3*z1 + a1*b3*c2*c3*x3*z1 + a2*b1*b3*c2*c3*x3*z1 + a3*b1*b3*c2*c3*x3*z1 + b2*b3*c2*c3*x3*z1 + a1*b2*b3*c2*c3*x3*z1 + b1*b2*b3*c2*c3*x3*z1 + a1*b1*b2*b3*c2*c3*x3*z1 + a2*b1*b2*b3*c2*c3*x3*z1 + b1*b3*c1*c2*c3*x3*z1 + b2*b3*y1*z1 + a3*b2*c1*y1*z1 + b2*b3*c1*y1*z1 + a3*c2*y1*z1 + a1*a3*b2*c2*y1*z1 + a3*b1*b2*c2*y1*z1 + b3*c2*y1*z1 + a2*b3*c2*y1*z1 + a1*a2*b3*c2*y1*z1 + a3*b3*c2*y1*z1 + a1*a3*b3*c2*y1*z1 + a2*b1*b3*c2*y1*z1 + a3*b1*b3*c2*y1*z1 + a1*b2*b3*c2*y1*z1 + b1*b2*b3*c2*y1*z1 + a3*b2*c1*c2*y1*z1 + a1*a3*b2*c1*c2*y1*z1 + a3*b1*b2*c1*c2*y1*z1 + a2*b3*c1*c2*y1*z1 + a1*a2*b3*c1*c2*y1*z1 + a3*b3*c1*c2*y1*z1 + a1*a3*b3*c1*c2*y1*z1 + a2*b1*b3*c1*c2*y1*z1 + a3*b1*b3*c1*c2*y1*z1 + b2*b3*c1*c2*y1*z1 + a1*b2*b3*c1*c2*y1*z1 + b1*b2*b3*c1*c2*y1*z1 + a1*a2*b2*c3*y1*z1 + a1*a3*b2*c3*y1*z1 + b1*b2*c3*y1*z1 + a2*b1*b2*c3*y1*z1 + a3*b1*b2*c3*y1*z1 + a1*a2*b3*c3*y1*z1 + a2*a3*b3*c3*y1*z1 + a2*b1*b3*c3*y1*z1 + b2*b3*c3*y1*z1 + a3*b2*b3*c3*y1*z1 + b2*c1*c3*y1*z1 + a1*b2*c1*c3*y1*z1 + a2*b2*c1*c3*y1*z1 + a1*a2*b2*c1*c3*y1*z1 + a3*b2*c1*c3*y1*z1 + a1*a3*b2*c1*c3*y1*z1 + b1*b2*c1*c3*y1*z1 + a2*b1*b2*c1*c3*y1*z1 + a3*b1*b2*c1*c3*y1*z1 + a1*a2*b3*c1*c3*y1*z1 + a2*a3*b3*c1*c3*y1*z1 + a2*b1*b3*c1*c3*y1*z1 + a3*b2*b3*c1*c3*y1*z1 + b3*c2*c3*y1*z1 + a2*b3*c2*c3*y1*z1 + a3*b3*c2*c3*y1*z1 + a1*a3*b3*c2*c3*y1*z1 + a2*a3*b3*c2*c3*y1*z1 + a3*b1*b3*c2*c3*y1*z1 + b2*b3*c2*c3*y1*z1 + a1*b2*b3*c2*c3*y1*z1 + a3*b2*b3*c2*c3*y1*z1 + b1*b2*b3*c2*c3*y1*z1 + b3*c1*c2*c3*y1*z1 + a1*b3*c1*c2*c3*y1*z1 + b1*b3*c1*c2*c3*y1*z1 + a1*b2*b3*c1*c2*c3*y1*z1 + a3*b2*b3*c1*c2*c3*y1*z1 + b1*b2*b3*c1*c2*c3*y1*z1 + a3*y2*z1 + a1*a3*b1*y2*z1 + a1*a3*b2*y2*z1 + a3*b1*b2*y2*z1 + b1*b3*y2*z1 + a1*b1*b3*y2*z1 + b2*b3*y2*z1 + a1*b2*b3*y2*z1 + a3*b1*c1*y2*z1 + a3*b1*b2*c1*y2*z1 + b1*b3*c1*y2*z1 + b1*b2*b3*c1*y2*z1 + a3*b1*c2*y2*z1 + a1*a3*b1*c2*y2*z1 + a3*b2*c2*y2*z1 + a1*a3*b2*c2*y2*z1 + a1*a3*b1*b2*c2*y2*z1 + a1*b3*c2*y2*z1 + a1*a2*b3*c2*y2*z1 + a1*a3*b3*c2*y2*z1 + b1*b3*c2*y2*z1 + a1*b1*b3*c2*y2*z1 + a2*b1*b3*c2*y2*z1 + a1*a2*b1*b3*c2*y2*z1 + a3*b1*b3*c2*y2*z1 + a1*a3*b1*b3*c2*y2*z1 + b2*b3*c2*y2*z1 + a1*b2*b3*c2*y2*z1 + a1*b1*b2*b3*c2*y2*z1 + a3*b1*c1*c2*y2*z1 + a1*c3*y2*z1 + a2*c3*y2*z1 + a3*c3*y2*z1 + b1*c3*y2*z1 + a1*a2*b1*c3*y2*z1 + a1*a3*b1*c3*y2*z1 + a1*b2*c3*y2*z1 + a2*b2*c3*y2*z1 + a1*a2*b2*c3*y2*z1 + a3*b2*c3*y2*z1 + a1*a3*b2*c3*y2*z1 + b1*b2*c3*y2*z1 + a1*a2*b1*b2*c3*y2*z1 + a1*a3*b1*b2*c3*y2*z1 + a1*b3*c3*y2*z1 + a2*b3*c3*y2*z1 + a3*b3*c3*y2*z1 + a2*a3*b3*c3*y2*z1 + a1*a2*a3*b3*c3*y2*z1 + a1*b1*b3*c3*y2*z1 + a2*b1*b3*c3*y2*z1 + a1*a2*b1*b3*c3*y2*z1 + b2*b3*c3*y2*z1 + a3*b2*b3*c3*y2*z1 + a1*a3*b2*b3*c3*y2*z1 + b1*b2*b3*c3*y2*z1 + b1*c1*c3*y2*z1 + a2*b1*c1*c3*y2*z1 + a3*b1*c1*c3*y2*z1 + b1*b2*c1*c3*y2*z1 + a2*b1*b3*c1*c3*y2*z1 + a2*a3*b1*b3*c1*c3*y2*z1 + a3*b1*b2*b3*c1*c3*y2*z1 + b3*c2*c3*y2*z1 + a2*b3*c2*c3*y2*z1 + a3*b3*c2*c3*y2*z1 + a1*a3*b3*c2*c3*y2*z1 + a2*a3*b3*c2*c3*y2*z1 + a2*b1*b3*c2*c3*y2*z1 + a2*a3*b1*b3*c2*c3*y2*z1 + a3*b2*b3*c2*c3*y2*z1 + a1*a3*b2*b3*c2*c3*y2*z1 + a1*b1*b2*b3*c2*c3*y2*z1 + a3*b1*b3*c1*c2*c3*y2*z1 + b1*b2*b3*c1*c2*c3*y2*z1 + a3*b1*b2*b3*c1*c2*c3*y2*z1 + a2*b1*y3*z1 + a1*a2*b1*y3*z1 + a1*b2*y3*z1 + a2*b2*y3*z1 + a1*b1*b2*y3*z1 + a1*a2*b1*b2*y3*z1 + a1*a3*b1*b2*y3*z1 + a1*a2*a3*b1*b2*y3*z1 + a1*a2*a3*b1*b3*y3*z1 + a1*b1*b2*b3*y3*z1 + a1*a2*b1*b2*b3*y3*z1 + a1*a3*b1*b2*b3*y3*z1 + a2*b1*c1*y3*z1 + a2*b1*b2*c1*y3*z1 + a3*b1*b2*c1*y3*z1 + a2*a3*b1*b2*c1*y3*z1 + a2*a3*b1*b3*c1*y3*z1 + b1*b2*b3*c1*y3*z1 + a2*b1*b2*b3*c1*y3*z1 + a3*b1*b2*b3*c1*y3*z1 + b1*c2*y3*z1 + a1*a2*b1*c2*y3*z1 + a1*a3*b1*c2*y3*z1 + a2*a3*b1*c2*y3*z1 + b2*c2*y3*z1 + a2*a3*b1*b2*c2*y3*z1 + a1*b3*c2*y3*z1 + a1*a2*b3*c2*y3*z1 + a1*a3*b3*c2*y3*z1 + a1*b1*b3*c2*y3*z1 + a1*a2*b1*b3*c2*y3*z1 + a2*a3*b1*b3*c2*y3*z1 + a1*b2*b3*c2*y3*z1 + a1*a2*b2*b3*c2*y3*z1 + a1*a3*b2*b3*c2*y3*z1 + a1*b1*b2*b3*c2*y3*z1 + a2*b1*b2*b3*c2*y3*z1 + a1*a2*b1*b2*b3*c2*y3*z1 + a2*b1*c1*c2*y3*z1 + a3*b1*c1*c2*y3*z1 + a3*b1*b3*c1*c2*y3*z1 + a3*b1*b2*b3*c1*c2*y3*z1 + a1*a2*b1*c3*y3*z1 + b2*c3*y3*z1 + a1*b2*c3*y3*z1 + a2*b2*c3*y3*z1 + a3*b2*c3*y3*z1 + a1*a3*b2*c3*y3*z1 + a2*a3*b2*c3*y3*z1 + b1*b2*c3*y3*z1 + a1*b1*b2*c3*y3*z1 + a2*b1*b2*c3*y3*z1 + a1*a2*b1*b2*c3*y3*z1 + a3*b1*b2*c3*y3*z1 + a1*a3*b1*b2*c3*y3*z1 + a2*a3*b1*b2*c3*y3*z1 + a1*a2*b3*c3*y3*z1 + a2*a3*b3*c3*y3*z1 + a1*a2*b1*b3*c3*y3*z1 + b2*b3*c3*y3*z1 + a1*b2*b3*c3*y3*z1 + a2*b2*b3*c3*y3*z1 + a1*a2*b2*b3*c3*y3*z1 + a3*b2*b3*c3*y3*z1 + a2*a3*b2*b3*c3*y3*z1 + a1*b1*b2*b3*c3*y3*z1 + a2*b1*c1*c3*y3*z1 + a2*b1*b2*c1*c3*y3*z1 + a2*b1*b2*b3*c1*c3*y3*z1 + a2*b1*c2*c3*y3*z1 + b2*c2*c3*y3*z1 + a3*b2*c2*c3*y3*z1 + b1*b2*c2*c3*y3*z1 + a2*b1*b2*c2*c3*y3*z1 + a3*b1*b2*c2*c3*y3*z1 + a1*b3*c2*c3*y3*z1 + a2*b1*b3*c2*c3*y3*z1 + a3*b1*b3*c2*c3*y3*z1 + b2*b3*c2*c3*y3*z1 + a1*b2*b3*c2*c3*y3*z1 + a1*b1*b2*b3*c2*c3*y3*z1 + a2*b1*b2*b3*c2*c3*y3*z1 + b1*b3*c1*c2*c3*y3*z1 + a1*a2*a3*b1*z2 + a1*a3*b1*b2*z2 + a1*a2*a3*b1*b3*z2 + a1*b1*b2*b3*z2 + a1*a2*b1*b2*b3*z2 + a1*a3*b1*b2*b3*z2 + a1*a2*a3*b1*b2*b3*z2 + a1*a2*a3*b1*c1*z2 + a3*b1*b2*c1*z2 + a1*a2*a3*b1*b2*c1*z2 + a1*b1*b3*c1*z2 + a1*a2*b1*b3*c1*z2 + a2*b1*b2*b3*c1*z2 + a1*a2*b1*b2*b3*c1*z2 + a3*b1*b2*b3*c1*z2 + a1*a2*a3*b1*b2*b3*c1*z2 + a1*a3*b1*c2*z2 + a1*a2*a3*b1*c2*z2 + a1*a2*a3*b1*b2*c2*z2 + a1*b1*b3*c2*z2 + a1*b1*b2*b3*c2*z2 + a1*a2*a3*b1*b2*b3*c2*z2 + a3*b1*c1*c2*z2 + a1*a2*a3*b1*c1*c2*z2 + a1*a3*b2*c1*c2*z2 + a1*a2*a3*b2*c1*c2*z2 + a3*b1*b2*c1*c2*z2 + a1*a3*b1*b2*c1*c2*z2 + a2*a3*b1*b2*c1*c2*z2 + a1*a2*a3*b1*b2*c1*c2*z2 + b3*c1*c2*z2 + a1*b3*c1*c2*z2 + a2*b3*c1*c2*z2 + a1*a2*b3*c1*c2*z2 + a3*b3*c1*c2*z2 + a1*a2*a3*b3*c1*c2*z2 + a1*b1*b3*c1*c2*z2 + a3*b1*b3*c1*c2*z2 + a2*a3*b1*b3*c1*c2*z2 + a1*a2*a3*b1*b3*c1*c2*z2 + a1*b2*b3*c1*c2*z2 + a1*a3*b2*b3*c1*c2*z2 + a1*b1*b2*b3*c1*c2*z2 + a2*b1*b2*b3*c1*c2*z2 + a1*a2*b1*b2*b3*c1*c2*z2 + a1*a3*b1*b2*b3*c1*c2*z2 + a1*a2*a3*b1*c3*z2 + a1*a3*b1*b2*c3*z2 + a1*a2*a3*b1*b2*c3*z2 + a1*a2*b1*b3*c3*z2 + a1*a2*a3*b1*b3*c3*z2 + a1*b1*b2*b3*c3*z2 + a1*a2*b1*b2*b3*c3*z2 + a1*b1*c1*c3*z2 + a2*b1*c1*c3*z2 + a3*b1*c1*c3*z2 + a1*b2*c1*c3*z2 + b1*b2*c1*c3*z2 + a1*b1*b2*c1*c3*z2 + a2*b1*b2*c1*c3*z2 + a1*a2*b1*b2*c1*c3*z2 + a1*a3*b1*b2*c1*c3*z2 + a1*a2*b3*c1*c3*z2 + a1*a3*b3*c1*c3*z2 + b1*b3*c1*c3*z2 + a1*a2*b1*b3*c1*c3*z2 + a1*a2*a3*b1*b3*c1*c3*z2 + a1*a2*b2*b3*c1*c3*z2 + b1*b2*b3*c1*c3*z2 + a1*b1*b2*b3*c1*c3*z2 + a1*a3*b1*b2*b3*c1*c3*z2 + a1*b1*c2*c3*z2 + a1*a2*b1*c2*c3*z2 + a1*a3*b1*c2*c3*z2 + a1*a3*b1*b2*c2*c3*z2 + a1*a2*b1*b3*c2*c3*z2 + a1*a3*b1*b3*c2*c3*z2 + a1*a2*a3*b1*b3*c2*c3*z2 + a1*a3*b1*b2*b3*c2*c3*z2 + a1*a3*b1*c1*c2*c3*z2 + a1*a2*a3*b1*c1*c2*c3*z2 + b2*c1*c2*c3*z2 + a1*b2*c1*c2*c3*z2 + a1*a2*b2*c1*c2*c3*z2 + a1*a3*b2*c1*c2*c3*z2 + a1*a2*a3*b2*c1*c2*c3*z2 + a1*b1*b2*c1*c2*c3*z2 + a2*b1*b2*c1*c2*c3*z2 + a1*a2*b1*b2*c1*c2*c3*z2 + a2*b3*c1*c2*c3*z2 + a1*a2*b3*c1*c2*c3*z2 + a3*b3*c1*c2*c3*z2 + a2*a3*b3*c1*c2*c3*z2 + a2*b1*b3*c1*c2*c3*z2 + b2*b3*c1*c2*c3*z2 + a1*a2*b2*b3*c1*c2*c3*z2 + a1*a3*b1*b2*b3*c1*c2*c3*z2 + a3*x1*z2 + a3*b1*x1*z2 + a1*b3*x1*z2 + a2*b3*x1*z2 + a1*a2*b3*x1*z2 + a3*b3*x1*z2 + a1*a3*b3*x1*z2 + a2*b1*b3*x1*z2 + a3*b1*b3*x1*z2 + a1*b2*b3*x1*z2 + a3*c1*x1*z2 + a3*b1*c1*x1*z2 + a3*b2*c1*x1*z2 + a3*b1*b2*c1*x1*z2 + a1*b3*c1*x1*z2 + a1*b1*b3*c1*x1*z2 + b2*b3*c1*x1*z2 + b1*b2*b3*c1*x1*z2 + a3*c2*x1*z2 + a1*a3*c2*x1*z2 + a3*b1*c2*x1*z2 + a1*a3*b1*c2*x1*z2 + a3*b2*c2*x1*z2 + a1*a3*b2*c2*x1*z2 + a3*b1*b2*c2*x1*z2 + a1*a3*b1*b2*c2*x1*z2 + a1*b3*c2*x1*z2 + a1*a2*b3*c2*x1*z2 + a1*a3*b3*c2*x1*z2 + a1*b1*b3*c2*x1*z2 + a1*a2*b1*b3*c2*x1*z2 + a1*a3*b1*b3*c2*x1*z2 + a1*b1*b2*b3*c2*x1*z2 + a3*c1*c2*x1*z2 + a3*b1*c1*c2*x1*z2 + a3*b2*c1*c2*x1*z2 + a3*b1*b2*c1*c2*x1*z2 + a2*b3*c1*c2*x1*z2 + a3*b3*c1*c2*x1*z2 + a2*b1*b3*c1*c2*x1*z2 + a3*b1*b3*c1*c2*x1*z2 + b2*b3*c1*c2*x1*z2 + b1*b2*b3*c1*c2*x1*z2 + a1*c3*x1*z2 + a1*a2*c3*x1*z2 + a1*a3*c3*x1*z2 + a1*b1*c3*x1*z2 + a1*a2*b1*c3*x1*z2 + a1*a3*b1*c3*x1*z2 + a2*b2*c3*x1*z2 + a1*a2*b2*c3*x1*z2 + a3*b2*c3*x1*z2 + a1*a3*b2*c3*x1*z2 + a1*b1*b2*c3*x1*z2 + a2*b1*b2*c3*x1*z2 + a1*a2*b1*b2*c3*x1*z2 + a3*b1*b2*c3*x1*z2 + a1*a3*b1*b2*c3*x1*z2 + b3*c3*x1*z2 + a1*b3*c3*x1*z2 + a1*a2*a3*b3*c3*x1*z2 + b1*b3*c3*x1*z2 + a1*a2*b1*b3*c3*x1*z2 + b2*b3*c3*x1*z2 + a1*a3*b2*b3*c3*x1*z2 + b1*b2*b3*c3*x1*z2 + a2*c1*c3*x1*z2 + a3*c1*c3*x1*z2 + a2*b1*c1*c3*x1*z2 + a3*b1*c1*c3*x1*z2 + b2*c1*c3*x1*z2 + a2*b2*c1*c3*x1*z2 + a3*b2*c1*c3*x1*z2 + b1*b2*c1*c3*x1*z2 + a2*b1*b2*c1*c3*x1*z2 + a3*b1*b2*c1*c3*x1*z2 + a2*a3*b3*c1*c3*x1*z2 + a2*a3*b1*b3*c1*c3*x1*z2 + a3*b2*b3*c1*c3*x1*z2 + a3*b1*b2*b3*c1*c3*x1*z2 + a2*b3*c2*c3*x1*z2 + a3*b3*c2*c3*x1*z2 + a2*a3*b3*c2*c3*x1*z2 + a2*b1*b3*c2*c3*x1*z2 + a3*b1*b3*c2*c3*x1*z2 + a2*a3*b1*b3*c2*c3*x1*z2 + b2*b3*c2*c3*x1*z2 + a1*a3*b2*b3*c2*c3*x1*z2 + b1*b2*b3*c2*c3*x1*z2 + a1*b1*b2*b3*c2*c3*x1*z2 + a3*b2*b3*c1*c2*c3*x1*z2 + a3*b1*b2*b3*c1*c2*c3*x1*z2 + a1*a3*b1*x2*z2 + a1*a3*b2*x2*z2 + a3*b1*b2*x2*z2 + a1*a3*b1*b2*x2*z2 + a1*a2*b3*x2*z2 + a1*a3*b3*x2*z2 + a2*b1*b3*x2*z2 + a1*a2*b1*b3*x2*z2 + a3*b1*b3*x2*z2 + a1*a3*b1*b3*x2*z2 + a1*a3*b1*c1*x2*z2 + a1*a3*b2*c1*x2*z2 + a3*b1*b2*c1*x2*z2 + a1*a3*b1*b2*c1*x2*z2 + a1*a2*b3*c1*x2*z2 + a1*a3*b3*c1*x2*z2 + a1*b1*b3*c1*x2*z2 + a2*b1*b3*c1*x2*z2 + a1*a2*b1*b3*c1*x2*z2 + a3*b1*b3*c1*x2*z2 + a1*a3*b1*b3*c1*x2*z2 + a1*a3*b1*c2*x2*z2 + a1*a3*b2*c2*x2*z2 + a1*a2*b3*c2*x2*z2 + a1*a3*b3*c2*x2*z2 + b1*b2*b3*c2*x2*z2 + a1*b1*b2*b3*c2*x2*z2 + a1*a3*b1*c1*c2*x2*z2 + a1*a3*b2*c1*c2*x2*z2 + a1*a2*b3*c1*c2*x2*z2 + a1*a3*b3*c1*c2*x2*z2 + a1*b1*b3*c1*c2*x2*z2 + b1*b2*b3*c1*c2*x2*z2 + a1*b1*b2*b3*c1*c2*x2*z2 + a1*a2*b1*c3*x2*z2 + a1*a3*b1*c3*x2*z2 + a1*a2*b2*c3*x2*z2 + a1*a3*b2*c3*x2*z2 + a1*b1*b2*c3*x2*z2 + a1*b3*c3*x2*z2 + a1*a2*b3*c3*x2*z2 + b1*b3*c3*x2*z2 + a1*b1*b3*c3*x2*z2 + a1*a2*b1*c1*c3*x2*z2 + a1*a3*b1*c1*c3*x2*z2 + a1*a2*b2*c1*c3*x2*z2 + a1*a3*b2*c1*c3*x2*z2 + b1*b2*c1*c3*x2*z2 + a1*b3*c1*c3*x2*z2 + a1*a2*b3*c1*c3*x2*z2 + b1*b3*c1*c3*x2*z2 + a1*b3*c2*c3*x2*z2 + a1*b1*b3*c2*c3*x2*z2 + a1*b2*b3*c2*c3*x2*z2 + a1*b3*c1*c2*c3*x2*z2 + a1*b1*b3*c1*c2*c3*x2*z2 + a1*b2*b3*c1*c2*c3*x2*z2 + a1*a2*b1*x3*z2 + a1*a2*a3*b1*b2*x3*z2 + a1*a2*b1*b3*x3*z2 + a1*a2*a3*b1*b3*x3*z2 + a1*b1*b2*b3*x3*z2 + a1*a2*b1*b2*b3*x3*z2 + a1*a3*b1*b2*b3*x3*z2 + a1*a2*b1*c1*x3*z2 + a1*a3*b1*c1*x3*z2 + a1*a3*b1*b2*c1*x3*z2 + a1*a2*b1*b3*c1*x3*z2 + a1*a2*b1*b2*b3*c1*x3*z2 + a1*a3*b1*b2*b3*c1*x3*z2 + a1*a2*b1*c2*x3*z2 + a1*a3*b1*c2*x3*z2 + a1*a2*b1*b3*c2*x3*z2 + a1*a2*b1*b2*b3*c2*x3*z2 + a1*b1*b2*c1*c2*x3*z2 + a1*a2*b1*c3*x3*z2 + a1*b1*b2*c3*x3*z2 + a1*a2*b1*b2*c3*x3*z2 + a1*a3*b1*b2*c3*x3*z2 + a1*a2*b1*b3*c3*x3*z2 + a1*b1*b2*b3*c3*x3*z2 + a1*b1*b2*b3*c2*c3*x3*z2 + a3*y1*z2 + a1*a3*b1*y1*z2 + a1*a3*b2*y1*z2 + a3*b1*b2*y1*z2 + b3*y1*z2 + a1*b1*b3*y1*z2 + b2*b3*y1*z2 + a1*b2*b3*y1*z2 + a3*c1*y1*z2 + a3*b1*c1*y1*z2 + a1*a3*b1*c1*y1*z2 + a1*a3*b2*c1*y1*z2 + b3*c1*y1*z2 + a2*b3*c1*y1*z2 + a1*a2*b3*c1*y1*z2 + a3*b3*c1*y1*z2 + a1*a3*b3*c1*y1*z2 + b1*b3*c1*y1*z2 + a2*b1*b3*c1*y1*z2 + a3*b1*b3*c1*y1*z2 + b2*b3*c1*y1*z2 + b1*b2*b3*c1*y1*z2 + a3*c2*y1*z2 + a1*a3*c2*y1*z2 + a3*b1*b2*c2*y1*z2 + a1*a3*b1*b2*c2*y1*z2 + b3*c2*y1*z2 + a2*b3*c2*y1*z2 + a3*b3*c2*y1*z2 + b1*b3*c2*y1*z2 + a1*a2*b1*b3*c2*y1*z2 + a1*a3*b1*b3*c2*y1*z2 + b1*b2*b3*c2*y1*z2 + a1*b1*b2*b3*c2*y1*z2 + a3*c1*c2*y1*z2 + a3*b1*c1*c2*y1*z2 + a3*b2*c1*c2*y1*z2 + a3*b1*b2*c1*c2*y1*z2 + a2*b3*c1*c2*y1*z2 + a3*b3*c1*c2*y1*z2 + a2*b1*b3*c1*c2*y1*z2 + a3*b1*b3*c1*c2*y1*z2 + a1*b2*b3*c1*c2*y1*z2 + a1*c3*y1*z2 + a1*a2*c3*y1*z2 + a1*a3*c3*y1*z2 + a1*b1*c3*y1*z2 + a2*b1*c3*y1*z2 + a3*b1*c3*y1*z2 + b2*c3*y1*z2 + a1*b2*c3*y1*z2 + a2*b1*b2*c3*y1*z2 + a1*a2*b1*b2*c3*y1*z2 + a3*b1*b2*c3*y1*z2 + a1*a3*b1*b2*c3*y1*z2 + b3*c3*y1*z2 + a1*b3*c3*y1*z2 + a1*a2*b3*c3*y1*z2 + a2*a3*b3*c3*y1*z2 + a1*a2*a3*b3*c3*y1*z2 + b1*b3*c3*y1*z2 + a1*b1*b3*c3*y1*z2 + a1*a2*b1*b3*c3*y1*z2 + b2*b3*c3*y1*z2 + a3*b2*b3*c3*y1*z2 + a1*a3*b2*b3*c3*y1*z2 + b1*b2*b3*c3*y1*z2 + a2*c1*c3*y1*z2 + a3*c1*c3*y1*z2 + a2*b1*c1*c3*y1*z2 + a3*b1*c1*c3*y1*z2 + a1*b2*c1*c3*y1*z2 + a2*b2*c1*c3*y1*z2 + a3*b2*c1*c3*y1*z2 + a1*b1*b2*c1*c3*y1*z2 + a2*b1*b2*c1*c3*y1*z2 + a3*b1*b2*c1*c3*y1*z2 + b3*c1*c3*y1*z2 + a1*b3*c1*c3*y1*z2 + a2*a3*b3*c1*c3*y1*z2 + b1*b3*c1*c3*y1*z2 + a1*b1*b3*c1*c3*y1*z2 + a2*a3*b1*b3*c1*c3*y1*z2 + a3*b2*b3*c1*c3*y1*z2 + a3*b1*b2*b3*c1*c3*y1*z2 + b3*c2*c3*y1*z2 + a1*b3*c2*c3*y1*z2 + a2*b3*c2*c3*y1*z2 + a3*b3*c2*c3*y1*z2 + a2*a3*b3*c2*c3*y1*z2 + b1*b3*c2*c3*y1*z2 + a1*b1*b3*c2*c3*y1*z2 + a2*b1*b3*c2*c3*y1*z2 + a3*b1*b3*c2*c3*y1*z2 + a2*a3*b1*b3*c2*c3*y1*z2 + b2*b3*c2*c3*y1*z2 + a1*b2*b3*c2*c3*y1*z2 + a3*b2*b3*c2*c3*y1*z2 + a1*a3*b2*b3*c2*c3*y1*z2 + b1*b2*b3*c2*c3*y1*z2 + a1*b1*b2*b3*c2*c3*y1*z2 + a3*b2*b3*c1*c2*c3*y1*z2 + a3*b1*b2*b3*c1*c2*c3*y1*z2 + a3*b1*b2*c1*y2*z2 + a1*a3*b1*b2*c1*y2*z2 + a2*b1*b3*c1*y2*z2 + a1*a2*b1*b3*c1*y2*z2 + a3*b1*b3*c1*y2*z2 + a1*a3*b1*b3*c1*y2*z2 + a1*b1*b3*c2*y2*z2 + a1*a3*b1*c1*c2*y2*z2 + a1*a3*b2*c1*c2*y2*z2 + a1*a2*b3*c1*c2*y2*z2 + a1*a3*b3*c1*c2*y2*z2 + a1*b1*b3*c1*c2*y2*z2 + a1*b2*b3*c1*c2*y2*z2 + b1*b2*b3*c1*c2*y2*z2 + a1*b1*b2*b3*c1*c2*y2*z2 + b1*b2*c3*y2*z2 + a1*b1*b2*c3*y2*z2 + a1*b1*b3*c3*y2*z2 + a1*a2*b1*c1*c3*y2*z2 + a1*a3*b1*c1*c3*y2*z2 + a1*b2*c1*c3*y2*z2 + a1*a2*b2*c1*c3*y2*z2 + a1*a3*b2*c1*c3*y2*z2 + b1*b2*c1*c3*y2*z2 + a1*b1*b2*c1*c3*y2*z2 + a1*a2*b3*c1*c3*y2*z2 + b1*b3*c1*c3*y2*z2 + a1*b1*b3*c1*c3*y2*z2 + a1*b3*c1*c2*c3*y2*z2 + a1*b1*b3*c1*c2*c3*y2*z2 + a1*b2*b3*c1*c2*c3*y2*z2 + a1*a2*b1*y3*z2 + a1*b1*b2*y3*z2 + a1*a2*b1*b2*y3*z2 + a1*a3*b1*b2*y3*z2 + a1*a2*a3*b1*b2*y3*z2 + a1*a2*a3*b1*b3*y3*z2 + a1*b1*b2*b3*y3*z2 + a1*a2*b1*b2*b3*y3*z2 + a1*a3*b1*b2*b3*y3*z2 + a1*a2*b1*c1*y3*z2 + a1*a3*b1*c1*y3*z2 + a1*b1*b2*c1*y3*z2 + a1*a3*b1*b2*c1*y3*z2 + a1*b1*b3*c1*y3*z2 + a1*a2*b1*b3*c1*y3*z2 + a1*a2*b1*b2*b3*c1*y3*z2 + a1*a3*b1*b2*b3*c1*y3*z2 + a1*a2*b1*c2*y3*z2 + a1*a3*b1*c2*y3*z2 + a1*b1*b3*c2*y3*z2 + a1*a2*b1*b3*c2*y3*z2 + a1*b1*b2*b3*c2*y3*z2 + a1*a2*b1*b2*b3*c2*y3*z2 + a1*b1*b2*c1*c2*y3*z2 + a1*a2*b1*c3*y3*z2 + a1*b1*b2*c3*y3*z2 + a1*a2*b1*b2*c3*y3*z2 + a1*a3*b1*b2*c3*y3*z2 + a1*a2*b1*b3*c3*y3*z2 + a1*b1*b2*b3*c3*y3*z2 + a1*b1*b2*b3*c2*c3*y3*z2 + a1*a3*b1*z1*z2 + a1*a3*b2*z1*z2 + a3*b1*b2*z1*z2 + a1*b1*b3*z1*z2 + a1*b2*b3*z1*z2 + a3*b1*c1*z1*z2 + a3*b1*b2*c1*z1*z2 + b1*b3*c1*z1*z2 + b1*b2*b3*c1*z1*z2 + a3*b1*c2*z1*z2 + a1*a3*b1*c2*z1*z2 + a3*b1*b2*c2*z1*z2 + a1*a3*b1*b2*c2*z1*z2 + b1*b3*c2*z1*z2 + a1*a2*b1*b3*c2*z1*z2 + a1*a3*b1*b3*c2*z1*z2 + b1*b2*b3*c2*z1*z2 + a1*b1*b2*b3*c2*z1*z2 + a3*b1*c1*c2*z1*z2 + a3*b1*b2*c1*c2*z1*z2 + a2*b1*b3*c1*c2*z1*z2 + a3*b1*b3*c1*c2*z1*z2 + b1*b2*b3*c1*c2*z1*z2 + a1*a2*b1*c3*z1*z2 + a1*a3*b1*c3*z1*z2 + a1*b1*b2*c3*z1*z2 + a2*b1*b2*c3*z1*z2 + a1*a2*b1*b2*c3*z1*z2 + a3*b1*b2*c3*z1*z2 + a1*a3*b1*b2*c3*z1*z2 + a1*a2*b3*c3*z1*z2 + a1*a2*a3*b3*c3*z1*z2 + a1*a2*b1*b3*c3*z1*z2 + a1*a3*b2*b3*c3*z1*z2 + b1*b2*b3*c3*z1*z2 + a2*b1*c1*c3*z1*z2 + a3*b1*c1*c3*z1*z2 + b1*b2*c1*c3*z1*z2 + a2*b1*b2*c1*c3*z1*z2 + a3*b1*b2*c1*c3*z1*z2 + a2*a3*b1*b3*c1*c3*z1*z2 + a3*b1*b2*b3*c1*c3*z1*z2 + a2*b1*b3*c2*c3*z1*z2 + a3*b1*b3*c2*c3*z1*z2 + a2*a3*b1*b3*c2*c3*z1*z2 + a1*b2*b3*c2*c3*z1*z2 + a1*a3*b2*b3*c2*c3*z1*z2 + b1*b2*b3*c2*c3*z1*z2 + a1*b1*b2*b3*c2*c3*z1*z2 + a3*b1*b2*b3*c1*c2*c3*z1*z2 + a1*a2*a3*b1*b2*z3 + a2*b1*b2*b3*z3 + a1*a2*b1*b2*b3*z3 + a2*a3*b1*b2*b3*z3 + a1*a2*a3*b1*b2*b3*z3 + a2*b1*b2*c1*z3 + a2*a3*b1*b2*c1*z3 + a1*a2*a3*b1*b2*c1*z3 + a2*b1*b2*b3*c1*z3 + a1*a2*b1*b2*b3*c1*z3 + a1*a2*a3*b1*b2*b3*c1*z3 + a1*a3*b1*c2*z3 + a1*a3*b2*c2*z3 + a1*a2*b1*b2*c2*z3 + a1*a3*b1*b2*c2*z3 + a2*a3*b1*b2*c2*z3 + a1*a2*b1*b3*c2*z3 + a1*a2*b2*b3*c2*z3 + a2*b1*b2*b3*c2*z3 + a1*a2*b1*b2*b3*c2*z3 + a1*a3*b1*b2*b3*c2*z3 + a2*a3*b1*b2*b3*c2*z3 + a1*a2*a3*c1*c2*z3 + a1*a3*b1*c1*c2*z3 + a2*a3*b1*c1*c2*z3 + a1*a3*b2*c1*c2*z3 + a2*a3*b2*c1*c2*z3 + a1*a2*a3*b2*c1*c2*z3 + a2*b1*b2*c1*c2*z3 + a1*a2*b1*b2*c1*c2*z3 + a3*b1*b2*c1*c2*z3 + a1*a3*b1*b2*c1*c2*z3 + a1*a2*b3*c1*c2*z3 + a1*a3*b3*c1*c2*z3 + a1*a2*a3*b3*c1*c2*z3 + a2*b1*b3*c1*c2*z3 + a1*a2*b1*b3*c1*c2*z3 + a2*a3*b1*b3*c1*c2*z3 + a1*a3*b2*b3*c1*c2*z3 + a1*a2*b1*b2*b3*c1*c2*z3 + a2*a3*b1*b2*b3*c1*c2*z3 + a1*a2*a3*b2*c3*z3 + a1*a2*b1*b2*c3*z3 + a1*a2*b2*b3*c3*z3 + a1*a2*a3*b2*b3*c3*z3 + a2*b1*b2*b3*c3*z3 + a2*a3*b1*b2*b3*c3*z3 + a1*a2*a3*b2*c1*c3*z3 + a2*b1*b2*c1*c3*z3 + a1*a2*b1*b2*c1*c3*z3 + a2*b1*b2*b3*c1*c3*z3 + a1*a2*b1*b2*b3*c1*c3*z3 + a1*a2*b1*c2*c3*z3 + a3*b1*c2*c3*z3 + a1*a3*b1*c2*c3*z3 + a1*a2*a3*b1*c2*c3*z3 + a1*a2*b2*c2*c3*z3 + a1*a3*b2*c2*c3*z3 + a1*a2*a3*b2*c2*c3*z3 + b1*b2*c2*c3*z3 + a2*b1*b2*c2*c3*z3 + a1*a2*b1*b2*c2*c3*z3 + a3*b1*b2*c2*c3*z3 + a1*a3*b1*b2*c2*c3*z3 + a1*a2*a3*b1*b2*c2*c3*z3 + a1*a3*b3*c2*c3*z3 + a1*a2*a3*b3*c2*c3*z3 + b1*b3*c2*c3*z3 + a1*a3*b1*b3*c2*c3*z3 + a1*a2*a3*b1*b3*c2*c3*z3 + a1*a2*b2*b3*c2*c3*z3 + a1*a3*b2*b3*c2*c3*z3 + b1*b2*b3*c2*c3*z3 + a1*a3*b1*b2*b3*c2*c3*z3 + a2*a3*c1*c2*c3*z3 + a1*a2*b1*c1*c2*c3*z3 + a3*b1*c1*c2*c3*z3 + a1*a2*a3*b1*c1*c2*c3*z3 + a1*a2*b2*c1*c2*c3*z3 + a1*a2*a3*b2*c1*c2*c3*z3 + a2*b1*b2*c1*c2*c3*z3 + a3*b1*b2*c1*c2*c3*z3 + a2*a3*b1*b2*c1*c2*c3*z3 + a1*a2*b3*c1*c2*c3*z3 + a3*b3*c1*c2*c3*z3 + a1*a2*a3*b3*c1*c2*c3*z3 + a1*b1*b3*c1*c2*c3*z3 + b2*b3*c1*c2*c3*z3 + a1*b2*b3*c1*c2*c3*z3 + a2*b2*b3*c1*c2*c3*z3 + a1*a2*b2*b3*c1*c2*c3*z3 + a2*a3*b2*b3*c1*c2*c3*z3 + b1*b2*b3*c1*c2*c3*z3 + a2*b1*b2*b3*c1*c2*c3*z3 + a3*b1*b2*b3*c1*c2*c3*z3 + a1*a2*x1*z3 + a1*a2*b1*x1*z3 + a1*b2*x1*z3 + a1*a2*b2*x1*z3 + a1*a3*b2*x1*z3 + a1*a2*a3*b2*x1*z3 + a1*b1*b2*x1*z3 + a1*a2*b1*b2*x1*z3 + a1*a3*b1*b2*x1*z3 + a1*a2*a3*b1*b2*x1*z3 + a1*a2*a3*b3*x1*z3 + a1*a2*a3*b1*b3*x1*z3 + a1*b2*b3*x1*z3 + a1*a2*b2*b3*x1*z3 + a1*a3*b2*b3*x1*z3 + a1*b1*b2*b3*x1*z3 + a1*a2*b1*b2*b3*x1*z3 + a1*a3*b1*b2*b3*x1*z3 + a2*c1*x1*z3 + a2*b1*c1*x1*z3 + b2*c1*x1*z3 + a2*b2*c1*x1*z3 + a3*b2*c1*x1*z3 + a2*a3*b2*c1*x1*z3 + b1*b2*c1*x1*z3 + a2*b1*b2*c1*x1*z3 + a3*b1*b2*c1*x1*z3 + a2*a3*b1*b2*c1*x1*z3 + a2*a3*b3*c1*x1*z3 + a2*a3*b1*b3*c1*x1*z3 + b2*b3*c1*x1*z3 + a2*b2*b3*c1*x1*z3 + a3*b2*b3*c1*x1*z3 + b1*b2*b3*c1*x1*z3 + a2*b1*b2*b3*c1*x1*z3 + a3*b1*b2*b3*c1*x1*z3 + a1*a2*c2*x1*z3 + a1*a3*c2*x1*z3 + a2*a3*c2*x1*z3 + a1*a2*b1*c2*x1*z3 + a1*a3*b1*c2*x1*z3 + a2*a3*b1*c2*x1*z3 + a2*a3*b2*c2*x1*z3 + a1*a2*b1*b2*c2*x1*z3 + a1*a3*b1*b2*c2*x1*z3 + a2*a3*b1*b2*c2*x1*z3 + a1*a3*b3*c2*x1*z3 + a2*a3*b3*c2*x1*z3 + a1*a3*b1*b3*c2*x1*z3 + a2*a3*b1*b3*c2*x1*z3 + a2*b2*b3*c2*x1*z3 + a1*a3*b2*b3*c2*x1*z3 + a2*b1*b2*b3*c2*x1*z3 + a1*a2*b1*b2*b3*c2*x1*z3 + a2*c1*c2*x1*z3 + a3*c1*c2*x1*z3 + a2*b1*c1*c2*x1*z3 + a3*b1*c1*c2*x1*z3 + a3*b3*c1*c2*x1*z3 + a3*b1*b3*c1*c2*x1*z3 + a3*b2*b3*c1*c2*x1*z3 + a3*b1*b2*b3*c1*c2*x1*z3 + a1*a2*c3*x1*z3 + a1*a2*b1*c3*x1*z3 + a1*a3*b2*c3*x1*z3 + a1*a2*b1*b2*c3*x1*z3 + a1*a3*b1*b2*c3*x1*z3 + a2*a3*b1*b2*c3*x1*z3 + a1*a2*b3*c3*x1*z3 + a1*a2*b1*b3*c3*x1*z3 + a1*b2*b3*c3*x1*z3 + a1*a2*b2*b3*c3*x1*z3 + a2*a3*b2*b3*c3*x1*z3 + a1*b1*b2*b3*c3*x1*z3 + a2*c1*c3*x1*z3 + a2*b1*c1*c3*x1*z3 + a3*b2*c1*c3*x1*z3 + a3*b1*b2*c1*c3*x1*z3 + a2*b3*c1*c3*x1*z3 + a2*b1*b3*c1*c3*x1*z3 + b2*b3*c1*c3*x1*z3 + a2*b2*b3*c1*c3*x1*z3 + b1*b2*b3*c1*c3*x1*z3 + a2*b1*b2*b3*c1*c3*x1*z3 + a3*c2*c3*x1*z3 + a3*b1*c2*c3*x1*z3 + a3*b2*c2*c3*x1*z3 + a3*b3*c2*c3*x1*z3 + a3*b1*b3*c2*c3*x1*z3 + a1*b2*b3*c2*c3*x1*z3 + a2*b2*b3*c2*c3*x1*z3 + a3*b2*b3*c2*c3*x1*z3 + a1*b1*b2*b3*c2*c3*x1*z3 + a2*b1*b2*b3*c2*c3*x1*z3 + b2*b3*c1*c2*c3*x1*z3 + b1*b2*b3*c1*c2*c3*x1*z3 + a1*x2*z3 + b1*x2*z3 + a1*b1*x2*z3 + a2*b1*x2*z3 + a3*b1*x2*z3 + a2*a3*b1*x2*z3 + a1*b2*x2*z3 + a1*a2*b2*x2*z3 + b1*b2*x2*z3 + a1*b1*b2*x2*z3 + a2*b1*b2*x2*z3 + a3*b1*b2*x2*z3 + a1*a2*a3*b1*b2*x2*z3 + a1*b3*x2*z3 + a1*a2*b3*x2*z3 + a1*b1*b3*x2*z3 + a1*a2*b1*b3*x2*z3 + a1*a3*b1*b3*x2*z3 + a1*a2*a3*b1*b3*x2*z3 + a1*b2*b3*x2*z3 + a1*b1*b2*b3*x2*z3 + a1*a2*b1*b2*b3*x2*z3 + a1*a3*b1*b2*b3*x2*z3 + a1*c1*x2*z3 + a2*c1*x2*z3 + a3*c1*x2*z3 + a1*b1*c1*x2*z3 + a2*b1*c1*x2*z3 + a3*b1*c1*x2*z3 + a1*b2*c1*x2*z3 + a2*b2*c1*x2*z3 + a1*a2*b2*c1*x2*z3 + a1*a3*b2*c1*x2*z3 + a1*b1*b2*c1*x2*z3 + a1*a2*b1*b2*c1*x2*z3 + a1*a3*b1*b2*c1*x2*z3 + a2*a3*b1*b2*c1*x2*z3 + a1*b3*c1*x2*z3 + a2*b3*c1*x2*z3 + a1*a2*b3*c1*x2*z3 + a1*a3*b3*c1*x2*z3 + a2*b1*b3*c1*x2*z3 + a3*b1*b3*c1*x2*z3 + a2*a3*b1*b3*c1*x2*z3 + a1*b2*b3*c1*x2*z3 + a2*b2*b3*c1*x2*z3 + a3*b2*b3*c1*x2*z3 + a1*a2*b1*b2*b3*c1*x2*z3 + a1*a3*b1*b2*b3*c1*x2*z3 + a1*c2*x2*z3 + a1*b1*c2*x2*z3 + a2*b1*c2*x2*z3 + a1*b2*c2*x2*z3 + a1*a2*b2*c2*x2*z3 + a1*a3*b2*c2*x2*z3 + a1*b1*b2*c2*x2*z3 + a2*b1*b2*c2*x2*z3 + a1*a2*b1*b2*c2*x2*z3 + a1*a3*b1*b2*c2*x2*z3 + a1*b3*c2*x2*z3 + a1*a2*b3*c2*x2*z3 + a1*a3*b3*c2*x2*z3 + b1*b3*c2*x2*z3 + a1*b1*b3*c2*x2*z3 + a1*a3*b1*b3*c2*x2*z3 + a1*b2*b3*c2*x2*z3 + b1*b2*b3*c2*x2*z3 + a1*b1*b2*b3*c2*x2*z3 + a1*a2*b1*b2*b3*c2*x2*z3 + a2*b2*c1*c2*x2*z3 + a3*b2*c1*c2*x2*z3 + a2*b1*b2*c1*c2*x2*z3 + a3*b1*b2*c1*c2*x2*z3 + b3*c1*c2*x2*z3 + a1*b3*c1*c2*x2*z3 + a2*b3*c1*c2*x2*z3 + a3*b3*c1*c2*x2*z3 + b1*b3*c1*c2*x2*z3 + a3*b1*b3*c1*c2*x2*z3 + b2*b3*c1*c2*x2*z3 + a1*b2*b3*c1*c2*x2*z3 + b1*b2*b3*c1*c2*x2*z3 + a2*b1*b2*b3*c1*c2*x2*z3 + a1*c3*x2*z3 + a1*a3*c3*x2*z3 + a1*b1*c3*x2*z3 + a2*b1*c3*x2*z3 + a1*a3*b1*c3*x2*z3 + a1*b2*c3*x2*z3 + a1*a2*b2*c3*x2*z3 + a1*a3*b2*c3*x2*z3 + a1*b1*b2*c3*x2*z3 + a2*b1*b2*c3*x2*z3 + a1*a2*b1*b2*c3*x2*z3 + a1*a3*b1*b2*c3*x2*z3 + a1*a2*b3*c3*x2*z3 + a1*b1*b3*c3*x2*z3 + a2*b1*b3*c3*x2*z3 + a1*a2*b1*b3*c3*x2*z3 + a1*b1*b2*b3*c3*x2*z3 + a3*c1*c3*x2*z3 + a3*b1*c1*c3*x2*z3 + a2*b2*c1*c3*x2*z3 + a3*b2*c1*c3*x2*z3 + a2*b1*b2*c1*c3*x2*z3 + a3*b1*b2*c1*c3*x2*z3 + b3*c1*c3*x2*z3 + a2*b3*c1*c3*x2*z3 + a2*b1*b3*c1*c3*x2*z3 + b2*b3*c1*c3*x2*z3 + a1*b3*c2*c3*x2*z3 + a1*b1*b3*c2*c3*x2*z3 + a1*b2*b3*c2*c3*x2*z3 + a1*b1*b2*b3*c2*c3*x2*z3 + b3*c1*c2*c3*x2*z3 + b1*b3*c1*c2*c3*x2*z3 + b2*b3*c1*c2*c3*x2*z3 + b1*b2*b3*c1*c2*c3*x2*z3 + a1*a2*b1*x3*z3 + a2*a3*b1*x3*z3 + a1*a2*b2*x3*z3 + b1*b2*x3*z3 + a2*b1*b2*x3*z3 + a1*a2*b1*b2*x3*z3 + a3*b1*b2*x3*z3 + a1*a3*b1*b2*x3*z3 + a1*a2*b3*x3*z3 + a2*b1*b3*x3*z3 + a1*a2*b1*b3*x3*z3 + a2*a3*b1*b3*x3*z3 + a1*a3*b2*b3*x3*z3 + a1*a2*b1*c1*x3*z3 + a2*a3*b1*c1*x3*z3 + a1*a2*b2*c1*x3*z3 + a2*a3*b2*c1*x3*z3 + a1*b1*b2*c1*x3*z3 + a3*b1*b2*c1*x3*z3 + a1*a3*b1*b2*c1*x3*z3 + a2*a3*b1*b2*c1*x3*z3 + a1*a2*b3*c1*x3*z3 + a2*a3*b3*c1*x3*z3 + a2*b1*b3*c1*x3*z3 + b2*b3*c1*x3*z3 + a1*b2*b3*c1*x3*z3 + a2*b2*b3*c1*x3*z3 + a3*b2*b3*c1*x3*z3 + a1*a3*b2*b3*c1*x3*z3 + a2*a3*b2*b3*c1*x3*z3 + b1*b2*b3*c1*x3*z3 + a1*a2*b1*c2*x3*z3 + a2*a3*b1*c2*x3*z3 + a1*a2*b2*c2*x3*z3 + b1*b2*c2*x3*z3 + a1*b1*b2*c2*x3*z3 + a1*a2*b1*b2*c2*x3*z3 + a3*b1*b2*c2*x3*z3 + a1*a3*b1*b2*c2*x3*z3 + a1*a2*b3*c2*x3*z3 + a2*b1*b3*c2*x3*z3 + a1*a2*b1*b3*c2*x3*z3 + a2*a3*b1*b3*c2*x3*z3 + a1*b2*b3*c2*x3*z3 + a1*a3*b2*b3*c2*x3*z3 + b1*b2*b3*c2*x3*z3 + a1*a2*b1*c1*c2*x3*z3 + a2*a3*b1*c1*c2*x3*z3 + a1*a2*b2*c1*c2*x3*z3 + a2*a3*b2*c1*c2*x3*z3 + b1*b2*c1*c2*x3*z3 + a2*b1*b2*c1*c2*x3*z3 + a3*b1*b2*c1*c2*x3*z3 + a1*a2*b3*c1*c2*x3*z3 + a2*a3*b3*c1*c2*x3*z3 + a2*b1*b3*c1*c2*x3*z3 + b2*b3*c1*c2*x3*z3 + a3*b2*b3*c1*c2*x3*z3 + a1*a2*b1*c3*x3*z3 + a2*a3*b1*c3*x3*z3 + a1*a2*b2*c3*x3*z3 + a1*b1*b2*c3*x3*z3 + a2*b1*b2*c3*x3*z3 + a1*a2*b3*c3*x3*z3 + a1*b2*b3*c3*x3*z3 + a2*b2*c1*c3*x3*z3 + b1*b2*c1*c3*x3*z3 + a2*b1*b2*c1*c3*x3*z3 + a2*b3*c1*c3*x3*z3 + a2*b1*b3*c1*c3*x3*z3 + b1*b2*b3*c1*c3*x3*z3 + a1*a2*b1*c2*c3*x3*z3 + a2*a3*b1*c2*c3*x3*z3 + a1*a2*b2*c2*c3*x3*z3 + a1*a2*b3*c2*c3*x3*z3 + b1*b2*b3*c2*c3*x3*z3 + a2*b2*c1*c2*c3*x3*z3 + a2*b1*b2*c1*c2*c3*x3*z3 + a2*b3*c1*c2*c3*x3*z3 + a2*b1*b3*c1*c2*c3*x3*z3 + a1*a2*y1*z3 + a2*b1*y1*z3 + a1*a2*b1*y1*z3 + a1*b2*y1*z3 + a1*a2*b2*y1*z3 + a1*a3*b2*y1*z3 + a1*a2*a3*b2*y1*z3 + b1*b2*y1*z3 + a1*b1*b2*y1*z3 + a2*b1*b2*y1*z3 + a1*a2*b1*b2*y1*z3 + a3*b1*b2*y1*z3 + a1*a3*b1*b2*y1*z3 + a2*a3*b1*b2*y1*z3 + a1*a2*a3*b1*b2*y1*z3 + a1*a2*a3*b3*y1*z3 + a2*a3*b1*b3*y1*z3 + a1*a2*a3*b1*b3*y1*z3 + a1*b2*b3*y1*z3 + a1*a2*b2*b3*y1*z3 + a1*a3*b2*b3*y1*z3 + b1*b2*b3*y1*z3 + a1*b1*b2*b3*y1*z3 + a2*b1*b2*b3*y1*z3 + a1*a2*b1*b2*b3*y1*z3 + a3*b1*b2*b3*y1*z3 + a1*a3*b1*b2*b3*y1*z3 + a2*c1*y1*z3 + a2*b1*c1*y1*z3 + b2*c1*y1*z3 + a2*b2*c1*y1*z3 + a3*b2*c1*y1*z3 + a2*a3*b2*c1*y1*z3 + b1*b2*c1*y1*z3 + a2*b1*b2*c1*y1*z3 + a3*b1*b2*c1*y1*z3 + a2*a3*b1*b2*c1*y1*z3 + a2*a3*b3*c1*y1*z3 + a2*a3*b1*b3*c1*y1*z3 + b2*b3*c1*y1*z3 + a2*b2*b3*c1*y1*z3 + a3*b2*b3*c1*y1*z3 + b1*b2*b3*c1*y1*z3 + a2*b1*b2*b3*c1*y1*z3 + a3*b1*b2*b3*c1*y1*z3 + a1*a2*c2*y1*z3 + a1*a3*c2*y1*z3 + a2*a3*c2*y1*z3 + a2*b1*c2*y1*z3 + a1*a2*b1*c2*y1*z3 + a3*b1*c2*y1*z3 + a1*a3*b1*c2*y1*z3 + a2*a3*b1*c2*y1*z3 + a2*b2*c2*y1*z3 + a3*b2*c2*y1*z3 + a2*a3*b2*c2*y1*z3 + a2*b1*b2*c2*y1*z3 + a1*a2*b1*b2*c2*y1*z3 + a3*b1*b2*c2*y1*z3 + a1*a3*b1*b2*c2*y1*z3 + a2*a3*b1*b2*c2*y1*z3 + a1*a3*b3*c2*y1*z3 + a2*a3*b3*c2*y1*z3 + a3*b1*b3*c2*y1*z3 + a1*a3*b1*b3*c2*y1*z3 + a2*a3*b1*b3*c2*y1*z3 + a3*b2*b3*c2*y1*z3 + a1*a3*b2*b3*c2*y1*z3 + a1*a2*b1*b2*b3*c2*y1*z3 + a2*c1*c2*y1*z3 + a3*c1*c2*y1*z3 + a2*b1*c1*c2*y1*z3 + a3*b1*c1*c2*y1*z3 + a3*b3*c1*c2*y1*z3 + a3*b1*b3*c1*c2*y1*z3 + a3*b2*b3*c1*c2*y1*z3 + a3*b1*b2*b3*c1*c2*y1*z3 + a1*a2*c3*y1*z3 + a2*b1*c3*y1*z3 + a1*a2*b1*c3*y1*z3 + a2*b2*c3*y1*z3 + a1*a3*b2*c3*y1*z3 + a2*b1*b2*c3*y1*z3 + a1*a2*b1*b2*c3*y1*z3 + a3*b1*b2*c3*y1*z3 + a1*a3*b1*b2*c3*y1*z3 + a2*a3*b1*b2*c3*y1*z3 + a1*a2*b3*c3*y1*z3 + a2*b1*b3*c3*y1*z3 + a1*a2*b1*b3*c3*y1*z3 + a1*b2*b3*c3*y1*z3 + a2*b2*b3*c3*y1*z3 + a1*a2*b2*b3*c3*y1*z3 + a2*a3*b2*b3*c3*y1*z3 + b1*b2*b3*c3*y1*z3 + a1*b1*b2*b3*c3*y1*z3 + a2*c1*c3*y1*z3 + a2*b1*c1*c3*y1*z3 + a3*b2*c1*c3*y1*z3 + a3*b1*b2*c1*c3*y1*z3 + a2*b3*c1*c3*y1*z3 + a2*b1*b3*c1*c3*y1*z3 + b2*b3*c1*c3*y1*z3 + a2*b2*b3*c1*c3*y1*z3 + b1*b2*b3*c1*c3*y1*z3 + a2*b1*b2*b3*c1*c3*y1*z3 + a3*c2*c3*y1*z3 + a3*b1*c2*c3*y1*z3 + a3*b2*c2*c3*y1*z3 + a3*b3*c2*c3*y1*z3 + a3*b1*b3*c2*c3*y1*z3 + a1*b2*b3*c2*c3*y1*z3 + a2*b2*b3*c2*c3*y1*z3 + a3*b2*b3*c2*c3*y1*z3 + b1*b2*b3*c2*c3*y1*z3 + a1*b1*b2*b3*c2*c3*y1*z3 + a2*b1*b2*b3*c2*c3*y1*z3 + b2*b3*c1*c2*c3*y1*z3 + b1*b2*b3*c1*c2*c3*y1*z3 + a1*y2*z3 + b1*y2*z3 + a1*b1*y2*z3 + a2*b1*y2*z3 + a1*a2*b1*y2*z3 + a1*b2*y2*z3 + a1*b1*b2*y2*z3 + a1*a2*b1*b2*y2*z3 + a1*a3*b1*b2*y2*z3 + a1*a2*a3*b1*b2*y2*z3 + a1*a2*a3*b1*b3*y2*z3 + a1*b1*b2*b3*y2*z3 + a1*a2*b1*b2*b3*y2*z3 + a1*a3*b1*b2*b3*y2*z3 + a1*c1*y2*z3 + a2*c1*y2*z3 + a3*c1*y2*z3 + a1*b1*c1*y2*z3 + a2*b1*c1*y2*z3 + a1*a2*b1*c1*y2*z3 + a3*b1*c1*y2*z3 + a2*a3*b1*c1*y2*z3 + a1*b2*c1*y2*z3 + a2*b2*c1*y2*z3 + a1*a3*b2*c1*y2*z3 + a2*a3*b2*c1*y2*z3 + a1*b1*b2*c1*y2*z3 + a2*b1*b2*c1*y2*z3 + a1*a2*b1*b2*c1*y2*z3 + a3*b1*b2*c1*y2*z3 + a1*a3*b1*b2*c1*y2*z3 + a2*a3*b1*b2*c1*y2*z3 + b3*c1*y2*z3 + a3*b3*c1*y2*z3 + a1*a3*b3*c1*y2*z3 + a2*a3*b3*c1*y2*z3 + b1*b3*c1*y2*z3 + a2*a3*b1*b3*c1*y2*z3 + b2*b3*c1*y2*z3 + a1*b1*b2*b3*c1*y2*z3 + a2*b1*b2*b3*c1*y2*z3 + a1*a2*b1*b2*b3*c1*y2*z3 + a3*b1*b2*b3*c1*y2*z3 + a1*a3*b1*b2*b3*c1*y2*z3 + a1*c2*y2*z3 + a1*b1*c2*y2*z3 + a2*b1*c2*y2*z3 + a1*a2*b1*c2*y2*z3 + a2*a3*b1*c2*y2*z3 + a1*b2*c2*y2*z3 + a1*a3*b2*c2*y2*z3 + a1*b1*b2*c2*y2*z3 + a2*b1*b2*c2*y2*z3 + a1*a2*b1*b2*c2*y2*z3 + a1*a3*b1*b2*c2*y2*z3 + a1*a3*b3*c2*y2*z3 + a1*b1*b3*c2*y2*z3 + a2*b1*b3*c2*y2*z3 + a3*b1*b3*c2*y2*z3 + a1*a3*b1*b3*c2*y2*z3 + b1*b2*b3*c2*y2*z3 + a1*a2*b1*b2*b3*c2*y2*z3 + a3*b2*c1*c2*y2*z3 + a3*b1*b2*c1*c2*y2*z3 + b3*c1*c2*y2*z3 + a1*b3*c1*c2*y2*z3 + a2*b3*c1*c2*y2*z3 + a3*b3*c1*c2*y2*z3 + b1*b3*c1*c2*y2*z3 + a3*b1*b3*c1*c2*y2*z3 + b2*b3*c1*c2*y2*z3 + a1*b2*b3*c1*c2*y2*z3 + a2*b2*b3*c1*c2*y2*z3 + a2*b1*b2*b3*c1*c2*y2*z3 + a1*c3*y2*z3 + a1*a3*c3*y2*z3 + a1*b1*c3*y2*z3 + a2*b1*c3*y2*z3 + a1*a2*b1*c3*y2*z3 + a3*b1*c3*y2*z3 + a1*a3*b1*c3*y2*z3 + a2*a3*b1*c3*y2*z3 + a1*b2*c3*y2*z3 + a1*a3*b2*c3*y2*z3 + a1*b1*b2*c3*y2*z3 + a2*b1*b2*c3*y2*z3 + a1*a2*b1*b2*c3*y2*z3 + a1*a3*b1*b2*c3*y2*z3 + a1*b3*c3*y2*z3 + b1*b3*c3*y2*z3 + a1*a2*b1*b3*c3*y2*z3 + a1*b2*b3*c3*y2*z3 + b1*b2*b3*c3*y2*z3 + a1*b1*b2*b3*c3*y2*z3 + a3*c1*c3*y2*z3 + a3*b1*c1*c3*y2*z3 + a3*b2*c1*c3*y2*z3 + a3*b1*b2*c1*c3*y2*z3 + b1*b3*c1*c3*y2*z3 + b1*b2*b3*c1*c3*y2*z3 + a1*b3*c2*c3*y2*z3 + b1*b3*c2*c3*y2*z3 + a1*b1*b3*c2*c3*y2*z3 + a2*b1*b3*c2*c3*y2*z3 + a1*b2*b3*c2*c3*y2*z3 + a1*b1*b2*b3*c2*c3*y2*z3 + b3*c1*c2*c3*y2*z3 + b1*b3*c1*c2*c3*y2*z3 + b2*b3*c1*c2*c3*y2*z3 + b1*b2*b3*c1*c2*c3*y2*z3 + a1*b1*b2*c1*y3*z3 + a2*b1*b2*c1*y3*z3 + a1*a3*b1*b2*c1*y3*z3 + a2*a3*b1*b2*c1*y3*z3 + a1*a3*b2*b3*c1*y3*z3 + a2*a3*b2*b3*c1*y3*z3 + a1*b1*b2*b3*c1*y3*z3 + a2*b1*b2*b3*c1*y3*z3 + b1*b2*c2*y3*z3 + a1*b1*b2*c2*y3*z3 + a1*a2*b1*b2*c2*y3*z3 + a3*b1*b2*c2*y3*z3 + a1*a3*b1*b2*c2*y3*z3 + a1*a2*b1*b3*c2*y3*z3 + a2*a3*b1*b3*c2*y3*z3 + a1*a3*b2*b3*c2*y3*z3 + b1*b2*b3*c2*y3*z3 + a1*b1*b2*b3*c2*y3*z3 + a1*a2*b1*c1*c2*y3*z3 + a2*a3*b1*c1*c2*y3*z3 + a2*b2*c1*c2*y3*z3 + a1*a2*b2*c1*c2*y3*z3 + a2*a3*b2*c1*c2*y3*z3 + b1*b2*c1*c2*y3*z3 + a3*b1*b2*c1*c2*y3*z3 + a1*a2*b3*c1*c2*y3*z3 + a2*a3*b3*c1*c2*y3*z3 + a2*b1*b3*c1*c2*y3*z3 + a2*b2*b3*c1*c2*y3*z3 + a3*b2*b3*c1*c2*y3*z3 + b1*b2*b3*c1*c2*y3*z3 + a1*b1*b2*c3*y3*z3 + a2*b1*b2*c3*y3*z3 + a1*b2*b3*c3*y3*z3 + b1*b2*b3*c3*y3*z3 + b1*b2*c1*c3*y3*z3 + b1*b2*b3*c1*c3*y3*z3 + a1*a2*b1*c2*c3*y3*z3 + a2*a3*b1*c2*c3*y3*z3 + a1*a2*b2*c2*c3*y3*z3 + a1*a2*b3*c2*c3*y3*z3 + a2*b1*b3*c2*c3*y3*z3 + b1*b2*b3*c2*c3*y3*z3 + a2*b2*c1*c2*c3*y3*z3 + a2*b1*b2*c1*c2*c3*y3*z3 + a2*b3*c1*c2*c3*y3*z3 + a2*b1*b3*c1*c2*c3*y3*z3 + a1*a2*b1*z1*z3 + a1*b1*b2*z1*z3 + a1*a2*b1*b2*z1*z3 + a1*a3*b1*b2*z1*z3 + a1*a2*a3*b1*b2*z1*z3 + a1*a2*a3*b1*b3*z1*z3 + a1*b1*b2*b3*z1*z3 + a1*a2*b1*b2*b3*z1*z3 + a1*a3*b1*b2*b3*z1*z3 + a2*b1*c1*z1*z3 + b1*b2*c1*z1*z3 + a2*b1*b2*c1*z1*z3 + a3*b1*b2*c1*z1*z3 + a2*a3*b1*b2*c1*z1*z3 + a2*a3*b1*b3*c1*z1*z3 + b1*b2*b3*c1*z1*z3 + a2*b1*b2*b3*c1*z1*z3 + a3*b1*b2*b3*c1*z1*z3 + a1*a2*b1*c2*z1*z3 + a1*a3*b1*c2*z1*z3 + a2*a3*b1*c2*z1*z3 + a1*a2*b2*c2*z1*z3 + a1*a3*b2*c2*z1*z3 + a1*a2*b1*b2*c2*z1*z3 + a1*a3*b1*b2*c2*z1*z3 + a2*a3*b1*b2*c2*z1*z3 + a1*a3*b1*b3*c2*z1*z3 + a2*a3*b1*b3*c2*z1*z3 + a1*a2*b2*b3*c2*z1*z3 + a1*a3*b2*b3*c2*z1*z3 + a2*b1*b2*b3*c2*z1*z3 + a1*a2*b1*b2*b3*c2*z1*z3 + a2*b1*c1*c2*z1*z3 + a3*b1*c1*c2*z1*z3 + a3*b1*b3*c1*c2*z1*z3 + a3*b1*b2*b3*c1*c2*z1*z3 + a1*a2*b1*c3*z1*z3 + a1*a2*b2*c3*z1*z3 + a2*a3*b2*c3*z1*z3 + a1*a2*b1*b2*c3*z1*z3 + a1*a3*b1*b2*c3*z1*z3 + a2*a3*b1*b2*c3*z1*z3 + a1*a2*b1*b3*c3*z1*z3 + a1*a2*b2*b3*c3*z1*z3 + a2*a3*b2*b3*c3*z1*z3 + a1*b1*b2*b3*c3*z1*z3 + a2*b1*c1*c3*z1*z3 + a3*b1*b2*c1*c3*z1*z3 + a2*b1*b3*c1*c3*z1*z3 + b1*b2*b3*c1*c3*z1*z3 + a2*b1*b2*b3*c1*c3*z1*z3 + a3*b1*c2*c3*z1*z3 + a3*b2*c2*c3*z1*z3 + a3*b1*b3*c2*c3*z1*z3 + a3*b2*b3*c2*c3*z1*z3 + a1*b1*b2*b3*c2*c3*z1*z3 + a2*b1*b2*b3*c2*c3*z1*z3 + b1*b2*b3*c1*c2*c3*z1*z3 + a1*a2*b1*z2*z3 + a1*b1*b2*z2*z3 + a1*a2*b1*b2*z2*z3 + a1*a3*b1*b2*z2*z3 + a1*a2*a3*b1*b2*z2*z3 + a1*a2*a3*b1*b3*z2*z3 + a1*b1*b2*b3*z2*z3 + a1*a2*b1*b2*b3*z2*z3 + a1*a3*b1*b2*b3*z2*z3 + a1*a2*b1*c1*z2*z3 + a1*a3*b1*c1*z2*z3 + a1*a2*b1*b2*c1*z2*z3 + a1*a3*b1*b3*c1*z2*z3 + a1*a2*b1*b2*b3*c1*z2*z3 + a1*a3*b1*b2*b3*c1*z2*z3 + a1*a2*b1*c2*z2*z3 + a1*a3*b1*c2*z2*z3 + a1*a2*b1*b2*c2*z2*z3 + a1*a3*b1*b2*c2*z2*z3 + a1*a3*b1*b3*c2*z2*z3 + a1*a2*b1*b2*b3*c2*z2*z3 + a1*b1*b2*b3*c1*c2*z2*z3 + a1*a2*b1*c3*z2*z3 + a1*a2*b1*b2*c3*z2*z3 + a1*a3*b1*b2*c3*z2*z3 + a1*a2*b1*b3*c3*z2*z3 + a1*b1*b2*b3*c3*z2*z3 + a1*b1*b2*b3*c2*c3*z2*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 111 ( P-42m)
#####################################################################
Acpin111:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin111:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin111:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Azin111:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain111:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
Bxyin111:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return (1 - c1)*x2*y1 + c1*(x2 + y1)*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 112 ( P-42c)
#####################################################################
Acpin112:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin112:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin112:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Bdeltain112:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
Bxyin112:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return (1 - c1)*x2*y1 + c1*(x2 + y1)*y2;
end;
#####################################################################
Bczin112:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*b2 + a2*c1 + b2*z1;
end;
#####################################################################
Bzxyin112:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return (1 + c1)*c2*x1 + c1*c2*y1 + a2*(x1 + y1) + x1*z2 + y1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 113 ( P-42_1m)
#####################################################################
Acpin113:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin113:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Azin113:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain113:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
Bphiin113:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a2*b1 + a1*b2 + a2*b1*b2 + a2*c1 + a1*b2*c1 + a2*x1 + b2*x1 + b2*c1*x1 + a2*y1 + b2*c1*y1;
end;
#####################################################################
Cin113:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3*b1 + a1*a2*a3*b2 + a1*a3*b1*b2 + a1*a2*a3*b1*b2 + a1*a2*b1*b3 + a1*a3*b2*b3 + a3*b1*b2*b3 + a1*a3*b1*b2*b3 + a2*a3*b1*b2*b3 + a1*a2*a3*b1*b2*b3 + a1*a2*a3*c1 + a1*a3*b2*c1 + a1*a2*a3*b2*c1 + a3*b1*b2*c1 + a1*a3*b1*b2*c1 + a1*a2*b3*c1 + a1*a2*b1*b3*c1 + a2*a3*b1*b3*c1 + a1*b2*b3*c1 + a1*a3*b2*b3*c1 + a1*a2*a3*b2*b3*c1 + b1*b2*b3*c1 + a2*a3*b1*b2*b3*c1 + a1*a2*a3*c2 + a1*a3*b1*c2 + a1*a3*b1*b2*c2 + a2*a3*b1*b2*c2 + a1*a2*b3*c2 + a1*b1*b3*c2 + a1*a3*b1*b3*c2 + a2*a3*b1*b3*c2 + a1*a2*a3*b1*b3*c2 + a1*a2*b2*b3*c2 + b1*b2*b3*c2 + a1*b1*b2*b3*c2 + a2*b1*b2*b3*c2 + a2*a3*b1*b2*b3*c2 + a2*a3*c1*c2 + a1*a3*b2*c1*c2 + a3*b1*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a1*b3*c1*c2 + a2*b3*c1*c2 + a1*a2*b3*c1*c2 + a1*a3*b3*c1*c2 + a1*a2*a3*b3*c1*c2 + a1*a2*b1*b3*c1*c2 + a1*a3*b1*b3*c1*c2 + b2*b3*c1*c2 + a1*b2*b3*c1*c2 + a3*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + a2*a3*b2*b3*c1*c2 + a1*b1*b2*b3*c1*c2 + a2*b1*b2*b3*c1*c2 + a3*b1*b2*b3*c1*c2 + a2*a3*b1*b2*b3*c1*c2 + a1*a2*b1*c3 + a1*a2*a3*b1*c3 + a1*b2*c3 + a1*a2*a3*b2*c3 + a3*b1*b2*c3 + a1*a3*b1*b2*c3 + a2*a3*b1*b2*c3 + a1*a2*b1*b3*c3 + a2*b1*b2*b3*c3 + a1*a3*b1*b2*b3*c3 + a1*a2*c1*c3 + a1*a2*a3*c1*c3 + a2*b1*c1*c3 + a1*a3*b2*c1*c3 + b1*b2*c1*c3 + a2*b1*b2*c1*c3 + a1*a3*b1*b2*c1*c3 + a2*a3*b1*b2*c1*c3 + a1*a2*b3*c1*c3 + a2*b1*b3*c1*c3 + a1*a3*b2*b3*c1*c3 + a2*b1*b2*b3*c1*c3 + a3*b1*b2*b3*c1*c3 + a1*a2*a3*c2*c3 + a1*b1*c2*c3 + a2*b1*c2*c3 + a1*b2*c2*c3 + a1*a2*b2*c2*c3 + a1*a3*b2*c2*c3 + b1*b2*c2*c3 + a1*b1*b2*c2*c3 + a2*b1*b2*c2*c3 + a1*a2*b1*b2*c2*c3 + a1*a3*b1*b2*c2*c3 + a1*a2*b3*c2*c3 + a1*b1*b3*c2*c3 + a2*b1*b3*c2*c3 + a1*a2*b1*b3*c2*c3 + a1*b2*b3*c2*c3 + a1*a3*b2*b3*c2*c3 + b1*b2*b3*c2*c3 + a2*b1*b2*b3*c2*c3 + a1*a2*c1*c2*c3 + a2*a3*c1*c2*c3 + a1*b1*c1*c2*c3 + a1*a2*b1*c1*c2*c3 + a2*b2*c1*c2*c3 + a1*a2*b2*c1*c2*c3 + a3*b2*c1*c2*c3 + a1*a3*b2*c1*c2*c3 + b1*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + a1*b3*c1*c2*c3 + a2*b3*c1*c2*c3 + a1*a2*b3*c1*c2*c3 + a1*b1*b3*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + a2*b2*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + b1*b2*b3*c1*c2*c3 + a2*b1*b2*b3*c1*c2*c3 + a2*a3*b1*x1 + a1*a2*a3*b1*x1 + a3*b2*x1 + a1*a3*b2*x1 + a2*a3*b2*x1 + a1*a2*a3*b2*x1 + a3*b1*b2*x1 + a1*a3*b1*b2*x1 + a2*a3*b1*b2*x1 + a2*b3*x1 + a2*b1*b3*x1 + a1*a2*b1*b3*x1 + a1*a2*b2*b3*x1 + a1*b1*b2*b3*x1 + a3*b1*b2*b3*x1 + a2*a3*c1*x1 + a1*a2*a3*c1*x1 + a2*a3*b1*c1*x1 + a3*b2*c1*x1 + a3*b1*b2*c1*x1 + a2*b3*c1*x1 + a1*a2*b3*c1*x1 + a2*b1*b3*c1*x1 + a1*b2*b3*c1*x1 + a2*b2*b3*c1*x1 + a1*a2*b2*b3*c1*x1 + a1*a3*b2*b3*c1*x1 + a2*a3*b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a1*b1*b2*b3*c1*x1 + a1*a2*a3*c2*x1 + a2*a3*b1*c2*x1 + a1*a3*b2*c2*x1 + a1*b3*c2*x1 + a1*a3*b3*c2*x1 + a2*a3*b3*c2*x1 + a1*b1*b3*c2*x1 + a2*b1*b3*c2*x1 + a1*a2*b1*b3*c2*x1 + a1*a3*b1*b3*c2*x1 + a1*b2*b3*c2*x1 + a2*b2*b3*c2*x1 + a1*a2*b2*b3*c2*x1 + a1*a3*b2*b3*c2*x1 + a2*a3*b2*b3*c2*x1 + b1*b2*b3*c2*x1 + a1*b1*b2*b3*c2*x1 + a2*a3*c1*c2*x1 + a1*a3*b2*c1*c2*x1 + a3*b1*b2*c1*c2*x1 + a2*b3*c1*c2*x1 + a2*a3*b3*c1*c2*x1 + a2*b2*b3*c1*c2*x1 + b1*b2*b3*c1*c2*x1 + a1*a2*c3*x1 + a2*a3*c3*x1 + b2*c3*x1 + a3*b2*c3*x1 + a1*b1*b2*c3*x1 + a2*b1*b2*c3*x1 + a3*b1*b2*c3*x1 + a1*b2*b3*c3*x1 + a2*b2*b3*c3*x1 + a2*b1*b2*b3*c3*x1 + a3*b1*b2*b3*c3*x1 + a1*a2*c1*c3*x1 + a2*a3*c1*c3*x1 + b2*c1*c3*x1 + a3*b2*c1*c3*x1 + a1*b1*b2*c1*c3*x1 + a3*b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a1*b2*b3*c1*c3*x1 + a3*b2*b3*c1*c3*x1 + a1*a2*c2*c3*x1 + a2*a3*c2*c3*x1 + b1*c2*c3*x1 + b2*c2*c3*x1 + a1*b2*c2*c3*x1 + a3*b2*c2*c3*x1 + a2*b1*b2*c2*c3*x1 + a3*b1*b2*c2*c3*x1 + a1*b3*c2*c3*x1 + a1*b1*b3*c2*c3*x1 + a1*b2*b3*c2*c3*x1 + a2*b2*b3*c2*c3*x1 + a3*b2*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + b1*c1*c2*c3*x1 + a2*b1*c1*c2*c3*x1 + b2*c1*c2*c3*x1 + a1*b2*c1*c2*c3*x1 + a2*b2*c1*c2*c3*x1 + a3*b2*c1*c2*c3*x1 + a2*b3*c1*c2*c3*x1 + a3*b1*x2 + a1*a3*b1*x2 + a2*a3*b1*x2 + a1*a2*a3*b1*x2 + a1*a2*a3*b2*x2 + a1*a3*b1*b2*x2 + a2*a3*b1*b2*x2 + a1*b3*x2 + a1*a2*b3*x2 + a1*a3*b3*x2 + b1*b3*x2 + a2*b1*b3*x2 + a1*a3*b1*b3*x2 + a1*a2*b2*b3*x2 + b1*b2*b3*x2 + a3*b1*b2*b3*x2 + a3*c1*x2 + a2*a3*c1*x2 + a1*a2*a3*c1*x2 + a3*b1*c1*x2 + a2*a3*b1*c1*x2 + a3*b2*c1*x2 + a3*b1*b2*c1*x2 + a2*a3*b1*b2*c1*x2 + a1*b3*c1*x2 + a3*b3*c1*x2 + a1*a3*b3*c1*x2 + b1*b3*c1*x2 + a2*b1*b3*c1*x2 + b2*b3*c1*x2 + a2*b1*b2*b3*c1*x2 + a1*a2*a3*c2*x2 + a3*b1*c2*x2 + a1*a3*b1*c2*x2 + a2*a3*b1*c2*x2 + a1*a3*b2*c2*x2 + a3*b1*b2*c2*x2 + a1*b3*c2*x2 + a1*a3*b3*c2*x2 + b1*b3*c2*x2 + a2*b1*b3*c2*x2 + a1*a2*b1*b3*c2*x2 + a1*a3*b1*b3*c2*x2 + a1*a2*b2*b3*c2*x2 + a1*a3*b2*b3*c2*x2 + a1*b1*b2*b3*c2*x2 + a3*c1*c2*x2 + a3*b1*c1*c2*x2 + a2*a3*b1*c1*c2*x2 + a3*b1*b2*c1*c2*x2 + a1*b3*c1*c2*x2 + a2*b3*c1*c2*x2 + a1*a2*b3*c1*c2*x2 + a3*b3*c1*c2*x2 + a1*a3*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a2*b1*b3*c1*c2*x2 + a1*b2*b3*c1*c2*x2 + b1*b2*b3*c1*c2*x2 + a2*b1*b2*b3*c1*c2*x2 + a3*b1*b2*b3*c1*c2*x2 + a1*a2*c3*x2 + a1*b1*c3*x2 + a2*b1*c3*x2 + a3*b1*c3*x2 + a1*b2*c3*x2 + b1*b2*c3*x2 + a2*b1*b2*c3*x2 + a1*b3*c3*x2 + b1*b3*c3*x2 + a1*b1*b3*c3*x2 + a1*b2*b3*c3*x2 + b1*b2*b3*c3*x2 + a2*b1*b2*b3*c3*x2 + a3*b1*b2*b3*c3*x2 + c1*c3*x2 + b1*c1*c3*x2 + a2*b1*c1*c3*x2 + a1*b1*b2*c1*c3*x2 + b3*c1*c3*x2 + a1*b3*c1*c3*x2 + b2*b3*c1*c3*x2 + a1*b2*b3*c1*c3*x2 + b1*b2*b3*c1*c3*x2 + a1*a2*c2*c3*x2 + a1*b1*c2*c3*x2 + a3*b1*c2*c3*x2 + a1*b2*c2*c3*x2 + a2*b1*b2*c2*c3*x2 + a3*b1*b2*c2*c3*x2 + a1*b3*c2*c3*x2 + b1*b3*c2*c3*x2 + a1*b1*b3*c2*c3*x2 + a1*b2*b3*c2*c3*x2 + c1*c2*c3*x2 + a1*b1*c1*c2*c3*x2 + a2*b1*c1*c2*c3*x2 + b2*c1*c2*c3*x2 + a1*b2*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + b3*c1*c2*c3*x2 + a1*b3*c1*c2*c3*x2 + b1*b2*b3*c1*c2*c3*x2 + a2*a3*c1*x1*x2 + b3*c1*x1*x2 + a3*b3*c1*x1*x2 + b3*c1*c2*x1*x2 + a2*b3*c1*c2*x1*x2 + a3*b3*c1*c2*x1*x2 + b2*b3*c1*c2*x1*x2 + b1*b2*c1*c3*x1*x2 + b3*c1*c3*x1*x2 + b2*b3*c1*c3*x1*x2 + b1*c1*c2*c3*x1*x2 + b2*c1*c2*c3*x1*x2 + b3*c1*c2*c3*x1*x2 + a1*a2*x3 + a2*b1*x3 + a1*a2*b1*x3 + a1*a2*a3*b1*x3 + a1*a2*b2*x3 + a1*a3*b2*x3 + a1*a2*a3*b2*x3 + b1*b2*x3 + a1*a3*b1*b2*x3 + a2*a3*b1*b2*x3 + a1*a2*b3*x3 + a1*a2*b2*b3*x3 + a1*a3*b2*b3*x3 + a2*a3*c1*x3 + a1*a2*a3*c1*x3 + a1*a2*b1*c1*x3 + a2*a3*b1*c1*x3 + a3*b2*c1*x3 + b1*b2*c1*x3 + a2*b1*b2*c1*x3 + a2*a3*b1*b2*c1*x3 + a2*b1*b3*c1*x3 + b2*b3*c1*x3 + a2*b1*b2*b3*c1*x3 + a3*b1*b2*b3*c1*x3 + a1*a2*c2*x3 + a1*a2*a3*c2*x3 + a2*b1*c2*x3 + a1*a2*b1*c2*x3 + a1*a3*b1*c2*x3 + a2*a3*b1*c2*x3 + a1*a2*b2*c2*x3 + b1*b2*c2*x3 + a3*b1*b2*c2*x3 + a2*a3*b1*b2*c2*x3 + a1*b1*b3*c2*x3 + a2*b1*b3*c2*x3 + a1*b1*b2*b3*c2*x3 + a2*b1*b2*b3*c2*x3 + a3*b1*b2*b3*c2*x3 + a1*a2*c1*c2*x3 + a3*c1*c2*x3 + a2*a3*c1*c2*x3 + a2*b1*c1*c2*x3 + a3*b1*c1*c2*x3 + a1*b2*c1*c2*x3 + a3*b2*c1*c2*x3 + a1*a3*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a1*b1*b2*c1*c2*x3 + a2*b1*b2*c1*c2*x3 + a3*b1*b2*c1*c2*x3 + b3*c1*c2*x3 + b1*b3*c1*c2*x3 + b2*b3*c1*c2*x3 + b1*b2*b3*c1*c2*x3 + a1*a2*c3*x3 + b1*b2*c3*x3 + a2*b1*b2*c3*x3 + a2*b1*b2*b3*c3*x3 + a3*b1*b2*b3*c3*x3 + a2*b1*c1*c3*x3 + b1*b2*c1*c3*x3 + a1*b1*b2*c1*c3*x3 + b2*b3*c1*c3*x3 + a1*b2*b3*c1*c3*x3 + b1*c2*c3*x3 + a1*b1*c2*c3*x3 + a2*b1*c2*c3*x3 + a3*b1*c2*c3*x3 + a1*b2*c2*c3*x3 + b1*b2*c2*c3*x3 + a1*b1*b2*c2*c3*x3 + a2*b1*b2*c2*c3*x3 + a3*b1*b2*c2*c3*x3 + b1*b3*c2*c3*x3 + a1*b2*b3*c2*c3*x3 + c1*c2*c3*x3 + b1*c1*c2*c3*x3 + b2*b3*c1*c2*c3*x3 + a1*a2*c1*x1*x3 + a2*a3*c1*x1*x3 + a2*b1*c1*x1*x3 + a1*a2*c2*x1*x3 + a2*a3*c2*x1*x3 + a2*b1*c2*x1*x3 + a1*b2*c2*x1*x3 + a3*b2*c2*x1*x3 + b1*b2*c2*x1*x3 + a1*b2*c1*c2*x1*x3 + a3*b2*c1*c2*x1*x3 + b1*b2*c1*c2*x1*x3 + b1*b2*c1*c3*x1*x3 + b2*b3*c1*c3*x1*x3 + b1*b2*c2*c3*x1*x3 + b2*b3*c2*c3*x1*x3 + a1*a2*c2*x2*x3 + a1*b1*c2*x2*x3 + a2*b1*c2*x2*x3 + a1*b2*c2*x2*x3 + b1*b2*c2*x2*x3 + c1*c2*x2*x3 + b1*c1*c2*x2*x3 + a2*b1*c1*c2*x2*x3 + b1*b2*c1*c2*x2*x3 + b1*c2*c3*x2*x3 + b1*b2*c2*c3*x2*x3 + a2*a3*y1 + a1*a2*a3*b1*y1 + a2*a3*b2*y1 + a1*a2*a3*b2*y1 + a1*a3*b1*b2*y1 + a1*a2*b1*b3*y1 + a1*b2*b3*y1 + a2*b2*b3*y1 + a1*a3*b2*b3*y1 + a2*a3*b2*b3*y1 + a1*a2*a3*c1*y1 + a3*b1*b2*c1*y1 + a1*a2*b3*c1*y1 + a1*b2*b3*c1*y1 + a2*b2*b3*c1*y1 + a1*a2*b2*b3*c1*y1 + a1*a3*b2*b3*c1*y1 + a2*a3*b2*b3*c1*y1 + b1*b2*b3*c1*y1 + a1*b1*b2*b3*c1*y1 + a2*b1*b2*b3*c1*y1 + a3*b1*b2*b3*c1*y1 + a2*a3*c2*y1 + a1*a2*a3*c2*y1 + a3*b1*b2*c2*y1 + a2*b3*c2*y1 + a1*a2*b3*c2*y1 + a1*b1*b3*c2*y1 + a1*a2*b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + a1*b2*b3*c2*y1 + a1*a2*b2*b3*c2*y1 + a1*a3*b2*b3*c2*y1 + a2*a3*b2*b3*c2*y1 + a1*b1*b2*b3*c2*y1 + a2*b1*b2*b3*c2*y1 + a3*b1*b2*b3*c2*y1 + a2*a3*c1*c2*y1 + a1*a3*b2*c1*c2*y1 + b3*c1*c2*y1 + a3*b3*c1*c2*y1 + a2*a3*b3*c1*c2*y1 + a2*b2*b3*c1*c2*y1 + b1*b2*b3*c1*c2*y1 + a1*b2*c3*y1 + a1*b1*b2*c3*y1 + a2*b1*b2*c3*y1 + a2*b3*c3*y1 + a1*b2*b3*c3*y1 + a2*b2*b3*c3*y1 + a3*b2*b3*c3*y1 + a2*b1*b2*b3*c3*y1 + a3*b1*b2*b3*c3*y1 + a1*a2*c1*c3*y1 + a2*a3*c1*c3*y1 + a2*b1*c1*c3*y1 + a3*b2*c1*c3*y1 + a1*b1*b2*c1*c3*y1 + a3*b1*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + b2*b3*c1*c3*y1 + a1*b2*b3*c1*c3*y1 + a3*b2*b3*c1*c3*y1 + b1*b2*b3*c1*c3*y1 + a1*a2*c2*c3*y1 + a2*a3*c2*c3*y1 + a1*b1*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + a2*b1*b2*c2*c3*y1 + a3*b1*b2*c2*c3*y1 + a2*b3*c2*c3*y1 + a1*b1*b3*c2*c3*y1 + a1*b2*b3*c2*c3*y1 + a2*b2*b3*c2*c3*y1 + a3*b2*b3*c2*c3*y1 + a2*b1*c1*c2*c3*y1 + a1*b2*c1*c2*c3*y1 + a2*b2*c1*c2*c3*y1 + a3*b2*c1*c2*c3*y1 + b1*b2*c1*c2*c3*y1 + b3*c1*c2*c3*y1 + a2*b3*c1*c2*c3*y1 + a2*a3*x1*y1 + a3*b2*x1*y1 + a2*b3*x1*y1 + b3*c2*x1*y1 + a2*b3*c2*x1*y1 + a3*b3*c2*x1*y1 + b2*c3*x1*y1 + b1*b2*c3*x1*y1 + b2*b3*c3*x1*y1 + b1*c2*c3*x1*y1 + b2*c2*c3*x1*y1 + b3*c2*c3*x1*y1 + a2*a3*x2*y1 + b3*x2*y1 + a3*b3*x2*y1 + a2*a3*c1*x2*y1 + b3*c1*x2*y1 + a3*b3*c1*x2*y1 + b3*c2*x2*y1 + a2*b3*c2*x2*y1 + a3*b3*c2*x2*y1 + b2*b3*c2*x2*y1 + b3*c1*c2*x2*y1 + a2*b3*c1*c2*x2*y1 + a3*b3*c1*c2*x2*y1 + b2*b3*c1*c2*x2*y1 + b1*b2*c3*x2*y1 + b3*c3*x2*y1 + b2*b3*c3*x2*y1 + b1*b2*c1*c3*x2*y1 + b3*c1*c3*x2*y1 + b2*b3*c1*c3*x2*y1 + b1*c2*c3*x2*y1 + b2*c2*c3*x2*y1 + b3*c2*c3*x2*y1 + b1*c1*c2*c3*x2*y1 + b2*c1*c2*c3*x2*y1 + b3*c1*c2*c3*x2*y1 + a1*a2*x3*y1 + a2*a3*x3*y1 + a1*a2*c1*x3*y1 + a2*a3*c1*x3*y1 + a1*a2*c2*x3*y1 + a2*a3*c2*x3*y1 + a1*b2*c1*c2*x3*y1 + a3*b2*c1*c2*x3*y1 + b1*b2*c3*x3*y1 + b2*b3*c3*x3*y1 + b1*b2*c1*c3*x3*y1 + b2*b3*c1*c3*x3*y1 + b1*b2*c2*c3*x3*y1 + b2*b3*c2*c3*x3*y1 + a1*a2*a3*b1*y2 + a1*a2*a3*b2*y2 + a1*a3*b1*b2*y2 + a1*a2*b1*b3*y2 + a1*b2*b3*y2 + a1*a3*b2*b3*y2 + a1*a2*a3*c1*y2 + a1*a3*b2*c1*y2 + a2*a3*b1*b2*c1*y2 + a1*a2*b3*c1*y2 + b1*b2*b3*c1*y2 + a3*b1*b2*b3*c1*y2 + a1*a2*a3*c2*y2 + a3*b1*b2*c2*y2 + a1*a2*b3*c2*y2 + a1*b1*b3*c2*y2 + a1*a2*b1*b3*c2*y2 + a1*a3*b1*b3*c2*y2 + a1*b2*b3*c2*y2 + a1*a2*b2*b3*c2*y2 + a1*a3*b2*b3*c2*y2 + a1*b1*b2*b3*c2*y2 + a2*b1*b2*b3*c2*y2 + a3*b1*b2*b3*c2*y2 + a2*a3*b1*c1*c2*y2 + a1*b3*c1*c2*y2 + a1*a2*b3*c1*c2*y2 + a1*a3*b3*c1*c2*y2 + a2*b1*b3*c1*c2*y2 + a2*b1*b2*b3*c1*c2*y2 + a3*b1*b2*b3*c1*c2*y2 + a1*b1*c3*y2 + a1*b2*c3*y2 + a1*b1*b2*c3*y2 + a2*b1*b2*c3*y2 + a1*b2*b3*c3*y2 + a2*b1*b2*b3*c3*y2 + a3*b1*b2*b3*c3*y2 + a1*b1*c1*c3*y2 + a1*b2*c1*c3*y2 + a1*b1*b2*c1*c3*y2 + a1*b2*b3*c1*c3*y2 + a1*a2*c2*c3*y2 + a1*b1*c2*c3*y2 + a1*b2*c2*c3*y2 + a2*b1*b2*c2*c3*y2 + a3*b1*b2*c2*c3*y2 + a1*b1*b3*c2*c3*y2 + a1*b2*b3*c2*c3*y2 + a1*b1*c1*c2*c3*y2 + a2*b1*c1*c2*c3*y2 + a1*b2*c1*c2*c3*y2 + a1*b3*c1*c2*c3*y2 + b1*b2*b3*c1*c2*c3*y2 + a2*a3*x1*y2 + a3*b2*x1*y2 + a2*b3*x1*y2 + a2*a3*c1*x1*y2 + a3*b2*c1*x1*y2 + a2*b3*c1*x1*y2 + b3*c2*x1*y2 + a2*b3*c2*x1*y2 + a3*b3*c2*x1*y2 + b3*c1*c2*x1*y2 + a2*b3*c1*c2*x1*y2 + a3*b3*c1*c2*x1*y2 + b1*c3*x1*y2 + b2*c3*x1*y2 + b1*b2*c3*x1*y2 + b2*b3*c3*x1*y2 + b1*c1*c3*x1*y2 + b2*c1*c3*x1*y2 + b1*b2*c1*c3*x1*y2 + b2*b3*c1*c3*x1*y2 + b1*c2*c3*x1*y2 + b2*c2*c3*x1*y2 + b3*c2*c3*x1*y2 + b1*c1*c2*c3*x1*y2 + b2*c1*c2*c3*x1*y2 + b3*c1*c2*c3*x1*y2 + b1*b2*c3*x2*y2 + b1*c2*c3*x2*y2 + a1*a2*x3*y2 + a2*b1*c1*x3*y2 + a1*a2*c2*x3*y2 + a2*b1*c1*c2*x3*y2 + b1*b2*c3*x3*y2 + b1*b2*c2*c3*x3*y2 + a2*a3*c1*y1*y2 + a3*b2*c1*y1*y2 + a2*b3*c1*y1*y2 + b3*c1*c2*y1*y2 + a2*b3*c1*c2*y1*y2 + a3*b3*c1*c2*y1*y2 + b1*c1*c3*y1*y2 + b2*c1*c3*y1*y2 + b1*b2*c1*c3*y1*y2 + b2*b3*c1*c3*y1*y2 + b1*c1*c2*c3*y1*y2 + b2*c1*c2*c3*y1*y2 + b3*c1*c2*c3*y1*y2 + a1*a2*a3*b1*y3 + a1*a2*a3*b2*y3 + a1*b1*b2*y3 + a1*a3*b1*b2*y3 + a1*a2*b1*b3*y3 + a1*b2*b3*y3 + a1*a3*b2*b3*y3 + a1*a2*c1*y3 + a1*a2*a3*c1*y3 + a2*b1*c1*y3 + a1*a2*b1*c1*y3 + a1*b2*c1*y3 + a1*a3*b2*c1*y3 + a2*a3*b1*b2*c1*y3 + a1*a2*b3*c1*y3 + b1*b2*b3*c1*y3 + a3*b1*b2*b3*c1*y3 + a1*a2*a3*c2*y3 + a2*b1*c2*y3 + a1*a2*b1*c2*y3 + a1*a2*b2*c2*y3 + a1*a3*b2*c2*y3 + a1*b1*b2*c2*y3 + a2*b1*b2*c2*y3 + a3*b1*b2*c2*y3 + a2*a3*b1*b2*c2*y3 + a1*a2*b3*c2*y3 + a1*b2*b3*c2*y3 + b1*b2*b3*c2*y3 + a1*b1*b2*b3*c2*y3 + a3*b1*b2*b3*c2*y3 + a1*a2*c1*c2*y3 + a2*a3*c1*c2*y3 + a1*b2*c1*c2*y3 + a3*b2*c1*c2*y3 + a1*a3*b2*c1*c2*y3 + a1*b1*b2*c1*c2*y3 + a2*b1*b2*c1*c2*y3 + a2*b3*c1*c2*y3 + b2*b3*c1*c2*y3 + a1*b2*b3*c1*c2*y3 + a1*b1*b2*c3*y3 + a1*b2*b3*c3*y3 + a2*b1*b2*b3*c3*y3 + a3*b1*b2*b3*c3*y3 + a1*b1*b2*c1*c3*y3 + a1*b2*b3*c1*c3*y3 + b1*b2*c2*c3*y3 + a1*b1*b2*c2*c3*y3 + a2*b1*b2*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + a1*b2*b3*c2*c3*y3 + b1*b2*b3*c2*c3*y3 + b1*b2*c1*c2*c3*y3 + b2*b3*c1*c2*c3*y3 + a1*a2*x1*y3 + a2*a3*x1*y3 + a2*b1*x1*y3 + a1*b2*x1*y3 + a3*b2*x1*y3 + a2*b3*x1*y3 + a1*a2*c1*x1*y3 + a2*a3*c1*x1*y3 + a2*b1*c1*x1*y3 + a1*b2*c1*x1*y3 + a3*b2*c1*x1*y3 + a2*b3*c1*x1*y3 + a1*a2*c2*x1*y3 + a2*a3*c2*x1*y3 + a2*b1*c2*x1*y3 + a1*b2*c2*x1*y3 + a3*b2*c2*x1*y3 + a2*b3*c2*x1*y3 + a1*b2*c1*c2*x1*y3 + a3*b2*c1*c2*x1*y3 + b1*b2*c1*c2*x1*y3 + b2*b3*c1*c2*x1*y3 + b1*b2*c3*x1*y3 + b2*b3*c3*x1*y3 + b1*b2*c1*c3*x1*y3 + b2*b3*c1*c3*x1*y3 + b1*b2*c2*c3*x1*y3 + b2*b3*c2*c3*x1*y3 + a1*a2*x2*y3 + b1*x2*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a1*b2*x2*y3 + c1*x2*y3 + b1*c1*x2*y3 + a2*b1*c1*x2*y3 + b1*b2*c1*x2*y3 + a1*a2*c2*x2*y3 + b1*c2*x2*y3 + a1*b1*c2*x2*y3 + a2*b1*c2*x2*y3 + a1*b2*c2*x2*y3 + c1*c2*x2*y3 + b1*c1*c2*x2*y3 + a2*b1*c1*c2*x2*y3 + b1*b2*c1*c2*x2*y3 + b1*c3*x2*y3 + b1*b2*c3*x2*y3 + b1*c2*c3*x2*y3 + b1*b2*c2*c3*x2*y3 + a1*a2*x3*y3 + a2*b1*c1*x3*y3 + a1*b1*c2*x3*y3 + a2*b1*c2*x3*y3 + a1*b2*c2*x3*y3 + b1*b2*c2*x3*y3 + c1*c2*x3*y3 + b1*c1*c2*x3*y3 + b1*b2*c1*c2*x3*y3 + b1*b2*c3*x3*y3 + b1*c2*c3*x3*y3 + a1*a2*c1*y1*y3 + a2*a3*c1*y1*y3 + a1*b2*c1*y1*y3 + a3*b2*c1*y1*y3 + b1*b2*c1*y1*y3 + a2*b3*c1*y1*y3 + a1*a2*c2*y1*y3 + a2*a3*c2*y1*y3 + b1*b2*c2*y1*y3 + a2*b3*c2*y1*y3 + b2*b3*c2*y1*y3 + a1*b2*c1*c2*y1*y3 + a3*b2*c1*c2*y1*y3 + b2*b3*c1*c2*y1*y3 + b1*b2*c1*c3*y1*y3 + b2*b3*c1*c3*y1*y3 + b1*b2*c2*c3*y1*y3 + b2*b3*c2*c3*y1*y3 + a1*a2*c2*y2*y3 + b1*b2*c2*y2*y3 + a2*b1*c1*c2*y2*y3 + b1*b2*c2*c3*y2*y3;
end;
#####################################################################
#####################################################################
#Space Group No. 114 ( P-42_1c)
#####################################################################
Acpin114:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin114:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Bdeltain114:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
Bcxyin114:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a2*b1 + a1*b2 + a2*b1*b2 + a2*c1 + a1*b2*c1 + a2*x1 + b2*x1 + b2*c1*x1 + a2*y1 + b2*c1*y1;
end;
#####################################################################
Bcxyzin114:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a2*b1 + a1*b2 + a2*b1*b2 + a2*c1 + a2*b2*c1 + a2*x1 + b2*x1 + b2*c1*x1 + a2*y1 + b2*c1*y1 + b2*z1;
end;
#####################################################################
C1in114:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a3*b1*b2 + a1*a2*b1*b3 + a1*b2*b3 + a1*a3*b2*c1 + a3*b1*b2*c1 + a1*a2*b3*c1 + a2*b1*b3*c1 + a1*b2*b3*c1 + a2*b2*b3*c1 + a3*b1*b2*c2 + a1*b3*c2 + a1*a2*b3*c2 + a1*b1*b3*c2 + a2*b1*b3*c2 + a3*b1*b3*c2 + a1*b2*b3*c2 + a1*a2*b2*b3*c2 + a3*b1*c1*c2 + a3*b2*c1*c2 + a3*b3*c1*c2 + a1*b1*b3*c1*c2 + a2*b1*b3*c1*c2 + b2*b3*c1*c2 + a1*b2*b3*c1*c2 + a2*b2*b3*c1*c2 + a3*b2*b3*c1*c2 + a2*b1*c3 + a1*b1*b2*c3 + a2*b1*b2*c3 + a3*b1*b2*c3 + a1*b2*b3*c3 + a3*b2*x1 + a2*b3*x1 + a3*b2*c1*x1 + a3*b1*b2*c1*x1 + a2*b3*c1*x1 + a2*b1*b3*c1*x1 + a3*b2*b3*c1*x1 + a3*b1*c2*x1 + a3*b2*c2*x1 + b3*c2*x1 + a1*b3*c2*x1 + a2*b3*c2*x1 + b1*b3*c2*x1 + a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a3*b2*b3*c2*x1 + b3*c1*c2*x1 + b1*b3*c1*c2*x1 + b2*b3*c1*c2*x1 + b1*b2*c3*x1 + b2*b3*c3*x1 + a1*a3*x2 + a1*a2*b3*x2 + a1*a3*b3*x2 + a1*a3*b2*b3*x2 + a3*c1*x2 + a3*b1*c1*x2 + a3*b2*c1*x2 + a3*b1*b3*c1*x2 + a3*b2*b3*c1*x2 + a3*b1*c2*x2 + a1*a3*b2*c2*x2 + a1*a3*b3*c2*x2 + b1*b3*c2*x2 + a3*b1*b3*c2*x2 + a3*c1*c2*x2 + b1*b3*c1*c2*x2 + b1*b2*c3*x2 + b1*b3*c1*x1*x2 + a1*b2*x3 + a1*a2*b2*x3 + a1*a2*b3*x3 + a1*a3*b2*b3*x3 + a3*b2*c1*x3 + b1*b2*c1*x3 + b2*b3*c1*x3 + a1*b2*b3*c1*x3 + a2*b2*b3*c1*x3 + a3*b2*b3*c1*x3 + b1*c2*x3 + a1*b1*c2*x3 + a1*a3*b2*c2*x3 + b1*b2*c2*x3 + a1*b3*c2*x3 + a1*a3*b3*c2*x3 + a1*b2*b3*c2*x3 + c1*c2*x3 + a2*c1*c2*x3 + a3*c1*c2*x3 + b1*c1*c2*x3 + b2*c1*c2*x3 + a3*b2*c1*c2*x3 + a1*b3*c1*c2*x3 + a2*b3*c1*c2*x3 + b1*b2*c3*x3 + b1*b2*c1*x1*x3 + b2*b3*c1*x1*x3 + c2*x1*x3 + b1*b3*c2*x1*x3 + b2*b3*c2*x1*x3 + c1*x2*x3 + b1*b3*c1*x2*x3 + b2*b3*c1*x2*x3 + a1*b2*c2*x2*x3 + a1*b3*c2*x2*x3 + b1*b3*c2*x2*x3 + a3*b2*c1*y1 + a3*b1*b2*c1*y1 + a2*b3*c1*y1 + a2*b1*b3*c1*y1 + a3*b2*b3*c1*y1 + a3*b1*c2*y1 + a3*b2*c2*y1 + a1*b3*c2*y1 + a2*b3*c2*y1 + a3*b1*b3*c2*y1 + b2*b3*c2*y1 + a3*b2*b3*c2*y1 + b1*b3*c1*c2*y1 + b2*b3*c1*c2*y1 + b1*b2*c3*y1 + b2*b3*c3*y1 + b1*b3*c1*x2*y1 + b1*b2*c1*x3*y1 + b2*b3*c1*x3*y1 + b1*b3*c2*x3*y1 + b2*b3*c2*x3*y1 + a1*a3*y2 + a1*a2*b3*y2 + a1*a3*b3*y2 + a1*a3*b2*b3*y2 + a3*b1*c1*y2 + b1*b3*c1*y2 + a3*b1*b3*c1*y2 + a3*b2*b3*c1*y2 + a3*b1*c2*y2 + a1*a3*b2*c2*y2 + a1*b3*c2*y2 + a1*a3*b3*c2*y2 + a3*b1*b3*c2*y2 + a1*b2*b3*c2*y2 + b1*b3*c1*c2*y2 + b2*b3*c1*c2*y2 + b1*b2*c3*y2 + b1*b3*c1*x1*y2 + a1*b3*x2*y2 + a1*b2*x3*y2 + a1*b3*x3*y2 + b1*b3*c1*x3*y2 + b2*b3*c1*x3*y2 + a1*b2*c2*x3*y2 + a1*b3*c2*x3*y2 + b1*b3*c2*x3*y2 + c1*c2*x3*y2 + b1*b3*c1*y1*y2 + a1*a2*b2*y3 + a1*a2*b3*y3 + a1*a3*b2*b3*y3 + b1*b2*c1*y3 + a1*b2*b3*c1*y3 + a2*b2*b3*c1*y3 + a3*b2*b3*c1*y3 + a1*b1*c2*y3 + a1*a3*b2*c2*y3 + b1*b2*c2*y3 + a1*a3*b3*c2*y3 + a2*c1*c2*y3 + b1*c1*c2*y3 + a3*b2*c1*c2*y3 + a1*b3*c1*c2*y3 + a2*b3*c1*c2*y3 + b2*b3*c1*c2*y3 + b1*b2*c3*y3 + b1*b2*c1*x1*y3 + b2*b3*c1*x1*y3 + c2*x1*y3 + b1*b3*c2*x1*y3 + b2*b3*c2*x1*y3 + a1*b2*x2*y3 + a1*b3*x2*y3 + b1*b3*c1*x2*y3 + b2*b3*c1*x2*y3 + a1*b2*c2*x2*y3 + a1*b3*c2*x2*y3 + b1*b3*c2*x2*y3 + a1*b2*x3*y3 + b2*b3*c1*x3*y3 + c1*c2*x3*y3 + b1*b2*c1*y1*y3 + b2*b3*c1*y1*y3 + b1*b3*c2*y1*y3 + b2*b3*c2*y1*y3 + b1*b3*c1*y2*y3 + b2*b3*c1*y2*y3 + a1*b2*c2*y2*y3 + a1*b3*c2*y2*y3 + b1*b3*c2*y2*y3 + c1*c2*y2*y3 + a3*b1*b2*c1*z1 + a2*b1*b3*c1*z1 + a3*b2*b3*c1*z1 + a3*b1*c2*z1 + a3*b2*c2*z1 + a1*b3*c2*z1 + a3*b1*b3*c2*z1 + a1*b2*b3*c2*z1 + a3*b2*b3*c2*z1 + a3*c1*c2*z1 + b1*b3*c1*c2*z1 + b2*b3*c1*c2*z1 + a1*b3*x2*z1 + b1*b3*c1*x2*z1 + a1*b2*x3*z1 + a2*b3*x3*z1 + b1*b2*c1*x3*z1 + c2*x3*z1 + b1*b3*c2*x3*z1 + b2*b3*c2*x3*z1 + c1*c2*x3*z1 + a1*b3*y2*z1 + b1*b3*c1*y2*z1 + a1*b2*y3*z1 + a2*b3*y3*z1 + b1*b2*c1*y3*z1 + b1*b3*c2*y3*z1 + b2*b3*c2*y3*z1 + c1*c2*y3*z1 + a3*b1*c1*z2 + a3*b1*b3*c1*z2 + a3*b2*b3*c1*z2 + a3*b1*c2*z2 + a1*b3*c2*z2 + a3*b1*b3*c2*z2 + a1*b2*b3*c2*z2 + a3*c1*c2*z2 + b2*b3*c1*c2*z2 + b1*c3*z2 + a1*b3*x2*z2 + a1*b2*x3*z2 + b1*b3*c1*x3*z2 + b1*b3*c2*x3*z2 + c1*c2*x3*z2 + a1*b3*y2*z2 + a1*b2*y3*z2 + b1*b3*c1*y3*z2 + b1*b3*c2*y3*z2 + c1*c2*y3*z2 + a3*b2*c1*z3 + a1*b3*c2*z3 + a1*b2*b3*c2*z3 + a3*c1*c2*z3 + b2*c1*c2*z3 + b2*b3*c1*c2*z3 + a1*b2*x2*z3 + a1*b3*x2*z3 + c1*x2*z3 + a1*b2*x3*z3 + b2*b3*c1*x3*z3 + c1*c2*x3*z3 + a1*b2*y2*z3 + a1*b3*y2*z3 + a1*b2*y3*z3 + b2*b3*c1*y3*z3 + c1*c2*y3*z3 + c2*z1*z3;
end;
#####################################################################
C2in114:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a3*b1*b2 + a2*b1*b3 + a1*a2*b1*b3 + a1*a3*b2*b3 + a1*a3*b1*b2*c1 + a1*a2*b3*c1 + a2*b1*b3*c1 + a1*b2*b3*c1 + a1*a3*b1*b2*c2 + a1*b1*b3*c2 + a2*b1*b3*c2 + a1*a3*b2*b3*c2 + a3*c1*c2 + a1*a3*c1*c2 + a1*a3*b1*c1*c2 + a1*b3*c1*c2 + a3*b3*c1*c2 + b1*b3*c1*c2 + a3*b1*b3*c1*c2 + b2*b3*c1*c2 + a3*b2*b3*c1*c2 + a1*b1*b2*c3 + a2*b1*b2*c3 + a3*b1*b2*c3 + a1*b2*b3*c3 + a3*b2*x1 + a3*b1*b2*x1 + a2*b3*x1 + b2*b3*x1 + a1*b2*b3*x1 + b2*b3*c1*x1 + a1*b2*b3*c1*x1 + a3*c2*x1 + a3*b2*c2*x1 + b3*c2*x1 + a1*b3*c2*x1 + a3*b3*c2*x1 + a1*b1*b3*c2*x1 + a1*b2*b3*c2*x1 + a2*b2*b3*c2*x1 + a3*c1*c2*x1 + a3*b2*c1*c2*x1 + b3*c1*c2*x1 + b1*b2*c3*x1 + b2*b3*c3*x1 + a3*b1*x2 + a1*a3*b1*x2 + a1*a3*b2*x2 + a3*b1*b2*x2 + a1*b2*b3*x2 + a1*a3*b2*b3*x2 + a1*a3*c1*x2 + a3*b1*c1*x2 + a1*a3*b2*c1*x2 + a3*b1*b2*c1*x2 + a1*b3*c1*x2 + a2*b3*c1*x2 + a1*b1*b3*c1*x2 + a3*b1*b3*c1*x2 + b2*b3*c1*x2 + a1*b2*b3*c1*x2 + a3*b2*b3*c1*x2 + a1*a3*b2*c2*x2 + a1*a3*b3*c2*x2 + b1*b3*c2*x2 + a1*a3*c1*c2*x2 + a3*b2*c1*c2*x2 + a1*b3*c1*c2*x2 + a3*b3*c1*c2*x2 + a1*b2*b3*c1*c2*x2 + b1*b2*c3*x2 + a3*c1*x1*x2 + a1*a2*b1*x3 + a1*b2*x3 + a1*b1*b2*x3 + a1*b2*b3*x3 + a1*a3*b2*b3*x3 + a2*c1*x3 + a1*a2*c1*x3 + a2*b1*c1*x3 + a1*a3*b2*c1*x3 + b1*b2*c1*x3 + a1*b1*b2*c1*x3 + a2*b1*b2*c1*x3 + a2*b1*b3*c1*x3 + b2*b3*c1*x3 + a1*b2*b3*c1*x3 + a1*c2*x3 + a1*a3*c2*x3 + b1*c2*x3 + a2*b1*c2*x3 + a3*b1*c2*x3 + a1*b2*c2*x3 + a1*a3*b2*c2*x3 + b1*b2*c2*x3 + a1*b1*b2*c2*x3 + a1*b3*c2*x3 + a1*a3*b3*c2*x3 + a1*b1*b3*c2*x3 + a3*b1*b3*c2*x3 + a1*b2*b3*c2*x3 + a1*c1*c2*x3 + a3*c1*c2*x3 + a1*a3*c1*c2*x3 + b1*c1*c2*x3 + a1*b1*c1*c2*x3 + b2*c1*c2*x3 + a3*b2*c1*c2*x3 + a3*b3*c1*c2*x3 + b1*b3*c1*c2*x3 + b1*b2*c3*x3 + a2*x1*x3 + b2*x1*x3 + a2*c1*x1*x3 + b2*c1*x1*x3 + a3*c2*x1*x3 + b2*c2*x1*x3 + b3*c2*x1*x3 + b2*c1*c2*x1*x3 + b1*c1*x2*x3 + b2*c1*x2*x3 + a1*b2*c2*x2*x3 + a1*b3*c2*x2*x3 + a1*c1*c2*x2*x3 + b2*c1*c2*x2*x3 + a3*b2*y1 + a2*b3*y1 + a2*b1*b3*y1 + a3*b2*b3*y1 + a2*b3*c1*y1 + a1*b2*b3*c1*y1 + a3*b1*c2*y1 + a3*b2*c2*y1 + a1*b1*b3*c2*y1 + b2*b3*c2*y1 + a1*b2*b3*c2*y1 + a2*b2*b3*c2*y1 + a3*c1*c2*y1 + a3*b2*c1*c2*y1 + b3*c1*c2*y1 + b2*b3*c1*c2*y1 + b1*b2*c3*y1 + b2*b3*c3*y1 + b3*c2*x1*y1 + a3*x2*y1 + a3*c1*x2*y1 + a2*c1*x3*y1 + a3*c2*x3*y1 + b1*c2*x3*y1 + b2*c2*x3*y1 + b3*c2*x3*y1 + b2*c1*c2*x3*y1 + a1*a3*b1*y2 + a1*a3*b2*y2 + a2*b1*b3*y2 + a1*a3*b2*b3*y2 + a1*a3*c1*y2 + a3*b1*c1*y2 + a1*a3*b2*c1*y2 + a3*b1*b2*c1*y2 + b1*b3*c1*y2 + a1*b1*b3*c1*y2 + a3*b1*b3*c1*y2 + a3*b2*b3*c1*y2 + a3*b1*c2*y2 + a1*a3*b2*c2*y2 + a1*a3*b3*c2*y2 + a1*b2*b3*c2*y2 + a1*a3*c1*c2*y2 + a3*b2*c1*c2*y2 + a3*b3*c1*c2*y2 + b2*b3*c1*c2*y2 + a1*b2*b3*c1*c2*y2 + b1*b2*c3*y2 + a3*c1*x1*y2 + b3*c2*x1*y2 + a1*b3*x2*y2 + a1*b2*x3*y2 + a1*b3*x3*y2 + a1*c1*x3*y2 + b1*c1*x3*y2 + b1*c2*x3*y2 + a1*b2*c2*x3*y2 + a1*b3*c2*x3*y2 + a1*c1*c2*x3*y2 + b2*c1*c2*x3*y2 + a3*y1*y2 + a3*c1*y1*y2 + b3*c2*y1*y2 + a1*a2*b1*y3 + a2*b1*b2*y3 + a3*b1*b2*y3 + a2*b1*b3*y3 + a1*a3*b2*b3*y3 + a1*a2*c1*y3 + a2*b1*c1*y3 + a1*b2*c1*y3 + a1*a3*b2*c1*y3 + b1*b2*c1*y3 + a1*b1*b2*c1*y3 + a2*b1*b2*c1*y3 + a2*b1*b3*c1*y3 + a1*a3*c2*y3 + a1*b1*c2*y3 + a1*a3*b2*c2*y3 + b1*b2*c2*y3 + a1*b1*b2*c2*y3 + a1*a3*b3*c2*y3 + a1*b1*b3*c2*y3 + a3*b1*b3*c2*y3 + a1*c1*c2*y3 + a3*c1*c2*y3 + a1*a3*c1*c2*y3 + b1*c1*c2*y3 + a1*b1*c1*c2*y3 + b2*c1*c2*y3 + a3*b2*c1*c2*y3 + b1*b2*c1*c2*y3 + a1*b3*c1*c2*y3 + a3*b3*c1*c2*y3 + b1*b3*c1*c2*y3 + b1*b2*c3*y3 + a2*x1*y3 + a2*c1*x1*y3 + a3*c2*x1*y3 + b2*c2*x1*y3 + b2*c1*c2*x1*y3 + a1*b2*x2*y3 + a1*b3*x2*y3 + a1*c1*x2*y3 + b2*c1*x2*y3 + a1*b2*c2*x2*y3 + a1*b3*c2*x2*y3 + a1*c1*c2*x2*y3 + b2*c1*c2*x2*y3 + a1*b2*x3*y3 + a2*c1*x3*y3 + b2*b3*c1*x3*y3 + a1*c2*x3*y3 + b1*c2*x3*y3 + b2*c1*c2*x3*y3 + a2*c1*y1*y3 + b2*c1*y1*y3 + a3*c2*y1*y3 + b1*c2*y1*y3 + b2*c2*y1*y3 + b2*c1*c2*y1*y3 + b1*c2*y2*y3 + a1*b2*c2*y2*y3 + a1*b3*c2*y2*y3 + a1*c1*c2*y2*y3 + b2*c1*c2*y2*y3 + a2*b1*b3*z1 + a1*b2*b3*z1 + a2*b2*b3*z1 + a3*b1*b2*c1*z1 + a2*b1*b3*c1*z1 + a3*b2*b3*c1*z1 + a3*c2*z1 + a3*b1*c2*z1 + a3*b2*c2*z1 + a2*b3*c2*z1 + a3*b3*c2*z1 + a3*b1*b3*c2*z1 + a1*b2*b3*c2*z1 + a3*b2*b3*c2*z1 + a1*b3*x2*z1 + b1*b3*c1*x2*z1 + a1*b2*x3*z1 + a2*b3*x3*z1 + b2*c1*x3*z1 + b1*b2*c1*x3*z1 + b1*c2*x3*z1 + b2*c2*x3*z1 + b1*b3*c2*x3*z1 + b2*b3*c2*x3*z1 + a1*b3*y2*z1 + b1*b3*c1*y2*z1 + a1*b2*y3*z1 + a2*b3*y3*z1 + b2*c1*y3*z1 + b1*b2*c1*y3*z1 + b1*c2*y3*z1 + b2*c2*y3*z1 + b1*b3*c2*y3*z1 + b2*b3*c2*y3*z1 + a1*a3*z2 + a2*b1*b3*z2 + a1*b2*b3*z2 + a3*b1*b3*c1*z2 + a1*b2*b3*c1*z2 + a3*b2*b3*c1*z2 + a3*b1*c2*z2 + a1*b3*c2*z2 + a3*b1*b3*c2*z2 + a1*b2*b3*c2*z2 + a1*b3*c1*c2*z2 + a3*x1*z2 + b3*c2*x1*z2 + a1*b3*x2*z2 + a1*b2*x3*z2 + a1*c1*x3*z2 + b2*c1*x3*z2 + b1*b3*c1*x3*z2 + b1*c2*x3*z2 + b1*b3*c2*x3*z2 + a3*y1*z2 + b3*c2*y1*z2 + a1*b3*y2*z2 + a1*b2*y3*z2 + a1*c1*y3*z2 + b2*c1*y3*z2 + b1*b3*c1*y3*z2 + b1*c2*y3*z2 + b1*b3*c2*y3*z2 + a1*b1*b2*z3 + a2*b1*b2*z3 + a3*b1*b2*z3 + a2*b1*b3*z3 + a1*b2*b3*z3 + a1*b2*c1*z3 + a1*b2*b3*c1*z3 + a1*b1*c2*z3 + a2*b1*c2*z3 + a3*b1*c2*z3 + a1*b2*c2*z3 + a1*b3*c2*z3 + a1*b2*b3*c2*z3 + b2*c1*c2*z3 + b1*b2*c1*c2*z3 + a1*b3*c1*c2*z3 + b2*x1*z3 + b2*c1*x1*z3 + b3*c2*x1*z3 + a1*b2*x2*z3 + a1*b3*x2*z3 + a1*c1*x2*z3 + b1*c1*x2*z3 + a1*b2*x3*z3 + a2*c1*x3*z3 + b2*b3*c1*x3*z3 + a1*c2*x3*z3 + b1*c2*x3*z3 + b2*c1*c2*x3*z3 + b2*c1*y1*z3 + b3*c2*y1*z3 + a1*b2*y2*z3 + a1*b3*y2*z3 + a1*c1*y2*z3 + b1*c1*y2*z3 + a1*b2*y3*z3 + a2*c1*y3*z3 + b2*b3*c1*y3*z3 + a1*c2*y3*z3 + b1*c2*y3*z3 + b2*c1*c2*y3*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 115 ( P-4m2)
#####################################################################
Acpin115:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin115:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin115:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Azin115:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain115:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
Bxyin115:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + b1*x2*y1 + b1*x2*y2 + b1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 116 ( P-4c2)
#####################################################################
Acpin116:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin116:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyin116:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1;
end;
#####################################################################
Bdeltain116:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
Bxyin116:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*y1 + b1*x2*y1 + b1*x2*y2 + b1*y1*y2;
end;
#####################################################################
Bcpzin116:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*b2 + b1*b2*c1 + a1*c2 + b1*c1*c2 + b1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 117 ( P-4b2)
#####################################################################
Acpin117:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin117:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Azin117:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain117:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
B2in117:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a1*c2 + a1*c1*c2 + a2*c1*c2 + b2*c1*c2 + c2*x1 + a1*x2 + c1*x2 + c2*y1 + a1*y2;
end;
#####################################################################
CGAPin117:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3*b2 + a1*a3*b1*b2 + a1*a2*a3*b1*b2 + a1*b2*b3 + a1*a2*b2*b3 + a1*a3*b2*b3 + a1*a2*b1*b2*b3 + a3*b1*b2*b3 + a1*a2*a3*b1*b2*b3 + a1*a2*a3*b2*c1 + a3*b1*b2*c1 + a1*a2*b3*c1 + a2*b1*b3*c1 + a2*a3*b1*b3*c1 + a1*a3*b2*b3*c1 + a1*a2*a3*b2*b3*c1 + a1*b1*b2*b3*c1 + a1*a2*b1*b2*b3*c1 + a1*a3*b1*c2 + a1*a2*a3*b1*c2 + a1*a3*b2*c2 + a1*a2*a3*b2*c2 + a3*b1*b2*c2 + a1*a3*b1*b2*c2 + a1*b1*b3*c2 + a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a2*a3*b1*b3*c2 + a1*a2*a3*b1*b3*c2 + a1*b2*b3*c2 + a1*a3*b2*b3*c2 + a1*b1*b2*b3*c2 + a2*b1*b2*b3*c2 + a1*a2*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a1*a3*b1*b2*b3*c2 + a1*a3*c1*c2 + a1*a2*a3*c1*c2 + a3*b1*c1*c2 + a1*a3*b1*c1*c2 + a1*a3*b2*c1*c2 + a3*b1*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a2*a3*b3*c1*c2 + a1*a2*a3*b3*c1*c2 + b1*b3*c1*c2 + a2*b1*b3*c1*c2 + a1*a2*b1*b3*c1*c2 + a1*a3*b1*b3*c1*c2 + b2*b3*c1*c2 + a1*b2*b3*c1*c2 + a2*b2*b3*c1*c2 + a1*a2*b2*b3*c1*c2 + b1*b2*b3*c1*c2 + a1*a3*b1*b2*b3*c1*c2 + a1*a2*b1*c3 + a1*a2*a3*b1*c3 + a1*b2*c3 + a1*a2*b2*c3 + a1*a3*b2*c3 + a1*a2*a3*b2*c3 + a2*b1*b2*c3 + a1*a2*b1*b2*c3 + a3*b1*b2*c3 + a2*a3*b1*b2*c3 + a1*a2*b3*c3 + a1*a2*b1*b3*c3 + a1*a2*b2*b3*c3 + b1*b2*b3*c3 + a3*b1*b2*b3*c3 + a1*a2*a3*c1*c3 + a1*a2*b1*c1*c3 + a1*b2*c1*c3 + a1*a3*b2*c1*c3 + a1*b1*b2*c1*c3 + a1*a2*b1*b2*c1*c3 + a3*b1*b2*c1*c3 + a2*b1*b3*c1*c3 + a1*a2*b1*b3*c1*c3 + b1*b2*b3*c1*c3 + a3*b1*b2*b3*c1*c3 + a1*c2*c3 + a1*a2*c2*c3 + a1*a3*c2*c3 + a1*a2*a3*c2*c3 + a1*a2*b1*c2*c3 + a1*a2*b2*c2*c3 + a1*a3*b2*c2*c3 + a1*b1*b2*c2*c3 + a2*b1*b2*c2*c3 + a1*a2*b1*b2*c2*c3 + a1*a3*b1*b2*c2*c3 + a1*b3*c2*c3 + a1*a3*b3*c2*c3 + a1*a2*b1*b3*c2*c3 + a1*a3*b1*b3*c2*c3 + a2*a3*b1*b3*c2*c3 + a1*b2*b3*c2*c3 + a1*a2*b2*b3*c2*c3 + a1*a3*b2*b3*c2*c3 + a1*a3*b1*b2*b3*c2*c3 + a2*a3*b1*b2*b3*c2*c3 + a1*c1*c2*c3 + a2*c1*c2*c3 + a1*a2*c1*c2*c3 + a1*a3*c1*c2*c3 + a2*a3*c1*c2*c3 + a1*a2*b1*c1*c2*c3 + a3*b1*c1*c2*c3 + a1*a3*b1*c1*c2*c3 + b2*c1*c2*c3 + a1*a2*b2*c1*c2*c3 + a1*a3*b2*c1*c2*c3 + b1*b2*c1*c2*c3 + a1*b1*b2*c1*c2*c3 + a2*b1*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + b3*c1*c2*c3 + a1*a2*b3*c1*c2*c3 + b1*b3*c1*c2*c3 + a1*b1*b3*c1*c2*c3 + a3*b1*b3*c1*c2*c3 + b2*b3*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + a1*b1*b2*b3*c1*c2*c3 + a3*b1*b2*b3*c1*c2*c3 + a2*a3*b1*x1 + a2*a3*b2*x1 + a1*a2*a3*b2*x1 + a1*a3*b1*b2*x1 + a2*a3*b1*b2*x1 + a1*a2*b1*b3*x1 + a1*a2*b2*b3*x1 + a3*b2*b3*x1 + a2*a3*b2*b3*x1 + a1*b1*b2*b3*x1 + a1*a2*b1*b2*b3*x1 + a3*b1*b2*b3*x1 + a2*a3*b1*b2*b3*x1 + a2*a3*c1*x1 + a2*a3*b1*c1*x1 + a3*b2*c1*x1 + a1*a3*b1*b2*c1*x1 + a1*a2*b3*c1*x1 + b2*b3*c1*x1 + a1*b2*b3*c1*x1 + a1*a2*b2*b3*c1*x1 + a1*a3*b2*b3*c1*x1 + a2*a3*b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a1*b1*b2*b3*c1*x1 + a2*b1*b2*b3*c1*x1 + a3*b1*b2*b3*c1*x1 + a3*c2*x1 + a2*a3*c2*x1 + a1*a2*a3*c2*x1 + a3*b1*c2*x1 + a1*a3*b1*c2*x1 + a3*b2*c2*x1 + a1*a3*b2*c2*x1 + a2*a3*b2*c2*x1 + b3*c2*x1 + a2*b3*c2*x1 + a1*a3*b3*c2*x1 + b1*b3*c2*x1 + a1*a3*b1*b3*c2*x1 + a2*a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a1*b2*b3*c2*x1 + a2*b2*b3*c2*x1 + a3*b2*b3*c2*x1 + a2*a3*b2*b3*c2*x1 + a1*b1*b2*b3*c2*x1 + a3*c1*c2*x1 + a3*b2*c1*c2*x1 + a2*a3*b2*c1*c2*x1 + a3*b1*b2*c1*c2*x1 + b3*c1*c2*x1 + a1*b3*c1*c2*x1 + a2*b3*c1*c2*x1 + a3*b3*c1*c2*x1 + a2*a3*b3*c1*c2*x1 + b1*b3*c1*c2*x1 + a1*b1*b3*c1*c2*x1 + a2*b1*b3*c1*c2*x1 + b2*b3*c1*c2*x1 + a2*b2*b3*c1*c2*x1 + a1*b1*b2*b3*c1*c2*x1 + a3*b1*b2*b3*c1*c2*x1 + a1*a2*c3*x1 + a2*a3*c3*x1 + a1*a2*b1*c3*x1 + a2*a3*b1*c3*x1 + b2*c3*x1 + a2*b2*c3*x1 + a1*a2*b2*c3*x1 + a3*b2*c3*x1 + b1*b2*c3*x1 + a2*b1*b2*c3*x1 + a3*b1*b2*c3*x1 + a2*b3*c3*x1 + a1*a2*b3*c3*x1 + a2*a3*b3*c3*x1 + a2*b1*b3*c3*x1 + a2*b2*b3*c3*x1 + a2*c1*c3*x1 + a2*b1*c1*c3*x1 + a2*b2*c1*c3*x1 + a2*b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + c2*c3*x1 + a3*c2*c3*x1 + a2*a3*c2*c3*x1 + b1*c2*c3*x1 + a1*b1*c2*c3*x1 + a2*b1*c2*c3*x1 + a1*b2*c2*c3*x1 + a2*b2*c2*c3*x1 + a1*a2*b2*c2*c3*x1 + a1*a3*b2*c2*c3*x1 + b1*b2*c2*c3*x1 + a1*a2*b3*c2*c3*x1 + a1*a3*b3*c2*c3*x1 + b1*b3*c2*c3*x1 + a1*b1*b3*c2*c3*x1 + a3*b1*b3*c2*c3*x1 + b2*b3*c2*c3*x1 + a2*b2*b3*c2*c3*x1 + a3*b2*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + b2*c1*c2*c3*x1 + a2*b2*c1*c2*c3*x1 + a3*b2*c1*c2*c3*x1 + b1*b2*c1*c2*c3*x1 + a2*b3*c1*c2*c3*x1 + a3*b3*c1*c2*c3*x1 + b1*b3*c1*c2*c3*x1 + b1*b2*b3*c1*c2*c3*x1 + a1*a3*b1*x2 + a2*a3*b1*x2 + a1*a3*b2*x2 + a3*b1*b2*x2 + a1*a3*b1*b2*x2 + a1*b1*b3*x2 + a2*b1*b3*x2 + a1*a3*b1*b3*x2 + a1*b2*b3*x2 + b1*b2*b3*x2 + a1*b1*b2*b3*x2 + a1*a2*b1*b2*b3*x2 + a1*a3*b1*b2*b3*x2 + a3*c1*x2 + a1*a3*c1*x2 + a2*a3*c1*x2 + a2*a3*b1*c1*x2 + a1*a3*b2*c1*x2 + a2*a3*b2*c1*x2 + a2*a3*b1*b2*c1*x2 + a1*a3*b3*c1*x2 + a1*b1*b3*c1*x2 + a2*b1*b3*c1*x2 + a3*b1*b3*c1*x2 + b2*b3*c1*x2 + a1*b2*b3*c1*x2 + a1*a2*b2*b3*c1*x2 + a3*b2*b3*c1*x2 + a1*a3*b2*b3*c1*x2 + a3*b1*b2*b3*c1*x2 + a1*a3*b1*c2*x2 + a2*a3*b1*c2*x2 + a1*b3*c2*x2 + a1*a2*b3*c2*x2 + b1*b3*c2*x2 + a1*b2*b3*c2*x2 + a1*a3*b2*b3*c2*x2 + b1*b2*b3*c2*x2 + a1*b1*b2*b3*c2*x2 + a2*b1*b2*b3*c2*x2 + a3*b1*b2*b3*c2*x2 + a3*c1*c2*x2 + a3*b1*c1*c2*x2 + a3*b2*c1*c2*x2 + a3*b1*b2*c1*c2*x2 + b3*c1*c2*x2 + a1*b3*c1*c2*x2 + a2*b3*c1*c2*x2 + a3*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a2*b1*b3*c1*c2*x2 + a3*b1*b3*c1*c2*x2 + b2*b3*c1*c2*x2 + a1*b2*b3*c1*c2*x2 + a2*b1*b2*b3*c1*c2*x2 + a1*a2*c3*x2 + a1*a2*b2*c3*x2 + a1*a2*b3*c3*x2 + a1*c1*c3*x2 + a2*c1*c3*x2 + b1*c1*c3*x2 + a1*b1*c1*c3*x2 + a2*b1*c1*c3*x2 + a3*b1*c1*c3*x2 + b2*c1*c3*x2 + a3*b2*c1*c3*x2 + b3*c1*c3*x2 + a3*b3*c1*c3*x2 + a1*b2*c2*c3*x2 + b1*b2*c2*c3*x2 + a1*b1*b2*c2*c3*x2 + a2*b1*b2*c2*c3*x2 + a3*b1*b2*c2*c3*x2 + a1*b3*c2*c3*x2 + a1*b1*b3*c2*c3*x2 + a2*b1*b3*c2*c3*x2 + a3*b1*b3*c2*c3*x2 + a1*b2*b3*c2*c3*x2 + b1*b2*b3*c2*c3*x2 + b2*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + a3*b1*b2*x1*x2 + a3*b1*b3*x1*x2 + a1*b1*b2*b3*x1*x2 + a2*b1*b2*b3*x1*x2 + a3*b1*b2*b3*x1*x2 + b1*b2*b3*c1*x1*x2 + a3*c2*x1*x2 + a3*b2*c2*x1*x2 + b3*c2*x1*x2 + a2*b3*c2*x1*x2 + a3*b3*c2*x1*x2 + b2*b3*c2*x1*x2 + c3*x1*x2 + a2*c3*x1*x2 + a3*c3*x1*x2 + b2*c3*x1*x2 + a2*b2*c3*x1*x2 + a3*b2*c3*x1*x2 + b3*c3*x1*x2 + a2*b3*c3*x1*x2 + a3*b3*c3*x1*x2 + b2*b3*c2*c3*x1*x2 + a1*a2*x3 + a1*a2*b2*x3 + a1*a3*b2*x3 + b1*b2*x3 + a1*a2*b1*b2*x3 + a2*a3*b1*b2*x3 + a1*b2*b3*x3 + a1*a3*b2*b3*x3 + a1*b1*b2*b3*x3 + a2*b1*b2*b3*x3 + a3*b1*b2*b3*x3 + a1*a2*b1*c1*x3 + a2*a3*b1*c1*x3 + a2*b2*c1*x3 + a1*a2*b2*c1*x3 + a3*b2*c1*x3 + a2*a3*b2*c1*x3 + a2*b1*b2*c1*x3 + a3*b1*b2*c1*x3 + a2*b2*b3*c1*x3 + a3*b2*b3*c1*x3 + a3*b1*b2*b3*c1*x3 + a1*c2*x3 + a1*a2*c2*x3 + a1*a3*c2*x3 + a1*a3*b1*c2*x3 + a2*a3*b1*c2*x3 + a1*a3*b2*c2*x3 + a1*a3*b1*b2*c2*x3 + a2*a3*b1*b2*c2*x3 + a1*b3*c2*x3 + a1*a2*b3*c2*x3 + a1*a3*b3*c2*x3 + b1*b3*c2*x3 + a1*b1*b3*c2*x3 + a2*b1*b3*c2*x3 + a3*b1*b3*c2*x3 + a1*a3*b2*b3*c2*x3 + b1*b2*b3*c2*x3 + a1*b1*b2*b3*c2*x3 + c1*c2*x3 + a1*c1*c2*x3 + a2*c1*c2*x3 + a3*c1*c2*x3 + b1*c1*c2*x3 + a1*b1*c1*c2*x3 + a2*b1*c1*c2*x3 + a3*b1*c1*c2*x3 + b2*c1*c2*x3 + a1*b2*c1*c2*x3 + a2*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + b3*c1*c2*x3 + a1*b3*c1*c2*x3 + a2*b3*c1*c2*x3 + a3*b3*c1*c2*x3 + b1*b3*c1*c2*x3 + a2*b1*b3*c1*c2*x3 + a3*b1*b3*c1*c2*x3 + b2*b3*c1*c2*x3 + a2*b2*b3*c1*c2*x3 + a3*b2*b3*c1*c2*x3 + b1*b2*b3*c1*c2*x3 + a3*b1*b2*b3*c1*c2*x3 + a1*a2*c3*x3 + a1*a2*b3*c3*x3 + a1*c2*c3*x3 + b1*c2*c3*x3 + a1*b1*c2*c3*x3 + a2*b1*c2*c3*x3 + a3*b1*c2*c3*x3 + a1*b2*c2*c3*x3 + a1*b3*c2*c3*x3 + a1*b1*b3*c2*c3*x3 + a2*b1*b3*c2*c3*x3 + a3*b1*b3*c2*c3*x3 + a1*b1*b2*b3*c2*c3*x3 + a2*b1*b2*b3*c2*c3*x3 + a3*b1*b2*b3*c2*c3*x3 + c1*c2*c3*x3 + a3*c1*c2*c3*x3 + b1*b2*c1*c2*c3*x3 + b3*c1*c2*c3*x3 + a3*b3*c1*c2*c3*x3 + b1*b2*b3*c1*c2*c3*x3 + b2*x1*x3 + a1*a2*b2*x1*x3 + a1*a3*b2*x1*x3 + b1*b2*x1*x3 + b2*b3*x1*x3 + b1*b2*b3*x1*x3 + a2*b2*c1*x1*x3 + a3*b2*c1*x1*x3 + a2*b2*b3*c1*x1*x3 + a3*b2*b3*c1*x1*x3 + c2*x1*x3 + a2*c2*x1*x3 + a3*c2*x1*x3 + b3*c2*x1*x3 + a2*b3*c2*x1*x3 + a3*b3*c2*x1*x3 + a1*b2*b3*c2*x1*x3 + a2*c3*x1*x3 + a2*b3*c3*x1*x3 + b1*b2*x2*x3 + a1*b1*b2*x2*x3 + a2*b1*b2*x2*x3 + a3*b1*b2*x2*x3 + a1*b2*b3*x2*x3 + b1*b2*c1*x2*x3 + b1*b2*b3*c1*x2*x3 + b1*b2*b3*c2*x2*x3 + a2*a3*y1 + a2*b1*b3*y1 + a1*a2*b1*b3*y1 + a2*b1*b2*b3*y1 + a1*a2*b1*b2*b3*y1 + a3*b1*b2*b3*y1 + a2*a3*b1*b2*b3*y1 + a3*b2*c1*y1 + a1*a3*b2*c1*y1 + a2*a3*b2*c1*y1 + a1*a3*b1*b2*c1*y1 + a1*a2*b3*c1*y1 + a1*b2*b3*c1*y1 + a1*a2*b2*b3*c1*y1 + a3*b2*b3*c1*y1 + a1*a3*b2*b3*c1*y1 + a2*a3*b2*b3*c1*y1 + b1*b2*b3*c1*y1 + a3*b1*b2*b3*c1*y1 + a2*a3*c2*y1 + a3*b1*c2*y1 + a1*a3*b1*c2*y1 + a3*b2*c2*y1 + a1*a3*b2*c2*y1 + a2*a3*b2*c2*y1 + a3*b1*b2*c2*y1 + a2*b3*c2*y1 + a1*a2*b3*c2*y1 + a2*a3*b3*c2*y1 + b1*b3*c2*y1 + a2*b1*b3*c2*y1 + a3*b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + a2*a3*b1*b3*c2*y1 + b2*b3*c2*y1 + a2*b2*b3*c2*y1 + a3*b2*b3*c2*y1 + a1*a3*b2*b3*c2*y1 + a2*a3*b2*b3*c2*y1 + b1*b2*b3*c2*y1 + a2*b1*b2*b3*c2*y1 + a3*c1*c2*y1 + a2*a3*b2*c1*c2*y1 + a3*b1*b2*c1*c2*y1 + a3*b3*c1*c2*y1 + a2*a3*b3*c1*c2*y1 + b1*b3*c1*c2*y1 + a1*b1*b3*c1*c2*y1 + b2*b3*c1*c2*y1 + a1*b2*b3*c1*c2*y1 + a3*b2*b3*c1*c2*y1 + a1*b1*b2*b3*c1*c2*y1 + a3*b1*b2*b3*c1*c2*y1 + a1*a2*b1*c3*y1 + a2*a3*b1*c3*y1 + a1*a2*b2*c3*y1 + b1*b2*c3*y1 + a2*b1*b2*c3*y1 + a3*b1*b2*c3*y1 + a1*a2*b3*c3*y1 + a2*a3*b3*c3*y1 + a2*b1*b3*c3*y1 + a2*b2*b3*c3*y1 + a2*b1*c1*c3*y1 + a2*b1*b2*c1*c3*y1 + a2*b1*b3*c1*c3*y1 + a1*c2*c3*y1 + a2*c2*c3*y1 + a3*c2*c3*y1 + a2*a3*c2*c3*y1 + b1*c2*c3*y1 + a1*b1*c2*c3*y1 + a2*b1*c2*c3*y1 + b2*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + b3*c2*c3*y1 + a3*b3*c2*c3*y1 + a1*b1*b3*c2*c3*y1 + a3*b1*b3*c2*c3*y1 + a1*b2*b3*c2*c3*y1 + a2*b2*b3*c2*c3*y1 + a3*b2*b3*c2*c3*y1 + b1*b2*b3*c2*c3*y1 + a2*b2*c1*c2*c3*y1 + a3*b2*c1*c2*c3*y1 + b1*b2*c1*c2*c3*y1 + b3*c1*c2*c3*y1 + a2*b3*c1*c2*c3*y1 + a3*b3*c1*c2*c3*y1 + b1*b3*c1*c2*c3*y1 + b2*b3*c1*c2*c3*y1 + b1*b2*b3*c1*c2*c3*y1 + a3*b2*x1*y1 + a3*b1*b2*x1*y1 + a2*b3*x1*y1 + a1*b2*b3*x1*y1 + a2*b2*b3*x1*y1 + a3*b2*b3*x1*y1 + b1*b2*b3*c1*x1*y1 + b3*c2*x1*y1 + b1*b2*b3*c2*x1*y1 + a3*b3*x2*y1 + a3*b1*b3*x2*y1 + a1*b2*b3*x2*y1 + a2*b2*b3*x2*y1 + a3*b2*b3*x2*y1 + a1*b1*b2*b3*x2*y1 + a2*b1*b2*b3*x2*y1 + a3*b1*b2*b3*x2*y1 + a3*c2*x2*y1 + a3*b2*c2*x2*y1 + b3*c2*x2*y1 + a2*b3*c2*x2*y1 + a3*b3*c2*x2*y1 + b1*b2*b3*c2*x2*y1 + c3*x2*y1 + a2*c3*x2*y1 + a3*c3*x2*y1 + b2*c3*x2*y1 + a2*b2*c3*x2*y1 + a3*b2*c3*x2*y1 + b3*c3*x2*y1 + a2*b3*c3*x2*y1 + a3*b3*c3*x2*y1 + b2*b3*c2*c3*x2*y1 + a2*b2*c1*x3*y1 + a3*b2*c1*x3*y1 + a2*b2*b3*c1*x3*y1 + a3*b2*b3*c1*x3*y1 + c2*x3*y1 + a2*c2*x3*y1 + a3*c2*x3*y1 + b3*c2*x3*y1 + a2*b3*c2*x3*y1 + a3*b3*c2*x3*y1 + a2*c3*x3*y1 + a2*b3*c3*x3*y1 + a1*a3*b1*y2 + a1*b1*b3*y2 + a1*a2*b1*b3*y2 + a1*b1*b2*b3*y2 + a1*a2*b1*b2*b3*y2 + a1*a3*b1*b2*b3*y2 + a1*a3*b2*c1*y2 + a2*a3*b1*b2*c1*y2 + a1*a2*b3*c1*y2 + a1*b2*b3*c1*y2 + a1*a2*b2*b3*c1*y2 + a1*a3*b2*b3*c1*y2 + a1*b1*b2*b3*c1*y2 + a2*b1*b2*b3*c1*y2 + a1*a3*b2*c2*y2 + a1*a2*b3*c2*y2 + a1*a3*b2*b3*c2*y2 + a1*b1*b2*b3*c2*y2 + a3*c1*c2*y2 + a3*b1*c1*c2*y2 + a3*b2*c1*c2*y2 + b3*c1*c2*y2 + a2*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a1*b2*b3*c1*c2*y2 + a2*b2*b3*c1*c2*y2 + a3*b2*b3*c1*c2*y2 + a2*b1*b2*b3*c1*c2*y2 + a1*a2*b2*c3*y2 + a1*a2*b3*c3*y2 + a1*b1*c1*c3*y2 + a2*b1*c1*c3*y2 + a3*b1*c1*c3*y2 + a1*c2*c3*y2 + a1*b2*c2*c3*y2 + a1*b2*b3*c2*c3*y2 + b1*b3*c1*c2*c3*y2 + a3*x1*y2 + a1*a3*x1*y2 + a3*b1*x1*y2 + a3*b2*x1*y2 + a3*b1*b2*x1*y2 + b3*x1*y2 + a1*b3*x1*y2 + a2*b3*x1*y2 + b1*b3*x1*y2 + a1*b1*b3*x1*y2 + a2*b1*b3*x1*y2 + a1*b2*b3*x1*y2 + a2*b2*b3*x1*y2 + a3*b2*b3*x1*y2 + a1*b1*b2*b3*x1*y2 + a2*b1*b2*b3*x1*y2 + a3*b1*b2*b3*x1*y2 + a3*b2*c1*x1*y2 + a2*b3*c1*x1*y2 + a3*b3*c1*x1*y2 + a3*b2*c2*x1*y2 + a1*b3*c2*x1*y2 + a2*b3*c2*x1*y2 + a3*b3*c2*x1*y2 + b2*b3*c2*x1*y2 + b3*c1*c2*x1*y2 + b2*b3*c1*c2*x1*y2 + b2*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + b3*c3*x1*y2 + a2*b3*c3*x1*y2 + a3*b3*c3*x1*y2 + b3*c2*c3*x1*y2 + b2*b3*c2*c3*x1*y2 + a3*b1*b2*x2*y2 + a1*b2*b3*x2*y2 + b1*b2*b3*c1*x2*y2 + b1*b2*b3*c2*x2*y2 + a1*b1*b3*y1*y2 + a2*b1*b3*y1*y2 + a1*b1*b2*b3*y1*y2 + a2*b1*b2*b3*y1*y2 + a3*b1*b2*b3*y1*y2 + a3*b2*c1*y1*y2 + a2*b3*c1*y1*y2 + a3*b3*c1*y1*y2 + b1*b3*c1*y1*y2 + b1*b2*b3*c1*y1*y2 + a3*b2*c2*y1*y2 + a2*b3*c2*y1*y2 + a3*b3*c2*y1*y2 + b1*b3*c2*y1*y2 + b2*b3*c2*y1*y2 + b1*b2*b3*c2*y1*y2 + b3*c1*c2*y1*y2 + b2*b3*c1*c2*y1*y2 + b2*c3*y1*y2 + a2*b2*c3*y1*y2 + a3*b2*c3*y1*y2 + b3*c3*y1*y2 + a2*b3*c3*y1*y2 + a3*b3*c3*y1*y2 + b3*c2*c3*y1*y2 + b2*b3*c2*c3*y1*y2 + a1*a2*b1*y3 + a1*a2*a3*b1*y3 + a1*a2*b2*y3 + a1*a2*b1*b2*y3 + a2*a3*b1*b2*y3 + a2*b1*b2*b3*y3 + a1*a2*c1*y3 + a1*a2*a3*c1*y3 + a2*b1*c1*y3 + a1*a2*b1*c1*y3 + a2*a3*b1*c1*y3 + a1*a2*b2*c1*y3 + a2*b1*b2*c1*y3 + a2*a3*b1*b2*c1*y3 + a2*b1*b3*c1*y3 + a1*b1*c2*y3 + a2*b1*c2*y3 + a1*b2*c2*y3 + a1*a3*b1*b2*c2*y3 + a2*a3*b1*b2*c2*y3 + a1*a2*b3*c2*y3 + a2*b1*b3*c2*y3 + a1*a3*b2*b3*c2*y3 + a1*b1*b2*b3*c2*y3 + a3*b1*b2*b3*c2*y3 + a1*a3*c1*c2*y3 + a2*a3*c1*c2*y3 + b1*c1*c2*y3 + a1*a3*b1*c1*c2*y3 + a2*a3*b1*c1*c2*y3 + a1*a3*b2*c1*c2*y3 + a2*a3*b2*c1*c2*y3 + b1*b2*c1*c2*y3 + a1*b3*c1*c2*y3 + a2*b1*b3*c1*c2*y3 + a2*b2*b3*c1*c2*y3 + b1*b2*b3*c1*c2*y3 + a3*b1*b2*b3*c1*c2*y3 + a1*a2*b3*c3*y3 + a1*c2*c3*y3 + a1*b1*c2*c3*y3 + a2*b1*c2*c3*y3 + a3*b1*c2*c3*y3 + a1*b2*c2*c3*y3 + b1*b2*c2*c3*y3 + a1*b1*b2*c2*c3*y3 + a2*b1*b2*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + b1*b2*b3*c2*c3*y3 + a1*b1*b2*b3*c2*c3*y3 + a2*b1*b2*b3*c2*c3*y3 + a3*b1*b2*b3*c2*c3*y3 + b3*c1*c2*c3*y3 + a3*b3*c1*c2*c3*y3 + b1*b3*c1*c2*c3*y3 + b1*b2*b3*c1*c2*c3*y3 + a1*a2*x1*y3 + a2*a3*x1*y3 + a1*a2*b2*x1*y3 + a1*a3*b2*x1*y3 + b1*b2*b3*x1*y3 + a3*b2*c1*x1*y3 + a2*b3*c1*x1*y3 + a2*b2*b3*c1*x1*y3 + a3*b2*b3*c1*x1*y3 + a1*b3*c2*x1*y3 + a2*b3*c2*x1*y3 + a1*b2*b3*c2*x1*y3 + b3*c1*c2*x1*y3 + b2*b3*c1*c2*x1*y3 + a2*b3*c3*x1*y3 + b3*c2*c3*x1*y3 + a1*x2*y3 + a1*a3*x2*y3 + b1*x2*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a3*b1*x2*y3 + a1*a3*b1*x2*y3 + a2*a3*b1*x2*y3 + a1*b2*x2*y3 + b1*b2*x2*y3 + a1*b1*b2*x2*y3 + a2*b1*b2*x2*y3 + a3*b1*b2*x2*y3 + a1*b3*x2*y3 + b1*b3*x2*y3 + a1*b2*b3*x2*y3 + b1*b2*b3*x2*y3 + a3*b2*c1*x2*y3 + a3*b1*b2*c1*x2*y3 + a3*b3*c1*x2*y3 + b1*b3*c1*x2*y3 + b1*b2*b3*c1*x2*y3 + b1*b3*c2*x2*y3 + b1*b2*b3*c2*x2*y3 + b1*b2*x3*y3 + a1*b1*b2*x3*y3 + a2*b1*b2*x3*y3 + a3*b1*b2*x3*y3 + a1*b2*b3*x3*y3 + b1*b2*c1*x3*y3 + b1*b2*b3*c1*x3*y3 + b1*b2*b3*c2*x3*y3 + a2*b3*c1*y1*y3 + a2*b2*b3*c1*y1*y3 + a3*b2*b3*c1*y1*y3 + a2*b3*c2*y1*y3 + b3*c1*c2*y1*y3 + b2*b3*c1*c2*y1*y3 + a2*b3*c3*y1*y3 + b3*c2*c3*y1*y3 + a1*a3*b1*y2*y3 + a2*a3*b1*y2*y3 + b1*b2*b3*y2*y3 + a3*b1*b2*c1*y2*y3 + a3*b3*c1*y2*y3;
end;
#####################################################################
#####################################################################
#Space Group No. 118 ( P-4n2)
#####################################################################
Acpin118:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin118:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyzin118:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain118:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
CGAPin118:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a2*a3*b2 + a1*a3*b1*b2 + a1*a2*a3*b1*b2 + a1*b2*b3 + a1*a2*b2*b3 + a1*a3*b2*b3 + b1*b2*b3 + a1*a2*b1*b2*b3 + a3*b1*b2*b3 + a1*a2*a3*b1*b2*b3 + a1*a2*a3*b2*c1 + a3*b1*b2*c1 + a1*a2*b3*c1 + a1*a2*b1*b3*c1 + a1*a3*b2*b3*c1 + a1*a2*a3*b2*b3*c1 + a1*a2*b1*b2*b3*c1 + a1*a3*b1*c2 + a1*a2*a3*b1*c2 + a1*a3*b2*c2 + a1*a2*a3*b2*c2 + a3*b1*b2*c2 + a1*a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a1*a2*a3*b1*b3*c2 + a2*b1*b2*b3*c2 + a1*a2*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a1*a3*b1*b2*b3*c2 + a1*a3*c1*c2 + a1*a2*a3*c1*c2 + a3*b1*c1*c2 + a1*a3*b1*c1*c2 + a1*a3*b1*b2*c1*c2 + a1*a2*b3*c1*c2 + a1*a3*b3*c1*c2 + a2*a3*b3*c1*c2 + a1*a2*a3*b3*c1*c2 + b1*b3*c1*c2 + a1*b1*b3*c1*c2 + a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + b2*b3*c1*c2 + a1*b2*b3*c1*c2 + a1*a2*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + a2*a3*b2*b3*c1*c2 + a1*b1*b2*b3*c1*c2 + a3*b1*b2*b3*c1*c2 + a1*a3*b1*b2*b3*c1*c2 + a1*a2*b1*c3 + a1*a2*a3*b1*c3 + a1*b2*c3 + a1*a2*b2*c3 + a1*a3*b2*c3 + a1*a2*a3*b2*c3 + a1*b1*b2*c3 + a2*b1*b2*c3 + a3*b1*b2*c3 + a1*a3*b1*b2*c3 + a2*a3*b1*b2*c3 + a1*a2*b3*c3 + a1*b2*b3*c3 + a1*a2*b2*b3*c3 + a1*a3*b2*b3*c3 + a1*a2*a3*c1*c3 + a2*b1*c1*c3 + a1*a2*b1*c1*c3 + a1*a2*b2*c1*c3 + b1*b2*c1*c3 + a3*b1*b2*c1*c3 + a1*a2*b3*c1*c3 + a2*a3*b1*b3*c1*c3 + a1*b1*b2*b3*c1*c3 + a1*c2*c3 + a1*a2*c2*c3 + a1*a3*c2*c3 + a1*a2*a3*c2*c3 + a1*a2*b1*c2*c3 + a3*b1*c2*c3 + a1*a2*b2*c2*c3 + a1*a3*b2*c2*c3 + a1*b1*b2*c2*c3 + a2*b1*b2*c2*c3 + a1*a2*b1*b2*c2*c3 + a1*a3*b1*b2*c2*c3 + b1*b3*c2*c3 + a2*b1*b3*c2*c3 + a1*a2*b1*b3*c2*c3 + a1*a2*b2*b3*c2*c3 + a1*b1*b2*b3*c2*c3 + a1*a3*b1*b2*b3*c2*c3 + a2*a3*b1*b2*b3*c2*c3 + a1*a2*c1*c2*c3 + b1*c1*c2*c3 + a1*b1*c1*c2*c3 + a1*a2*b1*c1*c2*c3 + a3*b1*c1*c2*c3 + a1*b2*c1*c2*c3 + a2*b2*c1*c2*c3 + a1*a2*b2*c1*c2*c3 + a3*b2*c1*c2*c3 + a2*a3*b2*c1*c2*c3 + a1*b1*b2*c1*c2*c3 + a2*b1*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + b3*c1*c2*c3 + a2*b3*c1*c2*c3 + a1*a2*b3*c1*c2*c3 + a3*b3*c1*c2*c3 + a1*a3*b3*c1*c2*c3 + a2*a3*b3*c1*c2*c3 + b1*b3*c1*c2*c3 + a1*b1*b3*c1*c2*c3 + a3*b1*b3*c1*c2*c3 + b2*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + b1*b2*b3*c1*c2*c3 + a1*b1*b2*b3*c1*c2*c3 + a2*a3*b1*x1 + a2*a3*b2*x1 + a1*a2*a3*b2*x1 + a1*a3*b1*b2*x1 + a2*a3*b1*b2*x1 + a1*a2*b1*b3*x1 + a1*a2*b2*b3*x1 + a3*b2*b3*x1 + a2*a3*b2*b3*x1 + a1*b1*b2*b3*x1 + a1*a2*b1*b2*b3*x1 + a3*b1*b2*b3*x1 + a2*a3*b1*b2*b3*x1 + a2*a3*c1*x1 + a2*a3*b1*c1*x1 + a2*a3*b2*c1*x1 + a1*a3*b1*b2*c1*x1 + a1*a2*b3*c1*x1 + b2*b3*c1*x1 + a1*b2*b3*c1*x1 + a1*a2*b2*b3*c1*x1 + a3*b2*b3*c1*x1 + a1*a3*b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a1*b1*b2*b3*c1*x1 + a2*b1*b2*b3*c1*x1 + a3*b1*b2*b3*c1*x1 + a3*c2*x1 + a1*a2*a3*c2*x1 + a3*b1*c2*x1 + a1*a3*b1*c2*x1 + a1*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + b3*c2*x1 + a2*b3*c2*x1 + a3*b3*c2*x1 + a1*a3*b3*c2*x1 + b1*b3*c2*x1 + a2*b1*b3*c2*x1 + a3*b1*b3*c2*x1 + a1*a3*b1*b3*c2*x1 + a2*a3*b1*b3*c2*x1 + a1*b2*b3*c2*x1 + a2*b2*b3*c2*x1 + a2*a3*b2*b3*c2*x1 + b1*b2*b3*c2*x1 + a1*b1*b2*b3*c2*x1 + a3*c1*c2*x1 + a3*b1*b2*c1*c2*x1 + a1*b3*c1*c2*x1 + b1*b3*c1*c2*x1 + a1*b1*b3*c1*c2*x1 + a2*b1*b3*c1*c2*x1 + a1*b1*b2*b3*c1*c2*x1 + a3*b1*b2*b3*c1*c2*x1 + a1*a2*c3*x1 + a2*a3*c3*x1 + a1*a2*b1*c3*x1 + a2*a3*b1*c3*x1 + a1*a2*b2*c3*x1 + a2*a3*b2*c3*x1 + a1*a2*b3*c3*x1 + a2*a3*b3*c3*x1 + a2*c1*c3*x1 + a2*b1*c1*c3*x1 + a2*b2*c1*c3*x1 + a2*b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + c2*c3*x1 + a3*c2*c3*x1 + b1*c2*c3*x1 + a1*b1*c2*c3*x1 + a2*b1*c2*c3*x1 + a1*b2*c2*c3*x1 + a2*b2*c2*c3*x1 + a1*a2*b2*c2*c3*x1 + a1*a3*b2*c2*c3*x1 + b1*b2*c2*c3*x1 + b3*c2*c3*x1 + a2*b3*c2*c3*x1 + a1*a2*b3*c2*c3*x1 + a1*a3*b3*c2*c3*x1 + a1*b1*b3*c2*c3*x1 + a3*b1*b3*c2*c3*x1 + b2*b3*c2*c3*x1 + a3*b2*b3*c2*c3*x1 + b2*c1*c2*c3*x1 + b1*b2*c1*c2*c3*x1 + b3*c1*c2*c3*x1 + b1*b3*c1*c2*c3*x1 + b2*b3*c1*c2*c3*x1 + b1*b2*b3*c1*c2*c3*x1 + a1*a3*b1*x2 + a2*a3*b1*x2 + a1*a3*b2*x2 + a3*b1*b2*x2 + a1*a3*b1*b2*x2 + a1*b1*b3*x2 + a2*b1*b3*x2 + a1*a3*b1*b3*x2 + a1*b2*b3*x2 + b1*b2*b3*x2 + a1*b1*b2*b3*x2 + a1*a2*b1*b2*b3*x2 + a1*a3*b1*b2*b3*x2 + a1*a3*c1*x2 + a2*a3*c1*x2 + a2*a3*b1*c1*x2 + a3*b2*c1*x2 + a1*a3*b2*c1*x2 + a2*a3*b2*c1*x2 + a2*a3*b1*b2*c1*x2 + b3*c1*x2 + a1*b3*c1*x2 + a2*b3*c1*x2 + a3*b3*c1*x2 + a1*a3*b3*c1*x2 + b1*b3*c1*x2 + a2*b1*b3*c1*x2 + a3*b1*b3*c1*x2 + b2*b3*c1*x2 + a1*b2*b3*c1*x2 + a1*a2*b2*b3*c1*x2 + a3*b2*b3*c1*x2 + a1*a3*b2*b3*c1*x2 + a3*b1*b2*b3*c1*x2 + a1*a3*b1*c2*x2 + a2*a3*b1*c2*x2 + a1*b3*c2*x2 + a1*a2*b3*c2*x2 + b1*b3*c2*x2 + a1*b2*b3*c2*x2 + a1*a3*b2*b3*c2*x2 + b1*b2*b3*c2*x2 + a1*b1*b2*b3*c2*x2 + a2*b1*b2*b3*c2*x2 + a3*b1*b2*b3*c2*x2 + a3*b1*c1*c2*x2 + a3*b1*b2*c1*c2*x2 + b1*b3*c1*c2*x2 + a1*b1*b3*c1*c2*x2 + a2*b1*b3*c1*c2*x2 + a3*b1*b3*c1*c2*x2 + b2*b3*c1*c2*x2 + a1*b2*b3*c1*c2*x2 + a2*b1*b2*b3*c1*c2*x2 + a1*a2*c3*x2 + a1*a2*b2*c3*x2 + a1*a2*b3*c3*x2 + c1*c3*x2 + a3*c1*c3*x2 + b1*c1*c3*x2 + a2*b1*c1*c3*x2 + a3*b1*c1*c3*x2 + a1*b2*c1*c3*x2 + a2*b2*c1*c3*x2 + a1*b1*b2*c1*c3*x2 + a1*b3*c1*c3*x2 + a2*b3*c1*c3*x2 + a1*b1*b3*c1*c3*x2 + a1*b2*c2*c3*x2 + b1*b2*c2*c3*x2 + a1*b1*b2*c2*c3*x2 + a2*b1*b2*c2*c3*x2 + a3*b1*b2*c2*c3*x2 + a1*b3*c2*c3*x2 + a1*b1*b3*c2*c3*x2 + a2*b1*b3*c2*c3*x2 + a3*b1*b3*c2*c3*x2 + a1*b2*b3*c2*c3*x2 + b1*b2*b3*c2*c3*x2 + b2*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + b2*b3*c1*c2*c3*x2 + a3*b1*b2*x1*x2 + a3*b1*b3*x1*x2 + a1*b1*b2*b3*x1*x2 + a2*b1*b2*b3*x1*x2 + a3*b1*b2*b3*x1*x2 + b1*b2*b3*c1*x1*x2 + a1*a2*x3 + a1*a2*b2*x3 + a1*a3*b2*x3 + b1*b2*x3 + a1*a2*b1*b2*x3 + a2*a3*b1*b2*x3 + a1*b2*b3*x3 + a1*a3*b2*b3*x3 + a1*b1*b2*b3*x3 + a2*b1*b2*b3*x3 + a3*b1*b2*b3*x3 + a2*b1*c1*x3 + a1*a2*b1*c1*x3 + a2*a3*b1*c1*x3 + a2*b2*c1*x3 + a1*a2*b2*c1*x3 + a2*a3*b2*c1*x3 + a2*b1*b2*c1*x3 + a3*b1*b2*c1*x3 + a2*b1*b3*c1*x3 + a2*b2*b3*c1*x3 + a3*b1*b2*b3*c1*x3 + a1*a2*c2*x3 + a1*a3*c2*x3 + b1*c2*x3 + a1*b1*c2*x3 + a2*b1*c2*x3 + a1*a3*b1*c2*x3 + a2*a3*b1*c2*x3 + a1*b2*c2*x3 + a1*a3*b2*c2*x3 + a1*a3*b1*b2*c2*x3 + a2*a3*b1*b2*c2*x3 + a1*a2*b3*c2*x3 + a1*a3*b3*c2*x3 + a3*b1*b3*c2*x3 + a1*b2*b3*c2*x3 + a1*a3*b2*b3*c2*x3 + b1*b2*b3*c2*x3 + a1*b1*b2*b3*c2*x3 + b1*c1*c2*x3 + a2*b1*c1*c2*x3 + a3*b1*c1*c2*x3 + a3*b2*c1*c2*x3 + b1*b3*c1*c2*x3 + a1*b1*b3*c1*c2*x3 + a2*b1*b3*c1*c2*x3 + a3*b1*b3*c1*c2*x3 + a1*b2*b3*c1*c2*x3 + a3*b1*b2*b3*c1*c2*x3 + a1*a2*c3*x3 + a1*a2*b3*c3*x3 + a2*b1*c1*c3*x3 + b2*c1*c3*x3 + b1*b2*c1*c3*x3 + a2*b1*b3*c1*c3*x3 + b2*b3*c1*c3*x3 + b1*b2*b3*c1*c3*x3 + b1*c2*c3*x3 + a3*b1*c2*c3*x3 + a3*b1*b3*c2*c3*x3 + a1*b2*b3*c2*c3*x3 + a1*b1*b2*b3*c2*c3*x3 + a2*b1*b2*b3*c2*c3*x3 + a3*b1*b2*b3*c2*c3*x3 + c1*c2*c3*x3 + b3*c1*c2*c3*x3 + b2*x1*x3 + a1*a2*b2*x1*x3 + a1*a3*b2*x1*x3 + b1*b2*x1*x3 + b2*b3*x1*x3 + b1*b2*b3*x1*x3 + a1*b2*b3*c2*x1*x3 + b1*b2*x2*x3 + a1*b1*b2*x2*x3 + a2*b1*b2*x2*x3 + a3*b1*b2*x2*x3 + a1*b2*b3*x2*x3 + b1*b2*c1*x2*x3 + b1*b2*b3*c1*x2*x3 + b1*b2*b3*c2*x2*x3 + a2*a3*y1 + a2*b1*b3*y1 + a1*a2*b1*b3*y1 + a2*b1*b2*b3*y1 + a1*a2*b1*b2*b3*y1 + a3*b1*b2*b3*y1 + a2*a3*b1*b2*b3*y1 + a1*a3*b2*c1*y1 + a1*a3*b1*b2*c1*y1 + a1*a2*b3*c1*y1 + a1*b2*b3*c1*y1 + a1*a2*b2*b3*c1*y1 + a1*a3*b2*b3*c1*y1 + b1*b2*b3*c1*y1 + a3*b1*b2*b3*c1*y1 + a3*b1*c2*y1 + a1*a3*b1*c2*y1 + a3*b2*c2*y1 + a1*a3*b2*c2*y1 + a1*a2*b3*c2*y1 + a2*a3*b3*c2*y1 + b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + a2*a3*b1*b3*c2*y1 + b2*b3*c2*y1 + a2*b2*b3*c2*y1 + a1*a3*b2*b3*c2*y1 + a2*a3*b2*b3*c2*y1 + a2*b1*b2*b3*c2*y1 + a3*c1*c2*y1 + a3*b2*c1*c2*y1 + a3*b1*b2*c1*c2*y1 + b3*c1*c2*y1 + a2*b3*c1*c2*y1 + b1*b3*c1*c2*y1 + a1*b1*b3*c1*c2*y1 + a1*b2*b3*c1*c2*y1 + a2*b2*b3*c1*c2*y1 + a3*b2*b3*c1*c2*y1 + a1*b1*b2*b3*c1*c2*y1 + a3*b1*b2*b3*c1*c2*y1 + a1*a2*b1*c3*y1 + a2*a3*b1*c3*y1 + a1*a2*b2*c3*y1 + a2*a3*b2*c3*y1 + a1*a2*b3*c3*y1 + a2*a3*b3*c3*y1 + a2*b1*c1*c3*y1 + a2*b1*b2*c1*c3*y1 + a2*b1*b3*c1*c3*y1 + a1*c2*c3*y1 + a2*c2*c3*y1 + a3*c2*c3*y1 + b1*c2*c3*y1 + a1*b1*c2*c3*y1 + a2*b1*c2*c3*y1 + b2*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + b3*c2*c3*y1 + a2*b3*c2*c3*y1 + a3*b3*c2*c3*y1 + b1*b3*c2*c3*y1 + a1*b1*b3*c2*c3*y1 + a3*b1*b3*c2*c3*y1 + b2*b3*c2*c3*y1 + a1*b2*b3*c2*c3*y1 + a3*b2*b3*c2*c3*y1 + b1*b2*c1*c2*c3*y1 + b1*b3*c1*c2*c3*y1 + b1*b2*b3*c1*c2*c3*y1 + a3*b2*x1*y1 + a3*b1*b2*x1*y1 + a2*b3*x1*y1 + a1*b2*b3*x1*y1 + a2*b2*b3*x1*y1 + a3*b2*b3*x1*y1 + b1*b2*b3*c1*x1*y1 + b3*c2*x1*y1 + b1*b2*b3*c2*x1*y1 + a3*b3*x2*y1 + a3*b1*b3*x2*y1 + a1*b2*b3*x2*y1 + a2*b2*b3*x2*y1 + a3*b2*b3*x2*y1 + a1*b1*b2*b3*x2*y1 + a2*b1*b2*b3*x2*y1 + a3*b1*b2*b3*x2*y1 + b2*b3*c2*x2*y1 + b1*b2*b3*c2*x2*y1 + a1*a3*b1*y2 + a1*b1*b3*y2 + a1*a2*b1*b3*y2 + a1*b1*b2*b3*y2 + a1*a2*b1*b2*b3*y2 + a1*a3*b1*b2*b3*y2 + a1*a3*b2*c1*y2 + a2*a3*b1*b2*c1*y2 + a1*a2*b3*c1*y2 + a1*b1*b3*c1*y2 + a1*b2*b3*c1*y2 + a1*a2*b2*b3*c1*y2 + a1*a3*b2*b3*c1*y2 + a1*b1*b2*b3*c1*y2 + a2*b1*b2*b3*c1*y2 + a1*a3*b2*c2*y2 + a1*a2*b3*c2*y2 + a1*a3*b2*b3*c2*y2 + a1*b1*b2*b3*c2*y2 + a3*c1*c2*y2 + a3*b1*c1*c2*y2 + a3*b2*c1*c2*y2 + b3*c1*c2*y2 + a2*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a1*b1*b3*c1*c2*y2 + a1*b2*b3*c1*c2*y2 + a2*b2*b3*c1*c2*y2 + a3*b2*b3*c1*c2*y2 + a2*b1*b2*b3*c1*c2*y2 + a1*a2*b2*c3*y2 + a1*a2*b3*c3*y2 + a1*b1*c1*c3*y2 + a2*b1*c1*c3*y2 + a3*b1*c1*c3*y2 + a1*b1*b2*c1*c3*y2 + a1*b1*b3*c1*c3*y2 + a1*c2*c3*y2 + a1*b2*c2*c3*y2 + a1*b2*b3*c2*c3*y2 + b1*b3*c1*c2*c3*y2 + a3*x1*y2 + a1*a3*x1*y2 + a3*b1*x1*y2 + a3*b2*x1*y2 + a3*b1*b2*x1*y2 + b3*x1*y2 + a1*b3*x1*y2 + a2*b3*x1*y2 + b1*b3*x1*y2 + a1*b1*b3*x1*y2 + a2*b1*b3*x1*y2 + a1*b2*b3*x1*y2 + a2*b2*b3*x1*y2 + a3*b2*b3*x1*y2 + a1*b1*b2*b3*x1*y2 + a2*b1*b2*b3*x1*y2 + a3*b1*b2*b3*x1*y2 + a1*b3*c2*x1*y2 + a3*b1*b2*x2*y2 + a1*b2*b3*x2*y2 + b1*b2*b3*c1*x2*y2 + b1*b2*b3*c2*x2*y2 + a1*b1*b3*y1*y2 + a2*b1*b3*y1*y2 + a1*b1*b2*b3*y1*y2 + a2*b1*b2*b3*y1*y2 + a3*b1*b2*b3*y1*y2 + b1*b3*c1*y1*y2 + b1*b2*b3*c1*y1*y2 + b1*b3*c2*y1*y2 + b1*b2*b3*c2*y1*y2 + a1*a2*b1*y3 + a1*a2*a3*b1*y3 + a1*a2*b2*y3 + a1*a2*b1*b2*y3 + a2*a3*b1*b2*y3 + a2*b1*b2*b3*y3 + a1*a2*c1*y3 + a1*a2*a3*c1*y3 + a2*b1*c1*y3 + a1*a2*b1*c1*y3 + a2*a3*b1*c1*y3 + a1*a2*b2*c1*y3 + a2*b1*b2*c1*y3 + a2*a3*b1*b2*c1*y3 + a1*b1*c2*y3 + a2*b1*c2*y3 + a1*b2*c2*y3 + a1*a3*b1*b2*c2*y3 + a2*a3*b1*b2*c2*y3 + a1*a2*b3*c2*y3 + a1*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + a1*a3*b2*b3*c2*y3 + a1*b1*b2*b3*c2*y3 + a3*b1*b2*b3*c2*y3 + a1*a3*c1*c2*y3 + a2*a3*c1*c2*y3 + b1*c1*c2*y3 + a1*a3*b1*c1*c2*y3 + a2*a3*b1*c1*c2*y3 + a1*a3*b2*c1*c2*y3 + a2*a3*b2*c1*c2*y3 + b1*b2*c1*c2*y3 + a1*b3*c1*c2*y3 + a1*b1*b3*c1*c2*y3 + a2*b1*b3*c1*c2*y3 + a1*b2*b3*c1*c2*y3 + a3*b1*b2*b3*c1*c2*y3 + a1*a2*b3*c3*y3 + a2*b1*b3*c1*c3*y3 + a1*c2*c3*y3 + a1*b1*c2*c3*y3 + a2*b1*c2*c3*y3 + a3*b1*c2*c3*y3 + a1*b2*c2*c3*y3 + b1*b2*c2*c3*y3 + a1*b1*b2*c2*c3*y3 + a2*b1*b2*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + a1*b1*b3*c2*c3*y3 + a2*b1*b3*c2*c3*y3 + a1*b2*b3*c2*c3*y3 + b1*b2*b3*c2*c3*y3 + a1*b1*b2*b3*c2*c3*y3 + a2*b1*b2*b3*c2*c3*y3 + a3*b1*b2*b3*c2*c3*y3 + b2*b3*c1*c2*c3*y3 + a1*a2*x1*y3 + a2*a3*x1*y3 + a1*a2*b2*x1*y3 + a1*a3*b2*x1*y3 + b1*b2*b3*x1*y3 + a3*b2*c1*x1*y3 + a1*b3*c2*x1*y3 + a1*b2*b3*c2*x1*y3 + a1*x2*y3 + a1*a3*x2*y3 + b1*x2*y3 + a1*b1*x2*y3 + a2*b1*x2*y3 + a3*b1*x2*y3 + a1*a3*b1*x2*y3 + a2*a3*b1*x2*y3 + a1*b2*x2*y3 + b1*b2*x2*y3 + a1*b1*b2*x2*y3 + a2*b1*b2*x2*y3 + a3*b1*b2*x2*y3 + a1*b3*x2*y3 + b1*b3*x2*y3 + a1*b2*b3*x2*y3 + b1*b2*b3*x2*y3 + a3*b2*c1*x2*y3 + a3*b1*b2*c1*x2*y3 + b1*b3*c1*x2*y3 + b1*b2*b3*c1*x2*y3 + b1*b3*c2*x2*y3 + b1*b2*b3*c2*x2*y3 + b1*b2*x3*y3 + a1*b1*b2*x3*y3 + a2*b1*b2*x3*y3 + a3*b1*b2*x3*y3 + a1*b2*b3*x3*y3 + b1*b2*c1*x3*y3 + b1*b2*b3*c1*x3*y3 + b1*b2*b3*c2*x3*y3 + a1*a3*b1*y2*y3 + a2*a3*b1*y2*y3 + b1*b2*b3*y2*y3 + a3*b1*b2*c1*y2*y3 + a2*b3*c2*z1 + b1*b3*c2*z1 + a3*b1*b3*c2*z1 + a3*b2*b3*c2*z1 + b1*b2*b3*c2*z1 + a3*b1*b2*b3*c2*z1 + a2*c3*z1 + a2*b2*c3*z1 + a3*b2*c3*z1 + a3*b1*b2*c3*z1 + a2*b3*c3*z1 + b2*b3*c3*z1 + a3*b2*b3*c3*z1 + a3*b1*b2*b3*c3*z1 + a3*c2*c3*z1 + a3*b2*c2*c3*z1 + a3*b1*b2*c2*c3*z1 + a3*b3*c2*c3*z1 + b1*b3*c2*c3*z1 + a3*b1*b3*c2*c3*z1 + b2*b3*c2*c3*z1 + b1*b2*b3*c2*c3*z1 + b3*c2*x2*z1 + c3*x2*z1 + b2*c3*x2*z1 + b3*c3*x2*z1 + c2*x3*z1 + b2*c2*x3*z1 + b1*b2*c2*x3*z1 + b3*c2*x3*z1 + b2*b3*c2*x3*z1 + b1*b2*b3*c2*x3*z1 + b2*c3*x3*z1 + b1*b2*c3*x3*z1 + b2*b3*c3*x3*z1 + b1*b2*b3*c3*x3*z1 + b1*b3*c2*y2*z1 + b1*b2*c3*y2*z1 + b1*b3*c3*y2*z1 + b1*b3*c2*y3*z1 + b2*b3*c2*y3*z1 + b1*b2*b3*c2*y3*z1 + b1*b2*b3*c3*y3*z1 + b1*b3*c3*y3*z2 + b3*(x1 + y1 + z1)*(x2 + y2 + z2) + (x1 + y1 + z1)*(x2 + y2 + z2)*(x3 + y3 + z3);
end;
#####################################################################
#####################################################################
#Space Group No. 119 ( I-4m2)
#####################################################################
Acpin119:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin119:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyzin119:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain119:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
Bphiin119:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return c2*x1 + a1*x2 + b1*x2 + a1*c1*x2 + b1*c1*x2 + c2*y1 + a1*y2 + b1*y2 + c1*y2 + a1*c1*y2 + b1*c1*y2 + c2*z1 + a1*c1*z2 + b1*c1*z2;
end;
#####################################################################
Bzxyin119:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*z1 + c1*x2*z1 + y2*z1 + c1*y2*z1 + c1*x2*z2 + c1*y2*z2 + c1*z1*z2;
end;
#####################################################################
C1in119:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return b2*c1*c3*x1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1 + b2*c2*c3*x1 + b1*b2*c2*c3*x1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + (b2*c3*x1*(1 + x1))/2 + (b1*b2*c3*x1*(1 + x1))/2 + (b1*b2*c1*c3*x1*(1 + x1))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*(1 + x1))/2 + (b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*(1 + x1))/2 + (b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*(1 + x1))/2 + (b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*(1 + x1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*(1 + x1))/2 + b1*c3*x2 + b2*c1*c3*x2 + b1*b2*c1*c3*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2 + b1*b2*c2*c3*x2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*c3*x1*x2 + b2*c3*x1*x2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2 + b2*c2*c3*x1*x2 + b1*b2*c2*c3*x1*x2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + (b1*c3*x2*(1 + x2))/2 + (b1*b2*c3*x2*(1 + x2))/2 + (b1*c1*c3*x2*(1 + x2))/2 + (b2*c1*c3*x2*(1 + x2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*(1 + x2))/2 + (b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*(1 + x2))/2 + (b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*(1 + x2))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*(1 + x2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*(1 + x2))/2 + (c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + (c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + (c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + b1*b2*x3 + b2*c1*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3 + b1*c2*x3 + c1*c2*x3 + b2*c1*c2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3 + b1*b2*c2*c3*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b2*x1*x3 + b2*c1*x1*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3 + b2*c2*x1*x3 + b1*c1*c2*x1*x3 + b1*b2*c1*c2*x1*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + c1*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3 + b1*c2*x2*x3 + b1*c1*c2*x2*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3 + b1*b2*c3*x2*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3 + b1*c2*c3*x2*x3 + b1*b2*c2*c3*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + c1*x1*x2*x3 + b3*c1*x1*x2*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*x3 + c2*x1*x2*x3 + b1*c2*x1*x2*x3 + c1*c2*x1*x2*x3 + b1*c1*c2*x1*x2*x3 + b2*c1*c2*x1*x2*x3 + b3*c1*c2*x1*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x2*x3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + c1*c3*x1*x2*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*x3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*x3 + c2*c3*x1*x2*x3 + b1*c2*c3*x1*x2*x3 + b2*c2*c3*x1*x2*x3 + b3*c2*c3*x1*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*x3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + (b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*(1 + x3))/2 + (b1*c2*x3*(1 + x3))/2 + (b1*b2*c2*x3*(1 + x3))/2 + (c1*c2*x3*(1 + x3))/2 + (b1*b2*c1*c2*x3*(1 + x3))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*(1 + x3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*(1 + x3))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3))/2 + (b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3))/2 + (b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3))/2 + (b1*b2*c3*x3*(1 + x3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*(1 + x3))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*(1 + x3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*(1 + x3))/2 + (b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*(1 + x3))/2 + (b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*(1 + x3))/2 + (b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*(1 + x3))/2 + b2*c3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1 + b2*c2*c3*y1 + b1*b2*c2*c3*y1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + b2*c3*x1*y1 + b1*b2*c1*c3*x1*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y1 + b2*c2*c3*x1*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1 + c3*x2*y1 + b1*c3*x2*y1 + c1*c3*x2*y1 + b2*c1*c3*x2*y1 + b1*b2*c1*c3*x2*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*c3*x1*x2*y1 + b1*c1*c3*x1*x2*y1 + b2*c1*c3*x1*x2*y1 + b1*b2*c1*c3*x1*x2*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y1 + b2*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1 + c2*x3*y1 + b1*c2*x3*y1 + c1*c2*x3*y1 + b1*b2*c1*c2*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + b2*c3*x3*y1 + b2*c1*c3*x3*y1 + b1*b2*c1*c3*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1 + b1*b2*c2*c3*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b1*c1*c2*x1*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y1 + b2*c3*x1*x3*y1 + b1*b2*c1*c3*x1*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y1 + c2*c3*x1*x3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y1 + b3*c1*x2*x3*y1 + b1*c2*x2*x3*y1 + b1*c1*c2*x2*x3*y1 + b2*c1*c2*x2*x3*y1 + b3*c1*c2*x2*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + b1*c3*x2*x3*y1 + b2*c3*x2*x3*y1 + c1*c3*x2*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y1 + b1*c2*c3*x2*x3*y1 + b2*c2*c3*x2*x3*y1 + b3*c2*c3*x2*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*y1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + (b2*c3*y1*(1 + y1))/2 + (b1*b2*c3*y1*(1 + y1))/2 + (b1*b2*c1*c3*y1*(1 + y1))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*(1 + y1))/2 + (b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*(1 + y1))/2 + (b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*(1 + y1))/2 + (b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*(1 + y1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*(1 + y1))/2 + b1*c1*c3*y2 + b2*c1*c3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2 + b1*b2*c2*c3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + c3*x1*y2 + b1*c3*x1*y2 + b2*c3*x1*y2 + c1*c3*x1*y2 + b2*c1*c3*x1*y2 + b1*b2*c1*c3*x1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2 + b2*c2*c3*x1*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2 + c3*x1*x2*y2 + b1*c3*x1*x2*y2 + b2*c3*x1*x2*y2 + b2*c1*c3*x1*x2*y2 + b1*b2*c1*c3*x1*x2*y2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y2 + c1*x3*y2 + b1*c1*x3*y2 + b2*c1*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2 + c1*c2*x3*y2 + b1*c1*c2*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2 + b1*c3*x3*y2 + c1*c3*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2 + b1*b2*c2*c3*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + x1*x3*y2 + c1*x1*x3*y2 + b3*c1*x1*x3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*y2 + b1*c1*c2*x1*x3*y2 + b2*c1*c2*x1*x3*y2 + b3*c1*c2*x1*x3*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y2 + c3*x1*x3*y2 + c1*c3*x1*x3*y2 + b1*c1*c3*x1*x3*y2 + b1*b2*c1*c3*x1*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y2 + b2*c2*c3*x1*x3*y2 + b3*c2*c3*x1*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x3*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + c1*x2*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y2 + b1*c2*x2*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y2 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y2 + b1*c3*x2*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y2 + c3*y1*y2 + c1*c3*y1*y2 + b1*b2*c1*c3*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2 + b1*b2*c2*c3*y1*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + c3*x1*y1*y2 + b1*c1*c3*x1*y1*y2 + b2*c1*c3*x1*y1*y2 + b1*b2*c1*c3*x1*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y1*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*y2 + b1*c3*x2*y1*y2 + b2*c3*x2*y1*y2 + c1*c3*x2*y1*y2 + b1*c1*c3*x2*y1*y2 + b2*c1*c3*x2*y1*y2 + b1*b2*c1*c3*x2*y1*y2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y2 + b1*x3*y1*y2 + c1*x3*y1*y2 + b1*c1*x3*y1*y2 + b3*c1*x3*y1*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*y2 + c2*x3*y1*y2 + b1*c2*x3*y1*y2 + c1*c2*x3*y1*y2 + b2*c1*c2*x3*y1*y2 + b3*c1*c2*x3*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*c3*x3*y1*y2 + b2*c3*x3*y1*y2 + b1*b2*c1*c3*x3*y1*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*y2 + b2*c2*c3*x3*y1*y2 + b3*c2*c3*x3*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + (b1*b2*c3*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*(1 + y2))/2 + (b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*(1 + y2))/2 + (b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*(1 + y2))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*(1 + y2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2))/2 + (c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2))/2 + (c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2))/2 + b1*b2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3 + c1*c2*y3 + b2*c1*c2*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b1*b2*c3*y3 + b1*b2*c2*c3*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b2*c1*x1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3 + b2*c2*x1*y3 + b1*b2*c1*c2*x1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + b2*c1*c3*x1*y3 + b1*b2*c1*c3*x1*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3 + b2*c2*c3*x1*y3 + b1*b2*c2*c3*x1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b1*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3 + b1*c2*x2*y3 + b1*c1*c2*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3 + b1*c3*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3 + b1*b2*c2*c3*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + x1*x2*y3 + c1*x1*x2*y3 + b3*c1*x1*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*y3 + b1*c1*c2*x1*x2*y3 + b2*c1*c2*x1*x2*y3 + b1*b2*c1*c2*x1*x2*y3 + b3*c1*c2*x1*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + c3*x1*x2*y3 + b1*c3*x1*x2*y3 + b2*c3*x1*x2*y3 + c1*c3*x1*x2*y3 + b1*c1*c3*x1*x2*y3 + b1*b2*c1*c3*x1*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + c2*c3*x1*x2*y3 + b1*c2*c3*x1*x2*y3 + b2*c2*c3*x1*x2*y3 + b3*c2*c3*x1*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y3 + b1*b2*c2*x3*y3 + b1*b2*c1*c2*x3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y3 + b1*b2*c2*c3*x3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*y3 + c2*x1*x3*y3 + b1*c2*x1*x3*y3 + b1*b2*c2*x1*x3*y3 + c1*c2*x1*x3*y3 + b1*b2*c1*c2*x1*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y3 + b2*c1*c3*x1*x3*y3 + b1*b2*c1*c3*x1*x3*y3 + c2*c3*x1*x3*y3 + b1*c2*c3*x1*x3*y3 + b2*c2*c3*x1*x3*y3 + b1*b2*c2*c3*x1*x3*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + b1*c2*x2*x3*y3 + b1*b2*c2*x2*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*y3 + b1*c3*x2*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y3 + b1*b2*c2*c3*x2*x3*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*y3 + b2*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3 + b1*c2*y1*y3 + c1*c2*y1*y3 + b1*c1*c2*y1*y3 + b1*b2*c1*c2*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b1*b2*c1*c3*y1*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3 + b2*c2*c3*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b2*c1*x1*y1*y3 + c2*x1*y1*y3 + b2*c2*x1*y1*y3 + b1*c1*c2*x1*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y1*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y1*y3 + b1*b2*c1*c3*x1*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y1*y3 + c2*c3*x1*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*y3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*y3 + x2*y1*y3 + b1*x2*y1*y3 + b1*c1*x2*y1*y3 + b3*c1*x2*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*y3 + b1*c2*x2*y1*y3 + b2*c2*x2*y1*y3 + c1*c2*x2*y1*y3 + b2*c1*c2*x2*y1*y3 + b1*b2*c1*c2*x2*y1*y3 + b3*c1*c2*x2*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y1*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + c3*x2*y1*y3 + b1*c3*x2*y1*y3 + b2*c3*x2*y1*y3 + c1*c3*x2*y1*y3 + b1*b2*c1*c3*x2*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*y3 + b1*c2*c3*x2*y1*y3 + b2*c2*c3*x2*y1*y3 + b3*c2*c3*x2*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b2*x3*y1*y3 + b2*c1*x3*y1*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*y3 + b1*c2*x3*y1*y3 + b2*c2*x3*y1*y3 + b1*b2*c2*x3*y1*y3 + c1*c2*x3*y1*y3 + b1*c1*c2*x3*y1*y3 + b1*b2*c1*c2*x3*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y3 + b1*b2*c1*c3*x3*y1*y3 + c2*c3*x3*y1*y3 + b1*b2*c2*c3*x3*y1*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3 + b1*c2*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3 + b1*b2*c3*y2*y3 + c1*c3*y2*y3 + b1*c1*c3*y2*y3 + b2*c1*c3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3 + b1*c2*c3*y2*y3 + b1*b2*c2*c3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + x1*y2*y3 + c1*x1*y2*y3 + b1*c1*x1*y2*y3 + b2*c1*x1*y2*y3 + b3*c1*x1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y2*y3 + c2*x1*y2*y3 + b2*c2*x1*y2*y3 + c1*c2*x1*y2*y3 + b1*c1*c2*x1*y2*y3 + b2*c1*c2*x1*y2*y3 + b1*b2*c1*c2*x1*y2*y3 + b3*c1*c2*x1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*y3 + c3*x1*y2*y3 + c1*c3*x1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*y3 + b2*c2*c3*x1*y2*y3 + b3*c2*c3*x1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y2*y3 + c1*c2*x2*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*y3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*y3 + c1*c3*x2*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y2*y3 + b1*x3*y2*y3 + c1*x3*y2*y3 + b1*c1*x3*y2*y3 + b2*c1*x3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + b1*b2*c2*x3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*y3 + b1*c3*x3*y2*y3 + c1*c3*x3*y2*y3 + b1*c1*c3*x3*y2*y3 + b2*c1*c3*x3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*y3 + b1*c2*c3*x3*y2*y3 + b1*b2*c2*c3*x3*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*y3 + c1*y1*y2*y3 + b1*c1*y1*y2*y3 + b2*c1*y1*y2*y3 + b3*c1*y1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y2*y3 + c2*y1*y2*y3 + b1*c1*c2*y1*y2*y3 + b2*c1*c2*y1*y2*y3 + b1*b2*c1*c2*y1*y2*y3 + b3*c1*c2*y1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + b2*c2*c3*y1*y2*y3 + b3*c2*c3*y1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + (b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*(1 + y3))/2 + (b1*b2*c2*y3*(1 + y3))/2 + (c1*c2*y3*(1 + y3))/2 + (b1*c1*c2*y3*(1 + y3))/2 + (b1*b2*c1*c2*y3*(1 + y3))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*(1 + y3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*(1 + y3))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + (c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + (b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + (b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + (b1*b2*c3*y3*(1 + y3))/2 + (b1*c2*c3*y3*(1 + y3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3*(1 + y3))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*(1 + y3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*(1 + y3))/2 + (b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*(1 + y3))/2 + (b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*(1 + y3))/2 + (b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*(1 + y3))/2 + b2*c1*c3*z1 + b1*b2*c1*c3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1 + b2*c2*c3*z1 + b1*b2*c2*c3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b1*b2*c3*x1*z1 + b2*c1*c3*x1*z1 + b2*c2*c3*x1*z1 + b1*b2*c2*c3*x1*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1 + b2*c2*c3*x2*z1 + b1*b2*c2*c3*x2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b3*x1*x2*z1 + b1*c3*x1*x2*z1 + b2*c3*x1*x2*z1 + c1*c3*x1*x2*z1 + b1*c1*c3*x1*x2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z1 + b2*c1*x3*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1 + b1*c2*x3*z1 + b2*c2*x3*z1 + b1*b2*c2*x3*z1 + b1*c1*c2*x3*z1 + b1*b2*c1*c2*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b2*x1*x3*z1 + b1*c2*x1*x3*z1 + b2*c2*x1*x3*z1 + b3*c2*x1*x3*z1 + b1*c1*c2*x1*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z1 + b2*c1*c3*x1*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z1 + b3*x2*x3*z1 + b3*c1*x2*x3*z1 + b2*c2*x2*x3*z1 + b3*c2*x2*x3*z1 + c1*c2*x2*x3*z1 + b1*c1*c2*x2*x3*z1 + b2*c1*c2*x2*x3*z1 + b3*c1*c2*x2*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*c3*x2*x3*z1 + b2*c3*x2*x3*z1 + b1*c1*c3*x2*x3*z1 + b2*c1*c3*x2*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + c2*c3*x2*x3*z1 + b1*c2*c3*x2*x3*z1 + b2*c2*c3*x2*x3*z1 + b3*c2*c3*x2*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + b2*c3*y1*z1 + b1*b2*c3*y1*z1 + b2*c2*c3*y1*z1 + b1*b2*c2*c3*y1*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1 + b2*c3*x1*y1*z1 + b1*b2*c3*x1*y1*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z1 + b3*x2*y1*z1 + b1*c3*x2*y1*z1 + b1*b2*c3*x2*y1*z1 + c1*c3*x2*y1*z1 + b2*c1*c3*x2*y1*z1 + b1*b2*c1*c3*x2*y1*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z1 + b2*x3*y1*z1 + b2*c2*x3*y1*z1 + b3*c2*x3*y1*z1 + c1*c2*x3*y1*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z1 + b2*c3*x3*y1*z1 + b1*b2*c3*x3*y1*z1 + b2*c1*c3*x3*y1*z1 + b1*b2*c1*c3*x3*y1*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z1 + b1*c2*c3*x3*y1*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + b1*c3*y2*z1 + b1*b2*c3*y2*z1 + c1*c3*y2*z1 + b2*c1*c3*y2*z1 + b1*b2*c1*c3*y2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1 + b2*c2*c3*y2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b3*x1*y2*z1 + b1*b2*c3*x1*y2*z1 + c1*c3*x1*y2*z1 + b1*c1*c3*x1*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z1 + c3*x2*y2*z1 + b1*c3*x2*y2*z1 + b1*b2*c3*x2*y2*z1 + b2*c1*c3*x2*y2*z1 + b1*b2*c1*c3*x2*y2*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2*z1 + b3*x3*y2*z1 + b3*c1*x3*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*z1 + b2*c2*x3*y2*z1 + b3*c2*x3*y2*z1 + b2*c1*c2*x3*y2*z1 + b3*c1*c2*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + c3*x3*y2*z1 + b2*c3*x3*y2*z1 + b1*b2*c3*x3*y2*z1 + b2*c1*c3*x3*y2*z1 + b1*b2*c1*c3*x3*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z1 + b2*c2*c3*x3*y2*z1 + b3*c2*c3*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b3*y1*y2*z1 + b1*c3*y1*y2*z1 + b2*c3*y1*y2*z1 + c1*c3*y1*y2*z1 + b2*c1*c3*y1*y2*z1 + b1*b2*c1*c3*y1*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z1 + b2*y3*z1 + b2*c1*y3*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*z1 + b2*c2*y3*z1 + b1*b2*c2*y3*z1 + b1*b2*c1*c2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + b2*c3*y3*z1 + b1*b2*c3*y3*z1 + b2*c1*c3*y3*z1 + b1*b2*c1*c3*y3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1 + b2*c2*c3*y3*z1 + b1*b2*c2*c3*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b2*x1*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z1 + c2*x1*y3*z1 + b2*c2*x1*y3*z1 + b1*b2*c2*x1*y3*z1 + b3*c2*x1*y3*z1 + b1*c1*c2*x1*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z1 + b1*b2*c3*x1*y3*z1 + b2*c1*c3*x1*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z1 + x2*y3*z1 + b3*x2*y3*z1 + b3*c1*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z1 + b1*c2*x2*y3*z1 + b2*c2*x2*y3*z1 + b1*b2*c2*x2*y3*z1 + b3*c2*x2*y3*z1 + b1*c1*c2*x2*y3*z1 + b2*c1*c2*x2*y3*z1 + b1*b2*c1*c2*x2*y3*z1 + b3*c1*c2*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + c3*x2*y3*z1 + b1*c3*x2*y3*z1 + b1*b2*c3*x2*y3*z1 + b2*c1*c3*x2*y3*z1 + b1*b2*c1*c3*x2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z1 + c2*c3*x2*y3*z1 + b1*c2*c3*x2*y3*z1 + b2*c2*c3*x2*y3*z1 + b3*c2*c3*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y3*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y3*z1 + b1*c2*x3*y3*z1 + c1*c2*x3*y3*z1 + b1*b2*c1*c2*x3*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z1 + b2*c3*x3*y3*z1 + b1*b2*c3*x3*y3*z1 + b2*c1*c3*x3*y3*z1 + b1*b2*c1*c3*x3*y3*z1 + c2*c3*x3*y3*z1 + b1*c2*c3*x3*y3*z1 + b2*c2*c3*x3*y3*z1 + b1*b2*c2*c3*x3*y3*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y3*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y3*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y3*z1 + b2*c1*y1*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z1 + b1*c2*y1*y3*z1 + b1*b2*c2*y1*y3*z1 + b3*c2*y1*y3*z1 + c1*c2*y1*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z1 + b2*c1*c3*y1*y3*z1 + b1*b2*c1*c3*y1*y3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z1 + b1*c2*c3*y1*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + b1*y2*y3*z1 + b2*y2*y3*z1 + b3*y2*y3*z1 + c1*y2*y3*z1 + b1*c1*y2*y3*z1 + b2*c1*y2*y3*z1 + b3*c1*y2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z1 + c2*y2*y3*z1 + b1*b2*c2*y2*y3*z1 + b3*c2*y2*y3*z1 + c1*c2*y2*y3*z1 + b2*c1*c2*y2*y3*z1 + b1*b2*c1*c2*y2*y3*z1 + b3*c1*c2*y2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + b1*c3*y2*y3*z1 + b2*c3*y2*y3*z1 + b1*c1*c3*y2*y3*z1 + b2*c1*c3*y2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + b2*c2*c3*y2*y3*z1 + b3*c2*c3*y2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + (b2*c3*z1*(1 + z1))/2 + (b2*c1*c3*z1*(1 + z1))/2 + (b1*b2*c1*c3*z1*(1 + z1))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*(1 + z1))/2 + (b2*c2*c3*z1*(1 + z1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*(1 + z1))/2 + (b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*(1 + z1))/2 + (b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*(1 + z1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*(1 + z1))/2 + b1*b2*c3*z2 + b1*c1*c3*z2 + b1*b2*c1*c3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*c3*x1*z2 + b2*c2*c3*x1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*b2*c3*x2*z2 + b2*c1*c3*x2*z2 + b1*b2*c1*c3*x2*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z2 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z2 + b1*b2*c2*c3*x2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b3*x1*x2*z2 + b3*c1*x1*x2*z2 + b3*c2*x1*x2*z2 + c3*x1*x2*z2 + b1*c3*x1*x2*z2 + b3*c3*x1*x2*z2 + c1*c3*x1*x2*z2 + b2*c1*c3*x1*x2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z2 + b2*c2*c3*x1*x2*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z2 + b1*c1*x3*z2 + b1*b2*c1*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z2 + b1*c1*c2*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z2 + b1*c1*c3*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z2 + b1*b2*c2*c3*x3*z2 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + x1*x3*z2 + b2*x1*x3*z2 + c1*x1*x3*z2 + b2*c1*x1*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*z2 + b1*c2*x1*x3*z2 + b2*c2*x1*x3*z2 + b3*c2*x1*x3*z2 + b1*c1*c2*x1*x3*z2 + b2*c1*c2*x1*x3*z2 + b3*c1*c2*x1*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + c3*x1*x3*z2 + b1*c3*x1*x3*z2 + b2*c3*x1*x3*z2 + b1*b2*c3*x1*x3*z2 + b3*c3*x1*x3*z2 + c1*c3*x1*x3*z2 + b1*b2*c1*c3*x1*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z2 + b1*c2*c3*x1*x3*z2 + b2*c2*c3*x1*x3*z2 + b3*c2*c3*x1*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + c1*x2*x3*z2 + b1*c1*x2*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*z2 + b1*c2*x2*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z2 + b1*b2*c3*x2*x3*z2 + c1*c3*x2*x3*z2 + b1*c1*c3*x2*x3*z2 + b2*c1*c3*x2*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z2 + b1*c3*y1*z2 + b1*b2*c3*y1*z2 + c1*c3*y1*z2 + b1*c1*c3*y1*z2 + b2*c1*c3*y1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2 + b1*b2*c2*c3*y1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + c3*x1*y1*z2 + b1*c3*x1*y1*z2 + b2*c3*x1*y1*z2 + b1*b2*c3*x1*y1*z2 + b1*c1*c3*x1*y1*z2 + b2*c1*c3*x1*y1*z2 + b1*b2*c1*c3*x1*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y1*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z2 + b3*x2*y1*z2 + b3*c1*x2*y1*z2 + b3*c2*x2*y1*z2 + b1*c3*x2*y1*z2 + b2*c3*x2*y1*z2 + b1*b2*c3*x2*y1*z2 + b3*c3*x2*y1*z2 + c1*c3*x2*y1*z2 + b2*c1*c3*x2*y1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z2 + b2*c2*c3*x2*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + x3*y1*z2 + b1*x3*y1*z2 + b2*x3*y1*z2 + c1*x3*y1*z2 + b2*c1*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*z2 + c2*x3*y1*z2 + b1*c2*x3*y1*z2 + b2*c2*x3*y1*z2 + b3*c2*x3*y1*z2 + c1*c2*x3*y1*z2 + b2*c1*c2*x3*y1*z2 + b3*c1*c2*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z2 + b1*c3*x3*y1*z2 + b3*c3*x3*y1*z2 + c1*c3*x3*y1*z2 + b1*b2*c1*c3*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z2 + c2*c3*x3*y1*z2 + b1*c2*c3*x3*y1*z2 + b2*c2*c3*x3*y1*z2 + b3*c2*c3*x3*y1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z2 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z2 + b3*x1*y2*z2 + b3*c1*x1*y2*z2 + b3*c2*x1*y2*z2 + c3*x1*y2*z2 + b1*c3*x1*y2*z2 + b1*b2*c3*x1*y2*z2 + b3*c3*x1*y2*z2 + c1*c3*x1*y2*z2 + b1*b2*c1*c3*x1*y2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z2 + b2*c2*c3*x1*y2*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + b1*b2*c3*x2*y2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*z2 + b1*c1*x3*y2*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*z2 + b1*c1*c2*x3*y2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z2 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z2 + c1*c3*x3*y2*z2 + b1*c1*c3*x3*y2*z2 + b2*c1*c3*x3*y2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z2 + b3*y1*y2*z2 + b3*c1*y1*y2*z2 + b3*c2*y1*y2*z2 + b1*c3*y1*y2*z2 + b2*c3*y1*y2*z2 + b3*c3*y1*y2*z2 + b1*c1*c3*y1*y2*z2 + b1*b2*c1*c3*y1*y2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z2 + b2*c2*c3*y1*y2*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + b1*c1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*z2 + b1*c1*c2*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2 + b1*b2*c1*c3*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*x1*y3*z2 + b2*x1*y3*z2 + c1*x1*y3*z2 + b2*c1*x1*y3*z2 + b1*b2*c1*x1*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z2 + c2*x1*y3*z2 + b2*c2*x1*y3*z2 + b3*c2*x1*y3*z2 + c1*c2*x1*y3*z2 + b1*c1*c2*x1*y3*z2 + b2*c1*c2*x1*y3*z2 + b1*b2*c1*c2*x1*y3*z2 + b3*c1*c2*x1*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + c3*x1*y3*z2 + b1*b2*c3*x1*y3*z2 + b3*c3*x1*y3*z2 + c1*c3*x1*y3*z2 + b1*c1*c3*x1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z2 + b1*c2*c3*x1*y3*z2 + b2*c2*c3*x1*y3*z2 + b3*c2*c3*x1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b1*x2*y3*z2 + c1*x2*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z2 + b1*c1*c2*x2*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z2 + b1*c3*x2*y3*z2 + b1*b2*c3*x2*y3*z2 + c1*c3*x2*y3*z2 + b2*c1*c3*x2*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z2 + b1*b2*x3*y3*z2 + b1*b2*c1*x3*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y3*z2 + b1*b2*c2*x3*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y3*z2 + b1*b2*c3*x3*y3*z2 + b1*b2*c1*c3*x3*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y3*z2 + b1*y1*y3*z2 + c1*y1*y3*z2 + b1*c1*y1*y3*z2 + b2*c1*y1*y3*z2 + b1*b2*c1*y1*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z2 + c2*y1*y3*z2 + b1*c2*y1*y3*z2 + b3*c2*y1*y3*z2 + b1*c1*c2*y1*y3*z2 + b2*c1*c2*y1*y3*z2 + b1*b2*c1*c2*y1*y3*z2 + b3*c1*c2*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + b1*c3*y1*y3*z2 + b3*c3*y1*y3*z2 + c1*c3*y1*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z2 + c2*c3*y1*y3*z2 + b1*c2*c3*y1*y3*z2 + b2*c2*c3*y1*y3*z2 + b3*c2*c3*y1*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z2 + c1*c2*y2*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z2 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z2 + b2*c1*c3*y2*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z2 + b1*c3*z1*z2 + b2*c3*z1*z2 + b1*b2*c3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2 + b2*c2*c3*z1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + c3*x1*z1*z2 + b1*c3*x1*z1*z2 + c1*c3*x1*z1*z2 + b1*c1*c3*x1*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z2 + b3*c1*x2*z1*z2 + b3*c2*x2*z1*z2 + b1*c3*x2*z1*z2 + b2*c3*x2*z1*z2 + b3*c3*x2*z1*z2 + c1*c3*x2*z1*z2 + b2*c1*c3*x2*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z2 + b2*c2*c3*x2*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + b1*x3*z1*z2 + b2*c1*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1*z2 + b1*c2*x3*z1*z2 + b2*c1*c2*x3*z1*z2 + b3*c1*c2*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + b1*c3*x3*z1*z2 + b2*c3*x3*z1*z2 + b3*c3*x3*z1*z2 + b1*c1*c3*x3*z1*z2 + b2*c1*c3*x3*z1*z2 + b1*b2*c1*c3*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1*z2 + b1*c2*c3*x3*z1*z2 + b2*c2*c3*x3*z1*z2 + b3*c2*c3*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + c3*y1*z1*z2 + c1*c3*y1*z1*z2 + b2*c1*c3*y1*z1*z2 + b1*b2*c1*c3*y1*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z2 + b3*c1*y2*z1*z2 + b3*c2*y2*z1*z2 + b1*c3*y2*z1*z2 + b3*c3*y2*z1*z2 + c1*c3*y2*z1*z2 + b1*b2*c1*c3*y2*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z2 + b2*c2*c3*y2*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + y3*z1*z2 + b1*b2*y3*z1*z2 + b1*c1*y3*z1*z2 + b2*c1*y3*z1*z2 + b1*b2*c1*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*z1*z2 + b1*c2*y3*z1*z2 + b1*b2*c2*y3*z1*z2 + c1*c2*y3*z1*z2 + b2*c1*c2*y3*z1*z2 + b1*b2*c1*c2*y3*z1*z2 + b3*c1*c2*y3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + b1*b2*c3*y3*z1*z2 + b3*c3*y3*z1*z2 + b2*c1*c3*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1*z2 + b1*c2*c3*y3*z1*z2 + b2*c2*c3*y3*z1*z2 + b3*c2*c3*y3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + (b2*c1*c3*z2*(1 + z2))/2 + (b1*b2*c1*c3*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2*(1 + z2))/2 + (b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2*(1 + z2))/2 + (b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2*(1 + z2))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*(1 + z2))/2 + (b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + (c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + (c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + b1*b2*c1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z3 + b2*c1*c2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z3 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z3 + b1*b2*x1*z3 + b1*b2*c1*x1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z3 + b1*b2*c2*x1*z3 + b1*b2*c1*c2*x1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + b1*b2*c1*c3*x1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + c1*x2*z3 + b1*c1*x2*z3 + b2*c1*x2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z3 + b1*c1*c2*x2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z3 + b1*c3*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z3 + b1*c2*c3*x2*z3 + b1*b2*c2*c3*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b3*x1*x2*z3 + c1*x1*x2*z3 + b1*c1*x1*x2*z3 + b3*c1*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*z3 + b1*b2*c2*x1*x2*z3 + b3*c2*x1*x2*z3 + c1*c2*x1*x2*z3 + b1*b2*c1*c2*x1*x2*z3 + b3*c1*c2*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + c3*x1*x2*z3 + b1*c3*x1*x2*z3 + b1*b2*c3*x1*x2*z3 + b3*c3*x1*x2*z3 + c1*c3*x1*x2*z3 + b1*b2*c1*c3*x1*x2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + c2*c3*x1*x2*z3 + b1*c2*c3*x1*x2*z3 + b3*c2*c3*x1*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z3 + b1*c2*x3*z3 + c1*c2*x3*z3 + b1*c1*c2*x3*z3 + b2*c1*c2*x3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b2*c1*x1*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*z3 + c2*x1*x3*z3 + b1*c2*x1*x3*z3 + c1*c2*x1*x3*z3 + b2*c1*c2*x1*x3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + b2*c3*x1*x3*z3 + b1*b2*c3*x1*x3*z3 + b1*b2*c1*c3*x1*x3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z3 + c2*c3*x1*x3*z3 + b1*c2*c3*x1*x3*z3 + b2*c2*c3*x1*x3*z3 + b1*b2*c2*c3*x1*x3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z3 + b1*c3*x2*x3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z3 + b1*c2*c3*x2*x3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z3 + b1*b2*y1*z3 + b1*b2*c1*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z3 + b1*c2*y1*z3 + b2*c2*y1*z3 + b1*b2*c2*y1*z3 + c1*c2*y1*z3 + b1*c1*c2*y1*z3 + b1*b2*c1*c2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + b2*c1*c3*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z3 + b1*b2*c2*c3*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*x1*y1*z3 + b2*c1*x1*y1*z3 + b1*b2*c1*x1*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y1*z3 + c2*x1*y1*z3 + b1*c1*c2*x1*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y1*z3 + b2*c3*x1*y1*z3 + b1*b2*c1*c3*x1*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y1*z3 + c2*c3*x1*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z3 + x2*y1*z3 + b1*x2*y1*z3 + b2*x2*y1*z3 + b1*b2*x2*y1*z3 + b3*x2*y1*z3 + c1*x2*y1*z3 + b1*b2*c1*x2*y1*z3 + b3*c1*x2*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*z3 + b3*c2*x2*y1*z3 + c1*c2*x2*y1*z3 + b1*c1*c2*x2*y1*z3 + b3*c1*c2*x2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + c3*x2*y1*z3 + b2*c3*x2*y1*z3 + b3*c3*x2*y1*z3 + b1*c1*c3*x2*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z3 + b1*c2*c3*x2*y1*z3 + b3*c2*c3*x2*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b1*b2*x3*y1*z3 + b1*b2*c1*x3*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*z3 + b1*c2*x3*y1*z3 + b1*b2*c2*x3*y1*z3 + c1*c2*x3*y1*z3 + b1*c1*c2*x3*y1*z3 + b2*c1*c2*x3*y1*z3 + b1*b2*c1*c2*x3*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + b2*c3*x3*y1*z3 + b2*c1*c3*x3*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z3 + c2*c3*x3*y1*z3 + b1*b2*c2*c3*x3*y1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + b1*c1*y2*z3 + b2*c1*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z3 + b1*b2*c2*y2*z3 + b2*c1*c2*y2*z3 + b1*b2*c1*c2*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + b1*c3*y2*z3 + b1*c1*c3*y2*z3 + b2*c1*c3*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + x1*y2*z3 + b3*x1*y2*z3 + b1*c1*x1*y2*z3 + b2*c1*x1*y2*z3 + b3*c1*x1*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y2*z3 + b2*c2*x1*y2*z3 + b3*c2*x1*y2*z3 + b1*b2*c1*c2*x1*y2*z3 + b3*c1*c2*x1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b2*c3*x1*y2*z3 + b3*c3*x1*y2*z3 + c1*c3*x1*y2*z3 + b1*c1*c3*x1*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z3 + b3*c2*c3*x1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + c1*x2*y2*z3 + b1*c1*x2*y2*z3 + b2*c1*x2*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y2*z3 + b1*c2*x2*y2*z3 + b1*b2*c2*x2*y2*z3 + c1*c2*x2*y2*z3 + b1*c1*c2*x2*y2*z3 + b2*c1*c2*x2*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*z3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*z3 + b1*c3*x2*y2*z3 + b1*b2*c3*x2*y2*z3 + c1*c3*x2*y2*z3 + b1*c1*c3*x2*y2*z3 + b2*c1*c3*x2*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y2*z3 + b1*x3*y2*z3 + c1*x3*y2*z3 + b1*c1*c2*x3*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z3 + b1*c3*x3*y2*z3 + b1*b2*c3*x3*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z3 + y1*y2*z3 + b1*y1*y2*z3 + b2*y1*y2*z3 + b1*b2*y1*y2*z3 + b3*y1*y2*z3 + b1*c1*y1*y2*z3 + b2*c1*y1*y2*z3 + b1*b2*c1*y1*y2*z3 + b3*c1*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y2*z3 + c2*y1*y2*z3 + b1*c2*y1*y2*z3 + b2*c2*y1*y2*z3 + b1*b2*c2*y1*y2*z3 + b3*c2*y1*y2*z3 + b3*c1*c2*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b1*c3*y1*y2*z3 + b1*b2*c3*y1*y2*z3 + b3*c3*y1*y2*z3 + c1*c3*y1*y2*z3 + b1*c1*c3*y1*y2*z3 + b1*b2*c1*c3*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + b3*c2*c3*y1*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b1*c1*c2*y3*z3 + b2*c1*c2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z3 + b2*c2*x1*y3*z3 + b2*c1*c2*x1*y3*z3 + b1*b2*c1*c2*x1*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z3 + b2*c3*x1*y3*z3 + b2*c1*c3*x1*y3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z3 + b1*c3*x2*y3*z3 + b1*b2*c3*x2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + b1*c2*c3*x2*y3*z3 + b1*b2*c2*c3*x2*y3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z3 + b1*c1*c2*x3*y3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z3 + b1*b2*c3*x3*y3*z3 + b1*c2*c3*x3*y3*z3 + b1*b2*y1*y3*z3 + b1*b2*c1*y1*y3*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z3 + b1*b2*c2*y1*y3*z3 + b2*c1*c2*y1*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + b2*c3*y1*y3*z3 + b1*b2*c3*y1*y3*z3 + b2*c1*c3*y1*y3*z3 + b1*b2*c1*c3*y1*y3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z3 + b1*y2*y3*z3 + c1*y2*y3*z3 + b1*c1*y2*y3*z3 + b2*c1*y2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + b1*c2*y2*y3*z3 + b1*c1*c2*y2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z3 + b1*c3*y2*y3*z3 + c1*c3*y2*y3*z3 + b1*c1*c3*y2*y3*z3 + b2*c1*c3*y2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + b1*c2*c3*y2*y3*z3 + b1*b2*c2*c3*y2*y3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z3 + b1*b2*c1*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z3 + b1*b2*c1*c2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b1*b2*c3*z1*z3 + b1*b2*c1*c3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*x1*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z1*z3 + b3*c2*x1*z1*z3 + b1*c1*c2*x1*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z1*z3 + b2*c1*c3*x1*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + x2*z1*z3 + b1*x2*z1*z3 + c1*x2*z1*z3 + b1*c1*x2*z1*z3 + b3*c1*x2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + c2*x2*z1*z3 + c1*c2*x2*z1*z3 + b1*b2*c1*c2*x2*z1*z3 + b3*c1*c2*x2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + c3*x2*z1*z3 + b2*c3*x2*z1*z3 + b3*c3*x2*z1*z3 + b1*c1*c3*x2*z1*z3 + b2*c1*c3*x2*z1*z3 + b1*b2*c1*c3*x2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + c2*c3*x2*z1*z3 + b1*c2*c3*x2*z1*z3 + b3*c2*c3*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*x3*z1*z3 + b2*c1*x3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1*z3 + b1*c2*x3*z1*z3 + b2*c2*x3*z1*z3 + c1*c2*x3*z1*z3 + b2*c1*c2*x3*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z3 + b2*c3*x3*z1*z3 + b1*b2*c1*c3*x3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1*z3 + c2*c3*x3*z1*z3 + b1*c2*c3*x3*z1*z3 + b2*c2*c3*x3*z1*z3 + b1*b2*c2*c3*x3*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b2*y1*z1*z3 + b1*b2*y1*z1*z3 + b2*c1*y1*z1*z3 + b1*b2*c1*y1*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z1*z3 + c2*y1*z1*z3 + b1*c2*y1*z1*z3 + b3*c2*y1*z1*z3 + c1*c2*y1*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z1*z3 + b2*c3*y1*z1*z3 + b1*b2*c3*y1*z1*z3 + b2*c1*c3*y1*z1*z3 + b1*b2*c1*c3*y1*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z1*z3 + b1*c2*c3*y1*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + y2*z1*z3 + b1*y2*z1*z3 + b2*y2*z1*z3 + c1*y2*z1*z3 + b3*c1*y2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + c2*y2*z1*z3 + b1*b2*c2*y2*z1*z3 + b1*c1*c2*y2*z1*z3 + b1*b2*c1*c2*y2*z1*z3 + b3*c1*c2*y2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + c3*y2*z1*z3 + b1*c3*y2*z1*z3 + b2*c3*y2*z1*z3 + b3*c3*y2*z1*z3 + b2*c1*c3*y2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z3 + b3*c2*c3*y2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*z1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*z1*z3 + b1*b2*c2*y3*z1*z3 + b2*c1*c2*y3*z1*z3 + b1*b2*c1*c2*y3*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z3 + b2*c1*c3*y3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z3 + b1*b2*c1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z2*z3 + b1*b2*c2*z2*z3 + b1*c1*c2*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3 + b1*c1*c3*z2*z3 + b1*b2*c1*c3*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2*z3 + b1*b2*c2*c3*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*x1*z2*z3 + b1*c1*x1*z2*z3 + b2*c1*x1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + b1*c2*x1*z2*z3 + b2*c2*x1*z2*z3 + b1*b2*c2*x1*z2*z3 + b1*b2*c1*c2*x1*z2*z3 + b3*c1*c2*x1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + c3*x1*z2*z3 + b1*c3*x1*z2*z3 + b2*c3*x1*z2*z3 + c1*c3*x1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*z3 + b1*c2*c3*x1*z2*z3 + b3*c2*c3*x1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b1*x2*z2*z3 + b1*b2*c1*x2*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z2*z3 + b1*b2*c2*x2*z2*z3 + b1*b2*c1*c2*x2*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z2*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z2*z3 + b1*c3*x2*z2*z3 + c1*c3*x2*z2*z3 + b1*c1*c3*x2*z2*z3 + b2*c1*c3*x2*z2*z3 + b1*b2*c1*c3*x2*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z2*z3 + b1*b2*x3*z2*z3 + b1*c1*x3*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z2*z3 + b1*b2*c2*x3*z2*z3 + b1*c1*c2*x3*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z2*z3 + b1*b2*c3*x3*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2*z3 + y1*z2*z3 + b1*c1*y1*z2*z3 + b2*c1*y1*z2*z3 + b1*b2*c1*y1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z2*z3 + c2*y1*z2*z3 + b2*c2*y1*z2*z3 + b3*c1*c2*y1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + c3*y1*z2*z3 + b1*c1*c3*y1*z2*z3 + b1*b2*c1*c3*y1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*z3 + c2*c3*y1*z2*z3 + b1*c2*c3*y1*z2*z3 + b3*c2*c3*y1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b1*b2*c1*y2*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z2*z3 + c1*c2*y2*z2*z3 + b2*c1*c2*y2*z2*z3 + b1*b2*c1*c2*y2*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z2*z3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z2*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z2*z3 + b1*b2*c1*c3*y2*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z2*z3 + b1*b2*y3*z2*z3 + b1*b2*c1*y3*z2*z3 + b1*b2*c2*y3*z2*z3 + b1*c1*c2*y3*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2*z3 + b1*b2*c3*y3*z2*z3 + b1*b2*c1*c3*y3*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2*z3 + b2*z1*z2*z3 + b1*c1*z1*z2*z3 + b2*c1*z1*z2*z3 + b1*b2*c1*z1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + b2*c2*z1*z2*z3 + b1*b2*c2*z1*z2*z3 + b3*c2*z1*z2*z3 + b1*c1*c2*z1*z2*z3 + b1*b2*c1*c2*z1*z2*z3 + b3*c1*c2*z1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*c3*z1*z2*z3 + b2*c3*z1*z2*z3 + b1*b2*c3*z1*z2*z3 + b1*c1*c3*z1*z2*z3 + b2*c1*c3*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*z3 + b1*c2*c3*z1*z2*z3 + b3*c2*c3*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + (b1*b2*z3*(1 + z3))/2 + (b2*c1*z3*(1 + z3))/2 + (b1*c2*z3*(1 + z3))/2 + (b1*b2*c2*z3*(1 + z3))/2 + (c1*c2*z3*(1 + z3))/2 + (b1*c1*c2*z3*(1 + z3))/2 + (b1*b2*c1*c2*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z3*(1 + z3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z3*(1 + z3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z3*(1 + z3))/2 + (c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + (b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + (b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + (b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + (b1*b2*c3*z3*(1 + z3))/2 + (b1*c2*c3*z3*(1 + z3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z3*(1 + z3))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z3*(1 + z3))/2 + (b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z3*(1 + z3))/2 + (b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z3*(1 + z3))/2;
end;
#####################################################################
C2in119:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return b2*c3*x1 + b2*c1*c3*x1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1 + 2*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1 + b2*c2*c3*x1 + b1*b2*c2*c3*x1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + 2*b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1 + (b2*c3*x1*(1 + x1))/2 + (b1*b2*c3*x1*(1 + x1))/2 + (b1*b2*c1*c3*x1*(1 + x1))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*(1 + x1))/2 + (b1*c2*c3*x1*(1 + x1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*(1 + x1))/2 + (b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*(1 + x1))/2 + (b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*(1 + x1))/2 + (b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*(1 + x1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*(1 + x1))/2 + (b2*c1*c3*x1^2*(1 + x1))/2 + (b1*c2*c3*x1^2*(1 + x1))/2 + (b2*c2*c3*x1^2*(1 + x1))/2 + b1*c3*x2 + b2*c1*c3*x2 + b1*b2*c1*c3*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2 + b1*b2*c2*c3*x2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2 + 2*b1*c3*x1*x2 + b2*c3*x1*x2 + c1*c3*x1*x2 + b1*c1*c3*x1*x2 + b2*c1*c3*x1*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2 + b2*c2*c3*x1*x2 + b1*b2*c2*c3*x1*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2 + 2*b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + 2*b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + 2*b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + 2*b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2 + (c1*c3*x1*(1 + x1)*x2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*(1 + x1)*x2)/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*(1 + x1)*x2)/2 + (b1*c2*c3*x1*(1 + x1)*x2)/2 + (b2*c2*c3*x1*(1 + x1)*x2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*(1 + x1)*x2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*(1 + x1)*x2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*(1 + x1)*x2)/2 + (b1*c3*x2*(1 + x2))/2 + (b1*b2*c3*x2*(1 + x2))/2 + (b1*c1*c3*x2*(1 + x2))/2 + (b2*c1*c3*x2*(1 + x2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*(1 + x2))/2 + (b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*(1 + x2))/2 + (b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*(1 + x2))/2 + (b1*c2*c3*x2*(1 + x2))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*(1 + x2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*(1 + x2))/2 + (c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + (c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + (c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2))/2 + (c1*c3*x1*x2*(1 + x2))/2 + (b2*c1*c3*x1*x2*(1 + x2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*(1 + x2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*(1 + x2))/2 + (b1*c2*c3*x1*x2*(1 + x2))/2 + (b2*c2*c3*x1*x2*(1 + x2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*(1 + x2))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*(1 + x2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*(1 + x2))/2 + (b1*c2*c3*x2^2*(1 + x2))/2 + b1*b2*x3 + b2*c1*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3 + b1*c2*x3 + c1*c2*x3 + b2*c1*c2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3 + b1*b2*c2*c3*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3 + 2*b2*x1*x3 + 2*b2*c1*x1*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3 + 2*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3 + 2*b2*c2*x1*x3 + 2*b1*c1*c2*x1*x3 + b1*b2*c1*c2*x1*x3 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3 + b2*c3*x1*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3 + b1*c2*c3*x1*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3 + 2*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + 2*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + 2*b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + 2*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3 + (b2*c1*x1*(1 + x1)*x3)/2 + (b2*c2*x1*(1 + x1)*x3)/2 + b1*x2*x3 + c1*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3 + b1*c2*x2*x3 + b1*c1*c2*x2*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3 + b1*c3*x2*x3 + b1*b2*c3*x2*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3 + b1*c2*c3*x2*x3 + b1*b2*c2*c3*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + 2*b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3 + c1*x1*x2*x3 + b3*c1*x1*x2*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*x3 + c2*x1*x2*x3 + b1*c2*x1*x2*x3 + b2*c2*x1*x2*x3 + 2*c1*c2*x1*x2*x3 + b1*c1*c2*x1*x2*x3 + 2*b2*c1*c2*x1*x2*x3 + b3*c1*c2*x1*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x2*x3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*x3 + c1*c3*x1*x2*x3 + b2*c1*c3*x1*x2*x3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*x3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*x3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*x3 + 2*c2*c3*x1*x2*x3 + b1*c2*c3*x1*x2*x3 + 2*b2*c2*c3*x1*x2*x3 + b3*c2*c3*x1*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*x3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*x3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*x3 + (b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*(1 + x3))/2 + (b1*c2*x3*(1 + x3))/2 + (b1*b2*c2*x3*(1 + x3))/2 + (c1*c2*x3*(1 + x3))/2 + (b1*b2*c1*c2*x3*(1 + x3))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*(1 + x3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*(1 + x3))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3))/2 + (b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3))/2 + (b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3))/2 + (b1*b2*c3*x3*(1 + x3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*(1 + x3))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*(1 + x3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*(1 + x3))/2 + (b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*(1 + x3))/2 + (b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*(1 + x3))/2 + (b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*(1 + x3))/2 + (b1*c2*x1*x3*(1 + x3))/2 + (b1*c1*c2*x1*x3*(1 + x3))/2 + (b2*c1*c3*x1*x3*(1 + x3))/2 + (b2*c2*c3*x1*x3*(1 + x3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*(1 + x3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*(1 + x3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*(1 + x3))/2 + 2*b2*c3*y1 + b2*c1*c3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1 + 2*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1 + b2*c2*c3*y1 + b1*b2*c2*c3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + 2*b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1 + 2*b2*c3*x1*y1 + b2*c1*c3*x1*y1 + b1*b2*c1*c3*x1*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y1 + c2*c3*x1*y1 + b2*c2*c3*x1*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1 + (b2*c1*c3*x1*(1 + x1)*y1)/2 + (c2*c3*x1*(1 + x1)*y1)/2 + (b2*c2*c3*x1*(1 + x1)*y1)/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*(1 + x1)*y1)/2 + 2*c3*x2*y1 + b1*c3*x2*y1 + c1*c3*x2*y1 + 2*b2*c1*c3*x2*y1 + b1*b2*c1*c3*x2*y1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1 + 2*b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1 + c2*c3*x2*y1 + b1*c2*c3*x2*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + 2*b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + 2*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1 + c3*x1*x2*y1 + b1*c3*x1*x2*y1 + b1*c1*c3*x1*x2*y1 + b2*c1*c3*x1*x2*y1 + b1*b2*c1*c3*x1*x2*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y1 + c2*c3*x1*x2*y1 + b2*c2*c3*x1*x2*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y1 + (c3*x2*(1 + x2)*y1)/2 + (b2*c3*x2*(1 + x2)*y1)/2 + (b2*c1*c3*x2*(1 + x2)*y1)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*(1 + x2)*y1)/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*(1 + x2)*y1)/2 + (c2*c3*x2*(1 + x2)*y1)/2 + (b2*c2*c3*x2*(1 + x2)*y1)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*(1 + x2)*y1)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*(1 + x2)*y1)/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*(1 + x2)*y1)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*(1 + x2)*y1)/2 + ((a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*(1 + x2)*y1)/2 + b2*x3*y1 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1 + 2*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1 + 2*c2*x3*y1 + b1*c2*x3*y1 + c1*c2*x3*y1 + b1*c1*c2*x3*y1 + b1*b2*c1*c2*x3*y1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1 + b2*c3*x3*y1 + b2*c1*c3*x3*y1 + b1*b2*c1*c3*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1 + b1*c2*c3*x3*y1 + b2*c2*c3*x3*y1 + b1*b2*c2*c3*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + 2*b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + 2*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1 + b2*c1*x1*x3*y1 + b2*c2*x1*x3*y1 + b1*c1*c2*x1*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y1 + b2*c3*x1*x3*y1 + b1*b2*c1*c3*x1*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y1 + c2*c3*x1*x3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y1 + x2*x3*y1 + b3*c1*x2*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y1 + c2*x2*x3*y1 + b1*c2*x2*x3*y1 + b2*c2*x2*x3*y1 + c1*c2*x2*x3*y1 + b1*c1*c2*x2*x3*y1 + 2*b2*c1*c2*x2*x3*y1 + b3*c1*c2*x2*x3*y1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*y1 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y1 + b1*c3*x2*x3*y1 + 2*b2*c3*x2*x3*y1 + c1*c3*x2*x3*y1 + b2*c1*c3*x2*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y1 + c2*c3*x2*x3*y1 + b1*c2*c3*x2*x3*y1 + b2*c2*c3*x2*x3*y1 + b3*c2*c3*x2*x3*y1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*y1 + (b1*c1*c2*x3*(1 + x3)*y1)/2 + (b2*c3*x3*(1 + x3)*y1)/2 + (b2*c1*c3*x3*(1 + x3)*y1)/2 + (b2*c2*c3*x3*(1 + x3)*y1)/2 + (b2*c3*y1*(1 + y1))/2 + (b1*b2*c3*y1*(1 + y1))/2 + (b1*b2*c1*c3*y1*(1 + y1))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*(1 + y1))/2 + (b1*c2*c3*y1*(1 + y1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*(1 + y1))/2 + (b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*(1 + y1))/2 + (b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*(1 + y1))/2 + (b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*(1 + y1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*(1 + y1))/2 + (b2*c1*c3*x1*y1*(1 + y1))/2 + (c2*c3*x1*y1*(1 + y1))/2 + (b2*c2*c3*x1*y1*(1 + y1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*(1 + y1))/2 + (c3*x2*y1*(1 + y1))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*(1 + y1))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*(1 + y1))/2 + (c2*c3*x2*y1*(1 + y1))/2 + (b2*c2*c3*x2*y1*(1 + y1))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*(1 + y1))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*(1 + y1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*(1 + y1))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*(1 + y1))/2 + (b2*c1*x3*y1*(1 + y1))/2 + (b2*c2*x3*y1*(1 + y1))/2 + (b2*c1*c3*y1^2*(1 + y1))/2 + (b1*c2*c3*y1^2*(1 + y1))/2 + (b2*c2*c3*y1^2*(1 + y1))/2 + b1*c1*c3*y2 + b2*c1*c3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2 + b1*b2*c2*c3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2 + 2*c3*x1*y2 + b1*c3*x1*y2 + b2*c3*x1*y2 + 2*c1*c3*x1*y2 + b2*c1*c3*x1*y2 + b1*b2*c1*c3*x1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2 + c2*c3*x1*y2 + b1*c2*c3*x1*y2 + 2*b2*c2*c3*x1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + 2*b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + 2*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*(1 + x1)*y2)/2 + (c2*c3*x1*(1 + x1)*y2)/2 + (b2*c2*c3*x1*(1 + x1)*y2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*(1 + x1)*y2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*(1 + x1)*y2)/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*(1 + x1)*y2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*(1 + x1)*y2)/2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2 + c3*x1*x2*y2 + b1*c3*x1*x2*y2 + 2*b2*c3*x1*x2*y2 + 2*b2*c1*c3*x1*x2*y2 + b1*b2*c1*c3*x1*x2*y2 + c2*c3*x1*x2*y2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y2 + (c1*c3*x2*(1 + x2)*y2)/2 + b1*x3*y2 + c1*x3*y2 + b1*c1*x3*y2 + b2*c1*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2 + c1*c2*x3*y2 + b1*c1*c2*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2 + 2*b1*c3*x3*y2 + c1*c3*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2 + b1*b2*c2*c3*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2 + 2*x1*x3*y2 + c1*x1*x3*y2 + b3*c1*x1*x3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*y2 + b2*c2*x1*x3*y2 + b1*c1*c2*x1*x3*y2 + 2*b2*c1*c2*x1*x3*y2 + b3*c1*c2*x1*x3*y2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y2 + 2*c3*x1*x3*y2 + b2*c3*x1*x3*y2 + c1*c3*x1*x3*y2 + b1*c1*c3*x1*x3*y2 + b2*c1*c3*x1*x3*y2 + b1*b2*c1*c3*x1*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*y2 + b2*c2*c3*x1*x3*y2 + b3*c2*c3*x1*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x3*y2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*y2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y2 + c1*x2*x3*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y2 + b1*c2*x2*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y2 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*y2 + b1*c3*x2*x3*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*y2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*(1 + x3)*y2)/2 + (b1*c2*x3*(1 + x3)*y2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*(1 + x3)*y2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3)*y2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*(1 + x3)*y2)/2 + 2*c3*y1*y2 + c1*c3*y1*y2 + b1*c1*c3*y1*y2 + b1*b2*c1*c3*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2 + 2*b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2 + b2*c2*c3*y1*y2 + b1*b2*c2*c3*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2 + 2*b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2 + 2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + 2*b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + 2*b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2 + c3*x1*y1*y2 + b1*c1*c3*x1*y1*y2 + b2*c1*c3*x1*y1*y2 + b1*b2*c1*c3*x1*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y1*y2 + c2*c3*x1*y1*y2 + b2*c2*c3*x1*y1*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*y2 + b1*c3*x2*y1*y2 + 2*b2*c3*x2*y1*y2 + c1*c3*x2*y1*y2 + b1*c1*c3*x2*y1*y2 + 2*b2*c1*c3*x2*y1*y2 + b1*b2*c1*c3*x2*y1*y2 + c2*c3*x2*y1*y2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y2 + x3*y1*y2 + b1*x3*y1*y2 + c1*x3*y1*y2 + b1*c1*x3*y1*y2 + b3*c1*x3*y1*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*y2 + c2*x3*y1*y2 + b1*c2*x3*y1*y2 + b2*c2*x3*y1*y2 + c1*c2*x3*y1*y2 + 2*b2*c1*c2*x3*y1*y2 + b3*c1*c2*x3*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y2 + c3*x3*y1*y2 + b1*c3*x3*y1*y2 + 2*b2*c3*x3*y1*y2 + b2*c1*c3*x3*y1*y2 + b1*b2*c1*c3*x3*y1*y2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*y2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*y2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*y2 + b2*c2*c3*x3*y1*y2 + b3*c2*c3*x3*y1*y2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*y2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y2 + (c1*c3*y1*(1 + y1)*y2)/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*(1 + y1)*y2)/2 + (b1*c2*c3*y1*(1 + y1)*y2)/2 + (b2*c2*c3*y1*(1 + y1)*y2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*(1 + y1)*y2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*(1 + y1)*y2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*(1 + y1)*y2)/2 + (b1*b2*c3*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*(1 + y2))/2 + (b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*(1 + y2))/2 + (b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*(1 + y2))/2 + (b1*c2*c3*y2*(1 + y2))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*(1 + y2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2))/2 + (c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2))/2 + (c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2))/2 + (b2*c1*c3*x1*y2*(1 + y2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*(1 + y2))/2 + (c2*c3*x1*y2*(1 + y2))/2 + (b2*c2*c3*x1*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2*(1 + y2))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2*(1 + y2))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*(1 + y2))/2 + (c1*c3*x2*y2*(1 + y2))/2 + (b2*c3*y1*y2*(1 + y2))/2 + (c1*c3*y1*y2*(1 + y2))/2 + (b2*c1*c3*y1*y2*(1 + y2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*(1 + y2))/2 + (b1*c2*c3*y1*y2*(1 + y2))/2 + (b2*c2*c3*y1*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2*(1 + y2))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2*(1 + y2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*(1 + y2))/2 + ((a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*(1 + y2))/2 + (b1*c2*c3*y2^2*(1 + y2))/2 + b1*b2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3 + c1*c2*y3 + b2*c1*c2*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3 + b1*b2*c3*y3 + b1*b2*c2*c3*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3 + b2*c1*x1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3 + 2*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3 + c2*x1*y3 + b2*c2*x1*y3 + c1*c2*x1*y3 + b1*c1*c2*x1*y3 + b1*b2*c1*c2*x1*y3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3 + 2*b2*c1*c3*x1*y3 + b1*b2*c1*c3*x1*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3 + c2*c3*x1*y3 + b1*c2*c3*x1*y3 + 2*b2*c2*c3*x1*y3 + b1*b2*c2*c3*x1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + 2*b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + 2*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3 + (b2*c1*x1*(1 + x1)*y3)/2 + (b2*c2*x1*(1 + x1)*y3)/2 + b1*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3 + b1*c2*x2*y3 + b1*c1*c2*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3 + b1*c3*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3 + b1*b2*c2*c3*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3 + x1*x2*y3 + 2*c1*x1*x2*y3 + b3*c1*x1*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*y3 + b2*c2*x1*x2*y3 + c1*c2*x1*x2*y3 + b1*c1*c2*x1*x2*y3 + 2*b2*c1*c2*x1*x2*y3 + b1*b2*c1*c2*x1*x2*y3 + b3*c1*c2*x1*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*y3 + c3*x1*x2*y3 + b1*c3*x1*x2*y3 + 2*b2*c3*x1*x2*y3 + c1*c3*x1*x2*y3 + b1*c1*c3*x1*x2*y3 + b2*c1*c3*x1*x2*y3 + b1*b2*c1*c3*x1*x2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*y3 + 2*c2*c3*x1*x2*y3 + b1*c2*c3*x1*x2*y3 + b2*c2*c3*x1*x2*y3 + b3*c2*c3*x1*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*y3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y3 + b1*b2*c2*x3*y3 + b1*b2*c1*c2*x3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y3 + b1*b2*c2*c3*x3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*y3 + c2*x1*x3*y3 + 2*b1*c2*x1*x3*y3 + b1*b2*c2*x1*x3*y3 + 2*c1*c2*x1*x3*y3 + b1*c1*c2*x1*x3*y3 + b1*b2*c1*c2*x1*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*y3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*y3 + b2*c3*x1*x3*y3 + 2*b2*c1*c3*x1*x3*y3 + b1*b2*c1*c3*x1*x3*y3 + 2*c2*c3*x1*x3*y3 + b1*c2*c3*x1*x3*y3 + b2*c2*c3*x1*x3*y3 + b1*b2*c2*c3*x1*x3*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*y3 + b1*c2*x2*x3*y3 + b1*b2*c2*x2*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*y3 + b1*c3*x2*x3*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*y3 + b1*b2*c2*c3*x2*x3*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*y3 + 2*b2*y1*y3 + b2*c1*y1*y3 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3 + 2*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3 + b1*c2*y1*y3 + b2*c2*y1*y3 + 2*c1*c2*y1*y3 + 2*b1*c1*c2*y1*y3 + b1*b2*c1*c2*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3 + b2*c3*y1*y3 + b2*c1*c3*y1*y3 + b1*b2*c1*c3*y1*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3 + c2*c3*y1*y3 + b1*c2*c3*y1*y3 + 2*b2*c2*c3*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + 2*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + 2*b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + 2*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3 + 2*b2*c1*x1*y1*y3 + c2*x1*y1*y3 + 2*b2*c2*x1*y1*y3 + b1*c1*c2*x1*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y1*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y1*y3 + b1*b2*c1*c3*x1*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y1*y3 + c2*c3*x1*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*y3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*y3 + x2*y1*y3 + b1*x2*y1*y3 + c1*x2*y1*y3 + b1*c1*x2*y1*y3 + b3*c1*x2*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*y3 + c2*x2*y1*y3 + b1*c2*x2*y1*y3 + 2*b2*c2*x2*y1*y3 + 2*c1*c2*x2*y1*y3 + 2*b2*c1*c2*x2*y1*y3 + b1*b2*c1*c2*x2*y1*y3 + b3*c1*c2*x2*y1*y3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y1*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*y3 + c3*x2*y1*y3 + b1*c3*x2*y1*y3 + 2*b2*c3*x2*y1*y3 + c1*c3*x2*y1*y3 + b2*c1*c3*x2*y1*y3 + b1*b2*c1*c3*x2*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*y3 + c2*c3*x2*y1*y3 + b1*c2*c3*x2*y1*y3 + 2*b2*c2*c3*x2*y1*y3 + b3*c2*c3*x2*y1*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*y3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*y3 + b2*x3*y1*y3 + b2*c1*x3*y1*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*y3 + c2*x3*y1*y3 + 2*b1*c2*x3*y1*y3 + b2*c2*x3*y1*y3 + b1*b2*c2*x3*y1*y3 + 2*c1*c2*x3*y1*y3 + 2*b1*c1*c2*x3*y1*y3 + b1*b2*c1*c2*x3*y1*y3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*y3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*y3 + b2*c3*x3*y1*y3 + b2*c1*c3*x3*y1*y3 + b1*b2*c1*c3*x3*y1*y3 + 2*c2*c3*x3*y1*y3 + b2*c2*c3*x3*y1*y3 + b1*b2*c2*c3*x3*y1*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*y3 + (b2*c1*y1*(1 + y1)*y3)/2 + (b2*c2*y1*(1 + y1)*y3)/2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3 + b1*c2*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3 + b1*b2*c3*y2*y3 + c1*c3*y2*y3 + b1*c1*c3*y2*y3 + b2*c1*c3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3 + b1*c2*c3*y2*y3 + b1*b2*c2*c3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*y3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + 2*b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3 + x1*y2*y3 + c1*x1*y2*y3 + b1*c1*x1*y2*y3 + b2*c1*x1*y2*y3 + b3*c1*x1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y2*y3 + 2*c2*x1*y2*y3 + 2*b2*c2*x1*y2*y3 + c1*c2*x1*y2*y3 + b1*c1*c2*x1*y2*y3 + 2*b2*c1*c2*x1*y2*y3 + b1*b2*c1*c2*x1*y2*y3 + b3*c1*c2*x1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*y3 + c3*x1*y2*y3 + c1*c3*x1*y2*y3 + b2*c1*c3*x1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*y3 + 2*b2*c2*c3*x1*y2*y3 + b3*c2*c3*x1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*y3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y2*y3 + c1*c2*x2*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*y3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*y3 + c1*c3*x2*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y2*y3 + b1*x3*y2*y3 + c1*x3*y2*y3 + b1*c1*x3*y2*y3 + b2*c1*x3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*y3 + b1*b2*c2*x3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*y3 + b1*c3*x3*y2*y3 + c1*c3*x3*y2*y3 + b1*c1*c3*x3*y2*y3 + b2*c1*c3*x3*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*y3 + b1*c2*c3*x3*y2*y3 + b1*b2*c2*c3*x3*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*y3 + y1*y2*y3 + c1*y1*y2*y3 + b1*c1*y1*y2*y3 + b2*c1*y1*y2*y3 + b3*c1*y1*y2*y3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y2*y3 + 2*c2*y1*y2*y3 + b2*c2*y1*y2*y3 + b1*c1*c2*y1*y2*y3 + 2*b2*c1*c2*y1*y2*y3 + b1*b2*c1*c2*y1*y2*y3 + b3*c1*c2*y1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*y3 + b2*c3*y1*y2*y3 + b2*c1*c3*y1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*y3 + 2*b2*c2*c3*y1*y2*y3 + b3*c2*c3*y1*y2*y3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2*y3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*y3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*y3 + (b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*(1 + y3))/2 + (b1*b2*c2*y3*(1 + y3))/2 + (c1*c2*y3*(1 + y3))/2 + (b1*c1*c2*y3*(1 + y3))/2 + (b1*b2*c1*c2*y3*(1 + y3))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*(1 + y3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*(1 + y3))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + (c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + (b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + (b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3))/2 + (b1*b2*c3*y3*(1 + y3))/2 + (b1*c2*c3*y3*(1 + y3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3*(1 + y3))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*(1 + y3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*(1 + y3))/2 + (b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*(1 + y3))/2 + (b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*(1 + y3))/2 + (b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*(1 + y3))/2 + (b1*c2*x1*y3*(1 + y3))/2 + (b1*c1*c2*x1*y3*(1 + y3))/2 + (b2*c1*c3*x1*y3*(1 + y3))/2 + (b2*c2*c3*x1*y3*(1 + y3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*(1 + y3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*(1 + y3))/2 + (c1*c3*x2*y3*(1 + y3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*(1 + y3))/2 + (c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*(1 + y3))/2 + (b1*c1*c2*y1*y3*(1 + y3))/2 + (b2*c3*y1*y3*(1 + y3))/2 + (b2*c1*c3*y1*y3*(1 + y3))/2 + (b2*c2*c3*y1*y3*(1 + y3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*(1 + y3))/2 + (b1*c2*y2*y3*(1 + y3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*(1 + y3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*(1 + y3))/2 + (c1*c3*y2*y3*(1 + y3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*(1 + y3))/2 + (c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*(1 + y3))/2 + 2*b2*c1*c3*z1 + b1*b2*c1*c3*z1 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1 + 2*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1 + 2*b2*c2*c3*z1 + b1*b2*c2*c3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + 2*b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1 + b2*c3*x1*z1 + b1*b2*c3*x1*z1 + 2*b2*c1*c3*x1*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1 + 2*b2*c2*c3*x1*z1 + b1*b2*c2*c3*x1*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1 + 2*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1 + 2*b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1 + (b2*c3*x1*(1 + x1)*z1)/2 + (b2*c1*c3*x1*(1 + x1)*z1)/2 + (b1*c2*c3*x1*(1 + x1)*z1)/2 + (b2*c2*c3*x1*(1 + x1)*z1)/2 + b1*c3*x2*z1 + b2*c3*x2*z1 + b2*c1*c3*x2*z1 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1 + b1*c2*c3*x2*z1 + 2*b2*c2*c3*x2*z1 + b1*b2*c2*c3*x2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z1 + 2*b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + 2*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + 2*b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1 + b3*x1*x2*z1 + b1*c3*x1*x2*z1 + 2*b2*c3*x1*x2*z1 + 2*c1*c3*x1*x2*z1 + b1*c1*c3*x1*x2*z1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z1 + b1*c2*c3*x1*x2*z1 + b2*c2*c3*x1*x2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z1 + (b2*c3*x2*(1 + x2)*z1)/2 + (b2*c1*c3*x2*(1 + x2)*z1)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*(1 + x2)*z1)/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*(1 + x2)*z1)/2 + (b1*c2*c3*x2*(1 + x2)*z1)/2 + (b2*c2*c3*x2*(1 + x2)*z1)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*(1 + x2)*z1)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*(1 + x2)*z1)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*(1 + x2)*z1)/2 + b2*x3*z1 + b2*c1*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1 + 2*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1 + 2*b1*c2*x3*z1 + b2*c2*x3*z1 + b1*b2*c2*x3*z1 + 2*b1*c1*c2*x3*z1 + b1*b2*c1*c2*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1 + b2*c3*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1 + b1*c2*c3*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + 2*b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + 2*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1 + b2*x1*x3*z1 + b1*c2*x1*x3*z1 + b2*c2*x1*x3*z1 + b3*c2*x1*x3*z1 + b1*c1*c2*x1*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z1 + b2*c3*x1*x3*z1 + b2*c1*c3*x1*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z1 + b3*x2*x3*z1 + b3*c1*x2*x3*z1 + c2*x2*x3*z1 + b2*c2*x2*x3*z1 + b3*c2*x2*x3*z1 + 2*c1*c2*x2*x3*z1 + b1*c1*c2*x2*x3*z1 + 2*b2*c1*c2*x2*x3*z1 + b3*c1*c2*x2*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z1 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z1 + b1*c3*x2*x3*z1 + 2*b2*c3*x2*x3*z1 + b1*c1*c3*x2*x3*z1 + 2*b2*c1*c3*x2*x3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z1 + 2*c2*c3*x2*x3*z1 + b1*c2*c3*x2*x3*z1 + 2*b2*c2*c3*x2*x3*z1 + b3*c2*c3*x2*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*x3*z1 + (b1*c1*c2*x3*(1 + x3)*z1)/2 + (b2*c3*x3*(1 + x3)*z1)/2 + (b2*c1*c3*x3*(1 + x3)*z1)/2 + (b2*c2*c3*x3*(1 + x3)*z1)/2 + (b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*(1 + x3)*z1)/2 + (b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*(1 + x3)*z1)/2 + (c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*(1 + x3)*z1)/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*(1 + x3)*z1)/2 + 2*b2*c3*y1*z1 + b1*b2*c3*y1*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z1 + 2*b2*c2*c3*y1*z1 + b1*b2*c2*c3*y1*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1 + 2*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1 + 2*b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1 + 2*b2*c3*x1*y1*z1 + b1*b2*c3*x1*y1*z1 + b2*c1*c3*x1*y1*z1 + c2*c3*x1*y1*z1 + b2*c2*c3*x1*y1*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z1 + b3*x2*y1*z1 + c3*x2*y1*z1 + b1*c3*x2*y1*z1 + b2*c3*x2*y1*z1 + b1*b2*c3*x2*y1*z1 + c1*c3*x2*y1*z1 + b2*c1*c3*x2*y1*z1 + b1*b2*c1*c3*x2*y1*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z1 + c2*c3*x2*y1*z1 + b2*c2*c3*x2*y1*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z1 + b2*x3*y1*z1 + b2*c2*x3*y1*z1 + b3*c2*x3*y1*z1 + c1*c2*x3*y1*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z1 + 2*b2*c3*x3*y1*z1 + b1*b2*c3*x3*y1*z1 + b2*c1*c3*x3*y1*z1 + b1*b2*c1*c3*x3*y1*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z1 + b1*c2*c3*x3*y1*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z1 + (b2*c3*y1*(1 + y1)*z1)/2 + (b2*c1*c3*y1*(1 + y1)*z1)/2 + (c2*c3*y1*(1 + y1)*z1)/2 + (b2*c2*c3*y1*(1 + y1)*z1)/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*(1 + y1)*z1)/2 + b1*c3*y2*z1 + b1*b2*c3*y2*z1 + c1*c3*y2*z1 + b1*c1*c3*y2*z1 + b2*c1*c3*y2*z1 + b1*b2*c1*c3*y2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1 + b1*c2*c3*y2*z1 + b2*c2*c3*y2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + 2*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + 2*b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + 2*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + 2*b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1 + b3*x1*y2*z1 + b2*c3*x1*y2*z1 + b1*b2*c3*x1*y2*z1 + c1*c3*x1*y2*z1 + b1*c1*c3*x1*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z1 + c2*c3*x1*y2*z1 + b2*c2*c3*x1*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z1 + c3*x2*y2*z1 + b1*c3*x2*y2*z1 + b1*b2*c3*x2*y2*z1 + c1*c3*x2*y2*z1 + 2*b2*c1*c3*x2*y2*z1 + b1*b2*c1*c3*x2*y2*z1 + c2*c3*x2*y2*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2*z1 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y2*z1 + x3*y2*z1 + b3*x3*y2*z1 + b3*c1*x3*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*z1 + b2*c2*x3*y2*z1 + b3*c2*x3*y2*z1 + 2*b2*c1*c2*x3*y2*z1 + b3*c1*c2*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z1 + 2*c3*x3*y2*z1 + b2*c3*x3*y2*z1 + b1*b2*c3*x3*y2*z1 + 2*b2*c1*c3*x3*y2*z1 + b1*b2*c1*c3*x3*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z1 + b2*c2*c3*x3*y2*z1 + b3*c2*c3*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y2*z1 + b3*y1*y2*z1 + b1*c3*y1*y2*z1 + 2*b2*c3*y1*y2*z1 + c1*c3*y1*y2*z1 + b2*c1*c3*y1*y2*z1 + b1*b2*c1*c3*y1*y2*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z1 + c2*c3*y1*y2*z1 + b2*c2*c3*y1*y2*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z1 + (c3*y2*(1 + y2)*z1)/2 + (c1*c3*y2*(1 + y2)*z1)/2 + (b2*c1*c3*y2*(1 + y2)*z1)/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*(1 + y2)*z1)/2 + (c2*c3*y2*(1 + y2)*z1)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*(1 + y2)*z1)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*(1 + y2)*z1)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*(1 + y2)*z1)/2 + (c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2)*z1)/2 + (c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*(1 + y2)*z1)/2 + 2*b2*y3*z1 + 2*b2*c1*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*z1 + 2*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*z1 + b1*c2*y3*z1 + b2*c2*y3*z1 + b1*b2*c2*y3*z1 + c1*c2*y3*z1 + b1*c1*c2*y3*z1 + b1*b2*c1*c2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1 + 2*b2*c3*y3*z1 + b1*b2*c3*y3*z1 + 2*b2*c1*c3*y3*z1 + b1*b2*c1*c3*y3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1 + c2*c3*y3*z1 + b1*c2*c3*y3*z1 + b2*c2*c3*y3*z1 + b1*b2*c2*c3*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + 2*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + 2*b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + 2*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1 + b2*x1*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z1 + c2*x1*y3*z1 + b2*c2*x1*y3*z1 + b1*b2*c2*x1*y3*z1 + b3*c2*x1*y3*z1 + b1*c1*c2*x1*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z1 + b2*c3*x1*y3*z1 + b1*b2*c3*x1*y3*z1 + b2*c1*c3*x1*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z1 + 2*x2*y3*z1 + b3*x2*y3*z1 + c1*x2*y3*z1 + b3*c1*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z1 + c2*x2*y3*z1 + b1*c2*x2*y3*z1 + b2*c2*x2*y3*z1 + b1*b2*c2*x2*y3*z1 + b3*c2*x2*y3*z1 + c1*c2*x2*y3*z1 + b1*c1*c2*x2*y3*z1 + 2*b2*c1*c2*x2*y3*z1 + b1*b2*c1*c2*x2*y3*z1 + b3*c1*c2*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z1 + c3*x2*y3*z1 + b1*c3*x2*y3*z1 + b1*b2*c3*x2*y3*z1 + 2*b2*c1*c3*x2*y3*z1 + b1*b2*c1*c3*x2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z1 + 2*c2*c3*x2*y3*z1 + b1*c2*c3*x2*y3*z1 + b2*c2*c3*x2*y3*z1 + b3*c2*c3*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y3*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y3*z1 + c2*x3*y3*z1 + b1*c2*x3*y3*z1 + 2*c1*c2*x3*y3*z1 + b1*c1*c2*x3*y3*z1 + b1*b2*c1*c2*x3*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z1 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z1 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z1 + b2*c3*x3*y3*z1 + b1*b2*c3*x3*y3*z1 + 2*b2*c1*c3*x3*y3*z1 + b1*b2*c1*c3*x3*y3*z1 + 2*c2*c3*x3*y3*z1 + b1*c2*c3*x3*y3*z1 + b2*c2*c3*x3*y3*z1 + b1*b2*c2*c3*x3*y3*z1 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y3*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y3*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y3*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y3*z1 + b2*c1*y1*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z1 + b1*c2*y1*y3*z1 + b1*b2*c2*y1*y3*z1 + b3*c2*y1*y3*z1 + c1*c2*y1*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z1 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z1 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z1 + b2*c3*y1*y3*z1 + b2*c1*c3*y1*y3*z1 + b1*b2*c1*c3*y1*y3*z1 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z1 + b1*c2*c3*y1*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z1 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z1 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z1 + b1*y2*y3*z1 + b2*y2*y3*z1 + b3*y2*y3*z1 + c1*y2*y3*z1 + b1*c1*y2*y3*z1 + b2*c1*y2*y3*z1 + b3*c1*y2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z1 + c2*y2*y3*z1 + b1*b2*c2*y2*y3*z1 + b3*c2*y2*y3*z1 + c1*c2*y2*y3*z1 + 2*b2*c1*c2*y2*y3*z1 + b1*b2*c1*c2*y2*y3*z1 + b3*c1*c2*y2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z1 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z1 + c3*y2*y3*z1 + b1*c3*y2*y3*z1 + b2*c3*y2*y3*z1 + b1*c1*c3*y2*y3*z1 + 2*b2*c1*c3*y2*y3*z1 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z1 + b2*c2*c3*y2*y3*z1 + b3*c2*c3*y2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z1 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*y3*z1 + (c2*y3*(1 + y3)*z1)/2 + (b1*c1*c2*y3*(1 + y3)*z1)/2 + (c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3)*z1)/2 + (b2*c1*c3*y3*(1 + y3)*z1)/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*(1 + y3)*z1)/2 + (b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*(1 + y3)*z1)/2 + (b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*(1 + y3)*z1)/2 + (c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*(1 + y3)*z1)/2 + (c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*(1 + y3)*z1)/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*(1 + y3)*z1)/2 + (b2*c3*z1*(1 + z1))/2 + (b2*c1*c3*z1*(1 + z1))/2 + (b1*b2*c1*c3*z1*(1 + z1))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*(1 + z1))/2 + (b1*c2*c3*z1*(1 + z1))/2 + (b2*c2*c3*z1*(1 + z1))/2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*(1 + z1) + (b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*(1 + z1))/2 + (b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*(1 + z1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*(1 + z1))/2 + (b2*c1*c3*x1*z1*(1 + z1))/2 + (b1*c2*c3*x1*z1*(1 + z1))/2 + (b2*c2*c3*x1*z1*(1 + z1))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*(1 + z1))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*(1 + z1))/2 + (b1*c2*c3*x2*z1*(1 + z1))/2 + (b2*c2*c3*x2*z1*(1 + z1))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z1*(1 + z1))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z1*(1 + z1))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*(1 + z1))/2 + (b2*x3*z1*(1 + z1))/2 + (b2*c1*x3*z1*(1 + z1))/2 + (b2*c2*x3*z1*(1 + z1))/2 + (b2*c1*c3*y1*z1*(1 + z1))/2 + (c2*c3*y1*z1*(1 + z1))/2 + (b2*c2*c3*y1*z1*(1 + z1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1*(1 + z1))/2 + (c1*c3*y2*z1*(1 + z1))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*(1 + z1))/2 + (c2*c3*y2*z1*(1 + z1))/2 + (b2*c2*c3*y2*z1*(1 + z1))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z1*(1 + z1))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z1*(1 + z1))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*(1 + z1))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*(1 + z1))/2 + (b2*y3*z1*(1 + z1))/2 + (b2*c1*y3*z1*(1 + z1))/2 + (b2*c2*y3*z1*(1 + z1))/2 + (b2*c3*z1^2*(1 + z1))/2 + (b2*c1*c3*z1^2*(1 + z1))/2 + (b1*c2*c3*z1^2*(1 + z1))/2 + (b2*c2*c3*z1^2*(1 + z1))/2 + b1*b2*c3*z2 + b1*c1*c3*z2 + b1*b2*c1*c3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2 + b1*c3*x1*z2 + b2*c3*x1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2 + b1*c2*c3*x1*z2 + 2*b2*c2*c3*x1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*z2 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2 + 2*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + 2*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2 + (c3*x1*(1 + x1)*z2)/2 + (b1*c3*x1*(1 + x1)*z2)/2 + (b2*c3*x1*(1 + x1)*z2)/2 + (c1*c3*x1*(1 + x1)*z2)/2 + (b1*c1*c3*x1*(1 + x1)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*(1 + x1)*z2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*(1 + x1)*z2)/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*(1 + x1)*z2)/2 + (b1*c2*c3*x1*(1 + x1)*z2)/2 + (b2*c2*c3*x1*(1 + x1)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*(1 + x1)*z2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*(1 + x1)*z2)/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*(1 + x1)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*(1 + x1)*z2)/2 + b1*b2*c3*x2*z2 + b2*c1*c3*x2*z2 + b1*b2*c1*c3*x2*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z2 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z2 + b1*b2*c2*c3*x2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z2 + b3*x1*x2*z2 + b3*c1*x1*x2*z2 + b3*c2*x1*x2*z2 + c3*x1*x2*z2 + 2*b1*c3*x1*x2*z2 + b2*c3*x1*x2*z2 + b3*c3*x1*x2*z2 + 2*c1*c3*x1*x2*z2 + b1*c1*c3*x1*x2*z2 + 2*b2*c1*c3*x1*x2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z2 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z2 + b1*c2*c3*x1*x2*z2 + b2*c2*c3*x1*x2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*z2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z2 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z2 + 2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z2 + (b1*c3*x2*(1 + x2)*z2)/2 + (c1*c3*x2*(1 + x2)*z2)/2 + (b1*c1*c3*x2*(1 + x2)*z2)/2 + (b1*c2*c3*x2*(1 + x2)*z2)/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*(1 + x2)*z2)/2 + b1*x3*z2 + b1*c1*x3*z2 + b1*b2*c1*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z2 + b1*c1*c2*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z2 + b1*c3*x3*z2 + b1*c1*c3*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z2 + b1*b2*c2*c3*x3*z2 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z2 + x1*x3*z2 + b2*x1*x3*z2 + c1*x1*x3*z2 + 2*b2*c1*x1*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*z2 + 2*b1*c2*x1*x3*z2 + b2*c2*x1*x3*z2 + b3*c2*x1*x3*z2 + 2*b1*c1*c2*x1*x3*z2 + 2*b2*c1*c2*x1*x3*z2 + b3*c1*c2*x1*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z2 + c3*x1*x3*z2 + b1*c3*x1*x3*z2 + 2*b2*c3*x1*x3*z2 + b1*b2*c3*x1*x3*z2 + b3*c3*x1*x3*z2 + c1*c3*x1*x3*z2 + b2*c1*c3*x1*x3*z2 + b1*b2*c1*c3*x1*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z2 + b1*c2*c3*x1*x3*z2 + b2*c2*c3*x1*x3*z2 + b3*c2*c3*x1*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z2 + 2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + 2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z2 + c1*x2*x3*z2 + b1*c1*x2*x3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*x3*z2 + b1*c2*x2*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z2 + b1*b2*c3*x2*x3*z2 + c1*c3*x2*x3*z2 + b1*c1*c3*x2*x3*z2 + b2*c1*c3*x2*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z2 + (b1*x3*(1 + x3)*z2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*(1 + x3)*z2)/2 + (b1*c2*x3*(1 + x3)*z2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*(1 + x3)*z2)/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*(1 + x3)*z2)/2 + (b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*(1 + x3)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*(1 + x3)*z2)/2 + b1*c3*y1*z2 + b2*c3*y1*z2 + b1*b2*c3*y1*z2 + c1*c3*y1*z2 + 2*b1*c1*c3*y1*z2 + b2*c1*c3*y1*z2 + 2*b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2 + b1*c2*c3*y1*z2 + b2*c2*c3*y1*z2 + b1*b2*c2*c3*y1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + 2*b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2 + 2*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + 2*b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + 2*b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2 + c3*x1*y1*z2 + b1*c3*x1*y1*z2 + 2*b2*c3*x1*y1*z2 + b1*b2*c3*x1*y1*z2 + b1*c1*c3*x1*y1*z2 + b2*c1*c3*x1*y1*z2 + b1*b2*c1*c3*x1*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y1*z2 + c2*c3*x1*y1*z2 + b2*c2*c3*x1*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z2 + b3*x2*y1*z2 + b3*c1*x2*y1*z2 + b3*c2*x2*y1*z2 + c3*x2*y1*z2 + b1*c3*x2*y1*z2 + 2*b2*c3*x2*y1*z2 + b1*b2*c3*x2*y1*z2 + b3*c3*x2*y1*z2 + c1*c3*x2*y1*z2 + 2*b2*c1*c3*x2*y1*z2 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z2 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z2 + c2*c3*x2*y1*z2 + b2*c2*c3*x2*y1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + 2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z2 + x3*y1*z2 + b1*x3*y1*z2 + b2*x3*y1*z2 + c1*x3*y1*z2 + 2*b2*c1*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*z2 + 2*c2*x3*y1*z2 + 2*b1*c2*x3*y1*z2 + b2*c2*x3*y1*z2 + b3*c2*x3*y1*z2 + c1*c2*x3*y1*z2 + b1*c1*c2*x3*y1*z2 + 2*b2*c1*c2*x3*y1*z2 + b3*c1*c2*x3*y1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z2 + b1*c3*x3*y1*z2 + b2*c3*x3*y1*z2 + b3*c3*x3*y1*z2 + c1*c3*x3*y1*z2 + b2*c1*c3*x3*y1*z2 + b1*b2*c1*c3*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z2 + c2*c3*x3*y1*z2 + b1*c2*c3*x3*y1*z2 + 2*b2*c2*c3*x3*y1*z2 + b3*c2*c3*x3*y1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z2 + 2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + 2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z2 + (b2*c3*y1*(1 + y1)*z2)/2 + (b1*c1*c3*y1*(1 + y1)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*(1 + y1)*z2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*(1 + y1)*z2)/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*(1 + y1)*z2)/2 + (c2*c3*y1*(1 + y1)*z2)/2 + (b2*c2*c3*y1*(1 + y1)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*(1 + y1)*z2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*(1 + y1)*z2)/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*(1 + y1)*z2)/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*(1 + y1)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*(1 + y1)*z2)/2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z2 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z2 + c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z2 + b3*x1*y2*z2 + b3*c1*x1*y2*z2 + b3*c2*x1*y2*z2 + 2*c3*x1*y2*z2 + b1*c3*x1*y2*z2 + b1*b2*c3*x1*y2*z2 + b3*c3*x1*y2*z2 + c1*c3*x1*y2*z2 + b2*c1*c3*x1*y2*z2 + b1*b2*c1*c3*x1*y2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z2 + c2*c3*x1*y2*z2 + 2*b2*c2*c3*x1*y2*z2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z2 + 2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z2 + b1*b2*c3*x2*y2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*z2 + b1*c1*x3*y2*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y2*z2 + b1*c1*c2*x3*y2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z2 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z2 + c1*c3*x3*y2*z2 + b1*c1*c3*x3*y2*z2 + b2*c1*c3*x3*y2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z2 + b3*y1*y2*z2 + b3*c1*y1*y2*z2 + b3*c2*y1*y2*z2 + c3*y1*y2*z2 + b1*c3*y1*y2*z2 + b2*c3*y1*y2*z2 + b3*c3*y1*y2*z2 + 2*b1*c1*c3*y1*y2*z2 + b2*c1*c3*y1*y2*z2 + b1*b2*c1*c3*y1*y2*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z2 + c2*c3*y1*y2*z2 + 2*b2*c2*c3*y1*y2*z2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z2 + 2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z2 + (b1*c1*c3*y2*(1 + y2)*z2)/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*(1 + y2)*z2)/2 + b1*c1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*z2 + b1*c1*c2*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2 + b1*b2*c1*c3*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2 + b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z2 + b1*x1*y3*z2 + b2*x1*y3*z2 + c1*x1*y3*z2 + 2*b2*c1*x1*y3*z2 + b1*b2*c1*x1*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z2 + 2*c2*x1*y3*z2 + b1*c2*x1*y3*z2 + b2*c2*x1*y3*z2 + b3*c2*x1*y3*z2 + c1*c2*x1*y3*z2 + 2*b1*c1*c2*x1*y3*z2 + 2*b2*c1*c2*x1*y3*z2 + b1*b2*c1*c2*x1*y3*z2 + b3*c1*c2*x1*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z2 + 2*c3*x1*y3*z2 + b1*b2*c3*x1*y3*z2 + b3*c3*x1*y3*z2 + c1*c3*x1*y3*z2 + b1*c1*c3*x1*y3*z2 + b2*c1*c3*x1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z2 + b1*c2*c3*x1*y3*z2 + 2*b2*c2*c3*x1*y3*z2 + b3*c2*c3*x1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z2 + b1*x2*y3*z2 + c1*x2*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z2 + b1*c1*c2*x2*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z2 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z2 + b1*c3*x2*y3*z2 + b1*b2*c3*x2*y3*z2 + c1*c3*x2*y3*z2 + b2*c1*c3*x2*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z2 + b1*b2*x3*y3*z2 + b1*b2*c1*x3*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y3*z2 + b1*b2*c2*x3*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y3*z2 + b1*b2*c3*x3*y3*z2 + b1*b2*c1*c3*x3*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y3*z2 + b1*y1*y3*z2 + c1*y1*y3*z2 + b1*c1*y1*y3*z2 + 2*b2*c1*y1*y3*z2 + b1*b2*c1*y1*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z2 + c2*y1*y3*z2 + 2*b1*c2*y1*y3*z2 + b3*c2*y1*y3*z2 + 2*b1*c1*c2*y1*y3*z2 + 2*b2*c1*c2*y1*y3*z2 + b1*b2*c1*c2*y1*y3*z2 + b3*c1*c2*y1*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z2 + c3*y1*y3*z2 + b1*c3*y1*y3*z2 + b3*c3*y1*y3*z2 + c1*c3*y1*y3*z2 + b2*c1*c3*y1*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z2 + c2*c3*y1*y3*z2 + b1*c2*c3*y1*y3*z2 + b2*c2*c3*y1*y3*z2 + b3*c2*c3*y1*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y3*z2 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z2 + c1*c2*y2*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z2 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z2 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z2 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z2 + b2*c1*c3*y2*y3*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*y3*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z2 + (b1*y3*(1 + y3)*z2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*(1 + y3)*z2)/2 + (b1*c2*y3*(1 + y3)*z2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*(1 + y3)*z2)/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*(1 + y3)*z2)/2 + (c1*c3*y3*(1 + y3)*z2)/2 + (b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*(1 + y3)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*(1 + y3)*z2)/2 + (c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*(1 + y3)*z2)/2 + 2*b1*c3*z1*z2 + b2*c3*z1*z2 + b1*b2*c3*z1*z2 + b1*c1*c3*z1*z2 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2 + b2*c2*c3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*z2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + 2*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2 + 2*c3*x1*z1*z2 + 2*b1*c3*x1*z1*z2 + 2*c1*c3*x1*z1*z2 + 2*b1*c1*c3*x1*z1*z2 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z2 + b1*c2*c3*x1*z1*z2 + b2*c2*c3*x1*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*z1*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z2 + b3*c1*x2*z1*z2 + b3*c2*x2*z1*z2 + 2*b1*c3*x2*z1*z2 + b2*c3*x2*z1*z2 + b3*c3*x2*z1*z2 + 2*c1*c3*x2*z1*z2 + b1*c1*c3*x2*z1*z2 + 2*b2*c1*c3*x2*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z2 + 2*b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z2 + b1*c2*c3*x2*z1*z2 + b2*c2*c3*x2*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z1*z2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z2 + 2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + 2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z2 + b1*x3*z1*z2 + b2*x3*z1*z2 + 2*b2*c1*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1*z2 + b1*c2*x3*z1*z2 + b2*c2*x3*z1*z2 + b1*c1*c2*x3*z1*z2 + 2*b2*c1*c2*x3*z1*z2 + b3*c1*c2*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1*z2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z2 + b1*c3*x3*z1*z2 + b2*c3*x3*z1*z2 + b3*c3*x3*z1*z2 + b1*c1*c3*x3*z1*z2 + 2*b2*c1*c3*x3*z1*z2 + b1*b2*c1*c3*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1*z2 + b1*c2*c3*x3*z1*z2 + b2*c2*c3*x3*z1*z2 + b3*c2*c3*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*z1*z2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z2 + 2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + 2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z2 + c3*y1*z1*z2 + c1*c3*y1*z1*z2 + b2*c1*c3*y1*z1*z2 + b1*b2*c1*c3*y1*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z1*z2 + c2*c3*y1*z1*z2 + b2*c2*c3*y1*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z2 + b3*c1*y2*z1*z2 + b3*c2*y2*z1*z2 + c3*y2*z1*z2 + b1*c3*y2*z1*z2 + b2*c3*y2*z1*z2 + b3*c3*y2*z1*z2 + c1*c3*y2*z1*z2 + b2*c1*c3*y2*z1*z2 + b1*b2*c1*c3*y2*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z2 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z2 + c2*c3*y2*z1*z2 + 2*b2*c2*c3*y2*z1*z2 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z2 + y3*z1*z2 + b2*y3*z1*z2 + b1*b2*y3*z1*z2 + b1*c1*y3*z1*z2 + 2*b2*c1*y3*z1*z2 + b1*b2*c1*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*z1*z2 + c2*y3*z1*z2 + b1*c2*y3*z1*z2 + b2*c2*y3*z1*z2 + b1*b2*c2*y3*z1*z2 + c1*c2*y3*z1*z2 + b1*c1*c2*y3*z1*z2 + 2*b2*c1*c2*y3*z1*z2 + b1*b2*c1*c2*y3*z1*z2 + b3*c1*c2*y3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z2 + c3*y3*z1*z2 + b2*c3*y3*z1*z2 + b1*b2*c3*y3*z1*z2 + b3*c3*y3*z1*z2 + 2*b2*c1*c3*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1*z2 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1*z2 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1*z2 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1*z2 + b1*c2*c3*y3*z1*z2 + 2*b2*c2*c3*y3*z1*z2 + b3*c2*c3*y3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z2 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z2 + (b1*c3*z1*(1 + z1)*z2)/2 + (b2*c3*z1*(1 + z1)*z2)/2 + (b1*c1*c3*z1*(1 + z1)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*(1 + z1)*z2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*(1 + z1)*z2)/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*(1 + z1)*z2)/2 + (b1*c2*c3*z1*(1 + z1)*z2)/2 + (b2*c2*c3*z1*(1 + z1)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*(1 + z1)*z2)/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*(1 + z1)*z2)/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*(1 + z1)*z2)/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*(1 + z1)*z2)/2 + (b1*c3*z2*(1 + z2))/2 + (b2*c1*c3*z2*(1 + z2))/2 + (b1*b2*c1*c3*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2*(1 + z2))/2 + (b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2*(1 + z2))/2 + (b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2*(1 + z2))/2 + (b1*c2*c3*z2*(1 + z2))/2 + (b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*(1 + z2))/2 + (b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + (c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + (c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*(1 + z2))/2 + (c3*x1*z2*(1 + z2))/2 + (b1*c3*x1*z2*(1 + z2))/2 + (c1*c3*x1*z2*(1 + z2))/2 + (b1*c1*c3*x1*z2*(1 + z2))/2 + (b2*c1*c3*x1*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*(1 + z2))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*(1 + z2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*(1 + z2))/2 + (b1*c2*c3*x1*z2*(1 + z2))/2 + (b2*c2*c3*x1*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*z2*(1 + z2))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*z2*(1 + z2))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*(1 + z2))/2 + (b1*c3*x2*z2*(1 + z2))/2 + (c1*c3*x2*z2*(1 + z2))/2 + (b1*c1*c3*x2*z2*(1 + z2))/2 + (b1*c2*c3*x2*z2*(1 + z2))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z2*(1 + z2))/2 + (b2*c3*y1*z2*(1 + z2))/2 + (b1*c1*c3*y1*z2*(1 + z2))/2 + (b2*c1*c3*y1*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*(1 + z2))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*(1 + z2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*(1 + z2))/2 + (c2*c3*y1*z2*(1 + z2))/2 + (b2*c2*c3*y1*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z2*(1 + z2))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z2*(1 + z2))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*(1 + z2))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*(1 + z2))/2 + ((a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*(1 + z2))/2 + (b1*c1*c3*y2*z2*(1 + z2))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z2*(1 + z2))/2 + (b1*c3*z1*z2*(1 + z2))/2 + (b2*c3*z1*z2*(1 + z2))/2 + (b1*c1*c3*z1*z2*(1 + z2))/2 + (b2*c1*c3*z1*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*(1 + z2))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*(1 + z2))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*(1 + z2))/2 + (b1*c2*c3*z1*z2*(1 + z2))/2 + (b2*c2*c3*z1*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*z2*(1 + z2))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*z2*(1 + z2))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*(1 + z2))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*(1 + z2))/2 + (b1*c3*z2^2*(1 + z2))/2 + (b1*c2*c3*z2^2*(1 + z2))/2 + b1*b2*c1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z3 + b2*c1*c2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z3 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z3 + b2*x1*z3 + b1*b2*x1*z3 + b2*c1*x1*z3 + b1*b2*c1*x1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z3 + b1*b2*c2*x1*z3 + b2*c1*c2*x1*z3 + b1*b2*c1*c2*x1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z3 + b2*c3*x1*z3 + b2*c1*c3*x1*z3 + b1*b2*c1*c3*x1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z3 + b1*c2*c3*x1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + 2*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + 2*b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + 2*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z3 + (b2*x1*(1 + x1)*z3)/2 + (b2*c1*x1*(1 + x1)*z3)/2 + (b2*c2*x1*(1 + x1)*z3)/2 + c1*x2*z3 + b1*c1*x2*z3 + b2*c1*x2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z3 + b1*c1*c2*x2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z3 + b1*c3*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z3 + b1*c2*c3*x2*z3 + b1*b2*c2*c3*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + 2*b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3 + x1*x2*z3 + b2*x1*x2*z3 + b3*x1*x2*z3 + 2*c1*x1*x2*z3 + b1*c1*x1*x2*z3 + b2*c1*x1*x2*z3 + b3*c1*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x2*z3 + c2*x1*x2*z3 + b2*c2*x1*x2*z3 + b1*b2*c2*x1*x2*z3 + b3*c2*x1*x2*z3 + 2*c1*c2*x1*x2*z3 + b2*c1*c2*x1*x2*z3 + b1*b2*c1*c2*x1*x2*z3 + b3*c1*c2*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x2*z3 + 2*c3*x1*x2*z3 + b1*c3*x1*x2*z3 + b2*c3*x1*x2*z3 + b1*b2*c3*x1*x2*z3 + b3*c3*x1*x2*z3 + c1*c3*x1*x2*z3 + b2*c1*c3*x1*x2*z3 + b1*b2*c1*c3*x1*x2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x2*z3 + 2*c2*c3*x1*x2*z3 + b1*c2*c3*x1*x2*z3 + b2*c2*c3*x1*x2*z3 + b3*c2*c3*x1*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*x2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x2*z3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + 2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z3 + b1*c2*x3*z3 + c1*c2*x3*z3 + b1*c1*c2*x3*z3 + b2*c1*c2*x3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z3 + b2*x1*x3*z3 + 2*b2*c1*x1*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*x3*z3 + c2*x1*x3*z3 + b1*c2*x1*x3*z3 + b2*c2*x1*x3*z3 + 2*c1*c2*x1*x3*z3 + 2*b2*c1*c2*x1*x3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*x3*z3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*x3*z3 + 2*b2*c3*x1*x3*z3 + b1*b2*c3*x1*x3*z3 + b2*c1*c3*x1*x3*z3 + b1*b2*c1*c3*x1*x3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*x3*z3 + 2*c2*c3*x1*x3*z3 + b1*c2*c3*x1*x3*z3 + b2*c2*c3*x1*x3*z3 + b1*b2*c2*c3*x1*x3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*x3*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + 2*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*x3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*x3*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*x3*z3 + b1*c3*x2*x3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*x3*z3 + b1*c2*c3*x2*x3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*x3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*x3*z3 + b2*y1*z3 + b1*b2*y1*z3 + b1*b2*c1*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z3 + c2*y1*z3 + b1*c2*y1*z3 + 2*b2*c2*y1*z3 + b1*b2*c2*y1*z3 + c1*c2*y1*z3 + b1*c1*c2*y1*z3 + b2*c1*c2*y1*z3 + b1*b2*c1*c2*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z3 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z3 + b2*c3*y1*z3 + 2*b2*c1*c3*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z3 + b1*c2*c3*y1*z3 + b1*b2*c2*c3*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + 2*b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + 2*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z3 + 2*b2*x1*y1*z3 + 2*b2*c1*x1*y1*z3 + b1*b2*c1*x1*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y1*z3 + c2*x1*y1*z3 + b2*c2*x1*y1*z3 + b1*c1*c2*x1*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y1*z3 + b2*c3*x1*y1*z3 + b1*b2*c1*c3*x1*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y1*z3 + c2*c3*x1*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y1*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y1*z3 + 2*x2*y1*z3 + b1*x2*y1*z3 + b2*x2*y1*z3 + b1*b2*x2*y1*z3 + b3*x2*y1*z3 + 2*c1*x2*y1*z3 + b2*c1*x2*y1*z3 + b1*b2*c1*x2*y1*z3 + b3*c1*x2*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y1*z3 + b2*c2*x2*y1*z3 + b3*c2*x2*y1*z3 + 2*c1*c2*x2*y1*z3 + b1*c1*c2*x2*y1*z3 + b2*c1*c2*x2*y1*z3 + b3*c1*c2*x2*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y1*z3 + 2*c3*x2*y1*z3 + b2*c3*x2*y1*z3 + b3*c3*x2*y1*z3 + b1*c1*c3*x2*y1*z3 + b2*c1*c3*x2*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y1*z3 + c2*c3*x2*y1*z3 + b1*c2*c3*x2*y1*z3 + b3*c2*c3*x2*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y1*z3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + 2*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + 2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*y1*z3 + b1*b2*x3*y1*z3 + b2*c1*x3*y1*z3 + b1*b2*c1*x3*y1*z3 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*y1*z3 + b1*c2*x3*y1*z3 + b1*b2*c2*x3*y1*z3 + 2*c1*c2*x3*y1*z3 + b1*c1*c2*x3*y1*z3 + 2*b2*c1*c2*x3*y1*z3 + b1*b2*c1*c2*x3*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y1*z3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y1*z3 + b2*c3*x3*y1*z3 + 2*b2*c1*c3*x3*y1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y1*z3 + 2*c2*c3*x3*y1*z3 + b2*c2*c3*x3*y1*z3 + b1*b2*c2*c3*x3*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y1*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*y1*z3 + (b2*y1*(1 + y1)*z3)/2 + (b2*c1*y1*(1 + y1)*z3)/2 + (b2*c2*y1*(1 + y1)*z3)/2 + b1*c1*y2*z3 + b2*c1*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z3 + b1*b2*c2*y2*z3 + b2*c1*c2*y2*z3 + b1*b2*c1*c2*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3 + b1*c3*y2*z3 + b1*c1*c3*y2*z3 + b2*c1*c3*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + 2*b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3 + x1*y2*z3 + b3*x1*y2*z3 + b1*c1*x1*y2*z3 + b2*c1*x1*y2*z3 + b3*c1*x1*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y2*z3 + b2*c2*x1*y2*z3 + b3*c2*x1*y2*z3 + b2*c1*c2*x1*y2*z3 + b1*b2*c1*c2*x1*y2*z3 + b3*c1*c2*x1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y2*z3 + c3*x1*y2*z3 + 2*b2*c3*x1*y2*z3 + b3*c3*x1*y2*z3 + c1*c3*x1*y2*z3 + b1*c1*c3*x1*y2*z3 + b2*c1*c3*x1*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y2*z3 + b3*c2*c3*x1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y2*z3 + 2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + 2*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y2*z3 + c1*x2*y2*z3 + b1*c1*x2*y2*z3 + b2*c1*x2*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y2*z3 + b1*c2*x2*y2*z3 + b1*b2*c2*x2*y2*z3 + c1*c2*x2*y2*z3 + b1*c1*c2*x2*y2*z3 + b2*c1*c2*x2*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*z3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y2*z3 + b1*c3*x2*y2*z3 + b1*b2*c3*x2*y2*z3 + c1*c3*x2*y2*z3 + b1*c1*c3*x2*y2*z3 + b2*c1*c3*x2*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y2*z3 + b1*x3*y2*z3 + c1*x3*y2*z3 + b1*c1*c2*x3*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y2*z3 + b1*c3*x3*y2*z3 + b1*b2*c3*x3*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*y2*z3 + y1*y2*z3 + b1*y1*y2*z3 + 2*b2*y1*y2*z3 + b1*b2*y1*y2*z3 + b3*y1*y2*z3 + b1*c1*y1*y2*z3 + b2*c1*y1*y2*z3 + b1*b2*c1*y1*y2*z3 + b3*c1*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y2*z3 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y2*z3 + c2*y1*y2*z3 + b1*c2*y1*y2*z3 + b2*c2*y1*y2*z3 + b1*b2*c2*y1*y2*z3 + b3*c2*y1*y2*z3 + b2*c1*c2*y1*y2*z3 + b3*c1*c2*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y2*z3 + c3*y1*y2*z3 + b1*c3*y1*y2*z3 + b1*b2*c3*y1*y2*z3 + b3*c3*y1*y2*z3 + c1*c3*y1*y2*z3 + b1*c1*c3*y1*y2*z3 + b2*c1*c3*y1*y2*z3 + b1*b2*c1*c3*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y2*z3 + b3*c2*c3*y1*y2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*y2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y2*z3 + 2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + 2*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + 2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y2*z3 + b1*c1*c2*y3*z3 + b2*c1*c2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*y3*z3 + b2*c2*x1*y3*z3 + 2*b2*c1*c2*x1*y3*z3 + b1*b2*c1*c2*x1*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*y3*z3 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z3 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*y3*z3 + 2*b2*c3*x1*y3*z3 + 2*b2*c1*c3*x1*y3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*y3*z3 + b2*c2*c3*x1*y3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*y3*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*y3*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*y3*z3 + b1*c3*x2*y3*z3 + b1*b2*c3*x2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*y3*z3 + b1*c2*c3*x2*y3*z3 + b1*b2*c2*c3*x2*y3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*y3*z3 + b1*c1*c2*x3*y3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*y3*z3 + b1*b2*c3*x3*y3*z3 + b1*c2*c3*x3*y3*z3 + b2*y1*y3*z3 + b1*b2*y1*y3*z3 + b1*b2*c1*y1*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*y3*z3 + c2*y1*y3*z3 + b2*c2*y1*y3*z3 + b1*b2*c2*y1*y3*z3 + 2*b2*c1*c2*y1*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z3 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*y3*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*y3*z3 + b2*c3*y1*y3*z3 + b1*b2*c3*y1*y3*z3 + 2*b2*c1*c3*y1*y3*z3 + b1*b2*c1*c3*y1*y3*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*y3*z3 + b2*c2*c3*y1*y3*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*y3*z3 + 2*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*y3*z3 + b1*y2*y3*z3 + c1*y2*y3*z3 + b1*c1*y2*y3*z3 + b2*c1*y2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*y3*z3 + b1*c2*y2*y3*z3 + b1*c1*c2*y2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*y3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*y3*z3 + b1*c3*y2*y3*z3 + c1*c3*y2*y3*z3 + b1*c1*c3*y2*y3*z3 + b2*c1*c3*y2*y3*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*y3*z3 + b1*c2*c3*y2*y3*z3 + b1*b2*c2*c3*y2*y3*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*y3*z3 + b1*b2*c1*z1*z3 + 2*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z3 + b2*c1*c2*z1*z3 + b1*b2*c1*c2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3 + b1*b2*c3*z1*z3 + b2*c1*c3*z1*z3 + b1*b2*c1*c3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z3 + b1*c2*c3*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + 2*b2*c1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + 2*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + 2*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3 + 2*b2*x1*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z1*z3 + b3*c2*x1*z1*z3 + b1*c1*c2*x1*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z1*z3 + b2*c3*x1*z1*z3 + b2*c1*c3*x1*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z1*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z1*z3 + x2*z1*z3 + b1*x2*z1*z3 + 2*c1*x2*z1*z3 + b1*c1*x2*z1*z3 + b2*c1*x2*z1*z3 + b3*c1*x2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z1*z3 + c2*x2*z1*z3 + 2*c1*c2*x2*z1*z3 + b2*c1*c2*x2*z1*z3 + b1*b2*c1*c2*x2*z1*z3 + b3*c1*c2*x2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z1*z3 + 2*c3*x2*z1*z3 + b2*c3*x2*z1*z3 + b3*c3*x2*z1*z3 + b1*c1*c3*x2*z1*z3 + 2*b2*c1*c3*x2*z1*z3 + b1*b2*c1*c3*x2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z1*z3 + 2*c2*c3*x2*z1*z3 + b1*c2*c3*x2*z1*z3 + b2*c2*c3*x2*z1*z3 + b3*c2*c3*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z1*z3 + 2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + 2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z1*z3 + b2*x3*z1*z3 + 2*b2*c1*x3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z1*z3 + c2*x3*z1*z3 + b1*c2*x3*z1*z3 + b2*c2*x3*z1*z3 + 2*c1*c2*x3*z1*z3 + 2*b2*c1*c2*x3*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z3 + 2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z1*z3 + b2*c3*x3*z1*z3 + b2*c1*c3*x3*z1*z3 + b1*b2*c1*c3*x3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x3*z1*z3 + 2*c2*c3*x3*z1*z3 + b1*c2*c3*x3*z1*z3 + b2*c2*c3*x3*z1*z3 + b1*b2*c2*c3*x3*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + 2*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x3*z1*z3 + 2*b2*y1*z1*z3 + b1*b2*y1*z1*z3 + b2*c1*y1*z1*z3 + b1*b2*c1*y1*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z1*z3 + c2*y1*z1*z3 + b1*c2*y1*z1*z3 + b3*c2*y1*z1*z3 + c1*c2*y1*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z1*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z1*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z1*z3 + 2*b2*c3*y1*z1*z3 + b1*b2*c3*y1*z1*z3 + b2*c1*c3*y1*z1*z3 + b1*b2*c1*c3*y1*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z1*z3 + b1*c2*c3*y1*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z1*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z1*z3 + y2*z1*z3 + b1*y2*z1*z3 + b2*y2*z1*z3 + c1*y2*z1*z3 + b3*c1*y2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z1*z3 + c2*y2*z1*z3 + b1*b2*c2*y2*z1*z3 + b1*c1*c2*y2*z1*z3 + b2*c1*c2*y2*z1*z3 + b1*b2*c1*c2*y2*z1*z3 + b3*c1*c2*y2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z1*z3 + 2*c3*y2*z1*z3 + b1*c3*y2*z1*z3 + b2*c3*y2*z1*z3 + b3*c3*y2*z1*z3 + 2*b2*c1*c3*y2*z1*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z1*z3 + b2*c2*c3*y2*z1*z3 + b3*c2*c3*y2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z1*z3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*z1*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y3*z1*z3 + b1*b2*c2*y3*z1*z3 + 2*b2*c1*c2*y3*z1*z3 + b1*b2*c1*c2*y3*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z3 + 2*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z3 + 2*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z1*z3 + 2*b2*c1*c3*y3*z1*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z1*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z1*z3 + b1*b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z3 + b1*b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y3*z1*z3 + (b2*c1*z1*(1 + z1)*z3)/2 + (b2*c2*z1*(1 + z1)*z3)/2 + b1*b2*c1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z2*z3 + b1*b2*c2*z2*z3 + b1*c1*c2*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3 + b1*c1*c3*z2*z3 + b1*b2*c1*c3*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z2*z3 + b1*b2*c2*c3*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z2*z3 + b1*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + b1*b2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3 + 2*b1*x1*z2*z3 + b2*x1*z2*z3 + 2*b1*c1*x1*z2*z3 + 2*b2*c1*x1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x1*z2*z3 + 2*b1*c2*x1*z2*z3 + 2*b2*c2*x1*z2*z3 + b1*b2*c2*x1*z2*z3 + b1*c1*c2*x1*z2*z3 + b2*c1*c2*x1*z2*z3 + b1*b2*c1*c2*x1*z2*z3 + b3*c1*c2*x1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x1*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x1*z2*z3 + c3*x1*z2*z3 + b1*c3*x1*z2*z3 + 2*b2*c3*x1*z2*z3 + c1*c3*x1*z2*z3 + b2*c1*c3*x1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x1*z2*z3 + b1*c2*c3*x1*z2*z3 + b3*c2*c3*x1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x1*z2*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x1*z2*z3 + b1*x2*z2*z3 + b1*b2*c1*x2*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x2*z2*z3 + b1*b2*c2*x2*z2*z3 + b1*b2*c1*c2*x2*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z2*z3 + b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z2*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z2*z3 + b1*c3*x2*z2*z3 + c1*c3*x2*z2*z3 + b1*c1*c3*x2*z2*z3 + b2*c1*c3*x2*z2*z3 + b1*b2*c1*c3*x2*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*x2*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x2*z2*z3 + b1*b2*x3*z2*z3 + b1*c1*x3*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*x3*z2*z3 + b1*b2*c2*x3*z2*z3 + b1*c1*c2*x3*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x3*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x3*z2*z3 + b1*b2*c3*x3*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*x3*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*x3*z2*z3 + 2*y1*z2*z3 + b1*y1*z2*z3 + b2*y1*z2*z3 + 2*b1*c1*y1*z2*z3 + 2*b2*c1*y1*z2*z3 + b1*b2*c1*y1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y1*z2*z3 + 2*c2*y1*z2*z3 + b1*c2*y1*z2*z3 + 2*b2*c2*y1*z2*z3 + b1*c1*c2*y1*z2*z3 + b2*c1*c2*y1*z2*z3 + b3*c1*c2*y1*z2*z3 + 2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y1*z2*z3 + c3*y1*z2*z3 + b1*c1*c3*y1*z2*z3 + b2*c1*c3*y1*z2*z3 + b1*b2*c1*c3*y1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y1*z2*z3 + c2*c3*y1*z2*z3 + b1*c2*c3*y1*z2*z3 + b2*c2*c3*y1*z2*z3 + b3*c2*c3*y1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y1*z2*z3 + (a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + 2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + 2*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y1*z2*z3 + b1*b2*c1*y2*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z2*z3 + c1*c2*y2*z2*z3 + b2*c1*c2*y2*z2*z3 + b1*b2*c1*c2*y2*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z2*z3 + c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z2*z3 + b1*c1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z2*z3 + b1*b2*c1*c3*y2*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y2*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*y2*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y2*z2*z3 + b1*b2*y3*z2*z3 + b1*b2*c1*y3*z2*z3 + b1*b2*c2*y3*z2*z3 + b1*c1*c2*y3*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y3*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2*z3 + b1*b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y3*z2*z3 + b1*b2*c3*y3*z2*z3 + b1*b2*c1*c3*y3*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*y3*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*y3*z2*z3 + b2*z1*z2*z3 + 2*b1*c1*z1*z2*z3 + 2*b2*c1*z1*z2*z3 + b1*b2*c1*z1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + b1*b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z1*z2*z3 + b2*c2*z1*z2*z3 + b1*b2*c2*z1*z2*z3 + b3*c2*z1*z2*z3 + 2*b1*c1*c2*z1*z2*z3 + b2*c1*c2*z1*z2*z3 + b1*b2*c1*c2*z1*z2*z3 + b3*c1*c2*z1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z1*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + (a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z2*z3 + b1*c3*z1*z2*z3 + b2*c3*z1*z2*z3 + b1*b2*c3*z1*z2*z3 + b1*c1*c3*z1*z2*z3 + 2*b2*c1*c3*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*z3 + b1*b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*z3 + c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*z3 + b1*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*z3 + b2*c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c3*z1*z2*z3 + b1*c2*c3*z1*z2*z3 + b3*c2*c3*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z1*z2*z3 + b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b1*b2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b1*b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + 2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z2*z3 + b2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b2*c1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b1*b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b1*b2*c1*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b2*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + 2*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + (a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z2*z3 + (b1*b2*z3*(1 + z3))/2 + (b2*c1*z3*(1 + z3))/2 + (b1*c2*z3*(1 + z3))/2 + (b1*b2*c2*z3*(1 + z3))/2 + (c1*c2*z3*(1 + z3))/2 + (b1*c1*c2*z3*(1 + z3))/2 + (b1*b2*c1*c2*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z3*(1 + z3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z3*(1 + z3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z3*(1 + z3))/2 + (c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + (b1*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + (b2*c1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + (c1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + (b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z3*(1 + z3))/2 + (b1*b2*c3*z3*(1 + z3))/2 + (b1*c2*c3*z3*(1 + z3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*c3*z3*(1 + z3))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z3*(1 + z3))/2 + (b1*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z3*(1 + z3))/2 + (b1*c2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z3*(1 + z3))/2 + (b1*c1*c2*x1*z3*(1 + z3))/2 + (b2*c3*x1*z3*(1 + z3))/2 + (b2*c1*c3*x1*z3*(1 + z3))/2 + (b2*c2*c3*x1*z3*(1 + z3))/2 + (b1*x2*z3*(1 + z3))/2 + (b1*c2*x2*z3*(1 + z3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*x2*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*x2*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*x2*z3*(1 + z3))/2 + (b1*c2*y1*z3*(1 + z3))/2 + (b1*c1*c2*y1*z3*(1 + z3))/2 + (b2*c1*c3*y1*z3*(1 + z3))/2 + (b2*c2*c3*y1*z3*(1 + z3))/2 + (b1*y2*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*y2*z3*(1 + z3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*y2*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*y2*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*y2*z3*(1 + z3))/2 + (b1*c2*z1*z3*(1 + z3))/2 + (b2*c2*z1*z3*(1 + z3))/2 + (b1*c1*c2*z1*z3*(1 + z3))/2 + (b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z1*z3*(1 + z3))/2 + (b2*c1*c3*z1*z3*(1 + z3))/2 + (b2*c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*z1*z3*(1 + z3))/2 + (b2*c2*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3*(1 + z3))/2 + (c2*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3*(1 + z3))/2 + (b2*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3*(1 + z3))/2 + ((a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*c3*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z1*z3*(1 + z3))/2 + (b1*z2*z3*(1 + z3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*z2*z3*(1 + z3))/2 + (b1*(a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*c2*z2*z3*(1 + z3))/2 + (b1*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a2 + b2 + b2*c2 - 2*b2*(a2 + b2)*c2)*z2*z3*(1 + z3))/2 + (b1*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3*(1 + z3))/2 + ((a1 + b1 + b1*c1 - 2*b1*(a1 + b1)*c1)*(a3 + b3 + b3*c3 - 2*b3*(a3 + b3)*c3)*z2*z3*(1 + z3))/2;
end;
#####################################################################
#####################################################################
#Space Group No. 120 ( I-4c2)
#####################################################################
Acpin120:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin120:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyzin120:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain120:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
B2in120:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return x2*z1 + c1*x2*z1 + y2*z1 + c1*y2*z1 + c1*x2*z2 + c1*y2*z2 + c1*z1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 121 ( I-42m)
#####################################################################
Acpin121:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin121:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Axyzin121:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain121:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
Bxyzin121:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return (x1 + y1)*z2 + b1*((x1 + y1)*(x2 + y2) + (x1 + x2 + y1 + y2)*z2);
end;
#####################################################################
Bphiin121:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return b2*y1 + (a2 + b2*c1)*(x1 + y1) + (a2 + a2*b1 + a1*b2 + a2*b2 + b1*b2*c1)*(x1 + y1 + z1);
end;
#####################################################################
CGAPin121:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*a3*b1*x2 + a3*b1*c1*x2 + (a3*b1*x2*(1 + x2))/2 + (b1*c3*x2*(1 + x2))/2 + (b3*x1*x2*(1 + x2))/2 + (c3*x1*x2*(1 + x2))/2 + (b1*c3*x1*x2*(1 + x2))/2 + a2*x1*x3 + a1*a2*x1*x3 + a1*b2*x1*x3 + a2*c1*x1*x3 + a1*b2*c1*x1*x3 + a2*b2*c1*x1*x3 + a2*c2*x1*x3 + (3*a2*x1*(1 + x1)*x3)/2 + (a2*b2*x1*(1 + x1)*x3)/2 + b2*c2*x1*(1 + x1)*x3 + (3*b2*c3*x1*(1 + x1)*x3)/2 + a1*a2*x2*x3 + a1*b2*x2*x3 + a2*c1*x2*x3 + a1*b2*c1*x2*x3 + a2*b2*c1*x2*x3 + x1*x2*x3 + 2*a2*x1*x2*x3 + 2*b2*x1*x2*x3 + a2*b2*x1*x2*x3 + b3*x1*x2*x3 + 3*b2*c2*x1*x2*x3 + c3*x1*x2*x3 + 2*b2*c3*x1*x2*x3 + (a1*a2*x3*(1 + x3))/2 + (a2*b1*x3*(1 + x3))/2 + (a1*b2*x3*(1 + x3))/2 + (a2*c1*x3*(1 + x3))/2 + (a1*b2*c1*x3*(1 + x3))/2 + (a2*b2*c1*x3*(1 + x3))/2 + (b1*c2*x3*(1 + x3))/2 + a2*x1*x3*(1 + x3) + b2*x1*x3*(1 + x3) + (b2*c2*x1*x3*(1 + x3))/2 + (b2*c3*x1*x3*(1 + x3))/2 + a1*x2*x3*(1 + x3) + c1*x2*x3*(1 + x3) + (b3*x2*(1 + x2)*y1)/2 + (c3*x2*(1 + x2)*y1)/2 + (b1*c3*x2*(1 + x2)*y1)/2 + a2*x3*y1 + a1*a2*x3*y1 + a1*b2*x3*y1 + 3*a2*b2*x3*y1 + a2*c1*x3*y1 + a1*b2*c1*x3*y1 + a2*b2*c1*x3*y1 + a2*c2*x3*y1 + 3*b2*c2*x3*y1 + 3*a2*x1*x3*y1 + b2*x1*x3*y1 + a2*b2*x1*x3*y1 + 2*b2*c2*x1*x3*y1 + 3*b2*c3*x1*x3*y1 + 3*x2*x3*y1 + 4*a2*x2*x3*y1 + 4*b2*x2*x3*y1 + a2*b2*x2*x3*y1 + b3*x2*x3*y1 + 2*c2*x2*x3*y1 + 3*b2*c2*x2*x3*y1 + c3*x2*x3*y1 + 2*b2*c3*x2*x3*y1 + (3*a2*x3*(1 + x3)*y1)/2 + (c2*x3*(1 + x3)*y1)/2 + (b2*c2*x3*(1 + x3)*y1)/2 + (b2*c3*x3*(1 + x3)*y1)/2 + (3*a2*x3*y1*(1 + y1))/2 + (a2*b2*x3*y1*(1 + y1))/2 + b2*c2*x3*y1*(1 + y1) + (3*b2*c3*x3*y1*(1 + y1))/2 + a3*b1*y2 + a1*a3*b1*y2 + a3*b1*c1*y2 + a3*b1*x2*y2 + b1*c3*x2*y2 + b3*x1*x2*y2 + c3*x1*x2*y2 + b1*c3*x1*x2*y2 + a1*a2*x3*y2 + a2*b1*x3*y2 + a1*b2*x3*y2 + a2*c1*x3*y2 + a1*b2*c1*x3*y2 + a2*b2*c1*x3*y2 + b1*c2*x3*y2 + x1*x3*y2 + 2*a2*x1*x3*y2 + 2*b2*x1*x3*y2 + a2*b2*x1*x3*y2 + b3*x1*x3*y2 + 3*b2*c2*x1*x3*y2 + c3*x1*x3*y2 + 2*b2*c3*x1*x3*y2 + a1*x3*(1 + x3)*y2 + c1*x3*(1 + x3)*y2 + b3*x2*y1*y2 + c3*x2*y1*y2 + b1*c3*x2*y1*y2 + x3*y1*y2 + 3*a2*x3*y1*y2 + 2*b2*x3*y1*y2 + a2*b2*x3*y1*y2 + b3*x3*y1*y2 + c2*x3*y1*y2 + 3*b2*c2*x3*y1*y2 + c3*x3*y1*y2 + 2*b2*c3*x3*y1*y2 + (a3*b1*y2*(1 + y2))/2 + (b1*c3*y2*(1 + y2))/2 + (b3*x1*y2*(1 + y2))/2 + (c3*x1*y2*(1 + y2))/2 + (b1*c3*x1*y2*(1 + y2))/2 + (b3*y1*y2*(1 + y2))/2 + (c3*y1*y2*(1 + y2))/2 + (b1*c3*y1*y2*(1 + y2))/2 + a1*a2*x1*y3 + a1*b2*x1*y3 + a2*c1*x1*y3 + a1*b2*c1*x1*y3 + a2*b2*c1*x1*y3 + a2*c2*x1*y3 + (3*a2*x1*(1 + x1)*y3)/2 + (b2*x1*(1 + x1)*y3)/2 + (a2*b2*x1*(1 + x1)*y3)/2 + b2*c2*x1*(1 + x1)*y3 + (3*b2*c3*x1*(1 + x1)*y3)/2 + a1*a2*x2*y3 + a1*b2*x2*y3 + a2*c1*x2*y3 + a1*b2*c1*x2*y3 + a2*b2*c1*x2*y3 + 2*a2*x1*x2*y3 + b2*x1*x2*y3 + a2*b2*x1*x2*y3 + b3*x1*x2*y3 + 3*b2*c2*x1*x2*y3 + c3*x1*x2*y3 + 2*b2*c3*x1*x2*y3 + a1*a2*x3*y3 + a1*b2*x3*y3 + a2*c1*x3*y3 + a1*b2*c1*x3*y3 + a2*b2*c1*x3*y3 + 2*a2*x1*x3*y3 + 2*b2*x1*x3*y3 + b2*c2*x1*x3*y3 + b2*c3*x1*x3*y3 + a1*a2*y1*y3 + 3*b2*y1*y3 + a1*b2*y1*y3 + 3*a2*b2*y1*y3 + a2*c1*y1*y3 + a1*b2*c1*y1*y3 + a2*b2*c1*y1*y3 + a2*c2*y1*y3 + 3*b2*c2*y1*y3 + 3*a2*x1*y1*y3 + a2*b2*x1*y1*y3 + 2*b2*c2*x1*y1*y3 + 3*b2*c3*x1*y1*y3 + 4*a2*x2*y1*y3 + 3*b2*x2*y1*y3 + a2*b2*x2*y1*y3 + b3*x2*y1*y3 + 2*c2*x2*y1*y3 + 3*b2*c2*x2*y1*y3 + c3*x2*y1*y3 + 2*b2*c3*x2*y1*y3 + 2*a2*x3*y1*y3 + 4*b2*x3*y1*y3 + b2*c2*x3*y1*y3 + b2*c3*x3*y1*y3 + (3*a2*y1*(1 + y1)*y3)/2 + (b2*y1*(1 + y1)*y3)/2 + (a2*b2*y1*(1 + y1)*y3)/2 + b2*c2*y1*(1 + y1)*y3 + (3*b2*c3*y1*(1 + y1)*y3)/2 + a1*a2*y2*y3 + b1*y2*y3 + a2*b1*y2*y3 + a1*b2*y2*y3 + a2*c1*y2*y3 + a1*b2*c1*y2*y3 + a2*b2*c1*y2*y3 + b1*c2*y2*y3 + 2*a2*x1*y2*y3 + 3*b2*x1*y2*y3 + a2*b2*x1*y2*y3 + b3*x1*y2*y3 + 3*b2*c2*x1*y2*y3 + c3*x1*y2*y3 + 2*b2*c3*x1*y2*y3 + y1*y2*y3 + 3*a2*y1*y2*y3 + 3*b2*y1*y2*y3 + a2*b2*y1*y2*y3 + b3*y1*y2*y3 + c2*y1*y2*y3 + 3*b2*c2*y1*y2*y3 + c3*y1*y2*y3 + 2*b2*c3*y1*y2*y3 + (a1*a2*y3*(1 + y3))/2 + (a2*b1*y3*(1 + y3))/2 + (a1*b2*y3*(1 + y3))/2 + (a2*c1*y3*(1 + y3))/2 + (a1*b2*c1*y3*(1 + y3))/2 + (a2*b2*c1*y3*(1 + y3))/2 + (b1*c2*y3*(1 + y3))/2 + a2*x1*y3*(1 + y3) + b2*x1*y3*(1 + y3) + (b2*c2*x1*y3*(1 + y3))/2 + (b2*c3*x1*y3*(1 + y3))/2 + (a1*x2*y3*(1 + y3))/2 + (c1*x2*y3*(1 + y3))/2 + (3*a2*y1*y3*(1 + y3))/2 + (c2*y1*y3*(1 + y3))/2 + (b2*c2*y1*y3*(1 + y3))/2 + (b2*c3*y1*y3*(1 + y3))/2 + (a1*y2*y3*(1 + y3))/2 + (c1*y2*y3*(1 + y3))/2 + a3*b1*x2*z1 + c3*x2*z1 + c3*x1*x2*z1 + (b3*x2*(1 + x2)*z1)/2 + c3*x2*(1 + x2)*z1 + (b1*c3*x2*(1 + x2)*z1)/2 + a2*x3*z1 + a1*a2*x3*z1 + a1*b2*x3*z1 + a2*c1*x3*z1 + a1*b2*c1*x3*z1 + a2*b2*c1*x3*z1 + a2*c2*x3*z1 + 3*a2*x1*x3*z1 + a2*b2*x1*x3*z1 + b2*c1*x1*x3*z1 + 3*b2*c2*x1*x3*z1 + 2*b2*c3*x1*x3*z1 + x2*x3*z1 + 2*a2*x2*x3*z1 + 2*b2*x2*x3*z1 + a2*b2*x2*x3*z1 + b3*x2*x3*z1 + 3*b2*c2*x2*x3*z1 + c3*x2*x3*z1 + 2*b2*c3*x2*x3*z1 + a2*x3*(1 + x3)*z1 + b2*x3*(1 + x3)*z1 + (b2*c2*x3*(1 + x3)*z1)/2 + (b2*c3*x3*(1 + x3)*z1)/2 + c3*x2*y1*z1 + 3*a2*x3*y1*z1 + b2*x3*y1*z1 + a2*b2*x3*y1*z1 + b2*c1*x3*y1*z1 + 3*b2*c2*x3*y1*z1 + 2*b2*c3*x3*y1*z1 + a3*b1*y2*z1 + c3*y2*z1 + c3*x1*y2*z1 + b3*x2*y2*z1 + 2*c3*x2*y2*z1 + b1*c3*x2*y2*z1 + x3*y2*z1 + 2*a2*x3*y2*z1 + 2*b2*x3*y2*z1 + a2*b2*x3*y2*z1 + b3*x3*y2*z1 + 3*b2*c2*x3*y2*z1 + c3*x3*y2*z1 + 2*b2*c3*x3*y2*z1 + c3*y1*y2*z1 + (b3*y2*(1 + y2)*z1)/2 + c3*y2*(1 + y2)*z1 + (b1*c3*y2*(1 + y2)*z1)/2 + a1*a2*y3*z1 + a1*b2*y3*z1 + a2*c1*y3*z1 + a1*b2*c1*y3*z1 + a2*b2*c1*y3*z1 + a2*c2*y3*z1 + 3*a2*x1*y3*z1 + b2*x1*y3*z1 + a2*b2*x1*y3*z1 + b2*c1*x1*y3*z1 + 3*b2*c2*x1*y3*z1 + 2*b2*c3*x1*y3*z1 + 2*a2*x2*y3*z1 + b2*x2*y3*z1 + a2*b2*x2*y3*z1 + b3*x2*y3*z1 + 3*b2*c2*x2*y3*z1 + c3*x2*y3*z1 + 2*b2*c3*x2*y3*z1 + 2*a2*x3*y3*z1 + 2*b2*x3*y3*z1 + b2*c2*x3*y3*z1 + b2*c3*x3*y3*z1 + 3*a2*y1*y3*z1 + a2*b2*y1*y3*z1 + b2*c1*y1*y3*z1 + 3*b2*c2*y1*y3*z1 + 2*b2*c3*y1*y3*z1 + 2*a2*y2*y3*z1 + 3*b2*y2*y3*z1 + a2*b2*y2*y3*z1 + b3*y2*y3*z1 + 3*b2*c2*y2*y3*z1 + c3*y2*y3*z1 + 2*b2*c3*y2*y3*z1 + a2*y3*(1 + y3)*z1 + b2*y3*(1 + y3)*z1 + (b2*c2*y3*(1 + y3)*z1)/2 + (b2*c3*y3*(1 + y3)*z1)/2 + (b3*c2*z1*(1 + z1))/2 + (3*a2*x3*z1*(1 + z1))/2 + (a2*b2*x3*z1*(1 + z1))/2 + b2*c2*x3*z1*(1 + z1) + (3*b2*c3*x3*z1*(1 + z1))/2 + (3*a2*y3*z1*(1 + z1))/2 + (b2*y3*z1*(1 + z1))/2 + (a2*b2*y3*z1*(1 + z1))/2 + b2*c2*y3*z1*(1 + z1) + (3*b2*c3*y3*z1*(1 + z1))/2 + c2*c3*(x1 + y1 + z1) + a1*a3*z2 + a1*a3*b1*z2 + (3*c3*x1*(1 + x1)*z2)/2 + b1*c3*x2*z2 + b3*x1*x2*z2 + c3*x1*x2*z2 + b1*c3*x1*x2*z2 + a1*a2*x3*z2 + a1*b2*x3*z2 + a2*c1*x3*z2 + a1*b2*c1*x3*z2 + a2*b2*c1*x3*z2 + 3*a2*x1*x3*z2 + b2*x1*x3*z2 + a2*b2*x1*x3*z2 + b3*x1*x3*z2 + 3*b2*c2*x1*x3*z2 + 2*b2*c3*x1*x3*z2 + a1*x3*(1 + x3)*z2 + 3*c3*x1*y1*z2 + b3*x2*y1*z2 + c3*x2*y1*z2 + b1*c3*x2*y1*z2 + 3*a2*x3*y1*z2 + 3*b2*x3*y1*z2 + a2*b2*x3*y1*z2 + b3*x3*y1*z2 + 3*b2*c2*x3*y1*z2 + 2*b2*c3*x3*y1*z2 + (3*c3*y1*(1 + y1)*z2)/2 + b1*c3*y2*z2 + b3*x1*y2*z2 + c3*x1*y2*z2 + b1*c3*x1*y2*z2 + b3*y1*y2*z2 + c3*y1*y2*z2 + b1*c3*y1*y2*z2 + a1*a2*y3*z2 + a1*b2*y3*z2 + a2*c1*y3*z2 + a1*b2*c1*y3*z2 + a2*b2*c1*y3*z2 + 3*a2*x1*y3*z2 + 2*b2*x1*y3*z2 + a2*b2*x1*y3*z2 + b3*x1*y3*z2 + 3*b2*c2*x1*y3*z2 + 2*b2*c3*x1*y3*z2 + 3*a2*y1*y3*z2 + 4*b2*y1*y3*z2 + a2*b2*y1*y3*z2 + b3*y1*y3*z2 + 3*b2*c2*y1*y3*z2 + 2*b2*c3*y1*y3*z2 + (a1*y3*(1 + y3)*z2)/2 + a3*z1*z2 + a3*b1*z1*z2 + c3*z1*z2 + c3*x1*z1*z2 + b3*x2*z1*z2 + b1*c3*x2*z1*z2 + 3*a2*x3*z1*z2 + b2*x3*z1*z2 + a2*b2*x3*z1*z2 + b3*x3*z1*z2 + 3*b2*c2*x3*z1*z2 + 2*b2*c3*x3*z1*z2 + c3*y1*z1*z2 + b3*y2*z1*z2 + b1*c3*y2*z1*z2 + 3*a2*y3*z1*z2 + 2*b2*y3*z1*z2 + a2*b2*y3*z1*z2 + b3*y3*z1*z2 + 3*b2*c2*y3*z1*z2 + 2*b2*c3*y3*z1*z2 + (3*c3*z1*(1 + z1)*z2)/2 + (a3*b1*z2*(1 + z2))/2 + (b1*c3*z2*(1 + z2))/2 + (b3*x1*z2*(1 + z2))/2 + (c3*x1*z2*(1 + z2))/2 + (b1*c3*x1*z2*(1 + z2))/2 + (b3*y1*z2*(1 + z2))/2 + (c3*y1*z2*(1 + z2))/2 + (b1*c3*y1*z2*(1 + z2))/2 + (b3*z1*z2*(1 + z2))/2 + c3*z1*z2*(1 + z2) + (b1*c3*z1*z2*(1 + z2))/2 + a1*a2*x1*z3 + a1*b2*x1*z3 + a2*c1*x1*z3 + a1*b2*c1*x1*z3 + a2*b2*c1*x1*z3 + a2*x1*(1 + x1)*z3 + (a2*b2*x1*(1 + x1)*z3)/2 + (3*b2*c2*x1*(1 + x1)*z3)/2 + (3*b2*c3*x1*(1 + x1)*z3)/2 + a1*a2*x2*z3 + a1*b2*x2*z3 + a2*c1*x2*z3 + a1*b2*c1*x2*z3 + a2*b2*c1*x2*z3 + 2*x1*x2*z3 + a1*x1*x2*z3 + a2*x1*x2*z3 + 2*b2*x1*x2*z3 + a2*b2*x1*x2*z3 + b3*x1*x2*z3 + c1*x1*x2*z3 + b1*c1*x1*x2*z3 + 2*c2*x1*x2*z3 + b1*c2*x1*x2*z3 + 2*b2*c2*x1*x2*z3 + 2*c3*x1*x2*z3 + b1*c3*x1*x2*z3 + 2*b2*c3*x1*x2*z3 + a1*a2*x3*z3 + a2*b1*x3*z3 + a1*b2*x3*z3 + a2*c1*x3*z3 + a1*b2*c1*x3*z3 + a2*b2*c1*x3*z3 + a2*b1*c2*x3*z3 + 3*a2*x1*x3*z3 + 3*b2*x1*x3*z3 + 3*b2*c2*x1*x3*z3 + b2*c3*x1*x3*z3 + 3*a2*y1*z3 + a1*a2*y1*z3 + a1*b2*y1*z3 + 3*a2*b2*y1*z3 + a2*c1*y1*z3 + a1*b2*c1*y1*z3 + a2*b2*c1*y1*z3 + 2*a2*x1*y1*z3 + b2*x1*y1*z3 + a2*b2*x1*y1*z3 + 3*b2*c2*x1*y1*z3 + 3*b2*c3*x1*y1*z3 + x2*y1*z3 + a1*x2*y1*z3 + 3*a2*x2*y1*z3 + 4*b2*x2*y1*z3 + a2*b2*x2*y1*z3 + b3*x2*y1*z3 + c1*x2*y1*z3 + b1*c1*x2*y1*z3 + 2*c2*x2*y1*z3 + b1*c2*x2*y1*z3 + 2*b2*c2*x2*y1*z3 + 2*c3*x2*y1*z3 + b1*c3*x2*y1*z3 + 2*b2*c3*x2*y1*z3 + 4*a2*x3*y1*z3 + 3*b2*x3*y1*z3 + a2*c2*x3*y1*z3 + 5*b2*c2*x3*y1*z3 + b2*c3*x3*y1*z3 + a2*y1*(1 + y1)*z3 + (a2*b2*y1*(1 + y1)*z3)/2 + (3*b2*c2*y1*(1 + y1)*z3)/2 + (3*b2*c3*y1*(1 + y1)*z3)/2 + a1*a2*y2*z3 + a2*b1*y2*z3 + a1*b2*y2*z3 + a2*c1*y2*z3 + a1*b2*c1*y2*z3 + a2*b2*c1*y2*z3 + x1*y2*z3 + a1*x1*y2*z3 + a2*x1*y2*z3 + 2*b2*x1*y2*z3 + a2*b2*x1*y2*z3 + b3*x1*y2*z3 + c1*x1*y2*z3 + b1*c1*x1*y2*z3 + 2*c2*x1*y2*z3 + b1*c2*x1*y2*z3 + 2*b2*c2*x1*y2*z3 + 2*c3*x1*y2*z3 + b1*c3*x1*y2*z3 + 2*b2*c3*x1*y2*z3 + a1*y1*y2*z3 + 2*a2*y1*y2*z3 + 2*b2*y1*y2*z3 + a2*b2*y1*y2*z3 + b3*y1*y2*z3 + c1*y1*y2*z3 + b1*c1*y1*y2*z3 + 2*c2*y1*y2*z3 + b1*c2*y1*y2*z3 + 2*b2*c2*y1*y2*z3 + 2*c3*y1*y2*z3 + b1*c3*y1*y2*z3 + 2*b2*c3*y1*y2*z3 + a1*a2*y3*z3 + a1*b2*y3*z3 + a2*c1*y3*z3 + a1*b2*c1*y3*z3 + a2*b2*c1*y3*z3 + a2*b1*c2*y3*z3 + 3*a2*x1*y3*z3 + b2*x1*y3*z3 + 3*b2*c2*x1*y3*z3 + b2*c3*x1*y3*z3 + 5*a2*y1*y3*z3 + 3*b2*y1*y3*z3 + a2*c2*y1*y3*z3 + 5*b2*c2*y1*y3*z3 + b2*c3*y1*y3*z3 + a1*a2*z1*z3 + a1*b2*z1*z3 + a2*c1*z1*z3 + a1*b2*c1*z1*z3 + a2*b2*c1*z1*z3 + 2*a2*x1*z1*z3 + a2*b2*x1*z1*z3 + b2*c1*x1*z1*z3 + 2*b2*c2*x1*z1*z3 + 2*b2*c3*x1*z1*z3 + 2*x2*z1*z3 + a1*x2*z1*z3 + a2*x2*z1*z3 + 2*b2*x2*z1*z3 + a2*b2*x2*z1*z3 + b3*x2*z1*z3 + b1*c1*x2*z1*z3 + c2*x2*z1*z3 + b1*c2*x2*z1*z3 + 2*b2*c2*x2*z1*z3 + c3*x2*z1*z3 + b1*c3*x2*z1*z3 + 2*b2*c3*x2*z1*z3 + 3*a2*x3*z1*z3 + 3*b2*x3*z1*z3 + 3*b2*c2*x3*z1*z3 + b2*c3*x3*z1*z3 + 2*a2*y1*z1*z3 + b2*y1*z1*z3 + a2*b2*y1*z1*z3 + b2*c1*y1*z1*z3 + 2*b2*c2*y1*z1*z3 + 2*b2*c3*y1*z1*z3 + y2*z1*z3 + a1*y2*z1*z3 + a2*y2*z1*z3 + 2*b2*y2*z1*z3 + a2*b2*y2*z1*z3 + b3*y2*z1*z3 + b1*c1*y2*z1*z3 + c2*y2*z1*z3 + b1*c2*y2*z1*z3 + 2*b2*c2*y2*z1*z3 + c3*y2*z1*z3 + b1*c3*y2*z1*z3 + 2*b2*c3*y2*z1*z3 + 3*a2*y3*z1*z3 + b2*y3*z1*z3 + 3*b2*c2*y3*z1*z3 + b2*c3*y3*z1*z3 + a2*z1*(1 + z1)*z3 + (a2*b2*z1*(1 + z1)*z3)/2 + (3*b2*c2*z1*(1 + z1)*z3)/2 + (3*b2*c3*z1*(1 + z1)*z3)/2 + a1*a2*z2*z3 + a1*b2*z2*z3 + a2*c1*z2*z3 + a1*b2*c1*z2*z3 + a2*b2*c1*z2*z3 + a1*x1*z2*z3 + 2*a2*x1*z2*z3 + b2*x1*z2*z3 + a2*b2*x1*z2*z3 + b3*x1*z2*z3 + c1*x1*z2*z3 + b1*c1*x1*z2*z3 + b1*c2*x1*z2*z3 + 2*b2*c2*x1*z2*z3 + b1*c3*x1*z2*z3 + 2*b2*c3*x1*z2*z3 + 5*y1*z2*z3 + a1*y1*z2*z3 + 2*a2*y1*z2*z3 + 3*b2*y1*z2*z3 + a2*b2*y1*z2*z3 + b3*y1*z2*z3 + c1*y1*z2*z3 + b1*c1*y1*z2*z3 + b1*c2*y1*z2*z3 + 2*b2*c2*y1*z2*z3 + b1*c3*y1*z2*z3 + 2*b2*c3*y1*z2*z3 + a1*z1*z2*z3 + 2*a2*z1*z2*z3 + b2*z1*z2*z3 + a2*b2*z1*z2*z3 + b3*z1*z2*z3 + b1*c1*z1*z2*z3 + c2*z1*z2*z3 + b1*c2*z1*z2*z3 + 2*b2*c2*z1*z2*z3 + c3*z1*z2*z3 + b1*c3*z1*z2*z3 + 2*b2*c3*z1*z2*z3 + (a1*a2*z3*(1 + z3))/2 + (a2*b1*z3*(1 + z3))/2 + (a1*b2*z3*(1 + z3))/2 + (a2*c1*z3*(1 + z3))/2 + (a1*b2*c1*z3*(1 + z3))/2 + (a2*b2*c1*z3*(1 + z3))/2 + a2*x1*z3*(1 + z3) + b2*x1*z3*(1 + z3) + (c2*x1*z3*(1 + z3))/2 + (b2*c2*x1*z3*(1 + z3))/2 + (b2*c3*x1*z3*(1 + z3))/2 + 2*a1*x2*z3*(1 + z3) + 2*c1*x2*z3*(1 + z3) + (3*a2*y1*z3*(1 + z3))/2 + (c2*y1*z3*(1 + z3))/2 + (b2*c2*y1*z3*(1 + z3))/2 + (b2*c3*y1*z3*(1 + z3))/2 + 2*a1*y2*z3*(1 + z3) + 2*c1*y2*z3*(1 + z3) + a2*z1*z3*(1 + z3) + b2*z1*z3*(1 + z3) + (c2*z1*z3*(1 + z3))/2 + (b2*c2*z1*z3*(1 + z3))/2 + (b2*c3*z1*z3*(1 + z3))/2 + 2*a1*z2*z3*(1 + z3) + (a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1)*(x3 + y3 + z3) + c1*c2*(x3 + y3 + z3);
end;
#####################################################################
#####################################################################
#Space Group No. 122 ( I-42d)
#####################################################################
Acpin122:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return b1;
end;
#####################################################################
Amin122:=function(g1)
local x1,y1,z1,a1,b1,c1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];
return c1;
end;
#####################################################################
Bdeltain122:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1;
end;
#####################################################################
Bxyzin122:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];
return a1*a2 + a2*b1*b2 + b2*c1 + a1*b2*c1 + b1*c2 + a1*a2*b1*c2 + a2*b1*b2*c2 + a1*a2*b1*b2*c2 + c1*c2 + b1*c1*c2 + a1*b1*c1*c2 + a2*b1*c1*c2 + b2*c1*c2 + a1*b2*c1*c2 + a1*a2*b2*c1*c2 + a1*a2*b1*b2*c1*c2 + a2*x1 + a2*b1*x1 + b2*x1 + a2*c1*x1 + b1*c1*c2*x1 + b2*c1*c2*x1 + b1*x2 + a2*b1*x2 + a1*a2*b2*x2 + b1*b2*x2 + a1*a2*b1*b2*x2 + a2*c1*x2 + b1*c1*x2 + a1*b1*c1*x2 + a2*b2*c1*x2 + b1*b2*c1*x2 + a1*b1*b2*c1*x2 + a1*a2*b1*c2*x2 + a1*a2*b2*c2*x2 + b1*b2*c2*x2 + b1*c1*c2*x2 + b2*c1*c2*x2 + a2*b2*c1*c2*x2 + b1*b2*c1*c2*x2 + a2*b1*b2*c1*c2*x2 + x1*x2 + b1*x1*x2 + a2*y1 + a1*a2*b1*y1 + a1*b2*y1 + a2*b2*y1 + a1*a2*b1*b2*y1 + a2*c1*y1 + a2*b1*c1*y1 + a1*a2*b1*c1*y1 + b2*c1*y1 + a1*b2*c1*y1 + a1*a2*b2*c1*y1 + a2*b1*b2*c1*y1 + b1*c2*y1 + a1*b1*c2*y1 + a2*b1*c2*y1 + b2*c2*y1 + a1*b2*c2*y1 + a2*b2*c2*y1 + b1*c1*c2*y1 + b1*b2*c1*c2*y1 + x2*y1 + a1*b1*x2*y1 + a2*b1*x2*y1 + b1*b2*x2*y1 + a1*b1*b2*x2*y1 + a2*b1*b2*x2*y1 + b1*y2 + a2*b1*y2 + a1*a2*b1*y2 + a1*b2*y2 + a1*a2*b2*y2 + a1*b1*b2*y2 + a2*b1*b2*y2 + c1*y2 + a2*c1*y2 + a2*b1*c1*y2 + a1*a2*b1*c1*y2 + b2*c1*y2 + a1*b2*c1*y2 + a2*b2*c1*y2 + a1*a2*b2*c1*y2 + b1*b2*c1*y2 + a1*b1*b2*c1*y2 + a2*b1*b2*c1*y2 + b1*c2*y2 + a1*b1*c2*y2 + a2*b1*c2*y2 + a1*a2*b1*c2*y2 + a1*b2*c2*y2 + a1*a2*b2*c2*y2 + b1*b2*c2*y2 + b1*c1*c2*y2 + a2*b2*c1*c2*y2 + a2*b1*b2*c1*c2*y2 + x1*y2 + b1*x1*y2 + b1*x2*y2 + a1*b1*x2*y2 + a2*b1*x2*y2 + b1*b2*x2*y2 + a1*b1*b2*x2*y2 + a2*b1*b2*x2*y2 + y1*y2 + a1*b1*y1*y2 + a2*b1*y1*y2 + b1*b2*y1*y2 + a1*b1*b2*y1*y2 + a2*b1*b2*y1*y2 + a1*a2*b1*z1 + a1*a2*b1*b2*z1 + c2*z1 + b1*c2*z1 + b2*c2*z1 + c1*c2*z1 + b1*c1*c2*z1 + a1*b1*c1*c2*z1 + a2*b1*c1*c2*z1 + a1*b2*c1*c2*z1 + a2*b2*c1*c2*z1 + b1*b2*c1*c2*z1 + x2*z1 + a1*a2*b1*x2*z1 + a1*a2*b2*x2*z1 + b1*c1*x2*z1 + a1*b1*c1*x2*z1 + a2*b1*c1*x2*z1 + a2*b2*c1*x2*z1 + b1*b2*c1*x2*z1 + a1*b1*b2*c1*x2*z1 + a2*b1*y1*z1 + b2*y1*z1 + a1*b2*y1*z1 + a2*b2*y1*z1 + b2*c1*y1*z1 + b1*b2*c1*y1*z1 + y2*z1 + b1*y2*z1 + a1*b1*y2*z1 + a2*b1*y2*z1 + a1*a2*b1*y2*z1 + b2*y2*z1 + a1*b2*y2*z1 + a2*b2*y2*z1 + a1*a2*b2*y2*z1 + b1*c1*y2*z1 + a1*b1*c1*y2*z1 + a2*b1*c1*y2*z1 + b2*c1*y2*z1 + a2*b2*c1*y2*z1 + a1*b1*b2*c1*y2*z1 + b1*b2*z2 + b1*c1*z2 + a2*b1*c1*z2 + a1*b2*c1*z2 + a1*a2*b2*c1*z2 + a1*b1*b2*c1*z2 + a1*a2*b1*b2*c1*z2 + b1*c2*z2 + a1*a2*b1*c2*z2 + a1*a2*b2*c2*z2 + b1*b2*c2*z2 + c1*c2*z2 + a2*b2*c1*c2*z2 + b1*b2*c1*c2*z2 + a2*b1*b2*c1*c2*z2 + b1*x1*z2 + b1*x2*z2 + a1*a2*b1*x2*z2 + a1*a2*b2*x2*z2 + a2*b2*c1*x2*z2 + a2*b1*b2*c1*x2*z2 + b1*y1*z2 + b2*y1*z2 + a1*b2*y1*z2 + a2*b2*y1*z2 + b1*b2*y1*z2 + a1*b1*b2*y1*z2 + a2*b1*b2*y1*z2 + b2*c1*y1*z2 + b1*b2*c1*y1*z2 + b1*y2*z2 + a1*a2*b1*y2*z2 + a1*b2*y2*z2 + a1*a2*b2*y2*z2 + b1*b2*y2*z2 + a1*b1*b2*y2*z2 + a2*b1*b2*y2*z2 + b2*c1*y2*z2 + a2*b2*c1*y2*z2 + b1*b2*c1*y2*z2 + a2*b1*b2*c1*y2*z2 + z1*z2 + a1*a2*b1*z1*z2 + a1*a2*b2*z1*z2 + a1*b2*c1*z1*z2 + a1*b1*b2*c1*z1*z2;
end;
#####################################################################
Cin122:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];
return a1*b2*b3 + a1*a2*b3*c1 + a2*b1*b3*c1 + a1*a2*b1*b3*c1 + b1*b2*b3*c1 + a1*a2*a3*c2 + a1*a3*b1*c2 + a1*a3*b2*c2 + a1*a2*a3*b2*c2 + a1*a3*b1*b2*c2 + a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a1*b2*b3*c2 + a1*b1*b2*b3*c2 + a2*b1*b2*b3*c2 + a2*a3*c1*c2 + a3*b2*c1*c2 + a1*a3*b2*c1*c2 + a1*b3*c1*c2 + a2*b3*c1*c2 + a1*a3*b3*c1*c2 + b1*b3*c1*c2 + b2*b3*c1*c2 + a2*b2*b3*c1*c2 + b1*b2*b3*c1*c2 + a2*b1*b2*b3*c1*c2 + a1*a2*a3*b1*c3 + a1*a2*b2*c3 + a1*a2*a3*b2*c3 + a1*a3*b1*b2*c3 + a1*a2*b3*c3 + a1*a2*c1*c3 + a1*a2*a3*c1*c3 + a2*b1*c1*c3 + a1*a2*b2*c1*c3 + a1*a2*b1*b2*c1*c3 + a1*a2*b3*c1*c3 + a1*a2*b1*b3*c1*c3 + (a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1)*c3 + a1*c2*c3 + a1*a3*c2*c3 + a1*a2*a3*c2*c3 + a1*b1*c2*c3 + a3*b1*c2*c3 + a1*a3*b1*c2*c3 + a1*b2*c2*c3 + a1*a3*b2*c2*c3 + a1*a2*b1*b2*c2*c3 + a2*a3*b1*b2*c2*c3 + a1*b3*c2*c3 + a1*a2*b3*c2*c3 + a1*b1*b3*c2*c3 + a1*a2*b1*b3*c2*c3 + a1*a3*b2*b3*c2*c3 + a1*b1*b2*b3*c2*c3 + a2*c1*c2*c3 + a1*a2*c1*c2*c3 + a3*c1*c2*c3 + a1*a3*c1*c2*c3 + a2*a3*c1*c2*c3 + b1*c1*c2*c3 + a2*b1*c1*c2*c3 + a1*a2*b1*c1*c2*c3 + a1*a3*b1*c1*c2*c3 + a2*a3*b1*c1*c2*c3 + b2*c1*c2*c3 + a2*b2*c1*c2*c3 + a1*a2*b2*c1*c2*c3 + a1*a3*b2*c1*c2*c3 + b1*b2*c1*c2*c3 + a1*b1*b2*c1*c2*c3 + a3*b1*b2*c1*c2*c3 + a2*a3*b1*b2*c1*c2*c3 + b3*c1*c2*c3 + a2*b3*c1*c2*c3 + a1*a2*b3*c1*c2*c3 + a3*b3*c1*c2*c3 + b1*b3*c1*c2*c3 + a1*b1*b3*c1*c2*c3 + b2*b3*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + a2*b2*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + a1*a2*a3*b1*x1 + a2*a3*b2*x1 + a1*a2*a3*b2*x1 + a2*a3*b1*b2*x1 + a2*b3*x1 + a2*b1*b3*x1 + a1*a2*a3*b2*b3*x1 + a2*a3*c1*x1 + a1*a2*a3*c1*x1 + a2*a3*b1*c1*x1 + a1*a2*a3*b1*c1*x1 + a2*a3*b2*c1*x1 + a2*a3*b1*b2*c1*x1 + a2*b3*c1*x1 + a2*b1*b3*c1*x1 + a2*a3*b2*b3*c1*x1 + a2*a3*b1*b2*b3*c1*x1 + a1*a3*b1*c2*x1 + a1*a2*a3*b1*c2*x1 + a3*b2*c2*x1 + a2*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + a2*b3*c2*x1 + a3*b3*c2*x1 + a1*b1*b3*c2*x1 + a3*b1*b3*c2*x1 + a2*b2*b3*c2*x1 + b1*b2*b3*c2*x1 + a2*b1*b2*b3*c2*x1 + a3*c1*c2*x1 + a1*a3*c1*c2*x1 + a1*a2*a3*c1*c2*x1 + a3*b1*c1*c2*x1 + a1*a3*b1*c1*c2*x1 + a2*a3*b1*c1*c2*x1 + a3*b2*c1*c2*x1 + a1*a3*b1*b2*c1*c2*x1 + a1*b3*c1*c2*x1 + a2*b3*c1*c2*x1 + b1*b2*b3*c1*c2*x1 + a2*c3*x1 + a1*a2*c3*x1 + a2*a3*c3*x1 + a2*b1*c3*x1 + a1*a2*b1*c3*x1 + a2*a3*b1*c3*x1 + a2*b2*c3*x1 + a3*b2*c3*x1 + a1*a3*b2*c3*x1 + a2*b1*b2*c3*x1 + a3*b1*b2*c3*x1 + a2*b3*c3*x1 + a2*b1*b3*c3*x1 + a2*b2*c1*c3*x1 + a2*b1*b2*c1*c3*x1 + a2*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + c2*c3*x1 + a1*c2*c3*x1 + a1*a3*c2*c3*x1 + b1*c2*c3*x1 + a1*b1*c2*c3*x1 + a2*b1*c2*c3*x1 + a1*a2*b1*c2*c3*x1 + a3*b1*c2*c3*x1 + a1*a3*b1*c2*c3*x1 + a2*b2*c2*c3*x1 + a1*a2*b2*c2*c3*x1 + a2*a3*b2*c2*c3*x1 + a2*b1*b2*c2*c3*x1 + a1*a2*b3*c2*c3*x1 + a3*b3*c2*c3*x1 + a1*a3*b3*c2*c3*x1 + a2*b1*b3*c2*c3*x1 + b2*b3*c2*c3*x1 + a2*b2*b3*c2*c3*x1 + a3*b2*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + a1*c1*c2*c3*x1 + a1*a2*c1*c2*c3*x1 + a1*a3*c1*c2*c3*x1 + a3*b1*c1*c2*c3*x1 + a3*b2*c1*c2*c3*x1 + a1*b1*b2*c1*c2*c3*x1 + a2*b1*b2*c1*c2*c3*x1 + b3*c1*c2*c3*x1 + a1*b3*c1*c2*c3*x1 + a3*b3*c1*c2*c3*x1 + a1*b1*b3*c1*c2*c3*x1 + a2*b1*b3*c1*c2*c3*x1 + a3*b1*b3*c1*c2*c3*x1 + b1*b2*b3*c1*c2*c3*x1 + (a2*b3*x1*(1 + x1))/2 + (a3*c2*x1*(1 + x1))/2 + (a3*b1*c2*x1*(1 + x1))/2 + (a1*b3*c2*x1*(1 + x1))/2 + (b2*b3*c2*x1*(1 + x1))/2 + (b3*c1*c2*x1*(1 + x1))/2 + (b1*b3*c1*c2*x1*(1 + x1))/2 + (a2*c3*x1*(1 + x1))/2 + (a2*b2*c3*x1*(1 + x1))/2 + (a3*b2*c3*x1*(1 + x1))/2 + (a2*b3*c3*x1*(1 + x1))/2 + (b2*b3*c2*c3*x1*(1 + x1))/2 + b3*c1*x2 + a1*b3*c1*x2 + a2*b3*c1*x2 + b1*b3*c1*x2 + a1*b1*b3*c1*x2 + a1*a3*c2*x2 + a1*a3*b1*c2*x2 + a1*b3*c2*x2 + a1*b1*b3*c2*x2 + a3*c1*c2*x2 + a1*a3*c1*c2*x2 + a2*a3*c1*c2*x2 + a2*a3*b1*c1*c2*x2 + a3*b2*c1*c2*x2 + a3*b1*b2*c1*c2*x2 + b3*c1*c2*x2 + a2*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a1*a2*c3*x2 + a1*a2*b1*c3*x2 + a1*a2*c1*c3*x2 + a1*a3*c1*c3*x2 + b1*c1*c3*x2 + a1*b1*c1*c3*x2 + a2*b1*c1*c3*x2 + a2*b2*c1*c3*x2 + a3*b2*c1*c3*x2 + b1*b2*c1*c3*x2 + a1*b1*b2*c1*c3*x2 + a2*b3*c1*c3*x2 + b1*b3*c1*c3*x2 + a1*b1*b3*c1*c3*x2 + a1*c2*c3*x2 + a1*b1*c2*c3*x2 + a1*b2*c2*c3*x2 + a1*b1*b2*c2*c3*x2 + c1*c2*c3*x2 + a2*c1*c2*c3*x2 + b1*c1*c2*c3*x2 + a2*b1*c1*c2*c3*x2 + a3*b1*c1*c2*c3*x2 + b2*c1*c2*c3*x2 + a2*b2*c1*c2*c3*x2 + a3*b2*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + a1*b3*c1*c2*c3*x2 + a2*b3*c1*c2*c3*x2 + b1*b3*c1*c2*c3*x2 + a1*a2*a3*x1*x2 + a2*b3*x1*x2 + a2*a3*c1*x1*x2 + a2*a3*b1*c1*x1*x2 + a3*b1*c2*x1*x2 + a2*a3*b1*c2*x1*x2 + a1*a3*b2*c2*x1*x2 + a3*b1*b2*c2*x1*x2 + b3*c2*x1*x2 + b2*b3*c2*x1*x2 + a3*b2*c1*c2*x1*x2 + a3*b1*b2*c1*c2*x1*x2 + a3*c3*x1*x2 + a2*b2*c3*x1*x2 + a3*b2*c3*x1*x2 + a2*b3*c3*x1*x2 + a1*c2*c3*x1*x2 + a2*b1*c2*c3*x1*x2 + a3*b1*c2*c3*x1*x2 + a1*b2*c2*c3*x1*x2 + b3*c2*c3*x1*x2 + a1*b3*c2*c3*x1*x2 + b1*b3*c2*c3*x1*x2 + b2*b3*c2*c3*x1*x2 + c1*c2*c3*x1*x2 + b1*c1*c2*c3*x1*x2 + b2*c1*c2*c3*x1*x2 + b1*b2*c1*c2*c3*x1*x2 + b3*c1*c2*c3*x1*x2 + b1*b3*c1*c2*c3*x1*x2 + a1*c2*x3 + a1*a2*c2*x3 + a1*a3*c2*x3 + a1*a3*b1*c2*x3 + a1*b2*c2*x3 + a1*a2*b2*c2*x3 + a1*a3*b2*c2*x3 + a1*a3*c1*c2*x3 + a2*a3*b1*c1*c2*x3 + a3*b1*b2*c1*c2*x3 + a1*a2*c3*x3 + a1*a2*b2*c3*x3 + a1*c2*c3*x3 + a1*a3*c2*c3*x3 + b1*c2*c3*x3 + a1*b1*c2*c3*x3 + a2*b1*c2*c3*x3 + a3*b1*c2*c3*x3 + a2*a3*b1*c2*c3*x3 + b1*b3*c2*c3*x3 + a1*b1*b3*c2*c3*x3 + a2*b1*b3*c2*c3*x3 + a1*b2*b3*c2*c3*x3 + c1*c2*c3*x3 + a1*c1*c2*c3*x3 + a2*c1*c2*c3*x3 + a3*c1*c2*c3*x3 + a2*a3*c1*c2*c3*x3 + b1*c1*c2*c3*x3 + a2*b1*c1*c2*c3*x3 + a3*b1*c1*c2*c3*x3 + b2*c1*c2*c3*x3 + a3*b2*c1*c2*c3*x3 + a3*b1*b2*c1*c2*c3*x3 + b3*c1*c2*c3*x3 + a1*b3*c1*c2*c3*x3 + a2*b3*c1*c2*c3*x3 + b1*b3*c1*c2*c3*x3 + a2*b1*b3*c1*c2*c3*x3 + b2*b3*c1*c2*c3*x3 + a2*a3*x1*x3 + a2*a3*b1*x1*x3 + a1*a2*a3*b2*x1*x3 + a1*a2*a3*b3*x1*x3 + a2*a3*b2*c1*x1*x3 + a2*a3*b1*b2*c1*x1*x3 + a2*a3*b3*c1*x1*x3 + a2*a3*b1*b3*c1*x1*x3 + a1*a3*c2*x1*x3 + a2*a3*c2*x1*x3 + b1*c2*x1*x3 + a2*b1*c2*x1*x3 + a3*b1*c2*x1*x3 + b2*c2*x1*x3 + a1*b2*c2*x1*x3 + a2*b2*c2*x1*x3 + a1*a2*b2*c2*x1*x3 + a1*a3*b2*c2*x1*x3 + b3*c2*x1*x3 + a2*b3*c2*x1*x3 + a1*a3*b3*c2*x1*x3 + b1*b3*c2*x1*x3 + a2*b1*b3*c2*x1*x3 + a1*b2*b3*c2*x1*x3 + a1*a2*b2*b3*c2*x1*x3 + a3*c1*c2*x1*x3 + a3*b1*c1*c2*x1*x3 + b2*c1*c2*x1*x3 + a2*b2*c1*c2*x1*x3 + a3*b2*c1*c2*x1*x3 + b1*b2*c1*c2*x1*x3 + a2*b1*b2*c1*c2*x1*x3 + a3*b1*b2*c1*c2*x1*x3 + a3*b3*c1*c2*x1*x3 + a3*b1*b3*c1*c2*x1*x3 + b2*b3*c1*c2*x1*x3 + a2*b2*b3*c1*c2*x1*x3 + b1*b2*b3*c1*c2*x1*x3 + a2*b1*b2*b3*c1*c2*x1*x3 + a2*c3*x1*x3 + a2*b2*c3*x1*x3 + a1*c2*c3*x1*x3 + a2*c2*c3*x1*x3 + b1*c2*c3*x1*x3 + a3*b1*c2*c3*x1*x3 + a3*b2*c2*c3*x1*x3 + b3*c2*c3*x1*x3 + a1*b3*c2*c3*x1*x3 + a2*b3*c2*c3*x1*x3 + b1*b3*c2*c3*x1*x3 + b2*b3*c2*c3*x1*x3 + c1*c2*c3*x1*x3 + b1*c1*c2*c3*x1*x3 + b3*c1*c2*c3*x1*x3 + b1*b3*c1*c2*c3*x1*x3 + a2*a3*b1*y1 + a1*a2*a3*b1*y1 + a1*a2*a3*b2*y1 + a2*a3*b1*b2*y1 + a2*b3*y1 + a2*b1*b3*y1 + a2*a3*b2*b3*y1 + a1*a2*a3*b2*b3*y1 + a1*a2*a3*c1*y1 + a1*a2*a3*b1*c1*y1 + a2*a3*b2*c1*y1 + a2*a3*b1*b2*c1*y1 + a2*b3*c1*y1 + a2*b1*b3*c1*y1 + a2*a3*b2*b3*c1*y1 + a2*a3*b1*b2*b3*c1*y1 + a3*c2*y1 + a3*b1*c2*y1 + a1*a3*b1*c2*y1 + a2*a3*b1*c2*y1 + a1*a2*a3*b1*c2*y1 + a3*b2*c2*y1 + a2*a3*b2*c2*y1 + a3*b1*b2*c2*y1 + b3*c2*y1 + a2*b3*c2*y1 + a3*b3*c2*y1 + b1*b3*c2*y1 + a1*b1*b3*c2*y1 + a3*b1*b3*c2*y1 + a2*b2*b3*c2*y1 + b1*b2*b3*c2*y1 + a2*b1*b2*b3*c2*y1 + a1*a3*c1*c2*y1 + a2*a3*c1*c2*y1 + a1*a2*a3*c1*c2*y1 + a1*a3*b1*c1*c2*y1 + a2*a3*b1*c1*c2*y1 + a3*b2*c1*c2*y1 + a3*b1*b2*c1*c2*y1 + a1*a3*b1*b2*c1*c2*y1 + a1*b3*c1*c2*y1 + a2*b3*c1*c2*y1 + b1*b2*b3*c1*c2*y1 + a2*c3*y1 + a1*a2*c3*y1 + a2*a3*c3*y1 + a1*a2*b1*c3*y1 + a2*a3*b1*c3*y1 + a2*b2*c3*y1 + a1*a3*b2*c3*y1 + a2*b1*b2*c3*y1 + a3*b1*b2*c3*y1 + a2*b3*c3*y1 + a2*b1*b3*c3*y1 + a2*b2*c1*c3*y1 + a2*b1*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a2*b1*b3*c1*c3*y1 + c2*c3*y1 + a1*c2*c3*y1 + a3*c2*c3*y1 + a1*a3*c2*c3*y1 + b1*c2*c3*y1 + a1*b1*c2*c3*y1 + a1*a2*b1*c2*c3*y1 + a1*a3*b1*c2*c3*y1 + b2*c2*c3*y1 + a1*a2*b2*c2*c3*y1 + a2*a3*b2*c2*c3*y1 + a2*b1*b2*c2*c3*y1 + a2*b3*c2*c3*y1 + a1*a2*b3*c2*c3*y1 + a1*a3*b3*c2*c3*y1 + a2*b1*b3*c2*c3*y1 + b2*b3*c2*c3*y1 + a2*b2*b3*c2*c3*y1 + a3*b2*b3*c2*c3*y1 + b1*b2*b3*c2*c3*y1 + c1*c2*c3*y1 + a1*c1*c2*c3*y1 + a2*c1*c2*c3*y1 + a1*a2*c1*c2*c3*y1 + a3*c1*c2*c3*y1 + a1*a3*c1*c2*c3*y1 + a3*b1*c1*c2*c3*y1 + a3*b2*c1*c2*c3*y1 + b1*b2*c1*c2*c3*y1 + a1*b1*b2*c1*c2*c3*y1 + a2*b1*b2*c1*c2*c3*y1 + a1*b3*c1*c2*c3*y1 + a3*b3*c1*c2*c3*y1 + b1*b3*c1*c2*c3*y1 + a1*b1*b3*c1*c2*c3*y1 + a2*b1*b3*c1*c2*c3*y1 + a3*b1*b3*c1*c2*c3*y1 + b1*b2*b3*c1*c2*c3*y1 + a2*a3*x1*y1 + a2*b3*x1*y1 + a3*c2*x1*y1 + a3*b2*c2*x1*y1 + b2*b3*c2*x1*y1 + a2*c3*x1*y1 + a2*b2*c3*x1*y1 + a3*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + c2*c3*x1*y1 + b1*c2*c3*x1*y1 + b2*c2*c3*x1*y1 + b3*c2*c3*x1*y1 + b2*b3*c2*c3*x1*y1 + a2*a3*x2*y1 + a1*a2*a3*x2*y1 + a2*b3*x2*y1 + a2*a3*c1*x2*y1 + a2*a3*b1*c1*x2*y1 + a3*b1*c2*x2*y1 + a2*a3*b1*c2*x2*y1 + a3*b2*c2*x2*y1 + a1*a3*b2*c2*x2*y1 + a3*b1*b2*c2*x2*y1 + b3*c2*x2*y1 + b2*b3*c2*x2*y1 + a3*b2*c1*c2*x2*y1 + a3*b1*b2*c1*c2*x2*y1 + a3*c3*x2*y1 + a2*b2*c3*x2*y1 + a3*b2*c3*x2*y1 + a2*b3*c3*x2*y1 + c2*c3*x2*y1 + a1*c2*c3*x2*y1 + a2*b1*c2*c3*x2*y1 + a3*b1*c2*c3*x2*y1 + b2*c2*c3*x2*y1 + a1*b2*c2*c3*x2*y1 + a1*b3*c2*c3*x2*y1 + b1*b3*c2*c3*x2*y1 + b2*b3*c2*c3*x2*y1 + c1*c2*c3*x2*y1 + b1*c1*c2*c3*x2*y1 + b2*c1*c2*c3*x2*y1 + b1*b2*c1*c2*c3*x2*y1 + b3*c1*c2*c3*x2*y1 + b1*b3*c1*c2*c3*x2*y1 + a2*a3*x3*y1 + a2*a3*b1*x3*y1 + a2*a3*b2*x3*y1 + a1*a2*a3*b2*x3*y1 + a2*a3*b3*x3*y1 + a1*a2*a3*b3*x3*y1 + a2*a3*b2*c1*x3*y1 + a2*a3*b1*b2*c1*x3*y1 + a2*a3*b3*c1*x3*y1 + a2*a3*b1*b3*c1*x3*y1 + a3*c2*x3*y1 + a1*a3*c2*x3*y1 + a2*a3*c2*x3*y1 + b1*c2*x3*y1 + a2*b1*c2*x3*y1 + a3*b1*c2*x3*y1 + a1*b2*c2*x3*y1 + a1*a2*b2*c2*x3*y1 + a3*b2*c2*x3*y1 + a1*a3*b2*c2*x3*y1 + b3*c2*x3*y1 + a2*b3*c2*x3*y1 + a3*b3*c2*x3*y1 + a1*a3*b3*c2*x3*y1 + b1*b3*c2*x3*y1 + a2*b1*b3*c2*x3*y1 + b2*b3*c2*x3*y1 + a1*b2*b3*c2*x3*y1 + a2*b2*b3*c2*x3*y1 + a1*a2*b2*b3*c2*x3*y1 + a3*c1*c2*x3*y1 + a3*b1*c1*c2*x3*y1 + b2*c1*c2*x3*y1 + a2*b2*c1*c2*x3*y1 + a3*b2*c1*c2*x3*y1 + b1*b2*c1*c2*x3*y1 + a2*b1*b2*c1*c2*x3*y1 + a3*b1*b2*c1*c2*x3*y1 + a3*b3*c1*c2*x3*y1 + a3*b1*b3*c1*c2*x3*y1 + b2*b3*c1*c2*x3*y1 + a2*b2*b3*c1*c2*x3*y1 + b1*b2*b3*c1*c2*x3*y1 + a2*b1*b2*b3*c1*c2*x3*y1 + a2*c3*x3*y1 + a2*b2*c3*x3*y1 + c2*c3*x3*y1 + a1*c2*c3*x3*y1 + a2*c2*c3*x3*y1 + b1*c2*c3*x3*y1 + a3*b1*c2*c3*x3*y1 + a3*b2*c2*c3*x3*y1 + a1*b3*c2*c3*x3*y1 + a2*b3*c2*c3*x3*y1 + b1*b3*c2*c3*x3*y1 + b2*b3*c2*c3*x3*y1 + c1*c2*c3*x3*y1 + b1*c1*c2*c3*x3*y1 + b3*c1*c2*c3*x3*y1 + b1*b3*c1*c2*c3*x3*y1 + (a2*b3*y1*(1 + y1))/2 + (a3*c2*y1*(1 + y1))/2 + (a3*b1*c2*y1*(1 + y1))/2 + (b3*c2*y1*(1 + y1))/2 + (a1*b3*c2*y1*(1 + y1))/2 + (b2*b3*c2*y1*(1 + y1))/2 + (b3*c1*c2*y1*(1 + y1))/2 + (b1*b3*c1*c2*y1*(1 + y1))/2 + (a2*c3*y1*(1 + y1))/2 + (a2*b2*c3*y1*(1 + y1))/2 + (a3*b2*c3*y1*(1 + y1))/2 + (a2*b3*c3*y1*(1 + y1))/2 + (b2*b3*c2*c3*y1*(1 + y1))/2 + a3*b1*y2 + a2*a3*b1*y2 + a3*c1*y2 + a2*a3*c1*y2 + a3*b1*c1*y2 + a2*a3*b1*c1*y2 + b3*c1*y2 + a1*b3*c1*y2 + a2*b3*c1*y2 + a1*b1*b3*c1*y2 + a1*a3*c2*y2 + a3*b1*c2*y2 + a1*a3*b1*c2*y2 + a2*a3*b1*c2*y2 + a1*b3*c2*y2 + b1*b3*c2*y2 + a1*b1*b3*c2*y2 + a3*c1*c2*y2 + a1*a3*c1*c2*y2 + a3*b1*c1*c2*y2 + a2*a3*b1*c1*c2*y2 + a3*b2*c1*c2*y2 + a2*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a1*a2*c3*y2 + b1*c3*y2 + a1*b1*c3*y2 + a2*b1*c3*y2 + a1*a2*b1*c3*y2 + c1*c3*y2 + a1*c1*c3*y2 + a2*c1*c3*y2 + a1*a2*c1*c3*y2 + a3*c1*c3*y2 + a1*a3*c1*c3*y2 + b1*c1*c3*y2 + a1*b1*c1*c3*y2 + a2*b1*c1*c3*y2 + b2*c1*c3*y2 + a2*b2*c1*c3*y2 + a3*b2*c1*c3*y2 + a1*b1*b2*c1*c3*y2 + b3*c1*c3*y2 + a2*b3*c1*c3*y2 + a1*b1*b3*c1*c3*y2 + a1*c2*c3*y2 + b1*c2*c3*y2 + a1*b1*c2*c3*y2 + a2*b1*c2*c3*y2 + a3*b1*c2*c3*y2 + a1*b2*c2*c3*y2 + a1*b1*b2*c2*c3*y2 + a3*c1*c2*c3*y2 + b1*c1*c2*c3*y2 + a2*b1*c1*c2*c3*y2 + a3*b1*c1*c2*c3*y2 + b2*c1*c2*c3*y2 + a2*b2*c1*c2*c3*y2 + a3*b2*c1*c2*c3*y2 + a1*b3*c1*c2*c3*y2 + a2*b3*c1*c2*c3*y2 + a1*a3*x1*y2 + a2*a3*x1*y2 + a1*a2*a3*x1*y2 + a3*b1*x1*y2 + a1*a3*b2*x1*y2 + b3*x1*y2 + a1*b3*x1*y2 + a2*b3*x1*y2 + a1*a2*b3*x1*y2 + a1*a3*b3*x1*y2 + a3*c1*x1*y2 + a2*a3*c1*x1*y2 + a3*b1*c1*x1*y2 + a2*a3*b1*c1*x1*y2 + a3*b2*c1*x1*y2 + a3*b1*b2*c1*x1*y2 + b3*c1*x1*y2 + a2*b3*c1*x1*y2 + a3*b3*c1*x1*y2 + b1*b3*c1*x1*y2 + a2*b1*b3*c1*x1*y2 + a3*b1*b3*c1*x1*y2 + a2*a3*b1*c2*x1*y2 + a3*b2*c2*x1*y2 + a1*a3*b2*c2*x1*y2 + a3*b1*b2*c2*x1*y2 + a1*b3*c2*x1*y2 + b1*b3*c2*x1*y2 + b2*b3*c2*x1*y2 + a1*b2*b3*c2*x1*y2 + a3*b2*c1*c2*x1*y2 + a3*b1*b2*c1*c2*x1*y2 + b3*c1*c2*x1*y2 + b1*b3*c1*c2*x1*y2 + b2*b3*c1*c2*x1*y2 + b1*b2*b3*c1*c2*x1*y2 + c3*x1*y2 + a3*c3*x1*y2 + b2*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + b3*c3*x1*y2 + a2*b3*c3*x1*y2 + c2*c3*x1*y2 + a1*c2*c3*x1*y2 + b1*c2*c3*x1*y2 + a2*b1*c2*c3*x1*y2 + a3*b1*c2*c3*x1*y2 + b2*c2*c3*x1*y2 + a1*b2*c2*c3*x1*y2 + a1*b3*c2*c3*x1*y2 + b1*b3*c2*c3*x1*y2 + b2*b3*c2*c3*x1*y2 + c1*c2*c3*x1*y2 + b1*c1*c2*c3*x1*y2 + b2*c1*c2*c3*x1*y2 + b1*b2*c1*c2*c3*x1*y2 + b3*c1*c2*c3*x1*y2 + b1*b3*c1*c2*c3*x1*y2 + a3*y1*y2 + a1*a3*y1*y2 + a1*a2*a3*y1*y2 + a3*b1*y1*y2 + a3*b2*y1*y2 + a1*a3*b2*y1*y2 + a1*b3*y1*y2 + a1*a2*b3*y1*y2 + a3*b3*y1*y2 + a1*a3*b3*y1*y2 + a3*c1*y1*y2 + a2*a3*c1*y1*y2 + a3*b1*c1*y1*y2 + a2*a3*b1*c1*y1*y2 + a3*b2*c1*y1*y2 + a3*b1*b2*c1*y1*y2 + b3*c1*y1*y2 + a2*b3*c1*y1*y2 + a3*b3*c1*y1*y2 + b1*b3*c1*y1*y2 + a2*b1*b3*c1*y1*y2 + a3*b1*b3*c1*y1*y2 + a2*a3*b1*c2*y1*y2 + a1*a3*b2*c2*y1*y2 + a3*b1*b2*c2*y1*y2 + b3*c2*y1*y2 + a1*b3*c2*y1*y2 + b1*b3*c2*y1*y2 + a1*b2*b3*c2*y1*y2 + a3*b2*c1*c2*y1*y2 + a3*b1*b2*c1*c2*y1*y2 + b3*c1*c2*y1*y2 + b1*b3*c1*c2*y1*y2 + b2*b3*c1*c2*y1*y2 + b1*b2*b3*c1*c2*y1*y2 + c3*y1*y2 + a3*c3*y1*y2 + b2*c3*y1*y2 + a2*b2*c3*y1*y2 + a3*b2*c3*y1*y2 + b3*c3*y1*y2 + a2*b3*c3*y1*y2 + a1*c2*c3*y1*y2 + b1*c2*c3*y1*y2 + a2*b1*c2*c3*y1*y2 + a3*b1*c2*c3*y1*y2 + a1*b2*c2*c3*y1*y2 + b3*c2*c3*y1*y2 + a1*b3*c2*c3*y1*y2 + b1*b3*c2*c3*y1*y2 + b2*b3*c2*c3*y1*y2 + c1*c2*c3*y1*y2 + b1*c1*c2*c3*y1*y2 + b2*c1*c2*c3*y1*y2 + b1*b2*c1*c2*c3*y1*y2 + b3*c1*c2*c3*y1*y2 + b1*b3*c1*c2*c3*y1*y2 + a2*b1*y3 + a2*a3*b1*y3 + a2*b1*b3*y3 + a2*a3*b1*b3*y3 + a2*c1*y3 + a2*a3*c1*y3 + b1*b2*c1*y3 + a3*b1*b2*c1*y3 + a2*b3*c1*y3 + a2*a3*b3*c1*y3 + a2*b1*b3*c1*y3 + a2*a3*b1*b3*c1*y3 + a1*c2*y3 + a1*a2*c2*y3 + a1*a3*c2*y3 + a1*b1*c2*y3 + a1*a3*b1*c2*y3 + a1*b2*c2*y3 + a1*a2*b2*c2*y3 + a1*a3*b2*c2*y3 + a2*b1*b3*c2*y3 + a2*a3*b1*b3*c2*y3 + a1*c1*c2*y3 + a1*a3*c1*c2*y3 + b1*c1*c2*y3 + a2*b1*c1*c2*y3 + a3*b1*c1*c2*y3 + a2*a3*b1*c1*c2*y3 + b1*b2*c1*c2*y3 + a3*b1*b2*c1*c2*y3 + b3*c1*c2*y3 + a2*b3*c1*c2*y3 + a3*b3*c1*c2*y3 + a2*a3*b3*c1*c2*y3 + b1*b2*b3*c1*c2*y3 + a3*b1*b2*b3*c1*c2*y3 + a1*a2*c3*y3 + a1*b2*c3*y3 + a1*a2*b2*c3*y3 + a1*a3*c2*c3*y3 + a1*b1*c2*c3*y3 + a2*a3*b1*c2*c3*y3 + a1*b1*b3*c2*c3*y3 + a2*b1*b3*c2*c3*y3 + a1*b2*b3*c2*c3*y3 + c1*c2*c3*y3 + a1*c1*c2*c3*y3 + a2*a3*c1*c2*c3*y3 + b1*c1*c2*c3*y3 + a2*b1*c1*c2*c3*y3 + a3*b1*c1*c2*c3*y3 + a3*b2*c1*c2*c3*y3 + b1*b2*c1*c2*c3*y3 + a3*b1*b2*c1*c2*c3*y3 + a1*b3*c1*c2*c3*y3 + a2*b3*c1*c2*c3*y3 + a2*b1*b3*c1*c2*c3*y3 + b2*b3*c1*c2*c3*y3 + a2*x1*y3 + a2*a3*x1*y3 + a2*b1*x1*y3 + a2*a3*b1*x1*y3 + b2*x1*y3 + a1*b2*x1*y3 + a1*a2*b2*x1*y3 + a3*b2*x1*y3 + a1*a3*b2*x1*y3 + a1*a2*a3*b2*x1*y3 + a2*b3*x1*y3 + a1*a2*b3*x1*y3 + a2*a3*b3*x1*y3 + a1*a2*a3*b3*x1*y3 + b2*c1*x1*y3 + a2*b2*c1*x1*y3 + a3*b2*c1*x1*y3 + a2*a3*b2*c1*x1*y3 + b1*b2*c1*x1*y3 + a2*b1*b2*c1*x1*y3 + a3*b1*b2*c1*x1*y3 + a2*a3*b1*b2*c1*x1*y3 + a2*b3*c1*x1*y3 + a2*a3*b3*c1*x1*y3 + a2*b1*b3*c1*x1*y3 + a2*a3*b1*b3*c1*x1*y3 + c2*x1*y3 + a1*c2*x1*y3 + a2*c2*x1*y3 + a3*c2*x1*y3 + a1*a3*c2*x1*y3 + a2*a3*c2*x1*y3 + b1*c2*x1*y3 + a2*b1*c2*x1*y3 + a3*b1*c2*x1*y3 + a1*b2*c2*x1*y3 + a2*b2*c2*x1*y3 + a1*a2*b2*c2*x1*y3 + a1*a3*b2*c2*x1*y3 + b3*c2*x1*y3 + a1*b3*c2*x1*y3 + a2*b3*c2*x1*y3 + a3*b3*c2*x1*y3 + a1*a3*b3*c2*x1*y3 + b1*b3*c2*x1*y3 + a2*b1*b3*c2*x1*y3 + a3*b1*b3*c2*x1*y3 + b2*b3*c2*x1*y3 + a1*a2*b2*b3*c2*x1*y3 + a3*b2*b3*c2*x1*y3 + c1*c2*x1*y3 + a3*c1*c2*x1*y3 + b1*c1*c2*x1*y3 + a3*b1*c1*c2*x1*y3 + b2*c1*c2*x1*y3 + a2*b2*c1*c2*x1*y3 + a3*b2*c1*c2*x1*y3 + b1*b2*c1*c2*x1*y3 + a2*b1*b2*c1*c2*x1*y3 + a3*b1*b2*c1*c2*x1*y3 + b3*c1*c2*x1*y3 + a3*b3*c1*c2*x1*y3 + b1*b3*c1*c2*x1*y3 + a3*b1*b3*c1*c2*x1*y3 + a2*b2*b3*c1*c2*x1*y3 + a2*b1*b2*b3*c1*c2*x1*y3 + a2*c3*x1*y3 + b2*c3*x1*y3 + a2*b2*c3*x1*y3 + c2*c3*x1*y3 + a1*c2*c3*x1*y3 + a2*c2*c3*x1*y3 + a3*b1*c2*c3*x1*y3 + b2*c2*c3*x1*y3 + a3*b2*c2*c3*x1*y3 + a1*b3*c2*c3*x1*y3 + a2*b3*c2*c3*x1*y3 + b1*b3*c2*c3*x1*y3 + b2*b3*c2*c3*x1*y3 + c1*c2*c3*x1*y3 + b1*c1*c2*c3*x1*y3 + b3*c1*c2*c3*x1*y3 + b1*b3*c1*c2*c3*x1*y3 + a2*y1*y3 + a2*a3*y1*y3 + a2*b1*y1*y3 + a2*a3*b1*y1*y3 + a1*b2*y1*y3 + a2*b2*y1*y3 + a1*a2*b2*y1*y3 + a1*a3*b2*y1*y3 + a2*a3*b2*y1*y3 + a1*a2*a3*b2*y1*y3 + a1*a2*b3*y1*y3 + a1*a2*a3*b3*y1*y3 + b2*c1*y1*y3 + a2*b2*c1*y1*y3 + a3*b2*c1*y1*y3 + a2*a3*b2*c1*y1*y3 + b1*b2*c1*y1*y3 + a2*b1*b2*c1*y1*y3 + a3*b1*b2*c1*y1*y3 + a2*a3*b1*b2*c1*y1*y3 + a2*b3*c1*y1*y3 + a2*a3*b3*c1*y1*y3 + a2*b1*b3*c1*y1*y3 + a2*a3*b1*b3*c1*y1*y3 + a1*c2*y1*y3 + a2*c2*y1*y3 + a1*a3*c2*y1*y3 + a2*a3*c2*y1*y3 + b1*c2*y1*y3 + a2*b1*c2*y1*y3 + a3*b1*c2*y1*y3 + b2*c2*y1*y3 + a1*b2*c2*y1*y3 + a1*a2*b2*c2*y1*y3 + a3*b2*c2*y1*y3 + a1*a3*b2*c2*y1*y3 + a1*b3*c2*y1*y3 + a2*b3*c2*y1*y3 + a1*a3*b3*c2*y1*y3 + b1*b3*c2*y1*y3 + a2*b1*b3*c2*y1*y3 + a3*b1*b3*c2*y1*y3 + b2*b3*c2*y1*y3 + a2*b2*b3*c2*y1*y3 + a1*a2*b2*b3*c2*y1*y3 + a3*b2*b3*c2*y1*y3 + c1*c2*y1*y3 + a3*c1*c2*y1*y3 + b1*c1*c2*y1*y3 + a3*b1*c1*c2*y1*y3 + b2*c1*c2*y1*y3 + a2*b2*c1*c2*y1*y3 + a3*b2*c1*c2*y1*y3 + b1*b2*c1*c2*y1*y3 + a2*b1*b2*c1*c2*y1*y3 + a3*b1*b2*c1*c2*y1*y3 + b3*c1*c2*y1*y3 + a3*b3*c1*c2*y1*y3 + b1*b3*c1*c2*y1*y3 + a3*b1*b3*c1*c2*y1*y3 + a2*b2*b3*c1*c2*y1*y3 + a2*b1*b2*b3*c1*c2*y1*y3 + a2*c3*y1*y3 + b2*c3*y1*y3 + a2*b2*c3*y1*y3 + a1*c2*c3*y1*y3 + a2*c2*c3*y1*y3 + a3*b1*c2*c3*y1*y3 + b2*c2*c3*y1*y3 + a3*b2*c2*c3*y1*y3 + b3*c2*c3*y1*y3 + a1*b3*c2*c3*y1*y3 + a2*b3*c2*c3*y1*y3 + b1*b3*c2*c3*y1*y3 + b2*b3*c2*c3*y1*y3 + c1*c2*c3*y1*y3 + b1*c1*c2*c3*y1*y3 + b3*c1*c2*c3*y1*y3 + b1*b3*c1*c2*c3*y1*y3 + a1*a2*a3*b1*z1 + a1*a2*a3*b2*z1 + a2*a3*b1*b2*z1 + a2*b1*b3*z1 + a1*a2*a3*b2*b3*z1 + a1*a2*a3*c1*z1 + a2*a3*b1*c1*z1 + a1*a2*a3*b1*c1*z1 + a2*a3*b1*b2*c1*z1 + a2*b1*b3*c1*z1 + a2*a3*b1*b2*b3*c1*z1 + a1*a3*c2*z1 + a1*a3*b1*c2*z1 + a1*a2*a3*b1*c2*z1 + a2*a3*b2*c2*z1 + a3*b1*b2*c2*z1 + a2*b3*c2*z1 + a1*b1*b3*c2*z1 + a3*b1*b3*c2*z1 + b2*b3*c2*z1 + b1*b2*b3*c2*z1 + a2*b1*b2*b3*c2*z1 + a1*a3*c1*c2*z1 + a2*a3*c1*c2*z1 + a1*a2*a3*c1*c2*z1 + a3*b1*c1*c2*z1 + a1*a3*b1*c1*c2*z1 + a2*a3*b1*c1*c2*z1 + a3*b2*c1*c2*z1 + a1*a3*b1*b2*c1*c2*z1 + a2*b3*c1*c2*z1 + b2*b3*c1*c2*z1 + b1*b2*b3*c1*c2*z1 + a2*b1*c3*z1 + a1*a2*b1*c3*z1 + a2*a3*b1*c3*z1 + a1*a3*b2*c3*z1 + a2*b1*b2*c3*z1 + a3*b1*b2*c3*z1 + a2*b1*b3*c3*z1 + a2*b1*b2*c1*c3*z1 + a2*b1*b3*c1*c3*z1 + a1*c2*c3*z1 + a2*c2*c3*z1 + a3*c2*c3*z1 + a1*a3*c2*c3*z1 + b1*c2*c3*z1 + a2*b1*c2*c3*z1 + a1*a2*b1*c2*c3*z1 + a3*b1*c2*c3*z1 + a1*a3*b1*c2*c3*z1 + a1*b2*c2*c3*z1 + a1*a2*b2*c2*c3*z1 + a2*a3*b2*c2*c3*z1 + a2*b1*b2*c2*c3*z1 + a2*b3*c2*c3*z1 + a1*a2*b3*c2*c3*z1 + a3*b3*c2*c3*z1 + a1*a3*b3*c2*c3*z1 + a2*b1*b3*c2*c3*z1 + a2*b2*b3*c2*c3*z1 + a3*b2*b3*c2*c3*z1 + b1*b2*b3*c2*c3*z1 + a1*c1*c2*c3*z1 + a1*a2*c1*c2*c3*z1 + a3*c1*c2*c3*z1 + a1*a3*c1*c2*c3*z1 + a3*b1*c1*c2*c3*z1 + a2*b2*c1*c2*c3*z1 + a3*b2*c1*c2*c3*z1 + a1*b1*b2*c1*c2*c3*z1 + a2*b1*b2*c1*c2*c3*z1 + b3*c1*c2*c3*z1 + a1*b3*c1*c2*c3*z1 + a2*b3*c1*c2*c3*z1 + a1*b1*b3*c1*c2*c3*z1 + a2*b1*b3*c1*c2*c3*z1 + a3*b1*b3*c1*c2*c3*z1 + b2*b3*c1*c2*c3*z1 + b1*b2*b3*c1*c2*c3*z1 + a2*b3*x1*z1 + a2*a3*c1*x1*z1 + a1*a3*c2*x1*z1 + a2*a3*c2*x1*z1 + a3*b2*c2*x1*z1 + a1*b3*c2*x1*z1 + b2*b3*c2*x1*z1 + a3*c1*c2*x1*z1 + a3*b2*c1*c2*x1*z1 + a1*b3*c1*c2*x1*z1 + a2*c3*x1*z1 + a2*b2*c3*x1*z1 + a3*b2*c3*x1*z1 + a2*b3*c3*x1*z1 + a1*c2*c3*x1*z1 + a2*c2*c3*x1*z1 + a3*c2*c3*x1*z1 + b3*c2*c3*x1*z1 + b2*b3*c2*c3*x1*z1 + b2*c1*c2*c3*x1*z1 + b3*c1*c2*c3*x1*z1 + a1*a2*a3*x2*z1 + a2*b3*x2*z1 + a2*a3*b1*c1*x2*z1 + a3*c2*x2*z1 + a2*a3*c2*x2*z1 + a3*b1*c2*x2*z1 + a2*a3*b1*c2*x2*z1 + a3*b2*c2*x2*z1 + a1*a3*b2*c2*x2*z1 + a3*b1*b2*c2*x2*z1 + b3*c2*x2*z1 + b2*b3*c2*x2*z1 + a3*b1*b2*c1*c2*x2*z1 + a3*c3*x2*z1 + a2*b2*c3*x2*z1 + a3*b2*c3*x2*z1 + a2*b3*c3*x2*z1 + a1*c2*c3*x2*z1 + a2*c2*c3*x2*z1 + a3*c2*c3*x2*z1 + a2*b1*c2*c3*x2*z1 + a3*b1*c2*c3*x2*z1 + a1*b2*c2*c3*x2*z1 + a1*b3*c2*c3*x2*z1 + b1*b3*c2*c3*x2*z1 + b2*b3*c2*c3*x2*z1 + b1*c1*c2*c3*x2*z1 + b1*b2*c1*c2*c3*x2*z1 + b1*b3*c1*c2*c3*x2*z1 + a2*a3*b1*x3*z1 + a1*a2*a3*b2*x3*z1 + a1*a2*a3*b3*x3*z1 + a2*a3*b1*b2*c1*x3*z1 + a2*a3*b1*b3*c1*x3*z1 + c2*x3*z1 + a2*c2*x3*z1 + a3*c2*x3*z1 + a1*a3*c2*x3*z1 + a2*a3*c2*x3*z1 + b1*c2*x3*z1 + a2*b1*c2*x3*z1 + a3*b1*c2*x3*z1 + b2*c2*x3*z1 + a1*b2*c2*x3*z1 + a2*b2*c2*x3*z1 + a1*a2*b2*c2*x3*z1 + a1*a3*b2*c2*x3*z1 + a1*a3*b3*c2*x3*z1 + b1*b3*c2*x3*z1 + a2*b1*b3*c2*x3*z1 + a1*b2*b3*c2*x3*z1 + a1*a2*b2*b3*c2*x3*z1 + a3*b1*c1*c2*x3*z1 + b1*b2*c1*c2*x3*z1 + a2*b1*b2*c1*c2*x3*z1 + a3*b1*b2*c1*c2*x3*z1 + a3*b1*b3*c1*c2*x3*z1 + b1*b2*b3*c1*c2*x3*z1 + a2*b1*b2*b3*c1*c2*x3*z1 + a2*c3*x3*z1 + a2*b2*c3*x3*z1 + c2*c3*x3*z1 + a1*c2*c3*x3*z1 + a2*c2*c3*x3*z1 + a3*c2*c3*x3*z1 + b1*c2*c3*x3*z1 + a3*b1*c2*c3*x3*z1 + a3*b2*c2*c3*x3*z1 + a1*b3*c2*c3*x3*z1 + a2*b3*c2*c3*x3*z1 + b1*b3*c2*c3*x3*z1 + b2*b3*c2*c3*x3*z1 + b1*c1*c2*c3*x3*z1 + b1*b3*c1*c2*c3*x3*z1 + a2*a3*y1*z1 + a2*b3*y1*z1 + a2*a3*c1*y1*z1 + a3*c2*y1*z1 + a1*a3*c2*y1*z1 + a2*a3*c2*y1*z1 + a3*b1*c2*y1*z1 + b2*b3*c2*y1*z1 + a3*c1*c2*y1*z1 + a3*b2*c1*c2*y1*z1 + a1*b3*c1*c2*y1*z1 + b1*b3*c1*c2*y1*z1 + a2*c3*y1*z1 + a2*b2*c3*y1*z1 + a3*b2*c3*y1*z1 + a2*b3*c3*y1*z1 + a1*c2*c3*y1*z1 + a2*c2*c3*y1*z1 + a3*c2*c3*y1*z1 + b1*c2*c3*y1*z1 + b2*c2*c3*y1*z1 + b2*b3*c2*c3*y1*z1 + b2*c1*c2*c3*y1*z1 + b3*c1*c2*c3*y1*z1 + a3*y2*z1 + a1*a3*y2*z1 + a2*a3*y2*z1 + a1*a2*a3*y2*z1 + a3*b1*y2*z1 + a1*a3*b2*y2*z1 + b3*y2*z1 + a1*b3*y2*z1 + a2*b3*y2*z1 + a1*a2*b3*y2*z1 + a1*a3*b3*y2*z1 + a3*b1*c1*y2*z1 + a2*a3*b1*c1*y2*z1 + a3*b1*b2*c1*y2*z1 + b1*b3*c1*y2*z1 + a2*b1*b3*c1*y2*z1 + a3*b1*b3*c1*y2*z1 + a2*a3*c2*y2*z1 + a2*a3*b1*c2*y2*z1 + a1*a3*b2*c2*y2*z1 + a3*b1*b2*c2*y2*z1 + b3*c2*y2*z1 + a1*b3*c2*y2*z1 + b1*b3*c2*y2*z1 + b2*b3*c2*y2*z1 + a1*b2*b3*c2*y2*z1 + a3*b1*b2*c1*c2*y2*z1 + b1*b3*c1*c2*y2*z1 + b1*b2*b3*c1*c2*y2*z1 + c3*y2*z1 + a3*c3*y2*z1 + b2*c3*y2*z1 + a2*b2*c3*y2*z1 + a3*b2*c3*y2*z1 + b3*c3*y2*z1 + a2*b3*c3*y2*z1 + a1*c2*c3*y2*z1 + a2*c2*c3*y2*z1 + a3*c2*c3*y2*z1 + b1*c2*c3*y2*z1 + a2*b1*c2*c3*y2*z1 + a3*b1*c2*c3*y2*z1 + b2*c2*c3*y2*z1 + a1*b2*c2*c3*y2*z1 + b3*c2*c3*y2*z1 + a1*b3*c2*c3*y2*z1 + b1*b3*c2*c3*y2*z1 + b2*b3*c2*c3*y2*z1 + b1*c1*c2*c3*y2*z1 + b1*b2*c1*c2*c3*y2*z1 + b1*b3*c1*c2*c3*y2*z1 + a2*b1*y3*z1 + a2*a3*b1*y3*z1 + b2*y3*z1 + a1*b2*y3*z1 + a1*a2*b2*y3*z1 + a3*b2*y3*z1 + a1*a3*b2*y3*z1 + a1*a2*a3*b2*y3*z1 + a2*b3*y3*z1 + a1*a2*b3*y3*z1 + a2*a3*b3*y3*z1 + a1*a2*a3*b3*y3*z1 + b1*b2*c1*y3*z1 + a2*b1*b2*c1*y3*z1 + a3*b1*b2*c1*y3*z1 + a2*a3*b1*b2*c1*y3*z1 + a2*b1*b3*c1*y3*z1 + a2*a3*b1*b3*c1*y3*z1 + a1*c2*y3*z1 + a1*a3*c2*y3*z1 + a2*a3*c2*y3*z1 + b1*c2*y3*z1 + a2*b1*c2*y3*z1 + a3*b1*c2*y3*z1 + a1*b2*c2*y3*z1 + a2*b2*c2*y3*z1 + a1*a2*b2*c2*y3*z1 + a1*a3*b2*c2*y3*z1 + a1*b3*c2*y3*z1 + a1*a3*b3*c2*y3*z1 + b1*b3*c2*y3*z1 + a2*b1*b3*c2*y3*z1 + a3*b1*b3*c2*y3*z1 + b2*b3*c2*y3*z1 + a1*a2*b2*b3*c2*y3*z1 + a3*b2*b3*c2*y3*z1 + b1*c1*c2*y3*z1 + a3*b1*c1*c2*y3*z1 + b1*b2*c1*c2*y3*z1 + a2*b1*b2*c1*c2*y3*z1 + a3*b1*b2*c1*c2*y3*z1 + b1*b3*c1*c2*y3*z1 + a3*b1*b3*c1*c2*y3*z1 + a2*b1*b2*b3*c1*c2*y3*z1 + a2*c3*y3*z1 + b2*c3*y3*z1 + a2*b2*c3*y3*z1 + c2*c3*y3*z1 + a1*c2*c3*y3*z1 + a2*c2*c3*y3*z1 + a3*c2*c3*y3*z1 + a3*b1*c2*c3*y3*z1 + b2*c2*c3*y3*z1 + a3*b2*c2*c3*y3*z1 + b3*c2*c3*y3*z1 + a1*b3*c2*c3*y3*z1 + a2*b3*c2*c3*y3*z1 + b1*b3*c2*c3*y3*z1 + b2*b3*c2*c3*y3*z1 + b1*c1*c2*c3*y3*z1 + b1*b3*c1*c2*c3*y3*z1 + (a2*b3*z1*(1 + z1))/2 + (a3*b1*c2*z1*(1 + z1))/2 + (a1*b3*c2*z1*(1 + z1))/2 + (b2*b3*c2*z1*(1 + z1))/2 + (b1*b3*c1*c2*z1*(1 + z1))/2 + (a2*c3*z1*(1 + z1))/2 + (a2*b2*c3*z1*(1 + z1))/2 + (a3*b2*c3*z1*(1 + z1))/2 + (a2*b3*c3*z1*(1 + z1))/2 + (b2*b3*c2*c3*z1*(1 + z1))/2 + a1*b1*b3*c1*z2 + a1*a3*b1*c2*z2 + a1*b1*b3*c2*z2 + a1*a3*c1*c2*z2 + a2*a3*c1*c2*z2 + a3*b2*c1*c2*z2 + a2*b3*c1*c2*z2 + b2*b3*c1*c2*z2 + a1*a2*b1*c3*z2 + a1*a2*c1*c3*z2 + a1*a3*c1*c3*z2 + a1*b2*c1*c3*z2 + a1*b1*b2*c1*c3*z2 + a1*b3*c1*c3*z2 + a1*b1*b3*c1*c3*z2 + a1*b1*b2*c2*c3*z2 + a3*c1*c2*c3*z2 + a2*b2*c1*c2*c3*z2 + a3*b2*c1*c2*c3*z2 + b3*c1*c2*c3*z2 + a1*b3*c1*c2*c3*z2 + a2*b3*c1*c2*c3*z2 + b2*b3*c1*c2*c3*z2 + a1*a2*a3*x1*z2 + a2*b3*x1*z2 + a2*a3*c1*x1*z2 + a2*a3*b1*c1*x1*z2 + a1*a3*c2*x1*z2 + a2*a3*c2*x1*z2 + a2*a3*b1*c2*x1*z2 + a3*b2*c2*x1*z2 + a1*a3*b2*c2*x1*z2 + a3*b1*b2*c2*x1*z2 + b2*b3*c2*x1*z2 + a3*c1*c2*x1*z2 + a3*b1*c1*c2*x1*z2 + a3*b2*c1*c2*x1*z2 + a3*b1*b2*c1*c2*x1*z2 + a2*c3*x1*z2 + a2*b2*c3*x1*z2 + a3*b2*c3*x1*z2 + a2*b3*c3*x1*z2 + a2*c2*c3*x1*z2 + a3*c2*c3*x1*z2 + a2*b1*c2*c3*x1*z2 + a3*b1*c2*c3*x1*z2 + a1*b2*c2*c3*x1*z2 + b3*c2*c3*x1*z2 + a1*b3*c2*c3*x1*z2 + b1*b3*c2*c3*x1*z2 + b2*b3*c2*c3*x1*z2 + b2*c1*c2*c3*x1*z2 + b1*b2*c1*c2*c3*x1*z2 + b3*c1*c2*c3*x1*z2 + b1*b3*c1*c2*c3*x1*z2 + a2*a3*y1*z2 + a1*a2*a3*y1*z2 + a2*b3*y1*z2 + a2*a3*c1*y1*z2 + a2*a3*b1*c1*y1*z2 + a3*c2*y1*z2 + a1*a3*c2*y1*z2 + a2*a3*c2*y1*z2 + a2*a3*b1*c2*y1*z2 + a1*a3*b2*c2*y1*z2 + a3*b1*b2*c2*y1*z2 + b2*b3*c2*y1*z2 + a3*c1*c2*y1*z2 + a3*b1*c1*c2*y1*z2 + a3*b2*c1*c2*y1*z2 + a3*b1*b2*c1*c2*y1*z2 + a2*c3*y1*z2 + a2*b2*c3*y1*z2 + a3*b2*c3*y1*z2 + a2*b3*c3*y1*z2 + a2*c2*c3*y1*z2 + a3*c2*c3*y1*z2 + a2*b1*c2*c3*y1*z2 + a3*b1*c2*c3*y1*z2 + b2*c2*c3*y1*z2 + a1*b2*c2*c3*y1*z2 + a1*b3*c2*c3*y1*z2 + b1*b3*c2*c3*y1*z2 + b2*b3*c2*c3*y1*z2 + b2*c1*c2*c3*y1*z2 + b1*b2*c1*c2*c3*y1*z2 + b3*c1*c2*c3*y1*z2 + b1*b3*c1*c2*c3*y1*z2 + a1*a2*a3*z1*z2 + a2*b3*z1*z2 + a2*a3*b1*c1*z1*z2 + a1*a3*c2*z1*z2 + a2*a3*b1*c2*z1*z2 + a1*a3*b2*c2*z1*z2 + a3*b1*b2*c2*z1*z2 + b2*b3*c2*z1*z2 + a3*b1*c1*c2*z1*z2 + a3*b1*b2*c1*c2*z1*z2 + a2*c3*z1*z2 + a2*b2*c3*z1*z2 + a3*b2*c3*z1*z2 + a2*b3*c3*z1*z2 + a2*b1*c2*c3*z1*z2 + a3*b1*c2*c3*z1*z2 + a1*b2*c2*c3*z1*z2 + a1*b3*c2*c3*z1*z2 + b1*b3*c2*c3*z1*z2 + b2*b3*c2*c3*z1*z2 + b1*b2*c1*c2*c3*z1*z2 + b1*b3*c1*c2*c3*z1*z2 + a1*a3*b1*c2*z3 + a1*a2*b2*c2*z3 + a1*a3*b2*c2*z3 + a1*a3*c1*c2*z3 + a2*a3*b1*c1*c2*z3 + a3*b1*b2*c1*c2*z3 + a1*a2*b2*c3*z3 + a1*a3*c2*c3*z3 + a2*a3*b1*c2*c3*z3 + a1*b3*c2*c3*z3 + a1*b1*b3*c2*c3*z3 + a2*b1*b3*c2*c3*z3 + a1*b2*b3*c2*c3*z3 + a3*c1*c2*c3*z3 + a2*a3*c1*c2*c3*z3 + a3*b2*c1*c2*c3*z3 + a3*b1*b2*c1*c2*c3*z3 + b3*c1*c2*c3*z3 + a1*b3*c1*c2*c3*z3 + a2*b3*c1*c2*c3*z3 + a2*b1*b3*c1*c2*c3*z3 + b2*b3*c1*c2*c3*z3 + a2*a3*x1*z3 + a2*a3*b1*x1*z3 + a1*a2*a3*b2*x1*z3 + a1*a2*a3*b3*x1*z3 + a2*a3*b2*c1*x1*z3 + a2*a3*b1*b2*c1*x1*z3 + a2*a3*b3*c1*x1*z3 + a2*a3*b1*b3*c1*x1*z3 + a1*a3*c2*x1*z3 + a2*a3*c2*x1*z3 + a2*b2*c2*x1*z3 + a2*b3*c2*x1*z3 + a1*a2*b3*c2*x1*z3 + a2*b1*b3*c2*x1*z3 + a1*a2*b2*b3*c2*x1*z3 + a3*c1*c2*x1*z3 + a3*b1*c1*c2*x1*z3 + a2*b3*c1*c2*x1*z3 + a2*b1*b3*c1*c2*x1*z3 + a2*b2*b3*c1*c2*x1*z3 + a2*b1*b2*b3*c1*c2*x1*z3 + a2*b2*c3*x1*z3 + a3*c2*c3*x1*z3 + a3*b1*c2*c3*x1*z3 + a3*b2*c2*c3*x1*z3 + b3*c2*c3*x1*z3 + a1*b3*c2*c3*x1*z3 + a2*b3*c2*c3*x1*z3 + b1*b3*c2*c3*x1*z3 + b2*b3*c2*c3*x1*z3 + b3*c1*c2*c3*x1*z3 + b1*b3*c1*c2*c3*x1*z3 + a2*a3*y1*z3 + a2*a3*b1*y1*z3 + a2*a3*b2*y1*z3 + a1*a2*a3*b2*y1*z3 + a2*a3*b3*y1*z3 + a1*a2*a3*b3*y1*z3 + a2*a3*b2*c1*y1*z3 + a2*a3*b1*b2*c1*y1*z3 + a2*a3*b3*c1*y1*z3 + a2*a3*b1*b3*c1*y1*z3 + a3*c2*y1*z3 + a1*a3*c2*y1*z3 + a2*a3*c2*y1*z3 + a2*b2*c2*y1*z3 + a1*a2*b3*c2*y1*z3 + a2*b1*b3*c2*y1*z3 + a2*b2*b3*c2*y1*z3 + a1*a2*b2*b3*c2*y1*z3 + a3*c1*c2*y1*z3 + a3*b1*c1*c2*y1*z3 + a2*b3*c1*c2*y1*z3 + a2*b1*b3*c1*c2*y1*z3 + a2*b2*b3*c1*c2*y1*z3 + a2*b1*b2*b3*c1*c2*y1*z3 + a2*b2*c3*y1*z3 + a3*c2*c3*y1*z3 + a3*b1*c2*c3*y1*z3 + a3*b2*c2*c3*y1*z3 + a1*b3*c2*c3*y1*z3 + a2*b3*c2*c3*y1*z3 + b1*b3*c2*c3*y1*z3 + b2*b3*c2*c3*y1*z3 + b3*c1*c2*c3*y1*z3 + b1*b3*c1*c2*c3*y1*z3 + a2*a3*b1*z1*z3 + a1*a2*a3*b2*z1*z3 + a1*a2*a3*b3*z1*z3 + a2*a3*b1*b2*c1*z1*z3 + a2*a3*b1*b3*c1*z1*z3 + a1*a3*c2*z1*z3 + a2*a3*c2*z1*z3 + a2*b2*c2*z1*z3 + a1*a2*b3*c2*z1*z3 + a2*b1*b3*c2*z1*z3 + a1*a2*b2*b3*c2*z1*z3 + a3*b1*c1*c2*z1*z3 + a2*b1*b3*c1*c2*z1*z3 + a2*b1*b2*b3*c1*c2*z1*z3 + a2*b2*c3*z1*z3 + a3*b1*c2*c3*z1*z3 + a3*b2*c2*c3*z1*z3 + a1*b3*c2*c3*z1*z3 + a2*b3*c2*c3*z1*z3 + b1*b3*c2*c3*z1*z3 + b2*b3*c2*c3*z1*z3 + b1*b3*c1*c2*c3*z1*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 123 ( P4/mmm)
#####################################################################
Aiin123:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin123:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin123:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Axyin123:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return x1 + y1;
end;
#####################################################################
Azin123:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return z1;
end;
#####################################################################
Bdeltain123:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bxyin123:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return (1 - c1)*x2*y1 + c1*(x2 + y1)*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 124 ( P4/mcc)
#####################################################################
Aiin124:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin124:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin124:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Axyin124:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return x1 + y1;
end;
#####################################################################
Bdeltain124:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bxyin124:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return (1 - c1)*x2*y1 + c1*(x2 + y1)*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 125 ( P4/nbm)
#####################################################################
Aiin125:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin125:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin125:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Azin125:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return z1;
end;
#####################################################################
Bdeltain125:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bcxyin125:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a2*b2*(c1 + d1) + 2*d1*d2 + b2*y1 + (a2 + b2*c1)*(x1 + y1);
end;
#####################################################################
#####################################################################
#Space Group No. 126 ( P4/nnc)
#####################################################################
#####################################################################
#Space Group No. 127 ( P4/mbm)
#####################################################################
Aiin127:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin127:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin127:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Azin127:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return z1;
end;
#####################################################################
Bdeltain127:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bphiin127:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a2*b1 + a1*b2 + a2*b1*b2 + a2*c1 + a1*b2*c1 + a2*d1 + b1*b2*d1 + a1*d2 + b1*b2*d2 + c1*d2 + d1*d2 + a2*x1 + b2*x1 + b2*c1*x1 + d2*x1 + a2*y1 + b2*c1*y1 + d2*y1;
end;
#####################################################################
CGAPin127:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3,d1,d2,d3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];d1:=g1[7];d2:=g2[7];d3:=g3[7];
return a1*a2*a3*b1 + a1*a3*b2 + a2*a3*b1*b2 + a1*a2*a3*b1*b2 + a2*b1*b3 + a1*a2*b1*b3 + a1*b2*b3 + a1*a3*b2*b3 + a1*a2*a3*b2*b3 + a3*b1*b2*b3 + a1*a3*b1*b2*b3 + a2*a3*b1*b2*b3 + a1*a2*a3*b1*b2*b3 + a1*a2*a3*c1 + a2*a3*b1*c1 + a3*b2*c1 + a2*a3*b2*c1 + a1*a2*a3*b2*c1 + a3*b1*b2*c1 + a1*a3*b1*b2*c1 + a2*b1*b3*c1 + a1*a2*b1*b3*c1 + a2*b2*b3*c1 + a3*b2*b3*c1 + a1*a3*b2*b3*c1 + a1*a2*a3*b2*b3*c1 + a1*b1*b2*b3*c1 + a2*b1*b2*b3*c1 + a3*b1*b2*b3*c1 + a2*a3*b1*b2*b3*c1 + a1*a3*c2 + a1*a2*a3*c2 + a3*b1*c2 + a2*a3*b1*c2 + a1*a3*b2*c2 + a1*a2*a3*b2*c2 + a3*b1*b2*c2 + a2*a3*b1*b2*c2 + a1*a2*a3*b1*b2*c2 + a1*b3*c2 + a1*b1*b3*c2 + a2*b1*b3*c2 + a1*a2*b1*b3*c2 + a1*a3*b1*b3*c2 + a1*a2*a3*b1*b3*c2 + a1*a3*b2*b3*c2 + a1*a2*a3*b2*b3*c2 + b1*b2*b3*c2 + a1*b1*b2*b3*c2 + a2*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a1*a3*b1*b2*b3*c2 + a2*a3*c1*c2 + a2*a3*b2*c1*c2 + a1*a2*a3*b2*c1*c2 + a3*b1*b2*c1*c2 + a1*a3*b1*b2*c1*c2 + a2*a3*b1*b2*c1*c2 + b3*c1*c2 + a1*a2*a3*b3*c1*c2 + b1*b3*c1*c2 + a1*b1*b3*c1*c2 + a2*b1*b3*c1*c2 + a1*a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + a1*a3*b1*b3*c1*c2 + a2*a3*b1*b3*c1*c2 + b2*b3*c1*c2 + a3*b2*b3*c1*c2 + a1*a3*b2*b3*c1*c2 + a2*a3*b2*b3*c1*c2 + b1*b2*b3*c1*c2 + a3*b1*b2*b3*c1*c2 + a1*a2*b1*c3 + a1*a2*a3*b2*c3 + b1*b2*c3 + a1*b1*b2*c3 + a1*a2*b1*b2*c3 + a3*b1*b2*c3 + a1*a3*b1*b2*c3 + a2*a3*b1*b2*c3 + a2*b1*b3*c3 + a1*a2*b1*b3*c3 + a2*a3*b1*b3*c3 + a1*a2*a3*b1*b3*c3 + a1*b2*b3*c3 + a1*a2*a3*b2*b3*c3 + a1*b1*b2*b3*c3 + a2*b1*b2*b3*c3 + a3*b1*b2*b3*c3 + a2*c1*c3 + a1*a2*c1*c3 + a2*b1*c1*c3 + a1*a2*b1*c1*c3 + a2*a3*b1*c1*c3 + b2*c1*c3 + a1*b2*c1*c3 + a2*b2*c1*c3 + a3*b2*c1*c3 + a1*a2*b1*b2*c1*c3 + a1*a3*b1*b2*c1*c3 + a2*a3*b3*c1*c3 + a1*a2*a3*b3*c1*c3 + a1*a2*b1*b3*c1*c3 + b2*b3*c1*c3 + a1*b2*b3*c1*c3 + a1*a3*b2*b3*c1*c3 + a2*a3*b2*b3*c1*c3 + b1*b2*b3*c1*c3 + a1*b1*b2*b3*c1*c3 + a2*a3*b1*b2*b3*c1*c3 + a1*c2*c3 + a1*a2*c2*c3 + a1*a3*c2*c3 + a1*b1*c2*c3 + a2*b1*c2*c3 + a1*a2*b1*c2*c3 + a3*b1*c2*c3 + a1*a2*b2*c2*c3 + a1*a2*a3*b2*c2*c3 + b1*b2*c2*c3 + a1*b1*b2*c2*c3 + a1*a2*b1*b2*c2*c3 + a3*b1*b2*c2*c3 + a1*a3*b1*b2*c2*c3 + a1*b3*c2*c3 + a1*a2*a3*b3*c2*c3 + a3*b1*b3*c2*c3 + a1*a3*b1*b3*c2*c3 + a2*a3*b1*b3*c2*c3 + a1*b2*b3*c2*c3 + a1*a2*b2*b3*c2*c3 + a1*a3*b2*b3*c2*c3 + a1*b1*b2*b3*c2*c3 + a2*b1*b2*b3*c2*c3 + a1*a2*b1*b2*b3*c2*c3 + a3*b1*b2*b3*c2*c3 + a1*a3*b1*b2*b3*c2*c3 + c1*c2*c3 + a1*c1*c2*c3 + a1*a2*c1*c2*c3 + a3*c1*c2*c3 + a3*b1*c1*c2*c3 + b2*c1*c2*c3 + a2*b2*c1*c2*c3 + a1*a2*b2*c1*c2*c3 + a1*a3*b2*c1*c2*c3 + a2*a3*b2*c1*c2*c3 + a2*b3*c1*c2*c3 + a3*b3*c1*c2*c3 + a1*a3*b3*c1*c2*c3 + a3*b1*b3*c1*c2*c3 + b2*b3*c1*c2*c3 + a1*b2*b3*c1*c2*c3 + a2*b2*b3*c1*c2*c3 + a1*a2*b2*b3*c1*c2*c3 + a3*b2*b3*c1*c2*c3 + a1*a3*b2*b3*c1*c2*c3 + a1*b1*b2*b3*c1*c2*c3 + a2*b1*b2*b3*c1*c2*c3 + a2*a3*d1 + a2*a3*b1*d1 + a2*b1*b3*d1 + a1*b1*b2*b3*d1 + a3*b1*b2*b3*d1 + a2*a3*c1*d1 + a3*b2*c1*d1 + a3*b1*b2*c1*d1 + a2*b1*b3*c1*d1 + b2*b3*c1*d1 + a1*b2*b3*c1*d1 + a3*b2*b3*c1*d1 + b1*b2*b3*c1*d1 + a3*c2*d1 + a3*b2*c2*d1 + a3*b1*b2*c2*d1 + a1*a3*b1*b2*c2*d1 + b1*b3*c2*d1 + a1*b1*b3*c2*d1 + a2*b1*b3*c2*d1 + a1*a2*b1*b3*c2*d1 + a3*b1*b3*c2*d1 + a1*a3*b1*b3*c2*d1 + b1*b2*b3*c2*d1 + a1*b1*b2*b3*c2*d1 + a2*b1*b2*b3*c2*d1 + a3*b1*b2*b3*c2*d1 + a3*c1*c2*d1 + a1*a3*b2*c1*c2*d1 + a3*b1*b2*c1*c2*d1 + b3*c1*c2*d1 + a1*b3*c1*c2*d1 + a1*a2*b3*c1*c2*d1 + a1*a3*b3*c1*c2*d1 + a2*b1*b3*c1*c2*d1 + a3*b1*b3*c1*c2*d1 + a1*b2*b3*c1*c2*d1 + a2*b2*b3*c1*c2*d1 + a3*b2*b3*c1*c2*d1 + b1*b2*b3*c1*c2*d1 + a2*c3*d1 + a2*b1*c3*d1 + a1*b2*c3*d1 + b1*b2*c3*d1 + a2*b1*b2*c3*d1 + a1*a2*b1*b2*c3*d1 + a3*b1*b2*c3*d1 + a1*a3*b1*b2*c3*d1 + a2*b3*c3*d1 + a1*a2*b1*b3*c3*d1 + a2*a3*b1*b3*c3*d1 + a3*b2*b3*c3*d1 + a2*c1*c3*d1 + a1*a2*b2*c1*c3*d1 + a1*a3*b2*c1*c3*d1 + a2*b1*b2*c1*c3*d1 + a3*b1*b2*c1*c3*d1 + a2*b3*c1*c3*d1 + a1*a2*b3*c1*c3*d1 + a2*a3*b3*c1*c3*d1 + a2*b1*b3*c1*c3*d1 + b2*b3*c1*c3*d1 + a3*b2*b3*c1*c3*d1 + b1*b2*b3*c1*c3*d1 + a3*b1*b2*b3*c1*c3*d1 + c2*c3*d1 + a1*b1*c2*c3*d1 + b1*b2*c2*c3*d1 + b3*c2*c3*d1 + a3*b3*c2*c3*d1 + a1*b1*b3*c2*c3*d1 + a2*b1*b3*c2*c3*d1 + a3*b1*b3*c2*c3*d1 + b2*b3*c2*c3*d1 + b1*b2*b3*c2*c3*d1 + a1*b1*b2*b3*c2*c3*d1 + a2*b1*b2*b3*c2*c3*d1 + a3*b1*b2*b3*c2*c3*d1 + a1*c1*c2*c3*d1 + a1*b3*c1*c2*c3*d1 + a2*b3*c1*c2*c3*d1 + a3*b3*c1*c2*c3*d1 + b1*b3*c1*c2*c3*d1 + a1*b2*b3*c1*c2*c3*d1 + a2*b2*b3*c1*c2*c3*d1 + a3*b2*b3*c1*c2*c3*d1 + b1*b2*b3*c1*c2*c3*d1 + a1*a3*b1*d2 + a2*a3*b1*d2 + a1*a3*b2*d2 + a1*b1*b3*d2 + a2*b1*b3*d2 + a1*a2*b1*b3*d2 + a1*a3*b1*b3*d2 + a1*b2*b3*d2 + a1*a2*b2*b3*d2 + a1*a3*b2*b3*d2 + a1*b1*b2*b3*d2 + a2*b1*b2*b3*d2 + a1*a2*b1*b2*b3*d2 + a3*b1*b2*b3*d2 + a1*a3*b1*b2*b3*d2 + a3*c1*d2 + a1*a3*c1*d2 + a2*a3*c1*d2 + a3*b2*c1*d2 + a3*b1*b2*c1*d2 + a2*b3*c1*d2 + a1*a2*b3*c1*d2 + a3*b3*c1*d2 + a1*a3*b3*c1*d2 + a3*b1*b3*c1*d2 + b2*b3*c1*d2 + a2*b2*b3*c1*d2 + a1*a2*b2*b3*c1*d2 + a1*a3*b2*b3*c1*d2 + a2*b1*b2*b3*c1*d2 + a3*b1*b2*b3*c1*d2 + a1*a3*b2*c2*d2 + a3*b1*b2*c2*d2 + a1*b1*b3*c2*d2 + a3*b1*b3*c2*d2 + a1*b2*b3*c2*d2 + a1*a2*b2*b3*c2*d2 + a1*a3*b2*b3*c2*d2 + a2*b1*b2*b3*c2*d2 + a3*b1*b2*b3*c2*d2 + a3*c1*c2*d2 + a3*b2*c1*c2*d2 + a3*b1*b2*c1*c2*d2 + a1*b3*c1*c2*d2 + b2*b3*c1*c2*d2 + a1*b1*b2*b3*c1*c2*d2 + a2*b1*b2*b3*c1*c2*d2 + a3*b1*b2*b3*c1*c2*d2 + a1*b1*c3*d2 + a2*b1*c3*d2 + a1*b2*c3*d2 + a1*a2*b2*c3*d2 + a1*a3*b2*c3*d2 + b1*b2*c3*d2 + a1*a2*b1*b2*c3*d2 + a1*a3*b1*b2*c3*d2 + a1*a2*b1*b3*c3*d2 + a2*a3*b1*b3*c3*d2 + a1*a2*b2*b3*c3*d2 + b1*b2*b3*c3*d2 + a2*c1*c3*d2 + b1*c1*c3*d2 + a1*b1*c1*c3*d2 + a2*b2*c1*c3*d2 + a1*a2*b2*c1*c3*d2 + a3*b2*c1*c3*d2 + a1*a3*b2*c1*c3*d2 + a1*b1*b2*c1*c3*d2 + b3*c1*c3*d2 + a1*b3*c1*c3*d2 + a2*b3*c1*c3*d2 + a1*a2*b3*c1*c3*d2 + a2*a3*b3*c1*c3*d2 + a1*b1*b3*c1*c3*d2 + a3*b1*b3*c1*c3*d2 + b2*b3*c1*c3*d2 + a2*b2*b3*c1*c3*d2 + b1*b2*b3*c1*c3*d2 + a3*b1*b2*b3*c1*c3*d2 + a1*c2*c3*d2 + a1*b1*c2*c3*d2 + a2*b1*c2*c3*d2 + a3*b1*c2*c3*d2 + a1*b2*c2*c3*d2 + a1*a2*b2*c2*c3*d2 + a1*a3*b2*c2*c3*d2 + b1*b2*c2*c3*d2 + a1*b3*c2*c3*d2 + a1*a2*b3*c2*c3*d2 + b1*b3*c2*c3*d2 + a2*b1*b3*c2*c3*d2 + a1*b2*b3*c2*c3*d2 + b1*b2*b3*c2*c3*d2 + a2*b1*b2*b3*c2*c3*d2 + b1*c1*c2*c3*d2 + b2*c1*c2*c3*d2 + a2*b2*c1*c2*c3*d2 + a3*b2*c1*c2*c3*d2 + b1*b2*c1*c2*c3*d2 + b1*b3*c1*c2*c3*d2 + a2*b2*b3*c1*c2*c3*d2 + a3*b2*b3*c1*c2*c3*d2 + b1*b2*b3*c1*c2*c3*d2 + c3*d1*d2 + a1*b2*d3 + a1*b1*b2*d3 + a2*b1*b2*d3 + a1*b2*b3*d3 + a1*b1*b2*b3*d3 + a2*b1*b2*b3*d3 + b2*c1*d3 + a3*b2*c1*d3 + b1*b2*c1*d3 + a3*b2*b3*c1*d3 + a1*b1*b2*b3*c1*d3 + a2*b1*b2*b3*c1*d3 + a3*b1*b2*b3*c1*d3 + a1*a2*c2*d3 + a1*a3*c2*d3 + a1*b2*c2*d3 + a1*a2*b2*c2*d3 + a1*a3*b2*c2*d3 + b1*b2*c2*d3 + a1*b1*b2*c2*d3 + a2*b1*b2*c2*d3 + a3*b1*b2*c2*d3 + a1*b3*c2*d3 + a1*a2*b3*c2*d3 + a1*a3*b3*c2*d3 + a1*b2*b3*c2*d3 + b1*b2*b3*c2*d3 + a1*b1*b2*b3*c2*d3 + a2*b1*b2*b3*c2*d3 + a3*b1*b2*b3*c2*d3 + a2*c1*c2*d3 + a3*c1*c2*d3 + b2*c1*c2*d3 + a1*b2*c1*c2*d3 + b1*b2*c1*c2*d3 + a1*b1*b2*c1*c2*d3 + a2*b1*b2*c1*c2*d3 + a3*b1*b2*c1*c2*d3 + a2*b3*c1*c2*d3 + a3*b3*c1*c2*d3 + a1*a2*c3*d3 + a1*b2*c3*d3 + a1*a2*b2*c3*d3 + a1*a3*b2*c3*d3 + a3*b1*b2*c3*d3 + a1*a2*b3*c3*d3 + a2*c1*c3*d3 + a2*b2*c1*c3*d3 + a3*b2*c1*c3*d3 + b1*b2*c1*c3*d3 + a1*b1*b2*c1*c3*d3 + a2*b1*b2*c1*c3*d3 + a3*b1*b2*c1*c3*d3 + a2*b3*c1*c3*d3 + b2*b3*c1*c3*d3 + a1*b2*b3*c1*c3*d3 + a2*b2*b3*c1*c3*d3 + b1*b2*b3*c1*c3*d3 + b1*b2*c2*c3*d3 + b2*c1*c2*c3*d3 + a1*b3*c1*c2*c3*d3 + a2*b3*c1*c2*c3*d3 + a3*b3*c1*c2*c3*d3 + b2*b3*c1*c2*c3*d3 + b1*b2*b3*c1*c2*c3*d3 + d1*d2*d3 + a3*b2*x1 + a3*b1*b2*x1 + a1*a2*b3*x1 + a2*a3*b3*x1 + a2*b1*b3*x1 + a1*b2*b3*x1 + a2*a3*c1*x1 + a3*b2*c1*x1 + a2*b3*c1*x1 + a2*b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a3*c2*x1 + a2*a3*c2*x1 + a1*a3*b2*c2*x1 + a3*b1*b2*c2*x1 + a1*a3*b1*b2*c2*x1 + a1*b3*c2*x1 + a1*a2*b3*c2*x1 + a1*a3*b3*c2*x1 + a2*a3*b3*c2*x1 + a2*b1*b3*c2*x1 + a1*a2*b1*b3*c2*x1 + a3*b1*b3*c2*x1 + a1*a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a2*a3*b2*b3*c2*x1 + b1*b2*b3*c2*x1 + a1*b1*b2*b3*c2*x1 + a3*c1*c2*x1 + a3*b2*c1*c2*x1 + b3*c1*c2*x1 + a2*a3*b3*c1*c2*x1 + a1*b1*b3*c1*c2*x1 + b2*b3*c1*c2*x1 + a2*a3*b2*b3*c1*c2*x1 + a2*c3*x1 + a1*a2*b2*c3*x1 + a3*b2*c3*x1 + a1*a3*b2*c3*x1 + a2*a3*b2*c3*x1 + a2*b1*b2*c3*x1 + a1*a2*b1*b2*c3*x1 + a3*b1*b2*c3*x1 + a1*a3*b1*b2*c3*x1 + a1*a2*b3*c3*x1 + a2*a3*b3*c3*x1 + a1*a2*b1*b3*c3*x1 + a2*b2*b3*c3*x1 + a1*a3*b2*b3*c3*x1 + b1*b2*b3*c3*x1 + a3*b1*b2*b3*c3*x1 + a2*c1*c3*x1 + b2*c1*c3*x1 + a1*b2*c1*c3*x1 + a2*a3*b2*c1*c3*x1 + b1*b2*c1*c3*x1 + a1*b1*b2*c1*c3*x1 + a2*a3*b3*c1*c3*x1 + a2*b1*b3*c1*c3*x1 + a1*b2*b3*c1*c3*x1 + a2*b2*b3*c1*c3*x1 + a3*b2*b3*c1*c3*x1 + a2*a3*b2*b3*c1*c3*x1 + a2*c2*c3*x1 + b1*c2*c3*x1 + a1*b1*c2*c3*x1 + a1*b2*c2*c3*x1 + a2*b2*c2*c3*x1 + a2*a3*b2*c2*c3*x1 + b1*b2*c2*c3*x1 + a1*b3*c2*c3*x1 + a2*b3*c2*c3*x1 + a3*b3*c2*c3*x1 + a2*a3*b3*c2*c3*x1 + b1*b3*c2*c3*x1 + a2*b1*b3*c2*c3*x1 + a2*b2*b3*c2*c3*x1 + a3*b2*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + a1*b1*b2*b3*c2*c3*x1 + a2*c1*c2*c3*x1 + b2*c1*c2*c3*x1 + a3*b2*c1*c2*c3*x1 + a2*a3*b2*c1*c2*c3*x1 + a3*b3*c1*c2*c3*x1 + a2*a3*b3*c1*c2*c3*x1 + b2*b3*c1*c2*c3*x1 + a3*b2*b3*c1*c2*c3*x1 + b1*b2*b3*c1*c2*c3*x1 + a3*b1*b2*c2*d1*x1 + b1*b3*c2*d1*x1 + a2*b1*b3*c2*d1*x1 + a3*b1*b3*c2*d1*x1 + b1*b2*b3*c2*d1*x1 + a3*b2*c1*c2*d1*x1 + b3*c1*c2*d1*x1 + a2*b3*c1*c2*d1*x1 + a3*b3*c1*c2*d1*x1 + b2*b3*c1*c2*d1*x1 + b2*c3*d1*x1 + b1*b2*c3*d1*x1 + a2*b1*b2*c3*d1*x1 + a3*b1*b2*c3*d1*x1 + a2*b1*b3*c3*d1*x1 + b2*c1*c3*d1*x1 + a2*b2*c1*c3*d1*x1 + a3*b2*c1*c3*d1*x1 + a2*b3*c1*c3*d1*x1 + c2*c3*d1*x1 + b1*c2*c3*d1*x1 + b1*b3*c2*c3*d1*x1 + b1*b2*b3*c2*c3*d1*x1 + c1*c2*c3*d1*x1 + b3*c1*c2*c3*d1*x1 + b2*b3*c1*c2*c3*d1*x1 + b2*b3*d2*x1 + a3*b1*b2*c1*d2*x1 + b1*b3*c1*d2*x1 + a1*b1*b3*c1*d2*x1 + a2*b1*b3*c1*d2*x1 + a3*b1*b3*c1*d2*x1 + a3*b1*b2*c2*d2*x1 + a2*b3*c2*d2*x1 + a3*b3*c2*d2*x1 + b1*b3*c2*d2*x1 + a1*b1*b3*c2*d2*x1 + a2*b1*b3*c2*d2*x1 + a3*b1*b3*c2*d2*x1 + b2*b3*c2*d2*x1 + a2*b2*b3*c2*d2*x1 + a3*b2*b3*c2*d2*x1 + b1*b2*b3*c2*d2*x1 + a3*b2*c1*c2*d2*x1 + b3*c1*c2*d2*x1 + a1*b3*c1*c2*d2*x1 + a2*b2*b3*c1*c2*d2*x1 + a3*b2*b3*c1*c2*d2*x1 + b1*b2*b3*c1*c2*d2*x1 + b1*c3*d2*x1 + b2*c3*d2*x1 + a2*b2*c3*d2*x1 + a3*b2*c3*d2*x1 + b1*b2*c3*d2*x1 + a1*b1*b2*c3*d2*x1 + a2*b1*b2*c3*d2*x1 + a3*b1*b2*c3*d2*x1 + a1*b1*b3*c3*d2*x1 + a2*b1*b3*c3*d2*x1 + a2*b2*b3*c3*d2*x1 + c1*c3*d2*x1 + b1*c1*c3*d2*x1 + b2*c1*c3*d2*x1 + a1*b2*c1*c3*d2*x1 + b1*b2*c1*c3*d2*x1 + b3*c1*c3*d2*x1 + a1*b3*c1*c3*d2*x1 + a2*b3*c1*c3*d2*x1 + b1*b3*c1*c3*d2*x1 + a2*b2*b3*c1*c3*d2*x1 + a3*b2*b3*c1*c3*d2*x1 + c2*c3*d2*x1 + b1*c2*c3*d2*x1 + a2*b2*c2*c3*d2*x1 + a3*b2*c2*c3*d2*x1 + b3*c2*c3*d2*x1 + a2*b3*c2*c3*d2*x1 + b1*b3*c2*c3*d2*x1 + b2*b3*c2*c3*d2*x1 + b1*b2*b3*c2*c3*d2*x1 + a2*b2*c1*c2*c3*d2*x1 + a3*b2*c1*c2*c3*d2*x1 + a2*b3*c1*c2*c3*d2*x1 + a3*b3*c1*c2*c3*d2*x1 + a2*d3*x1 + a1*b2*d3*x1 + a2*b3*d3*x1 + b2*c1*d3*x1 + a1*b1*b2*c1*d3*x1 + a2*b1*b2*c1*d3*x1 + a3*b1*b2*c1*d3*x1 + a1*b2*b3*c1*d3*x1 + a2*b2*b3*c1*d3*x1 + a3*b2*b3*c1*d3*x1 + b1*b2*b3*c1*d3*x1 + c2*d3*x1 + a1*c2*d3*x1 + b1*b2*c2*d3*x1 + a1*b1*b2*c2*d3*x1 + a2*b1*b2*c2*d3*x1 + a3*b1*b2*c2*d3*x1 + a1*b2*b3*c2*d3*x1 + a2*b2*b3*c2*d3*x1 + a3*b2*b3*c2*d3*x1 + b1*b2*b3*c2*d3*x1 + c1*c2*d3*x1 + b2*c1*c2*d3*x1 + a1*b2*c1*c2*d3*x1 + a2*b2*c1*c2*d3*x1 + a3*b2*c1*c2*d3*x1 + b1*b2*c1*c2*d3*x1 + a1*b3*c1*c2*d3*x1 + a2*b3*c1*c2*d3*x1 + a3*b3*c1*c2*d3*x1 + a2*c3*d3*x1 + b1*b2*c3*d3*x1 + a1*b1*b2*c3*d3*x1 + a2*b1*b2*c3*d3*x1 + a3*b1*b2*c3*d3*x1 + b2*b3*c3*d3*x1 + a1*b2*b3*c3*d3*x1 + a2*b2*b3*c3*d3*x1 + a3*b2*b3*c3*d3*x1 + a1*b2*c1*c3*d3*x1 + a2*b2*c1*c3*d3*x1 + a3*b2*c1*c3*d3*x1 + b1*b2*c1*c3*d3*x1 + b2*b3*c1*c3*d3*x1 + b1*b2*b3*c1*c3*d3*x1 + c2*c3*d3*x1 + b3*c2*c3*d3*x1 + a1*b3*c2*c3*d3*x1 + a2*b3*c2*c3*d3*x1 + a3*b3*c2*c3*d3*x1 + b2*b3*c2*c3*d3*x1 + b1*b2*b3*c2*c3*d3*x1 + b3*c1*c2*c3*d3*x1 + a3*b1*x2 + a1*a3*b2*x2 + a3*b1*b2*x2 + a1*a3*b1*b2*x2 + a1*a3*b3*x2 + a1*b1*b3*x2 + a2*b1*b3*x2 + a1*a2*b1*b3*x2 + a1*a3*b1*b3*x2 + a1*b2*b3*x2 + a3*b2*c1*x2 + a1*a3*b2*c1*x2 + a1*a2*b3*c1*x2 + a3*b3*c1*x2 + a1*a3*b3*c1*x2 + a1*b1*b3*c1*x2 + a3*b1*b3*c1*x2 + b2*b3*c1*x2 + a1*b2*b3*c1*x2 + a2*b2*b3*c1*x2 + a3*b2*b3*c1*x2 + a3*b1*c2*x2 + a1*a3*b2*c2*x2 + a1*a3*b1*b2*c2*x2 + a1*a2*b3*c2*x2 + a1*a3*b3*c2*x2 + b1*b3*c2*x2 + a1*b1*b3*c2*x2 + a1*a2*b1*b3*c2*x2 + a1*a3*b1*b3*c2*x2 + a1*b2*b3*c2*x2 + a3*b1*c1*c2*x2 + a1*a3*b2*c1*c2*x2 + b3*c1*c2*x2 + a1*a2*b3*c1*c2*x2 + a1*a3*b3*c1*c2*x2 + a1*b1*b3*c1*c2*x2 + b1*b2*b3*c1*c2*x2 + b1*c3*x2 + a1*b1*c3*x2 + a2*b1*c3*x2 + a3*b1*c3*x2 + a1*a2*b2*c3*x2 + a1*a3*b2*c3*x2 + a1*a2*b1*b2*c3*x2 + a1*a3*b1*b2*c3*x2 + a1*a2*b3*c3*x2 + a2*b1*b3*c3*x2 + a1*a2*b1*b3*c3*x2 + a3*b1*b3*c3*x2 + a1*a3*b2*b3*c3*x2 + b1*b2*b3*c3*x2 + a3*b1*b2*b3*c3*x2 + a1*b1*c1*c3*x2 + a2*b1*c1*c3*x2 + a3*b1*c1*c3*x2 + a1*b2*c1*c3*x2 + a1*a2*b2*c1*c3*x2 + a1*a3*b2*c1*c3*x2 + b1*b2*c1*c3*x2 + a1*b1*b2*c1*c3*x2 + a1*a2*b3*c1*c3*x2 + a3*b3*c1*c3*x2 + b1*b3*c1*c3*x2 + a2*b1*b3*c1*c3*x2 + a3*b1*b3*c1*c3*x2 + b2*b3*c1*c3*x2 + a1*b2*b3*c1*c3*x2 + a2*b2*b3*c1*c3*x2 + a3*b2*b3*c1*c3*x2 + b1*b2*b3*c1*c3*x2 + a3*b1*b2*b3*c1*c3*x2 + b1*c2*c3*x2 + a1*b1*c2*c3*x2 + a1*b2*c2*c3*x2 + b1*b2*c2*c3*x2 + a1*b3*c2*c3*x2 + b1*b3*c2*c3*x2 + a2*b1*b3*c2*c3*x2 + a1*b1*b2*b3*c2*c3*x2 + c1*c2*c3*x2 + a1*c1*c2*c3*x2 + b2*c1*c2*c3*x2 + b1*b2*c1*c2*c3*x2 + a1*b3*c1*c2*c3*x2 + a3*b3*c1*c2*c3*x2 + b1*b3*c1*c2*c3*x2 + b2*b3*c1*c2*c3*x2 + a1*b2*b3*c1*c2*c3*x2 + b1*b2*b3*c1*c2*c3*x2 + a3*b1*b2*c2*d1*x2 + b1*b3*c2*d1*x2 + a2*b1*b3*c2*d1*x2 + a3*b1*b3*c2*d1*x2 + b1*b2*b3*c2*d1*x2 + a3*b2*c1*c2*d1*x2 + b3*c1*c2*d1*x2 + a2*b3*c1*c2*d1*x2 + a3*b3*c1*c2*d1*x2 + b2*b3*c1*c2*d1*x2 + c3*d1*x2 + b1*c3*d1*x2 + b2*c3*d1*x2 + b1*b2*c3*d1*x2 + a2*b1*b2*c3*d1*x2 + a3*b1*b2*c3*d1*x2 + a2*b1*b3*c3*d1*x2 + c1*c3*d1*x2 + b1*c1*c3*d1*x2 + a2*b2*c1*c3*d1*x2 + a3*b2*c1*c3*d1*x2 + a2*b3*c1*c3*d1*x2 + c2*c3*d1*x2 + b1*c2*c3*d1*x2 + b1*b3*c2*c3*d1*x2 + b1*b2*b3*c2*c3*d1*x2 + b3*c1*c2*c3*d1*x2 + b2*b3*c1*c2*c3*d1*x2 + a3*b1*b2*c1*d2*x2 + b1*b3*c1*d2*x2 + a1*b1*b3*c1*d2*x2 + a2*b1*b3*c1*d2*x2 + a3*b1*b3*c1*d2*x2 + a3*b1*b2*c2*d2*x2 + b1*b3*c2*d2*x2 + a1*b1*b3*c2*d2*x2 + a2*b1*b3*c2*d2*x2 + a3*b1*b3*c2*d2*x2 + b1*b2*b3*c2*d2*x2 + a3*b2*c1*c2*d2*x2 + a1*b3*c1*c2*d2*x2 + a2*b3*c1*c2*d2*x2 + a3*b3*c1*c2*d2*x2 + b2*b3*c1*c2*d2*x2 + b1*b2*b3*c1*c2*d2*x2 + b1*c3*d2*x2 + b1*b2*c3*d2*x2 + a1*b1*b2*c3*d2*x2 + a2*b1*b2*c3*d2*x2 + a3*b1*b2*c3*d2*x2 + a1*b1*b3*c3*d2*x2 + a2*b1*b3*c3*d2*x2 + c1*c3*d2*x2 + b1*c1*c3*d2*x2 + b2*c1*c3*d2*x2 + a1*b2*c1*c3*d2*x2 + a2*b2*c1*c3*d2*x2 + a3*b2*c1*c3*d2*x2 + b1*b2*c1*c3*d2*x2 + b3*c1*c3*d2*x2 + a1*b3*c1*c3*d2*x2 + a2*b3*c1*c3*d2*x2 + b1*b3*c1*c3*d2*x2 + b1*c2*c3*d2*x2 + b1*b3*c2*c3*d2*x2 + b1*b2*b3*c2*c3*d2*x2 + b3*c1*c2*c3*d2*x2 + b2*b3*c1*c2*c3*d2*x2 + a1*b2*d3*x2 + b2*c1*d3*x2 + a1*b1*b2*c1*d3*x2 + a2*b1*b2*c1*d3*x2 + a3*b1*b2*c1*d3*x2 + a1*b2*b3*c1*d3*x2 + a2*b2*b3*c1*d3*x2 + a3*b2*b3*c1*d3*x2 + b1*b2*b3*c1*d3*x2 + a1*c2*d3*x2 + b1*b2*c2*d3*x2 + a1*b1*b2*c2*d3*x2 + a2*b1*b2*c2*d3*x2 + a3*b1*b2*c2*d3*x2 + a1*b2*b3*c2*d3*x2 + b1*b2*b3*c2*d3*x2 + c1*c2*d3*x2 + b2*c1*c2*d3*x2 + a1*b2*c1*c2*d3*x2 + a2*b2*c1*c2*d3*x2 + a3*b2*c1*c2*d3*x2 + b1*b2*c1*c2*d3*x2 + a1*b3*c1*c2*d3*x2 + a2*b3*c1*c2*d3*x2 + a3*b3*c1*c2*d3*x2 + b1*b2*c3*d3*x2 + a1*b1*b2*c3*d3*x2 + a2*b1*b2*c3*d3*x2 + a3*b1*b2*c3*d3*x2 + a1*b2*b3*c3*d3*x2 + a1*b2*c1*c3*d3*x2 + a2*b2*c1*c3*d3*x2 + a3*b2*c1*c3*d3*x2 + b1*b2*c1*c3*d3*x2 + b2*b3*c1*c3*d3*x2 + b1*b2*b3*c1*c3*d3*x2 + a1*b3*c2*c3*d3*x2 + b1*b2*b3*c2*c3*d3*x2 + b3*c1*c2*c3*d3*x2 + b3*x1*x2 + a3*c2*x1*x2 + b3*c2*x1*x2 + c3*x1*x2 + a2*c3*x1*x2 + a3*c3*x1*x2 + b2*c1*c3*x1*x2 + a3*b3*c1*c3*x1*x2 + b3*c2*c3*x1*x2 + c1*c2*c3*x1*x2 + a1*a2*x3 + a2*b1*x3 + a1*a2*b1*x3 + a1*b2*x3 + a1*a3*b2*x3 + b1*b2*x3 + a1*a2*b1*b2*x3 + a3*b1*b2*x3 + a1*a3*b1*b2*x3 + a1*a2*b1*b3*x3 + a2*a3*b1*b3*x3 + a1*a3*b2*b3*x3 + b1*b2*b3*x3 + a2*c1*x3 + a1*a2*c1*x3 + a1*b2*c1*x3 + a2*b2*c1*x3 + a1*a2*b2*c1*x3 + a3*b2*c1*x3 + a1*a3*b2*c1*x3 + b1*b2*c1*x3 + a2*b1*b2*c1*x3 + a1*a2*b3*c1*x3 + a2*a3*b3*c1*x3 + a2*b1*b3*c1*x3 + a3*b2*b3*c1*x3 + a3*b1*b2*b3*c1*x3 + a1*a2*c2*x3 + a2*b1*c2*x3 + a3*b1*c2*x3 + a1*a2*b2*c2*x3 + a1*a3*b2*c2*x3 + b1*b2*c2*x3 + a3*b1*b2*c2*x3 + a1*a2*b3*c2*x3 + a3*b1*b3*c2*x3 + a1*b2*b3*c2*x3 + a1*b1*b2*b3*c2*x3 + c1*c2*x3 + a2*c1*c2*x3 + a2*b1*c1*c2*x3 + a3*b1*c1*c2*x3 + a1*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a1*b1*b2*c1*c2*x3 + a2*b1*b2*c1*c2*x3 + a3*b1*b2*c1*c2*x3 + b3*c1*c2*x3 + a1*b3*c1*c2*x3 + a1*b1*b3*c1*c2*x3 + a2*b1*b3*c1*c2*x3 + a3*b1*b3*c1*c2*x3 + a1*b2*b3*c1*c2*x3 + a3*b2*b3*c1*c2*x3 + a1*b2*c3*x3 + a1*a2*b2*c3*x3 + a1*a3*b2*c3*x3 + b1*b2*c3*x3 + a1*a2*b1*b2*c3*x3 + a3*b1*b2*c3*x3 + a1*a3*b1*b2*c3*x3 + a1*a2*b3*c3*x3 + a2*b1*b3*c3*x3 + a1*a2*b1*b3*c3*x3 + a2*a3*b1*b3*c3*x3 + a1*a3*b2*b3*c3*x3 + b1*b2*b3*c3*x3 + b2*c1*c3*x3 + a2*b2*c1*c3*x3 + a1*a2*b2*c1*c3*x3 + a1*a3*b2*c1*c3*x3 + b1*b2*c1*c3*x3 + a1*b1*b2*c1*c3*x3 + a1*a2*b3*c1*c3*x3 + a2*a3*b3*c1*c3*x3 + a2*b1*b3*c1*c3*x3 + a1*b2*b3*c1*c3*x3 + a2*b2*b3*c1*c3*x3 + a3*b2*b3*c1*c3*x3 + b1*b2*b3*c1*c3*x3 + a3*b1*b2*b3*c1*c3*x3 + a1*c2*c3*x3 + b1*c2*c3*x3 + a1*a2*b2*c2*c3*x3 + a1*a3*b2*c2*c3*x3 + a1*a2*b3*c2*c3*x3 + b1*b3*c2*c3*x3 + a2*b1*b3*c2*c3*x3 + a1*b2*b3*c2*c3*x3 + b1*b2*b3*c2*c3*x3 + a1*b1*b2*b3*c2*c3*x3 + c1*c2*c3*x3 + b1*c1*c2*c3*x3 + a2*b2*c1*c2*c3*x3 + a3*b2*c1*c2*c3*x3 + b1*b2*c1*c2*c3*x3 + b3*c1*c2*c3*x3 + a1*b3*c1*c2*c3*x3 + a2*b3*c1*c2*c3*x3 + a3*b3*c1*c2*c3*x3 + b1*b3*c1*c2*c3*x3 + a1*b2*b3*c1*c2*c3*x3 + a3*b2*b3*c1*c2*c3*x3 + b1*b2*b3*c1*c2*c3*x3 + a2*b1*d1*x3 + a2*c1*d1*x3 + b1*c2*d1*x3 + b1*b2*c2*d1*x3 + a2*b1*b2*c2*d1*x3 + a3*b1*b2*c2*d1*x3 + b1*b3*c2*d1*x3 + a2*b1*b3*c2*d1*x3 + a3*b1*b3*c2*d1*x3 + b1*b2*b3*c2*d1*x3 + c1*c2*d1*x3 + b2*c1*c2*d1*x3 + a2*b2*c1*c2*d1*x3 + a3*b2*c1*c2*d1*x3 + b3*c1*c2*d1*x3 + a2*b3*c1*c2*d1*x3 + a3*b3*c1*c2*d1*x3 + b2*b3*c1*c2*d1*x3 + b1*b2*c3*d1*x3 + a2*b1*b2*c3*d1*x3 + a3*b1*b2*c3*d1*x3 + a2*b1*b3*c3*d1*x3 + a3*b2*b3*c3*d1*x3 + b2*c1*c3*d1*x3 + a2*b2*c1*c3*d1*x3 + a3*b2*c1*c3*d1*x3 + a2*b3*c1*c3*d1*x3 + a3*b3*c2*c3*d1*x3 + b1*b3*c2*c3*d1*x3 + b1*b2*b3*c2*c3*d1*x3 + b3*c1*c2*c3*d1*x3 + b2*b3*c1*c2*c3*d1*x3 + a1*b1*d2*x3 + a2*b1*d2*x3 + c1*d2*x3 + a1*c1*d2*x3 + a2*c1*d2*x3 + b1*c1*d2*x3 + b1*b2*c1*d2*x3 + a1*b1*b2*c1*d2*x3 + a2*b1*b2*c1*d2*x3 + a3*b1*b2*c1*d2*x3 + b1*b3*c1*d2*x3 + a1*b1*b3*c1*d2*x3 + a2*b1*b3*c1*d2*x3 + a3*b1*b3*c1*d2*x3 + b1*c2*d2*x3 + b1*b2*c2*d2*x3 + a1*b1*b2*c2*d2*x3 + a2*b1*b2*c2*d2*x3 + a3*b1*b2*c2*d2*x3 + b1*b3*c2*d2*x3 + a1*b1*b3*c2*d2*x3 + a2*b1*b3*c2*d2*x3 + a3*b1*b3*c2*d2*x3 + b1*b2*b3*c2*d2*x3 + c1*c2*d2*x3 + a1*b2*c1*c2*d2*x3 + a2*b2*c1*c2*d2*x3 + a3*b2*c1*c2*d2*x3 + b1*b2*c1*c2*d2*x3 + a1*b3*c1*c2*d2*x3 + a2*b3*c1*c2*d2*x3 + a3*b3*c1*c2*d2*x3 + b2*b3*c1*c2*d2*x3 + b1*b2*b3*c1*c2*d2*x3 + b1*b2*c3*d2*x3 + a1*b1*b2*c3*d2*x3 + a2*b1*b2*c3*d2*x3 + a3*b1*b2*c3*d2*x3 + a1*b1*b3*c3*d2*x3 + a2*b1*b3*c3*d2*x3 + a1*b2*c1*c3*d2*x3 + a2*b2*c1*c3*d2*x3 + a3*b2*c1*c3*d2*x3 + b1*b2*c1*c3*d2*x3 + b3*c1*c3*d2*x3 + a1*b3*c1*c3*d2*x3 + a2*b3*c1*c3*d2*x3 + b1*b3*c1*c3*d2*x3 + b1*b3*c2*c3*d2*x3 + b1*b2*b3*c2*c3*d2*x3 + b3*c1*c2*c3*d2*x3 + b2*b3*c1*c2*c3*d2*x3 + a1*b2*d3*x3 + b2*c1*d3*x3 + a1*b1*b2*c1*d3*x3 + a2*b1*b2*c1*d3*x3 + a3*b1*b2*c1*d3*x3 + a1*b2*b3*c1*d3*x3 + a2*b2*b3*c1*d3*x3 + a3*b2*b3*c1*d3*x3 + b1*b2*b3*c1*d3*x3 + a1*c2*d3*x3 + b1*b2*c2*d3*x3 + a1*b1*b2*c2*d3*x3 + a2*b1*b2*c2*d3*x3 + a3*b1*b2*c2*d3*x3 + a1*b2*b3*c2*d3*x3 + b1*b2*b3*c2*d3*x3 + c1*c2*d3*x3 + b2*c1*c2*d3*x3 + a1*b2*c1*c2*d3*x3 + a2*b2*c1*c2*d3*x3 + a3*b2*c1*c2*d3*x3 + b1*b2*c1*c2*d3*x3 + a1*b3*c1*c2*d3*x3 + a2*b3*c1*c2*d3*x3 + a3*b3*c1*c2*d3*x3 + b1*b2*c3*d3*x3 + a1*b1*b2*c3*d3*x3 + a2*b1*b2*c3*d3*x3 + a3*b1*b2*c3*d3*x3 + a1*b2*b3*c3*d3*x3 + a1*b2*c1*c3*d3*x3 + a2*b2*c1*c3*d3*x3 + a3*b2*c1*c3*d3*x3 + b1*b2*c1*c3*d3*x3 + b2*b3*c1*c3*d3*x3 + b1*b2*b3*c1*c3*d3*x3 + a1*b3*c2*c3*d3*x3 + b1*b2*b3*c2*c3*d3*x3 + b3*c1*c2*c3*d3*x3 + b2*x1*x3 + a2*c1*x1*x3 + a3*c2*x1*x3 + a2*b2*c2*x1*x3 + a3*b2*c2*x1*x3 + b3*c2*x1*x3 + a2*b3*c2*x1*x3 + a3*b3*c2*x1*x3 + b2*b3*c2*x1*x3 + c1*c2*x1*x3 + b2*c1*c2*x1*x3 + a2*b2*c1*c2*x1*x3 + a3*b2*c1*c2*x1*x3 + b3*c1*c2*x1*x3 + a2*b3*c1*c2*x1*x3 + a3*b3*c1*c2*x1*x3 + b2*b3*c1*c2*x1*x3 + a2*c3*x1*x3 + b2*c1*c3*x1*x3 + b2*c2*c3*x1*x3 + a2*b2*c2*c3*x1*x3 + a3*b2*c2*c3*x1*x3 + a2*b3*c2*c3*x1*x3 + a3*b3*c2*c3*x1*x3 + b2*b3*c2*c3*x1*x3 + a2*b2*c1*c2*c3*x1*x3 + a3*b2*c1*c2*c3*x1*x3 + b3*c1*c2*c3*x1*x3 + a2*b3*c1*c2*c3*x1*x3 + a3*b3*c1*c2*c3*x1*x3 + b2*b3*c1*c2*c3*x1*x3 + a2*a3*y1 + a1*a2*b3*y1 + a2*a3*b3*y1 + a3*b2*b3*y1 + a2*a3*c1*y1 + a3*b2*c1*y1 + a2*b3*c1*y1 + b2*b3*c1*y1 + a2*b2*b3*c1*y1 + a2*a3*c2*y1 + a1*a3*b1*b2*c2*y1 + a2*b3*c2*y1 + a3*b3*c2*y1 + a1*a2*b1*b3*c2*y1 + a1*a3*b1*b3*c2*y1 + a1*b2*b3*c2*y1 + a1*b1*b2*b3*c2*y1 + a3*c1*c2*y1 + a3*b2*c1*c2*y1 + b3*c1*c2*y1 + a2*a3*b3*c1*c2*y1 + a1*b1*b3*c1*c2*y1 + b2*b3*c1*c2*y1 + a2*a3*b2*b3*c1*c2*y1 + b2*c3*y1 + a2*b2*c3*y1 + a1*a2*b1*b2*c3*y1 + a1*a3*b1*b2*c3*y1 + a2*b3*c3*y1 + a2*b1*b3*c3*y1 + a1*a2*b1*b3*c3*y1 + b2*b3*c3*y1 + a2*b2*b3*c3*y1 + a1*a3*b2*b3*c3*y1 + a2*a3*b2*b3*c3*y1 + a2*c1*c3*y1 + b2*c1*c3*y1 + a1*b2*c1*c3*y1 + a2*a3*b2*c1*c3*y1 + a1*b1*b2*c1*c3*y1 + a2*a3*b3*c1*c3*y1 + a2*b1*b3*c1*c3*y1 + a1*b2*b3*c1*c3*y1 + a2*b2*b3*c1*c3*y1 + a3*b2*b3*c1*c3*y1 + a2*a3*b2*b3*c1*c3*y1 + a1*c2*c3*y1 + b1*c2*c3*y1 + a1*b1*c2*c3*y1 + a1*b2*c2*c3*y1 + a2*b2*c2*c3*y1 + a3*b2*c2*c3*y1 + b3*c2*c3*y1 + a2*b3*c2*c3*y1 + a3*b3*c2*c3*y1 + a2*b1*b3*c2*c3*y1 + b2*b3*c2*c3*y1 + a1*b2*b3*c2*c3*y1 + a2*b2*b3*c2*c3*y1 + a1*b1*b2*b3*c2*c3*y1 + c1*c2*c3*y1 + a2*c1*c2*c3*y1 + b2*c1*c2*c3*y1 + a3*b2*c1*c2*c3*y1 + a2*a3*b2*c1*c2*c3*y1 + a3*b3*c1*c2*c3*y1 + a2*a3*b3*c1*c2*c3*y1 + b2*b3*c1*c2*c3*y1 + a3*b2*b3*c1*c2*c3*y1 + b1*b2*b3*c1*c2*c3*y1 + a3*b1*b2*c2*d1*y1 + b1*b3*c2*d1*y1 + a2*b1*b3*c2*d1*y1 + a3*b1*b3*c2*d1*y1 + b1*b2*b3*c2*d1*y1 + a3*b2*c1*c2*d1*y1 + b3*c1*c2*d1*y1 + a2*b3*c1*c2*d1*y1 + a3*b3*c1*c2*d1*y1 + b2*b3*c1*c2*d1*y1 + b1*b2*c3*d1*y1 + a2*b1*b2*c3*d1*y1 + a3*b1*b2*c3*d1*y1 + a2*b1*b3*c3*d1*y1 + b2*c1*c3*d1*y1 + a2*b2*c1*c3*d1*y1 + a3*b2*c1*c3*d1*y1 + a2*b3*c1*c3*d1*y1 + b1*c2*c3*d1*y1 + b1*b3*c2*c3*d1*y1 + b1*b2*b3*c2*c3*d1*y1 + c1*c2*c3*d1*y1 + b3*c1*c2*c3*d1*y1 + b2*b3*c1*c2*c3*d1*y1 + b2*b3*d2*y1 + a3*b1*b2*c1*d2*y1 + b1*b3*c1*d2*y1 + a1*b1*b3*c1*d2*y1 + a2*b1*b3*c1*d2*y1 + a3*b1*b3*c1*d2*y1 + a3*b1*b2*c2*d2*y1 + b3*c2*d2*y1 + b1*b3*c2*d2*y1 + a1*b1*b3*c2*d2*y1 + a2*b1*b3*c2*d2*y1 + a3*b1*b3*c2*d2*y1 + b1*b2*b3*c2*d2*y1 + a3*b2*c1*c2*d2*y1 + b3*c1*c2*d2*y1 + a1*b3*c1*c2*d2*y1 + a2*b2*b3*c1*c2*d2*y1 + a3*b2*b3*c1*c2*d2*y1 + b1*b2*b3*c1*c2*d2*y1 + b1*c3*d2*y1 + b2*c3*d2*y1 + b1*b2*c3*d2*y1 + a1*b1*b2*c3*d2*y1 + a2*b1*b2*c3*d2*y1 + a3*b1*b2*c3*d2*y1 + a1*b1*b3*c3*d2*y1 + a2*b1*b3*c3*d2*y1 + a3*b2*b3*c3*d2*y1 + c1*c3*d2*y1 + b1*c1*c3*d2*y1 + b2*c1*c3*d2*y1 + a1*b2*c1*c3*d2*y1 + b1*b2*c1*c3*d2*y1 + b3*c1*c3*d2*y1 + a1*b3*c1*c3*d2*y1 + a2*b3*c1*c3*d2*y1 + b1*b3*c1*c3*d2*y1 + a2*b2*b3*c1*c3*d2*y1 + a3*b2*b3*c1*c3*d2*y1 + c2*c3*d2*y1 + b1*c2*c3*d2*y1 + a3*b3*c2*c3*d2*y1 + b1*b3*c2*c3*d2*y1 + b1*b2*b3*c2*c3*d2*y1 + a2*b2*c1*c2*c3*d2*y1 + a3*b2*c1*c2*c3*d2*y1 + a2*b3*c1*c2*c3*d2*y1 + a3*b3*c1*c2*c3*d2*y1 + a2*d3*y1 + a1*b2*d3*y1 + a2*b3*d3*y1 + b2*c1*d3*y1 + a1*b1*b2*c1*d3*y1 + a2*b1*b2*c1*d3*y1 + a3*b1*b2*c1*d3*y1 + a1*b2*b3*c1*d3*y1 + a2*b2*b3*c1*d3*y1 + a3*b2*b3*c1*d3*y1 + b1*b2*b3*c1*d3*y1 + c2*d3*y1 + a1*c2*d3*y1 + b1*b2*c2*d3*y1 + a1*b1*b2*c2*d3*y1 + a2*b1*b2*c2*d3*y1 + a3*b1*b2*c2*d3*y1 + a1*b2*b3*c2*d3*y1 + a2*b2*b3*c2*d3*y1 + a3*b2*b3*c2*d3*y1 + b1*b2*b3*c2*d3*y1 + c1*c2*d3*y1 + b2*c1*c2*d3*y1 + a1*b2*c1*c2*d3*y1 + a2*b2*c1*c2*d3*y1 + a3*b2*c1*c2*d3*y1 + b1*b2*c1*c2*d3*y1 + a1*b3*c1*c2*d3*y1 + a2*b3*c1*c2*d3*y1 + a3*b3*c1*c2*d3*y1 + a2*c3*d3*y1 + b1*b2*c3*d3*y1 + a1*b1*b2*c3*d3*y1 + a2*b1*b2*c3*d3*y1 + a3*b1*b2*c3*d3*y1 + b2*b3*c3*d3*y1 + a1*b2*b3*c3*d3*y1 + a2*b2*b3*c3*d3*y1 + a3*b2*b3*c3*d3*y1 + a1*b2*c1*c3*d3*y1 + a2*b2*c1*c3*d3*y1 + a3*b2*c1*c3*d3*y1 + b1*b2*c1*c3*d3*y1 + b2*b3*c1*c3*d3*y1 + b1*b2*b3*c1*c3*d3*y1 + c2*c3*d3*y1 + b3*c2*c3*d3*y1 + a1*b3*c2*c3*d3*y1 + a2*b3*c2*c3*d3*y1 + a3*b3*c2*c3*d3*y1 + b2*b3*c2*c3*d3*y1 + b1*b2*b3*c2*c3*d3*y1 + b3*c1*c2*c3*d3*y1 + a3*b2*c2*x1*y1 + b3*c2*x1*y1 + a2*b3*c2*x1*y1 + a3*b3*c2*x1*y1 + b2*b3*c2*x1*y1 + b2*c3*x1*y1 + a2*b2*c3*x1*y1 + a3*b2*c3*x1*y1 + a2*b3*c3*x1*y1 + c2*c3*x1*y1 + b3*c2*c3*x1*y1 + b2*b3*c2*c3*x1*y1 + b3*x2*y1 + a3*c2*x2*y1 + b3*c2*x2*y1 + c3*x2*y1 + a2*c3*x2*y1 + a3*c3*x2*y1 + b2*c3*x2*y1 + a3*b3*c3*x2*y1 + b2*c1*c3*x2*y1 + a3*b3*c1*c3*x2*y1 + c2*c3*x2*y1 + b3*c2*c3*x2*y1 + c1*c2*c3*x2*y1 + a2*x3*y1 + b2*x3*y1 + a2*c1*x3*y1 + c2*x3*y1 + a3*c2*x3*y1 + b2*c2*x3*y1 + c1*c2*x3*y1 + b2*c1*c2*x3*y1 + a2*b2*c1*c2*x3*y1 + a3*b2*c1*c2*x3*y1 + b3*c1*c2*x3*y1 + a2*b3*c1*c2*x3*y1 + a3*b3*c1*c2*x3*y1 + b2*b3*c1*c2*x3*y1 + a2*c3*x3*y1 + b2*c3*x3*y1 + b2*c1*c3*x3*y1 + b2*c2*c3*x3*y1 + b3*c2*c3*x3*y1 + a2*b2*c1*c2*c3*x3*y1 + a3*b2*c1*c2*c3*x3*y1 + b3*c1*c2*c3*x3*y1 + a2*b3*c1*c2*c3*x3*y1 + a3*b3*c1*c2*c3*x3*y1 + b2*b3*c1*c2*c3*x3*y1 + a1*a2*b3*y2 + a3*b1*b2*c1*y2 + a2*b3*c1*y2 + b1*b3*c1*y2 + a1*b1*b3*c1*y2 + a2*b1*b3*c1*y2 + a1*b2*b3*c1*y2 + a2*b2*b3*c1*y2 + a3*b2*b3*c1*y2 + b1*b2*b3*c1*y2 + a1*a3*b1*b2*c2*y2 + a1*a2*b1*b3*c2*y2 + a1*a3*b1*b3*c2*y2 + a1*b2*b3*c2*y2 + a1*b1*b2*b3*c2*y2 + a3*b1*c1*c2*y2 + a3*b2*c1*c2*y2 + a1*a3*b2*c1*c2*y2 + b3*c1*c2*y2 + a1*b3*c1*c2*y2 + a2*b3*c1*c2*y2 + a1*a2*b3*c1*c2*y2 + a3*b3*c1*c2*y2 + a1*a3*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a1*b1*b3*c1*c2*y2 + a1*b2*b3*c1*c2*y2 + b1*c3*y2 + a1*b1*c3*y2 + a1*a2*b1*b2*c3*y2 + a1*a3*b1*b2*c3*y2 + a2*b1*b3*c3*y2 + a1*a2*b1*b3*c3*y2 + a1*a3*b2*b3*c3*y2 + c1*c3*y2 + a1*c1*c3*y2 + b1*c1*c3*y2 + a1*b1*c1*c3*y2 + a2*b1*c1*c3*y2 + a3*b1*c1*c3*y2 + a1*b2*c1*c3*y2 + a2*b2*c1*c3*y2 + a1*a2*b2*c1*c3*y2 + a3*b2*c1*c3*y2 + a1*a3*b2*c1*c3*y2 + a1*b1*b2*c1*c3*y2 + a2*b3*c1*c3*y2 + a1*a2*b3*c1*c3*y2 + b1*b3*c1*c3*y2 + a2*b1*b3*c1*c3*y2 + a3*b1*b3*c1*c3*y2 + b2*b3*c1*c3*y2 + a1*b2*b3*c1*c3*y2 + a2*b2*b3*c1*c3*y2 + a3*b2*b3*c1*c3*y2 + b1*b2*b3*c1*c3*y2 + a3*b1*b2*b3*c1*c3*y2 + a1*c2*c3*y2 + b1*c2*c3*y2 + a1*b1*c2*c3*y2 + a1*b2*c2*c3*y2 + a2*b1*b3*c2*c3*y2 + a1*b2*b3*c2*c3*y2 + a1*b1*b2*b3*c2*c3*y2 + a1*c1*c2*c3*y2 + b2*c1*c2*c3*y2 + b1*b2*c1*c2*c3*y2 + b3*c1*c2*c3*y2 + a1*b3*c1*c2*c3*y2 + a3*b3*c1*c2*c3*y2 + b1*b3*c1*c2*c3*y2 + a1*b2*b3*c1*c2*c3*y2 + b1*b2*b3*c1*c2*c3*y2 + a3*b1*b2*c2*d1*y2 + b1*b3*c2*d1*y2 + a2*b1*b3*c2*d1*y2 + a3*b1*b3*c2*d1*y2 + b1*b2*b3*c2*d1*y2 + a3*b2*c1*c2*d1*y2 + b3*c1*c2*d1*y2 + a2*b3*c1*c2*d1*y2 + a3*b3*c1*c2*d1*y2 + b2*b3*c1*c2*d1*y2 + b1*c3*d1*y2 + b1*b2*c3*d1*y2 + a2*b1*b2*c3*d1*y2 + a3*b1*b2*c3*d1*y2 + a2*b1*b3*c3*d1*y2 + c1*c3*d1*y2 + b1*c1*c3*d1*y2 + a2*b2*c1*c3*d1*y2 + a3*b2*c1*c3*d1*y2 + a2*b3*c1*c3*d1*y2 + b1*c2*c3*d1*y2 + b1*b3*c2*c3*d1*y2 + b1*b2*b3*c2*c3*d1*y2 + b3*c1*c2*c3*d1*y2 + b2*b3*c1*c2*c3*d1*y2 + a3*b1*b2*c1*d2*y2 + b1*b3*c1*d2*y2 + a1*b1*b3*c1*d2*y2 + a2*b1*b3*c1*d2*y2 + a3*b1*b3*c1*d2*y2 + a3*b1*b2*c2*d2*y2 + b1*b3*c2*d2*y2 + a1*b1*b3*c2*d2*y2 + a2*b1*b3*c2*d2*y2 + a3*b1*b3*c2*d2*y2 + b1*b2*b3*c2*d2*y2 + a3*b2*c1*c2*d2*y2 + a1*b3*c1*c2*d2*y2 + a2*b3*c1*c2*d2*y2 + a3*b3*c1*c2*d2*y2 + b2*b3*c1*c2*d2*y2 + b1*b2*b3*c1*c2*d2*y2 + b1*c3*d2*y2 + b1*b2*c3*d2*y2 + a1*b1*b2*c3*d2*y2 + a2*b1*b2*c3*d2*y2 + a3*b1*b2*c3*d2*y2 + a1*b1*b3*c3*d2*y2 + a2*b1*b3*c3*d2*y2 + c1*c3*d2*y2 + b1*c1*c3*d2*y2 + b2*c1*c3*d2*y2 + a1*b2*c1*c3*d2*y2 + a2*b2*c1*c3*d2*y2 + a3*b2*c1*c3*d2*y2 + b1*b2*c1*c3*d2*y2 + b3*c1*c3*d2*y2 + a1*b3*c1*c3*d2*y2 + a2*b3*c1*c3*d2*y2 + b1*b3*c1*c3*d2*y2 + b1*c2*c3*d2*y2 + b1*b3*c2*c3*d2*y2 + b1*b2*b3*c2*c3*d2*y2 + b3*c1*c2*c3*d2*y2 + b2*b3*c1*c2*c3*d2*y2 + a1*b2*d3*y2 + b2*c1*d3*y2 + a1*b1*b2*c1*d3*y2 + a2*b1*b2*c1*d3*y2 + a3*b1*b2*c1*d3*y2 + a1*b2*b3*c1*d3*y2 + a2*b2*b3*c1*d3*y2 + a3*b2*b3*c1*d3*y2 + b1*b2*b3*c1*d3*y2 + a1*c2*d3*y2 + b1*b2*c2*d3*y2 + a1*b1*b2*c2*d3*y2 + a2*b1*b2*c2*d3*y2 + a3*b1*b2*c2*d3*y2 + a1*b2*b3*c2*d3*y2 + b1*b2*b3*c2*d3*y2 + c1*c2*d3*y2 + b2*c1*c2*d3*y2 + a1*b2*c1*c2*d3*y2 + a2*b2*c1*c2*d3*y2 + a3*b2*c1*c2*d3*y2 + b1*b2*c1*c2*d3*y2 + a1*b3*c1*c2*d3*y2 + a2*b3*c1*c2*d3*y2 + a3*b3*c1*c2*d3*y2 + b1*b2*c3*d3*y2 + a1*b1*b2*c3*d3*y2 + a2*b1*b2*c3*d3*y2 + a3*b1*b2*c3*d3*y2 + a1*b2*b3*c3*d3*y2 + a1*b2*c1*c3*d3*y2 + a2*b2*c1*c3*d3*y2 + a3*b2*c1*c3*d3*y2 + b1*b2*c1*c3*d3*y2 + b2*b3*c1*c3*d3*y2 + b1*b2*b3*c1*c3*d3*y2 + a1*b3*c2*c3*d3*y2 + b1*b2*b3*c2*c3*d3*y2 + b3*c1*c2*c3*d3*y2 + a3*c2*x1*y2 + a3*b2*c2*x1*y2 + a2*b3*c2*x1*y2 + a3*b3*c2*x1*y2 + b2*b3*c2*x1*y2 + a3*b2*c1*c2*x1*y2 + b3*c1*c2*x1*y2 + a2*b3*c1*c2*x1*y2 + a3*b3*c1*c2*x1*y2 + b2*b3*c1*c2*x1*y2 + a2*c3*x1*y2 + a3*c3*x1*y2 + b2*c3*x1*y2 + a2*b2*c3*x1*y2 + a3*b2*c3*x1*y2 + a2*b3*c3*x1*y2 + c1*c3*x1*y2 + b2*c1*c3*x1*y2 + a2*b2*c1*c3*x1*y2 + a3*b2*c1*c3*x1*y2 + a2*b3*c1*c3*x1*y2 + c2*c3*x1*y2 + b2*b3*c2*c3*x1*y2 + c1*c2*c3*x1*y2 + b3*c1*c2*c3*x1*y2 + b2*b3*c1*c2*c3*x1*y2 + a3*c2*y1*y2 + b3*c2*y1*y2 + a3*b2*c1*c2*y1*y2 + b3*c1*c2*y1*y2 + a2*b3*c1*c2*y1*y2 + a3*b3*c1*c2*y1*y2 + b2*b3*c1*c2*y1*y2 + c3*y1*y2 + a2*c3*y1*y2 + a3*c3*y1*y2 + c1*c3*y1*y2 + b2*c1*c3*y1*y2 + a2*b2*c1*c3*y1*y2 + a3*b2*c1*c3*y1*y2 + a2*b3*c1*c3*y1*y2 + b3*c2*c3*y1*y2 + c1*c2*c3*y1*y2 + b3*c1*c2*c3*y1*y2 + b2*b3*c1*c2*c3*y1*y2 + a2*b1*y3 + a1*a2*b1*y3 + a1*a2*b2*y3 + a1*a2*b3*y3 + a2*c1*y3 + a1*a2*c1*y3 + a2*b1*c1*y3 + a2*b2*c1*y3 + a3*b1*b2*c1*y3 + a2*b3*c1*y3 + a3*b2*b3*c1*y3 + a1*c2*y3 + a1*a2*c2*y3 + a2*b1*c2*y3 + a3*b1*b2*c2*y3 + a1*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + c1*c2*y3 + a2*c1*c2*y3 + b1*c1*c2*y3 + a2*b1*c1*c2*y3 + a3*b1*c1*c2*y3 + b2*c1*c2*y3 + a1*b2*c1*c2*y3 + a2*b2*c1*c2*y3 + a3*b2*c1*c2*y3 + a1*b1*b2*c1*c2*y3 + a2*b1*b2*c1*c2*y3 + a3*b1*b2*c1*c2*y3 + b3*c1*c2*y3 + a2*b3*c1*c2*y3 + a3*b3*c1*c2*y3 + b1*b3*c1*c2*y3 + a1*b1*b3*c1*c2*y3 + a2*b1*b3*c1*c2*y3 + a3*b1*b3*c1*c2*y3 + b1*b2*b3*c1*c2*y3 + a1*b2*c3*y3 + b1*b2*c3*y3 + a1*a2*b1*b2*c3*y3 + a3*b1*b2*c3*y3 + a1*a3*b1*b2*c3*y3 + a2*b1*b3*c3*y3 + a1*a2*b1*b3*c3*y3 + a1*a3*b2*b3*c3*y3 + b2*c1*c3*y3 + a1*a2*b2*c1*c3*y3 + a3*b2*c1*c3*y3 + a1*a3*b2*c1*c3*y3 + a1*b1*b2*c1*c3*y3 + a2*b3*c1*c3*y3 + a1*a2*b3*c1*c3*y3 + a2*b1*b3*c1*c3*y3 + a1*b2*b3*c1*c3*y3 + a2*b2*b3*c1*c3*y3 + b1*b2*b3*c1*c3*y3 + a3*b1*b2*b3*c1*c3*y3 + a1*c2*c3*y3 + a1*a2*b2*c2*c3*y3 + a1*a3*b2*c2*c3*y3 + a1*b3*c2*c3*y3 + a1*a2*b3*c2*c3*y3 + a2*b1*b3*c2*c3*y3 + b1*b2*b3*c2*c3*y3 + a1*b1*b2*b3*c2*c3*y3 + a3*b1*b2*b3*c2*c3*y3 + c1*c2*c3*y3 + b1*c1*c2*c3*y3 + a2*b2*c1*c2*c3*y3 + a3*b2*c1*c2*c3*y3 + b1*b2*c1*c2*c3*y3 + a1*b3*c1*c2*c3*y3 + a2*b3*c1*c2*c3*y3 + b1*b3*c1*c2*c3*y3 + b2*b3*c1*c2*c3*y3 + a1*b2*b3*c1*c2*c3*y3 + b1*b2*b3*c1*c2*c3*y3 + a2*b1*d1*y3 + a2*c1*d1*y3 + b1*c2*d1*y3 + b1*b2*c2*d1*y3 + a2*b1*b2*c2*d1*y3 + a3*b1*b2*c2*d1*y3 + b1*b3*c2*d1*y3 + a2*b1*b3*c2*d1*y3 + a3*b1*b3*c2*d1*y3 + b1*b2*b3*c2*d1*y3 + c1*c2*d1*y3 + b2*c1*c2*d1*y3 + a2*b2*c1*c2*d1*y3 + a3*b2*c1*c2*d1*y3 + b3*c1*c2*d1*y3 + a2*b3*c1*c2*d1*y3 + a3*b3*c1*c2*d1*y3 + b2*b3*c1*c2*d1*y3 + b1*b2*c3*d1*y3 + a2*b1*b2*c3*d1*y3 + a3*b1*b2*c3*d1*y3 + a2*b1*b3*c3*d1*y3 + b2*c1*c3*d1*y3 + a2*b2*c1*c3*d1*y3 + a3*b2*c1*c3*d1*y3 + a2*b3*c1*c3*d1*y3 + b1*b3*c2*c3*d1*y3 + b1*b2*b3*c2*c3*d1*y3 + b3*c1*c2*c3*d1*y3 + b2*b3*c1*c2*c3*d1*y3 + a1*b1*d2*y3 + a2*b1*d2*y3 + c1*d2*y3 + a1*c1*d2*y3 + a2*c1*d2*y3 + b1*c1*d2*y3 + b1*b2*c1*d2*y3 + a1*b1*b2*c1*d2*y3 + a2*b1*b2*c1*d2*y3 + a3*b1*b2*c1*d2*y3 + b1*b3*c1*d2*y3 + a1*b1*b3*c1*d2*y3 + a2*b1*b3*c1*d2*y3 + a3*b1*b3*c1*d2*y3 + b1*c2*d2*y3 + b1*b2*c2*d2*y3 + a1*b1*b2*c2*d2*y3 + a2*b1*b2*c2*d2*y3 + a3*b1*b2*c2*d2*y3 + b1*b3*c2*d2*y3 + a1*b1*b3*c2*d2*y3 + a2*b1*b3*c2*d2*y3 + a3*b1*b3*c2*d2*y3 + b1*b2*b3*c2*d2*y3 + c1*c2*d2*y3 + a1*b2*c1*c2*d2*y3 + a2*b2*c1*c2*d2*y3 + a3*b2*c1*c2*d2*y3 + b1*b2*c1*c2*d2*y3 + a1*b3*c1*c2*d2*y3 + a2*b3*c1*c2*d2*y3 + a3*b3*c1*c2*d2*y3 + b2*b3*c1*c2*d2*y3 + b1*b2*b3*c1*c2*d2*y3 + b1*b2*c3*d2*y3 + a1*b1*b2*c3*d2*y3 + a2*b1*b2*c3*d2*y3 + a3*b1*b2*c3*d2*y3 + a1*b1*b3*c3*d2*y3 + a2*b1*b3*c3*d2*y3 + a1*b2*c1*c3*d2*y3 + a2*b2*c1*c3*d2*y3 + a3*b2*c1*c3*d2*y3 + b1*b2*c1*c3*d2*y3 + b3*c1*c3*d2*y3 + a1*b3*c1*c3*d2*y3 + a2*b3*c1*c3*d2*y3 + b1*b3*c1*c3*d2*y3 + b1*b3*c2*c3*d2*y3 + b1*b2*b3*c2*c3*d2*y3 + b3*c1*c2*c3*d2*y3 + b2*b3*c1*c2*c3*d2*y3 + a1*b2*d3*y3 + b2*c1*d3*y3 + a1*b1*b2*c1*d3*y3 + a2*b1*b2*c1*d3*y3 + a3*b1*b2*c1*d3*y3 + a1*b2*b3*c1*d3*y3 + a2*b2*b3*c1*d3*y3 + a3*b2*b3*c1*d3*y3 + b1*b2*b3*c1*d3*y3 + a1*c2*d3*y3 + b1*b2*c2*d3*y3 + a1*b1*b2*c2*d3*y3 + a2*b1*b2*c2*d3*y3 + a3*b1*b2*c2*d3*y3 + a1*b2*b3*c2*d3*y3 + b1*b2*b3*c2*d3*y3 + c1*c2*d3*y3 + b2*c1*c2*d3*y3 + a1*b2*c1*c2*d3*y3 + a2*b2*c1*c2*d3*y3 + a3*b2*c1*c2*d3*y3 + b1*b2*c1*c2*d3*y3 + a1*b3*c1*c2*d3*y3 + a2*b3*c1*c2*d3*y3 + a3*b3*c1*c2*d3*y3 + b1*b2*c3*d3*y3 + a1*b1*b2*c3*d3*y3 + a2*b1*b2*c3*d3*y3 + a3*b1*b2*c3*d3*y3 + a1*b2*b3*c3*d3*y3 + a1*b2*c1*c3*d3*y3 + a2*b2*c1*c3*d3*y3 + a3*b2*c1*c3*d3*y3 + b1*b2*c1*c3*d3*y3 + b2*b3*c1*c3*d3*y3 + b1*b2*b3*c1*c3*d3*y3 + a1*b3*c2*c3*d3*y3 + b1*b2*b3*c2*c3*d3*y3 + b3*c1*c2*c3*d3*y3 + a2*x1*y3 + a2*c1*x1*y3 + c2*x1*y3 + a3*c2*x1*y3 + b2*c2*x1*y3 + c1*c2*x1*y3 + b2*c1*c2*x1*y3 + a2*c3*x1*y3 + b2*c3*x1*y3 + a2*b2*c3*x1*y3 + a3*b2*c3*x1*y3 + a2*b3*c3*x1*y3 + b2*c1*c3*x1*y3 + a2*b2*c1*c3*x1*y3 + a3*b2*c1*c3*x1*y3 + a2*b3*c1*c3*x1*y3 + b2*c2*c3*x1*y3 + a2*b2*c2*c3*x1*y3 + a3*b2*c2*c3*x1*y3 + b3*c2*c3*x1*y3 + a2*b3*c2*c3*x1*y3 + a2*b2*c1*c2*c3*x1*y3 + a3*b2*c1*c2*c3*x1*y3 + a2*b3*c1*c2*c3*x1*y3 + a3*b3*c1*c2*c3*x1*y3 + a2*c1*y1*y3 + a3*c2*y1*y3 + c1*c2*y1*y3 + b2*c1*c2*y1*y3 + a2*c3*y1*y3 + b2*c1*c3*y1*y3 + a2*b2*c1*c3*y1*y3 + a3*b2*c1*c3*y1*y3 + a2*b3*c1*c3*y1*y3 + b2*c2*c3*y1*y3 + b3*c2*c3*y1*y3 + a3*b3*c2*c3*y1*y3 + a2*b2*c1*c2*c3*y1*y3 + a3*b2*c1*c2*c3*y1*y3 + a2*b3*c1*c2*c3*y1*y3 + a3*b3*c1*c2*c3*y1*y3;
end;
#####################################################################
#####################################################################
#Space Group No. 128 ( P4/mnc)
#####################################################################
Aiin128:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin128:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin128:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Bdeltain128:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bcxyin128:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a2*b1 + a1*b2 + a2*b1*b2 + a2*c1 + a1*b2*c1 + a2*d1 + b1*b2*d1 + a1*d2 + b1*b2*d2 + a2*x1 + b2*x1 + b2*c1*x1 + d2*x1 + a2*y1 + b2*c1*y1 + d2*y1;
end;
#####################################################################
Bcxyzin128:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a2*b1 + a1*b2 + a2*b1*b2 + a2*c1 + a2*b2*c1 + a2*x1 + b2*x1 + b2*c1*x1 + a2*y1 + b2*c1*y1 + b2*z1;
end;
#####################################################################
C1GAPin128:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3,d1,d2,d3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];d1:=g1[7];d2:=g2[7];d3:=g3[7];
return a1*a3*b1*b2 + a1*a2*b1*b3 + a1*b2*b3 + a1*a3*b2*b3 + a1*a2*b3*c1 + a1*b3*c2 + a1*a2*b3*c2 + a3*b1*b3*c2 + a1*b2*b3*c2 + a1*a2*b2*b3*c2 + a1*a3*b2*b3*c2 + a3*c1*c2 + a3*b2*c1*c2 + a1*a3*b2*c1*c2 + a3*b1*b2*c1*c2 + a2*b3*c1*c2 + a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + b2*b3*c1*c2 + a1*b2*b3*c1*c2 + a2*b2*b3*c1*c2 + a3*b2*b3*c1*c2 + a1*b1*b2*c3 + a2*b1*b2*c3 + a3*b1*b2*c3 + a1*b2*b3*c3 + a3*b1*b2*d1 + a2*b1*b3*d1 + a1*a2*b1*b3*d1 + a1*a3*b2*b3*d1 + a3*b2*c1*d1 + a2*b3*c1*d1 + a1*a2*b3*c1*d1 + a1*b2*b3*c1*d1 + a1*a3*b3*c2*d1 + b1*b3*c2*d1 + a2*b1*b3*c2*d1 + a3*b1*b2*c1*c2*d1 + b3*c1*c2*d1 + b1*b3*c1*c2*d1 + a2*b1*b3*c1*c2*d1 + a3*b1*b3*c1*c2*d1 + a2*b2*b3*c1*c2*d1 + a1*a3*d2 + a1*a3*b2*d2 + a3*b1*b3*d2 + a1*a3*b1*b3*d2 + a1*b2*b3*d2 + a1*a3*b2*b3*d2 + a3*b2*c1*d2 + a3*b1*b2*c1*d2 + a1*a3*b1*b2*c1*d2 + a2*b3*c1*d2 + a1*a3*b3*c1*d2 + b1*b3*c1*d2 + a2*b2*b3*c1*d2 + a1*a3*b2*b3*c1*d2 + a1*a3*c2*d2 + a3*b1*c2*d2 + a1*a3*b1*c2*d2 + a3*b1*b2*c2*d2 + a1*b3*c2*d2 + a1*a3*b3*c2*d2 + b1*b3*c2*d2 + a2*b1*b3*c2*d2 + a1*b2*b3*c2*d2 + a1*a3*b1*c1*c2*d2 + a1*a3*b2*c1*c2*d2 + a1*b3*c1*c2*d2 + a2*b3*c1*c2*d2 + a1*a3*b3*c1*c2*d2 + b1*b3*c1*c2*d2 + a1*b1*b3*c1*c2*d2 + a2*b1*b3*c1*c2*d2 + a3*b1*b3*c1*c2*d2 + b2*b3*c1*c2*d2 + a1*b2*b3*c1*c2*d2 + a2*b2*b3*c1*c2*d2 + c3*d1*d2 + a1*b2*d3 + a1*a3*b2*d3 + a1*b1*b2*d3 + a2*b1*b2*d3 + a1*a2*b1*b2*d3 + a1*b2*b3*d3 + a1*a2*c1*d3 + a1*a2*b1*c1*d3 + a1*b2*c1*d3 + a1*a2*b2*c1*d3 + a3*b1*b2*c1*d3 + a1*a3*b1*b2*c1*d3 + a2*b1*b3*c1*d3 + a2*b2*b3*c1*d3 + a1*a3*b2*b3*c1*d3 + a1*c2*d3 + a1*a3*c2*d3 + a1*b1*c2*d3 + a2*b1*c2*d3 + a3*b1*c2*d3 + a1*a3*b1*c2*d3 + a1*b2*c2*d3 + a1*b1*b2*c2*d3 + a2*b1*b2*c2*d3 + a3*b1*b2*c2*d3 + a1*b3*c2*d3 + a1*b2*b3*c2*d3 + a1*a3*b1*c1*c2*d3 + a1*b2*c1*c2*d3 + a1*a3*b2*c1*c2*d3 + b1*b2*c1*c2*d3 + a2*b1*b2*c1*c2*d3 + a1*b3*c1*c2*d3 + a1*a3*b3*c1*c2*d3 + b1*b3*c1*c2*d3 + a1*b1*b3*c1*c2*d3 + a2*b1*b3*c1*c2*d3 + a3*b1*b3*c1*c2*d3 + a1*b2*b3*c1*c2*d3 + a2*b2*b3*c1*c2*d3 + a3*b2*b3*c1*c2*d3 + a1*a3*b2*x1 + a3*b1*b2*x1 + a2*b3*x1 + b2*b3*x1 + a2*b2*b3*x1 + a3*b2*b3*x1 + a3*b1*b2*c1*x1 + a2*b3*c1*x1 + a2*b1*b3*c1*x1 + b2*b3*c1*x1 + a2*b2*b3*c1*x1 + a3*c2*x1 + a1*a3*c2*x1 + a1*b3*c2*x1 + b1*b3*c2*x1 + a1*b1*b3*c2*x1 + a3*b1*b3*c2*x1 + b2*b3*c2*x1 + a2*b2*b3*c2*x1 + a3*b2*b3*c2*x1 + b3*c1*c2*x1 + a1*b3*c1*c2*x1 + a2*b3*c1*c2*x1 + a3*b3*c1*c2*x1 + b1*b2*c3*x1 + b2*b3*c3*x1 + a3*b1*b2*d1*x1 + a2*b1*b3*d1*x1 + b2*b3*d1*x1 + a3*b2*b3*d1*x1 + a2*b1*b3*c1*d1*x1 + a3*b2*b3*c1*d1*x1 + a3*c2*d1*x1 + a3*b2*c2*d1*x1 + b3*c2*d1*x1 + a1*b3*c2*d1*x1 + a2*b3*c2*d1*x1 + b1*b3*c2*d1*x1 + a2*b1*b3*c2*d1*x1 + a3*c1*c2*d1*x1 + a3*b2*c1*c2*d1*x1 + b3*c1*c2*d1*x1 + a2*b3*c1*c2*d1*x1 + a3*b3*c1*c2*d1*x1 + b1*b3*c1*c2*d1*x1 + b2*b3*c1*c2*d1*x1 + a3*b2*d2*x1 + a1*a3*b2*d2*x1 + a3*b1*b2*d2*x1 + a2*b3*d2*x1 + a3*b3*d2*x1 + a2*b1*b3*d2*x1 + b2*b3*d2*x1 + a1*b2*b3*d2*x1 + a3*b2*b3*d2*x1 + a3*b2*c1*d2*x1 + a3*b1*b2*c1*d2*x1 + b3*c1*d2*x1 + b1*b3*c1*d2*x1 + a2*b1*b3*c1*d2*x1 + a1*b2*b3*c1*d2*x1 + a3*b2*b3*c1*d2*x1 + a1*a3*c2*d2*x1 + b3*c2*d2*x1 + a2*b3*c2*d2*x1 + b1*b3*c2*d2*x1 + a2*b1*b3*c2*d2*x1 + a1*b2*b3*c2*d2*x1 + a3*b1*c1*c2*d2*x1 + a3*b2*c1*c2*d2*x1 + b3*c1*c2*d2*x1 + a1*b3*c1*c2*d2*x1 + a2*b3*c1*c2*d2*x1 + a3*b3*c1*c2*d2*x1 + b2*b3*c1*c2*d2*x1 + a2*d3*x1 + a2*b1*d3*x1 + a1*a2*b1*d3*x1 + a2*b2*d3*x1 + a3*b2*d3*x1 + a1*a3*b2*d3*x1 + b1*b2*d3*x1 + a1*b1*b2*d3*x1 + a3*b1*b2*d3*x1 + a2*b3*d3*x1 + a2*b1*b3*d3*x1 + b2*b3*d3*x1 + a1*b2*b3*d3*x1 + a3*b2*b3*d3*x1 + a1*a2*c1*d3*x1 + a2*b2*c1*d3*x1 + a3*b2*c1*d3*x1 + a1*b1*b2*c1*d3*x1 + a2*b1*b2*c1*d3*x1 + a3*b1*b2*c1*d3*x1 + a2*b1*b3*c1*d3*x1 + b2*b3*c1*d3*x1 + a1*b2*b3*c1*d3*x1 + a3*b2*b3*c1*d3*x1 + a1*c2*d3*x1 + a2*c2*d3*x1 + a1*a3*c2*d3*x1 + a2*b1*c2*d3*x1 + a2*b1*b2*c2*d3*x1 + a2*b3*c2*d3*x1 + a2*b1*b3*c2*d3*x1 + b2*b3*c2*d3*x1 + a1*b2*b3*c2*d3*x1 + a2*b1*c1*c2*d3*x1 + a3*b1*c1*c2*d3*x1 + a2*b2*c1*c2*d3*x1 + a3*b2*c1*c2*d3*x1 + b1*b2*c1*c2*d3*x1 + b3*c1*c2*d3*x1 + a1*b3*c1*c2*d3*x1 + a2*b3*c1*c2*d3*x1 + a3*b3*c1*c2*d3*x1 + b2*b3*c1*c2*d3*x1 + a1*a3*x2 + a3*b1*x2 + a3*b1*b2*x2 + a1*b3*x2 + a1*a2*b3*x2 + a1*a3*b3*x2 + a3*b1*c1*x2 + a1*a3*b2*c1*x2 + a3*b1*b2*c1*x2 + b3*c1*x2 + a1*b3*c1*x2 + a2*b3*c1*x2 + a3*b3*c1*x2 + a1*b1*b3*c1*x2 + b2*b3*c1*x2 + a2*b2*b3*c1*x2 + a3*b2*b3*c1*x2 + a1*a3*c2*x2 + a1*b3*c2*x2 + a1*b1*b3*c2*x2 + a3*b1*b3*c2*x2 + a1*b2*b3*c2*x2 + a3*c1*c2*x2 + a1*a3*c1*c2*x2 + a3*b2*c1*c2*x2 + a1*b3*c1*c2*x2 + a2*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a1*b2*b3*c1*c2*x2 + b1*b2*c3*x2 + a3*d1*x2 + a3*b1*d1*x2 + a3*b2*d1*x2 + a1*a3*b2*d1*x2 + a3*b1*b2*d1*x2 + a1*b3*d1*x2 + a2*b3*d1*x2 + a3*b3*d1*x2 + b1*b3*d1*x2 + a2*b1*b3*d1*x2 + b2*b3*d1*x2 + a1*b2*b3*d1*x2 + a3*b2*b3*d1*x2 + a3*b1*c1*d1*x2 + b3*c1*d1*x2 + a3*b3*c1*d1*x2 + a3*b2*b3*c1*d1*x2 + a3*c2*d1*x2 + a1*a3*c2*d1*x2 + a3*b2*c2*d1*x2 + b3*c2*d1*x2 + a2*b3*c2*d1*x2 + a2*b1*b3*c2*d1*x2 + b2*b3*c2*d1*x2 + a1*b2*b3*c2*d1*x2 + a3*b2*c1*c2*d1*x2 + b3*c1*c2*d1*x2 + a2*b3*c1*c2*d1*x2 + a3*b3*c1*c2*d1*x2 + b1*b3*c1*c2*d1*x2 + b2*b3*c1*c2*d1*x2 + a3*b1*d2*x2 + a1*a3*b2*d2*x2 + a3*b1*b2*d2*x2 + a1*b3*d2*x2 + b1*b3*d2*x2 + a1*b1*b3*d2*x2 + a2*b1*b3*d2*x2 + a1*b2*b3*d2*x2 + a3*b1*c1*d2*x2 + b3*c1*d2*x2 + a3*b3*c1*d2*x2 + a1*b1*b3*c1*d2*x2 + a3*b2*b3*c1*d2*x2 + a1*a3*c2*d2*x2 + a2*b1*b3*c2*d2*x2 + a1*b2*b3*c2*d2*x2 + a3*b2*c1*c2*d2*x2 + b3*c1*c2*d2*x2 + a2*b3*c1*c2*d2*x2 + a3*b3*c1*c2*d2*x2 + b1*b3*c1*c2*d2*x2 + b2*b3*c1*c2*d2*x2 + a1*a2*b1*d3*x2 + a3*b1*d3*x2 + a1*b2*d3*x2 + a1*a3*b2*d3*x2 + a3*b1*b2*d3*x2 + a1*b3*d3*x2 + b1*b3*d3*x2 + a1*b1*b3*d3*x2 + a2*b1*b3*d3*x2 + a1*b2*b3*d3*x2 + a1*a2*c1*d3*x2 + a2*b1*c1*d3*x2 + a3*b1*c1*d3*x2 + a1*b2*c1*d3*x2 + a1*b1*b2*c1*d3*x2 + a2*b1*b2*c1*d3*x2 + b3*c1*d3*x2 + b1*b3*c1*d3*x2 + a1*b1*b3*c1*d3*x2 + b2*b3*c1*d3*x2 + a3*b2*b3*c1*d3*x2 + a1*c2*d3*x2 + a1*a3*c2*d3*x2 + a2*b1*c2*d3*x2 + a2*b1*b2*c2*d3*x2 + b1*b3*c2*d3*x2 + a2*b1*b3*c2*d3*x2 + a1*b2*b3*c2*d3*x2 + b1*c1*c2*d3*x2 + a2*b1*c1*c2*d3*x2 + a2*b2*c1*c2*d3*x2 + a3*b2*c1*c2*d3*x2 + a2*b3*c1*c2*d3*x2 + a3*b3*c1*c2*d3*x2 + b1*b3*c1*c2*d3*x2 + b2*b3*c1*c2*d3*x2 + b1*b3*c1*x1*x2 + b3*c1*c2*x1*x2 + b3*c1*d1*x1*x2 + b1*b3*c1*d1*x1*x2 + b3*c1*c2*d1*x1*x2 + b3*d2*x1*x2 + b3*c1*d2*x1*x2 + b3*c1*c2*d2*x1*x2 + b2*d3*x1*x2 + b3*d3*x1*x2 + a2*c1*d3*x1*x2 + b3*c1*d3*x1*x2 + b1*c1*c2*d3*x1*x2 + b2*c1*c2*d3*x1*x2 + b3*c1*c2*d3*x1*x2 + a1*a2*b1*x3 + a1*a2*b2*x3 + a3*b1*b2*x3 + a1*a2*b3*x3 + a2*c1*x3 + a1*a2*c1*x3 + a1*b2*c1*x3 + a1*a3*b2*c1*x3 + b1*b2*c1*x3 + a3*b1*b2*c1*x3 + a2*b1*b3*c1*x3 + a1*b2*b3*c1*x3 + a1*c2*x3 + a1*a3*c2*x3 + b1*c2*x3 + a1*b1*c2*x3 + a3*b1*c2*x3 + a1*b2*c2*x3 + b1*b2*c2*x3 + a1*b1*b2*c2*x3 + a2*b1*b2*c2*x3 + a3*b1*b2*c2*x3 + a3*b1*b3*c2*x3 + a1*b2*b3*c2*x3 + c1*c2*x3 + a2*c1*c2*x3 + a3*c1*c2*x3 + a1*a3*c1*c2*x3 + b1*c1*c2*x3 + a1*b1*c1*c2*x3 + a2*b2*c1*c2*x3 + a3*b2*c1*c2*x3 + b3*c1*c2*x3 + a1*b3*c1*c2*x3 + b1*b3*c1*c2*x3 + b2*b3*c1*c2*x3 + b1*b2*c3*x3 + a2*d1*x3 + a2*b1*d1*x3 + b2*d1*x3 + a1*a3*b2*d1*x3 + a2*b1*b2*d1*x3 + a3*b1*b2*d1*x3 + a2*b1*b3*d1*x3 + a1*b2*b3*d1*x3 + a3*b2*b3*d1*x3 + b2*c1*d1*x3 + a3*b2*c1*d1*x3 + b1*b2*c1*d1*x3 + a2*b3*c1*d1*x3 + a2*b1*b3*c1*d1*x3 + b2*b3*c1*d1*x3 + a3*b2*b3*c1*d1*x3 + a1*c2*d1*x3 + a3*c2*d1*x3 + a1*a3*c2*d1*x3 + a1*b1*c2*d1*x3 + a3*b1*c2*d1*x3 + b2*c2*d1*x3 + a3*b1*b2*c2*d1*x3 + a3*b3*c2*d1*x3 + a2*b1*b3*c2*d1*x3 + a3*b2*b3*c2*d1*x3 + a1*c1*c2*d1*x3 + a3*b2*c1*c2*d1*x3 + b3*c1*c2*d1*x3 + a2*b3*c1*c2*d1*x3 + a3*b3*c1*c2*d1*x3 + b1*b3*c1*c2*d1*x3 + b2*b3*c1*c2*d1*x3 + a2*b1*d2*x3 + a1*b2*d2*x3 + a1*a3*b2*d2*x3 + a1*b1*b2*d2*x3 + a2*b1*b2*d2*x3 + a3*b1*b2*d2*x3 + a1*b1*b3*d2*x3 + a2*b1*b3*d2*x3 + a1*b2*b3*d2*x3 + a1*c1*d2*x3 + b1*c1*d2*x3 + a1*b1*c1*d2*x3 + a3*b2*c1*d2*x3 + b1*b2*c1*d2*x3 + a1*b1*b2*c1*d2*x3 + a2*b3*c1*d2*x3 + a1*b1*b3*c1*d2*x3 + a2*b1*b3*c1*d2*x3 + a3*b2*b3*c1*d2*x3 + a1*a3*c2*d2*x3 + a1*b1*c2*d2*x3 + a3*b1*c2*d2*x3 + a3*b1*b2*c2*d2*x3 + a2*b1*b3*c2*d2*x3 + a1*b1*c1*c2*d2*x3 + b2*c1*c2*d2*x3 + a1*b2*c1*c2*d2*x3 + a3*b2*c1*c2*d2*x3 + a1*b3*c1*c2*d2*x3 + a2*b3*c1*c2*d2*x3 + a3*b3*c1*c2*d2*x3 + b1*b3*c1*c2*d2*x3 + b2*b3*c1*c2*d2*x3 + a1*a2*b1*d3*x3 + a1*b2*d3*x3 + a1*a3*b2*d3*x3 + a3*b1*b2*d3*x3 + a2*b1*b3*d3*x3 + a1*a2*c1*d3*x3 + a2*b1*c1*d3*x3 + a1*b2*c1*d3*x3 + a3*b2*c1*d3*x3 + a1*b1*b2*c1*d3*x3 + a2*b1*b2*c1*d3*x3 + b2*b3*c1*d3*x3 + a1*b2*b3*c1*d3*x3 + a2*b2*b3*c1*d3*x3 + a3*b2*b3*c1*d3*x3 + a1*c2*d3*x3 + a1*a3*c2*d3*x3 + b1*c2*d3*x3 + a2*b1*c2*d3*x3 + a3*b1*c2*d3*x3 + a1*b2*c2*d3*x3 + a1*b1*b2*c2*d3*x3 + a2*b1*b2*c2*d3*x3 + a3*b1*b2*c2*d3*x3 + a1*b1*b3*c2*d3*x3 + a1*b2*b3*c2*d3*x3 + a1*b1*c1*c2*d3*x3 + b2*c1*c2*d3*x3 + a2*b2*c1*c2*d3*x3 + a3*b2*c1*c2*d3*x3 + b1*b2*c1*c2*d3*x3 + a1*b3*c1*c2*d3*x3 + a2*b3*c1*c2*d3*x3 + a3*b3*c1*c2*d3*x3 + b1*b3*c1*c2*d3*x3 + b2*b3*c1*c2*d3*x3 + a2*c1*x1*x3 + b1*b2*c1*x1*x3 + b2*b3*c1*x1*x3 + a2*c2*x1*x3 + b3*c2*x1*x3 + b1*b3*c2*x1*x3 + b2*b3*c2*x1*x3 + b3*c1*c2*x1*x3 + b1*b2*c1*d1*x1*x3 + b2*b3*c1*d1*x1*x3 + b1*b3*c2*d1*x1*x3 + b2*b3*c2*d1*x1*x3 + b2*c1*c2*d1*x1*x3 + b3*c1*c2*d1*x1*x3 + b2*d2*x1*x3 + b3*d2*x1*x3 + a1*c1*d2*x1*x3 + b1*c1*d2*x1*x3 + b1*b3*c1*d2*x1*x3 + b2*b3*c1*d2*x1*x3 + a1*c2*d2*x1*x3 + b1*b3*c2*d2*x1*x3 + b2*b3*c2*d2*x1*x3 + b1*c1*c2*d2*x1*x3 + b2*c1*c2*d2*x1*x3 + b3*c1*c2*d2*x1*x3 + b2*d3*x1*x3 + a2*c1*d3*x1*x3 + a2*c2*d3*x1*x3 + b1*c2*d3*x1*x3 + b2*c2*d3*x1*x3 + b1*c1*c2*d3*x1*x3 + b3*c1*c2*d3*x1*x3 + b1*c1*x2*x3 + b2*c1*x2*x3 + b1*b3*c1*x2*x3 + b2*b3*c1*x2*x3 + b1*b3*c2*x2*x3 + c1*c2*x2*x3 + a1*c1*c2*x2*x3 + b2*c1*c2*x2*x3 + b1*c1*d1*x2*x3 + b2*c1*d1*x2*x3 + b1*b3*c1*d1*x2*x3 + b2*b3*c1*d1*x2*x3 + a1*c2*d1*x2*x3 + b1*b3*c2*d1*x2*x3 + b2*b3*c2*d1*x2*x3 + b2*c1*c2*d1*x2*x3 + b1*c1*d2*x2*x3 + b2*c1*d2*x2*x3 + b1*b3*c1*d2*x2*x3 + b2*b3*c1*d2*x2*x3 + a1*c2*d2*x2*x3 + b1*b3*c2*d2*x2*x3 + b2*c1*c2*d2*x2*x3 + b3*c1*d3*x2*x3 + b1*c2*d3*x2*x3 + a3*b2*y1 + a1*a3*b2*y1 + a2*b3*y1 + a2*b1*b3*y1 + a1*b2*b3*y1 + a2*b2*b3*y1 + a3*b2*c1*y1 + a3*b1*b2*c1*y1 + a2*b1*b3*c1*y1 + b2*b3*c1*y1 + a2*b2*b3*c1*y1 + a1*a3*c2*y1 + a3*b1*c2*y1 + a3*b2*c2*y1 + a3*b3*c2*y1 + a1*b1*b3*c2*y1 + a3*b1*b3*c2*y1 + a2*b2*b3*c2*y1 + a3*b2*b3*c2*y1 + a3*c1*c2*y1 + a1*b3*c1*c2*y1 + a2*b3*c1*c2*y1 + a3*b3*c1*c2*y1 + b2*b3*c1*c2*y1 + b1*b2*c3*y1 + b2*b3*c3*y1 + a2*b3*c1*d1*y1 + a2*b1*b3*c1*d1*y1 + b2*b3*c1*d1*y1 + a3*b2*b3*c1*d1*y1 + a3*b1*c2*d1*y1 + a1*b3*c2*d1*y1 + a2*b3*c2*d1*y1 + a3*b3*c2*d1*y1 + b1*b3*c2*d1*y1 + a2*b1*b3*c2*d1*y1 + a3*c1*c2*d1*y1 + a3*b2*c1*c2*d1*y1 + a2*b3*c1*c2*d1*y1 + a3*b3*c1*c2*d1*y1 + b1*b3*c1*c2*d1*y1 + b2*b3*c1*c2*d1*y1 + a3*b2*d2*y1 + a1*a3*b2*d2*y1 + a3*b2*c1*d2*y1 + a3*b1*b2*c1*d2*y1 + a2*b3*c1*d2*y1 + b1*b3*c1*d2*y1 + a2*b1*b3*c1*d2*y1 + b2*b3*c1*d2*y1 + a1*b2*b3*c1*d2*y1 + a3*b2*b3*c1*d2*y1 + a1*a3*c2*d2*y1 + a3*b1*c2*d2*y1 + a3*b2*c2*d2*y1 + a1*b3*c2*d2*y1 + a2*b3*c2*d2*y1 + a3*b3*c2*d2*y1 + b1*b3*c2*d2*y1 + a2*b1*b3*c2*d2*y1 + a1*b2*b3*c2*d2*y1 + a3*b1*c1*c2*d2*y1 + a3*b2*c1*c2*d2*y1 + a1*b3*c1*c2*d2*y1 + a2*b3*c1*c2*d2*y1 + a3*b3*c1*c2*d2*y1 + b2*b3*c1*c2*d2*y1 + a2*d3*y1 + a1*a2*b1*d3*y1 + a3*b2*d3*y1 + a1*a3*b2*d3*y1 + a1*a2*c1*d3*y1 + a2*b1*c1*d3*y1 + b2*c1*d3*y1 + a1*b2*c1*d3*y1 + a2*b2*c1*d3*y1 + a3*b2*c1*d3*y1 + a1*b1*b2*c1*d3*y1 + a2*b1*b2*c1*d3*y1 + a3*b1*b2*c1*d3*y1 + a2*b3*c1*d3*y1 + a2*b1*b3*c1*d3*y1 + a1*b2*b3*c1*d3*y1 + a3*b2*b3*c1*d3*y1 + a1*c2*d3*y1 + a2*c2*d3*y1 + a1*a3*c2*d3*y1 + b1*c2*d3*y1 + a2*b1*c2*d3*y1 + a3*b1*c2*d3*y1 + b2*c2*d3*y1 + a3*b2*c2*d3*y1 + a2*b1*b2*c2*d3*y1 + a1*b3*c2*d3*y1 + a2*b3*c2*d3*y1 + a3*b3*c2*d3*y1 + a2*b1*b3*c2*d3*y1 + b2*b3*c2*d3*y1 + a1*b2*b3*c2*d3*y1 + a2*b1*c1*c2*d3*y1 + a3*b1*c1*c2*d3*y1 + b2*c1*c2*d3*y1 + a2*b2*c1*c2*d3*y1 + a3*b2*c1*c2*d3*y1 + a1*b3*c1*c2*d3*y1 + a2*b3*c1*c2*d3*y1 + a3*b3*c1*c2*d3*y1 + b2*b3*c1*c2*d3*y1 + b3*c2*x1*y1 + b3*c2*d1*x1*y1 + b3*c2*d2*x1*y1 + a2*d3*x1*y1 + b2*c1*d3*x1*y1 + b1*c2*d3*x1*y1 + b2*c2*d3*x1*y1 + b3*c2*d3*x1*y1 + b1*b3*c1*x2*y1 + b3*c2*x2*y1 + b3*c1*c2*x2*y1 + b1*b3*c1*d1*x2*y1 + b3*c2*d1*x2*y1 + b3*c1*c2*d1*x2*y1 + b3*c2*d2*x2*y1 + b3*c1*c2*d2*x2*y1 + a2*d3*x2*y1 + a2*c1*d3*x2*y1 + b1*c2*d3*x2*y1 + b2*c2*d3*x2*y1 + b3*c2*d3*x2*y1 + b1*c1*c2*d3*x2*y1 + b2*c1*c2*d3*x2*y1 + b3*c1*c2*d3*x2*y1 + a2*x3*y1 + a2*c1*x3*y1 + b2*c1*x3*y1 + b1*b2*c1*x3*y1 + b2*b3*c1*x3*y1 + a2*c2*x3*y1 + b1*c2*x3*y1 + b2*c2*x3*y1 + b1*b3*c2*x3*y1 + b2*b3*c2*x3*y1 + b3*c1*c2*x3*y1 + b2*c1*d1*x3*y1 + b1*b2*c1*d1*x3*y1 + b2*b3*c1*d1*x3*y1 + b1*c2*d1*x3*y1 + b2*c2*d1*x3*y1 + b1*b3*c2*d1*x3*y1 + b2*b3*c2*d1*x3*y1 + b2*c1*c2*d1*x3*y1 + b3*c1*c2*d1*x3*y1 + a1*d2*x3*y1 + a1*c1*d2*x3*y1 + b1*c1*d2*x3*y1 + b2*c1*d2*x3*y1 + b1*b3*c1*d2*x3*y1 + b2*b3*c1*d2*x3*y1 + a1*c2*d2*x3*y1 + b1*c2*d2*x3*y1 + b2*c2*d2*x3*y1 + b1*b3*c2*d2*x3*y1 + b2*b3*c2*d2*x3*y1 + b1*c1*c2*d2*x3*y1 + b2*c1*c2*d2*x3*y1 + b3*c1*c2*d2*x3*y1 + a2*d3*x3*y1 + a2*c1*d3*x3*y1 + a2*c2*d3*x3*y1 + b1*c1*c2*d3*x3*y1 + b3*c1*c2*d3*x3*y1 + a1*a3*y2 + a1*a2*b3*y2 + a1*a3*b3*y2 + a2*b1*b3*y2 + a1*b2*b3*y2 + a3*b1*c1*y2 + a1*a3*b2*c1*y2 + a3*b1*b2*c1*y2 + a3*b3*c1*y2 + a1*b1*b3*c1*y2 + a1*b2*b3*c1*y2 + a2*b2*b3*c1*y2 + a3*b2*b3*c1*y2 + a1*a3*c2*y2 + a3*b1*c2*y2 + a1*b1*b3*c2*y2 + a3*b1*b3*c2*y2 + a1*b2*b3*c2*y2 + a3*c1*c2*y2 + a1*a3*c1*c2*y2 + a3*b2*c1*c2*y2 + a2*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a1*b2*b3*c1*c2*y2 + b1*b2*c3*y2 + a1*a3*b2*d1*y2 + a3*b1*c1*d1*y2 + b3*c1*d1*y2 + a2*b3*c1*d1*y2 + a3*b3*c1*d1*y2 + b2*b3*c1*d1*y2 + a3*b2*b3*c1*d1*y2 + a1*a3*c2*d1*y2 + a3*b1*c2*d1*y2 + a1*b3*c2*d1*y2 + a2*b3*c2*d1*y2 + a3*b3*c2*d1*y2 + b1*b3*c2*d1*y2 + a2*b1*b3*c2*d1*y2 + a1*b2*b3*c2*d1*y2 + a3*b2*c1*c2*d1*y2 + a2*b3*c1*c2*d1*y2 + a3*b3*c1*c2*d1*y2 + b1*b3*c1*c2*d1*y2 + b2*b3*c1*c2*d1*y2 + a1*a3*b2*d2*y2 + a1*b1*b3*d2*y2 + a3*b1*c1*d2*y2 + b3*c1*d2*y2 + a1*b3*c1*d2*y2 + a2*b3*c1*d2*y2 + a3*b3*c1*d2*y2 + a1*b1*b3*c1*d2*y2 + b2*b3*c1*d2*y2 + a3*b2*b3*c1*d2*y2 + a1*a3*c2*d2*y2 + a3*b1*c2*d2*y2 + a1*b3*c2*d2*y2 + b1*b3*c2*d2*y2 + a2*b1*b3*c2*d2*y2 + a1*b2*b3*c2*d2*y2 + a3*b2*c1*c2*d2*y2 + a2*b3*c1*c2*d2*y2 + a3*b3*c1*c2*d2*y2 + b1*b3*c1*c2*d2*y2 + b2*b3*c1*c2*d2*y2 + a1*a2*b1*d3*y2 + a1*a3*b2*d3*y2 + a1*b1*b2*d3*y2 + a1*b1*b3*d3*y2 + a1*a2*c1*d3*y2 + b1*c1*d3*y2 + a1*b1*c1*d3*y2 + a3*b1*c1*d3*y2 + a1*b2*c1*d3*y2 + a1*b1*b2*c1*d3*y2 + a2*b1*b2*c1*d3*y2 + a1*b3*c1*d3*y2 + a2*b3*c1*d3*y2 + b1*b3*c1*d3*y2 + a1*b1*b3*c1*d3*y2 + a3*b2*b3*c1*d3*y2 + a1*c2*d3*y2 + a1*a3*c2*d3*y2 + b1*c2*d3*y2 + a2*b1*c2*d3*y2 + a3*b1*c2*d3*y2 + a2*b1*b2*c2*d3*y2 + a1*b3*c2*d3*y2 + a2*b1*b3*c2*d3*y2 + a1*b2*b3*c2*d3*y2 + b1*c1*c2*d3*y2 + a2*b1*c1*c2*d3*y2 + b2*c1*c2*d3*y2 + a2*b2*c1*c2*d3*y2 + a3*b2*c1*c2*d3*y2 + b1*b2*c1*c2*d3*y2 + b3*c1*c2*d3*y2 + a2*b3*c1*c2*d3*y2 + a3*b3*c1*c2*d3*y2 + b1*b3*c1*c2*d3*y2 + b2*b3*c1*c2*d3*y2 + b1*b3*c1*x1*y2 + b3*c2*x1*y2 + b3*c1*c2*x1*y2 + b3*c1*d1*x1*y2 + b1*b3*c1*d1*x1*y2 + b3*c2*d1*x1*y2 + b3*c1*c2*d1*x1*y2 + b3*d2*x1*y2 + b3*c1*d2*x1*y2 + b3*c2*d2*x1*y2 + b3*c1*c2*d2*x1*y2 + a2*d3*x1*y2 + b2*d3*x1*y2 + b3*d3*x1*y2 + a2*c1*d3*x1*y2 + b2*c1*d3*x1*y2 + b3*c1*d3*x1*y2 + b1*c2*d3*x1*y2 + b2*c2*d3*x1*y2 + b3*c2*d3*x1*y2 + b1*c1*c2*d3*x1*y2 + b2*c1*c2*d3*x1*y2 + b3*c1*c2*d3*x1*y2 + b3*c1*d1*x2*y2 + b3*c2*d1*x2*y2 + b3*c1*d2*x2*y2 + b3*c1*d3*x2*y2 + b1*c2*d3*x2*y2 + a1*c1*x3*y2 + b1*c1*x3*y2 + b1*b3*c1*x3*y2 + b2*b3*c1*x3*y2 + b1*c2*x3*y2 + b1*b3*c2*x3*y2 + a1*c1*c2*x3*y2 + b2*c1*c2*x3*y2 + a1*d1*x3*y2 + b1*c1*d1*x3*y2 + b1*b3*c1*d1*x3*y2 + b2*b3*c1*d1*x3*y2 + a1*c2*d1*x3*y2 + b1*c2*d1*x3*y2 + b2*c2*d1*x3*y2 + b1*b3*c2*d1*x3*y2 + b2*b3*c2*d1*x3*y2 + b2*c1*c2*d1*x3*y2 + a1*d2*x3*y2 + b1*c1*d2*x3*y2 + b1*b3*c1*d2*x3*y2 + b2*b3*c1*d2*x3*y2 + a1*c2*d2*x3*y2 + b1*c2*d2*x3*y2 + b1*b3*c2*d2*x3*y2 + b2*c1*c2*d2*x3*y2 + b3*c1*d3*x3*y2 + b1*b3*c1*y1*y2 + b3*c1*c2*y1*y2 + b1*b3*c1*d1*y1*y2 + b3*c1*c2*d1*y1*y2 + b3*c1*c2*d2*y1*y2 + a2*c1*d3*y1*y2 + b2*c1*d3*y1*y2 + b1*c1*c2*d3*y1*y2 + b2*c1*c2*d3*y1*y2 + b3*c1*c2*d3*y1*y2 + a1*a2*b1*y3 + a1*a2*b2*y3 + a1*b1*b2*y3 + a1*a2*b3*y3 + a2*b1*b3*y3 + a1*b2*b3*y3 + a1*a2*c1*y3 + a1*b2*c1*y3 + a1*a3*b2*c1*y3 + a3*b1*b2*c1*y3 + a2*b1*b3*c1*y3 + a1*a3*c2*y3 + a2*b1*c2*y3 + b1*b2*c2*y3 + a1*b1*b2*c2*y3 + a2*b1*b2*c2*y3 + a3*b1*b2*c2*y3 + a3*b1*b3*c2*y3 + a1*b2*b3*c2*y3 + a1*c1*c2*y3 + a3*c1*c2*y3 + a1*a3*c1*c2*y3 + b1*c1*c2*y3 + a1*b1*c1*c2*y3 + a2*b2*c1*c2*y3 + a3*b2*c1*c2*y3 + b1*b2*c1*c2*y3 + b3*c1*c2*y3 + b1*b3*c1*c2*y3 + b2*b3*c1*c2*y3 + b1*b2*c3*y3 + a2*b1*d1*y3 + b2*d1*y3 + a1*a3*b2*d1*y3 + a2*c1*d1*y3 + a2*b1*c1*d1*y3 + b2*c1*d1*y3 + a2*b2*c1*d1*y3 + a3*b2*c1*d1*y3 + b1*b2*c1*d1*y3 + a2*b1*b3*c1*d1*y3 + a3*b2*b3*c1*d1*y3 + a1*c2*d1*y3 + a1*a3*c2*d1*y3 + a1*b1*c2*d1*y3 + a3*b2*c2*d1*y3 + a3*b1*b2*c2*d1*y3 + a1*b3*c2*d1*y3 + b1*b3*c2*d1*y3 + a2*b1*b3*c2*d1*y3 + a3*b2*b3*c2*d1*y3 + c1*c2*d1*y3 + a1*c1*c2*d1*y3 + a3*b2*c1*c2*d1*y3 + b3*c1*c2*d1*y3 + a2*b3*c1*c2*d1*y3 + a3*b3*c1*c2*d1*y3 + b1*b3*c1*c2*d1*y3 + b2*b3*c1*c2*d1*y3 + a2*b1*d2*y3 + a1*a3*b2*d2*y3 + a1*b1*b2*d2*y3 + a1*b1*b3*d2*y3 + a2*c1*d2*y3 + b1*c1*d2*y3 + a2*b1*c1*d2*y3 + a1*b2*c1*d2*y3 + a2*b2*c1*d2*y3 + a3*b2*c1*d2*y3 + b1*b2*c1*d2*y3 + a1*b1*b2*c1*d2*y3 + a1*b3*c1*d2*y3 + a1*b1*b3*c1*d2*y3 + a2*b1*b3*c1*d2*y3 + a3*b2*b3*c1*d2*y3 + a1*c2*d2*y3 + a1*a3*c2*d2*y3 + a1*b1*c2*d2*y3 + a3*b1*b2*c2*d2*y3 + a1*b3*c2*d2*y3 + b1*b3*c2*d2*y3 + a2*b1*b3*c2*d2*y3 + a1*b1*c1*c2*d2*y3 + a1*b2*c1*c2*d2*y3 + a3*b2*c1*c2*d2*y3 + b3*c1*c2*d2*y3 + a1*b3*c1*c2*d2*y3 + a2*b3*c1*c2*d2*y3 + a3*b3*c1*c2*d2*y3 + b1*b3*c1*c2*d2*y3 + b2*b3*c1*c2*d2*y3 + a1*a2*b1*d3*y3 + a1*a3*b2*d3*y3 + a1*b1*b2*d3*y3 + a1*b2*b3*d3*y3 + a1*a2*c1*d3*y3 + a2*b1*c1*d3*y3 + a2*b2*c1*d3*y3 + a3*b2*c1*d3*y3 + b1*b2*c1*d3*y3 + a1*b1*b2*c1*d3*y3 + a2*b1*b2*c1*d3*y3 + a1*b2*b3*c1*d3*y3 + a2*b2*b3*c1*d3*y3 + a3*b2*b3*c1*d3*y3 + a1*c2*d3*y3 + a1*a3*c2*d3*y3 + b1*c2*d3*y3 + a1*b1*c2*d3*y3 + a1*b1*b2*c2*d3*y3 + a2*b1*b2*c2*d3*y3 + a3*b1*b2*c2*d3*y3 + b1*b3*c2*d3*y3 + a1*b1*b3*c2*d3*y3 + a1*b2*b3*c2*d3*y3 + a1*b1*c1*c2*d3*y3 + b2*c1*c2*d3*y3 + a2*b2*c1*c2*d3*y3 + a3*b2*c1*c2*d3*y3 + b1*b2*c1*c2*d3*y3 + b3*c1*c2*d3*y3 + a1*b3*c1*c2*d3*y3 + a2*b3*c1*c2*d3*y3 + a3*b3*c1*c2*d3*y3 + b1*b3*c1*c2*d3*y3 + a2*x1*y3 + a2*c1*x1*y3 + b1*b2*c1*x1*y3 + b2*b3*c1*x1*y3 + a2*c2*x1*y3 + b1*b3*c2*x1*y3 + b2*b3*c2*x1*y3 + b3*c1*c2*x1*y3 + b2*c1*d1*x1*y3 + b1*b2*c1*d1*x1*y3 + b2*b3*c1*d1*x1*y3 + b3*c2*d1*x1*y3 + b1*b3*c2*d1*x1*y3 + b2*b3*c2*d1*x1*y3 + b2*c1*c2*d1*x1*y3 + b3*c1*c2*d1*x1*y3 + a1*d2*x1*y3 + b2*d2*x1*y3 + b3*d2*x1*y3 + a1*c1*d2*x1*y3 + b2*c1*d2*x1*y3 + b1*b3*c1*d2*x1*y3 + b2*b3*c1*d2*x1*y3 + a1*c2*d2*x1*y3 + b3*c2*d2*x1*y3 + b1*b3*c2*d2*x1*y3 + b2*b3*c2*d2*x1*y3 + b1*c1*c2*d2*x1*y3 + b2*c1*c2*d2*x1*y3 + b3*c1*c2*d2*x1*y3 + a2*d3*x1*y3 + b2*d3*x1*y3 + a2*c1*d3*x1*y3 + b2*c1*d3*x1*y3 + a2*c2*d3*x1*y3 + b3*c2*d3*x1*y3 + b1*c1*c2*d3*x1*y3 + b3*c1*c2*d3*x1*y3 + c1*x2*y3 + a1*c1*x2*y3 + b2*c1*x2*y3 + b1*b3*c1*x2*y3 + b2*b3*c1*x2*y3 + b1*b3*c2*x2*y3 + c1*c2*x2*y3 + a1*c1*c2*x2*y3 + b2*c1*c2*x2*y3 + a1*d1*x2*y3 + b2*c1*d1*x2*y3 + b3*c1*d1*x2*y3 + b1*b3*c1*d1*x2*y3 + b2*b3*c1*d1*x2*y3 + a1*c2*d1*x2*y3 + b3*c2*d1*x2*y3 + b1*b3*c2*d1*x2*y3 + b2*b3*c2*d1*x2*y3 + b2*c1*c2*d1*x2*y3 + a1*d2*x2*y3 + b2*c1*d2*x2*y3 + b3*c1*d2*x2*y3 + b1*b3*c1*d2*x2*y3 + b2*b3*c1*d2*x2*y3 + a1*c2*d2*x2*y3 + b1*b3*c2*d2*x2*y3 + b2*c1*c2*d2*x2*y3 + a2*c1*x3*y3 + a1*c2*x3*y3 + b1*c2*x3*y3 + c1*c2*x3*y3 + b2*c1*c2*x3*y3 + a2*d1*x3*y3 + b1*c2*d1*x3*y3 + b2*c2*d1*x3*y3 + b1*c2*d2*x3*y3 + b1*c2*d3*x3*y3 + a2*c1*y1*y3 + b2*c1*y1*y3 + b1*b2*c1*y1*y3 + b2*b3*c1*y1*y3 + a2*c2*y1*y3 + b1*c2*y1*y3 + b2*c2*y1*y3 + b3*c2*y1*y3 + b1*b3*c2*y1*y3 + b2*b3*c2*y1*y3 + b3*c1*c2*y1*y3 + b1*b2*c1*d1*y1*y3 + b2*b3*c1*d1*y1*y3 + b1*c2*d1*y1*y3 + b2*c2*d1*y1*y3 + b3*c2*d1*y1*y3 + b1*b3*c2*d1*y1*y3 + b2*b3*c2*d1*y1*y3 + b2*c1*c2*d1*y1*y3 + b3*c1*c2*d1*y1*y3 + a1*c1*d2*y1*y3 + b1*b3*c1*d2*y1*y3 + b2*b3*c1*d2*y1*y3 + a1*c2*d2*y1*y3 + b1*c2*d2*y1*y3 + b2*c2*d2*y1*y3 + b3*c2*d2*y1*y3 + b1*b3*c2*d2*y1*y3 + b2*b3*c2*d2*y1*y3 + b1*c1*c2*d2*y1*y3 + b2*c1*c2*d2*y1*y3 + b3*c1*c2*d2*y1*y3 + a2*c1*d3*y1*y3 + b2*c1*d3*y1*y3 + a2*c2*d3*y1*y3 + b1*c2*d3*y1*y3 + b2*c2*d3*y1*y3 + b3*c2*d3*y1*y3 + b1*c1*c2*d3*y1*y3 + b3*c1*c2*d3*y1*y3 + b1*b3*c1*y2*y3 + b2*b3*c1*y2*y3 + b1*c2*y2*y3 + b1*b3*c2*y2*y3 + a1*c1*c2*y2*y3 + b2*c1*c2*y2*y3 + b3*c1*d1*y2*y3 + b1*b3*c1*d1*y2*y3 + b2*b3*c1*d1*y2*y3 + a1*c2*d1*y2*y3 + b1*c2*d1*y2*y3 + b2*c2*d1*y2*y3 + b3*c2*d1*y2*y3 + b1*b3*c2*d1*y2*y3 + b2*b3*c2*d1*y2*y3 + b2*c1*c2*d1*y2*y3 + b3*c1*d2*y2*y3 + b1*b3*c1*d2*y2*y3 + b2*b3*c1*d2*y2*y3 + a1*c2*d2*y2*y3 + b1*c2*d2*y2*y3 + b1*b3*c2*d2*y2*y3 + b2*c1*c2*d2*y2*y3 + b1*c2*d3*y2*y3 + a2*b3*z1 + a2*b1*b3*z1 + a1*b2*b3*z1 + a2*b2*b3*z1 + a3*b2*c1*z1 + a3*b1*b2*c1*z1 + a3*b2*b3*c1*z1 + a3*c2*z1 + a3*b1*c2*z1 + a3*b2*c2*z1 + a3*b1*b2*c2*z1 + a3*b3*c2*z1 + b1*b3*c2*z1 + a1*b1*b3*c2*z1 + b2*b3*c2*z1 + a1*b2*b3*c2*z1 + a2*b2*b3*c2*z1 + a3*b2*c1*c2*z1 + a1*b3*c1*c2*z1 + a3*b3*c1*c2*z1 + b2*b3*c1*c2*z1 + a3*b1*b2*d1*z1 + a2*b1*b3*d1*z1 + b2*b3*d1*z1 + a3*b2*b3*d1*z1 + a2*b3*c1*d1*z1 + b2*b3*c1*d1*z1 + a3*c2*d1*z1 + a3*b1*c2*d1*z1 + a3*b2*c2*d1*z1 + a3*b3*c2*d1*z1 + b3*c1*c2*d1*z1 + a3*b1*b2*d2*z1 + a2*b3*d2*z1 + a3*b3*d2*z1 + a2*b1*b3*d2*z1 + b2*b3*d2*z1 + a1*b2*b3*d2*z1 + a3*b2*b3*d2*z1 + b3*c1*d2*z1 + a2*b3*c1*d2*z1 + b2*b3*c1*d2*z1 + a3*b1*c2*d2*z1 + a3*b2*c2*d2*z1 + a1*b3*c2*d2*z1 + a3*b3*c2*d2*z1 + b3*c1*c2*d2*z1 + a2*d3*z1 + a2*b1*d3*z1 + a2*b2*d3*z1 + b1*b2*d3*z1 + a1*b1*b2*d3*z1 + a3*b1*b2*d3*z1 + a2*b3*d3*z1 + a2*b1*b3*d3*z1 + b2*b3*d3*z1 + a1*b2*b3*d3*z1 + a3*b2*b3*d3*z1 + a2*b1*c1*d3*z1 + a1*b2*c1*d3*z1 + a2*b3*c1*d3*z1 + b2*b3*c1*d3*z1 + a3*b1*c2*d3*z1 + a3*b2*c2*d3*z1 + b3*c2*d3*z1 + a1*b3*c2*d3*z1 + a3*b3*c2*d3*z1 + b2*c1*c2*d3*z1 + b1*b2*c1*c2*d3*z1 + b3*c1*c2*d3*z1 + a3*c2*x1*z1 + b3*c2*x1*z1 + b3*c1*c2*x1*z1 + b3*c2*d1*x1*z1 + b3*c2*d2*x1*z1 + a2*d3*x1*z1 + b2*c1*d3*x1*z1 + b1*c2*d3*x1*z1 + b2*c2*d3*x1*z1 + b3*c2*d3*x1*z1 + b3*c1*x2*z1 + a3*c2*x2*z1 + b3*c2*x2*z1 + b3*c1*d1*x2*z1 + b3*c2*d1*x2*z1 + b3*d2*x2*z1 + b3*c1*d2*x2*z1 + b3*c2*d2*x2*z1 + a2*d3*x2*z1 + b2*d3*x2*z1 + b3*d3*x2*z1 + b3*c1*d3*x2*z1 + b1*c2*d3*x2*z1 + b2*c2*d3*x2*z1 + b3*c2*d3*x2*z1 + b2*c1*x3*z1 + c2*x3*z1 + a1*c2*x3*z1 + a2*c2*x3*z1 + a3*c2*x3*z1 + b1*c2*x3*z1 + b2*c2*x3*z1 + b3*c2*x3*z1 + c1*c2*x3*z1 + b2*c1*c2*x3*z1 + b3*c1*c2*x3*z1 + b2*c1*d1*x3*z1 + b1*c2*d1*x3*z1 + b2*c2*d1*x3*z1 + a1*d2*x3*z1 + b2*d2*x3*z1 + b3*d2*x3*z1 + b2*c1*d2*x3*z1 + b1*c2*d2*x3*z1 + b2*c2*d2*x3*z1 + a2*d3*x3*z1 + b2*d3*x3*z1 + b1*c2*d3*x3*z1 + b2*c2*d3*x3*z1 + a3*c2*y1*z1 + b3*c1*c2*y1*z1 + b3*c2*d1*y1*z1 + b3*c2*d2*y1*z1 + a2*d3*y1*z1 + b2*c1*d3*y1*z1 + b1*c2*d3*y1*z1 + b2*c2*d3*y1*z1 + b3*c2*d3*y1*z1 + a3*c2*y2*z1 + b3*c1*d1*y2*z1 + b3*c2*d1*y2*z1 + b3*d2*y2*z1 + b3*c1*d2*y2*z1 + b3*c2*d2*y2*z1 + a2*d3*y2*z1 + b2*d3*y2*z1 + b3*d3*y2*z1 + b3*c1*d3*y2*z1 + b1*c2*d3*y2*z1 + b2*c2*d3*y2*z1 + b3*c2*d3*y2*z1 + b2*c1*y3*z1 + a1*c2*y3*z1 + a2*c2*y3*z1 + a3*c2*y3*z1 + b1*c2*y3*z1 + b2*c2*y3*z1 + b3*c2*y3*z1 + c1*c2*y3*z1 + b2*c1*c2*y3*z1 + b3*c1*c2*y3*z1 + b2*c1*d1*y3*z1 + b1*c2*d1*y3*z1 + b2*c2*d1*y3*z1 + a1*d2*y3*z1 + b2*d2*y3*z1 + b3*d2*y3*z1 + b2*c1*d2*y3*z1 + b1*c2*d2*y3*z1 + b2*c2*d2*y3*z1 + a2*d3*y3*z1 + b2*d3*y3*z1 + b1*c2*d3*y3*z1 + b2*c2*d3*y3*z1 + a1*a3*b1*z2 + a1*a3*b2*z2 + a2*b1*b3*z2 + a1*b2*b3*z2 + a1*a3*c1*z2 + a3*b1*b2*c1*z2 + b1*b3*c1*z2 + a1*b2*b3*c1*z2 + a1*a3*c2*z2 + a3*b1*c2*z2 + a3*b1*b2*c2*z2 + b1*b3*c2*z2 + a1*b3*c1*c2*z2 + b2*b3*c1*c2*z2 + a3*d1*z2 + a3*b1*d1*z2 + a3*b2*d1*z2 + a3*b1*b2*d1*z2 + a1*b3*d1*z2 + a2*b3*d1*z2 + a3*b3*d1*z2 + b1*b3*d1*z2 + a2*b1*b3*d1*z2 + b2*b3*d1*z2 + a1*b2*b3*d1*z2 + a3*b2*b3*d1*z2 + b3*c1*d1*z2 + a2*b3*c1*d1*z2 + b2*b3*c1*d1*z2 + a3*c2*d1*z2 + a3*b1*c2*d1*z2 + a3*b2*c2*d1*z2 + a1*b3*c2*d1*z2 + a3*b3*c2*d1*z2 + b1*b3*c2*d1*z2 + b2*b3*c2*d1*z2 + b3*c1*c2*d1*z2 + a3*b1*d2*z2 + a3*b1*b2*d2*z2 + a1*b3*d2*z2 + b1*b3*d2*z2 + a2*b1*b3*d2*z2 + a1*b2*b3*d2*z2 + b3*c1*d2*z2 + a1*b3*c1*d2*z2 + a2*b3*c1*d2*z2 + b2*b3*c1*d2*z2 + a3*b1*c2*d2*z2 + a1*b3*c2*d2*z2 + b1*b3*c2*d2*z2 + b3*c1*c2*d2*z2 + a3*b1*d3*z2 + a1*b2*d3*z2 + a1*b1*b2*d3*z2 + a3*b1*b2*d3*z2 + a1*b3*d3*z2 + b1*b3*d3*z2 + a2*b1*b3*d3*z2 + a1*b2*b3*d3*z2 + b1*c1*d3*z2 + a1*b1*c1*d3*z2 + a2*b1*c1*d3*z2 + a1*b3*c1*d3*z2 + a2*b3*c1*d3*z2 + b2*b3*c1*d3*z2 + a3*b1*c2*d3*z2 + a1*b3*c2*d3*z2 + b1*b3*c2*d3*z2 + b2*c1*c2*d3*z2 + b1*b2*c1*c2*d3*z2 + b3*c1*c2*d3*z2 + a3*c1*x1*z2 + a3*c2*x1*z2 + b3*c2*x1*z2 + b3*c2*d1*x1*z2 + b3*c2*d2*x1*z2 + a2*d3*x1*z2 + b2*c1*d3*x1*z2 + b1*c2*d3*x1*z2 + b2*c2*d3*x1*z2 + b3*c2*d3*x1*z2 + b3*c1*d1*x2*z2 + b3*c2*d1*x2*z2 + b3*c1*d2*x2*z2 + b3*c1*d3*x2*z2 + b1*c2*d3*x2*z2 + a1*x3*z2 + a1*c1*x3*z2 + b3*c1*x3*z2 + b1*c2*x3*z2 + c1*c2*x3*z2 + a1*d1*x3*z2 + b2*c1*d1*x3*z2 + b1*c2*d1*x3*z2 + b2*c2*d1*x3*z2 + a1*d2*x3*z2 + b2*c1*d2*x3*z2 + b1*c2*d2*x3*z2 + b1*c2*d3*x3*z2 + a3*y1*z2 + a3*c1*y1*z2 + a3*c2*y1*z2 + b3*c2*y1*z2 + b3*c2*d1*y1*z2 + b3*c2*d2*y1*z2 + a2*d3*y1*z2 + b2*c1*d3*y1*z2 + b1*c2*d3*y1*z2 + b2*c2*d3*y1*z2 + b3*c2*d3*y1*z2 + b3*c1*d1*y2*z2 + b3*c2*d1*y2*z2 + b3*c1*d2*y2*z2 + b3*c1*d3*y2*z2 + b1*c2*d3*y2*z2 + a1*c1*y3*z2 + b2*c1*y3*z2 + b1*c2*y3*z2 + c1*c2*y3*z2 + a1*d1*y3*z2 + b2*c1*d1*y3*z2 + b1*c2*d1*y3*z2 + b2*c2*d1*y3*z2 + a1*d2*y3*z2 + b2*c1*d2*y3*z2 + b1*c2*d2*y3*z2 + b1*c2*d3*y3*z2 + a3*z1*z2 + b3*c1*z1*z2 + b3*c2*z1*z2 + a1*b1*b2*z3 + a3*b1*b2*z3 + a2*b1*b3*z3 + a1*b2*b3*z3 + b1*b2*c1*z3 + a1*b2*b3*c1*z3 + a1*b1*c2*z3 + a2*b1*c2*z3 + a3*b1*c2*z3 + a1*b2*c2*z3 + a1*c1*c2*z3 + a2*c1*c2*z3 + b2*c1*c2*z3 + b1*b2*c1*c2*z3 + a1*b3*c1*c2*z3 + a2*b1*b2*d1*z3 + a3*b1*b2*d1*z3 + a2*b1*b3*d1*z3 + a1*b2*b3*d1*z3 + a3*b2*b3*d1*z3 + a2*c1*d1*z3 + a2*b1*c1*d1*z3 + a2*b2*c1*d1*z3 + a2*b3*c1*d1*z3 + b2*b3*c1*d1*z3 + a3*c2*d1*z3 + b1*c2*d1*z3 + a3*b1*c2*d1*z3 + a3*b2*c2*d1*z3 + a1*b3*c2*d1*z3 + a3*b3*c2*d1*z3 + b1*b3*c2*d1*z3 + c1*c2*d1*z3 + a1*b2*d2*z3 + a2*b1*b2*d2*z3 + a3*b1*b2*d2*z3 + a2*b1*b3*d2*z3 + a1*b2*b3*d2*z3 + a1*c1*d2*z3 + a2*c1*d2*z3 + a1*b1*c1*d2*z3 + a2*b1*c1*d2*z3 + a1*b2*c1*d2*z3 + a2*b2*c1*d2*z3 + a1*b3*c1*d2*z3 + a2*b3*c1*d2*z3 + a1*c2*d2*z3 + b1*c2*d2*z3 + a3*b1*c2*d2*z3 + a1*b3*c2*d2*z3 + b1*b3*c2*d2*z3 + b2*c1*c2*d2*z3 + b3*c1*c2*d2*z3 + a1*b2*d3*z3 + a1*b1*b2*d3*z3 + a3*b1*b2*d3*z3 + a2*b1*b3*d3*z3 + a1*b2*b3*d3*z3 + a1*b2*c1*d3*z3 + a2*b2*c1*d3*z3 + b1*b2*c1*d3*z3 + b2*b3*c1*d3*z3 + b1*c2*d3*z3 + a1*b1*c2*d3*z3 + a2*b1*c2*d3*z3 + a3*b1*c2*d3*z3 + a1*b2*c2*d3*z3 + b1*b3*c2*d3*z3 + b3*c1*c2*d3*z3 + b2*b3*c1*c2*d3*z3 + a2*x1*z3 + b3*c2*x1*z3 + b2*c1*d1*x1*z3 + b3*c2*d1*x1*z3 + a1*d2*x1*z3 + b1*c1*d2*x1*z3 + b2*c1*d2*x1*z3 + b3*c2*d2*x1*z3 + a2*d3*x1*z3 + b2*c1*d3*x1*z3 + b1*c2*d3*x1*z3 + b2*c2*d3*x1*z3 + b3*c2*d3*x1*z3 + c1*x2*z3 + a1*c1*x2*z3 + b1*c1*x2*z3 + a1*d1*x2*z3 + b1*c1*d1*x2*z3 + b3*c1*d1*x2*z3 + b3*c2*d1*x2*z3 + a1*d2*x2*z3 + b1*c1*d2*x2*z3 + b3*c1*d2*x2*z3 + b3*c1*d3*x2*z3 + b1*c2*d3*x2*z3 + a2*c1*x3*z3 + a1*c2*x3*z3 + b1*c2*x3*z3 + c1*c2*x3*z3 + b2*c1*c2*x3*z3 + a2*d1*x3*z3 + b1*c2*d1*x3*z3 + b2*c2*d1*x3*z3 + b1*c2*d2*x3*z3 + b1*c2*d3*x3*z3 + a2*y1*z3 + b3*c2*y1*z3 + b2*c1*d1*y1*z3 + b3*c2*d1*y1*z3 + a1*d2*y1*z3 + b1*c1*d2*y1*z3 + b2*c1*d2*y1*z3 + b3*c2*d2*y1*z3 + a2*d3*y1*z3 + b2*c1*d3*y1*z3 + b1*c2*d3*y1*z3 + b2*c2*d3*y1*z3 + b3*c2*d3*y1*z3 + a1*c1*y2*z3 + b1*c1*y2*z3 + a1*d1*y2*z3 + b1*c1*d1*y2*z3 + b3*c1*d1*y2*z3 + b3*c2*d1*y2*z3 + a1*d2*y2*z3 + b1*c1*d2*y2*z3 + b3*c1*d2*y2*z3 + b3*c1*d3*y2*z3 + b1*c2*d3*y2*z3 + a2*c1*y3*z3 + a1*c2*y3*z3 + b1*c2*y3*z3 + c1*c2*y3*z3 + b2*c1*c2*y3*z3 + a2*d1*y3*z3 + b1*c2*d1*y3*z3 + b2*c2*d1*y3*z3 + b1*c2*d2*y3*z3 + b1*c2*d3*y3*z3 + c2*z1*z3 + a1*z2*z3 + b2*c1*z2*z3 + b3*c1*z2*z3;
end;
#####################################################################
C2GAPin128:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3,d1,d2,d3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];d1:=g1[7];d2:=g2[7];d3:=g3[7];
return a2*b1*b3 + a1*a2*b1*b3 + a1*b2*b3 + a1*a3*b2*b3 + a1*a3*b1*b2*c1 + a1*a2*b1*b3*c1 + a1*b2*b3*c1 + a2*b2*b3*c1 + a1*a3*b2*b3*c1 + a3*b1*b2*c2 + a1*b3*c2 + a1*a3*b3*c2 + a1*b1*b3*c2 + a2*b1*b3*c2 + a1*a2*b1*b3*c2 + a1*a3*c1*c2 + a1*a3*b1*c1*c2 + a3*b2*c1*c2 + a1*a3*b2*c1*c2 + a3*b1*b2*c1*c2 + a1*b3*c1*c2 + a2*b3*c1*c2 + a1*a2*b3*c1*c2 + a3*b3*c1*c2 + a1*a3*b3*c1*c2 + a3*b1*b3*c1*c2 + a3*b2*b3*c1*c2 + a3*b2*b3*d1 + a3*b1*b2*c1*d1 + b2*b3*c1*d1 + a1*b2*b3*c1*d1 + a2*b2*b3*c1*d1 + b1*b3*c2*d1 + a2*b1*b3*c2*d1 + a1*b2*b3*c2*d1 + a2*b2*b3*c2*d1 + b3*c1*c2*d1 + a1*b3*c1*c2*d1 + a1*a3*b2*d2 + a3*b1*b2*d2 + a2*b1*b3*d2 + a1*a2*b1*b3*d2 + a3*b1*b3*d2 + a1*a3*b1*b3*d2 + a3*b1*b2*c1*d2 + a1*a2*b3*c1*d2 + a1*a3*b3*c1*d2 + a2*b1*b3*c1*d2 + a3*b1*b3*c1*d2 + a1*b2*b3*c1*d2 + a2*b2*b3*c1*d2 + a1*a3*c2*d2 + a3*b1*c2*d2 + a1*a3*b1*c2*d2 + a3*b1*b2*c2*d2 + b1*b3*c2*d2 + a1*b1*b3*c2*d2 + a2*b1*b3*c2*d2 + a1*b2*b3*c2*d2 + a1*a3*c1*c2*d2 + a3*b1*c1*c2*d2 + b3*c1*c2*d2 + b1*b3*c1*c2*d2 + b2*b3*c1*c2*d2 + a1*a3*b2*d3 + a3*b1*b2*d3 + a2*b1*b3*d3 + a1*a2*b1*b3*d3 + a1*a3*b2*b3*d3 + a1*b2*c1*d3 + a2*b1*b2*c1*d3 + a3*b1*b2*c1*d3 + a1*a2*b3*c1*d3 + a2*b1*b3*c1*d3 + a1*b2*b3*c1*d3 + a2*b2*b3*c1*d3 + a3*b2*b3*c1*d3 + a1*c2*d3 + a1*a3*c2*d3 + a1*b1*c2*d3 + a2*b1*c2*d3 + a1*a2*b1*c2*d3 + a3*b1*c2*d3 + a1*a3*b1*c2*d3 + a1*b2*c2*d3 + a1*b1*b2*c2*d3 + a3*b1*b2*c2*d3 + a1*a3*b3*c2*d3 + b1*b3*c2*d3 + a1*b1*b3*c2*d3 + a2*b1*b3*c2*d3 + a3*b1*b3*c2*d3 + a1*b2*b3*c2*d3 + c1*c2*d3 + a1*a2*c1*c2*d3 + a1*a3*c1*c2*d3 + a3*b1*c1*c2*d3 + b2*c1*c2*d3 + a2*b1*b2*c1*c2*d3 + b3*c1*c2*d3 + b1*b3*c1*c2*d3 + b2*b3*c1*c2*d3 + a3*b2*b3*c1*c2*d3 + a3*b2*x1 + a3*b1*b2*x1 + a2*b3*x1 + a2*b1*b3*x1 + a3*b2*b3*x1 + a3*b1*b2*c1*x1 + a2*b1*b3*c1*x1 + a3*b2*b3*c1*x1 + a3*c2*x1 + b3*c2*x1 + a1*b3*c2*x1 + a2*b3*c2*x1 + b1*b3*c2*x1 + a2*b1*b3*c2*x1 + b2*b3*c2*x1 + a3*c1*c2*x1 + a3*b1*c1*c2*x1 + a3*b2*c1*c2*x1 + b3*c1*c2*x1 + a2*b3*c1*c2*x1 + a3*b3*c1*c2*x1 + a2*b3*d1*x1 + b2*b3*d1*x1 + a3*c2*d1*x1 + b3*c2*d1*x1 + b1*b3*c2*d1*x1 + b3*c1*c2*d1*x1 + a3*b3*d2*x1 + b2*b3*d2*x1 + a3*b2*c1*d2*x1 + b1*b3*c2*d2*x1 + b2*b3*c2*d2*x1 + a3*c1*c2*d2*x1 + b3*c1*c2*d2*x1 + b2*b3*c1*c2*d2*x1 + a1*b2*d3*x1 + a2*b2*d3*x1 + b1*b2*d3*x1 + b2*b3*d3*x1 + a1*b2*c1*d3*x1 + a2*b2*c1*d3*x1 + a3*b2*c1*d3*x1 + b1*c2*d3*x1 + a1*b1*c2*d3*x1 + b2*c2*d3*x1 + a1*b2*c2*d3*x1 + a2*b2*c2*d3*x1 + b1*b2*c2*d3*x1 + b1*b3*c2*d3*x1 + b2*b3*c2*d3*x1 + a2*c1*c2*d3*x1 + a3*c1*c2*d3*x1 + b3*c1*c2*d3*x1 + b2*b3*c1*c2*d3*x1 + a1*a3*x2 + a3*b1*x2 + a3*b1*b2*x2 + a2*b1*b3*x2 + a3*b1*c1*x2 + b3*c1*x2 + b1*b3*c1*x2 + a2*b1*b3*c2*x2 + b3*c1*c2*x2 + a1*b3*c1*c2*x2 + b3*d1*x2 + a3*b3*d1*x2 + b1*b3*d1*x2 + b3*c2*d1*x2 + b1*b3*c2*d1*x2 + b1*b3*d2*x2 + b1*b3*c2*d2*x2 + a1*b2*d3*x2 + b1*b3*d3*x2 + b1*c1*d3*x2 + b1*b2*c1*d3*x2 + a3*b3*c1*d3*x2 + b1*c2*d3*x2 + a1*b1*c2*d3*x2 + a1*b2*c2*d3*x2 + b1*b2*c2*d3*x2 + b1*b3*c2*d3*x2 + a1*c1*c2*d3*x2 + b1*b2*c1*c2*d3*x2 + b3*c1*c2*x1*x2 + d3*x1*x2 + c1*c2*d3*x1*x2 + a2*b1*b2*x3 + a3*b1*b2*x3 + a2*b1*b3*x3 + b1*c2*x3 + a1*b1*c2*x3 + a3*b1*c2*x3 + a1*b2*c2*x3 + a3*b1*b2*c2*x3 + a1*b3*c2*x3 + b1*b3*c2*x3 + b1*c1*c2*x3 + a1*b1*c1*c2*x3 + a1*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a1*b3*c1*c2*x3 + b1*b3*c1*c2*x3 + a2*b1*d1*x3 + b2*d1*x3 + b1*b2*d1*x3 + a2*c1*d1*x3 + b2*c1*d1*x3 + b1*b2*c1*d1*x3 + a1*b1*d2*x3 + a2*b1*d2*x3 + b1*b2*d2*x3 + a1*c1*d2*x3 + a2*c1*d2*x3 + b2*c1*d2*x3 + b1*b2*c1*d2*x3 + a1*b1*c2*d2*x3 + a1*c1*c2*d2*x3 + b1*c1*c2*d2*x3 + a1*b2*d3*x3 + b1*b2*d3*x3 + b1*b2*c1*d3*x3 + a1*c2*d3*x3 + a1*b1*c2*d3*x3 + b1*b2*c2*d3*x3 + a1*c1*c2*d3*x3 + b1*c1*c2*d3*x3 + b1*c2*x1*x3 + b2*c2*x1*x3 + b3*c2*x1*x3 + b1*c1*c2*x1*x3 + b2*c1*c2*x1*x3 + b3*c1*c2*x1*x3 + c2*d1*x1*x3 + c1*d2*x1*x3 + c2*d2*x1*x3 + c1*c2*d2*x1*x3 + c1*c2*d3*x1*x3 + b1*c2*x2*x3 + c1*d1*x2*x3 + c1*d2*x2*x3 + a3*b2*y1 + a2*b3*y1 + a3*b1*b2*c1*y1 + a2*b1*b3*c1*y1 + a3*b2*b3*c1*y1 + a3*b1*c2*y1 + a3*b2*c2*y1 + a3*b3*c2*y1 + a2*b1*b3*c2*y1 + b2*b3*c2*y1 + a3*c1*c2*y1 + a3*b1*c1*c2*y1 + a3*b2*c1*c2*y1 + a2*b3*c1*c2*y1 + a3*b3*c1*c2*y1 + a3*b2*d1*y1 + a2*b3*d1*y1 + b2*b3*d1*y1 + b1*b3*c2*d1*y1 + b2*b3*c2*d1*y1 + b3*c1*c2*d1*y1 + a2*b3*d2*y1 + b2*b3*d2*y1 + a3*b2*c1*d2*y1 + a3*c2*d2*y1 + b1*b3*c2*d2*y1 + b2*b3*c2*d2*y1 + a3*c1*c2*d2*y1 + b3*c1*c2*d2*y1 + b2*b3*c1*c2*d2*y1 + a2*b2*d3*y1 + b1*b2*d3*y1 + a2*b3*d3*y1 + b2*b3*d3*y1 + a1*b2*c1*d3*y1 + a2*b2*c1*d3*y1 + a3*b2*c1*d3*y1 + b1*b2*c1*d3*y1 + a1*c2*d3*y1 + a2*c2*d3*y1 + a3*c2*d3*y1 + b1*c2*d3*y1 + a1*b1*c2*d3*y1 + b2*c2*d3*y1 + a1*b2*c2*d3*y1 + a2*b2*c2*d3*y1 + b1*b3*c2*d3*y1 + b2*b3*c2*d3*y1 + a2*c1*c2*d3*y1 + a3*c1*c2*d3*y1 + b3*c1*c2*d3*y1 + b2*b3*c1*c2*d3*y1 + b3*c2*x1*y1 + c2*d3*x1*y1 + b3*c2*x2*y1 + b3*c1*c2*x2*y1 + d3*x2*y1 + c2*d3*x2*y1 + c1*c2*d3*x2*y1 + b1*c1*c2*x3*y1 + b2*c1*c2*x3*y1 + b3*c1*c2*x3*y1 + c1*d2*x3*y1 + c1*c2*d2*x3*y1 + c2*d3*x3*y1 + c1*c2*d3*x3*y1 + a1*a3*y2 + a3*b1*c1*y2 + a3*b1*c2*y2 + a1*b3*c2*y2 + a2*b1*b3*c2*y2 + a1*b3*c1*c2*y2 + a3*b3*d1*y2 + b1*b3*c2*d1*y2 + b1*b3*c2*d2*y2 + b1*b2*d3*y2 + a3*b3*c1*d3*y2 + a1*c2*d3*y2 + b1*c2*d3*y2 + a1*b1*c2*d3*y2 + a1*b2*c2*d3*y2 + b1*b3*c2*d3*y2 + a1*c1*c2*d3*y2 + b1*b2*c1*c2*d3*y2 + b3*c2*x1*y2 + b3*c1*c2*x1*y2 + c2*d3*x1*y2 + c1*c2*d3*x1*y2 + d1*x3*y2 + c1*d1*x3*y2 + c1*d2*x3*y2 + b3*c1*c2*y1*y2 + c1*c2*d3*y1*y2 + a2*b1*c2*y3 + a3*b1*b2*c2*y3 + b1*c1*c2*y3 + a1*b1*c1*c2*y3 + a1*b2*c1*c2*y3 + b1*b2*c1*c2*y3 + a1*b3*c1*c2*y3 + b1*b3*c1*c2*y3 + b2*d1*y3 + b1*b2*d1*y3 + b2*c1*d1*y3 + b1*b2*d2*y3 + b1*c1*d2*y3 + b2*c1*d2*y3 + a1*b1*c2*d2*y3 + a1*c1*c2*d2*y3 + b1*c1*c2*d2*y3 + b1*b2*d3*y3 + b1*c2*d3*y3 + a1*b1*c2*d3*y3 + a1*c1*c2*d3*y3 + b1*c1*c2*d3*y3 + b1*c1*c2*x1*y3 + b2*c1*c2*x1*y3 + b3*c1*c2*x1*y3 + c2*d1*x1*y3 + c2*d2*x1*y3 + c1*c2*d2*x1*y3 + c2*d3*x1*y3 + c1*c2*d3*x1*y3 + d1*x2*y3 + b1*c2*x3*y3 + b1*c2*y1*y3 + b2*c2*y1*y3 + b3*c2*y1*y3 + b1*c1*c2*y1*y3 + b2*c1*c2*y1*y3 + b3*c1*c2*y1*y3 + c1*c2*d2*y1*y3 + c1*c2*d3*y1*y3 + b1*c2*y2*y3 + d1*y2*y3 + a2*b1*b3*z1 + a3*c2*z1 + a3*b1*c2*z1 + a3*b2*c2*z1 + a3*b3*c2*z1 + b1*b3*c2*z1 + b2*b3*c2*z1 + a3*b2*d1*z1 + b2*b3*d1*z1 + a3*c2*d1*z1 + b2*b3*c2*d1*z1 + a2*b3*d2*z1 + a3*b3*d2*z1 + a3*c2*d2*z1 + a1*b2*d3*z1 + a2*b3*d3*z1 + b1*b2*c1*d3*z1 + c2*d3*z1 + a1*c2*d3*z1 + a2*c2*d3*z1 + a3*c2*d3*z1 + b1*b2*c2*d3*z1 + c2*d3*x1*z1 + b3*x2*z1 + c2*d3*x2*z1 + b1*c2*x3*z1 + b2*c2*x3*z1 + b3*c2*x3*z1 + c2*d1*x3*z1 + c2*d2*x3*z1 + c2*d3*x3*z1 + c2*d3*y1*z1 + c2*d3*y2*z1 + b1*c2*y3*z1 + b2*c2*y3*z1 + b3*c2*y3*z1 + c2*d1*y3*z1 + c2*d2*y3*z1 + c2*d3*y3*z1 + a1*a3*z2 + a2*b1*b3*z2 + a3*b1*c2*z2 + a1*b3*c2*z2 + b1*b3*c2*z2 + b1*b3*d1*z2 + b2*b3*d1*z2 + b1*b3*d2*z2 + a1*b2*d3*z2 + b1*b2*d3*z2 + b1*b3*d3*z2 + b1*c1*d3*z2 + b1*b2*c1*d3*z2 + a1*c2*d3*z2 + b1*b2*c2*d3*z2 + a3*x1*z2 + b3*c2*x1*z2 + d3*x1*z2 + c2*d3*x1*z2 + b1*c2*x3*z2 + d1*x3*z2 + a3*y1*z2 + b3*c2*y1*z2 + d3*y1*z2 + c2*d3*y1*z2 + b1*c2*y3*z2 + a2*b1*b2*z3 + a3*b1*b2*z3 + a2*b1*b3*z3 + a1*b1*c2*z3 + a2*b1*c2*z3 + a3*b1*c2*z3 + a1*b2*c2*z3 + a1*b3*c2*z3 + b1*b3*c2*z3 + a2*b1*d1*z3 + a2*c1*d1*z3 + b1*b2*c1*d1*z3 + a1*b1*d2*z3 + a2*b1*d2*z3 + a1*c1*d2*z3 + a2*c1*d2*z3 + b1*c1*d2*z3 + b1*b2*c1*d2*z3 + a1*b2*d3*z3 + b1*b2*c1*d3*z3 + a1*c2*d3*z3 + b1*c2*d3*z3 + b1*b2*c2*d3*z3 + b1*c2*x1*z3 + b2*c2*x1*z3 + b3*c2*x1*z3 + c1*d2*x1*z3 + c2*d3*x1*z3 + b1*c2*x2*z3 + d1*x2*z3 + c1*d1*x2*z3 + c1*d2*x2*z3 + b1*c2*x3*z3 + b1*c2*y1*z3 + b2*c2*y1*z3 + b3*c2*y1*z3 + c1*d2*y1*z3 + c2*d3*y1*z3 + b1*c2*y2*z3 + c1*d1*y2*z3 + c1*d2*y2*z3 + b1*c2*y3*z3 + d1*z2*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 129 ( P4/nmm)
#####################################################################
Aiin129:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin129:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin129:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Azin129:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return z1;
end;
#####################################################################
Bdeltain129:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bcxyin129:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a2*b1 + a2*b1*b2 + a2*d1 + a2*b2*d1 + a2*x1 + b2*x1 + b2*c1*x1 + a2*y1 + b2*c1*y1;
end;
#####################################################################
#####################################################################
#Space Group No. 130 ( P4/ncc)
#####################################################################
Aiin130:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin130:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin130:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Bdeltain130:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bcxyin130:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a2*b1 + a2*b1*b2 + a2*d1 + a2*b2*d1 + a2*x1 + b2*x1 + b2*c1*x1 + a2*y1 + b2*c1*y1;
end;
#####################################################################
#####################################################################
#Space Group No. 131 ( P4_2/mmc)
#####################################################################
Aiin131:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin131:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin131:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Axyin131:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return x1 + y1;
end;
#####################################################################
Bdeltain131:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bczin131:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*b2 + a2*c1 + b2*c1*d1 + a1*d2 + b2*c1*d2 + b2*z1;
end;
#####################################################################
Bxyin131:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return (1 - c1)*x2*y1 + c1*(x2 + y1)*y2;
end;
#####################################################################
Bzxyin131:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return c1*d2*x1 + c2*(1 + c1 + d2)*x1 + d2*y1 + c1*d2*y1 + c2*(c1 + d2)*y1 + a2*(x1 + y1) + x1*z2 + y1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 132 ( P4_2/mcm)
#####################################################################
Aiin132:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin132:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin132:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Axyin132:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return x1 + y1;
end;
#####################################################################
Bdeltain132:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bmzin132:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a2*d1 + b2*c2*d1 + c2*z1;
end;
#####################################################################
Bxyin132:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return (1 - c1)*x2*y1 + c1*(x2 + y1)*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 133 ( P4_2/nbc)
#####################################################################
#####################################################################
#Space Group No. 134 ( P4_2/nnm)
#####################################################################
Aiin134:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin134:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin134:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Axyzin134:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return a1 + d1 + x1 + y1 + z1;
end;
#####################################################################
Bdeltain134:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
#####################################################################
#Space Group No. 135 ( P4_2/mbc)
#####################################################################
Aiin135:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin135:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin135:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Bdeltain135:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bcxyin135:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a2*(b1 + b1*b2 + c1 + d1) + a1*(a2 + b2 + b2*c1 + d2) + b1*b2*(d1 + d2) + b2*x1 + (a2 + b2*c1 + d2)*(x1 + y1);
end;
#####################################################################
Bczin135:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*b2 + a2*c1 + a2*d1 + b2*z1;
end;
#####################################################################
CGAPin135:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3,d1,d2,d3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];d1:=g1[7];d2:=g2[7];d3:=g3[7];
return a2*b1*b2*b3 + a3*b1*b2*c1 + a2*b1*b3*c1 + a1*b2*b3*c1 + a2*b2*b3*c1 + a3*b1*c2 + a2*b1*b3*c2 + a3*b1*b3*c2 + a1*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a3*b2*c1*c2 + a2*b1*b3*c1*c2 + a2*b2*b3*c1*c2 + a3*b2*b3*c1*c2 + a2*b1*b2*b3*c1*c2 + a3*b1*b2*b3*c1*c2 + a2*b1*b2*c3 + a2*b1*b3*c3 + b1*b2*c1*c3 + a3*b1*b2*c1*c3 + b1*b2*b3*c1*c3 + a2*b1*b2*b3*c1*c3 + b1*b2*c2*c3 + a2*b1*b2*c2*c3 + a3*b1*b2*c2*c3 + a2*b1*b2*b3*c2*c3 + a3*c1*c2*c3 + a2*b1*c1*c2*c3 + a3*b1*c1*c2*c3 + a2*b2*c1*c2*c3 + b3*c1*c2*c3 + b1*b3*c1*c2*c3 + a2*b1*b3*c1*c2*c3 + a3*b1*b3*c1*c2*c3 + a2*b1*b2*b3*c1*c2*c3 + a3*b1*b2*d1 + a2*b1*b2*b3*d1 + a3*b1*b2*b3*d1 + a3*b1*b2*c1*d1 + b2*b3*c1*d1 + a2*b2*b3*c1*d1 + a3*b1*b2*b3*c1*d1 + a3*b1*b2*c2*d1 + a2*b1*b3*c2*d1 + b1*b2*b3*c2*d1 + a3*b1*b2*b3*c2*d1 + a3*c1*c2*d1 + a3*b1*c1*c2*d1 + a3*b2*c1*c2*d1 + a2*b3*c1*c2*d1 + a3*b3*c1*c2*d1 + a3*b1*b3*c1*c2*d1 + b2*b3*c1*c2*d1 + a3*b2*b3*c1*c2*d1 + b1*b2*b3*c1*c2*d1 + b1*b2*c3*d1 + a2*b1*b2*c3*d1 + a3*b1*b2*c3*d1 + a3*b1*b2*b3*c3*d1 + a2*b2*c1*c3*d1 + a3*b1*b2*c1*c3*d1 + a3*b2*b3*c1*c3*d1 + a2*b1*c2*c3*d1 + a3*b1*b2*c2*c3*d1 + b1*b3*c2*c3*d1 + a3*b1*b3*c2*c3*d1 + b1*b2*b3*c2*c3*d1 + a3*c1*c2*c3*d1 + a2*b1*c1*c2*c3*d1 + a3*b1*c1*c2*c3*d1 + b2*c1*c2*c3*d1 + a2*b2*c1*c2*c3*d1 + a3*b2*c1*c2*c3*d1 + b1*b2*c1*c2*c3*d1 + a2*b1*b2*c1*c2*c3*d1 + a2*b3*c1*c2*c3*d1 + a3*b3*c1*c2*c3*d1 + a2*b1*b3*c1*c2*c3*d1 + b2*b3*c1*c2*c3*d1 + a2*b2*b3*c1*c2*c3*d1 + b1*b2*b3*c1*c2*c3*d1 + a2*b1*b2*b3*c1*c2*c3*d1 + a3*b1*b2*d2 + b1*b2*b3*d2 + a2*b1*b2*b3*d2 + a3*b1*b2*b3*d2 + a3*b1*b2*c1*d2 + b2*b3*c1*d2 + a2*b1*b2*b3*c1*d2 + a3*b1*b2*b3*c1*d2 + a1*b3*c2*d2 + a2*b1*b3*c2*d2 + a3*b1*b3*c2*d2 + a2*b1*b2*b3*c2*d2 + a3*b1*b2*b3*c2*d2 + a3*c1*c2*d2 + a3*b1*c1*c2*d2 + a3*b2*c1*c2*d2 + a2*b3*c1*c2*d2 + a3*b3*c1*c2*d2 + b1*b3*c1*c2*d2 + a2*b1*b3*c1*c2*d2 + a3*b1*b3*c1*c2*d2 + b2*b3*c1*c2*d2 + a2*b2*b3*c1*c2*d2 + a3*b2*b3*c1*c2*d2 + b1*b2*b3*c1*c2*d2 + a2*b1*b2*c3*d2 + a3*b1*b2*c3*d2 + b1*b2*b3*c3*d2 + a2*b1*b2*b3*c3*d2 + a3*b1*b2*b3*c3*d2 + b1*b2*c1*c3*d2 + a2*b1*b2*c1*c3*d2 + a3*b1*b2*c1*c3*d2 + b2*b3*c1*c3*d2 + a2*b2*b3*c1*c3*d2 + a3*b2*b3*c1*c3*d2 + b1*b2*b3*c1*c3*d2 + b1*c2*c3*d2 + b1*b2*c2*c3*d2 + b1*b2*b3*c2*c3*d2 + c1*c2*c3*d2 + a2*c1*c2*c3*d2 + a3*c1*c2*c3*d2 + a2*b1*c1*c2*c3*d2 + a3*b1*c1*c2*c3*d2 + a2*b2*c1*c2*c3*d2 + a3*b2*c1*c2*c3*d2 + a2*b3*c1*c2*c3*d2 + a3*b3*c1*c2*c3*d2 + b1*b3*c1*c2*c3*d2 + a1*b1*b2*d3 + a3*b1*b2*d3 + a2*b1*b3*d3 + a2*b1*c1*d3 + b1*b2*c1*d3 + a2*b1*b2*c1*d3 + a3*b1*b2*c1*d3 + a2*b1*b3*c1*d3 + a3*b2*b3*c1*d3 + a2*b1*c2*d3 + a1*b3*c2*d3 + a3*b1*b3*c2*d3 + a2*c1*c2*d3 + a3*c1*c2*d3 + a2*b1*c1*c2*d3 + a3*b1*c1*c2*d3 + a2*b2*c1*c2*d3 + a3*b2*c1*c2*d3 + a2*b3*c1*c2*d3 + a3*b3*c1*c2*d3 + b2*b3*c1*c2*d3 + b1*b2*b3*c1*c2*d3 + a2*b1*c3*d3 + a2*c1*c3*d3 + a2*b1*c1*c3*d3 + a2*b2*c1*c3*d3 + a2*b3*c1*c3*d3 + a3*b1*c2*c3*d3 + b1*b3*c2*c3*d3 + b1*b3*c1*c2*c3*d3 + b2*b3*c1*c2*c3*d3 + (a1*a2 + a1*b2 + b1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1)*(c3 + d3) + a3*b1*b2*x1 + b1*b2*b3*x1 + a3*b1*b2*b3*x1 + a2*b3*c1*x1 + b2*b3*c1*x1 + a3*b2*b3*c1*x1 + b1*b2*b3*c1*x1 + a3*b1*b2*c2*x1 + a2*b3*c2*x1 + b1*b2*b3*c2*x1 + a3*b1*b2*b3*c2*x1 + a3*c1*c2*x1 + b3*c1*c2*x1 + a2*b3*c1*c2*x1 + a3*b3*c1*c2*x1 + a3*b2*b3*c1*c2*x1 + a2*b2*c3*x1 + a2*b1*b2*c3*x1 + a3*b1*b2*c3*x1 + a2*b3*c3*x1 + a2*b1*b3*c3*x1 + a3*b1*b2*b3*c3*x1 + a2*c1*c3*x1 + a3*b2*b3*c1*c3*x1 + b1*b2*b3*c1*c3*x1 + a2*b1*c2*c3*x1 + a3*b1*b2*c2*c3*x1 + b3*c2*c3*x1 + a3*b3*c2*c3*x1 + a3*b1*b3*c2*c3*x1 + b1*b2*b3*c2*c3*x1 + c1*c2*c3*x1 + a2*c1*c2*c3*x1 + b2*c1*c2*c3*x1 + a3*b2*c1*c2*c3*x1 + b3*c1*c2*c3*x1 + a3*b3*c1*c2*c3*x1 + b1*b3*c1*c2*c3*x1 + b2*b3*c1*c2*c3*x1 + b1*b2*b3*c1*c2*c3*x1 + b2*b3*d1*x1 + b3*c2*d1*x1 + b1*b3*c2*d1*x1 + b3*c1*c2*d1*x1 + b2*c3*d1*x1 + c2*c3*d1*x1 + b1*c2*c3*d1*x1 + b1*c1*c2*c3*d1*x1 + b2*c1*c2*c3*d1*x1 + b3*c1*c2*c3*d1*x1 + b1*b3*c1*c2*c3*d1*x1 + b2*b3*c1*c2*c3*d1*x1 + b2*b3*d2*x1 + b1*b2*b3*d2*x1 + b2*b3*c1*d2*x1 + b3*c2*d2*x1 + b1*b3*c2*d2*x1 + b1*b2*b3*c2*d2*x1 + b3*c1*c2*d2*x1 + b2*b3*c1*c2*d2*x1 + b2*b3*c3*d2*x1 + b1*b2*b3*c3*d2*x1 + b2*b3*c1*c3*d2*x1 + c2*c3*d2*x1 + b1*b2*c2*c3*d2*x1 + b3*c2*c3*d2*x1 + b1*b3*c2*c3*d2*x1 + b2*c1*c2*c3*d2*x1 + b3*c1*c2*c3*d2*x1 + a2*d3*x1 + b3*c2*d3*x1 + a3*b1*x2 + a3*b1*b2*x2 + a1*b1*b3*x2 + a2*b1*b3*x2 + a3*b1*b3*x2 + a1*b2*b3*x2 + a3*b1*b2*b3*x2 + a3*c1*x2 + a3*b1*c1*x2 + a3*b2*c1*x2 + a3*b1*b2*c1*x2 + a2*b3*c1*x2 + a2*b1*b3*c1*x2 + b2*b3*c1*x2 + a3*b2*b3*c1*x2 + b1*b2*b3*c1*x2 + a3*b1*c2*x2 + a1*b3*c2*x2 + a3*b1*b3*c2*x2 + b1*b2*b3*c2*x2 + a3*b1*c1*c2*x2 + a3*b2*c1*c2*x2 + b3*c1*c2*x2 + a3*b3*c1*c2*x2 + b1*b3*c1*c2*x2 + a2*b1*b3*c1*c2*x2 + b2*b3*c1*c2*x2 + a2*b1*c3*x2 + a3*b1*c3*x2 + b1*b2*c3*x2 + a2*b1*b2*c3*x2 + a3*b1*b2*c3*x2 + b1*b3*c3*x2 + a2*b1*b3*c3*x2 + a2*c1*c3*x2 + b1*c1*c3*x2 + a2*b1*c1*c3*x2 + a2*b2*c1*c3*x2 + a2*b1*b2*c1*c3*x2 + a2*b3*c1*c3*x2 + a3*b3*c1*c3*x2 + b1*b3*c1*c3*x2 + a2*b1*b3*c1*c3*x2 + b1*b2*b3*c1*c3*x2 + b1*c2*c3*x2 + a2*b1*c2*c3*x2 + a3*b1*c2*c3*x2 + c1*c2*c3*x2 + a2*c1*c2*c3*x2 + b1*c1*c2*c3*x2 + b3*c1*c2*c3*x2 + b1*b3*c1*c2*c3*x2 + b2*b3*c1*c2*c3*x2 + b3*d1*x2 + b1*b3*d1*x2 + b2*b3*d1*x2 + b3*c1*d1*x2 + b1*b3*c1*d1*x2 + b2*b3*c1*d1*x2 + b3*c2*d1*x2 + b1*b3*c2*d1*x2 + b3*c1*c2*d1*x2 + b1*b3*c1*c2*d1*x2 + c3*d1*x2 + b2*c3*d1*x2 + b1*b2*c1*c3*d1*x2 + b3*c1*c3*d1*x2 + b1*b3*c1*c3*d1*x2 + c2*c3*d1*x2 + b1*c2*c3*d1*x2 + b1*b3*d2*x2 + b1*b2*b3*d2*x2 + b3*c1*d2*x2 + b1*b3*c1*d2*x2 + b2*b3*c1*d2*x2 + b1*b3*c2*d2*x2 + b1*b3*c1*c2*d2*x2 + b2*b3*c1*c2*d2*x2 + b3*c1*c3*d2*x2 + b1*b3*c1*c3*d2*x2 + b2*b3*c1*c3*d2*x2 + b1*c2*c3*d2*x2 + b1*b2*c2*c3*d2*x2 + b1*b3*c2*c3*d2*x2 + c1*c2*c3*d2*x2 + b1*c1*c2*c3*d2*x2 + b2*c1*c2*c3*d2*x2 + b3*c1*c2*c3*d2*x2 + a1*d3*x2 + b1*c1*d3*x2 + b3*x1*x2 + b1*b3*x1*x2 + b3*c2*x1*x2 + b1*b3*c2*x1*x2 + b3*c1*c2*x1*x2 + b1*c3*x1*x2 + b2*c3*x1*x2 + b1*b2*c3*x1*x2 + b3*c3*x1*x2 + b1*b3*c3*x1*x2 + c1*c3*x1*x2 + b1*c1*c3*x1*x2 + c1*c2*c3*x1*x2 + a1*b1*b2*x3 + a3*b1*b2*x3 + a2*b1*b2*b3*x3 + a3*b1*b2*b3*x3 + a2*c1*x3 + a2*b2*c1*x3 + a3*b1*b2*c1*x3 + b2*b3*c1*x3 + a3*b2*b3*c1*x3 + b1*b2*b3*c1*x3 + a2*b1*b2*b3*c1*x3 + b1*c2*x3 + a2*b1*c2*x3 + a1*b3*c2*x3 + b1*b3*c2*x3 + a3*b1*b3*c2*x3 + b1*b2*b3*c2*x3 + a2*b1*b2*b3*c2*x3 + c1*c2*x3 + a2*c1*c2*x3 + a2*b1*c1*c2*x3 + a3*b1*c1*c2*x3 + a2*b2*c1*c2*x3 + a3*b2*c1*c2*x3 + b1*b2*c1*c2*x3 + a3*b1*b2*c1*c2*x3 + b3*c1*c2*x3 + a3*b3*c1*c2*x3 + a2*b1*b3*c1*c2*x3 + b2*b3*c1*c2*x3 + a2*b2*b3*c1*c2*x3 + a3*b2*b3*c1*c2*x3 + b1*b2*b3*c1*c2*x3 + b1*b2*c3*x3 + a3*b1*b2*c3*x3 + a2*b1*b3*c3*x3 + a2*b1*b2*b3*c3*x3 + a2*b1*c1*c3*x3 + a2*b1*b2*c1*c3*x3 + a2*b3*c1*c3*x3 + a2*b1*b3*c1*c3*x3 + a2*b2*b3*c1*c3*x3 + b1*c2*c3*x3 + a2*b1*c2*c3*x3 + a3*b1*c2*c3*x3 + a2*b1*b2*c2*c3*x3 + a3*b1*b2*c2*c3*x3 + c1*c2*c3*x3 + b1*c1*c2*c3*x3 + a2*b1*c1*c2*c3*x3 + b2*c1*c2*c3*x3 + a2*b2*c1*c2*c3*x3 + b2*b3*c1*c2*c3*x3 + b1*b2*b3*c1*c2*c3*x3 + b1*b2*d1*x3 + b1*b2*b3*d1*x3 + b2*c1*d1*x3 + b1*b2*c1*d1*x3 + b2*b3*c1*d1*x3 + b1*b2*b3*c1*d1*x3 + b1*c2*d1*x3 + b1*b2*c2*d1*x3 + b3*c2*d1*x3 + b1*b3*c2*d1*x3 + b1*b2*b3*c2*d1*x3 + c1*c2*d1*x3 + b1*c1*c2*d1*x3 + b2*c1*c2*d1*x3 + b1*b2*c1*c2*d1*x3 + b3*c1*c2*d1*x3 + b1*b3*c1*c2*d1*x3 + b1*b2*c3*d1*x3 + b1*b2*b3*c3*d1*x3 + b2*c1*c3*d1*x3 + b1*b2*c1*c3*d1*x3 + c2*c3*d1*x3 + b1*c2*c3*d1*x3 + b3*c2*c3*d1*x3 + b1*b3*c2*c3*d1*x3 + c1*c2*c3*d1*x3 + b1*c1*c2*c3*d1*x3 + b2*c1*c2*c3*d1*x3 + b3*c1*c2*c3*d1*x3 + b1*b3*c1*c2*c3*d1*x3 + b2*b3*c1*c2*c3*d1*x3 + b1*b2*b3*d2*x3 + b1*c2*d2*x3 + b1*b3*c1*c2*d2*x3 + b2*b3*c1*c2*d2*x3 + b1*c2*c3*d2*x3 + b1*b2*c2*c3*d2*x3 + c1*c2*c3*d2*x3 + b1*c1*c2*c3*d2*x3 + b2*c1*c2*c3*d2*x3 + b3*c1*c2*c3*d2*x3 + b1*c2*d3*x3 + b1*b2*x1*x3 + b2*b3*x1*x3 + b2*c1*x1*x3 + c2*x1*x3 + b1*b2*c2*x1*x3 + b3*c2*x1*x3 + b1*b3*c2*x1*x3 + c1*c2*x1*x3 + b2*c1*c2*x1*x3 + b3*c1*c2*x1*x3 + b1*b2*c3*x1*x3 + b2*b3*c3*x1*x3 + b2*c1*c3*x1*x3 + b1*b2*c2*c3*x1*x3 + b3*c2*c3*x1*x3 + b1*b3*c2*c3*x1*x3 + b2*c1*c2*c3*x1*x3 + b3*c1*c2*c3*x1*x3 + a1*x2*x3 + b1*b3*x2*x3 + b2*c1*x2*x3 + b3*c1*x2*x3 + b1*c2*x2*x3 + b1*b2*c2*x2*x3 + b1*b3*c2*x2*x3 + c1*c2*x2*x3 + b3*c1*c2*x2*x3 + b1*b3*c1*c2*x2*x3 + b2*b3*c1*c2*x2*x3 + b1*c3*x2*x3 + b1*b3*c3*x2*x3 + b1*b3*c1*c3*x2*x3 + b2*b3*c1*c3*x2*x3 + b1*c2*c3*x2*x3 + b1*c1*c2*c3*x2*x3 + b2*c1*c2*c3*x2*x3 + a3*b1*b2*c1*y1 + a2*b3*c1*y1 + a2*b1*b3*c1*y1 + b2*b3*c1*y1 + b1*b2*b3*c1*y1 + a3*b1*b2*b3*c1*y1 + a2*b1*b3*c2*y1 + a3*b1*c1*c2*y1 + a3*b2*c1*c2*y1 + a3*b1*b3*c1*c2*y1 + b2*b3*c1*c2*y1 + a3*b2*b3*c1*c2*y1 + b1*b2*b3*c1*c2*y1 + a2*c1*c3*y1 + a2*b1*c1*c3*y1 + a2*b2*c1*c3*y1 + b1*b2*c1*c3*y1 + a3*b1*b2*c1*c3*y1 + a2*b3*c1*c3*y1 + a3*b2*b3*c1*c3*y1 + a2*b1*c2*c3*y1 + a3*b3*c2*c3*y1 + c1*c2*c3*y1 + a2*c1*c2*c3*y1 + a3*b1*c1*c2*c3*y1 + b2*c1*c2*c3*y1 + a3*b2*c1*c2*c3*y1 + a3*b3*c1*c2*c3*y1 + b1*b2*b3*c1*c2*c3*y1 + b1*b3*c2*d1*y1 + b3*c1*c2*d1*y1 + b1*c2*c3*d1*y1 + c1*c2*c3*d1*y1 + b2*b3*c1*d2*y1 + b1*b2*b3*c1*d2*y1 + b3*c2*d2*y1 + b1*b3*c2*d2*y1 + b2*b3*c2*d2*y1 + b3*c1*c2*d2*y1 + b1*b3*c1*c2*d2*y1 + b2*b3*c1*c2*d2*y1 + b1*b2*c1*c3*d2*y1 + b2*b3*c1*c3*d2*y1 + b1*c2*c3*d2*y1 + b2*c2*c3*d2*y1 + b1*c1*c2*c3*d2*y1 + b2*c1*c2*c3*d2*y1 + b3*c1*c2*c3*d2*y1 + a2*d3*y1 + b3*c2*d3*y1 + b3*c2*x1*y1 + c2*c3*x1*y1 + b1*b3*c1*x2*y1 + b3*c2*x2*y1 + b1*c1*c3*x2*y1 + b2*c1*c3*x2*y1 + b3*c1*c3*x2*y1 + c2*c3*x2*y1 + c1*c2*c3*x2*y1 + b1*b2*c1*x3*y1 + b2*b3*c1*x3*y1 + b1*b3*c2*x3*y1 + b2*b3*c2*x3*y1 + b1*b2*c1*c2*x3*y1 + b1*b3*c1*c2*x3*y1 + b1*c2*c3*x3*y1 + b2*c2*c3*x3*y1 + b3*c2*c3*x3*y1 + b1*c1*c2*c3*x3*y1 + b2*c1*c2*c3*x3*y1 + b3*c1*c2*c3*x3*y1 + a1*b1*b3*y2 + a2*b1*b3*y2 + a3*b1*b3*y2 + a1*b2*b3*y2 + a3*b1*b2*b3*y2 + a3*b3*c1*y2 + b2*b3*c1*y2 + b1*b2*b3*c1*y2 + a3*b1*b2*c2*y2 + a1*b3*c2*y2 + b1*b3*c2*y2 + a2*b1*b3*c2*y2 + a3*b1*b3*c2*y2 + b1*b2*b3*c2*y2 + a3*c1*c2*y2 + a2*b3*c1*c2*y2 + b1*b3*c1*c2*y2 + a2*b1*b3*c1*c2*y2 + b2*b3*c1*c2*y2 + a2*c1*c3*y2 + b1*b2*c1*c3*y2 + a2*b1*b2*c1*c3*y2 + a3*b3*c1*c3*y2 + b1*b3*c1*c3*y2 + a2*b1*b3*c1*c3*y2 + a2*b1*c2*c3*y2 + b1*b2*c2*c3*y2 + b1*b2*b3*c2*c3*y2 + c1*c2*c3*y2 + a2*c1*c2*c3*y2 + b1*b2*c1*c2*c3*y2 + b1*b2*b3*c1*c2*c3*y2 + b1*b3*d1*y2 + b3*c1*d1*y2 + b1*b3*c1*d1*y2 + b2*b3*c1*d1*y2 + b1*b3*c2*d1*y2 + b3*c1*c2*d1*y2 + b1*b3*c1*c2*d1*y2 + b1*b2*c1*c3*d1*y2 + b3*c1*c3*d1*y2 + b1*b3*c1*c3*d1*y2 + b1*c2*c3*d1*y2 + c1*c2*c3*d1*y2 + b1*c1*c2*c3*d1*y2 + b2*c1*c2*c3*d1*y2 + b3*c1*c2*c3*d1*y2 + b1*b3*c1*c2*c3*d1*y2 + b2*b3*c1*c2*c3*d1*y2 + b1*b3*d2*y2 + b1*b2*b3*d2*y2 + b3*c1*d2*y2 + b1*b3*c1*d2*y2 + b2*b3*c1*d2*y2 + b1*b3*c2*d2*y2 + b1*b3*c1*c2*d2*y2 + b2*b3*c1*c2*d2*y2 + b3*c1*c3*d2*y2 + b1*b3*c1*c3*d2*y2 + b2*b3*c1*c3*d2*y2 + b1*c2*c3*d2*y2 + b1*b2*c2*c3*d2*y2 + b1*b3*c2*c3*d2*y2 + c1*c2*c3*d2*y2 + b1*c1*c2*c3*d2*y2 + b2*c1*c2*c3*d2*y2 + b3*c1*c2*c3*d2*y2 + a1*d3*y2 + b1*c1*d3*y2 + b3*x1*y2 + b3*c1*x1*y2 + b3*c2*x1*y2 + b1*c1*c3*x1*y2 + b2*c1*c3*x1*y2 + b3*c1*c3*x1*y2 + c2*c3*x1*y2 + c1*c2*c3*x1*y2 + b1*b3*x2*y2 + b3*c1*c2*x2*y2 + c1*c3*x2*y2 + b1*c1*c3*x2*y2 + b2*c1*c3*x2*y2 + b3*c1*c3*x2*y2 + a1*x3*y2 + b1*b2*x3*y2 + b1*b3*x3*y2 + b1*c1*x3*y2 + b3*c1*x3*y2 + b1*b3*c1*x3*y2 + b2*b3*c1*x3*y2 + b1*b2*c2*x3*y2 + b1*c1*c2*x3*y2 + b2*c1*c2*x3*y2 + b1*b3*c1*c2*x3*y2 + b2*b3*c1*c2*x3*y2 + b1*c1*c3*x3*y2 + b2*c1*c3*x3*y2 + b1*b3*c1*c3*x3*y2 + b2*b3*c1*c3*x3*y2 + b1*c2*c3*x3*y2 + b1*c1*c2*c3*x3*y2 + b2*c1*c2*c3*x3*y2 + b3*c1*y1*y2 + b3*c1*c2*y1*y2 + c1*c3*y1*y2 + c1*c2*c3*y1*y2 + a1*b1*b2*y3 + a2*b1*b3*y3 + a3*b1*b2*b3*y3 + a2*b1*c1*y3 + a2*b2*c1*y3 + b1*b2*c1*y3 + a2*b3*c1*y3 + b1*b2*c2*y3 + a3*b1*b2*c2*y3 + a1*b3*c2*y3 + a3*b1*b3*c2*y3 + a3*c1*c2*y3 + b1*c1*c2*y3 + a2*b1*c1*c2*y3 + a2*b2*c1*c2*y3 + a3*b1*b2*c1*c2*y3 + a2*b3*c1*c2*y3 + b1*b3*c1*c2*y3 + a3*b2*b3*c1*c2*y3 + a2*b1*c1*c3*y3 + a2*b2*c1*c3*y3 + a2*b3*c1*c3*y3 + b1*b2*b3*c1*c3*y3 + b1*c2*c3*y3 + a3*b1*b2*c2*c3*y3 + b2*c1*c2*c3*y3 + b1*b2*c1*c2*c3*y3 + b3*c1*c2*c3*y3 + b1*b3*c1*c2*c3*y3 + c2*d1*y3 + c1*c2*d1*y3 + b1*c1*c2*d1*y3 + b2*c1*c2*d1*y3 + b1*b2*c1*c2*d1*y3 + b3*c1*c2*d1*y3 + b1*b3*c1*c2*d1*y3 + b1*b2*c2*c3*d1*y3 + b1*b3*c2*c3*d1*y3 + c1*c2*c3*d1*y3 + b1*c1*c2*c3*d1*y3 + b2*c1*c2*c3*d1*y3 + b3*c1*c2*c3*d1*y3 + b1*b2*b3*d2*y3 + b1*c2*d2*y3 + b1*b3*c1*c2*d2*y3 + b2*b3*c1*c2*d2*y3 + b1*c2*c3*d2*y3 + b1*b2*c2*c3*d2*y3 + c1*c2*c3*d2*y3 + b1*c1*c2*c3*d2*y3 + b2*c1*c2*c3*d2*y3 + b3*c1*c2*c3*d2*y3 + b1*c2*d3*y3 + c1*c2*x1*y3 + b1*b2*c2*c3*x1*y3 + b1*b3*c2*c3*x1*y3 + b2*c1*c2*c3*x1*y3 + b3*c1*c2*c3*x1*y3 + a1*x2*y3 + b1*x2*y3 + b1*b2*x2*y3 + b1*b3*x2*y3 + b1*c1*x2*y3 + b1*b2*c2*x2*y3 + b1*b3*c2*x2*y3 + b1*c1*c3*x2*y3 + b2*c1*c3*x2*y3 + b3*c1*c3*x2*y3 + b1*c2*c3*x2*y3 + b1*b2*x3*y3 + c1*c2*x3*y3 + b1*c1*c2*x3*y3 + b2*c1*c2*x3*y3 + b3*c1*c2*x3*y3 + b1*c2*c3*x3*y3 + b1*c1*c2*y1*y3 + b2*c1*c2*y1*y3 + b1*b2*c1*c2*y1*y3 + b3*c1*c2*y1*y3 + b1*b3*c1*c2*y1*y3 + b1*c1*c2*c3*y1*y3 + b2*c1*c2*c3*y1*y3 + b3*c1*c2*c3*y1*y3 + a1*y2*y3 + b1*c1*y2*y3 + b1*b2*c2*y2*y3 + b1*b3*c2*y2*y3 + c1*c2*y2*y3 + b1*c1*c2*y2*y3 + b2*c1*c2*y2*y3 + b3*c1*c2*y2*y3 + b1*c1*c3*y2*y3 + b2*c1*c3*y2*y3 + b3*c1*c3*y2*y3 + a3*b1*b2*b3*c1*z1 + b3*c1*c2*z1 + a3*b1*b2*b3*c1*c2*z1 + b1*b2*c3*z1 + a2*b1*b2*c3*z1 + a2*b1*b2*b3*c3*z1 + a2*b1*b2*c1*c3*z1 + a2*b1*b2*b3*c1*c3*z1 + a3*b1*b2*b3*c1*c3*z1 + a2*b1*b2*c2*c3*z1 + b3*c2*c3*z1 + a2*b1*b2*b3*c2*c3*z1 + c1*c2*c3*z1 + a2*c1*c2*c3*z1 + a2*b1*c1*c2*c3*z1 + a3*b1*c1*c2*c3*z1 + b2*c1*c2*c3*z1 + a2*b2*c1*c2*c3*z1 + b1*b2*c1*c2*c3*z1 + a3*b1*b2*c1*c2*c3*z1 + b3*c1*c2*c3*z1 + a2*b3*c1*c2*c3*z1 + a2*b1*b3*c1*c2*c3*z1 + a3*b1*b3*c1*c2*c3*z1 + b2*b3*c1*c2*c3*z1 + a2*b2*b3*c1*c2*c3*z1 + b1*b2*c3*d1*z1 + b1*b2*b3*c3*d1*z1 + b1*b2*c1*c3*d1*z1 + b1*b2*b3*c1*c3*d1*z1 + b1*b2*c2*c3*d1*z1 + b1*b2*b3*c2*c3*d1*z1 + c1*c2*c3*d1*z1 + b1*c1*c2*c3*d1*z1 + b2*c1*c2*c3*d1*z1 + b3*c1*c2*c3*d1*z1 + b1*b3*c1*c2*c3*d1*z1 + b2*b3*c1*c2*c3*d1*z1 + b1*b2*b3*c1*d2*z1 + b1*b2*b3*c1*c2*d2*z1 + b1*b2*b3*c1*c3*d2*z1 + b1*c1*c2*c3*d2*z1 + b1*b2*c1*c2*c3*d2*z1 + b1*b3*c1*c2*c3*d2*z1 + b3*c2*x1*z1 + b1*b3*c2*x1*z1 + b3*c1*c2*x1*z1 + b1*b3*c1*c2*x1*z1 + b1*b2*c3*x1*z1 + b2*b3*c3*x1*z1 + b1*b2*c1*c3*x1*z1 + b2*b3*c1*c3*x1*z1 + c2*c3*x1*z1 + b1*c2*c3*x1*z1 + b2*c2*c3*x1*z1 + b3*c2*c3*x1*z1 + b1*b3*c2*c3*x1*z1 + b2*b3*c2*c3*x1*z1 + b1*b3*c1*x2*z1 + b1*b3*c1*c2*x2*z1 + b1*c3*x2*z1 + b2*c3*x2*z1 + b3*c3*x2*z1 + b1*b3*c3*x2*z1 + b2*b3*c3*x2*z1 + c1*c3*x2*z1 + b2*c1*c3*x2*z1 + b1*b2*c1*c3*x2*z1 + b3*c1*c3*x2*z1 + b2*b3*c1*c3*x2*z1 + c2*c3*x2*z1 + b1*c2*c3*x2*z1 + b2*c2*c3*x2*z1 + b3*c2*c3*x2*z1 + b1*b3*c2*c3*x2*z1 + b2*b3*c2*c3*x2*z1 + c1*c2*c3*x2*z1 + b1*c1*c2*c3*x2*z1 + b2*c1*c2*c3*x2*z1 + b3*c1*c2*c3*x2*z1 + b1*b3*c1*c2*c3*x2*z1 + b2*b3*c1*c2*c3*x2*z1 + b2*c1*x3*z1 + b1*b2*c1*x3*z1 + b2*b3*c1*x3*z1 + b1*c2*x3*z1 + b2*c2*x3*z1 + b1*b3*c2*x3*z1 + b2*b3*c2*x3*z1 + b1*c1*c2*x3*z1 + b1*b2*c1*c2*x3*z1 + b1*b3*c1*c2*x3*z1 + b2*c1*c3*x3*z1 + b1*b2*c1*c3*x3*z1 + b2*b3*c1*c3*x3*z1 + b1*c2*c3*x3*z1 + b2*c2*c3*x3*z1 + b1*b3*c2*c3*x3*z1 + b2*b3*c2*c3*x3*z1 + b1*c1*c2*c3*x3*z1 + b1*b2*c1*c2*c3*x3*z1 + b1*b3*c1*c2*c3*x3*z1 + c3*y2*z1 + c1*c2*c3*y2*z1 + b1*c1*c2*c3*y2*z1 + b2*c1*c2*c3*y2*z1 + b3*c1*c2*c3*y2*z1 + b1*b3*c1*c2*c3*y2*z1 + b2*b3*c1*c2*c3*y2*z1 + b1*c1*c2*c3*y3*z1 + b1*b2*c1*c2*c3*y3*z1 + b1*b3*c1*c2*c3*y3*z1 + a1*b3*z2 + b3*c1*z2 + b1*b3*c1*z2 + a3*b1*b2*c2*z2 + a2*b1*b3*c2*z2 + a3*b1*b3*c2*z2 + b3*c1*c2*z2 + b1*b2*c3*z2 + a3*b1*b2*c3*z2 + a2*b1*b3*c3*z2 + a3*b1*b3*c3*z2 + a2*b1*b2*b3*c3*z2 + b1*c1*c3*z2 + a2*b1*b2*c1*c3*z2 + a2*b1*b2*b3*c1*c3*z2 + a2*b1*b2*c2*c3*z2 + a2*b1*b2*b3*c2*c3*z2 + c1*c2*c3*z2 + a2*c1*c2*c3*z2 + b1*c1*c2*c3*z2 + a2*b1*c1*c2*c3*z2 + b2*c1*c2*c3*z2 + a2*b2*c1*c2*c3*z2 + b3*c1*c2*c3*z2 + a2*b3*c1*c2*c3*z2 + b1*b3*c1*c2*c3*z2 + a2*b1*b3*c1*c2*c3*z2 + b2*b3*c1*c2*c3*z2 + a2*b2*b3*c1*c2*c3*z2 + b1*b2*c3*d1*z2 + b1*b2*b3*c3*d1*z2 + b1*b2*c1*c3*d1*z2 + b1*b2*b3*c1*c3*d1*z2 + b1*b2*c2*c3*d1*z2 + b1*b2*b3*c2*c3*d1*z2 + c1*c2*c3*d1*z2 + b1*c1*c2*c3*d1*z2 + b2*c1*c2*c3*d1*z2 + b3*c1*c2*c3*d1*z2 + b1*b3*c1*c2*c3*d1*z2 + b2*b3*c1*c2*c3*d1*z2 + b1*c3*x1*z2 + b2*c3*x1*z2 + b3*c3*x1*z2 + b1*b3*c3*x1*z2 + b2*b3*c3*x1*z2 + c1*c3*x1*z2 + b1*c1*c3*x1*z2 + b2*c1*c3*x1*z2 + b3*c1*c3*x1*z2 + b1*b3*c1*c3*x1*z2 + b2*b3*c1*c3*x1*z2 + c2*c3*x1*z2 + b1*c2*c3*x1*z2 + b2*c2*c3*x1*z2 + b3*c2*c3*x1*z2 + b1*b3*c2*c3*x1*z2 + b2*b3*c2*c3*x1*z2 + b1*b3*c2*x2*z2 + b1*c3*x2*z2 + b1*b2*c3*x2*z2 + c1*c3*x2*z2 + b1*c1*c3*x2*z2 + b2*c1*c3*x2*z2 + b3*c1*c3*x2*z2 + b1*b3*c1*c3*x2*z2 + b2*b3*c1*c3*x2*z2 + b1*c2*c3*x2*z2 + b1*b3*c2*c3*x2*z2 + c1*c2*c3*x2*z2 + b1*c1*c2*c3*x2*z2 + b2*c1*c2*c3*x2*z2 + b3*c1*c2*c3*x2*z2 + b1*b3*c1*c2*c3*x2*z2 + b2*b3*c1*c2*c3*x2*z2 + b1*c1*x3*z2 + b2*c1*x3*z2 + b1*b3*c1*x3*z2 + b2*b3*c1*x3*z2 + b1*c2*x3*z2 + b1*b2*c2*x3*z2 + b1*b2*c3*x3*z2 + b1*b3*c3*x3*z2 + b1*c1*c3*x3*z2 + b2*c1*c3*x3*z2 + b1*b3*c1*c3*x3*z2 + b2*b3*c1*c3*x3*z2 + b1*c2*c3*x3*z2 + b1*b3*c2*c3*x3*z2 + c3*y1*z2 + b1*b3*c2*y2*z2 + b1*b2*c3*y2*z2 + b1*b3*c3*y2*z2 + c1*c2*c3*y2*z2 + b1*c1*c2*c3*y2*z2 + b2*c1*c2*c3*y2*z2 + b3*c1*c2*c3*y2*z2 + b1*b3*c1*c2*c3*y2*z2 + b2*b3*c1*c2*c3*y2*z2 + b1*b2*c2*y3*z2 + b1*b3*c2*y3*z2 + b1*b2*c3*y3*z2 + b1*b3*c3*y3*z2 + a2*b1*z3 + a2*b1*b2*c2*z3 + a3*b1*b2*c2*z3 + b1*b3*c2*z3 + a2*b1*b3*c2*z3 + a3*b1*b3*c2*z3 + b1*c1*c2*z3 + b2*c1*c2*z3 + b3*c1*c2*z3 + a2*b1*b2*c3*z3 + a3*b1*b2*c3*z3 + a2*b1*b3*c3*z3 + b1*c2*c3*z3 + b1*b2*c2*x2*z3 + b1*b3*c2*x2*z3 + b1*b2*c3*x2*z3 + b1*b3*c3*x2*z3 + b1*b2*c2*x3*z3 + b1*b3*c2*x3*z3 + b1*b2*c3*x3*z3 + b1*b2*c2*y2*z3 + b1*b3*c2*y2*z3 + b1*b2*c3*y2*z3 + b1*b3*c3*y2*z3 + b1*b2*c2*y3*z3 + b1*b3*c2*y3*z3 + b1*b2*c3*y3*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 136 ( P4_2/mnm)
#####################################################################
Aiin136:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin136:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin136:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Bdeltain136:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bcxyin136:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a2*b1*(1 + b2) + b2*(a1 + b1*(d1 + d2)) + b2*x1 + (a2 + b2*c1 + d2)*(x1 + y1);
end;
#####################################################################
Bpxyzin136:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return b1*b2*d1 + b1*b2*d2 + d2*x1 + d2*y1 + b2*z1;
end;
#####################################################################
Bmzin136:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a2*d1 + b2*c2*d1 + c2*z1;
end;
#####################################################################
CGAP1in136:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3,d1,d2,d3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];d1:=g1[7];d2:=g2[7];d3:=g3[7];
return a1*a2*a3 + a1*a3*b2 + a3*b1*b2 + a2*a3*b1*b2 + a3*b1*b2*b3 + a2*a3*b1*c1 + a3*b2*c1 + a1*a3*c2 + a2*a3*b1*c2 + a3*b1*b2*c2 + a2*a3*b1*b2*c2 + a1*a2*b3*c2 + a1*a3*b3*c2 + a1*b2*b3*c2 + a2*b1*b2*b3*c2 + a3*b1*b2*b3*c2 + a2*b1*b3*c1*c2 + a3*b1*b3*c1*c2 + b1*b2*b3*c1*c2 + a3*b1*b2*c1*c3 + a2*b1*b2*b3*c2*c3 + b1*b3*c1*c2*c3 + a3*b2*d1 + a1*a3*b2*d1 + a2*a3*b2*d1 + a1*b2*b3*d1 + a2*b2*b3*d1 + a3*b2*b3*d1 + b2*b3*c1*d1 + b1*b2*b3*c1*d1 + a3*c2*d1 + a3*b1*b2*c2*d1 + a2*b1*b3*c2*d1 + a3*b1*b3*c2*d1 + b2*b3*c2*d1 + a1*b2*b3*c2*d1 + a2*b2*b3*c2*d1 + a3*b2*b3*c2*d1 + b1*b2*b3*c2*d1 + a1*b2*c3*d1 + a2*b2*c3*d1 + b1*b2*c3*d1 + a2*b1*b2*c3*d1 + a3*b1*b2*c3*d1 + b1*b2*b3*c3*d1 + b2*c1*c3*d1 + b1*b2*c1*c3*d1 + b1*b2*c2*c3*d1 + b3*c2*c3*d1 + b1*b3*c2*c3*d1 + a1*a3*b2*d2 + a3*b1*b2*d2 + a1*b2*b3*d2 + b1*b2*b3*d2 + b1*b2*b3*c1*d2 + a2*b1*b3*c2*d2 + a3*b1*b3*c2*d2 + a1*b2*b3*c2*d2 + b1*b2*b3*c2*d2 + a1*b2*c3*d2 + b1*b2*c3*d2 + b1*b2*b3*c3*d2 + b1*b3*c2*c3*d2 + b1*b2*b3*c2*c3*d2 + a1*a3*b2*d3 + a2*b1*b2*d3 + a3*b1*b2*d3 + a1*b2*b3*d3 + b1*b2*b3*d3 + a2*b1*b2*b3*d3 + a3*b1*b2*b3*d3 + b2*b3*c1*d3 + b1*b2*b3*c1*d3 + a1*b2*c2*d3 + b1*b2*c2*d3 + a1*b2*b3*c2*d3 + b1*b2*b3*c2*d3 + a1*b2*c3*d3 + b1*b2*c3*d3 + b2*b3*c1*c3*d3 + a2*a3*x1 + a3*b2*c1*x1 + a3*c2*x1 + a3*b1*c2*x1 + a3*b2*c2*x1 + a2*b3*c2*x1 + a3*b3*c2*x1 + b2*b3*c2*x1 + a3*b1*c1*c2*x1 + a3*b2*c1*c2*x1 + b1*b2*c3*x1 + b2*b3*c3*x1 + b2*b3*c1*c3*x1 + a2*b1*c2*c3*x1 + a3*b1*c2*c3*x1 + a3*b2*c2*c3*x1 + b1*b2*c2*c3*x1 + b3*c2*c3*x1 + b2*c1*c2*c3*x1 + b1*b2*c1*c2*c3*x1 + b3*c1*c2*c3*x1 + b1*b3*c1*c2*c3*x1 + b2*b3*c1*c2*c3*x1 + a3*b2*d1*x1 + b2*b3*c1*d1*x1 + b3*c2*d1*x1 + b2*b3*c2*d1*x1 + b3*c1*c2*d1*x1 + b2*c1*c3*d1*x1 + b3*c2*c3*d1*x1 + b2*b3*c1*d2*x1 + b3*c2*d2*x1 + b3*c1*c2*d2*x1 + b3*c2*c3*d2*x1 + b1*b2*d3*x1 + b2*b3*d3*x1 + b1*b3*x2 + a3*b1*c2*x2 + b1*b2*c3*x2 + b1*c1*c3*x2 + a2*b1*c2*c3*x2 + a3*b1*c2*c3*x2 + b1*b2*c2*c3*x2 + b1*c1*c2*c3*x2 + a3*d1*x2 + a3*b2*d1*x2 + b2*b3*c1*d1*x2 + b2*b3*c2*d1*x2 + b3*c2*c3*d1*x2 + b2*b3*c1*d2*x2 + b1*b2*d3*x2 + b1*b2*c1*d3*x2 + b2*b3*c1*d3*x2 + c1*c3*x1*x2 + c1*c2*c3*x1*x2 + b1*b2*c2*x3 + b1*b3*c2*x3 + a2*b1*c3*x3 + a2*b1*c2*c3*x3 + a3*b1*c2*c3*x3 + b1*b2*c2*c3*x3 + b1*b3*c2*c3*x3 + b1*b2*d1*x3 + b1*b2*c1*d1*x3 + b2*b3*c1*d1*x3 + a1*c2*d1*x3 + a2*c2*d1*x3 + a3*c2*d1*x3 + b1*c2*d1*x3 + b2*c2*d1*x3 + b1*b2*c2*d1*x3 + b2*b3*c2*d1*x3 + b2*c3*d1*x3 + b2*c2*c3*d1*x3 + b3*c2*c3*d1*x3 + b1*b2*d2*x3 + b1*b2*c1*d2*x3 + b2*b3*c1*d2*x3 + a1*c2*d2*x3 + b1*c2*d2*x3 + b1*b2*c2*d2*x3 + b1*b2*d3*x3 + b1*b2*c1*d3*x3 + b2*b3*c1*d3*x3 + a1*c2*d3*x3 + b1*c2*d3*x3 + b1*b2*c2*d3*x3 + c1*c2*x1*x3 + c1*c2*c3*x1*x3 + a2*a3*y1 + a3*b2*y1 + a3*b2*c1*y1 + a3*c2*y1 + a2*b3*c2*y1 + a3*b3*c2*y1 + b2*b3*c2*y1 + a3*b1*c1*c2*y1 + a3*b2*c1*c2*y1 + b1*b2*c3*y1 + b2*b3*c1*c3*y1 + b1*c2*c3*y1 + a2*b1*c2*c3*y1 + a3*b1*c2*c3*y1 + b2*c2*c3*y1 + a3*b2*c2*c3*y1 + b1*b3*c2*c3*y1 + b2*b3*c2*c3*y1 + b2*c1*c2*c3*y1 + b1*b2*c1*c2*c3*y1 + b3*c1*c2*c3*y1 + b1*b3*c1*c2*c3*y1 + b2*b3*c1*c2*c3*y1 + a3*b2*d1*y1 + b2*b3*c1*d1*y1 + b2*b3*c2*d1*y1 + b3*c1*c2*d1*y1 + b2*c3*d1*y1 + b2*c1*c3*d1*y1 + b3*c2*c3*d1*y1 + b2*b3*c1*d2*y1 + b3*c1*c2*d2*y1 + b3*c2*c3*d2*y1 + c2*c3*x1*y1 + c3*x2*y1 + c1*c3*x2*y1 + c2*c3*x2*y1 + c1*c2*c3*x2*y1 + c2*x3*y1 + c1*c2*x3*y1 + c2*c3*x3*y1 + c1*c2*c3*x3*y1 + b1*b2*c3*y2 + b1*c2*c3*y2 + a2*b1*c2*c3*y2 + a3*b1*c2*c3*y2 + b1*b3*c2*c3*y2 + b1*c1*c2*c3*y2 + a3*b2*d1*y2 + b2*b3*c1*d1*y2 + b2*b3*c2*d1*y2 + b2*c3*d1*y2 + b3*c2*c3*d1*y2 + b2*b3*c1*d2*y2 + a1*d3*y2 + b1*d3*y2 + b1*b2*c1*d3*y2 + b2*b3*c1*d3*y2 + c1*c3*x1*y2 + c2*c3*x1*y2 + c1*c2*c3*x1*y2 + c3*y1*y2 + c1*c3*y1*y2 + c1*c2*c3*y1*y2 + a2*b1*c2*y3 + a3*b1*c2*y3 + b1*b3*c2*y3 + a2*b1*c3*y3 + b2*c1*c3*y3 + a2*b1*c2*c3*y3 + a3*b1*c2*c3*y3 + b2*c1*d1*y3 + b1*b2*c1*d1*y3 + b2*b3*c1*d1*y3 + a1*c2*d1*y3 + a2*c2*d1*y3 + a3*c2*d1*y3 + b1*c2*d1*y3 + b1*b2*c2*d1*y3 + b2*b3*c2*d1*y3 + b2*c2*c3*d1*y3 + b3*c2*c3*d1*y3 + b2*c1*d2*y3 + b1*b2*c1*d2*y3 + b2*b3*c1*d2*y3 + a1*c2*d2*y3 + b1*c2*d2*y3 + b1*b2*c2*d2*y3 + b2*c1*d3*y3 + b1*b2*c1*d3*y3 + b2*b3*c1*d3*y3 + a1*c2*d3*y3 + b1*c2*d3*y3 + b1*b2*c2*d3*y3 + c2*c3*x1*y3 + c1*c2*c3*x1*y3 + c1*c2*c3*y1*y3 + b2*b3*c1*z1 + a3*b1*c2*z1 + a3*b2*c2*z1 + b2*b3*c2*z1 + b2*c3*z1 + b2*c1*c3*z1 + b1*b2*c2*c3*z1 + b3*c2*c3*z1 + b1*b3*c2*c3*z1 + b2*b3*c2*c3*z1 + b3*c2*d1*z1 + b2*c3*d1*z1 + b3*c2*d2*z1 + b1*b2*d3*z1 + b2*b3*d3*z1 + c2*c3*x1*z1 + a3*x2*z1 + b3*c2*x2*z1 + c2*c3*x2*z1 + b2*x3*z1 + c2*x3*z1 + b2*c2*x3*z1 + b3*c2*x3*z1 + c2*c3*x3*z1 + c2*c3*y1*z1 + a3*y2*z1 + b3*c2*y2*z1 + c2*c3*y2*z1 + b2*c2*y3*z1 + b3*c2*y3*z1 + c2*c3*y3*z1 + d3*(c1*c2 + a2*d1 + b2*c2*d1 + c2*z1) + a3*b1*z2 + b2*b3*c1*z2 + a2*b1*c3*z2 + a3*b1*c3*z2 + b2*c1*c3*z2 + b1*b2*c2*c3*z2 + a3*d1*z2 + b2*c3*d1*z2 + a1*d3*z2 + b1*d3*z2 + b1*b2*d3*z2 + a3*x1*z2 + b3*c2*x1*z2 + c1*c3*x1*z2 + c2*c3*x1*z2 + a3*y1*z2 + b3*c2*y1*z2 + c3*y1*z2 + c1*c3*y1*z2 + c2*c3*y1*z2 + c3*z1*z2 + a2*b1*b2*z3 + a3*b1*b2*z3 + b2*b3*c1*z3 + b1*b2*c2*z3 + b1*b2*c3*z3 + b1*b2*d1*z3 + b2*c1*d1*z3 + b2*c2*d1*z3 + b2*c3*d1*z3 + b1*b2*d2*z3 + b2*c1*d2*z3 + b1*b2*d3*z3 + b2*c1*d3*z3 + b2*x1*z3 + b2*c1*x1*z3 + b3*c2*x1*z3 + b2*c1*y1*z3 + b3*c2*y1*z3;
end;
#####################################################################
CGAP2in136:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3,d1,d2,d3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];d1:=g1[7];d2:=g2[7];d3:=g3[7];
return a1*b2*b3*d1 + a2*b2*b3*d1 + b2*b3*c1*d1 + a3*c2*d1 + a3*b2*c2*d1 + a1*b2*b3*c2*d1 + a2*b2*b3*c2*d1 + b1*b2*c3*d1 + a1*a3*b2*d2 + a3*b2*c1*d2 + a1*b2*b3*c2*d2 + b1*b2*c3*d2 + a1*a2*b1*d3 + a1*a3*b2*d3 + a1*b1*b2*d3 + a1*b2*b3*d3 + a2*c1*d3 + a3*b2*c1*d3 + a1*b1*b2*c1*d3 + b1*b2*c2*d3 + a1*b2*b3*c2*d3 + b1*b2*c3*d3 + a3*b2*d1*x1 + b2*b3*d1*x1 + b3*c2*d1*x1 + b2*b3*c2*d1*x1 + b3*d2*x1 + a1*b3*d2*x1 + a2*b3*d2*x1 + a3*b3*d2*x1 + b1*b3*d2*x1 + a1*b1*b3*d2*x1 + a3*b2*b3*d2*x1 + b2*b3*c2*d2*x1 + a1*b2*d3*x1 + a2*b2*d3*x1 + b1*b2*d3*x1 + b2*b3*d3*x1 + b2*b3*c1*d3*x1 + a3*d1*x2 + a3*b2*d1*x2 + a1*b3*d1*x2 + a2*b3*d1*x2 + a3*b3*d1*x2 + a1*b1*b3*d1*x2 + b2*b3*d1*x2 + a3*b2*b3*d1*x2 + b2*b3*c2*d1*x2 + a1*b3*d2*x2 + a1*b1*d3*x2 + a1*b2*d3*x2 + b1*b2*d3*x2 + a1*c1*d3*x2 + a2*c1*d3*x2 + b2*c1*d3*x2 + b1*b2*c1*d3*x2 + b3*d1*x1*x2 + b3*c1*d2*x1*x2 + d3*x1*x2 + a3*b2*d1*x3 + b1*b2*d1*x3 + a1*b1*b2*d1*x3 + a2*b1*b2*d1*x3 + b2*b3*d1*x3 + a1*b2*b3*d1*x3 + a2*b2*b3*d1*x3 + b2*b3*c1*d1*x3 + a1*c2*d1*x3 + a2*c2*d1*x3 + a3*c2*d1*x3 + a3*b2*c2*d1*x3 + b1*b2*c2*d1*x3 + b2*b3*c2*d1*x3 + a1*b1*b3*d2*x3 + a1*b2*b3*d2*x3 + b2*b3*c1*d2*x3 + a1*c2*d2*x3 + a2*b1*d3*x3 + b2*c1*d3*x3 + a1*c2*d3*x3 + b1*b2*c2*d3*x3 + b2*d1*x1*x3 + b2*c1*d1*x1*x3 + c2*d1*x1*x3 + b2*c2*d1*x1*x3 + d2*x1*x3 + b3*d2*x1*x3 + c1*d2*x1*x3 + b3*c1*d2*x1*x3 + b3*c2*d2*x1*x3 + c2*d3*x1*x3 + b3*d1*x2*x3 + b3*c1*d1*x2*x3 + c2*d1*x2*x3 + b3*c2*d1*x2*x3 + b3*c1*d2*x2*x3 + b3*d2*y1 + a1*b3*d2*y1 + a2*b3*d2*y1 + a3*b3*d2*y1 + a1*b1*b3*d2*y1 + a3*b2*b3*d2*y1 + b2*b3*c2*d2*y1 + a2*d3*y1 + a1*b2*d3*y1 + a2*b2*d3*y1 + b2*c1*d3*y1 + b2*b3*c1*d3*y1 + b3*d2*x1*y1 + b3*d2*x2*y1 + b3*c1*d2*x2*y1 + d3*x2*y1 + b2*d1*x3*y1 + b2*c1*d1*x3*y1 + b2*c2*d1*x3*y1 + b3*d2*x3*y1 + c1*d2*x3*y1 + b3*c1*d2*x3*y1 + b3*c2*d2*x3*y1 + c2*d3*x3*y1 + a1*b3*d1*y2 + a2*b3*d1*y2 + a3*b3*d1*y2 + a1*b1*b3*d1*y2 + a3*b2*b3*d1*y2 + a1*b3*d2*y2 + a1*b1*d3*y2 + a1*b2*d3*y2 + a1*c1*d3*y2 + a2*c1*d3*y2 + b1*b2*c1*d3*y2 + b3*d1*x1*y2 + b3*d2*x1*y2 + b3*c1*d2*x1*y2 + b3*d1*x2*y2 + b3*d1*x3*y2 + b3*c1*d1*x3*y2 + b3*c2*d1*x3*y2 + b3*c1*d2*x3*y2 + b3*c1*d2*y1*y2 + a2*b1*d1*y3 + a1*b1*b2*d1*y3 + a2*b1*b2*d1*y3 + a1*b2*b3*d1*y3 + a2*b2*b3*d1*y3 + b1*b2*c1*d1*y3 + b2*b3*c1*d1*y3 + a1*c2*d1*y3 + a2*c2*d1*y3 + a3*c2*d1*y3 + a3*b2*c2*d1*y3 + b1*b2*c2*d1*y3 + a2*b1*d2*y3 + a1*b1*b3*d2*y3 + a1*b2*b3*d2*y3 + b1*b2*c1*d2*y3 + b2*b3*c1*d2*y3 + a1*c2*d2*y3 + a2*b1*d3*y3 + a1*c2*d3*y3 + b1*b2*c2*d3*y3 + b2*c1*d1*x1*y3 + c2*d1*x1*y3 + b2*c2*d1*x1*y3 + c1*d2*x1*y3 + b3*c1*d2*x1*y3 + b3*c2*d2*x1*y3 + c2*d3*x1*y3 + c1*d1*x2*y3 + b3*c1*d1*x2*y3 + c2*d1*x2*y3 + b3*c2*d1*x2*y3 + c1*d2*x2*y3 + b3*c1*d2*x2*y3 + c2*d1*x3*y3 + b2*c1*d1*y1*y3 + b2*c2*d1*y1*y3 + c1*d2*y1*y3 + b3*c1*d2*y1*y3 + b3*c2*d2*y1*y3 + c2*d3*y1*y3 + c1*d1*y2*y3 + b3*c1*d1*y2*y3 + b3*c2*d1*y2*y3 + c1*d2*y2*y3 + b3*c1*d2*y2*y3 + a2*b3*z1 + a1*b2*b3*z1 + a2*b2*b3*z1 + a3*b2*c1*z1 + b2*b3*c1*z1 + a3*c2*z1 + a1*b3*c2*z1 + a2*b3*c2*z1 + a3*b3*c2*z1 + b2*b3*c2*z1 + b1*b2*c3*z1 + b2*b3*c3*z1 + a3*b2*d1*z1 + b2*b3*c1*d1*z1 + b3*c2*d1*z1 + b2*c3*d1*z1 + b1*b2*c3*d1*z1 + b2*b3*c3*d1*z1 + b3*d2*z1 + a2*b3*d2*z1 + a3*b3*d2*z1 + a2*b1*b3*d2*z1 + a3*b1*b3*d2*z1 + b2*b3*d2*z1 + a2*b2*b3*d2*z1 + a3*b2*b3*d2*z1 + b3*c1*d2*z1 + b1*b3*c1*d2*z1 + b2*b3*c1*d2*z1 + b3*c2*d2*z1 + b2*b3*c2*d2*z1 + b1*b3*c3*d2*z1 + a2*d3*z1 + b1*b2*d3*z1 + b2*b3*d3*z1 + b2*c1*d3*z1 + a3*b2*x1*z1 + b2*b3*x1*z1 + b2*b3*c1*x1*z1 + b3*c2*x1*z1 + b2*b3*c2*x1*z1 + b3*d2*x1*z1 + a2*b3*x2*z1 + a3*b3*x2*z1 + b2*b3*x2*z1 + b3*d1*x2*z1 + b3*d2*x2*z1 + a2*b1*x3*z1 + b2*x3*z1 + a2*b2*x3*z1 + b1*b2*x3*z1 + a2*b3*x3*z1 + b2*b3*x3*z1 + b2*c2*x3*z1 + b1*b2*c2*x3*z1 + b2*b3*c2*x3*z1 + c2*d1*x3*z1 + d2*x3*z1 + a3*b2*y1*z1 + b2*b3*c1*y1*z1 + b3*c2*y1*z1 + b2*b3*c2*y1*z1 + b3*d2*y1*z1 + a2*b3*y2*z1 + a3*b3*y2*z1 + b3*d1*y2*z1 + b3*d2*y2*z1 + a2*b1*y3*z1 + a2*b2*y3*z1 + a2*b3*y3*z1 + b2*c2*y3*z1 + b1*b2*c2*y3*z1 + b2*b3*c2*y3*z1 + c2*d1*y3*z1 + a1*a3*z2 + a1*b2*b3*z2 + a3*b2*c1*z2 + b1*b3*c1*z2 + b2*b3*c1*z2 + b1*b3*c2*z2 + b1*b3*c3*z2 + a3*d1*z2 + a3*b2*d1*z2 + b3*c1*d1*z2 + b2*b3*c1*d1*z2 + b3*c2*d1*z2 + b1*c3*d1*z2 + b1*b2*c3*d1*z2 + b3*c3*d1*z2 + b2*b3*c3*d1*z2 + b3*c1*d2*z2 + b1*b3*c1*d2*z2 + b2*b3*c1*d2*z2 + b1*b3*c2*d2*z2 + b1*b3*c3*d2*z2 + b1*b2*d3*z2 + b2*c1*d3*z2 + a3*x1*z2 + a3*b2*x1*z2 + b2*b3*x1*z2 + b2*b3*c1*x1*z2 + b2*b3*c2*x1*z2 + b3*d2*x1*z2 + d3*x1*z2 + b3*d1*x2*z2 + a2*b1*x3*z2 + b1*b2*x3*z2 + b1*b2*c2*x3*z2 + c2*d1*x3*z2 + a3*y1*z2 + a3*b2*y1*z2 + b2*b3*c1*y1*z2 + b2*b3*c2*y1*z2 + b3*d2*y1*z2 + d3*y1*z2 + b3*d1*y2*z2 + a2*b1*y3*z2 + b1*b2*c2*y3*z2 + c2*d1*y3*z2 + a3*b1*z1*z2 + a3*b2*z1*z2 + a2*b3*z1*z2 + a3*b3*z1*z2 + b1*b3*c2*z1*z2 + b2*b3*c2*z1*z2 + b2*c3*z1*z2 + b3*c3*z1*z2 + a1*b1*b2*z3 + a2*b1*b2*z3 + a3*b1*b2*z3 + a1*b2*b3*z3 + b1*b2*c1*z3 + a2*b1*d1*z3 + a3*b1*b2*d1*z3 + a3*b2*b3*d1*z3 + b2*c1*d1*z3 + b2*b3*c1*d1*z3 + c2*d1*z3 + b2*c2*d1*z3 + b1*b2*c2*d1*z3 + b2*c3*d1*z3 + b1*b2*c3*d1*z3 + a2*b1*d2*z3 + b1*c1*d2*z3 + b2*c1*d2*z3 + b1*b2*c1*d2*z3 + b1*b3*c1*d2*z3 + b2*b3*c1*d2*z3 + b1*c2*d2*z3 + b1*b3*c2*d2*z3 + b1*c3*d2*z3 + b1*b3*c3*d2*z3 + b2*c1*d3*z3 + b2*x1*z3 + a1*b2*x1*z3 + a2*b2*x1*z3 + a3*b2*x1*z3 + b1*b2*x1*z3 + b2*b3*x1*z3 + b2*c1*x1*z3 + b2*b3*c1*x1*z3 + b2*b3*c2*x1*z3 + b2*d1*x1*z3 + d2*x1*z3 + b3*d2*x1*z3 + b1*x2*z3 + a1*b1*x2*z3 + a1*b2*x2*z3 + b1*b2*x2*z3 + b1*c1*x2*z3 + b1*b2*c1*x2*z3 + b3*d1*x2*z3 + c1*d1*x2*z3 + c1*d2*x2*z3 + a2*b1*x3*z3 + b1*b2*x3*z3 + b1*b2*c2*x3*z3 + c2*d1*x3*z3 + a1*b2*y1*z3 + a2*b2*y1*z3 + a3*b2*y1*z3 + b2*c1*y1*z3 + b2*b3*c1*y1*z3 + b2*b3*c2*y1*z3 + b2*d1*y1*z3 + b3*d2*y1*z3 + a1*b1*y2*z3 + a1*b2*y2*z3 + b1*c1*y2*z3 + b1*b2*c1*y2*z3 + b3*d1*y2*z3 + c1*d1*y2*z3 + c1*d2*y2*z3 + a2*b1*y3*z3 + b1*b2*c2*y3*z3 + c2*d1*y3*z3 + a2*b1*z1*z3 + a2*b2*z1*z3 + a2*b3*z1*z3 + b2*c2*z1*z3 + b1*b3*c2*z1*z3 + b2*b3*c2*z1*z3 + b2*c3*z1*z3 + d2*z1*z3 + a3*b1*z2*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 137 ( P4_2/nmc)
#####################################################################
#####################################################################
#Space Group No. 138 ( P4_2/ncm)
#####################################################################
Aiin138:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin138:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin138:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Bdeltain138:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bmzin138:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a2*d1 + b2*c2*d1 + c2*z1;
end;
#####################################################################
Bcxyin138:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a2*b1 + a2*b1*b2 + a2*d1 + a2*b2*d1 + a2*x1 + b2*x1 + b2*c1*x1 + a2*y1 + b2*c1*y1;
end;
#####################################################################
Bpxyzin138:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return b1*b2*d1 + b1*b2*d2 + d2*x1 + d2*y1 + b2*z1 + d2*z1;
end;
#####################################################################
#####################################################################
#Space Group No. 139 ( I4/mmm)
#####################################################################
Aiin139:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin139:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin139:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Axyzin139:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain139:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bphiin139:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return b2*y1 + (a2 + b2*c1)*(x1 + y1) + (a2 + a2*b1 + a1*b2 + a2*b2 + b1*b2*c1)*(x1 + y1 + z1);
end;
#####################################################################
Bxyzin139:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return (x1 + y1)*z2 + b1*((x1 + y1)*(x2 + y2) + (x1 + x2 + y1 + y2)*z2);
end;
#####################################################################
CGAPin139:=function(g1,g2,g3)
local x1,y1,z1,x2,y2,z2,x3,y3,z3,a1,a2,a3,b1,b2,b3,c1,c2,c3,d1,d2,d3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];x3:=g3[1];y3:=g3[2];z3:=g3[3];a1:=g1[4];a2:=g2[4];a3:=g3[4];b1:=g1[5];b2:=g2[5];b3:=g3[5];c1:=g1[6];c2:=g2[6];c3:=g3[6];d1:=g1[7];d2:=g2[7];d3:=g3[7];
return c2*d3*x1 + a1*a3*b1*x2 + a3*b1*c1*x2 + a3*d1*x2 + a3*b1*d1*x2 + b3*c1*d1*x2 + b3*c2*d1*x2 + b1*c3*d1*x2 + b3*c1*d2*x2 + 3*a1*d3*x2 + a1*c1*d3*x2 + b1*c1*d3*x2 + b2*c1*d3*x2 + b3*c1*d3*x2 + b1*c2*d3*x2 + c3*d1*x1*x2 + b1*c3*d1*x1*x2 + b3*d2*x1*x2 + d3*x1*x2 + b2*d3*x1*x2 + b3*d3*x1*x2 + c1*d3*x1*x2 + (a3*b1*x2*(1 + x2))/2 + (b1*c3*x2*(1 + x2))/2 + (b3*x1*x2*(1 + x2))/2 + (c3*x1*x2*(1 + x2))/2 + (b1*c3*x1*x2*(1 + x2))/2 + a2*d1*x3 + a2*b1*d1*x3 + a2*b2*d1*x3 + b1*c2*d1*x3 + 2*b2*c2*d1*x3 + b2*c3*d1*x3 + a2*b1*d2*x3 + b1*c2*d2*x3 + a1*a2*d3*x3 + a1*b2*d3*x3 + a2*c1*d3*x3 + a1*b2*c1*d3*x3 + a2*b2*c1*d3*x3 + a2*x1*x3 + a1*a2*x1*x3 + a1*b2*x1*x3 + a2*c1*x1*x3 + a1*b2*c1*x1*x3 + a2*b2*c1*x1*x3 + a2*c2*x1*x3 + a2*d1*x1*x3 + 2*b2*d1*x1*x3 + b2*c2*d1*x1*x3 + b2*c3*d1*x1*x3 + a2*d2*x1*x3 + 2*b2*d2*x1*x3 + b2*c2*d2*x1*x3 + b2*c3*d2*x1*x3 + a2*d3*x1*x3 + 2*b2*d3*x1*x3 + (3*a2*x1*(1 + x1)*x3)/2 + (a2*b2*x1*(1 + x1)*x3)/2 + b2*c2*x1*(1 + x1)*x3 + (3*b2*c3*x1*(1 + x1)*x3)/2 + a1*a2*x2*x3 + a1*b2*x2*x3 + a2*c1*x2*x3 + a1*b2*c1*x2*x3 + a2*b2*c1*x2*x3 + 3*d1*x2*x3 + 2*a1*d1*x2*x3 + a2*d1*x2*x3 + 3*b2*d1*x2*x3 + a1*b2*d1*x2*x3 + a2*b2*d1*x2*x3 + a1*b3*d1*x2*x3 + 3*c1*d1*x2*x3 + b3*c1*d1*x2*x3 + 2*b2*c2*d1*x2*x3 + c3*d1*x2*x3 + b2*c3*d1*x2*x3 + 2*a1*d2*x2*x3 + a1*b2*d2*x2*x3 + a1*b3*d2*x2*x3 + 3*c1*d2*x2*x3 + b3*c1*d2*x2*x3 + a1*b2*d3*x2*x3 + a1*b3*d3*x2*x3 + c1*d3*x2*x3 + b3*c1*d3*x2*x3 + x1*x2*x3 + 2*a2*x1*x2*x3 + 2*b2*x1*x2*x3 + a2*b2*x1*x2*x3 + b3*x1*x2*x3 + 3*b2*c2*x1*x2*x3 + c3*x1*x2*x3 + 2*b2*c3*x1*x2*x3 + (a1*a2*x3*(1 + x3))/2 + (a2*b1*x3*(1 + x3))/2 + (a1*b2*x3*(1 + x3))/2 + (a2*c1*x3*(1 + x3))/2 + (a1*b2*c1*x3*(1 + x3))/2 + (a2*b2*c1*x3*(1 + x3))/2 + (b1*c2*x3*(1 + x3))/2 + a2*x1*x3*(1 + x3) + b2*x1*x3*(1 + x3) + (b2*c2*x1*x3*(1 + x3))/2 + (b2*c3*x1*x3*(1 + x3))/2 + a1*x2*x3*(1 + x3) + c1*x2*x3*(1 + x3) + c2*d3*y1 + b3*d1*x2*y1 + c3*d1*x2*y1 + b1*c3*d1*x2*y1 + a1*d3*x2*y1 + (b3*x2*(1 + x2)*y1)/2 + (c3*x2*(1 + x2)*y1)/2 + (b1*c3*x2*(1 + x2)*y1)/2 + a2*x3*y1 + a1*a2*x3*y1 + a1*b2*x3*y1 + 3*a2*b2*x3*y1 + a2*c1*x3*y1 + a1*b2*c1*x3*y1 + a2*b2*c1*x3*y1 + a2*c2*x3*y1 + 3*b2*c2*x3*y1 + 2*a2*d1*x3*y1 + c2*d1*x3*y1 + b2*c2*d1*x3*y1 + b2*c3*d1*x3*y1 + 2*a2*d2*x3*y1 + c2*d2*x3*y1 + b2*c2*d2*x3*y1 + b2*c3*d2*x3*y1 + a2*d3*x3*y1 + 3*a2*x1*x3*y1 + b2*x1*x3*y1 + a2*b2*x1*x3*y1 + 2*b2*c2*x1*x3*y1 + 3*b2*c3*x1*x3*y1 + 3*x2*x3*y1 + 4*a2*x2*x3*y1 + 4*b2*x2*x3*y1 + a2*b2*x2*x3*y1 + b3*x2*x3*y1 + 2*c2*x2*x3*y1 + 3*b2*c2*x2*x3*y1 + c3*x2*x3*y1 + 2*b2*c3*x2*x3*y1 + (3*a2*x3*(1 + x3)*y1)/2 + (c2*x3*(1 + x3)*y1)/2 + (b2*c2*x3*(1 + x3)*y1)/2 + (b2*c3*x3*(1 + x3)*y1)/2 + (3*a2*x3*y1*(1 + y1))/2 + (a2*b2*x3*y1*(1 + y1))/2 + b2*c2*x3*y1*(1 + y1) + (3*b2*c3*x3*y1*(1 + y1))/2 + a3*b1*y2 + a1*a3*b1*y2 + a3*b1*c1*y2 + a3*d1*y2 + a3*b1*d1*y2 + b3*c1*d1*y2 + b3*c2*d1*y2 + b1*c3*d1*y2 + b3*c1*d2*y2 + 2*a1*d3*y2 + a1*c1*d3*y2 + b1*c1*d3*y2 + b2*c1*d3*y2 + b3*c1*d3*y2 + b1*c2*d3*y2 + c3*d1*x1*y2 + b1*c3*d1*x1*y2 + b3*d2*x1*y2 + b2*d3*x1*y2 + b3*d3*x1*y2 + c1*d3*x1*y2 + a3*b1*x2*y2 + b1*c3*x2*y2 + a1*d3*x2*y2 + c1*d3*x2*y2 + b3*x1*x2*y2 + c3*x1*x2*y2 + b1*c3*x1*x2*y2 + a1*a2*x3*y2 + a2*b1*x3*y2 + a1*b2*x3*y2 + a2*c1*x3*y2 + a1*b2*c1*x3*y2 + a2*b2*c1*x3*y2 + b1*c2*x3*y2 + 2*d1*x3*y2 + 2*a1*d1*x3*y2 + a2*d1*x3*y2 + 3*b2*d1*x3*y2 + a1*b2*d1*x3*y2 + a2*b2*d1*x3*y2 + b3*d1*x3*y2 + a1*b3*d1*x3*y2 + 3*c1*d1*x3*y2 + b3*c1*d1*x3*y2 + 2*b2*c2*d1*x3*y2 + c3*d1*x3*y2 + b2*c3*d1*x3*y2 + 2*a1*d2*x3*y2 + a1*b2*d2*x3*y2 + a1*b3*d2*x3*y2 + 3*c1*d2*x3*y2 + b3*c1*d2*x3*y2 + a1*b2*d3*x3*y2 + a1*b3*d3*x3*y2 + c1*d3*x3*y2 + b3*c1*d3*x3*y2 + x1*x3*y2 + 2*a2*x1*x3*y2 + 2*b2*x1*x3*y2 + a2*b2*x1*x3*y2 + b3*x1*x3*y2 + 3*b2*c2*x1*x3*y2 + c3*x1*x3*y2 + 2*b2*c3*x1*x3*y2 + a1*x3*(1 + x3)*y2 + c1*x3*(1 + x3)*y2 + b3*d1*y1*y2 + c3*d1*y1*y2 + b1*c3*d1*y1*y2 + a1*d3*y1*y2 + b3*x2*y1*y2 + c3*x2*y1*y2 + b1*c3*x2*y1*y2 + x3*y1*y2 + 3*a2*x3*y1*y2 + 2*b2*x3*y1*y2 + a2*b2*x3*y1*y2 + b3*x3*y1*y2 + c2*x3*y1*y2 + 3*b2*c2*x3*y1*y2 + c3*x3*y1*y2 + 2*b2*c3*x3*y1*y2 + (a3*b1*y2*(1 + y2))/2 + (b1*c3*y2*(1 + y2))/2 + (b3*x1*y2*(1 + y2))/2 + (c3*x1*y2*(1 + y2))/2 + (b1*c3*x1*y2*(1 + y2))/2 + (b3*y1*y2*(1 + y2))/2 + (c3*y1*y2*(1 + y2))/2 + (b1*c3*y1*y2*(1 + y2))/2 + a2*d1*y3 + a2*b1*d1*y3 + a2*b2*d1*y3 + b1*c2*d1*y3 + 2*b2*c2*d1*y3 + b2*c3*d1*y3 + a2*b1*d2*y3 + b1*c2*d2*y3 + a1*a2*d3*y3 + a1*b2*d3*y3 + a2*c1*d3*y3 + a1*b2*c1*d3*y3 + a2*b2*c1*d3*y3 + a1*a2*x1*y3 + a1*b2*x1*y3 + a2*c1*x1*y3 + a1*b2*c1*x1*y3 + a2*b2*c1*x1*y3 + a2*c2*x1*y3 + a2*d1*x1*y3 + 2*b2*d1*x1*y3 + b2*c2*d1*x1*y3 + b2*c3*d1*x1*y3 + a2*d2*x1*y3 + 2*b2*d2*x1*y3 + b2*c2*d2*x1*y3 + b2*c3*d2*x1*y3 + a2*d3*x1*y3 + 2*b2*d3*x1*y3 + (3*a2*x1*(1 + x1)*y3)/2 + (b2*x1*(1 + x1)*y3)/2 + (a2*b2*x1*(1 + x1)*y3)/2 + b2*c2*x1*(1 + x1)*y3 + (3*b2*c3*x1*(1 + x1)*y3)/2 + a1*a2*x2*y3 + a1*b2*x2*y3 + a2*c1*x2*y3 + a1*b2*c1*x2*y3 + a2*b2*c1*x2*y3 + 2*d1*x2*y3 + a1*d1*x2*y3 + a2*d1*x2*y3 + 2*b2*d1*x2*y3 + a1*b2*d1*x2*y3 + a2*b2*d1*x2*y3 + a1*b3*d1*x2*y3 + 2*c1*d1*x2*y3 + b3*c1*d1*x2*y3 + 2*b2*c2*d1*x2*y3 + c3*d1*x2*y3 + b2*c3*d1*x2*y3 + a1*d2*x2*y3 + a1*b2*d2*x2*y3 + a1*b3*d2*x2*y3 + 2*c1*d2*x2*y3 + b3*c1*d2*x2*y3 + a1*b2*d3*x2*y3 + a1*b3*d3*x2*y3 + c1*d3*x2*y3 + b3*c1*d3*x2*y3 + 2*a2*x1*x2*y3 + b2*x1*x2*y3 + a2*b2*x1*x2*y3 + b3*x1*x2*y3 + 3*b2*c2*x1*x2*y3 + c3*x1*x2*y3 + 2*b2*c3*x1*x2*y3 + a1*a2*x3*y3 + a1*b2*x3*y3 + a2*c1*x3*y3 + a1*b2*c1*x3*y3 + a2*b2*c1*x3*y3 + 2*b2*d1*x3*y3 + 2*a2*x1*x3*y3 + 2*b2*x1*x3*y3 + b2*c2*x1*x3*y3 + b2*c3*x1*x3*y3 + a1*a2*y1*y3 + 3*b2*y1*y3 + a1*b2*y1*y3 + 3*a2*b2*y1*y3 + a2*c1*y1*y3 + a1*b2*c1*y1*y3 + a2*b2*c1*y1*y3 + a2*c2*y1*y3 + 3*b2*c2*y1*y3 + 2*a2*d1*y1*y3 + c2*d1*y1*y3 + b2*c2*d1*y1*y3 + b2*c3*d1*y1*y3 + 2*a2*d2*y1*y3 + c2*d2*y1*y3 + b2*c2*d2*y1*y3 + b2*c3*d2*y1*y3 + a2*d3*y1*y3 + 3*a2*x1*y1*y3 + a2*b2*x1*y1*y3 + 2*b2*c2*x1*y1*y3 + 3*b2*c3*x1*y1*y3 + 4*a2*x2*y1*y3 + 3*b2*x2*y1*y3 + a2*b2*x2*y1*y3 + b3*x2*y1*y3 + 2*c2*x2*y1*y3 + 3*b2*c2*x2*y1*y3 + c3*x2*y1*y3 + 2*b2*c3*x2*y1*y3 + 2*a2*x3*y1*y3 + 4*b2*x3*y1*y3 + b2*c2*x3*y1*y3 + b2*c3*x3*y1*y3 + (3*a2*y1*(1 + y1)*y3)/2 + (b2*y1*(1 + y1)*y3)/2 + (a2*b2*y1*(1 + y1)*y3)/2 + b2*c2*y1*(1 + y1)*y3 + (3*b2*c3*y1*(1 + y1)*y3)/2 + a1*a2*y2*y3 + b1*y2*y3 + a2*b1*y2*y3 + a1*b2*y2*y3 + a2*c1*y2*y3 + a1*b2*c1*y2*y3 + a2*b2*c1*y2*y3 + b1*c2*y2*y3 + a1*d1*y2*y3 + a2*d1*y2*y3 + 4*b2*d1*y2*y3 + a1*b2*d1*y2*y3 + a2*b2*d1*y2*y3 + b3*d1*y2*y3 + a1*b3*d1*y2*y3 + 2*c1*d1*y2*y3 + b3*c1*d1*y2*y3 + 2*b2*c2*d1*y2*y3 + c3*d1*y2*y3 + b2*c3*d1*y2*y3 + a1*d2*y2*y3 + a1*b2*d2*y2*y3 + a1*b3*d2*y2*y3 + 2*c1*d2*y2*y3 + b3*c1*d2*y2*y3 + a1*b2*d3*y2*y3 + a1*b3*d3*y2*y3 + c1*d3*y2*y3 + b3*c1*d3*y2*y3 + 2*a2*x1*y2*y3 + 3*b2*x1*y2*y3 + a2*b2*x1*y2*y3 + b3*x1*y2*y3 + 3*b2*c2*x1*y2*y3 + c3*x1*y2*y3 + 2*b2*c3*x1*y2*y3 + y1*y2*y3 + 3*a2*y1*y2*y3 + 3*b2*y1*y2*y3 + a2*b2*y1*y2*y3 + b3*y1*y2*y3 + c2*y1*y2*y3 + 3*b2*c2*y1*y2*y3 + c3*y1*y2*y3 + 2*b2*c3*y1*y2*y3 + (a1*a2*y3*(1 + y3))/2 + (a2*b1*y3*(1 + y3))/2 + (a1*b2*y3*(1 + y3))/2 + (a2*c1*y3*(1 + y3))/2 + (a1*b2*c1*y3*(1 + y3))/2 + (a2*b2*c1*y3*(1 + y3))/2 + (b1*c2*y3*(1 + y3))/2 + a2*x1*y3*(1 + y3) + b2*x1*y3*(1 + y3) + (b2*c2*x1*y3*(1 + y3))/2 + (b2*c3*x1*y3*(1 + y3))/2 + (a1*x2*y3*(1 + y3))/2 + (c1*x2*y3*(1 + y3))/2 + (3*a2*y1*y3*(1 + y3))/2 + (c2*y1*y3*(1 + y3))/2 + (b2*c2*y1*y3*(1 + y3))/2 + (b2*c3*y1*y3*(1 + y3))/2 + (a1*y2*y3*(1 + y3))/2 + (c1*y2*y3*(1 + y3))/2 + a3*b1*x2*z1 + c3*x2*z1 + 2*c3*d1*x2*z1 + b1*c3*d1*x2*z1 + b3*d2*x2*z1 + d3*x2*z1 + b2*d3*x2*z1 + b3*d3*x2*z1 + c1*d3*x2*z1 + c3*x1*x2*z1 + (b3*x2*(1 + x2)*z1)/2 + c3*x2*(1 + x2)*z1 + (b1*c3*x2*(1 + x2)*z1)/2 + a2*x3*z1 + a1*a2*x3*z1 + a1*b2*x3*z1 + a2*c1*x3*z1 + a1*b2*c1*x3*z1 + a2*b2*c1*x3*z1 + a2*c2*x3*z1 + a2*d1*x3*z1 + 2*b2*d1*x3*z1 + 2*b2*c2*d1*x3*z1 + 2*b2*c3*d1*x3*z1 + a2*d2*x3*z1 + 2*b2*d2*x3*z1 + 2*b2*c2*d2*x3*z1 + 2*b2*c3*d2*x3*z1 + a2*d3*x3*z1 + 2*b2*d3*x3*z1 + b2*c2*d3*x3*z1 + b2*c3*d3*x3*z1 + 3*a2*x1*x3*z1 + a2*b2*x1*x3*z1 + b2*c1*x1*x3*z1 + 3*b2*c2*x1*x3*z1 + 2*b2*c3*x1*x3*z1 + x2*x3*z1 + 2*a2*x2*x3*z1 + 2*b2*x2*x3*z1 + a2*b2*x2*x3*z1 + b3*x2*x3*z1 + 3*b2*c2*x2*x3*z1 + c3*x2*x3*z1 + 2*b2*c3*x2*x3*z1 + a2*x3*(1 + x3)*z1 + b2*x3*(1 + x3)*z1 + (b2*c2*x3*(1 + x3)*z1)/2 + (b2*c3*x3*(1 + x3)*z1)/2 + c3*x2*y1*z1 + 3*a2*x3*y1*z1 + b2*x3*y1*z1 + a2*b2*x3*y1*z1 + b2*c1*x3*y1*z1 + 3*b2*c2*x3*y1*z1 + 2*b2*c3*x3*y1*z1 + a3*b1*y2*z1 + c3*y2*z1 + 2*c3*d1*y2*z1 + b1*c3*d1*y2*z1 + b3*d2*y2*z1 + b2*d3*y2*z1 + b3*d3*y2*z1 + c1*d3*y2*z1 + c3*x1*y2*z1 + b3*x2*y2*z1 + 2*c3*x2*y2*z1 + b1*c3*x2*y2*z1 + x3*y2*z1 + 2*a2*x3*y2*z1 + 2*b2*x3*y2*z1 + a2*b2*x3*y2*z1 + b3*x3*y2*z1 + 3*b2*c2*x3*y2*z1 + c3*x3*y2*z1 + 2*b2*c3*x3*y2*z1 + c3*y1*y2*z1 + (b3*y2*(1 + y2)*z1)/2 + c3*y2*(1 + y2)*z1 + (b1*c3*y2*(1 + y2)*z1)/2 + a1*a2*y3*z1 + a1*b2*y3*z1 + a2*c1*y3*z1 + a1*b2*c1*y3*z1 + a2*b2*c1*y3*z1 + a2*c2*y3*z1 + a2*d1*y3*z1 + 2*b2*d1*y3*z1 + 2*b2*c2*d1*y3*z1 + 2*b2*c3*d1*y3*z1 + a2*d2*y3*z1 + 2*b2*d2*y3*z1 + 2*b2*c2*d2*y3*z1 + 2*b2*c3*d2*y3*z1 + a2*d3*y3*z1 + 2*b2*d3*y3*z1 + b2*c2*d3*y3*z1 + b2*c3*d3*y3*z1 + 3*a2*x1*y3*z1 + b2*x1*y3*z1 + a2*b2*x1*y3*z1 + b2*c1*x1*y3*z1 + 3*b2*c2*x1*y3*z1 + 2*b2*c3*x1*y3*z1 + 2*a2*x2*y3*z1 + b2*x2*y3*z1 + a2*b2*x2*y3*z1 + b3*x2*y3*z1 + 3*b2*c2*x2*y3*z1 + c3*x2*y3*z1 + 2*b2*c3*x2*y3*z1 + 2*a2*x3*y3*z1 + 2*b2*x3*y3*z1 + b2*c2*x3*y3*z1 + b2*c3*x3*y3*z1 + 3*a2*y1*y3*z1 + a2*b2*y1*y3*z1 + b2*c1*y1*y3*z1 + 3*b2*c2*y1*y3*z1 + 2*b2*c3*y1*y3*z1 + 2*a2*y2*y3*z1 + 3*b2*y2*y3*z1 + a2*b2*y2*y3*z1 + b3*y2*y3*z1 + 3*b2*c2*y2*y3*z1 + c3*y2*y3*z1 + 2*b2*c3*y2*y3*z1 + a2*y3*(1 + y3)*z1 + b2*y3*(1 + y3)*z1 + (b2*c2*y3*(1 + y3)*z1)/2 + (b2*c3*y3*(1 + y3)*z1)/2 + (b3*c2*z1*(1 + z1))/2 + (3*a2*x3*z1*(1 + z1))/2 + (a2*b2*x3*z1*(1 + z1))/2 + b2*c2*x3*z1*(1 + z1) + (3*b2*c3*x3*z1*(1 + z1))/2 + (3*a2*y3*z1*(1 + z1))/2 + (b2*y3*z1*(1 + z1))/2 + (a2*b2*y3*z1*(1 + z1))/2 + b2*c2*y3*z1*(1 + z1) + (3*b2*c3*y3*z1*(1 + z1))/2 + c3*(c2 + d2)*(x1 + y1 + z1) + a1*a3*z2 + a1*a3*b1*z2 + a3*b1*d1*z2 + b3*c1*d1*z2 + b3*c2*d1*z2 + b1*c3*d1*z2 + b3*c1*d2*z2 + 2*a1*d3*z2 + b1*c1*d3*z2 + b2*c1*d3*z2 + b3*c1*d3*z2 + b1*c2*d3*z2 + c3*d1*x1*z2 + b1*c3*d1*x1*z2 + b3*d2*x1*z2 + b2*d3*x1*z2 + b3*d3*x1*z2 + c1*d3*x1*z2 + (3*c3*x1*(1 + x1)*z2)/2 + b1*c3*x2*z2 + 2*c3*d1*x2*z2 + a1*d3*x2*z2 + c1*d3*x2*z2 + a1*c1*d3*x2*z2 + b3*x1*x2*z2 + c3*x1*x2*z2 + b1*c3*x1*x2*z2 + a1*a2*x3*z2 + a1*b2*x3*z2 + a2*c1*x3*z2 + a1*b2*c1*x3*z2 + a2*b2*c1*x3*z2 + 3*a1*d1*x3*z2 + 2*a2*d1*x3*z2 + 3*b2*d1*x3*z2 + a1*b2*d1*x3*z2 + a2*b2*d1*x3*z2 + a1*b3*d1*x3*z2 + b2*c1*d1*x3*z2 + 2*b2*c2*d1*x3*z2 + b2*c3*d1*x3*z2 + 3*a1*d2*x3*z2 + a1*b2*d2*x3*z2 + a1*b3*d2*x3*z2 + b2*c1*d2*x3*z2 + a1*d3*x3*z2 + a1*b2*d3*x3*z2 + a1*b3*d3*x3*z2 + b2*c1*d3*x3*z2 + 3*a2*x1*x3*z2 + b2*x1*x3*z2 + a2*b2*x1*x3*z2 + b3*x1*x3*z2 + 3*b2*c2*x1*x3*z2 + 2*b2*c3*x1*x3*z2 + a1*x3*(1 + x3)*z2 + b3*d1*y1*z2 + c3*d1*y1*z2 + b1*c3*d1*y1*z2 + a1*d3*y1*z2 + c1*d3*y1*z2 + 3*c3*x1*y1*z2 + b3*x2*y1*z2 + c3*x2*y1*z2 + b1*c3*x2*y1*z2 + 3*a2*x3*y1*z2 + 3*b2*x3*y1*z2 + a2*b2*x3*y1*z2 + b3*x3*y1*z2 + 3*b2*c2*x3*y1*z2 + 2*b2*c3*x3*y1*z2 + (3*c3*y1*(1 + y1)*z2)/2 + b1*c3*y2*z2 + 2*c3*d1*y2*z2 + c1*d3*y2*z2 + a1*c1*d3*y2*z2 + b3*x1*y2*z2 + c3*x1*y2*z2 + b1*c3*x1*y2*z2 + b3*y1*y2*z2 + c3*y1*y2*z2 + b1*c3*y1*y2*z2 + a1*a2*y3*z2 + a1*b2*y3*z2 + a2*c1*y3*z2 + a1*b2*c1*y3*z2 + a2*b2*c1*y3*z2 + 2*a1*d1*y3*z2 + 2*a2*d1*y3*z2 + 2*b2*d1*y3*z2 + a1*b2*d1*y3*z2 + a2*b2*d1*y3*z2 + a1*b3*d1*y3*z2 + b2*c1*d1*y3*z2 + 2*b2*c2*d1*y3*z2 + b2*c3*d1*y3*z2 + 2*a1*d2*y3*z2 + a1*b2*d2*y3*z2 + a1*b3*d2*y3*z2 + b2*c1*d2*y3*z2 + a1*d3*y3*z2 + a1*b2*d3*y3*z2 + a1*b3*d3*y3*z2 + b2*c1*d3*y3*z2 + 3*a2*x1*y3*z2 + 2*b2*x1*y3*z2 + a2*b2*x1*y3*z2 + b3*x1*y3*z2 + 3*b2*c2*x1*y3*z2 + 2*b2*c3*x1*y3*z2 + 3*a2*y1*y3*z2 + 4*b2*y1*y3*z2 + a2*b2*y1*y3*z2 + b3*y1*y3*z2 + 3*b2*c2*y1*y3*z2 + 2*b2*c3*y1*y3*z2 + (a1*y3*(1 + y3)*z2)/2 + a3*z1*z2 + a3*b1*z1*z2 + c3*z1*z2 + 3*c3*d1*z1*z2 + b1*c3*d1*z1*z2 + b3*d2*z1*z2 + c3*d2*z1*z2 + b2*d3*z1*z2 + b3*d3*z1*z2 + c1*d3*z1*z2 + c2*d3*z1*z2 + c3*d3*z1*z2 + c3*x1*z1*z2 + b3*x2*z1*z2 + b1*c3*x2*z1*z2 + 3*a2*x3*z1*z2 + b2*x3*z1*z2 + a2*b2*x3*z1*z2 + b3*x3*z1*z2 + 3*b2*c2*x3*z1*z2 + 2*b2*c3*x3*z1*z2 + c3*y1*z1*z2 + b3*y2*z1*z2 + b1*c3*y2*z1*z2 + 3*a2*y3*z1*z2 + 2*b2*y3*z1*z2 + a2*b2*y3*z1*z2 + b3*y3*z1*z2 + 3*b2*c2*y3*z1*z2 + 2*b2*c3*y3*z1*z2 + (3*c3*z1*(1 + z1)*z2)/2 + (a3*b1*z2*(1 + z2))/2 + (b1*c3*z2*(1 + z2))/2 + (b3*x1*z2*(1 + z2))/2 + (c3*x1*z2*(1 + z2))/2 + (b1*c3*x1*z2*(1 + z2))/2 + (b3*y1*z2*(1 + z2))/2 + (c3*y1*z2*(1 + z2))/2 + (b1*c3*y1*z2*(1 + z2))/2 + (b3*z1*z2*(1 + z2))/2 + c3*z1*z2*(1 + z2) + (b1*c3*z1*z2*(1 + z2))/2 + 2*a2*d1*z3 + a2*b1*d1*z3 + a2*b2*d1*z3 + b2*c2*d1*z3 + b2*c3*d1*z3 + a2*b1*d2*z3 + a1*a2*d3*z3 + a1*b2*d3*z3 + a2*c1*d3*z3 + a1*b2*c1*d3*z3 + a2*b2*c1*d3*z3 + a1*a2*x1*z3 + a1*b2*x1*z3 + a2*c1*x1*z3 + a1*b2*c1*x1*z3 + a2*b2*c1*x1*z3 + a2*d1*x1*z3 + 2*b2*d1*x1*z3 + b2*c2*d1*x1*z3 + b2*c3*d1*x1*z3 + a2*d2*x1*z3 + 2*b2*d2*x1*z3 + b2*c2*d2*x1*z3 + b2*c3*d2*x1*z3 + a2*d3*x1*z3 + 2*b2*d3*x1*z3 + c2*d3*x1*z3 + a2*x1*(1 + x1)*z3 + (a2*b2*x1*(1 + x1)*z3)/2 + (3*b2*c2*x1*(1 + x1)*z3)/2 + (3*b2*c3*x1*(1 + x1)*z3)/2 + a1*a2*x2*z3 + a1*b2*x2*z3 + a2*c1*x2*z3 + a1*b2*c1*x2*z3 + a2*b2*c1*x2*z3 + 4*d1*x2*z3 + 4*a1*d1*x2*z3 + 3*b2*d1*x2*z3 + a1*b2*d1*x2*z3 + a2*b2*d1*x2*z3 + a1*b3*d1*x2*z3 + 4*c1*d1*x2*z3 + b3*c1*d1*x2*z3 + 2*c2*d1*x2*z3 + b2*c2*d1*x2*z3 + 2*c3*d1*x2*z3 + b1*c3*d1*x2*z3 + b2*c3*d1*x2*z3 + 4*a1*d2*x2*z3 + a1*b2*d2*x2*z3 + a1*b3*d2*x2*z3 + 4*c1*d2*x2*z3 + b3*c1*d2*x2*z3 + b1*c3*d2*x2*z3 + a1*b2*d3*x2*z3 + a1*b3*d3*x2*z3 + b3*c1*d3*x2*z3 + b1*c3*d3*x2*z3 + 2*x1*x2*z3 + a1*x1*x2*z3 + a2*x1*x2*z3 + 2*b2*x1*x2*z3 + a2*b2*x1*x2*z3 + b3*x1*x2*z3 + c1*x1*x2*z3 + b1*c1*x1*x2*z3 + 2*c2*x1*x2*z3 + b1*c2*x1*x2*z3 + 2*b2*c2*x1*x2*z3 + 2*c3*x1*x2*z3 + b1*c3*x1*x2*z3 + 2*b2*c3*x1*x2*z3 + a1*a2*x3*z3 + a2*b1*x3*z3 + a1*b2*x3*z3 + a2*c1*x3*z3 + a1*b2*c1*x3*z3 + a2*b2*c1*x3*z3 + a2*b1*c2*x3*z3 + 2*a2*d1*x3*z3 + 4*b2*d1*x3*z3 + 2*b2*c2*d1*x3*z3 + 3*a2*x1*x3*z3 + 3*b2*x1*x3*z3 + 3*b2*c2*x1*x3*z3 + b2*c3*x1*x3*z3 + 3*a2*y1*z3 + a1*a2*y1*z3 + a1*b2*y1*z3 + 3*a2*b2*y1*z3 + a2*c1*y1*z3 + a1*b2*c1*y1*z3 + a2*b2*c1*y1*z3 + 2*a2*d1*y1*z3 + b2*c2*d1*y1*z3 + b2*c3*d1*y1*z3 + 2*a2*d2*y1*z3 + b2*c2*d2*y1*z3 + b2*c3*d2*y1*z3 + a2*d3*y1*z3 + c2*d3*y1*z3 + 2*a2*x1*y1*z3 + b2*x1*y1*z3 + a2*b2*x1*y1*z3 + 3*b2*c2*x1*y1*z3 + 3*b2*c3*x1*y1*z3 + x2*y1*z3 + a1*x2*y1*z3 + 3*a2*x2*y1*z3 + 4*b2*x2*y1*z3 + a2*b2*x2*y1*z3 + b3*x2*y1*z3 + c1*x2*y1*z3 + b1*c1*x2*y1*z3 + 2*c2*x2*y1*z3 + b1*c2*x2*y1*z3 + 2*b2*c2*x2*y1*z3 + 2*c3*x2*y1*z3 + b1*c3*x2*y1*z3 + 2*b2*c3*x2*y1*z3 + 4*a2*x3*y1*z3 + 3*b2*x3*y1*z3 + a2*c2*x3*y1*z3 + 5*b2*c2*x3*y1*z3 + b2*c3*x3*y1*z3 + a2*y1*(1 + y1)*z3 + (a2*b2*y1*(1 + y1)*z3)/2 + (3*b2*c2*y1*(1 + y1)*z3)/2 + (3*b2*c3*y1*(1 + y1)*z3)/2 + a1*a2*y2*z3 + a2*b1*y2*z3 + a1*b2*y2*z3 + a2*c1*y2*z3 + a1*b2*c1*y2*z3 + a2*b2*c1*y2*z3 + 4*a1*d1*y2*z3 + 3*b2*d1*y2*z3 + a1*b2*d1*y2*z3 + a2*b2*d1*y2*z3 + b3*d1*y2*z3 + a1*b3*d1*y2*z3 + 4*c1*d1*y2*z3 + b3*c1*d1*y2*z3 + 2*c2*d1*y2*z3 + b2*c2*d1*y2*z3 + 2*c3*d1*y2*z3 + b1*c3*d1*y2*z3 + b2*c3*d1*y2*z3 + 4*a1*d2*y2*z3 + a1*b2*d2*y2*z3 + a1*b3*d2*y2*z3 + 4*c1*d2*y2*z3 + b3*c1*d2*y2*z3 + b1*c3*d2*y2*z3 + a1*b2*d3*y2*z3 + a1*b3*d3*y2*z3 + b3*c1*d3*y2*z3 + b1*c3*d3*y2*z3 + x1*y2*z3 + a1*x1*y2*z3 + a2*x1*y2*z3 + 2*b2*x1*y2*z3 + a2*b2*x1*y2*z3 + b3*x1*y2*z3 + c1*x1*y2*z3 + b1*c1*x1*y2*z3 + 2*c2*x1*y2*z3 + b1*c2*x1*y2*z3 + 2*b2*c2*x1*y2*z3 + 2*c3*x1*y2*z3 + b1*c3*x1*y2*z3 + 2*b2*c3*x1*y2*z3 + a1*y1*y2*z3 + 2*a2*y1*y2*z3 + 2*b2*y1*y2*z3 + a2*b2*y1*y2*z3 + b3*y1*y2*z3 + c1*y1*y2*z3 + b1*c1*y1*y2*z3 + 2*c2*y1*y2*z3 + b1*c2*y1*y2*z3 + 2*b2*c2*y1*y2*z3 + 2*c3*y1*y2*z3 + b1*c3*y1*y2*z3 + 2*b2*c3*y1*y2*z3 + a1*a2*y3*z3 + a1*b2*y3*z3 + a2*c1*y3*z3 + a1*b2*c1*y3*z3 + a2*b2*c1*y3*z3 + a2*b1*c2*y3*z3 + 2*a2*d1*y3*z3 + 4*b2*d1*y3*z3 + 2*b2*c2*d1*y3*z3 + 3*a2*x1*y3*z3 + b2*x1*y3*z3 + 3*b2*c2*x1*y3*z3 + b2*c3*x1*y3*z3 + 5*a2*y1*y3*z3 + 3*b2*y1*y3*z3 + a2*c2*y1*y3*z3 + 5*b2*c2*y1*y3*z3 + b2*c3*y1*y3*z3 + a1*a2*z1*z3 + a1*b2*z1*z3 + a2*c1*z1*z3 + a1*b2*c1*z1*z3 + a2*b2*c1*z1*z3 + a2*d1*z1*z3 + 2*b2*d1*z1*z3 + c2*d1*z1*z3 + 2*b2*c2*d1*z1*z3 + 2*b2*c3*d1*z1*z3 + a2*d2*z1*z3 + 2*b2*d2*z1*z3 + c2*d2*z1*z3 + 2*b2*c2*d2*z1*z3 + 2*b2*c3*d2*z1*z3 + a2*d3*z1*z3 + 2*b2*d3*z1*z3 + b2*c2*d3*z1*z3 + b2*c3*d3*z1*z3 + 2*a2*x1*z1*z3 + a2*b2*x1*z1*z3 + b2*c1*x1*z1*z3 + 2*b2*c2*x1*z1*z3 + 2*b2*c3*x1*z1*z3 + 2*x2*z1*z3 + a1*x2*z1*z3 + a2*x2*z1*z3 + 2*b2*x2*z1*z3 + a2*b2*x2*z1*z3 + b3*x2*z1*z3 + b1*c1*x2*z1*z3 + c2*x2*z1*z3 + b1*c2*x2*z1*z3 + 2*b2*c2*x2*z1*z3 + c3*x2*z1*z3 + b1*c3*x2*z1*z3 + 2*b2*c3*x2*z1*z3 + 3*a2*x3*z1*z3 + 3*b2*x3*z1*z3 + 3*b2*c2*x3*z1*z3 + b2*c3*x3*z1*z3 + 2*a2*y1*z1*z3 + b2*y1*z1*z3 + a2*b2*y1*z1*z3 + b2*c1*y1*z1*z3 + 2*b2*c2*y1*z1*z3 + 2*b2*c3*y1*z1*z3 + y2*z1*z3 + a1*y2*z1*z3 + a2*y2*z1*z3 + 2*b2*y2*z1*z3 + a2*b2*y2*z1*z3 + b3*y2*z1*z3 + b1*c1*y2*z1*z3 + c2*y2*z1*z3 + b1*c2*y2*z1*z3 + 2*b2*c2*y2*z1*z3 + c3*y2*z1*z3 + b1*c3*y2*z1*z3 + 2*b2*c3*y2*z1*z3 + 3*a2*y3*z1*z3 + b2*y3*z1*z3 + 3*b2*c2*y3*z1*z3 + b2*c3*y3*z1*z3 + a2*z1*(1 + z1)*z3 + (a2*b2*z1*(1 + z1)*z3)/2 + (3*b2*c2*z1*(1 + z1)*z3)/2 + (3*b2*c3*z1*(1 + z1)*z3)/2 + a1*a2*z2*z3 + a1*b2*z2*z3 + a2*c1*z2*z3 + a1*b2*c1*z2*z3 + a2*b2*c1*z2*z3 + d1*z2*z3 + 5*a1*d1*z2*z3 + a2*d1*z2*z3 + 3*b2*d1*z2*z3 + a1*b2*d1*z2*z3 + a2*b2*d1*z2*z3 + a1*b3*d1*z2*z3 + c1*d1*z2*z3 + b2*c1*d1*z2*z3 + c2*d1*z2*z3 + b2*c2*d1*z2*z3 + b1*c3*d1*z2*z3 + b2*c3*d1*z2*z3 + 5*a1*d2*z2*z3 + a1*b2*d2*z2*z3 + a1*b3*d2*z2*z3 + c1*d2*z2*z3 + b2*c1*d2*z2*z3 + b1*c3*d2*z2*z3 + a1*d3*z2*z3 + a1*b2*d3*z2*z3 + a1*b3*d3*z2*z3 + c1*d3*z2*z3 + b2*c1*d3*z2*z3 + b1*c3*d3*z2*z3 + a1*x1*z2*z3 + 2*a2*x1*z2*z3 + b2*x1*z2*z3 + a2*b2*x1*z2*z3 + b3*x1*z2*z3 + c1*x1*z2*z3 + b1*c1*x1*z2*z3 + b1*c2*x1*z2*z3 + 2*b2*c2*x1*z2*z3 + b1*c3*x1*z2*z3 + 2*b2*c3*x1*z2*z3 + 5*y1*z2*z3 + a1*y1*z2*z3 + 2*a2*y1*z2*z3 + 3*b2*y1*z2*z3 + a2*b2*y1*z2*z3 + b3*y1*z2*z3 + c1*y1*z2*z3 + b1*c1*y1*z2*z3 + b1*c2*y1*z2*z3 + 2*b2*c2*y1*z2*z3 + b1*c3*y1*z2*z3 + 2*b2*c3*y1*z2*z3 + a1*z1*z2*z3 + 2*a2*z1*z2*z3 + b2*z1*z2*z3 + a2*b2*z1*z2*z3 + b3*z1*z2*z3 + b1*c1*z1*z2*z3 + c2*z1*z2*z3 + b1*c2*z1*z2*z3 + 2*b2*c2*z1*z2*z3 + c3*z1*z2*z3 + b1*c3*z1*z2*z3 + 2*b2*c3*z1*z2*z3 + (a1*a2*z3*(1 + z3))/2 + (a2*b1*z3*(1 + z3))/2 + (a1*b2*z3*(1 + z3))/2 + (a2*c1*z3*(1 + z3))/2 + (a1*b2*c1*z3*(1 + z3))/2 + (a2*b2*c1*z3*(1 + z3))/2 + a2*x1*z3*(1 + z3) + b2*x1*z3*(1 + z3) + (c2*x1*z3*(1 + z3))/2 + (b2*c2*x1*z3*(1 + z3))/2 + (b2*c3*x1*z3*(1 + z3))/2 + 2*a1*x2*z3*(1 + z3) + 2*c1*x2*z3*(1 + z3) + (3*a2*y1*z3*(1 + z3))/2 + (c2*y1*z3*(1 + z3))/2 + (b2*c2*y1*z3*(1 + z3))/2 + (b2*c3*y1*z3*(1 + z3))/2 + 2*a1*y2*z3*(1 + z3) + 2*c1*y2*z3*(1 + z3) + a2*z1*z3*(1 + z3) + b2*z1*z3*(1 + z3) + (c2*z1*z3*(1 + z3))/2 + (b2*c2*z1*z3*(1 + z3))/2 + (b2*c3*z1*z3*(1 + z3))/2 + 2*a1*z2*z3*(1 + z3) + c1*c2*(x3 + y3 + z3) + (a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2))*(x3 + y3 + z3);
end;
#####################################################################
#####################################################################
#Space Group No. 140 ( I4/mcm)
#####################################################################
Aiin140:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin140:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin140:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Axyzin140:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return x1 + y1 + z1;
end;
#####################################################################
Bdeltain140:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
Bzxyin140:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return b1*(x1 + y1)*(x2 + y2) + (x1 + y1)*z2 + b1*(x1 + x2 + y1 + y2)*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 141 ( I4_1/amd)
#####################################################################
#####################################################################
#Space Group No. 142 ( I4_1/acd)
#####################################################################
Aiin142:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return d1;
end;
#####################################################################
Amin142:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return c1;
end;
#####################################################################
Acpin142:=function(g1)
local x1,y1,z1,a1,b1,c1,d1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];a1:=g1[4];b1:=g1[5];c1:=g1[6];d1:=g1[7];
return b1;
end;
#####################################################################
Bdeltain142:=function(g1,g2)
local x1,y1,z1,x2,y2,z2,a1,a2,b1,b2,c1,c2,d1,d2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];x2:=g2[1];y2:=g2[2];z2:=g2[3];a1:=g1[4];a2:=g2[4];b1:=g1[5];b2:=g2[5];c1:=g1[6];c2:=g2[6];d1:=g1[7];d2:=g2[7];
return a1*a2 + a1*b2 + a2*c1 + a1*b2*c1 + a2*b2*c1 + d1*(b2 + c2 + d2);
end;
#####################################################################
