#####################################################################
#Space Group No. 47 (Pmmm)
M147:=[[1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M247:=[[1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
M347:=[[-1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 48 (Pnnn)
M148:=[[1,0,0,1/2],[0,1,0,1/2],[0,0,-1,0],[0,0,0,1]];
M248:=[[1,0,0,1/2],[0,-1,0,0],[0,0,1,1/2],[0,0,0,1]];
M348:=[[-1,0,0,0],[0,1,0,1/2],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 49 (Pccm)
M149:=[[1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M249:=[[1,0,0,0],[0,-1,0,0],[0,0,1,1/2],[0,0,0,1]];
M349:=[[-1,0,0,0],[0,1,0,0],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 50 (Pban)
M150:=[[1,0,0,1/2],[0,1,0,1/2],[0,0,-1,0],[0,0,0,1]];
M250:=[[1,0,0,1/2],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
M350:=[[-1,0,0,0],[0,1,0,1/2],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 51 (Pmma)
M151:=[[1,0,0,1/2],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M251:=[[1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
M351:=[[-1,0,0,1/2],[0,1,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 52 (Pnna)
M152:=[[1,0,0,1/2],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M252:=[[1,0,0,1/2],[0,-1,0,1/2],[0,0,1,1/2],[0,0,0,1]];
M352:=[[-1,0,0,0],[0,1,0,1/2],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 53 (Pmna)
M153:=[[1,0,0,1/2],[0,1,0,0],[0,0,-1,1/2],[0,0,0,1]];
M253:=[[1,0,0,1/2],[0,-1,0,0],[0,0,1,1/2],[0,0,0,1]];
M353:=[[-1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 54 (Pcca)
M154:=[[1,0,0,1/2],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M254:=[[1,0,0,0],[0,-1,0,0],[0,0,1,1/2],[0,0,0,1]];
M354:=[[-1,0,0,1/2],[0,1,0,0],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 55 (Pbam)
M155:=[[1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M255:=[[1,0,0,1/2],[0,-1,0,1/2],[0,0,1,0],[0,0,0,1]];
M355:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 56 (Pccn)
M156:=[[1,0,0,1/2],[0,1,0,1/2],[0,0,-1,0],[0,0,0,1]];
M256:=[[1,0,0,0],[0,-1,0,1/2],[0,0,1,1/2],[0,0,0,1]];
M356:=[[-1,0,0,1/2],[0,1,0,0],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 57 (Pbcm)
M157:=[[1,0,0,0],[0,1,0,0],[0,0,-1,1/2],[0,0,0,1]];
M257:=[[1,0,0,0],[0,-1,0,1/2],[0,0,1,1/2],[0,0,0,1]];
M357:=[[-1,0,0,0],[0,1,0,1/2],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 58 (Pnnm)
M158:=[[1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M258:=[[1,0,0,1/2],[0,-1,0,1/2],[0,0,1,1/2],[0,0,0,1]];
M358:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 59 (Pmmn)
M159:=[[1,0,0,1/2],[0,1,0,1/2],[0,0,-1,0],[0,0,0,1]];
M259:=[[1,0,0,0],[0,-1,0,1/2],[0,0,1,0],[0,0,0,1]];
M359:=[[-1,0,0,1/2],[0,1,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 60 (Pbcn)
M160:=[[1,0,0,1/2],[0,1,0,1/2],[0,0,-1,1/2],[0,0,0,1]];
M260:=[[1,0,0,0],[0,-1,0,0],[0,0,1,1/2],[0,0,0,1]];
M360:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 61 (Pbca)
M161:=[[1,0,0,1/2],[0,1,0,0],[0,0,-1,1/2],[0,0,0,1]];
M261:=[[1,0,0,0],[0,-1,0,1/2],[0,0,1,1/2],[0,0,0,1]];
M361:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 62 (Pnma)
M162:=[[1,0,0,1/2],[0,1,0,0],[0,0,-1,1/2],[0,0,0,1]];
M262:=[[1,0,0,0],[0,-1,0,1/2],[0,0,1,0],[0,0,0,1]];
M362:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 63 (Cmcm)
M163:=[[1,0,0,0],[0,1,0,0],[0,0,-1,1/2],[0,0,0,1]];
M263:=[[0,-1,0,0],[-1,0,0,0],[0,0,1,1/2],[0,0,0,1]];
M363:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 64 (Cmce)
M164:=[[1,0,0,1/2],[0,1,0,1/2],[0,0,-1,1/2],[0,0,0,1]];
M264:=[[0,-1,0,1/2],[-1,0,0,1/2],[0,0,1,1/2],[0,0,0,1]];
M364:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 65 (Cmmm)
M165:=[[1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M265:=[[0,-1,0,0],[-1,0,0,0],[0,0,1,0],[0,0,0,1]];
M365:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 66 (Cccm)
M166:=[[1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M266:=[[0,-1,0,0],[-1,0,0,0],[0,0,1,1/2],[0,0,0,1]];
M366:=[[0,1,0,0],[1,0,0,0],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 67 (Cmme)
M167:=[[1,0,0,1/2],[0,1,0,1/2],[0,0,-1,0],[0,0,0,1]];
M267:=[[0,-1,0,1/2],[-1,0,0,1/2],[0,0,1,0],[0,0,0,1]];
M367:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 68 (Ccce)
M168:=[[1,0,0,1/2],[0,1,0,1/2],[0,0,-1,0],[0,0,0,1]];
M268:=[[0,1,0,0],[1,0,0,0],[0,0,1,1/2],[0,0,0,1]];
M368:=[[0,-1,0,1/2],[-1,0,0,1/2],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 69 (Fmmm)
M169:=[[0,-1,0,0],[-1,0,0,0],[1,1,1,0],[0,0,0,1]];
M269:=[[0,0,-1,0],[1,1,1,0],[-1,0,0,0],[0,0,0,1]];
M369:=[[1,1,1,0],[0,0,-1,0],[0,-1,0,0],[0,0,0,1]];
#####################################################################
#Space Group No. 70 (Fddd)
M170:=[[0,-1,0,0],[-1,0,0,0],[1,1,1,1/2],[0,0,0,1]];
M270:=[[0,0,-1,0],[1,1,1,1/2],[-1,0,0,0],[0,0,0,1]];
M370:=[[1,1,1,1/2],[0,0,-1,0],[0,-1,0,0],[0,0,0,1]];
#####################################################################
#Space Group No. 71 (Immm)
M171:=[[0,-1,1,0],[-1,0,1,0],[0,0,1,0],[0,0,0,1]];
M271:=[[0,1,-1,0],[0,1,0,0],[-1,1,0,0],[0,0,0,1]];
M371:=[[1,0,0,0],[1,0,-1,0],[1,-1,0,0],[0,0,0,1]];
#####################################################################
#Space Group No. 72 (Ibam)
M172:=[[0,-1,1,0],[-1,0,1,0],[0,0,1,0],[0,0,0,1]];
M272:=[[0,1,-1,1/2],[0,1,0,1/2],[-1,1,0,0],[0,0,0,1]];
M372:=[[1,0,0,1/2],[1,0,-1,1/2],[1,-1,0,0],[0,0,0,1]];
#####################################################################
#Space Group No. 73 (Ibca)
M173:=[[0,-1,1,1/2],[-1,0,1,0],[0,0,1,1/2],[0,0,0,1]];
M273:=[[0,1,-1,0],[0,1,0,1/2],[-1,1,0,1/2],[0,0,0,1]];
M373:=[[1,0,0,1/2],[1,0,-1,1/2],[1,-1,0,0],[0,0,0,1]];
#####################################################################
#Space Group No. 74 (Imma)
M174:=[[0,-1,1,1/2],[-1,0,1,0],[0,0,1,1/2],[0,0,0,1]];
M274:=[[0,1,-1,1/2],[0,1,0,0],[-1,1,0,1/2],[0,0,0,1]];
M374:=[[1,0,0,0],[1,0,-1,0],[1,-1,0,0],[0,0,0,1]];




#####################################################################
#Space Group No. 91 (Subscript[P4,1]22) 
C291:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,1/2],[0,0,0,1]];
C2p91:=[[-1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
C2pp91:=[[0,-1,0,0],[-1,0,0,0],[0,0,-1,1/4],[0,0,0,1]];
#####################################################################
#Space Group No. 92 (Subscript[P4,1]*Subscript[2,2]2)
C292:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,1/2],[0,0,0,1]];
C2p92:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,-1,1/4],[0,0,0,1]];
C2pp92:=[[0,-1,0,0],[-1,0,0,0],[0,0,-1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 93 (Subscript[P4,2]22)
C293:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p93:=[[-1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
C2pp93:=[[0,-1,0,0],[-1,0,0,0],[0,0,-1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 94 (Subscript[P4,2]*Subscript[2,1]2)
C294:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p94:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,-1,1/2],[0,0,0,1]];
C2pp94:=[[0,-1,0,0],[-1,0,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 95 (Subscript[P4,3]22)
C295:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,1/2],[0,0,0,1]];
C2p95:=[[-1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
C2pp95:=[[0,-1,0,0],[-1,0,0,0],[0,0,-1,3/4],[0,0,0,1]];
#####################################################################
#Space Group No. 96 (Subscript[P4,3]*Subscript[2,2]2)
C296:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,1/2],[0,0,0,1]];
C2p96:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,-1,3/4],[0,0,0,1]];
C2pp96:=[[0,-1,0,0],[-1,0,0,0],[0,0,-1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 97 (I422)
C297:=[[0,1,-1,0],[1,0,-1,0],[0,0,-1,0],[0,0,0,1]];
C2p97:=[[0,-1,1,0],[0,-1,0,0],[1,-1,0,0],[0,0,0,1]];
C2pp97:=[[0,-1,0,0],[-1,0,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 98 (Subscript[I4,1]22)
C298:=[[0,1,-1,1],[1,0,-1,1],[0,0,-1,1],[0,0,0,1]];
C2p98:=[[0,-1,1,3/4],[0,-1,0,5/4],[1,-1,0,1/2],[0,0,0,1]];
C2pp98:=[[0,-1,0,0],[-1,0,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 102 (Subscript[P4,2]nm)
C2102:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
Mp102:=[[1,0,0,1/2],[0,-1,0,1/2],[0,0,1,1/2],[0,0,0,1]];
M102:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 106 (Subscript[P4,2]bc)
C2106:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
Mp106:=[[1,0,0,1/2],[0,-1,0,1/2],[0,0,1,0],[0,0,0,1]];
M106:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 109 (Subscript[I4,1]md)
C2109:=[[0,1,-1,1],[1,0,-1,1],[0,0,-1,1],[0,0,0,1]];
Mp109:=[[0,1,-1,0],[0,1,0,0],[-1,1,0,0],[0,0,0,1]];
M109:=[[0,1,0,3/4],[1,0,0,5/4],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 110 (Subscript[I4,1]cd)
C2110:=[[0,1,-1,1],[1,0,-1,1],[0,0,-1,1],[0,0,0,1]];
Mp110:=[[0,1,-1,1/2],[0,1,0,1/2],[-1,1,0,0],[0,0,0,1]];
M110:=[[0,1,0,1/4],[1,0,0,3/4],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 111 (P-42m)*(maximally-reducible from 123)
C2111:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p111:=[[-1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M111:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 112 (P-42c)*(maximally-reducible from 131)
C2112:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p112:=[[-1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M112:=[[0,1,0,0],[1,0,0,0],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 113 (P-4Subscript[2,1]m)*(maximally-reducible from 127)
C2113:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p113:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,-1,0],[0,0,0,1]];
M113:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 114 (P-4Subscript[2,1]c)*(maximally-reducible from 128)
C2114:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p114:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,-1,1/2],[0,0,0,1]];
M114:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 115 (P-4m2)*(maximally-reducible from 123)
C2115:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p115:=[[0,1,0,0],[1,0,0,0],[0,0,-1,0],[0,0,0,1]];
M115:=[[1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 116 (P-4c2)(maximally-reducible from 132)*
C2116:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p116:=[[0,1,0,0],[1,0,0,0],[0,0,-1,1/2],[0,0,0,1]];
M116:=[[1,0,0,0],[0,-1,0,0],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 117 (P-4b2)*(maximally-reducible from 127)
C2117:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p117:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,-1,0],[0,0,0,1]];
M117:=[[1,0,0,1/2],[0,-1,0,1/2],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 118 (P-4n2)
C2118:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p118:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,-1,1/2],[0,0,0,1]];
M118:=[[1,0,0,1/2],[0,-1,0,1/2],[0,0,1,1/2],[0,0,0,1]];
#####################################################################
#Space Group No. 119 (I-4m2)
C2119:=[[0,1,-1,0],[1,0,-1,0],[0,0,-1,0],[0,0,0,1]];
C2p119:=[[0,1,-1,0],[0,1,0,0],[-1,1,0,0],[0,0,0,1]];
M119:=[[-1,0,1,0],[0,-1,1,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 120 (I-4c2)
C2120:=[[0,1,-1,0],[1,0,-1,0],[0,0,-1,0],[0,0,0,1]];
C2p120:=[[-1,0,1,1/2],[0,-1,1,1/2],[0,0,1,0],[0,0,0,1]];
M120:=[[0,1,-1,1/2],[0,1,0,1/2],[-1,1,0,0],[0,0,0,1]];
#####################################################################
#Space Group No. 121 (I-42m)(maximally-reducible from 139)
C2121:=[[0,1,-1,0],[1,0,-1,0],[0,0,-1,0],[0,0,0,1]];
C2p121:=[[0,-1,1,0],[0,-1,0,0],[1,-1,0,0],[0,0,0,1]];
M121:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 123 (P4/mmm)
C2123:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p123:=[[-1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M123:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
P123:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 124 (P4/mcc)
C2124:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p124:=[[-1,0,0,0],[0,1,0,0],[0,0,-1,1/2],[0,0,0,1]];
M124:=[[0,1,0,0],[1,0,0,0],[0,0,1,1/2],[0,0,0,1]];
P124:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 125 (P4/nbm)
C2125:=[[-1,0,0,1/2],[0,-1,0,1/2],[0,0,1,0],[0,0,0,1]];
C2p125:=[[-1,0,0,1/2],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M125:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,1,0],[0,0,0,1]];
P125:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 127 (P4/mbm)
C2127:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p127:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,-1,0],[0,0,0,1]];
M127:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,1,0],[0,0,0,1]];
P127:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 128 (P4/mnc)
C2128:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p128:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,-1,1/2],[0,0,0,1]];
M128:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,1,1/2],[0,0,0,1]];
P128:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 129 (P4/nmm)
C2129:=[[-1,0,0,1/2],[0,-1,0,1/2],[0,0,1,0],[0,0,0,1]];
C2p129:=[[-1,0,0,0],[0,1,0,1/2],[0,0,-1,0],[0,0,0,1]];
M129:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
P129:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 130 (P4/ncc)
C2130:=[[-1,0,0,1/2],[0,-1,0,1/2],[0,0,1,0],[0,0,0,1]];
C2p130:=[[-1,0,0,0],[0,1,0,1/2],[0,0,-1,1/2],[0,0,0,1]];
M130:=[[0,1,0,0],[1,0,0,0],[0,0,1,1/2],[0,0,0,1]];
P130:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 131 (Subscript[P4,2]/mmc)
C2131:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p131:=[[-1,0,0,0],[0,1,0,0],[0,0,-1,0],[0,0,0,1]];
M131:=[[0,1,0,0],[1,0,0,0],[0,0,1,1/2],[0,0,0,1]];
P131:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 132 (Subscript[P4,2]/mcm)
C2132:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p132:=[[-1,0,0,0],[0,1,0,0],[0,0,-1,1/2],[0,0,0,1]];
M132:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
P132:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 134 (Subscript[P4,2]/nnm)
C2134:=[[-1,0,0,1/2],[0,-1,0,1/2],[0,0,1,0],[0,0,0,1]];
C2p134:=[[-1,0,0,1/2],[0,1,0,0],[0,0,-1,1/2],[0,0,0,1]];
M134:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,1,0],[0,0,0,1]];
P134:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 135 (Subscript[P4,2]/mbc)
C2135:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p135:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,-1,0],[0,0,0,1]];
M135:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,1,1/2],[0,0,0,1]];
P135:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 136 (Subscript[P4,2]/mnm)
C2136:=[[-1,0,0,0],[0,-1,0,0],[0,0,1,0],[0,0,0,1]];
C2p136:=[[-1,0,0,1/2],[0,1,0,1/2],[0,0,-1,1/2],[0,0,0,1]];
M136:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
P136:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 138 (Subscript[P4,2]/ncm)
C2138:=[[-1,0,0,1/2],[0,-1,0,1/2],[0,0,1,0],[0,0,0,1]];
C2p138:=[[-1,0,0,0],[0,1,0,1/2],[0,0,-1,1/2],[0,0,0,1]];
M138:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
P138:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 139 (I4/mmm)
C2139:=[[0,1,-1,0],[1,0,-1,0],[0,0,-1,0],[0,0,0,1]];
C2p139:=[[0,-1,1,0],[0,-1,0,0],[1,-1,0,0],[0,0,0,1]];
M139:=[[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1]];
P139:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 140 (I4/mcm)
C2140:=[[0,1,-1,0],[1,0,-1,0],[0,0,-1,0],[0,0,0,1]];
C2p140:=[[0,-1,1,1/2],[0,-1,0,1/2],[1,-1,0,0],[0,0,0,1]];
M140:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,1,0],[0,0,0,1]];
P140:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################
#Space Group No. 142 (Subscript[I4,1]/acd)
C2142:=[[0,1,-1,1/2],[1,0,-1,0],[0,0,-1,1/2],[0,0,0,1]];
C2p142:=[[0,-1,1,0],[0,-1,0,1/2],[1,-1,0,1/2],[0,0,0,1]];
M142:=[[0,1,0,1/2],[1,0,0,1/2],[0,0,1,1/2],[0,0,0,1]];
P142:=[[-1,0,0,0],[0,-1,0,0],[0,0,-1,0],[0,0,0,1]];
#####################################################################



#####################################################################
#Space Group No. 47 (Pmmm)
#####################################################################
Am1in47:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in47:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in47:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axin47:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1;
end;
#####################################################################
Ayin47:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return y1;
end;
#####################################################################
Azin47:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return z1;
end;
#####################################################################
#####################################################################
#Space Group No. 48 (Pnnn)
#####################################################################
Am1in48:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in48:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in48:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyzin48:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
#####################################################################
#Space Group No. 49 (Pccm)
#####################################################################
Am1in49:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in49:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in49:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axin49:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1;
end;
#####################################################################
Ayin49:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return y1;
end;
#####################################################################
#####################################################################
#Space Group No. 50 (Pban)
#####################################################################
Am1in50:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in50:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in50:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Azin50:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return z1;
end;
#####################################################################
BGAPin50:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*mp1*mp2 + m1*m2*mpp1 + m2*mp1*mpp1 + m1*mp2*mpp1 + mp1*mp2*mpp1 + mp2*x1 + m1*x2 + mp1*x2 + mpp1*x2 + m2*y1 + mp2*y1;
end;
#####################################################################
#####################################################################
#Space Group No. 51 (Pmma)
#####################################################################
Am1in51:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in51:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in51:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Ayin51:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return y1;
end;
#####################################################################
Azin51:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return z1;
end;
#####################################################################
#####################################################################
#Space Group No. 52 (Pnna)
#####################################################################
Am1in52:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in52:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in52:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
B1in52:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*m2*mp1*mp2 + m1*mp2*mpp1 + m1*m2*mp2*mpp1 + mp1*mp2*mpp1 + m2*mp1*mp2*mpp1 + m1*m2*mpp2 + m1*mp1*mpp2 + m1*mp2*mpp2 + m1*m2*x1 + mp1*mp2*x1 + m2*mpp1*x1 + mp2*mpp1*x1 + mpp2*x1 + m1*m2*x2 + mp1*mp2*x2 + m2*mpp1*x2 + mp2*mpp1*x2 + x1*x2 + m2*y1 + mp2*y1 + mpp2*y1 + mpp2*z1;
end;
#####################################################################
B2in52:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*m2*mp2 + m1*mp1*mp2 + m2*mp1*mp2 + m1*mp2*mpp1 + mp1*mp2*mpp1 + m1*m2*mpp2 + m2*mp1*mpp2 + mp2*x1 + mpp2*x1 + m2*y1 + mp2*y1 + mpp2*y1 + m1*y2 + mp1*y2 + mpp1*y2 + mpp2*z1 + m1*z2 + mp1*z2 + mpp1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 53 (Pmna)
#####################################################################
Am1in53:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in53:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in53:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Ayin53:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return y1;
end;
#####################################################################
Bin53:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*m2*mp2 + m2*mp1*mp2 + m1*m2*mp1*mp2 + m1*mp2*mpp1 + mp1*mp2*mpp1 + m1*mp1*mpp2 + m1*mp2*mpp2 + mp1*mp2*mpp2 + mp2*x1 + mp2*z1 + m1*mp2*z1 + m2*mp2*z1 + mp1*mp2*z1 + mpp2*z1 + m1*mp1*z2 + m1*mp2*z2 + mp1*mp2*z2 + z1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 54 (Pcca)
#####################################################################
Am1in54:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in54:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in54:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Ayin54:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return y1;
end;
#####################################################################
#####################################################################
#Space Group No. 55 (Pbam)
#####################################################################
Am1in55:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in55:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in55:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Azin55:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return z1;
end;
#####################################################################
Bin55:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return mp1*mp2*mpp1 + mp1*mp2*x1 + mp2*mpp1*x1 + mp1*mp2*x2 + mp2*mpp1*x2 + x1*x2 + mp2*y1;
end;
#####################################################################
#####################################################################
#Space Group No. 56 (Pccn)
#####################################################################
Am1in56:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in56:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in56:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
B1in56:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m2*mp1*mp2 + m2*mp1*mpp1 + mp2*mpp1 + m1*mp2*mpp1 + m1*mp1*mpp2 + m2*mp1*mpp2 + m1*mp2*mpp2 + mpp1*mpp2 + m2*x1 + mp2*x1 + m2*y1 + mp2*y1 + mp1*y2 + mpp1*y2;
end;
#####################################################################
B2in56:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m2*mp1*mp2 + m1*mp2*mpp1 + m1*m2*mpp2 + m1*mp1*mpp2 + m1*mp2*mpp2 + mp2*x1 + m1*x2 + mpp1*x2 + m2*y1 + mp2*y1 + mpp2*y1 + m2*z1;
end;
#####################################################################
#####################################################################
#Space Group No. 57 (Pbcm)
#####################################################################
Am1in57:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in57:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in57:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axin57:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1;
end;
#####################################################################
#####################################################################
#Space Group No. 58 (Pnnm)
#####################################################################
Am1in58:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in58:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in58:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
B1in58:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*mp2 + m2*mp1*mpp1 + mp2*mpp1 + m1*mpp2 + mp1*mpp2 + mp1*mp2*mpp2 + mp1*mpp1*mpp2 + mp2*mpp1*mpp2 + m2*x1 + mpp2*x1 + mp1*x2 + mpp1*x2 + m2*y1 + mpp2*y1 + mp1*z2 + mpp1*z2;
end;
#####################################################################
B2in58:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return mp1*mp2*mpp1*mpp2 + mp1*mp2*x1 + mp2*mpp1*x1 + mp1*mpp2*x1 + mp2*mpp2*x1 + mpp1*mpp2*x1 + mp1*mp2*x2 + mp1*mpp1*x2 + mp2*mpp1*x2 + mp1*mpp2*x2 + mpp1*mpp2*x2 + x1*x2 + mp1*mp2*y1 + mp2*mpp1*y1 + mp1*mpp2*y1 + mp2*mpp2*y1 + mpp1*mpp2*y1 + x2*y1 + mp1*mp2*y2 + mp1*mpp1*y2 + mp2*mpp1*y2 + mp1*mpp2*y2 + mpp1*mpp2*y2 + x1*y2 + y1*y2;
end;
#####################################################################
B3in58:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*m2*mp1 + m1*m2*mp1*mp2 + m1*m2*mpp1 + m1*mp2*mpp1 + m1*m2*mp2*mpp1 + mp1*mp2*mpp1 + m2*mp1*mp2*mpp1 + m1*mpp2 + m1*mp1*mpp2 + m1*m2*mp1*mpp2 + m1*mp2*mpp2 + m1*mp1*mp2*mpp2 + mpp1*mpp2 + m1*m2*mpp1*mpp2 + mp1*mpp1*mpp2 + m2*mp1*mpp1*mpp2 + mp2*mpp1*mpp2 + m1*mp2*mpp1*mpp2 + m2*x1 + mp1*mp2*x1 + mp2*mpp1*x1 + mpp2*x1 + mp1*mpp2*x1 + mp2*mpp2*x1 + mpp1*mpp2*x1 + mp1*x2 + mp1*mp2*x2 + mpp1*x2 + mp1*mpp1*x2 + mp2*mpp1*x2 + mp1*mpp2*x2 + mpp1*mpp2*x2 + x1*x2 + m1*mp2*y1 + m2*mp2*y1 + mp2*mpp1*y1 + m1*mpp2*y1 + m2*mpp2*y1 + mpp1*mpp2*y1 + x2*y1 + m1*mp1*y2 + m1*mp2*y2 + m1*mpp1*y2 + mp2*mpp1*y2 + m1*mpp2*y2 + mpp1*mpp2*y2 + x1*y2 + m2*z1 + m1*mp2*z1 + m2*mp2*z1 + mp1*mp2*z1 + mpp2*z1 + m1*mpp2*z1 + m2*mpp2*z1 + mp1*mpp2*z1 + mp2*mpp2*z1 + y2*z1 + mp1*z2 + m1*mp1*z2 + m1*mp2*z2 + mp1*mp2*z2 + mpp1*z2 + m1*mpp1*z2 + mp1*mpp1*z2 + m1*mpp2*z2 + mp1*mpp2*z2 + y1*z2 + z1*z2;
end;
#####################################################################
CGAPin58:=function(g1,g2,g3)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2,x3,y3,z3,m3,mp3,mpp3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];x3:=g3[1];y3:=g3[2];z3:=g3[3];m3:=g3[4];mp3:=g3[5];mpp3:=g3[6];
return m1*m2*m3*mp1 + m1*m2*mp1*mp3 + m1*m2*m3*mp1*mp3 + m1*mp2*mp3 + m1*mp1*mp2*mp3 + m1*m2*mp1*mp2*mp3 + m3*mp1*mp2*mp3 + m1*m3*mp1*mp2*mp3 + m1*m2*m3*mpp1 + m2*m3*mp1*mpp1 + m3*mp2*mpp1 + m1*m3*mp2*mpp1 + m2*m3*mp2*mpp1 + m3*mp1*mp2*mpp1 + m2*m3*mp1*mp2*mpp1 + m1*m2*m3*mp3*mpp1 + m2*mp1*mp3*mpp1 + m1*m2*mp1*mp3*mpp1 + m1*mp2*mp3*mpp1 + m2*mp2*mp3*mpp1 + m1*m2*mp2*mp3*mpp1 + m1*m3*mp2*mp3*mpp1 + m2*m3*mp2*mp3*mpp1 + m1*mp1*mp2*mp3*mpp1 + m1*m3*mpp2 + m3*mp1*mpp2 + m1*m3*mp1*mpp2 + m1*m3*mp2*mpp2 + m3*mp1*mp2*mpp2 + m1*m3*mp3*mpp2 + m1*mp1*mp3*mpp2 + m1*m2*mp1*mp3*mpp2 + m3*mp1*mp3*mpp2 + m1*m3*mp2*mp3*mpp2 + m1*mp1*mp2*mp3*mpp2 + m2*m3*mpp1*mpp2 + m2*m3*mp1*mpp1*mpp2 + m3*mp2*mpp1*mpp2 + m3*mp1*mp2*mpp1*mpp2 + mp3*mpp1*mpp2 + m1*m2*mp3*mpp1*mpp2 + m3*mp3*mpp1*mpp2 + m2*m3*mp3*mpp1*mpp2 + mp1*mp3*mpp1*mpp2 + mp2*mp3*mpp1*mpp2 + m1*mp2*mp3*mpp1*mpp2 + m2*mp2*mp3*mpp1*mpp2 + m3*mp2*mp3*mpp1*mpp2 + m1*m2*mp1*mpp3 + m1*m2*m3*mp1*mpp3 + m1*mp2*mpp3 + m1*m3*mp2*mpp3 + m1*m2*mp1*mp2*mpp3 + m3*mp1*mp2*mpp3 + m1*m3*mp1*mp2*mpp3 + m1*m2*mp1*mp3*mpp3 + m1*m3*mp2*mp3*mpp3 + m1*mp1*mp2*mp3*mpp3 + m2*mpp1*mpp3 + m1*m2*m3*mpp1*mpp3 + m1*m2*mp1*mpp1*mpp3 + mp2*mpp1*mpp3 + m1*mp2*mpp1*mpp3 + m1*m2*mp2*mpp1*mpp3 + m3*mp2*mpp1*mpp3 + m1*m3*mp2*mpp1*mpp3 + m2*m3*mp2*mpp1*mpp3 + m3*mp1*mp2*mpp1*mpp3 + m1*m3*mp1*mp2*mpp1*mpp3 + m2*m3*mp1*mp2*mpp1*mpp3 + m2*mp3*mpp1*mpp3 + m1*m2*mp3*mpp1*mpp3 + mp2*mp3*mpp1*mpp3 + m1*mp2*mp3*mpp1*mpp3 + m3*mp2*mp3*mpp1*mpp3 + m1*mp1*mp2*mp3*mpp1*mpp3 + m2*mp1*mp2*mp3*mpp1*mpp3 + m3*mp1*mp2*mp3*mpp1*mpp3 + m1*m3*mp1*mp2*mp3*mpp1*mpp3 + m2*m3*mp1*mp2*mp3*mpp1*mpp3 + m1*mpp2*mpp3 + mp1*mpp2*mpp3 + m1*m2*mp1*mpp2*mpp3 + m3*mp1*mpp2*mpp3 + m1*m3*mp2*mpp2*mpp3 + mp1*mp2*mpp2*mpp3 + m1*mp1*mp2*mpp2*mpp3 + m1*m3*mp3*mpp2*mpp3 + m1*mp2*mp3*mpp2*mpp3 + m2*mpp1*mpp2*mpp3 + m1*m2*mpp1*mpp2*mpp3 + m2*m3*mpp1*mpp2*mpp3 + mp1*mpp1*mpp2*mpp3 + m1*mp1*mpp1*mpp2*mpp3 + m1*m3*mp1*mpp1*mpp2*mpp3 + m2*m3*mp1*mpp1*mpp2*mpp3 + m1*mp2*mpp1*mpp2*mpp3 + m2*mp2*mpp1*mpp2*mpp3 + m3*mp2*mpp1*mpp2*mpp3 + m3*mp1*mp2*mpp1*mpp2*mpp3 + m3*mp3*mpp1*mpp2*mpp3 + mp1*mp3*mpp1*mpp2*mpp3 + m1*mp1*mp3*mpp1*mpp2*mpp3 + m2*mp1*mp3*mpp1*mpp2*mpp3 + m1*m3*mp1*mp3*mpp1*mpp2*mpp3 + m2*m3*mp1*mp3*mpp1*mpp2*mpp3 + mp1*mp2*mp3*mpp1*mpp2*mpp3 + m3*mp1*mp2*mp3*mpp1*mpp2*mpp3 + m2*m3*mp2*x1 + m2*mp3*x1 + m1*m2*mp3*x1 + m2*m3*mp3*x1 + m1*mp2*mp3*x1 + m2*mp2*mp3*x1 + m3*mp2*mp3*x1 + m3*mp2*mpp1*x1 + m2*mp3*mpp1*x1 + mp2*mp3*mpp1*x1 + m2*m3*mpp2*x1 + m3*mp2*mpp2*x1 + m2*mp3*mpp2*x1 + mp2*mp3*mpp2*x1 + m3*mpp1*mpp2*x1 + m1*m2*mpp3*x1 + m2*m3*mpp3*x1 + mp2*mpp3*x1 + m1*mp2*mpp3*x1 + m3*mp2*mpp3*x1 + m2*mp3*mpp3*x1 + mp2*mp3*mpp3*x1 + m2*mpp1*mpp3*x1 + mpp1*mpp2*mpp3*x1 + m1*m3*mp2*x2 + m1*mp3*x2 + m1*m3*mp3*x2 + m1*mp2*mp3*x2 + m3*mp2*mpp1*x2 + m2*mp3*mpp1*x2 + mp2*mp3*mpp1*x2 + m1*m3*mpp2*x2 + m1*mp3*mpp2*x2 + m3*mpp1*mpp2*x2 + m1*m3*mpp3*x2 + m1*mp3*mpp3*x2 + m2*mpp1*mpp3*x2 + mpp1*mpp2*mpp3*x2 + m1*m3*mp2*x3 + mp1*mp2*x3 + m1*mp2*mp3*x3 + m2*mp2*mpp1*x3 + m3*mp2*mpp1*x3 + mp1*mp2*mpp1*x3 + m3*mp1*mp2*mpp1*x3 + m1*m3*mp1*mp2*mpp1*x3 + m2*m3*mp1*mp2*mpp1*x3 + m2*mp3*mpp1*x3 + mp2*mp3*mpp1*x3 + m1*mpp2*x3 + m1*m3*mpp2*x3 + mp1*mpp2*x3 + m1*mp3*mpp2*x3 + mpp1*mpp2*x3 + m2*mpp1*mpp2*x3 + m3*mpp1*mpp2*x3 + mp1*mpp1*mpp2*x3 + m1*m3*mp1*mpp1*mpp2*x3 + m2*m3*mp1*mpp1*mpp2*x3 + mp2*mpp1*mpp2*x3 + m3*mp1*mp2*mpp1*mpp2*x3 + m2*mpp1*mpp3*x3 + mp1*mp2*mpp1*mpp3*x3 + m1*mp1*mp2*mpp1*mpp3*x3 + m2*mp1*mp2*mpp1*mpp3*x3 + mpp1*mpp2*mpp3*x3 + m1*mp1*mpp1*mpp2*mpp3*x3 + m2*mp1*mpp1*mpp2*mpp3*x3 + mp1*mp2*mpp1*mpp2*mpp3*x3 + m1*m3*mp2*y1 + m2*m3*mp2*y1 + m1*m3*mp1*mp2*y1 + m1*m2*m3*mp1*mp2*y1 + mp2*mp3*y1 + m3*mp2*mp3*y1 + mp1*mp2*mp3*y1 + m3*mp2*mpp1*y1 + m1*m3*mp2*mpp1*y1 + m2*m3*mp2*mpp1*y1 + m1*m2*m3*mp2*mpp1*y1 + m3*mp1*mp2*mpp1*y1 + m2*m3*mp1*mp2*mpp1*y1 + m1*m3*mpp2*y1 + m2*m3*mpp2*y1 + m1*m3*mp1*mpp2*y1 + m1*m2*m3*mp1*mpp2*y1 + m3*mp2*mpp2*y1 + m3*mp3*mpp2*y1 + mp1*mp3*mpp2*y1 + m3*mpp1*mpp2*y1 + m1*m3*mpp1*mpp2*y1 + m2*m3*mpp1*mpp2*y1 + m1*m2*m3*mpp1*mpp2*y1 + m3*mp1*mpp1*mpp2*y1 + m2*m3*mp1*mpp1*mpp2*y1 + m2*mp1*mpp3*y1 + m1*m2*mp1*mpp3*y1 + m2*m3*mp1*mpp3*y1 + m3*mp2*mpp3*y1 + m1*m3*mp2*mpp3*y1 + m2*m3*mp2*mpp3*y1 + mp1*mp2*mpp3*y1 + m1*mp1*mp2*mpp3*y1 + m1*m2*mp1*mp2*mpp3*y1 + m2*mp1*mp3*mpp3*y1 + m1*m2*mp1*mp3*mpp3*y1 + m2*m3*mp1*mp3*mpp3*y1 + mp2*mp3*mpp3*y1 + m1*mp2*mp3*mpp3*y1 + m2*mp2*mp3*mpp3*y1 + m1*m3*mp2*mp3*mpp3*y1 + m2*m3*mp2*mp3*mpp3*y1 + m1*m2*mpp1*mpp3*y1 + m2*m3*mpp1*mpp3*y1 + m2*mp1*mpp1*mpp3*y1 + m1*mp2*mpp1*mpp3*y1 + m2*mp2*mpp1*mpp3*y1 + m1*m2*mp2*mpp1*mpp3*y1 + m3*mp2*mpp1*mpp3*y1 + mp1*mp2*mpp1*mpp3*y1 + m2*mp1*mp2*mpp1*mpp3*y1 + m1*m2*mp3*mpp1*mpp3*y1 + m2*m3*mp3*mpp1*mpp3*y1 + m2*mp1*mp3*mpp1*mpp3*y1 + mp2*mp3*mpp1*mpp3*y1 + m3*mp2*mp3*mpp1*mpp3*y1 + m1*m3*mpp2*mpp3*y1 + m2*m3*mpp2*mpp3*y1 + m1*m2*mp1*mpp2*mpp3*y1 + m3*mp1*mpp2*mpp3*y1 + m3*mp2*mpp2*mpp3*y1 + m1*mp3*mpp2*mpp3*y1 + m2*mp3*mpp2*mpp3*y1 + m3*mp3*mpp2*mpp3*y1 + m1*m3*mp3*mpp2*mpp3*y1 + m2*m3*mp3*mpp2*mpp3*y1 + mp1*mp3*mpp2*mpp3*y1 + m1*mp1*mp3*mpp2*mpp3*y1 + m3*mp1*mp3*mpp2*mpp3*y1 + mp2*mp3*mpp2*mpp3*y1 + m3*mp2*mp3*mpp2*mpp3*y1 + m2*mpp1*mpp2*mpp3*y1 + m1*m2*mpp1*mpp2*mpp3*y1 + m2*mp1*mpp1*mpp2*mpp3*y1 + mp3*mpp1*mpp2*mpp3*y1 + m1*mp3*mpp1*mpp2*mpp3*y1 + mp1*mp3*mpp1*mpp2*mpp3*y1 + m1*m3*mp1*x2*y1 + m3*mpp1*x2*y1 + m1*m3*mpp1*x2*y1 + m3*mp1*mpp1*x2*y1 + m1*mp1*mpp3*x2*y1 + mpp1*mpp3*x2*y1 + m1*mpp1*mpp3*x2*y1 + mp1*mpp1*mpp3*x2*y1 + m1*m2*mp1*x3*y1 + m2*m3*mp1*x3*y1 + m1*m3*mp2*x3*y1 + m2*m3*mp2*x3*y1 + m2*mpp1*x3*y1 + m1*m2*mpp1*x3*y1 + m2*m3*mpp1*x3*y1 + m2*mp1*mpp1*x3*y1 + m3*mp2*mpp1*x3*y1 + m3*mpp2*x3*y1 + m1*m3*mpp2*x3*y1 + m2*m3*mpp2*x3*y1 + m1*mp1*mpp2*x3*y1 + m3*mp1*mpp2*x3*y1 + m3*mp2*mpp2*x3*y1 + mpp1*mpp2*x3*y1 + m1*mpp1*mpp2*x3*y1 + mp1*mpp1*mpp2*x3*y1 + m2*mp1*mpp3*x3*y1 + m1*mp2*mpp3*x3*y1 + m2*mp2*mpp3*x3*y1 + m2*mpp1*mpp3*x3*y1 + mp2*mpp1*mpp3*x3*y1 + mpp2*mpp3*x3*y1 + m1*mpp2*mpp3*x3*y1 + m2*mpp2*mpp3*x3*y1 + mp1*mpp2*mpp3*x3*y1 + mp2*mpp2*mpp3*x3*y1 + mp2*mp3*mpp1*y2 + mp3*mpp1*mpp2*y2 + m1*mpp3*y2 + m1*mp1*mpp3*y2 + m2*mp1*mpp3*y2 + m1*m3*mp1*mpp3*y2 + m2*m3*mp1*mpp3*y2 + m1*mp2*mpp3*y2 + m1*m3*mp2*mpp3*y2 + m1*mp3*mpp3*y2 + mp1*mp3*mpp3*y2 + m1*mp1*mp3*mpp3*y2 + m2*mp1*mp3*mpp3*y2 + m1*m3*mp1*mp3*mpp3*y2 + m2*m3*mp1*mp3*mpp3*y2 + m1*mp2*mp3*mpp3*y2 + m1*m3*mp2*mp3*mpp3*y2 + mpp1*mpp3*y2 + m1*mpp1*mpp3*y2 + m2*mpp1*mpp3*y2 + m3*mpp1*mpp3*y2 + m1*m3*mpp1*mpp3*y2 + m2*m3*mpp1*mpp3*y2 + mp1*mpp1*mpp3*y2 + m3*mp1*mpp1*mpp3*y2 + m3*mp2*mpp1*mpp3*y2 + m1*mp3*mpp1*mpp3*y2 + m2*mp3*mpp1*mpp3*y2 + m3*mp3*mpp1*mpp3*y2 + m1*m3*mp3*mpp1*mpp3*y2 + m2*m3*mp3*mpp1*mpp3*y2 + mp1*mp3*mpp1*mpp3*y2 + m3*mp1*mp3*mpp1*mpp3*y2 + mp2*mp3*mpp1*mpp3*y2 + m3*mp2*mp3*mpp1*mpp3*y2 + m1*mpp2*mpp3*y2 + m1*m3*mpp2*mpp3*y2 + mp1*mpp2*mpp3*y2 + m3*mp1*mpp2*mpp3*y2 + m1*mp3*mpp2*mpp3*y2 + m1*m3*mp3*mpp2*mpp3*y2 + mp1*mp3*mpp2*mpp3*y2 + m3*mp1*mp3*mpp2*mpp3*y2 + mpp1*mpp2*mpp3*y2 + m1*x3*y2 + mp1*x3*y2 + m1*m3*mp1*x3*y2 + m2*m3*mp1*x3*y2 + m1*m3*mp2*x3*y2 + mpp1*x3*y2 + m3*mpp1*x3*y2 + m1*m3*mpp1*x3*y2 + m2*m3*mpp1*x3*y2 + m3*mp1*mpp1*x3*y2 + m3*mp2*mpp1*x3*y2 + m1*m3*mpp2*x3*y2 + m3*mp1*mpp2*x3*y2 + m1*mp1*mpp3*x3*y2 + m2*mp1*mpp3*x3*y2 + m1*mp2*mpp3*x3*y2 + mpp1*mpp3*x3*y2 + m1*mpp1*mpp3*x3*y2 + m2*mpp1*mpp3*x3*y2 + mp1*mpp1*mpp3*x3*y2 + mp2*mpp1*mpp3*x3*y2 + m1*mpp2*mpp3*x3*y2 + mp1*mpp2*mpp3*x3*y2 + mp2*mpp1*y3 + mp1*mp2*mpp1*y3 + mp2*mp3*mpp1*y3 + mpp1*mpp2*y3 + mp1*mpp1*mpp2*y3 + mp3*mpp1*mpp2*y3 + mp2*mpp1*mpp3*y3 + mpp1*mpp2*mpp3*y3 + mp1*y2*y3 + mpp1*y2*y3 + m2*m3*z1 + m1*m3*mp2*z1 + m3*mp1*mp2*z1 + m1*m2*mp3*z1 + m2*m3*mp3*z1 + m1*mp2*mp3*z1 + m2*mp2*mp3*z1 + m3*mp2*mp3*z1 + m2*mp3*mpp1*z1 + mp2*mp3*mpp1*z1 + m3*mpp2*z1 + m1*m3*mpp2*z1 + m3*mp1*mpp2*z1 + mp3*mpp2*z1 + m2*mp3*mpp2*z1 + mp2*mp3*mpp2*z1 + m1*m2*mpp3*z1 + m2*m3*mpp3*z1 + mp2*mpp3*z1 + m2*mp2*mpp3*z1 + m3*mp2*mpp3*z1 + mp1*mp2*mpp3*z1 + m2*mp3*mpp3*z1 + mp2*mp3*mpp3*z1 + m2*mpp1*mpp3*z1 + mp2*mpp1*mpp3*z1 + m1*mpp2*mpp3*z1 + m2*mpp2*mpp3*z1 + mp1*mpp2*mpp3*z1 + mp2*mpp2*mpp3*z1 + m1*m3*mp2*z2 + m3*mp1*mp2*z2 + m1*m3*mp3*z2 + m1*mp2*mp3*z2 + m3*mp1*mpp1*z2 + m2*mp3*mpp1*z2 + mp2*mp3*mpp1*z2 + m1*m3*mpp2*z2 + m3*mp1*mpp2*z2 + m1*mp3*mpp2*z2 + m1*m3*mpp3*z2 + mp1*mp2*mpp3*z2 + m2*mpp1*mpp3*z2 + mp1*mpp1*mpp3*z2 + mp2*mpp1*mpp3*z2 + mp1*mpp2*mpp3*z2 + m3*x1*z2 + mpp3*x1*z2 + m1*x3*z2 + m3*y1*z2 + m1*m3*mp1*y1*z2 + mp3*y1*z2 + m3*mpp1*y1*z2 + m1*m3*mpp1*y1*z2 + m3*mp1*mpp1*y1*z2 + m1*mp1*mpp3*y1*z2 + mpp1*mpp3*y1*z2 + m1*mpp1*mpp3*y1*z2 + mp1*mpp1*mpp3*y1*z2 + m1*m3*mp2*z3 + mp1*mp2*z3 + m1*mp2*mp3*z3 + mp2*mpp1*z3 + m2*mp2*mpp1*z3 + m3*mp2*mpp1*z3 + m3*mp1*mp2*mpp1*z3 + m1*m3*mp1*mp2*mpp1*z3 + m2*m3*mp1*mp2*mpp1*z3 + m2*mp3*mpp1*z3 + m1*mpp2*z3 + m1*m3*mpp2*z3 + mp1*mpp2*z3 + m1*mp3*mpp2*z3 + m2*mpp1*mpp2*z3 + m3*mpp1*mpp2*z3 + m1*m3*mp1*mpp1*mpp2*z3 + m2*m3*mp1*mpp1*mpp2*z3 + mp2*mpp1*mpp2*z3 + m3*mp1*mp2*mpp1*mpp2*z3 + mp3*mpp1*mpp2*z3 + m2*mpp1*mpp3*z3 + mp2*mpp1*mpp3*z3 + mp1*mp2*mpp1*mpp3*z3 + m1*mp1*mp2*mpp1*mpp3*z3 + m2*mp1*mp2*mpp1*mpp3*z3 + m1*mp1*mpp1*mpp2*mpp3*z3 + m2*mp1*mpp1*mpp2*mpp3*z3 + mp1*mp2*mpp1*mpp2*mpp3*z3 + m1*m2*mp1*y1*z3 + m2*m3*mp1*y1*z3 + m1*m3*mp2*y1*z3 + m2*m3*mp2*y1*z3 + m2*mpp1*y1*z3 + m1*m2*mpp1*y1*z3 + m2*m3*mpp1*y1*z3 + m2*mp1*mpp1*y1*z3 + m3*mp2*mpp1*y1*z3 + m3*mpp2*y1*z3 + m1*m3*mpp2*y1*z3 + m2*m3*mpp2*y1*z3 + m1*mp1*mpp2*y1*z3 + m3*mp1*mpp2*y1*z3 + m3*mp2*mpp2*y1*z3 + mpp1*mpp2*y1*z3 + m1*mpp1*mpp2*y1*z3 + mp1*mpp1*mpp2*y1*z3 + m2*mp1*mpp3*y1*z3 + m1*mp2*mpp3*y1*z3 + m2*mp2*mpp3*y1*z3 + m2*mpp1*mpp3*y1*z3 + mp2*mpp1*mpp3*y1*z3 + mpp2*mpp3*y1*z3 + m1*mpp2*mpp3*y1*z3 + m2*mpp2*mpp3*y1*z3 + mp1*mpp2*mpp3*y1*z3 + mp2*mpp2*mpp3*y1*z3 + m1*y2*z3 + m1*m3*mp1*y2*z3 + m2*m3*mp1*y2*z3 + m1*m3*mp2*y2*z3 + m3*mpp1*y2*z3 + m1*m3*mpp1*y2*z3 + m2*m3*mpp1*y2*z3 + m3*mp1*mpp1*y2*z3 + m3*mp2*mpp1*y2*z3 + m1*m3*mpp2*y2*z3 + m3*mp1*mpp2*y2*z3 + m1*mp1*mpp3*y2*z3 + m2*mp1*mpp3*y2*z3 + m1*mp2*mpp3*y2*z3 + mpp1*mpp3*y2*z3 + m1*mpp1*mpp3*y2*z3 + m2*mpp1*mpp3*y2*z3 + mp1*mpp1*mpp3*y2*z3 + mp2*mpp1*mpp3*y2*z3 + m1*mpp2*mpp3*y2*z3 + mp1*mpp2*mpp3*y2*z3 + m1*z2*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 59 (Pmmn)
#####################################################################
Am1in59:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in59:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in59:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Azin59:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return z1;
end;
#####################################################################
Bin59:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m2*mp1*mp2 + m2*mp1*mpp1 + mp2*mpp1 + m1*mp2*mpp1 + m1*mp1*mpp2 + m2*mp1*mpp2 + m1*mp2*mpp2 + mpp1*mpp2 + m2*x1 + mp2*x1 + m2*y1 + mp2*y1 + mp1*y2 + mpp1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 60 (Pbcn)
#####################################################################
Am1in60:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in60:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in60:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Bin60:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*m2*mp1 + m1*m2*mp2 + m1*m2*mpp1 + m2*mp1*mpp1 + m1*mp2*mpp1 + m1*mp1*mpp2 + m2*mp1*mpp2 + m1*mp2*mpp2 + m2*x1 + m1*m2*x1 + mp2*x1 + m2*mpp1*x1 + m1*m2*x2 + m2*mpp1*x2 + x1*x2 + m2*y1;
end;
#####################################################################
#####################################################################
#Space Group No. 61 (Pbca)
#####################################################################
Am1in61:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in61:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in61:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
CGAPin61:=function(g1,g2,g3)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2,x3,y3,z3,m3,mp3,mpp3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];x3:=g3[1];y3:=g3[2];z3:=g3[3];m3:=g3[4];mp3:=g3[5];mpp3:=g3[6];
return m1*m2*m3 + m1*m2*m3*mp2 + m1*m2*m3*mp3 + m1*m2*mp2*mp3 + m1*m3*mp2*mp3 + m1*m2*mp3*mpp1 + m1*mp2*mp3*mpp1 + m1*m3*mp2*mpp2 + m1*m2*m3*mp2*mpp2 + m1*m2*m3*mp1*mp2*mpp2 + m1*mp3*mpp2 + m1*m2*m3*mp3*mpp2 + m1*mp2*mp3*mpp2 + m1*m2*mp2*mp3*mpp2 + m1*m2*m3*mpp1*mpp2 + m2*m3*mp2*mpp1*mpp2 + m2*m3*mp1*mp2*mpp1*mpp2 + m1*mp2*mpp3 + m1*m2*m3*mp2*mpp3 + m1*m2*mp3*mpp3 + m1*m2*m3*mp3*mpp3 + m1*mp2*mp3*mpp3 + m1*m3*mp2*mp3*mpp3 + m1*m2*mpp1*mpp3 + m1*mp2*mpp1*mpp3 + m1*mpp2*mpp3 + m1*m2*mpp2*mpp3 + m1*m3*mpp2*mpp3 + m1*m2*m3*mpp2*mpp3 + m1*m3*mp2*mpp2*mpp3 + m1*m2*mp1*mp2*mpp2*mpp3 + m1*m2*mp3*mpp2*mpp3 + m1*m2*mpp1*mpp2*mpp3 + m2*mp2*mpp1*mpp2*mpp3 + m2*mp1*mp2*mpp1*mpp2*mpp3 + m1*m2*m3*mp1*x1 + m1*m3*mp2*x1 + m2*m3*mp2*x1 + m1*m3*mp1*mp2*x1 + m2*m3*mp1*mp2*x1 + m2*mp3*x1 + mp2*mp3*x1 + m2*m3*mpp1*x1 + m2*m3*mp1*mpp1*x1 + m3*mp2*mpp1*x1 + m3*mp1*mp2*mpp1*x1 + m3*mpp2*x1 + m1*m3*mpp2*x1 + m2*m3*mpp2*x1 + m3*mp1*mpp2*x1 + m2*m3*mp1*mpp2*x1 + m3*mp2*mpp2*x1 + m3*mp1*mp2*mpp2*x1 + m2*mpp3*x1 + m1*m2*mp1*mpp3*x1 + mp2*mpp3*x1 + m1*mp2*mpp3*x1 + m2*mp2*mpp3*x1 + m1*mp1*mp2*mpp3*x1 + m2*mp1*mp2*mpp3*x1 + m2*mpp1*mpp3*x1 + m2*mp1*mpp1*mpp3*x1 + mp2*mpp1*mpp3*x1 + mp1*mp2*mpp1*mpp3*x1 + mpp2*mpp3*x1 + m1*mpp2*mpp3*x1 + m2*mpp2*mpp3*x1 + mp1*mpp2*mpp3*x1 + m2*mp1*mpp2*mpp3*x1 + mp2*mpp2*mpp3*x1 + mp1*mp2*mpp2*mpp3*x1 + m1*m2*m3*x2 + m1*m3*mp1*x2 + m1*m2*m3*mp1*x2 + m1*m3*mp2*x2 + m1*m3*mp1*mp2*x2 + m2*m3*mp1*mp2*x2 + m1*m2*mp3*x2 + m1*m3*mp3*x2 + m1*mp2*mp3*x2 + m3*mpp1*x2 + m1*m3*mpp1*x2 + m2*m3*mpp1*x2 + m3*mp1*mpp1*x2 + m2*m3*mp1*mpp1*x2 + m3*mp2*mpp1*x2 + m3*mp1*mp2*mpp1*x2 + m3*mp1*mpp2*x2 + m2*m3*mp1*mpp2*x2 + m3*mp1*mp2*mpp2*x2 + m1*mpp3*x2 + m1*mp1*mpp3*x2 + m1*m2*mp1*mpp3*x2 + m1*mp1*mp2*mpp3*x2 + m2*mp1*mp2*mpp3*x2 + m1*mp3*mpp3*x2 + mpp1*mpp3*x2 + m1*mpp1*mpp3*x2 + m2*mpp1*mpp3*x2 + mp1*mpp1*mpp3*x2 + m2*mp1*mpp1*mpp3*x2 + mp2*mpp1*mpp3*x2 + mp1*mp2*mpp1*mpp3*x2 + mp1*mpp2*mpp3*x2 + m2*mp1*mpp2*mpp3*x2 + mp1*mp2*mpp2*mpp3*x2 + m1*m2*m3*x3 + m1*m2*mp2*x3 + m1*m2*mp3*x3 + m1*mp2*mp3*x3 + m1*mpp2*x3 + m1*m3*mpp2*x3 + m1*mp2*mpp2*x3 + m1*mp2*mpp3*x3 + m1*mpp2*mpp3*x3 + m1*x2*x3 + m1*m2*m3*y2 + m1*m2*mp3*y2 + m1*m3*mp3*y2 + m1*mp2*mp3*y2 + m1*m3*mpp2*y2 + m1*mpp3*y2 + m1*mp2*mpp3*y2 + m1*mp3*mpp3*y2 + m1*mpp2*mpp3*y2 + m1*x3*y2 + m1*m2*m3*y3 + m1*m2*mp2*y3 + m1*m2*mp3*y3 + m1*mp2*mp3*y3 + m1*mpp2*y3 + m1*m3*mpp2*y3 + m1*mp2*mpp2*y3 + m1*mp2*mpp3*y3 + m1*mpp2*mpp3*y3 + m1*x2*y3 + m1*y2*y3 + m1*m2*m3*mpp2*z1 + m2*m3*mpp1*mpp2*z1 + m1*m2*mpp2*mpp3*z1 + m2*mpp1*mpp2*mpp3*z1 + m2*m3*x1*z1 + m3*mpp2*x1*z1 + m2*mpp3*x1*z1 + mpp2*mpp3*x1*z1 + m1*m3*x2*z1 + m2*m3*x2*z1 + m3*mpp1*x2*z1 + m3*mpp2*x2*z1 + m1*mpp3*x2*z1 + m2*mpp3*x2*z1 + mpp1*mpp3*x2*z1 + mpp2*mpp3*x2*z1 + m1*m2*m3*z2 + m1*m2*mp3*z2 + m1*m3*mp3*z2 + m1*mp2*mp3*z2 + m1*m3*mpp2*z2 + m1*m2*m3*mpp2*z2 + m2*m3*mpp1*mpp2*z2 + m1*mpp3*z2 + m1*mp2*mpp3*z2 + m1*mp3*mpp3*z2 + m1*mpp2*mpp3*z2 + m1*m2*mpp2*mpp3*z2 + m2*mpp1*mpp2*mpp3*z2 + m1*m3*x1*z2 + m2*m3*x1*z2 + m3*mpp1*x1*z2 + m3*mpp2*x1*z2 + m1*mpp3*x1*z2 + m2*mpp3*x1*z2 + mpp1*mpp3*x1*z2 + mpp2*mpp3*x1*z2 + m1*m3*x2*z2 + m3*mpp1*x2*z2 + m1*mpp3*x2*z2 + mpp1*mpp3*x2*z2 + m1*x3*z2 + m1*y3*z2 + m1*m2*m3*z3 + m1*m2*mp2*z3 + m1*m2*mp3*z3 + m1*mp2*mp3*z3 + m1*mpp2*z3 + m1*m3*mpp2*z3 + m1*mp2*mpp2*z3 + m1*mp2*mpp3*z3 + m1*mpp2*mpp3*z3 + m1*x2*z3 + m1*y2*z3 + m1*z2*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 62 (Pnma)
#####################################################################
Am1in62:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in62:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in62:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
B1in62:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m2*mp1 + m1*m2*mpp1 + m2*mp1*mpp1 + m1*mp2*mpp1 + m1*m2*mpp2 + m1*mp1*mpp2 + m2*mp1*mpp2 + m1*mp2*mpp2 + mpp2*x1 + mpp1*x2 + m2*y1 + mpp1*y2 + mp2*z1 + mpp2*z1;
end;
#####################################################################
B2in62:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*m2 + m2*mp1 + m1*m2*mpp1 + m1*mp2*mpp1 + mp1*mp2*mpp1 + m1*m2*mpp2 + m1*mp1*mpp2 + m2*mp1*mpp2 + m1*mp2*mpp2 + m2*mpp1*x1 + mpp2*x1 + m1*mpp2*x1 + m2*mpp2*x1 + m1*mpp1*x2 + m2*mpp1*x2 + m1*mpp2*x2 + m2*y1 + m2*mpp1*y1 + mp2*mpp1*y1 + mp1*y2 + mpp1*y2 + m2*mpp1*y2 + mp2*mpp1*y2 + y1*y2 + mp2*mpp1*z1 + mpp2*z1 + m1*mpp2*z1 + m2*mpp2*z1 + y2*z1 + mp1*z2 + m1*mpp1*z2 + mp2*mpp1*z2 + m1*mpp2*z2 + y1*z2 + z1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 63 (Cmcm)
#####################################################################
Am1in63:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in63:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in63:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyin63:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1;
end;
#####################################################################
Bin63:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return x2*y1 + mp1*x2*y1 + mpp1*x2*y1 + mp1*x2*y2 + mpp1*x2*y2 + mp1*y1*y2 + mpp1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 64 (Cmce)
#####################################################################
Am1in64:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in64:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in64:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyin64:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1;
end;
#####################################################################
CGAPin64:=function(g1,g2,g3)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2,x3,y3,z3,m3,mp3,mpp3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];x3:=g3[1];y3:=g3[2];z3:=g3[3];m3:=g3[4];mp3:=g3[5];mpp3:=g3[6];
return m1*m2*m3*mp2 + m1*m3*mp1*mp2 + m1*m2*mp3 + m1*m2*m3*mp3 + m1*m2*m3*mp1*mp3 + m1*mp2*mp3 + m1*m2*m3*mp2*mp3 + m1*mp1*mp2*mp3 + m1*m2*mp1*mp2*mp3 + m1*m3*mp1*mp2*mp3 + m1*m2*m3*mp1*mp2*mpp1 + m1*m2*m3*mp1*mp3*mpp1 + m1*m2*mp2*mp3*mpp1 + m2*mp1*mp2*mp3*mpp1 + m1*m2*m3*mp1*mpp2 + m1*m2*m3*mp2*mpp2 + m1*m3*mp1*mp2*mpp2 + m1*m2*m3*mp1*mp2*mpp2 + m1*m2*m3*mp3*mpp2 + m1*m2*mp1*mp3*mpp2 + m1*m3*mp1*mp3*mpp2 + m1*m2*m3*mp1*mp3*mpp2 + m1*m3*mp2*mp3*mpp2 + m1*mp1*mp2*mp3*mpp2 + m2*mp1*mp2*mp3*mpp2 + m1*m2*mp1*mp2*mp3*mpp2 + m1*m3*mp1*mp2*mp3*mpp2 + m1*m3*mp1*mpp1*mpp2 + m1*m2*m3*mp1*mpp1*mpp2 + m1*m3*mp1*mp2*mpp1*mpp2 + m1*mp1*mp3*mpp1*mpp2 + m1*m2*mp1*mp3*mpp1*mpp2 + m1*m3*mp1*mp3*mpp1*mpp2 + m1*mp1*mp2*mp3*mpp1*mpp2 + m1*m2*m3*mpp3 + m1*mp2*mpp3 + m1*m2*mp2*mpp3 + m1*mp1*mp2*mpp3 + m1*m2*mp1*mp2*mpp3 + m1*m3*mp1*mp2*mpp3 + m1*m2*mp3*mpp3 + m1*m2*m3*mp3*mpp3 + m1*m2*m3*mp2*mp3*mpp3 + m1*mp1*mp2*mp3*mpp3 + m1*m3*mp1*mp2*mp3*mpp3 + m2*m3*mp1*mp2*mp3*mpp3 + m1*m2*mpp1*mpp3 + m1*m2*m3*mpp1*mpp3 + m1*m2*mp1*mpp1*mpp3 + m1*m2*m3*mp1*mpp1*mpp3 + m1*mp2*mpp1*mpp3 + m2*mp2*mpp1*mpp3 + m1*m3*mp2*mpp1*mpp3 + m2*m3*mp2*mpp1*mpp3 + m1*m2*m3*mp2*mpp1*mpp3 + m1*mp1*mp2*mpp1*mpp3 + m1*m2*mp1*mp2*mpp1*mpp3 + m1*m3*mp1*mp2*mpp1*mpp3 + m2*m3*mp1*mp2*mpp1*mpp3 + m1*m2*mp3*mpp1*mpp3 + m1*m2*m3*mp3*mpp1*mpp3 + m1*m2*mp1*mp3*mpp1*mpp3 + m1*mp2*mp3*mpp1*mpp3 + m2*mp2*mp3*mpp1*mpp3 + m1*m2*mp2*mp3*mpp1*mpp3 + m1*m3*mp2*mp3*mpp1*mpp3 + m2*m3*mp2*mp3*mpp1*mpp3 + m1*mp1*mp2*mp3*mpp1*mpp3 + m2*mp1*mp2*mp3*mpp1*mpp3 + m1*m2*mpp2*mpp3 + m1*m2*m3*mpp2*mpp3 + m1*mp1*mpp2*mpp3 + m1*m3*mp1*mpp2*mpp3 + m1*mp2*mpp2*mpp3 + m1*m3*mp2*mpp2*mpp3 + m1*m2*m3*mp2*mpp2*mpp3 + m2*m3*mp1*mp2*mpp2*mpp3 + m1*m2*mp3*mpp2*mpp3 + m1*m2*m3*mp3*mpp2*mpp3 + m1*mp1*mp3*mpp2*mpp3 + m1*m3*mp1*mp3*mpp2*mpp3 + m1*mp2*mp3*mpp2*mpp3 + m1*m2*mp2*mp3*mpp2*mpp3 + m1*m3*mp2*mp3*mpp2*mpp3 + m2*mp1*mp2*mp3*mpp2*mpp3 + m2*m3*x1 + m1*m2*m3*x1 + m2*m3*mp1*x1 + m1*m3*mp2*x1 + m1*m3*mp1*mp2*x1 + m1*m2*m3*mp1*mp2*x1 + m1*m2*mp3*x1 + m2*m3*mp3*x1 + m1*m2*mp1*mp3*x1 + m2*m3*mp1*mp3*x1 + m1*m2*m3*mp1*mp3*x1 + m1*mp2*mp3*x1 + m2*mp2*mp3*x1 + m1*m3*mp2*mp3*x1 + m1*m2*m3*mp2*mp3*x1 + m2*m3*mpp1*x1 + m1*m2*m3*mp1*mpp1*x1 + m1*m3*mp1*mp2*mpp1*x1 + m2*mp3*mpp1*x1 + m1*m2*mp3*mpp1*x1 + m2*m3*mp1*mp3*mpp1*x1 + m1*mp2*mp3*mpp1*x1 + m2*mp2*mp3*mpp1*x1 + m1*m3*mp2*mp3*mpp1*x1 + m2*m3*mpp2*x1 + m3*mp1*mpp2*x1 + m1*m3*mp1*mpp2*x1 + m3*mp2*mpp2*x1 + m1*m2*m3*mp2*mpp2*x1 + m1*mp3*mpp2*x1 + m1*m2*mp3*mpp2*x1 + m3*mp3*mpp2*x1 + m1*m2*m3*mp3*mpp2*x1 + m1*m2*mp1*mp3*mpp2*x1 + m1*m3*mp1*mp3*mpp2*x1 + m2*m3*mp1*mp3*mpp2*x1 + m1*mp2*mp3*mpp2*x1 + m2*mp2*mp3*mpp2*x1 + m1*m3*mp2*mp3*mpp2*x1 + m1*mp1*mp2*mp3*mpp2*x1 + m2*mp1*mp2*mp3*mpp2*x1 + m3*mp1*mp2*mp3*mpp2*x1 + m1*m3*mpp1*mpp2*x1 + m2*m3*mpp1*mpp2*x1 + m1*m2*m3*mpp1*mpp2*x1 + m3*mp1*mpp1*mpp2*x1 + m2*m3*mp1*mpp1*mpp2*x1 + m3*mp2*mpp1*mpp2*x1 + m1*m3*mp2*mpp1*mpp2*x1 + m2*m3*mp2*mpp1*mpp2*x1 + m3*mp1*mp2*mpp1*mpp2*x1 + m1*mp3*mpp1*mpp2*x1 + m2*mp3*mpp1*mpp2*x1 + m1*m2*mp3*mpp1*mpp2*x1 + m3*mp3*mpp1*mpp2*x1 + m1*m3*mp3*mpp1*mpp2*x1 + m2*m3*mp3*mpp1*mpp2*x1 + mp1*mp3*mpp1*mpp2*x1 + m2*mp1*mp3*mpp1*mpp2*x1 + m3*mp1*mp3*mpp1*mpp2*x1 + mp2*mp3*mpp1*mpp2*x1 + m1*mp2*mp3*mpp1*mpp2*x1 + m2*mp2*mp3*mpp1*mpp2*x1 + m3*mp2*mp3*mpp1*mpp2*x1 + mp1*mp2*mp3*mpp1*mpp2*x1 + m2*m3*mpp3*x1 + m2*mp1*mpp3*x1 + m1*m2*mp1*mpp3*x1 + m1*mp2*mpp3*x1 + m1*m3*mp2*mpp3*x1 + m2*m3*mp2*mpp3*x1 + m1*mp1*mp2*mpp3*x1 + m1*m2*mp1*mp2*mpp3*x1 + m2*mp3*mpp3*x1 + m1*m2*m3*mp3*mpp3*x1 + m2*m3*mp1*mp3*mpp3*x1 + m1*mp2*mp3*mpp3*x1 + m2*mp2*mp3*mpp3*x1 + m2*m3*mp2*mp3*mpp3*x1 + m1*m2*m3*mpp1*mpp3*x1 + m1*m2*mp1*mpp1*mpp3*x1 + m1*m3*mp2*mpp1*mpp3*x1 + m2*m3*mp2*mpp1*mpp3*x1 + m1*mp1*mp2*mpp1*mpp3*x1 + m1*m2*mp3*mpp1*mpp3*x1 + m1*mp2*mp3*mpp1*mpp3*x1 + m2*mp2*mp3*mpp1*mpp3*x1 + m1*m2*mpp2*mpp3*x1 + m1*m3*mpp2*mpp3*x1 + m2*m3*mpp2*mpp3*x1 + m1*mp1*mpp2*mpp3*x1 + m2*mp1*mpp2*mpp3*x1 + m1*m2*mp1*mpp2*mpp3*x1 + m3*mp1*mpp2*mpp3*x1 + m2*m3*mp1*mpp2*mpp3*x1 + m1*mp2*mpp2*mpp3*x1 + m2*mp2*mpp2*mpp3*x1 + m1*m2*mp2*mpp2*mpp3*x1 + m3*mp2*mpp2*mpp3*x1 + mp1*mp2*mpp2*mpp3*x1 + m1*mp1*mp2*mpp2*mpp3*x1 + m2*mp1*mp2*mpp2*mpp3*x1 + m3*mp1*mp2*mpp2*mpp3*x1 + m1*mp3*mpp2*mpp3*x1 + m2*mp3*mpp2*mpp3*x1 + m3*mp3*mpp2*mpp3*x1 + m1*m3*mp3*mpp2*mpp3*x1 + m2*m3*mp3*mpp2*mpp3*x1 + mp1*mp3*mpp2*mpp3*x1 + m2*mp1*mp3*mpp2*mpp3*x1 + m3*mp1*mp3*mpp2*mpp3*x1 + mp2*mp3*mpp2*mpp3*x1 + m3*mp2*mp3*mpp2*mpp3*x1 + mp1*mp2*mp3*mpp2*mpp3*x1 + m1*m2*m3*x2 + m2*m3*mp1*x2 + m1*m2*m3*mp1*x2 + m1*m3*mp1*mp2*x2 + m2*m3*mp1*mp2*x2 + m1*mp3*x2 + m1*m3*mp3*x2 + mp1*mp3*x2 + m1*m2*mp1*mp3*x2 + m1*m3*mp1*mp3*x2 + m2*m3*mp1*mp3*x2 + m1*mp2*mp3*x2 + m1*m2*mp2*mp3*x2 + m1*m2*m3*mp2*mp3*x2 + m1*mp1*mp2*mp3*x2 + m2*mp1*mp2*mp3*x2 + m3*mp1*mp2*mp3*x2 + m3*mpp1*x2 + m1*m3*mpp1*x2 + m3*mp1*mpp1*x2 + m2*m3*mp2*mpp1*x2 + m1*m2*m3*mp2*mpp1*x2 + m2*m3*mp1*mp2*mpp1*x2 + m1*mp3*mpp1*x2 + m2*mp3*mpp1*x2 + m1*m2*mp3*mpp1*x2 + m2*m3*mp3*mpp1*x2 + m1*m2*m3*mp3*mpp1*x2 + mp1*mp3*mpp1*x2 + m1*m2*mp1*mp3*mpp1*x2 + m2*m3*mp1*mp3*mpp1*x2 + m1*mp2*mp3*mpp1*x2 + m3*mp2*mp3*mpp1*x2 + m1*m3*mp2*mp3*mpp1*x2 + mp1*mp2*mp3*mpp1*x2 + m1*mp1*mp2*mp3*mpp1*x2 + m2*mp1*mp2*mp3*mpp1*x2 + m3*mp1*mp2*mp3*mpp1*x2 + m1*m2*m3*mpp2*x2 + m3*mp1*mpp2*x2 + m1*m3*mp1*mpp2*x2 + m1*m2*m3*mp1*mpp2*x2 + m1*m3*mp2*mpp2*x2 + m1*m2*m3*mp2*mpp2*x2 + m1*m3*mp1*mp2*mpp2*x2 + m2*m3*mp1*mp2*mpp2*x2 + m1*mp3*mpp2*x2 + m1*m3*mp3*mpp2*x2 + m1*m2*m3*mp3*mpp2*x2 + mp1*mp3*mpp2*x2 + m2*mp1*mp3*mpp2*x2 + m1*m3*mp2*mp3*mpp2*x2 + mp1*mp2*mp3*mpp2*x2 + mp3*mpp1*mpp2*x2 + m2*mp1*mp3*mpp1*mpp2*x2 + mp1*mp2*mp3*mpp1*mpp2*x2 + m1*mpp3*x2 + m1*m2*m3*mpp3*x2 + m1*mp1*mpp3*x2 + m2*mp1*mpp3*x2 + m1*m2*mp1*mpp3*x2 + m3*mp1*mpp3*x2 + m1*m3*mp1*mpp3*x2 + m1*m2*m3*mp1*mpp3*x2 + m1*mp2*mpp3*x2 + m1*m2*mp2*mpp3*x2 + mp1*mp2*mpp3*x2 + m3*mp1*mp2*mpp3*x2 + m1*m2*mp3*mpp3*x2 + m1*m3*mp3*mpp3*x2 + m1*m2*m3*mp3*mpp3*x2 + mp1*mp3*mpp3*x2 + m1*mp1*mp3*mpp3*x2 + m1*m2*mp1*mp3*mpp3*x2 + m3*mp1*mp3*mpp3*x2 + m1*m3*mp1*mp3*mpp3*x2 + mp1*mp2*mp3*mpp3*x2 + mpp1*mpp3*x2 + m2*mpp1*mpp3*x2 + m1*m2*mpp1*mpp3*x2 + m1*m2*mp1*mpp1*mpp3*x2 + m1*m2*mp2*mpp1*mpp3*x2 + m1*m3*mp2*mpp1*mpp3*x2 + m2*m3*mp2*mpp1*mpp3*x2 + m1*mp1*mp2*mpp1*mpp3*x2 + m3*mp1*mp2*mpp1*mpp3*x2 + m1*m3*mp3*mpp1*mpp3*x2 + m2*m3*mp3*mpp1*mpp3*x2 + m3*mp1*mp3*mpp1*mpp3*x2 + m1*mp2*mp3*mpp1*mpp3*x2 + m2*mp2*mp3*mpp1*mpp3*x2 + mp1*mp2*mp3*mpp1*mpp3*x2 + m1*m2*mpp2*mpp3*x2 + m1*m3*mpp2*mpp3*x2 + mp1*mpp2*mpp3*x2 + m2*mp1*mpp2*mpp3*x2 + m1*m2*mp1*mpp2*mpp3*x2 + m3*mp1*mpp2*mpp3*x2 + m1*m3*mp1*mpp2*mpp3*x2 + m1*mp2*mpp2*mpp3*x2 + m1*m2*mp2*mpp2*mpp3*x2 + mp1*mp2*mpp2*mpp3*x2 + m1*mp1*mp2*mpp2*mpp3*x2 + m2*mp1*mp2*mpp2*mpp3*x2 + m1*mp3*mpp2*mpp3*x2 + m1*m3*mp3*mpp2*mpp3*x2 + mp1*mp3*mpp2*mpp3*x2 + m1*mp1*mp3*mpp2*mpp3*x2 + m1*mpp1*mpp2*mpp3*x2 + m2*mpp1*mpp2*mpp3*x2 + m3*mpp1*mpp2*mpp3*x2 + m1*m3*mpp1*mpp2*mpp3*x2 + m2*m3*mpp1*mpp2*mpp3*x2 + mp1*mpp1*mpp2*mpp3*x2 + m2*mp1*mpp1*mpp2*mpp3*x2 + m3*mp1*mpp1*mpp2*mpp3*x2 + mp2*mpp1*mpp2*mpp3*x2 + m3*mp2*mpp1*mpp2*mpp3*x2 + mp1*mp2*mpp1*mpp2*mpp3*x2 + mp3*mpp1*mpp2*mpp3*x2 + m1*mp3*mpp1*mpp2*mpp3*x2 + m2*mp3*mpp1*mpp2*mpp3*x2 + m3*mp3*mpp1*mpp2*mpp3*x2 + mp1*mp3*mpp1*mpp2*mpp3*x2 + mp2*mp3*mpp1*mpp2*mpp3*x2 + m3*mp1*x1*x2 + m1*m3*mp1*mp2*x1*x2 + mp1*mp3*x1*x2 + m1*m2*mp1*mp3*x1*x2 + m3*mp1*mp3*x1*x2 + m2*m3*mp1*mp3*x1*x2 + mp1*mp2*mp3*x1*x2 + m1*mp1*mp2*mp3*x1*x2 + m2*mp1*mp2*mp3*x1*x2 + m3*mp1*mp2*mp3*x1*x2 + m3*mpp1*x1*x2 + m3*mp2*mpp1*x1*x2 + m1*m3*mp2*mpp1*x1*x2 + m3*mp1*mp2*mpp1*x1*x2 + mp3*mpp1*x1*x2 + m2*mp3*mpp1*x1*x2 + m1*m2*mp3*mpp1*x1*x2 + m3*mp3*mpp1*x1*x2 + m2*m3*mp3*mpp1*x1*x2 + m2*mp1*mp3*mpp1*x1*x2 + m1*mp2*mp3*mpp1*x1*x2 + m2*mp2*mp3*mpp1*x1*x2 + m3*mp2*mp3*mpp1*x1*x2 + mp1*mp2*mp3*mpp1*x1*x2 + m1*m3*mp1*mpp2*x1*x2 + m2*mp1*mp3*mpp2*x1*x2 + mp1*mp2*mp3*mpp2*x1*x2 + m3*mpp1*mpp2*x1*x2 + m1*m3*mpp1*mpp2*x1*x2 + m3*mp1*mpp1*mpp2*x1*x2 + m2*mp3*mpp1*mpp2*x1*x2 + mp2*mp3*mpp1*mpp2*x1*x2 + mp1*mpp3*x1*x2 + m2*mp1*mpp3*x1*x2 + m1*m2*mp1*mpp3*x1*x2 + m3*mp1*mpp3*x1*x2 + m2*m3*mp1*mpp3*x1*x2 + m2*mp1*mp2*mpp3*x1*x2 + m3*mp1*mp2*mpp3*x1*x2 + mp1*mp3*mpp3*x1*x2 + m2*mp1*mp3*mpp3*x1*x2 + mp1*mp2*mp3*mpp3*x1*x2 + mpp1*mpp3*x1*x2 + m1*m2*mpp1*mpp3*x1*x2 + m3*mpp1*mpp3*x1*x2 + m2*m3*mpp1*mpp3*x1*x2 + m2*mp1*mpp1*mpp3*x1*x2 + m2*mp2*mpp1*mpp3*x1*x2 + m3*mp2*mpp1*mpp3*x1*x2 + mp3*mpp1*mpp3*x1*x2 + m2*mp3*mpp1*mpp3*x1*x2 + mp2*mp3*mpp1*mpp3*x1*x2 + m1*mp1*mpp2*mpp3*x1*x2 + m2*mp1*mpp2*mpp3*x1*x2 + mp1*mp2*mpp2*mpp3*x1*x2 + mpp1*mpp2*mpp3*x1*x2 + m1*mpp1*mpp2*mpp3*x1*x2 + m2*mpp1*mpp2*mpp3*x1*x2 + mp1*mpp1*mpp2*mpp3*x1*x2 + mp2*mpp1*mpp2*mpp3*x1*x2 + m1*m2*mp1*x3 + m2*m3*mp1*x3 + m1*m2*mp2*x3 + m1*mp1*mp2*x3 + m1*m2*mp1*mp2*x3 + m3*mp1*mp2*x3 + m1*m3*mp1*mp2*x3 + m1*m2*m3*mp1*mp2*x3 + m1*m2*mp3*x3 + m1*m2*m3*mp3*x3 + m1*m2*mp2*mp3*x3 + m1*m3*mp2*mp3*x3 + m1*m2*m3*mp2*mp3*x3 + mp1*mp2*mp3*x3 + m2*mp1*mp2*mp3*x3 + m3*mp1*mp2*mp3*x3 + m1*m3*mp1*mp2*mp3*x3 + m2*m3*mp1*mp2*mp3*x3 + m1*m2*mpp1*x3 + m2*m3*mpp1*x3 + m1*mp2*mpp1*x3 + m2*mp2*mpp1*x3 + m1*m2*mp2*mpp1*x3 + m1*m3*mp2*mpp1*x3 + m2*m3*mp2*mpp1*x3 + m1*m2*m3*mp2*mpp1*x3 + m2*mp1*mp2*mpp1*x3 + m3*mp1*mp2*mpp1*x3 + m2*m3*mp1*mp2*mpp1*x3 + m1*m2*mp3*mpp1*x3 + m2*m3*mp3*mpp1*x3 + m1*m2*m3*mp3*mpp1*x3 + m2*mp1*mp3*mpp1*x3 + m1*m2*mp1*mp3*mpp1*x3 + m2*m3*mp1*mp3*mpp1*x3 + mp2*mp3*mpp1*x3 + m3*mp2*mp3*mpp1*x3 + m1*m3*mp2*mp3*mpp1*x3 + m3*mp1*mp2*mp3*mpp1*x3 + m1*m3*mpp2*x3 + m1*m2*m3*mpp2*x3 + mp1*mpp2*x3 + m1*mp1*mpp2*x3 + m2*mp1*mpp2*x3 + m1*m2*mp1*mpp2*x3 + m3*mp1*mpp2*x3 + m1*m3*mp1*mpp2*x3 + m2*m3*mp1*mpp2*x3 + m1*m2*mp2*mpp2*x3 + m1*m3*mp2*mpp2*x3 + m1*m2*m3*mp2*mpp2*x3 + mp1*mp2*mpp2*x3 + m1*mp1*mp2*mpp2*x3 + m2*mp1*mp2*mpp2*x3 + m3*mp1*mp2*mpp2*x3 + m2*m3*mp1*mp2*mpp2*x3 + m1*mp3*mpp2*x3 + m1*m3*mp3*mpp2*x3 + m1*m2*m3*mp3*mpp2*x3 + m2*mp1*mp3*mpp2*x3 + m1*m3*mp1*mp3*mpp2*x3 + m2*m3*mp1*mp3*mpp2*x3 + m1*m3*mp2*mp3*mpp2*x3 + mp1*mp2*mp3*mpp2*x3 + m3*mp1*mp2*mp3*mpp2*x3 + mpp1*mpp2*x3 + m1*mpp1*mpp2*x3 + m2*mpp1*mpp2*x3 + m1*m2*mpp1*mpp2*x3 + m3*mpp1*mpp2*x3 + m1*m3*mpp1*mpp2*x3 + mp1*mpp1*mpp2*x3 + m2*mp1*mpp1*mpp2*x3 + m3*mp1*mpp1*mpp2*x3 + mp2*mpp1*mpp2*x3 + m1*mp2*mpp1*mpp2*x3 + mp1*mp2*mpp1*mpp2*x3 + mp3*mpp1*mpp2*x3 + m1*mp3*mpp1*mpp2*x3 + mp1*mp3*mpp1*mpp2*x3 + m1*mp1*mp3*mpp1*mpp2*x3 + m1*m2*mpp3*x3 + m1*m2*mp1*mpp3*x3 + m2*m3*mp1*mpp3*x3 + m1*m2*m3*mp1*mpp3*x3 + m1*m2*mp2*mpp3*x3 + m1*mp1*mp2*mpp3*x3 + m2*mp1*mp2*mpp3*x3 + m1*m2*mp1*mp2*mpp3*x3 + m1*m2*m3*mp3*mpp3*x3 + m2*mp1*mp3*mpp3*x3 + m1*m2*mp1*mp3*mpp3*x3 + m2*m3*mp1*mp3*mpp3*x3 + m1*m3*mp2*mp3*mpp3*x3 + m3*mp1*mp2*mp3*mpp3*x3 + m2*mpp1*mpp3*x3 + m1*m2*mpp1*mpp3*x3 + m2*mp1*mpp1*mpp3*x3 + m1*m2*mp1*mpp1*mpp3*x3 + mp2*mpp1*mpp3*x3 + m1*mp2*mpp1*mpp3*x3 + m2*mp2*mpp1*mpp3*x3 + m1*m2*mp2*mpp1*mpp3*x3 + mp1*mp2*mpp1*mpp3*x3 + m2*mp1*mp2*mpp1*mpp3*x3 + m1*m2*mpp2*mpp3*x3 + m3*mp1*mpp2*mpp3*x3 + m1*m3*mp1*mpp2*mpp3*x3 + m1*mp2*mpp2*mpp3*x3 + m1*m2*mp2*mpp2*mpp3*x3 + m2*mp1*mp2*mpp2*mpp3*x3 + mp1*mp3*mpp2*mpp3*x3 + m1*mp1*mp3*mpp2*mpp3*x3 + m1*mp1*mpp1*mpp2*mpp3*x3 + m1*m2*mp1*mp3*x1*x3 + m2*m3*mp1*mp3*x1*x3 + m1*m2*mp2*mp3*x1*x3 + m2*m3*mp2*mp3*x1*x3 + m2*mp3*mpp1*x1*x3 + m1*m2*mp3*mpp1*x1*x3 + m2*m3*mp3*mpp1*x1*x3 + m2*mp1*mp3*mpp1*x1*x3 + m2*mp2*mp3*mpp1*x1*x3 + m1*mp3*mpp2*x1*x3 + m1*m2*mp3*mpp2*x1*x3 + m3*mp3*mpp2*x1*x3 + m2*m3*mp3*mpp2*x1*x3 + m1*mp1*mp3*mpp2*x1*x3 + m3*mp1*mp3*mpp2*x1*x3 + m1*mp2*mp3*mpp2*x1*x3 + m3*mp2*mp3*mpp2*x1*x3 + m1*mp3*mpp1*mpp2*x1*x3 + m2*mp3*mpp1*mpp2*x1*x3 + m3*mp3*mpp1*mpp2*x1*x3 + mp1*mp3*mpp1*mpp2*x1*x3 + mp2*mp3*mpp1*mpp2*x1*x3 + m2*mp1*mpp3*x1*x3 + m1*m2*mp1*mpp3*x1*x3 + m2*m3*mp1*mpp3*x1*x3 + m2*mp2*mpp3*x1*x3 + m1*m2*mp2*mpp3*x1*x3 + m2*m3*mp2*mpp3*x1*x3 + m2*mp1*mp3*mpp3*x1*x3 + m2*mp2*mp3*mpp3*x1*x3 + m1*m2*mpp1*mpp3*x1*x3 + m2*m3*mpp1*mpp3*x1*x3 + m2*mp1*mpp1*mpp3*x1*x3 + m2*mp2*mpp1*mpp3*x1*x3 + m2*mp3*mpp1*mpp3*x1*x3 + mpp2*mpp3*x1*x3 + m1*mpp2*mpp3*x1*x3 + m2*mpp2*mpp3*x1*x3 + m1*m2*mpp2*mpp3*x1*x3 + m3*mpp2*mpp3*x1*x3 + m2*m3*mpp2*mpp3*x1*x3 + mp1*mpp2*mpp3*x1*x3 + m1*mp1*mpp2*mpp3*x1*x3 + m3*mp1*mpp2*mpp3*x1*x3 + mp2*mpp2*mpp3*x1*x3 + m1*mp2*mpp2*mpp3*x1*x3 + m3*mp2*mpp2*mpp3*x1*x3 + mp3*mpp2*mpp3*x1*x3 + m2*mp3*mpp2*mpp3*x1*x3 + mp1*mp3*mpp2*mpp3*x1*x3 + mp2*mp3*mpp2*mpp3*x1*x3 + mpp1*mpp2*mpp3*x1*x3 + m1*mpp1*mpp2*mpp3*x1*x3 + m2*mpp1*mpp2*mpp3*x1*x3 + m3*mpp1*mpp2*mpp3*x1*x3 + mp1*mpp1*mpp2*mpp3*x1*x3 + mp2*mpp1*mpp2*mpp3*x1*x3 + mp3*mpp1*mpp2*mpp3*x1*x3 + m1*x2*x3 + m1*m2*mp2*x2*x3 + m1*m3*mp2*x2*x3 + m1*mp1*mp2*x2*x3 + m2*mp1*mp2*x2*x3 + m1*m2*mp1*mp2*x2*x3 + m3*mp1*mp2*x2*x3 + m1*m3*mp1*mp2*x2*x3 + m1*m2*mp2*mp3*x2*x3 + mpp1*x2*x3 + mp2*mpp1*x2*x3 + m1*mp2*mpp1*x2*x3 + m2*mp2*mpp1*x2*x3 + m1*m2*mp2*mpp1*x2*x3 + m3*mp2*mpp1*x2*x3 + m1*m3*mp2*mpp1*x2*x3 + mp1*mp2*mpp1*x2*x3 + m2*mp1*mp2*mpp1*x2*x3 + m3*mp1*mp2*mpp1*x2*x3 + mp2*mp3*mpp1*x2*x3 + m2*mp2*mp3*mpp1*x2*x3 + m1*mpp2*x2*x3 + m1*m2*mpp2*x2*x3 + m1*m3*mpp2*x2*x3 + mp1*mpp2*x2*x3 + m2*mp1*mpp2*x2*x3 + m1*m2*mp1*mpp2*x2*x3 + m3*mp1*mpp2*x2*x3 + m1*m3*mp1*mpp2*x2*x3 + m1*mp2*mpp2*x2*x3 + mp1*mp2*mpp2*x2*x3 + m1*mp1*mp2*mpp2*x2*x3 + m1*mp3*mpp2*x2*x3 + m1*m2*mp3*mpp2*x2*x3 + m1*mp2*mp3*mpp2*x2*x3 + m2*mpp1*mpp2*x2*x3 + m1*m2*mpp1*mpp2*x2*x3 + m3*mpp1*mpp2*x2*x3 + m1*m3*mpp1*mpp2*x2*x3 + m2*mp1*mpp1*mpp2*x2*x3 + m3*mp1*mpp1*mpp2*x2*x3 + mp2*mpp1*mpp2*x2*x3 + m1*mp2*mpp1*mpp2*x2*x3 + mp1*mp2*mpp1*mpp2*x2*x3 + m2*mp3*mpp1*mpp2*x2*x3 + mp2*mp3*mpp1*mpp2*x2*x3 + m1*mp2*mpp3*x2*x3 + m1*m2*mp2*mpp3*x2*x3 + mp1*mp2*mpp3*x2*x3 + m1*mp1*mp2*mpp3*x2*x3 + m1*mp2*mpp1*mpp3*x2*x3 + m2*mp2*mpp1*mpp3*x2*x3 + mp1*mp2*mpp1*mpp3*x2*x3 + m1*m2*mpp2*mpp3*x2*x3 + mp1*mpp2*mpp3*x2*x3 + m1*mp1*mpp2*mpp3*x2*x3 + m1*mp2*mpp2*mpp3*x2*x3 + mpp1*mpp2*mpp3*x2*x3 + m1*mpp1*mpp2*mpp3*x2*x3 + m2*mpp1*mpp2*mpp3*x2*x3 + mp1*mpp1*mpp2*mpp3*x2*x3 + mp2*mpp1*mpp2*mpp3*x2*x3 + m1*m2*m3*y1 + m1*m3*mp2*y1 + m2*m3*mp2*y1 + m1*m2*m3*mp2*y1 + m1*m2*m3*mp1*mp2*y1 + m1*m2*mp3*y1 + m1*m2*m3*mp3*y1 + m1*m2*m3*mp1*mp3*y1 + m1*mp2*mp3*y1 + m2*mp2*mp3*y1 + m1*m2*mp2*mp3*y1 + m1*m2*m3*mp2*mp3*y1 + m2*m3*mpp1*y1 + m1*m2*m3*mpp1*y1 + m2*m3*mp1*mpp1*y1 + m1*m2*m3*mp1*mpp1*y1 + m2*m3*mp2*mpp1*y1 + m1*m3*mp1*mp2*mpp1*y1 + m2*mp3*mpp1*y1 + m1*m2*mp3*mpp1*y1 + m2*m3*mp3*mpp1*y1 + m2*mp1*mp3*mpp1*y1 + m2*m3*mp1*mp3*mpp1*y1 + m2*mp2*mp3*mpp1*y1 + m1*m3*mp2*mp3*mpp1*y1 + m3*mpp2*y1 + m2*m3*mpp2*y1 + m3*mp1*mpp2*y1 + m2*m3*mp1*mpp2*y1 + m3*mp2*mpp2*y1 + m2*m3*mp2*mpp2*y1 + m1*m2*m3*mp2*mpp2*y1 + m3*mp1*mp2*mpp2*y1 + m1*mp3*mpp2*y1 + m1*m2*mp3*mpp2*y1 + m3*mp3*mpp2*y1 + m2*m3*mp3*mpp2*y1 + m1*m2*m3*mp3*mpp2*y1 + m1*mp1*mp3*mpp2*y1 + m1*m2*mp1*mp3*mpp2*y1 + m3*mp1*mp3*mpp2*y1 + m1*m3*mp1*mp3*mpp2*y1 + m2*m3*mp1*mp3*mpp2*y1 + m1*mp2*mp3*mpp2*y1 + m3*mp2*mp3*mpp2*y1 + m1*m3*mp2*mp3*mpp2*y1 + m1*mp1*mp2*mp3*mpp2*y1 + m2*mp1*mp2*mp3*mpp2*y1 + m3*mp1*mp2*mp3*mpp2*y1 + m3*mpp1*mpp2*y1 + m1*m2*m3*mpp1*mpp2*y1 + m2*m3*mp1*mpp1*mpp2*y1 + m1*m3*mp2*mpp1*mpp2*y1 + m2*m3*mp2*mpp1*mpp2*y1 + m3*mp1*mp2*mpp1*mpp2*y1 + mp3*mpp1*mpp2*y1 + m1*m2*mp3*mpp1*mpp2*y1 + m1*m3*mp3*mpp1*mpp2*y1 + m2*m3*mp3*mpp1*mpp2*y1 + m2*mp1*mp3*mpp1*mpp2*y1 + m3*mp1*mp3*mpp1*mpp2*y1 + m1*mp2*mp3*mpp1*mpp2*y1 + m2*mp2*mp3*mpp1*mpp2*y1 + m3*mp2*mp3*mpp1*mpp2*y1 + mp1*mp2*mp3*mpp1*mpp2*y1 + m2*mpp3*y1 + m2*m3*mpp3*y1 + m2*mp1*mpp3*y1 + m2*m3*mp1*mpp3*y1 + m2*mp2*mpp3*y1 + m2*m3*mp2*mpp3*y1 + m1*m2*mp1*mp2*mpp3*y1 + m2*mp3*mpp3*y1 + m2*m3*mp3*mpp3*y1 + m1*m2*m3*mp3*mpp3*y1 + m2*mp1*mp3*mpp3*y1 + m2*m3*mp1*mp3*mpp3*y1 + m2*mp2*mp3*mpp3*y1 + m2*m3*mp2*mp3*mpp3*y1 + m1*m2*mpp1*mpp3*y1 + m1*m2*m3*mpp1*mpp3*y1 + m1*m2*mp1*mpp1*mpp3*y1 + m1*mp2*mpp1*mpp3*y1 + m2*mp2*mpp1*mpp3*y1 + m1*m3*mp2*mpp1*mpp3*y1 + m2*m3*mp2*mpp1*mpp3*y1 + m1*mp1*mp2*mpp1*mpp3*y1 + m1*m2*mp3*mpp1*mpp3*y1 + m1*mp2*mp3*mpp1*mpp3*y1 + m2*mp2*mp3*mpp1*mpp3*y1 + m1*mpp2*mpp3*y1 + m2*mpp2*mpp3*y1 + m1*m2*mpp2*mpp3*y1 + m3*mpp2*mpp3*y1 + mp1*mpp2*mpp3*y1 + m1*mp1*mpp2*mpp3*y1 + m1*m2*mp1*mpp2*mpp3*y1 + m2*m3*mp1*mpp2*mpp3*y1 + mp2*mpp2*mpp3*y1 + m1*mp2*mpp2*mpp3*y1 + m2*mp2*mpp2*mpp3*y1 + m1*m2*mp2*mpp2*mpp3*y1 + m1*mp1*mp2*mpp2*mpp3*y1 + m2*mp1*mp2*mpp2*mpp3*y1 + m3*mp1*mp2*mpp2*mpp3*y1 + mp3*mpp2*mpp3*y1 + m1*m3*mp3*mpp2*mpp3*y1 + m2*m3*mp3*mpp2*mpp3*y1 + m2*mp1*mp3*mpp2*mpp3*y1 + m3*mp1*mp3*mpp2*mpp3*y1 + m3*mp2*mp3*mpp2*mpp3*y1 + mp1*mp2*mp3*mpp2*mpp3*y1 + m1*m3*mp2*x1*y1 + m3*mp1*mp2*x1*y1 + m2*mp3*x1*y1 + m1*m2*mp3*x1*y1 + m2*m3*mp3*x1*y1 + mp2*mp3*x1*y1 + m1*mp2*mp3*x1*y1 + m2*mp2*mp3*x1*y1 + m3*mp2*mp3*x1*y1 + m2*mp3*mpp1*x1*y1 + mp2*mp3*mpp1*x1*y1 + m1*m3*mpp2*x1*y1 + m3*mp1*mpp2*x1*y1 + mp3*mpp2*x1*y1 + m2*mp3*mpp2*x1*y1 + mp2*mp3*mpp2*x1*y1 + m1*m2*mpp3*x1*y1 + m2*m3*mpp3*x1*y1 + m2*mp2*mpp3*x1*y1 + m3*mp2*mpp3*x1*y1 + mp1*mp2*mpp3*x1*y1 + m2*mp3*mpp3*x1*y1 + mp2*mp3*mpp3*x1*y1 + m2*mpp1*mpp3*x1*y1 + mp2*mpp1*mpp3*x1*y1 + mpp2*mpp3*x1*y1 + m1*mpp2*mpp3*x1*y1 + m2*mpp2*mpp3*x1*y1 + mp1*mpp2*mpp3*x1*y1 + mp2*mpp2*mpp3*x1*y1 + m3*x2*y1 + m3*mp1*x2*y1 + m3*mp2*x2*y1 + m1*m3*mp2*x2*y1 + m3*mp1*mp2*x2*y1 + m1*m3*mp1*mp2*x2*y1 + mp3*x2*y1 + m1*m2*mp3*x2*y1 + m3*mp3*x2*y1 + m2*m3*mp3*x2*y1 + mp1*mp3*x2*y1 + m1*m2*mp1*mp3*x2*y1 + m3*mp1*mp3*x2*y1 + m2*m3*mp1*mp3*x2*y1 + mp2*mp3*x2*y1 + m1*mp2*mp3*x2*y1 + m2*mp2*mp3*x2*y1 + m3*mp2*mp3*x2*y1 + mp1*mp2*mp3*x2*y1 + m1*mp1*mp2*mp3*x2*y1 + m2*mp1*mp2*mp3*x2*y1 + m3*mp1*mp2*mp3*x2*y1 + m3*mpp1*x2*y1 + m3*mp2*mpp1*x2*y1 + m1*m3*mp2*mpp1*x2*y1 + m3*mp1*mp2*mpp1*x2*y1 + mp3*mpp1*x2*y1 + m1*m2*mp3*mpp1*x2*y1 + m3*mp3*mpp1*x2*y1 + m2*m3*mp3*mpp1*x2*y1 + m2*mp1*mp3*mpp1*x2*y1 + mp2*mp3*mpp1*x2*y1 + m1*mp2*mp3*mpp1*x2*y1 + m2*mp2*mp3*mpp1*x2*y1 + m3*mp2*mp3*mpp1*x2*y1 + mp1*mp2*mp3*mpp1*x2*y1 + m3*mpp2*x2*y1 + m1*m3*mpp2*x2*y1 + m3*mp1*mpp2*x2*y1 + m1*m3*mp1*mpp2*x2*y1 + m2*mp3*mpp2*x2*y1 + m2*mp1*mp3*mpp2*x2*y1 + mp2*mp3*mpp2*x2*y1 + mp1*mp2*mp3*mpp2*x2*y1 + m3*mpp1*mpp2*x2*y1 + m1*m3*mpp1*mpp2*x2*y1 + m3*mp1*mpp1*mpp2*x2*y1 + m2*mp3*mpp1*mpp2*x2*y1 + mp2*mp3*mpp1*mpp2*x2*y1 + mpp3*x2*y1 + m2*mpp3*x2*y1 + m1*m2*mpp3*x2*y1 + m3*mpp3*x2*y1 + m2*m3*mpp3*x2*y1 + mp1*mpp3*x2*y1 + m2*mp1*mpp3*x2*y1 + m1*m2*mp1*mpp3*x2*y1 + m3*mp1*mpp3*x2*y1 + m2*m3*mp1*mpp3*x2*y1 + mp2*mpp3*x2*y1 + m2*mp2*mpp3*x2*y1 + m3*mp2*mpp3*x2*y1 + mp1*mp2*mpp3*x2*y1 + m2*mp1*mp2*mpp3*x2*y1 + m3*mp1*mp2*mpp3*x2*y1 + mp3*mpp3*x2*y1 + m2*mp3*mpp3*x2*y1 + mp1*mp3*mpp3*x2*y1 + m2*mp1*mp3*mpp3*x2*y1 + mp2*mp3*mpp3*x2*y1 + mp1*mp2*mp3*mpp3*x2*y1 + mpp1*mpp3*x2*y1 + m2*mpp1*mpp3*x2*y1 + m1*m2*mpp1*mpp3*x2*y1 + m3*mpp1*mpp3*x2*y1 + m2*m3*mpp1*mpp3*x2*y1 + m2*mp1*mpp1*mpp3*x2*y1 + mp2*mpp1*mpp3*x2*y1 + m2*mp2*mpp1*mpp3*x2*y1 + m3*mp2*mpp1*mpp3*x2*y1 + mp3*mpp1*mpp3*x2*y1 + m2*mp3*mpp1*mpp3*x2*y1 + mp2*mp3*mpp1*mpp3*x2*y1 + mpp2*mpp3*x2*y1 + m1*mpp2*mpp3*x2*y1 + m2*mpp2*mpp3*x2*y1 + mp1*mpp2*mpp3*x2*y1 + m1*mp1*mpp2*mpp3*x2*y1 + m2*mp1*mpp2*mpp3*x2*y1 + mp2*mpp2*mpp3*x2*y1 + mp1*mp2*mpp2*mpp3*x2*y1 + mpp1*mpp2*mpp3*x2*y1 + m1*mpp1*mpp2*mpp3*x2*y1 + m2*mpp1*mpp2*mpp3*x2*y1 + mp1*mpp1*mpp2*mpp3*x2*y1 + mp2*mpp1*mpp2*mpp3*x2*y1 + m1*m2*mp3*x3*y1 + m2*m3*mp3*x3*y1 + m1*m2*mp1*mp3*x3*y1 + m2*m3*mp1*mp3*x3*y1 + m1*m2*mp2*mp3*x3*y1 + m2*m3*mp2*mp3*x3*y1 + m1*m2*mp3*mpp1*x3*y1 + m2*m3*mp3*mpp1*x3*y1 + m2*mp1*mp3*mpp1*x3*y1 + m2*mp2*mp3*mpp1*x3*y1 + m1*m2*mp3*mpp2*x3*y1 + m2*m3*mp3*mpp2*x3*y1 + m1*mp1*mp3*mpp2*x3*y1 + m3*mp1*mp3*mpp2*x3*y1 + m1*mp2*mp3*mpp2*x3*y1 + m3*mp2*mp3*mpp2*x3*y1 + mp3*mpp1*mpp2*x3*y1 + m1*mp3*mpp1*mpp2*x3*y1 + m2*mp3*mpp1*mpp2*x3*y1 + m3*mp3*mpp1*mpp2*x3*y1 + mp1*mp3*mpp1*mpp2*x3*y1 + mp2*mp3*mpp1*mpp2*x3*y1 + m2*mpp3*x3*y1 + m1*m2*mpp3*x3*y1 + m2*m3*mpp3*x3*y1 + m2*mp1*mpp3*x3*y1 + m1*m2*mp1*mpp3*x3*y1 + m2*m3*mp1*mpp3*x3*y1 + m2*mp2*mpp3*x3*y1 + m1*m2*mp2*mpp3*x3*y1 + m2*m3*mp2*mpp3*x3*y1 + m2*mp3*mpp3*x3*y1 + m2*mp1*mp3*mpp3*x3*y1 + m2*mp2*mp3*mpp3*x3*y1 + m2*mpp1*mpp3*x3*y1 + m1*m2*mpp1*mpp3*x3*y1 + m2*m3*mpp1*mpp3*x3*y1 + m2*mp1*mpp1*mpp3*x3*y1 + m2*mp2*mpp1*mpp3*x3*y1 + m2*mp3*mpp1*mpp3*x3*y1 + m2*mpp2*mpp3*x3*y1 + m1*m2*mpp2*mpp3*x3*y1 + m2*m3*mpp2*mpp3*x3*y1 + mp1*mpp2*mpp3*x3*y1 + m1*mp1*mpp2*mpp3*x3*y1 + m3*mp1*mpp2*mpp3*x3*y1 + mp2*mpp2*mpp3*x3*y1 + m1*mp2*mpp2*mpp3*x3*y1 + m3*mp2*mpp2*mpp3*x3*y1 + m2*mp3*mpp2*mpp3*x3*y1 + mp1*mp3*mpp2*mpp3*x3*y1 + mp2*mp3*mpp2*mpp3*x3*y1 + m1*mpp1*mpp2*mpp3*x3*y1 + m2*mpp1*mpp2*mpp3*x3*y1 + m3*mpp1*mpp2*mpp3*x3*y1 + mp1*mpp1*mpp2*mpp3*x3*y1 + mp2*mpp1*mpp2*mpp3*x3*y1 + mp3*mpp1*mpp2*mpp3*x3*y1 + m1*m2*m3*y2 + m1*m3*mp1*y2 + m1*m3*mp1*mp2*y2 + m2*m3*mp1*mp2*y2 + m1*m3*mp3*y2 + m1*mp1*mp3*y2 + m1*m2*mp1*mp3*y2 + m1*mp2*mp3*y2 + m1*m2*mp2*mp3*y2 + m1*m2*m3*mp2*mp3*y2 + m2*m3*mp2*mpp1*y2 + m1*m2*m3*mp2*mpp1*y2 + m2*m3*mp1*mp2*mpp1*y2 + m2*mp3*mpp1*y2 + m1*m2*mp3*mpp1*y2 + m2*m3*mp3*mpp1*y2 + m1*m2*m3*mp3*mpp1*y2 + m1*mp1*mp3*mpp1*y2 + m2*mp1*mp3*mpp1*y2 + m1*m2*mp1*mp3*mpp1*y2 + m2*m3*mp1*mp3*mpp1*y2 + m1*mp2*mp3*mpp1*y2 + m3*mp2*mp3*mpp1*y2 + m1*m3*mp2*mp3*mpp1*y2 + m1*mp1*mp2*mp3*mpp1*y2 + m2*mp1*mp2*mp3*mpp1*y2 + m3*mp1*mp2*mp3*mpp1*y2 + m1*m2*m3*mpp2*y2 + m1*m2*m3*mp1*mpp2*y2 + m1*m3*mp2*mpp2*y2 + m1*m2*m3*mp2*mpp2*y2 + m1*m3*mp1*mp2*mpp2*y2 + m2*m3*mp1*mp2*mpp2*y2 + m1*mp3*mpp2*y2 + m1*m3*mp3*mpp2*y2 + m1*m2*m3*mp3*mpp2*y2 + m1*mp1*mp3*mpp2*y2 + m1*m3*mp2*mp3*mpp2*y2 + mp3*mpp1*mpp2*y2 + m2*mp1*mp3*mpp1*mpp2*y2 + mp1*mp2*mp3*mpp1*mpp2*y2 + m1*m2*m3*mpp3*y2 + m1*mp1*mpp3*y2 + m1*m3*mp1*mpp3*y2 + m1*m2*m3*mp1*mpp3*y2 + m1*m2*mp2*mpp3*y2 + m1*m3*mp2*mpp3*y2 + m1*mp1*mp2*mpp3*y2 + m2*mp1*mp2*mpp3*y2 + m1*m2*mp3*mpp3*y2 + m1*m3*mp3*mpp3*y2 + m1*m2*m3*mp3*mpp3*y2 + m1*mp1*mp3*mpp3*y2 + m1*m2*mp1*mp3*mpp3*y2 + m1*m3*mp1*mp3*mpp3*y2 + m1*mp2*mp3*mpp3*y2 + mpp1*mpp3*y2 + m1*mpp1*mpp3*y2 + m1*m2*mpp1*mpp3*y2 + m3*mpp1*mpp3*y2 + m1*m3*mpp1*mpp3*y2 + m2*m3*mpp1*mpp3*y2 + mp1*mpp1*mpp3*y2 + m1*mp1*mpp1*mpp3*y2 + m2*mp1*mpp1*mpp3*y2 + m1*m2*mp1*mpp1*mpp3*y2 + m3*mp1*mpp1*mpp3*y2 + mp2*mpp1*mpp3*y2 + m1*m2*mp2*mpp1*mpp3*y2 + m3*mp2*mpp1*mpp3*y2 + m1*m3*mp2*mpp1*mpp3*y2 + m2*m3*mp2*mpp1*mpp3*y2 + mp1*mp2*mpp1*mpp3*y2 + m1*mp1*mp2*mpp1*mpp3*y2 + m3*mp1*mp2*mpp1*mpp3*y2 + mp3*mpp1*mpp3*y2 + m1*mp3*mpp1*mpp3*y2 + m2*mp3*mpp1*mpp3*y2 + m3*mp3*mpp1*mpp3*y2 + m1*m3*mp3*mpp1*mpp3*y2 + m2*m3*mp3*mpp1*mpp3*y2 + mp1*mp3*mpp1*mpp3*y2 + m3*mp1*mp3*mpp1*mpp3*y2 + mp2*mp3*mpp1*mpp3*y2 + m1*mp2*mp3*mpp1*mpp3*y2 + m2*mp2*mp3*mpp1*mpp3*y2 + mp1*mp2*mp3*mpp1*mpp3*y2 + m1*mpp2*mpp3*y2 + m1*m2*mpp2*mpp3*y2 + m1*m2*mp1*mpp2*mpp3*y2 + m1*m3*mp1*mpp2*mpp3*y2 + m1*mp2*mpp2*mpp3*y2 + m1*m2*mp2*mpp2*mpp3*y2 + m1*mp1*mp2*mpp2*mpp3*y2 + m2*mp1*mp2*mpp2*mpp3*y2 + m1*m3*mp3*mpp2*mpp3*y2 + m1*mp1*mp3*mpp2*mpp3*y2 + m1*mpp1*mpp2*mpp3*y2 + m2*mpp1*mpp2*mpp3*y2 + m3*mpp1*mpp2*mpp3*y2 + m1*m3*mpp1*mpp2*mpp3*y2 + m2*m3*mpp1*mpp2*mpp3*y2 + mp1*mpp1*mpp2*mpp3*y2 + m2*mp1*mpp1*mpp2*mpp3*y2 + m3*mp1*mpp1*mpp2*mpp3*y2 + mp2*mpp1*mpp2*mpp3*y2 + m3*mp2*mpp1*mpp2*mpp3*y2 + mp1*mp2*mpp1*mpp2*mpp3*y2 + mp3*mpp1*mpp2*mpp3*y2 + m1*mp3*mpp1*mpp2*mpp3*y2 + m2*mp3*mpp1*mpp2*mpp3*y2 + m3*mp3*mpp1*mpp2*mpp3*y2 + mp1*mp3*mpp1*mpp2*mpp3*y2 + mp2*mp3*mpp1*mpp2*mpp3*y2 + m3*x1*y2 + m1*m3*x1*y2 + m3*mp1*x1*y2 + m1*m3*mp1*x1*y2 + m1*m3*mp2*x1*y2 + m1*m3*mp1*mp2*x1*y2 + m1*mp3*x1*y2 + m2*mp3*x1*y2 + m1*m2*mp3*x1*y2 + m2*m3*mp3*x1*y2 + m1*mp1*mp3*x1*y2 + m2*mp1*mp3*x1*y2 + m1*m2*mp1*mp3*x1*y2 + m2*m3*mp1*mp3*x1*y2 + mp2*mp3*x1*y2 + m1*mp2*mp3*x1*y2 + m2*mp2*mp3*x1*y2 + m3*mp2*mp3*x1*y2 + mp1*mp2*mp3*x1*y2 + m1*mp1*mp2*mp3*x1*y2 + m2*mp1*mp2*mp3*x1*y2 + m3*mp1*mp2*mp3*x1*y2 + m3*mpp1*x1*y2 + m1*m3*mpp1*x1*y2 + m3*mp1*mpp1*x1*y2 + m1*m3*mp2*mpp1*x1*y2 + m3*mp1*mp2*mpp1*x1*y2 + m1*mp3*mpp1*x1*y2 + m2*mp3*mpp1*x1*y2 + m1*m2*mp3*mpp1*x1*y2 + m2*m3*mp3*mpp1*x1*y2 + mp1*mp3*mpp1*x1*y2 + m2*mp1*mp3*mpp1*x1*y2 + mp2*mp3*mpp1*x1*y2 + m1*mp2*mp3*mpp1*x1*y2 + m2*mp2*mp3*mpp1*x1*y2 + m3*mp2*mp3*mpp1*x1*y2 + mp1*mp2*mp3*mpp1*x1*y2 + m1*m3*mpp2*x1*y2 + m1*m3*mp1*mpp2*x1*y2 + mp3*mpp2*x1*y2 + m2*mp3*mpp2*x1*y2 + mp1*mp3*mpp2*x1*y2 + m2*mp1*mp3*mpp2*x1*y2 + mp2*mp3*mpp2*x1*y2 + mp1*mp2*mp3*mpp2*x1*y2 + m1*m3*mpp1*mpp2*x1*y2 + m3*mp1*mpp1*mpp2*x1*y2 + mp3*mpp1*mpp2*x1*y2 + m2*mp3*mpp1*mpp2*x1*y2 + mp2*mp3*mpp1*mpp2*x1*y2 + mpp3*x1*y2 + m1*m2*mpp3*x1*y2 + m2*m3*mpp3*x1*y2 + mp1*mpp3*x1*y2 + m1*m2*mp1*mpp3*x1*y2 + m2*m3*mp1*mpp3*x1*y2 + m2*mp2*mpp3*x1*y2 + m3*mp2*mpp3*x1*y2 + m2*mp1*mp2*mpp3*x1*y2 + m3*mp1*mp2*mpp3*x1*y2 + m2*mp3*mpp3*x1*y2 + m2*mp1*mp3*mpp3*x1*y2 + mp2*mp3*mpp3*x1*y2 + mp1*mp2*mp3*mpp3*x1*y2 + mpp1*mpp3*x1*y2 + m1*m2*mpp1*mpp3*x1*y2 + m2*m3*mpp1*mpp3*x1*y2 + m2*mp1*mpp1*mpp3*x1*y2 + m2*mp2*mpp1*mpp3*x1*y2 + m3*mp2*mpp1*mpp3*x1*y2 + m2*mp3*mpp1*mpp3*x1*y2 + mp2*mp3*mpp1*mpp3*x1*y2 + mpp2*mpp3*x1*y2 + m1*mpp2*mpp3*x1*y2 + m2*mpp2*mpp3*x1*y2 + mp1*mpp2*mpp3*x1*y2 + m1*mp1*mpp2*mpp3*x1*y2 + m2*mp1*mpp2*mpp3*x1*y2 + mp2*mpp2*mpp3*x1*y2 + mp1*mp2*mpp2*mpp3*x1*y2 + mpp1*mpp2*mpp3*x1*y2 + m1*mpp1*mpp2*mpp3*x1*y2 + m2*mpp1*mpp2*mpp3*x1*y2 + mp1*mpp1*mpp2*mpp3*x1*y2 + mp2*mpp1*mpp2*mpp3*x1*y2 + m1*m3*mp1*x2*y2 + m1*m3*mp2*x2*y2 + m3*mp1*mp2*x2*y2 + m1*mp3*x2*y2 + m1*m2*mp3*x2*y2 + m1*mp2*mp3*x2*y2 + m3*mpp1*x2*y2 + m1*m3*mpp1*x2*y2 + m3*mp1*mpp1*x2*y2 + m2*mp3*mpp1*x2*y2 + mp2*mp3*mpp1*x2*y2 + m1*m3*mpp2*x2*y2 + m3*mp1*mpp2*x2*y2 + m1*mpp3*x2*y2 + m1*m2*mpp3*x2*y2 + m1*mp1*mpp3*x2*y2 + mp1*mp2*mpp3*x2*y2 + mpp1*mpp3*x2*y2 + m1*mpp1*mpp3*x2*y2 + m2*mpp1*mpp3*x2*y2 + mp1*mpp1*mpp3*x2*y2 + mp2*mpp1*mpp3*x2*y2 + m1*mpp2*mpp3*x2*y2 + mp1*mpp2*mpp3*x2*y2 + m1*x3*y2 + m1*m2*mp1*x3*y2 + m1*m3*mp1*x3*y2 + m1*m2*mp1*mp2*x3*y2 + m1*m3*mp1*mp2*x3*y2 + m1*mp3*x3*y2 + m1*m2*mp3*x3*y2 + m1*mp2*mp3*x3*y2 + m1*m2*mp2*mp3*x3*y2 + mpp1*x3*y2 + m2*mpp1*x3*y2 + m1*m2*mpp1*x3*y2 + m3*mpp1*x3*y2 + m1*m3*mpp1*x3*y2 + m2*mp1*mpp1*x3*y2 + m3*mp1*mpp1*x3*y2 + m2*mp2*mpp1*x3*y2 + m1*m2*mp2*mpp1*x3*y2 + m3*mp2*mpp1*x3*y2 + m1*m3*mp2*mpp1*x3*y2 + m2*mp1*mp2*mpp1*x3*y2 + m3*mp1*mp2*mpp1*x3*y2 + m2*mp3*mpp1*x3*y2 + m2*mp2*mp3*mpp1*x3*y2 + m1*m2*mp1*mpp2*x3*y2 + m1*m3*mp1*mpp2*x3*y2 + m1*mp1*mp2*mpp2*x3*y2 + m1*mp3*mpp2*x3*y2 + m1*m2*mp3*mpp2*x3*y2 + m1*mp2*mp3*mpp2*x3*y2 + m2*mpp1*mpp2*x3*y2 + m1*m2*mpp1*mpp2*x3*y2 + m3*mpp1*mpp2*x3*y2 + m1*m3*mpp1*mpp2*x3*y2 + m2*mp1*mpp1*mpp2*x3*y2 + m3*mp1*mpp1*mpp2*x3*y2 + mp2*mpp1*mpp2*x3*y2 + m1*mp2*mpp1*mpp2*x3*y2 + mp1*mp2*mpp1*mpp2*x3*y2 + m2*mp3*mpp1*mpp2*x3*y2 + mp2*mp3*mpp1*mpp2*x3*y2 + m1*mpp3*x3*y2 + m1*m2*mpp3*x3*y2 + m1*mp1*mpp3*x3*y2 + m1*mp2*mpp3*x3*y2 + m1*m2*mp2*mpp3*x3*y2 + m1*mp1*mp2*mpp3*x3*y2 + mpp1*mpp3*x3*y2 + m1*mpp1*mpp3*x3*y2 + m2*mpp1*mpp3*x3*y2 + mp1*mpp1*mpp3*x3*y2 + mp2*mpp1*mpp3*x3*y2 + m1*mp2*mpp1*mpp3*x3*y2 + m2*mp2*mpp1*mpp3*x3*y2 + mp1*mp2*mpp1*mpp3*x3*y2 + m1*mpp2*mpp3*x3*y2 + m1*m2*mpp2*mpp3*x3*y2 + m1*mp1*mpp2*mpp3*x3*y2 + m1*mp2*mpp2*mpp3*x3*y2 + mpp1*mpp2*mpp3*x3*y2 + m1*mpp1*mpp2*mpp3*x3*y2 + m2*mpp1*mpp2*mpp3*x3*y2 + mp1*mpp1*mpp2*mpp3*x3*y2 + mp2*mpp1*mpp2*mpp3*x3*y2 + m1*m3*mp1*y1*y2 + m3*mp1*mp2*y1*y2 + m1*m3*mp1*mp2*y1*y2 + m1*mp1*mp3*y1*y2 + m2*mp1*mp3*y1*y2 + m1*m2*mp1*mp3*y1*y2 + m2*m3*mp1*mp3*y1*y2 + mp1*mp2*mp3*y1*y2 + m1*mp1*mp2*mp3*y1*y2 + m2*mp1*mp2*mp3*y1*y2 + m3*mp1*mp2*mp3*y1*y2 + m3*mpp1*y1*y2 + m1*m3*mpp1*y1*y2 + m3*mp1*mpp1*y1*y2 + m1*m3*mp2*mpp1*y1*y2 + m3*mp1*mp2*mpp1*y1*y2 + mp3*mpp1*y1*y2 + m1*mp3*mpp1*y1*y2 + m1*m2*mp3*mpp1*y1*y2 + m2*m3*mp3*mpp1*y1*y2 + mp1*mp3*mpp1*y1*y2 + m2*mp1*mp3*mpp1*y1*y2 + m1*mp2*mp3*mpp1*y1*y2 + m2*mp2*mp3*mpp1*y1*y2 + m3*mp2*mp3*mpp1*y1*y2 + mp1*mp2*mp3*mpp1*y1*y2 + m3*mp1*mpp2*y1*y2 + m1*m3*mp1*mpp2*y1*y2 + mp1*mp3*mpp2*y1*y2 + m2*mp1*mp3*mpp2*y1*y2 + mp1*mp2*mp3*mpp2*y1*y2 + m1*m3*mpp1*mpp2*y1*y2 + m3*mp1*mpp1*mpp2*y1*y2 + mp3*mpp1*mpp2*y1*y2 + m2*mp3*mpp1*mpp2*y1*y2 + mp2*mp3*mpp1*mpp2*y1*y2 + m1*m2*mp1*mpp3*y1*y2 + m2*m3*mp1*mpp3*y1*y2 + mp1*mp2*mpp3*y1*y2 + m2*mp1*mp2*mpp3*y1*y2 + m3*mp1*mp2*mpp3*y1*y2 + m2*mp1*mp3*mpp3*y1*y2 + mp1*mp2*mp3*mpp3*y1*y2 + m2*mpp1*mpp3*y1*y2 + m1*m2*mpp1*mpp3*y1*y2 + m2*m3*mpp1*mpp3*y1*y2 + m2*mp1*mpp1*mpp3*y1*y2 + mp2*mpp1*mpp3*y1*y2 + m2*mp2*mpp1*mpp3*y1*y2 + m3*mp2*mpp1*mpp3*y1*y2 + m2*mp3*mpp1*mpp3*y1*y2 + mp2*mp3*mpp1*mpp3*y1*y2 + m1*mp1*mpp2*mpp3*y1*y2 + m2*mp1*mpp2*mpp3*y1*y2 + mp1*mp2*mpp2*mpp3*y1*y2 + mpp1*mpp2*mpp3*y1*y2 + m1*mpp1*mpp2*mpp3*y1*y2 + m2*mpp1*mpp2*mpp3*y1*y2 + mp1*mpp1*mpp2*mpp3*y1*y2 + mp2*mpp1*mpp2*mpp3*y1*y2 + m1*m2*y3 + m1*m2*mp1*y3 + m1*m3*mp2*y3 + m1*m2*m3*mp2*y3 + m1*mp1*mp2*y3 + m1*m2*mp1*mp2*y3 + m2*m3*mp1*mp2*y3 + m1*m2*m3*mp1*mp2*y3 + m1*mp2*mp3*y3 + m1*m2*mp2*mp3*y3 + m1*m2*m3*mp2*mp3*y3 + mp1*mp2*mp3*y3 + m2*mp1*mp2*mp3*y3 + m3*mp1*mp2*mp3*y3 + m1*m3*mp1*mp2*mp3*y3 + m2*m3*mp1*mp2*mp3*y3 + m2*mpp1*y3 + m2*mp1*mpp1*y3 + mp2*mpp1*y3 + m2*mp2*mpp1*y3 + m3*mp2*mpp1*y3 + m1*m3*mp2*mpp1*y3 + m2*m3*mp2*mpp1*y3 + m1*m2*m3*mp2*mpp1*y3 + mp1*mp2*mpp1*y3 + m1*mp1*mp2*mpp1*y3 + m3*mp1*mp2*mpp1*y3 + m2*m3*mp1*mp2*mpp1*y3 + m2*mp3*mpp1*y3 + m2*m3*mp3*mpp1*y3 + m1*m2*m3*mp3*mpp1*y3 + m2*mp1*mp3*mpp1*y3 + m1*m2*mp1*mp3*mpp1*y3 + m2*m3*mp1*mp3*mpp1*y3 + m1*mp2*mp3*mpp1*y3 + m2*mp2*mp3*mpp1*y3 + m3*mp2*mp3*mpp1*y3 + m1*m3*mp2*mp3*mpp1*y3 + m3*mp1*mp2*mp3*mpp1*y3 + m1*mpp2*y3 + m1*m2*m3*mpp2*y3 + m3*mp1*mpp2*y3 + m2*m3*mp1*mpp2*y3 + m1*m3*mp2*mpp2*y3 + m1*m2*m3*mp2*mpp2*y3 + m3*mp1*mp2*mpp2*y3 + m2*m3*mp1*mp2*mpp2*y3 + m1*m2*mp3*mpp2*y3 + m1*m3*mp3*mpp2*y3 + m1*m2*m3*mp3*mpp2*y3 + m2*mp1*mp3*mpp2*y3 + m1*m3*mp1*mp3*mpp2*y3 + m2*m3*mp1*mp3*mpp2*y3 + m1*mp2*mp3*mpp2*y3 + m1*m3*mp2*mp3*mpp2*y3 + mp1*mp2*mp3*mpp2*y3 + m3*mp1*mp2*mp3*mpp2*y3 + mpp1*mpp2*y3 + m1*mpp1*mpp2*y3 + m2*mpp1*mpp2*y3 + m1*m2*mpp1*mpp2*y3 + m3*mpp1*mpp2*y3 + m1*m3*mpp1*mpp2*y3 + mp1*mpp1*mpp2*y3 + m1*mp1*mpp1*mpp2*y3 + m2*mp1*mpp1*mpp2*y3 + m3*mp1*mpp1*mpp2*y3 + mp2*mpp1*mpp2*y3 + m1*mp2*mpp1*mpp2*y3 + mp1*mp2*mpp1*mpp2*y3 + mp3*mpp1*mpp2*y3 + m1*mp3*mpp1*mpp2*y3 + mp1*mp3*mpp1*mpp2*y3 + m1*mp1*mp3*mpp1*mpp2*y3 + m1*m2*mpp3*y3 + m1*m2*m3*mpp3*y3 + m2*mp1*mpp3*y3 + m1*m2*mp1*mpp3*y3 + m2*m3*mp1*mpp3*y3 + m1*m2*m3*mp1*mpp3*y3 + m1*mp2*mpp3*y3 + m1*m3*mp2*mpp3*y3 + mp1*mp2*mpp3*y3 + m1*m2*mp1*mp2*mpp3*y3 + m1*m2*mp3*mpp3*y3 + m1*m2*m3*mp3*mpp3*y3 + m2*mp1*mp3*mpp3*y3 + m1*m2*mp1*mp3*mpp3*y3 + m2*m3*mp1*mp3*mpp3*y3 + m1*mp2*mp3*mpp3*y3 + m1*m3*mp2*mp3*mpp3*y3 + m3*mp1*mp2*mp3*mpp3*y3 + m2*mpp1*mpp3*y3 + m2*mp1*mpp1*mpp3*y3 + m1*m2*mp1*mpp1*mpp3*y3 + mp2*mpp1*mpp3*y3 + m1*m2*mp2*mpp1*mpp3*y3 + mp1*mp2*mpp1*mpp3*y3 + m2*mp1*mp2*mpp1*mpp3*y3 + m1*mp1*mpp2*mpp3*y3 + m3*mp1*mpp2*mpp3*y3 + m1*m3*mp1*mpp2*mpp3*y3 + m1*m2*mp2*mpp2*mpp3*y3 + m2*mp1*mp2*mpp2*mpp3*y3 + mp1*mp3*mpp2*mpp3*y3 + m1*mp1*mp3*mpp2*mpp3*y3 + m1*mp1*mpp1*mpp2*mpp3*y3 + m1*m2*x1*y3 + m2*m3*x1*y3 + m1*m2*mp1*x1*y3 + m2*m3*mp1*x1*y3 + m1*m2*mp2*x1*y3 + m2*m3*mp2*x1*y3 + m1*m2*mp3*x1*y3 + m2*m3*mp3*x1*y3 + m1*m2*mp1*mp3*x1*y3 + m2*m3*mp1*mp3*x1*y3 + m1*m2*mp2*mp3*x1*y3 + m2*m3*mp2*mp3*x1*y3 + m1*m2*mpp1*x1*y3 + m2*m3*mpp1*x1*y3 + m2*mp1*mpp1*x1*y3 + m2*mp2*mpp1*x1*y3 + m1*m2*mp3*mpp1*x1*y3 + m2*m3*mp3*mpp1*x1*y3 + m2*mp1*mp3*mpp1*x1*y3 + m2*mp2*mp3*mpp1*x1*y3 + m1*m2*mpp2*x1*y3 + m2*m3*mpp2*x1*y3 + m1*mp1*mpp2*x1*y3 + m3*mp1*mpp2*x1*y3 + m1*mp2*mpp2*x1*y3 + m3*mp2*mpp2*x1*y3 + m1*m2*mp3*mpp2*x1*y3 + m2*m3*mp3*mpp2*x1*y3 + m1*mp1*mp3*mpp2*x1*y3 + m3*mp1*mp3*mpp2*x1*y3 + m1*mp2*mp3*mpp2*x1*y3 + m3*mp2*mp3*mpp2*x1*y3 + mpp1*mpp2*x1*y3 + m1*mpp1*mpp2*x1*y3 + m2*mpp1*mpp2*x1*y3 + m3*mpp1*mpp2*x1*y3 + mp1*mpp1*mpp2*x1*y3 + mp2*mpp1*mpp2*x1*y3 + mp3*mpp1*mpp2*x1*y3 + m1*mp3*mpp1*mpp2*x1*y3 + m2*mp3*mpp1*mpp2*x1*y3 + m3*mp3*mpp1*mpp2*x1*y3 + mp1*mp3*mpp1*mpp2*x1*y3 + mp2*mp3*mpp1*mpp2*x1*y3 + m1*m2*mpp3*x1*y3 + m2*m3*mpp3*x1*y3 + m1*m2*mp1*mpp3*x1*y3 + m2*m3*mp1*mpp3*x1*y3 + m1*m2*mp2*mpp3*x1*y3 + m2*m3*mp2*mpp3*x1*y3 + m2*mp3*mpp3*x1*y3 + m2*mp1*mp3*mpp3*x1*y3 + m2*mp2*mp3*mpp3*x1*y3 + m1*m2*mpp1*mpp3*x1*y3 + m2*m3*mpp1*mpp3*x1*y3 + m2*mp1*mpp1*mpp3*x1*y3 + m2*mp2*mpp1*mpp3*x1*y3 + m2*mp3*mpp1*mpp3*x1*y3 + m1*m2*mpp2*mpp3*x1*y3 + m2*m3*mpp2*mpp3*x1*y3 + m1*mp1*mpp2*mpp3*x1*y3 + m3*mp1*mpp2*mpp3*x1*y3 + m1*mp2*mpp2*mpp3*x1*y3 + m3*mp2*mpp2*mpp3*x1*y3 + m2*mp3*mpp2*mpp3*x1*y3 + mp1*mp3*mpp2*mpp3*x1*y3 + mp2*mp3*mpp2*mpp3*x1*y3 + mpp1*mpp2*mpp3*x1*y3 + m1*mpp1*mpp2*mpp3*x1*y3 + m2*mpp1*mpp2*mpp3*x1*y3 + m3*mpp1*mpp2*mpp3*x1*y3 + mp1*mpp1*mpp2*mpp3*x1*y3 + mp2*mpp1*mpp2*mpp3*x1*y3 + mp3*mpp1*mpp2*mpp3*x1*y3 + m1*x2*y3 + m1*m3*x2*y3 + m1*mp1*x2*y3 + m2*mp1*x2*y3 + m1*m2*mp1*x2*y3 + m3*mp1*x2*y3 + m1*m3*mp1*x2*y3 + m1*m3*mp2*x2*y3 + m1*mp1*mp2*x2*y3 + m2*mp1*mp2*x2*y3 + m1*m2*mp1*mp2*x2*y3 + m3*mp1*mp2*x2*y3 + m1*m3*mp1*mp2*x2*y3 + m1*m2*mp3*x2*y3 + m1*m2*mp2*mp3*x2*y3 + mpp1*x2*y3 + m1*mpp1*x2*y3 + m1*m2*mpp1*x2*y3 + m3*mpp1*x2*y3 + m1*m3*mpp1*x2*y3 + mp1*mpp1*x2*y3 + m2*mp1*mpp1*x2*y3 + m3*mp1*mpp1*x2*y3 + m1*mp2*mpp1*x2*y3 + m1*m2*mp2*mpp1*x2*y3 + m3*mp2*mpp1*x2*y3 + m1*m3*mp2*mpp1*x2*y3 + mp1*mp2*mpp1*x2*y3 + m2*mp1*mp2*mpp1*x2*y3 + m3*mp1*mp2*mpp1*x2*y3 + mp3*mpp1*x2*y3 + m2*mp3*mpp1*x2*y3 + mp2*mp3*mpp1*x2*y3 + m2*mp2*mp3*mpp1*x2*y3 + m1*m3*mpp2*x2*y3 + m1*mp1*mpp2*x2*y3 + m2*mp1*mpp2*x2*y3 + m1*m2*mp1*mpp2*x2*y3 + m3*mp1*mpp2*x2*y3 + m1*m3*mp1*mpp2*x2*y3 + mp1*mp2*mpp2*x2*y3 + m1*mp1*mp2*mpp2*x2*y3 + m1*m2*mp3*mpp2*x2*y3 + m1*mp2*mp3*mpp2*x2*y3 + m1*mpp1*mpp2*x2*y3 + m1*m2*mpp1*mpp2*x2*y3 + m3*mpp1*mpp2*x2*y3 + m1*m3*mpp1*mpp2*x2*y3 + mp1*mpp1*mpp2*x2*y3 + m2*mp1*mpp1*mpp2*x2*y3 + m3*mp1*mpp1*mpp2*x2*y3 + m1*mp2*mpp1*mpp2*x2*y3 + mp1*mp2*mpp1*mpp2*x2*y3 + mp3*mpp1*mpp2*x2*y3 + m2*mp3*mpp1*mpp2*x2*y3 + mp2*mp3*mpp1*mpp2*x2*y3 + m1*mpp3*x2*y3 + m1*m2*mpp3*x2*y3 + mp1*mpp3*x2*y3 + m1*mp1*mpp3*x2*y3 + m1*mp2*mpp3*x2*y3 + m1*m2*mp2*mpp3*x2*y3 + mp1*mp2*mpp3*x2*y3 + m1*mp1*mp2*mpp3*x2*y3 + m1*mpp1*mpp3*x2*y3 + m2*mpp1*mpp3*x2*y3 + mp1*mpp1*mpp3*x2*y3 + m1*mp2*mpp1*mpp3*x2*y3 + m2*mp2*mpp1*mpp3*x2*y3 + mp1*mp2*mpp1*mpp3*x2*y3 + m1*mpp2*mpp3*x2*y3 + m1*m2*mpp2*mpp3*x2*y3 + mp1*mpp2*mpp3*x2*y3 + m1*mp1*mpp2*mpp3*x2*y3 + m1*mp2*mpp2*mpp3*x2*y3 + m1*mpp1*mpp2*mpp3*x2*y3 + m2*mpp1*mpp2*mpp3*x2*y3 + mp1*mpp1*mpp2*mpp3*x2*y3 + mp2*mpp1*mpp2*mpp3*x2*y3 + m1*m2*mp1*x3*y3 + m2*m3*mp1*x3*y3 + m1*m2*mp2*x3*y3 + m1*mp1*mp2*x3*y3 + m2*mp1*mp2*x3*y3 + m3*mp1*mp2*x3*y3 + m1*m2*mp3*x3*y3 + m1*mp2*mp3*x3*y3 + m2*mpp1*x3*y3 + m1*m2*mpp1*x3*y3 + m2*m3*mpp1*x3*y3 + m2*mp1*mpp1*x3*y3 + mp2*mpp1*x3*y3 + m1*mp2*mpp1*x3*y3 + m3*mp2*mpp1*x3*y3 + mp1*mp2*mpp1*x3*y3 + m2*mp3*mpp1*x3*y3 + mp2*mp3*mpp1*x3*y3 + m1*mpp2*x3*y3 + m1*m2*mpp2*x3*y3 + mp1*mpp2*x3*y3 + m2*mp1*mpp2*x3*y3 + m1*mp2*mpp2*x3*y3 + mp1*mp2*mpp2*x3*y3 + m1*m2*mpp3*x3*y3 + m2*mp1*mpp3*x3*y3 + m1*mp2*mpp3*x3*y3 + mp1*mp2*mpp3*x3*y3 + m1*m2*mp1*y1*y3 + m2*m3*mp1*y1*y3 + m1*m2*mp2*y1*y3 + m2*m3*mp2*y1*y3 + m1*m2*mp1*mp3*y1*y3 + m2*m3*mp1*mp3*y1*y3 + m1*m2*mp2*mp3*y1*y3 + m2*m3*mp2*mp3*y1*y3 + m2*mpp1*y1*y3 + m1*m2*mpp1*y1*y3 + m2*m3*mpp1*y1*y3 + m2*mp1*mpp1*y1*y3 + m2*mp2*mpp1*y1*y3 + m2*mp3*mpp1*y1*y3 + m1*m2*mp3*mpp1*y1*y3 + m2*m3*mp3*mpp1*y1*y3 + m2*mp1*mp3*mpp1*y1*y3 + m2*mp2*mp3*mpp1*y1*y3 + m1*mpp2*y1*y3 + m1*m2*mpp2*y1*y3 + m3*mpp2*y1*y3 + m2*m3*mpp2*y1*y3 + m1*mp1*mpp2*y1*y3 + m3*mp1*mpp2*y1*y3 + m1*mp2*mpp2*y1*y3 + m3*mp2*mpp2*y1*y3 + m1*mp3*mpp2*y1*y3 + m1*m2*mp3*mpp2*y1*y3 + m3*mp3*mpp2*y1*y3 + m2*m3*mp3*mpp2*y1*y3 + m1*mp1*mp3*mpp2*y1*y3 + m3*mp1*mp3*mpp2*y1*y3 + m1*mp2*mp3*mpp2*y1*y3 + m3*mp2*mp3*mpp2*y1*y3 + m1*mpp1*mpp2*y1*y3 + m2*mpp1*mpp2*y1*y3 + m3*mpp1*mpp2*y1*y3 + mp1*mpp1*mpp2*y1*y3 + mp2*mpp1*mpp2*y1*y3 + m1*mp3*mpp1*mpp2*y1*y3 + m2*mp3*mpp1*mpp2*y1*y3 + m3*mp3*mpp1*mpp2*y1*y3 + mp1*mp3*mpp1*mpp2*y1*y3 + mp2*mp3*mpp1*mpp2*y1*y3 + m1*m2*mp1*mpp3*y1*y3 + m2*m3*mp1*mpp3*y1*y3 + m1*m2*mp2*mpp3*y1*y3 + m2*m3*mp2*mpp3*y1*y3 + m2*mp1*mp3*mpp3*y1*y3 + m2*mp2*mp3*mpp3*y1*y3 + m2*mpp1*mpp3*y1*y3 + m1*m2*mpp1*mpp3*y1*y3 + m2*m3*mpp1*mpp3*y1*y3 + m2*mp1*mpp1*mpp3*y1*y3 + m2*mp2*mpp1*mpp3*y1*y3 + m2*mp3*mpp1*mpp3*y1*y3 + m1*mpp2*mpp3*y1*y3 + m1*m2*mpp2*mpp3*y1*y3 + m3*mpp2*mpp3*y1*y3 + m2*m3*mpp2*mpp3*y1*y3 + m1*mp1*mpp2*mpp3*y1*y3 + m3*mp1*mpp2*mpp3*y1*y3 + m1*mp2*mpp2*mpp3*y1*y3 + m3*mp2*mpp2*mpp3*y1*y3 + mp3*mpp2*mpp3*y1*y3 + m2*mp3*mpp2*mpp3*y1*y3 + mp1*mp3*mpp2*mpp3*y1*y3 + mp2*mp3*mpp2*mpp3*y1*y3 + m1*mpp1*mpp2*mpp3*y1*y3 + m2*mpp1*mpp2*mpp3*y1*y3 + m3*mpp1*mpp2*mpp3*y1*y3 + mp1*mpp1*mpp2*mpp3*y1*y3 + mp2*mpp1*mpp2*mpp3*y1*y3 + mp3*mpp1*mpp2*mpp3*y1*y3 + m1*y2*y3 + m1*mp2*y2*y3 + m1*m2*mp2*y2*y3 + m1*m2*mp1*mp2*y2*y3 + m1*m3*mp1*mp2*y2*y3 + m1*mp2*mp3*y2*y3 + m1*m2*mp2*mp3*y2*y3 + mpp1*y2*y3 + m1*m2*mp2*mpp1*y2*y3 + m3*mp2*mpp1*y2*y3 + m1*m3*mp2*mpp1*y2*y3 + m2*mp1*mp2*mpp1*y2*y3 + m3*mp1*mp2*mpp1*y2*y3 + m2*mp2*mp3*mpp1*y2*y3 + m1*m2*mpp2*y2*y3 + m1*mp1*mpp2*y2*y3 + m1*m2*mp1*mpp2*y2*y3 + m1*m3*mp1*mpp2*y2*y3 + m1*mp2*mpp2*y2*y3 + m1*mp1*mp2*mpp2*y2*y3 + m1*m2*mp3*mpp2*y2*y3 + m1*mp2*mp3*mpp2*y2*y3 + m1*mpp1*mpp2*y2*y3 + m1*m2*mpp1*mpp2*y2*y3 + m3*mpp1*mpp2*y2*y3 + m1*m3*mpp1*mpp2*y2*y3 + mp1*mpp1*mpp2*y2*y3 + m2*mp1*mpp1*mpp2*y2*y3 + m3*mp1*mpp1*mpp2*y2*y3 + m1*mp2*mpp1*mpp2*y2*y3 + mp1*mp2*mpp1*mpp2*y2*y3 + mp3*mpp1*mpp2*y2*y3 + m2*mp3*mpp1*mpp2*y2*y3 + mp2*mp3*mpp1*mpp2*y2*y3 + m1*mp2*mpp3*y2*y3 + m1*m2*mp2*mpp3*y2*y3 + m1*mp1*mp2*mpp3*y2*y3 + mp2*mpp1*mpp3*y2*y3 + m1*mp2*mpp1*mpp3*y2*y3 + m2*mp2*mpp1*mpp3*y2*y3 + mp1*mp2*mpp1*mpp3*y2*y3 + m1*m2*mpp2*mpp3*y2*y3 + m1*mp1*mpp2*mpp3*y2*y3 + m1*mp2*mpp2*mpp3*y2*y3 + m1*mpp1*mpp2*mpp3*y2*y3 + m2*mpp1*mpp2*mpp3*y2*y3 + mp1*mpp1*mpp2*mpp3*y2*y3 + mp2*mpp1*mpp2*mpp3*y2*y3 + m1*m2*m3*z1 + m1*m3*mp2*z1 + m2*m3*mp2*z1 + m1*m2*m3*mp2*z1 + m1*m3*mp1*mp2*z1 + m2*m3*mp1*mp2*z1 + m1*m2*m3*mp3*z1 + m1*mp2*mp3*z1 + m2*mp2*mp3*z1 + m1*m3*mp2*mp3*z1 + m2*m3*mp2*mp3*z1 + m1*m2*mp3*mpp1*z1 + m1*mp2*mp3*mpp1*z1 + m2*mp2*mp3*mpp1*z1 + m1*m3*mp1*mpp2*z1 + m1*m2*mp3*mpp2*z1 + m1*mp2*mp3*mpp2*z1 + m2*mp2*mp3*mpp2*z1 + m1*m2*m3*mpp3*z1 + m1*mp2*mpp3*z1 + m2*mp2*mpp3*z1 + m1*m2*mp2*mpp3*z1 + m1*m3*mp2*mpp3*z1 + m2*m3*mp2*mpp3*z1 + m1*mp1*mp2*mpp3*z1 + m2*mp1*mp2*mpp3*z1 + m1*m2*mp3*mpp3*z1 + m1*mp2*mp3*mpp3*z1 + m2*mp2*mp3*mpp3*z1 + m1*m2*mpp1*mpp3*z1 + m1*mp2*mpp1*mpp3*z1 + m2*mp2*mpp1*mpp3*z1 + m1*m2*mpp2*mpp3*z1 + m1*mp1*mpp2*mpp3*z1 + m1*mp2*mpp2*mpp3*z1 + m2*mp2*mpp2*mpp3*z1 + m2*m3*x1*z1 + m2*m3*mp1*x1*z1 + m2*m3*mp2*x1*z1 + m1*m2*mp3*x1*z1 + m2*m3*mp3*x1*z1 + m2*m3*mpp1*x1*z1 + m2*mp3*mpp1*x1*z1 + m2*m3*mpp2*x1*z1 + m3*mp1*mpp2*x1*z1 + m3*mp2*mpp2*x1*z1 + m1*mp3*mpp2*x1*z1 + m3*mp3*mpp2*x1*z1 + m3*mpp1*mpp2*x1*z1 + mp3*mpp1*mpp2*x1*z1 + m1*m2*mpp3*x1*z1 + m2*m3*mpp3*x1*z1 + m2*mp1*mpp3*x1*z1 + m2*mp2*mpp3*x1*z1 + m2*mp3*mpp3*x1*z1 + mpp2*mpp3*x1*z1 + m1*mpp2*mpp3*x1*z1 + m2*mpp2*mpp3*x1*z1 + m3*mpp2*mpp3*x1*z1 + mp1*mpp2*mpp3*x1*z1 + mp2*mpp2*mpp3*x1*z1 + mp3*mpp2*mpp3*x1*z1 + m3*x2*z1 + m1*m3*x2*z1 + m2*m3*x2*z1 + m3*mp1*x2*z1 + m3*mp2*x2*z1 + m2*m3*mp2*x2*z1 + m1*mp3*x2*z1 + m2*mp3*x2*z1 + m1*m2*mp3*x2*z1 + m3*mp3*x2*z1 + m2*m3*mp3*x2*z1 + mp3*mpp1*x2*z1 + m2*mp3*mpp1*x2*z1 + m3*mpp2*x2*z1 + m2*m3*mpp2*x2*z1 + m3*mp2*mpp2*x2*z1 + mp3*mpp2*x2*z1 + m1*mp3*mpp2*x2*z1 + m3*mp3*mpp2*x2*z1 + mp3*mpp1*mpp2*x2*z1 + m2*mpp3*x2*z1 + m1*m2*mpp3*x2*z1 + m3*mpp3*x2*z1 + m2*m3*mpp3*x2*z1 + mp1*mpp3*x2*z1 + mp2*mpp3*x2*z1 + m2*mp2*mpp3*x2*z1 + mp3*mpp3*x2*z1 + m2*mp3*mpp3*x2*z1 + mpp1*mpp3*x2*z1 + m2*mpp1*mpp3*x2*z1 + mpp2*mpp3*x2*z1 + m1*mpp2*mpp3*x2*z1 + m2*mpp2*mpp3*x2*z1 + m3*mpp2*mpp3*x2*z1 + mp2*mpp2*mpp3*x2*z1 + mp3*mpp2*mpp3*x2*z1 + mpp1*mpp2*mpp3*x2*z1 + m1*m2*mp2*x3*z1 + m1*m3*mp2*x3*z1 + m1*mp1*mp2*x3*z1 + m2*mp1*mp2*x3*z1 + m3*mp1*mp2*x3*z1 + m1*m2*mp3*x3*z1 + m2*m3*mp3*x3*z1 + m1*mp2*mp3*x3*z1 + m2*mp2*mp3*x3*z1 + m3*mp2*mp3*x3*z1 + mp2*mpp1*x3*z1 + m1*mp2*mpp1*x3*z1 + mp1*mp2*mpp1*x3*z1 + m2*mp3*mpp1*x3*z1 + mp2*mp3*mpp1*x3*z1 + m1*mpp2*x3*z1 + m1*m2*mpp2*x3*z1 + m1*m3*mpp2*x3*z1 + mp1*mpp2*x3*z1 + m1*mp1*mpp2*x3*z1 + m2*mp1*mpp2*x3*z1 + m3*mp1*mpp2*x3*z1 + m1*mp2*mpp2*x3*z1 + mp1*mp2*mpp2*x3*z1 + mp3*mpp2*x3*z1 + m2*mp3*mpp2*x3*z1 + mp2*mp3*mpp2*x3*z1 + mpp1*mpp2*x3*z1 + m1*mpp1*mpp2*x3*z1 + mp1*mpp1*mpp2*x3*z1 + m2*mpp3*x3*z1 + m1*m2*mpp3*x3*z1 + m2*m3*mpp3*x3*z1 + mp2*mpp3*x3*z1 + m2*mp2*mpp3*x3*z1 + m3*mp2*mpp3*x3*z1 + mp1*mp2*mpp3*x3*z1 + m2*mp3*mpp3*x3*z1 + mp2*mp3*mpp3*x3*z1 + m2*mpp1*mpp3*x3*z1 + mp2*mpp1*mpp3*x3*z1 + mpp2*mpp3*x3*z1 + m1*mpp2*mpp3*x3*z1 + m2*mpp2*mpp3*x3*z1 + mp1*mpp2*mpp3*x3*z1 + mp2*mpp2*mpp3*x3*z1 + m2*m3*mp1*y1*z1 + m2*m3*mp2*y1*z1 + m1*m2*mp3*y1*z1 + m2*m3*mp3*y1*z1 + m2*m3*mpp1*y1*z1 + m2*mp3*mpp1*y1*z1 + m3*mpp2*y1*z1 + m2*m3*mpp2*y1*z1 + m3*mp1*mpp2*y1*z1 + m3*mp2*mpp2*y1*z1 + m1*mp3*mpp2*y1*z1 + m3*mp3*mpp2*y1*z1 + m3*mpp1*mpp2*y1*z1 + mp3*mpp1*mpp2*y1*z1 + m2*mpp3*y1*z1 + m1*m2*mpp3*y1*z1 + m2*m3*mpp3*y1*z1 + m2*mp1*mpp3*y1*z1 + m2*mp2*mpp3*y1*z1 + m2*mp3*mpp3*y1*z1 + m1*mpp2*mpp3*y1*z1 + m2*mpp2*mpp3*y1*z1 + m3*mpp2*mpp3*y1*z1 + mp1*mpp2*mpp3*y1*z1 + mp2*mpp2*mpp3*y1*z1 + mp3*mpp2*mpp3*y1*z1 + m2*m3*mp2*y2*z1 + m1*m2*mp3*y2*z1 + m2*m3*mp3*y2*z1 + m2*mp3*mpp1*y2*z1 + m3*mpp2*y2*z1 + m2*m3*mpp2*y2*z1 + m3*mp2*mpp2*y2*z1 + m1*mp3*mpp2*y2*z1 + m3*mp3*mpp2*y2*z1 + mp3*mpp1*mpp2*y2*z1 + m2*mpp3*y2*z1 + m1*m2*mpp3*y2*z1 + m2*m3*mpp3*y2*z1 + m2*mp2*mpp3*y2*z1 + m2*mp3*mpp3*y2*z1 + m2*mpp1*mpp3*y2*z1 + m1*mpp2*mpp3*y2*z1 + m2*mpp2*mpp3*y2*z1 + m3*mpp2*mpp3*y2*z1 + mp2*mpp2*mpp3*y2*z1 + mp3*mpp2*mpp3*y2*z1 + mpp1*mpp2*mpp3*y2*z1 + m1*m2*mp2*y3*z1 + m1*m3*mp2*y3*z1 + m1*mp1*mp2*y3*z1 + m2*mp1*mp2*y3*z1 + m3*mp1*mp2*y3*z1 + m1*m2*mp3*y3*z1 + m2*m3*mp3*y3*z1 + m1*mp2*mp3*y3*z1 + m2*mp2*mp3*y3*z1 + m3*mp2*mp3*y3*z1 + mp2*mpp1*y3*z1 + m1*mp2*mpp1*y3*z1 + mp1*mp2*mpp1*y3*z1 + m2*mp3*mpp1*y3*z1 + mp2*mp3*mpp1*y3*z1 + m1*mpp2*y3*z1 + m1*m2*mpp2*y3*z1 + m1*m3*mpp2*y3*z1 + mp1*mpp2*y3*z1 + m1*mp1*mpp2*y3*z1 + m2*mp1*mpp2*y3*z1 + m3*mp1*mpp2*y3*z1 + m1*mp2*mpp2*y3*z1 + mp1*mp2*mpp2*y3*z1 + mp3*mpp2*y3*z1 + m2*mp3*mpp2*y3*z1 + mp2*mp3*mpp2*y3*z1 + mpp1*mpp2*y3*z1 + m1*mpp1*mpp2*y3*z1 + mp1*mpp1*mpp2*y3*z1 + m2*mpp3*y3*z1 + m1*m2*mpp3*y3*z1 + m2*m3*mpp3*y3*z1 + mp2*mpp3*y3*z1 + m2*mp2*mpp3*y3*z1 + m3*mp2*mpp3*y3*z1 + mp1*mp2*mpp3*y3*z1 + m2*mp3*mpp3*y3*z1 + mp2*mp3*mpp3*y3*z1 + m2*mpp1*mpp3*y3*z1 + mp2*mpp1*mpp3*y3*z1 + mpp2*mpp3*y3*z1 + m1*mpp2*mpp3*y3*z1 + m2*mpp2*mpp3*y3*z1 + mp1*mpp2*mpp3*y3*z1 + mp2*mpp2*mpp3*y3*z1 + m1*m3*z2 + m1*m3*mp2*z2 + m1*m2*m3*mp2*z2 + m1*m3*mp1*mp2*z2 + m2*m3*mp1*mp2*z2 + m1*mp3*z2 + m1*m2*m3*mp3*z2 + m1*m3*mp2*mp3*z2 + m1*m2*mp3*mpp1*z2 + m1*mp2*mp3*mpp1*z2 + m2*mp2*mp3*mpp1*z2 + m1*m3*mpp2*z2 + m1*m3*mp1*mpp2*z2 + m1*mp3*mpp2*z2 + m1*m2*mp3*mpp2*z2 + m1*mp2*mp3*mpp2*z2 + m1*mpp3*z2 + m1*m2*mpp3*z2 + m1*m3*mpp3*z2 + m1*m2*m3*mpp3*z2 + m1*m2*mp2*mpp3*z2 + m1*m3*mp2*mpp3*z2 + m1*mp1*mp2*mpp3*z2 + m2*mp1*mp2*mpp3*z2 + m1*mp3*mpp3*z2 + m1*m2*mp3*mpp3*z2 + m1*mp2*mp3*mpp3*z2 + m1*m2*mpp1*mpp3*z2 + m1*mp2*mpp1*mpp3*z2 + m2*mp2*mpp1*mpp3*z2 + m1*m2*mpp2*mpp3*z2 + m1*mp1*mpp2*mpp3*z2 + m1*mp2*mpp2*mpp3*z2 + m2*m3*x1*z2 + m2*m3*mp1*x1*z2 + m2*m3*mp2*x1*z2 + m1*m2*mp3*x1*z2 + m2*m3*mp3*x1*z2 + m2*m3*mpp1*x1*z2 + m2*mp3*mpp1*x1*z2 + m2*m3*mpp2*x1*z2 + m3*mp1*mpp2*x1*z2 + m3*mp2*mpp2*x1*z2 + m1*mp3*mpp2*x1*z2 + m3*mp3*mpp2*x1*z2 + m3*mpp1*mpp2*x1*z2 + mp3*mpp1*mpp2*x1*z2 + m1*m2*mpp3*x1*z2 + m2*m3*mpp3*x1*z2 + m2*mp1*mpp3*x1*z2 + m2*mp2*mpp3*x1*z2 + m2*mp3*mpp3*x1*z2 + mpp2*mpp3*x1*z2 + m1*mpp2*mpp3*x1*z2 + m2*mpp2*mpp3*x1*z2 + m3*mpp2*mpp3*x1*z2 + mp1*mpp2*mpp3*x1*z2 + mp2*mpp2*mpp3*x1*z2 + mp3*mpp2*mpp3*x1*z2 + m1*m3*x2*z2 + m3*mp1*x2*z2 + m1*m3*mp1*x2*z2 + m1*m2*mp3*x2*z2 + m3*mpp1*x2*z2 + m1*m3*mpp1*x2*z2 + m3*mp1*mpp1*x2*z2 + mp3*mpp1*x2*z2 + m2*mp3*mpp1*x2*z2 + m1*mp3*mpp2*x2*z2 + mp3*mpp1*mpp2*x2*z2 + m1*mpp3*x2*z2 + m1*m2*mpp3*x2*z2 + mp1*mpp3*x2*z2 + m1*mp1*mpp3*x2*z2 + m1*mpp1*mpp3*x2*z2 + m2*mpp1*mpp3*x2*z2 + mp1*mpp1*mpp3*x2*z2 + m1*mpp2*mpp3*x2*z2 + mpp1*mpp2*mpp3*x2*z2 + mp1*x3*z2 + m1*m2*mp1*x3*z2 + m1*m3*mp1*x3*z2 + m1*m2*mp2*x3*z2 + m1*m3*mp2*x3*z2 + m1*mp1*mp2*x3*z2 + m2*mp1*mp2*x3*z2 + m3*mp1*mp2*x3*z2 + m1*mp3*x3*z2 + m1*m2*mp3*x3*z2 + m1*mp2*mp3*x3*z2 + mpp1*x3*z2 + m2*mpp1*x3*z2 + m1*m2*mpp1*x3*z2 + m3*mpp1*x3*z2 + m1*m3*mpp1*x3*z2 + m2*mp1*mpp1*x3*z2 + m3*mp1*mpp1*x3*z2 + mp2*mpp1*x3*z2 + m1*mp2*mpp1*x3*z2 + mp1*mp2*mpp1*x3*z2 + m2*mp3*mpp1*x3*z2 + mp2*mp3*mpp1*x3*z2 + m1*mpp2*x3*z2 + m1*m2*mpp2*x3*z2 + m1*m3*mpp2*x3*z2 + mp1*mpp2*x3*z2 + m2*mp1*mpp2*x3*z2 + m3*mp1*mpp2*x3*z2 + m1*mp2*mpp2*x3*z2 + mp1*mp2*mpp2*x3*z2 + m1*mpp3*x3*z2 + m1*m2*mpp3*x3*z2 + m1*mp1*mpp3*x3*z2 + mp1*mp2*mpp3*x3*z2 + mpp1*mpp3*x3*z2 + m1*mpp1*mpp3*x3*z2 + m2*mpp1*mpp3*x3*z2 + mp1*mpp1*mpp3*x3*z2 + mp2*mpp1*mpp3*x3*z2 + m1*mpp2*mpp3*x3*z2 + mp1*mpp2*mpp3*x3*z2 + m2*m3*mp1*y1*z2 + m2*m3*mp2*y1*z2 + m1*m2*mp3*y1*z2 + m2*m3*mp3*y1*z2 + m2*m3*mpp1*y1*z2 + m2*mp3*mpp1*y1*z2 + m3*mpp2*y1*z2 + m2*m3*mpp2*y1*z2 + m3*mp1*mpp2*y1*z2 + m3*mp2*mpp2*y1*z2 + m1*mp3*mpp2*y1*z2 + m3*mp3*mpp2*y1*z2 + m3*mpp1*mpp2*y1*z2 + mp3*mpp1*mpp2*y1*z2 + m2*mpp3*y1*z2 + m1*m2*mpp3*y1*z2 + m2*m3*mpp3*y1*z2 + m2*mp1*mpp3*y1*z2 + m2*mp2*mpp3*y1*z2 + m2*mp3*mpp3*y1*z2 + m1*mpp2*mpp3*y1*z2 + m2*mpp2*mpp3*y1*z2 + m3*mpp2*mpp3*y1*z2 + mp1*mpp2*mpp3*y1*z2 + mp2*mpp2*mpp3*y1*z2 + mp3*mpp2*mpp3*y1*z2 + m1*m3*mp1*y2*z2 + m1*mp3*y2*z2 + m1*m2*mp3*y2*z2 + m3*mpp1*y2*z2 + m1*m3*mpp1*y2*z2 + m3*mp1*mpp1*y2*z2 + m2*mp3*mpp1*y2*z2 + m1*mp3*mpp2*y2*z2 + mp3*mpp1*mpp2*y2*z2 + m1*mpp3*y2*z2 + m1*m2*mpp3*y2*z2 + m1*mp1*mpp3*y2*z2 + mpp1*mpp3*y2*z2 + m1*mpp1*mpp3*y2*z2 + m2*mpp1*mpp3*y2*z2 + mp1*mpp1*mpp3*y2*z2 + m1*mpp2*mpp3*y2*z2 + mpp1*mpp2*mpp3*y2*z2 + m1*y3*z2 + mp1*y3*z2 + m1*m2*mp1*y3*z2 + m1*m3*mp1*y3*z2 + m1*m2*mp2*y3*z2 + m1*m3*mp2*y3*z2 + m1*mp1*mp2*y3*z2 + m2*mp1*mp2*y3*z2 + m3*mp1*mp2*y3*z2 + m1*mp3*y3*z2 + m1*m2*mp3*y3*z2 + m1*mp2*mp3*y3*z2 + mpp1*y3*z2 + m2*mpp1*y3*z2 + m1*m2*mpp1*y3*z2 + m3*mpp1*y3*z2 + m1*m3*mpp1*y3*z2 + m2*mp1*mpp1*y3*z2 + m3*mp1*mpp1*y3*z2 + mp2*mpp1*y3*z2 + m1*mp2*mpp1*y3*z2 + mp1*mp2*mpp1*y3*z2 + m2*mp3*mpp1*y3*z2 + mp2*mp3*mpp1*y3*z2 + m1*mpp2*y3*z2 + m1*m2*mpp2*y3*z2 + m1*m3*mpp2*y3*z2 + mp1*mpp2*y3*z2 + m2*mp1*mpp2*y3*z2 + m3*mp1*mpp2*y3*z2 + m1*mp2*mpp2*y3*z2 + mp1*mp2*mpp2*y3*z2 + m1*mpp3*y3*z2 + m1*m2*mpp3*y3*z2 + m1*mp1*mpp3*y3*z2 + mp1*mp2*mpp3*y3*z2 + mpp1*mpp3*y3*z2 + m1*mpp1*mpp3*y3*z2 + m2*mpp1*mpp3*y3*z2 + mp1*mpp1*mpp3*y3*z2 + mp2*mpp1*mpp3*y3*z2 + m1*mpp2*mpp3*y3*z2 + mp1*mpp2*mpp3*y3*z2 + m1*m2*z3 + m1*m2*mp1*z3 + m1*m3*mp2*z3 + m1*m2*m3*mp2*z3 + m1*mp1*mp2*z3 + m2*mp1*mp2*z3 + m1*m3*mp1*mp2*z3 + m2*m3*mp1*mp2*z3 + m1*m2*m3*mp3*z3 + m1*m3*mp2*mp3*z3 + m1*m2*mp2*mpp1*z3 + m1*mp1*mp2*mpp1*z3 + m2*mp1*mp2*mpp1*z3 + m1*m2*mp3*mpp1*z3 + m1*mp2*mp3*mpp1*z3 + m2*mp2*mp3*mpp1*z3 + m1*m2*mpp2*z3 + m1*m3*mpp2*z3 + m1*mp1*mpp2*z3 + m1*m2*mp1*mpp2*z3 + m1*m3*mp1*mpp2*z3 + m1*mp2*mpp2*z3 + m1*m2*mp2*mpp2*z3 + m1*mp1*mp2*mpp2*z3 + m2*mp1*mp2*mpp2*z3 + m1*mp3*mpp2*z3 + m1*m2*mp3*mpp2*z3 + m1*mp2*mp3*mpp2*z3 + m1*mp1*mpp1*mpp2*z3 + m1*m2*mpp3*z3 + m1*m2*m3*mpp3*z3 + m1*m2*mp2*mpp3*z3 + m1*m3*mp2*mpp3*z3 + m1*mp1*mp2*mpp3*z3 + m2*mp1*mp2*mpp3*z3 + m1*m2*mp3*mpp3*z3 + m1*mp2*mp3*mpp3*z3 + m1*m2*mpp1*mpp3*z3 + m1*mp2*mpp1*mpp3*z3 + m2*mp2*mpp1*mpp3*z3 + m1*m2*mpp2*mpp3*z3 + m1*mp1*mpp2*mpp3*z3 + m1*mp2*mpp2*mpp3*z3 + m1*m2*x1*z3 + m2*m3*x1*z3 + m1*m2*mp1*x1*z3 + m2*m3*mp1*x1*z3 + m1*m2*mp2*x1*z3 + m2*m3*mp2*x1*z3 + m1*m2*mp3*x1*z3 + m2*m3*mp3*x1*z3 + m1*m2*mpp1*x1*z3 + m2*m3*mpp1*x1*z3 + m2*mp1*mpp1*x1*z3 + m2*mp2*mpp1*x1*z3 + m2*mp3*mpp1*x1*z3 + m1*m2*mpp2*x1*z3 + m2*m3*mpp2*x1*z3 + m1*mp1*mpp2*x1*z3 + m3*mp1*mpp2*x1*z3 + m1*mp2*mpp2*x1*z3 + m3*mp2*mpp2*x1*z3 + m1*mp3*mpp2*x1*z3 + m3*mp3*mpp2*x1*z3 + mpp1*mpp2*x1*z3 + m1*mpp1*mpp2*x1*z3 + m2*mpp1*mpp2*x1*z3 + m3*mpp1*mpp2*x1*z3 + mp1*mpp1*mpp2*x1*z3 + mp2*mpp1*mpp2*x1*z3 + mp3*mpp1*mpp2*x1*z3 + m1*m2*mpp3*x1*z3 + m2*m3*mpp3*x1*z3 + m2*mp1*mpp3*x1*z3 + m2*mp2*mpp3*x1*z3 + m2*mp3*mpp3*x1*z3 + mpp2*mpp3*x1*z3 + m1*mpp2*mpp3*x1*z3 + m2*mpp2*mpp3*x1*z3 + m3*mpp2*mpp3*x1*z3 + mp1*mpp2*mpp3*x1*z3 + mp2*mpp2*mpp3*x1*z3 + mp3*mpp2*mpp3*x1*z3 + m1*m3*x2*z3 + m1*mp1*x2*z3 + m2*mp1*x2*z3 + m1*m2*mp1*x2*z3 + m3*mp1*x2*z3 + m1*m3*mp1*x2*z3 + m1*m2*mp2*x2*z3 + m1*m2*mp3*x2*z3 + m1*mpp1*x2*z3 + m1*m2*mpp1*x2*z3 + m3*mpp1*x2*z3 + m1*m3*mpp1*x2*z3 + mp1*mpp1*x2*z3 + m2*mp1*mpp1*x2*z3 + m3*mp1*mpp1*x2*z3 + mp2*mpp1*x2*z3 + m2*mp2*mpp1*x2*z3 + mp3*mpp1*x2*z3 + m2*mp3*mpp1*x2*z3 + m1*mpp2*x2*z3 + m1*m2*mpp2*x2*z3 + mp1*mpp2*x2*z3 + m1*mp1*mpp2*x2*z3 + m1*mp2*mpp2*x2*z3 + m1*mp3*mpp2*x2*z3 + m1*mpp1*mpp2*x2*z3 + m2*mpp1*mpp2*x2*z3 + mp1*mpp1*mpp2*x2*z3 + mp2*mpp1*mpp2*x2*z3 + mp3*mpp1*mpp2*x2*z3 + m1*mpp3*x2*z3 + m1*m2*mpp3*x2*z3 + mp1*mpp3*x2*z3 + m1*mp1*mpp3*x2*z3 + m1*mpp1*mpp3*x2*z3 + m2*mpp1*mpp3*x2*z3 + mp1*mpp1*mpp3*x2*z3 + m1*mpp2*mpp3*x2*z3 + mpp1*mpp2*mpp3*x2*z3 + m1*m2*mp1*x3*z3 + m2*m3*mp1*x3*z3 + m1*m2*mp2*x3*z3 + m1*mp1*mp2*x3*z3 + m2*mp1*mp2*x3*z3 + m3*mp1*mp2*x3*z3 + m1*m2*mp3*x3*z3 + m1*mp2*mp3*x3*z3 + m2*mpp1*x3*z3 + m1*m2*mpp1*x3*z3 + m2*m3*mpp1*x3*z3 + m2*mp1*mpp1*x3*z3 + mp2*mpp1*x3*z3 + m1*mp2*mpp1*x3*z3 + m3*mp2*mpp1*x3*z3 + mp1*mp2*mpp1*x3*z3 + m2*mp3*mpp1*x3*z3 + mp2*mp3*mpp1*x3*z3 + m1*mpp2*x3*z3 + m1*m2*mpp2*x3*z3 + mp1*mpp2*x3*z3 + m2*mp1*mpp2*x3*z3 + m1*mp2*mpp2*x3*z3 + mp1*mp2*mpp2*x3*z3 + m1*m2*mpp3*x3*z3 + m2*mp1*mpp3*x3*z3 + m1*mp2*mpp3*x3*z3 + mp1*mp2*mpp3*x3*z3 + m1*m2*mp1*y1*z3 + m2*m3*mp1*y1*z3 + m1*m2*mp2*y1*z3 + m2*m3*mp2*y1*z3 + m1*m2*mp3*y1*z3 + m2*m3*mp3*y1*z3 + m2*mpp1*y1*z3 + m1*m2*mpp1*y1*z3 + m2*m3*mpp1*y1*z3 + m2*mp1*mpp1*y1*z3 + m2*mp2*mpp1*y1*z3 + m2*mp3*mpp1*y1*z3 + m1*mpp2*y1*z3 + m1*m2*mpp2*y1*z3 + m3*mpp2*y1*z3 + m2*m3*mpp2*y1*z3 + m1*mp1*mpp2*y1*z3 + m3*mp1*mpp2*y1*z3 + m1*mp2*mpp2*y1*z3 + m3*mp2*mpp2*y1*z3 + m1*mp3*mpp2*y1*z3 + m3*mp3*mpp2*y1*z3 + m1*mpp1*mpp2*y1*z3 + m2*mpp1*mpp2*y1*z3 + m3*mpp1*mpp2*y1*z3 + mp1*mpp1*mpp2*y1*z3 + mp2*mpp1*mpp2*y1*z3 + mp3*mpp1*mpp2*y1*z3 + m2*mpp3*y1*z3 + m1*m2*mpp3*y1*z3 + m2*m3*mpp3*y1*z3 + m2*mp1*mpp3*y1*z3 + m2*mp2*mpp3*y1*z3 + m2*mp3*mpp3*y1*z3 + m1*mpp2*mpp3*y1*z3 + m2*mpp2*mpp3*y1*z3 + m3*mpp2*mpp3*y1*z3 + mp1*mpp2*mpp3*y1*z3 + mp2*mpp2*mpp3*y1*z3 + mp3*mpp2*mpp3*y1*z3 + m1*m2*mp1*y2*z3 + m1*m3*mp1*y2*z3 + m1*mp2*y2*z3 + m1*m2*mp2*y2*z3 + m1*mp3*y2*z3 + m1*m2*mp3*y2*z3 + m2*mpp1*y2*z3 + m1*m2*mpp1*y2*z3 + m3*mpp1*y2*z3 + m1*m3*mpp1*y2*z3 + m2*mp1*mpp1*y2*z3 + m3*mp1*mpp1*y2*z3 + m2*mp2*mpp1*y2*z3 + m2*mp3*mpp1*y2*z3 + m1*m2*mpp2*y2*z3 + m1*mp1*mpp2*y2*z3 + m1*mp2*mpp2*y2*z3 + m1*mp3*mpp2*y2*z3 + m1*mpp1*mpp2*y2*z3 + m2*mpp1*mpp2*y2*z3 + mp1*mpp1*mpp2*y2*z3 + mp2*mpp1*mpp2*y2*z3 + mp3*mpp1*mpp2*y2*z3 + m1*mpp3*y2*z3 + m1*m2*mpp3*y2*z3 + m1*mp1*mpp3*y2*z3 + mpp1*mpp3*y2*z3 + m1*mpp1*mpp3*y2*z3 + m2*mpp1*mpp3*y2*z3 + mp1*mpp1*mpp3*y2*z3 + m1*mpp2*mpp3*y2*z3 + mpp1*mpp2*mpp3*y2*z3 + m1*m2*mp1*y3*z3 + m2*m3*mp1*y3*z3 + m1*m2*mp2*y3*z3 + m1*mp1*mp2*y3*z3 + m2*mp1*mp2*y3*z3 + m3*mp1*mp2*y3*z3 + m1*m2*mp3*y3*z3 + m1*mp2*mp3*y3*z3 + m2*mpp1*y3*z3 + m1*m2*mpp1*y3*z3 + m2*m3*mpp1*y3*z3 + m2*mp1*mpp1*y3*z3 + mp2*mpp1*y3*z3 + m1*mp2*mpp1*y3*z3 + m3*mp2*mpp1*y3*z3 + mp1*mp2*mpp1*y3*z3 + m2*mp3*mpp1*y3*z3 + mp2*mp3*mpp1*y3*z3 + m1*mpp2*y3*z3 + m1*m2*mpp2*y3*z3 + mp1*mpp2*y3*z3 + m2*mp1*mpp2*y3*z3 + m1*mp2*mpp2*y3*z3 + mp1*mp2*mpp2*y3*z3 + m1*m2*mpp3*y3*z3 + m2*mp1*mpp3*y3*z3 + m1*mp2*mpp3*y3*z3 + mp1*mp2*mpp3*y3*z3 + m1*z2*z3;
end;
#####################################################################
#####################################################################
#Space Group No. 65 (Cmmm)
#####################################################################
Am1in65:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in65:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in65:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyin65:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1;
end;
#####################################################################
Azin65:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return z1;
end;
#####################################################################
Bin65:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return x2*y1 + mp1*x2*y1 + mpp1*x2*y1 + mp1*x2*y2 + mpp1*x2*y2 + mp1*y1*y2 + mpp1*y1*y2;
end;
#####################################################################
#####################################################################
#Space Group No. 66 (Cccm)
#####################################################################
Am1in66:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in66:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in66:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyin66:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1;
end;
#####################################################################
B1in66:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return x2*y1 + mp1*x2*y1 + mpp1*x2*y1 + mp1*x2*y2 + mpp1*x2*y2 + mp1*y1*y2 + mpp1*y1*y2;
end;
#####################################################################
B2in66:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*x2 + mp1*x2 + m1*mp1*x2 + mpp1*x2 + m1*mpp1*x2 + mp1*mpp1*x2 + m1*mp1*y2 + m1*mpp1*y2 + mp1*mpp1*y2 + x2*z1 + y2*z1;
end;
#####################################################################
#####################################################################
#Space Group No. 67 (Cmme)
#####################################################################
Am1in67:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in67:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in67:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyin67:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1;
end;
#####################################################################
Azin67:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return z1;
end;
#####################################################################
#####################################################################
#Space Group No. 68 (Ccce)
#####################################################################
Am1in68:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in68:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in68:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyin68:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1;
end;
#####################################################################
CGAPin68:=function(g1,g2,g3)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2,x3,y3,z3,m3,mp3,mpp3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];x3:=g3[1];y3:=g3[2];z3:=g3[3];m3:=g3[4];mp3:=g3[5];mpp3:=g3[6];
return m1*m2*m3 + m1*m2*mp1*mp3 + m1*m2*mp2*mp3 + m1*m2*mp3*mpp1 + m1*mp2*mp3*mpp1 + m1*m3*mpp2 + m1*m2*m3*mpp2 + m1*mp3*mpp2 + m1*m2*mp3*mpp2 + m1*mp1*mp3*mpp2 + m2*mp1*mp3*mpp2 + m1*m2*mp1*mp3*mpp2 + m1*mp2*mp3*mpp2 + m1*m2*mp2*mp3*mpp2 + m2*m3*mpp1*mpp2 + m2*mp3*mpp1*mpp2 + m2*mp1*mp3*mpp1*mpp2 + m2*mp2*mp3*mpp1*mpp2 + m1*m2*mpp3 + m1*m2*mp1*mpp3 + m1*m2*mp2*mpp3 + m1*m2*mpp1*mpp3 + m1*mp2*mpp1*mpp3 + m1*mp1*mpp2*mpp3 + m2*mp1*mpp2*mpp3 + m1*m2*mp1*mpp2*mpp3 + m1*mp2*mpp2*mpp3 + m1*m2*mp2*mpp2*mpp3 + m2*mp1*mpp1*mpp2*mpp3 + m2*mp2*mpp1*mpp2*mpp3 + m2*m3*mp1*x1 + m3*mp1*mp2*x1 + m1*m2*mp1*mp3*x1 + m1*m2*mp2*mp3*x1 + m2*m3*mpp1*x1 + m1*m2*mp3*mpp1*x1 + m1*mp2*mp3*mpp1*x1 + m3*mpp2*x1 + m1*mp3*mpp2*x1 + m2*mp3*mpp2*x1 + m1*m2*mp3*mpp2*x1 + m1*mp1*mp3*mpp2*x1 + m2*mp1*mp3*mpp2*x1 + m1*mp2*mp3*mpp2*x1 + m2*mp2*mp3*mpp2*x1 + m3*mpp1*mpp2*x1 + m2*mp3*mpp1*mpp2*x1 + m2*mp1*mpp3*x1 + m1*m2*mp1*mpp3*x1 + m1*m2*mp2*mpp3*x1 + mp1*mp2*mpp3*x1 + m2*mpp1*mpp3*x1 + m1*m2*mpp1*mpp3*x1 + m1*mp2*mpp1*mpp3*x1 + mpp2*mpp3*x1 + m1*mpp2*mpp3*x1 + m2*mpp2*mpp3*x1 + m1*m2*mpp2*mpp3*x1 + m1*mp1*mpp2*mpp3*x1 + m2*mp1*mpp2*mpp3*x1 + m1*mp2*mpp2*mpp3*x1 + m2*mp2*mpp2*mpp3*x1 + mpp1*mpp2*mpp3*x1 + m2*mpp1*mpp2*mpp3*x1 + m1*m3*mp1*x2 + m3*mp1*mp2*x2 + mp1*mp3*x2 + m1*m2*mp2*mp3*x2 + m1*mp1*mp2*mp3*x2 + m2*mp1*mp2*mp3*x2 + m3*mpp1*x2 + m1*m3*mpp1*x2 + m3*mp1*mpp1*x2 + m1*m3*mp1*mpp1*x2 + m1*mp3*mpp1*x2 + m1*mp1*mp3*mpp1*x2 + mp2*mp3*mpp1*x2 + m2*mp2*mp3*mpp1*x2 + mp1*mp2*mp3*mpp1*x2 + m3*mp1*mpp2*x2 + m1*mp3*mpp2*x2 + m1*m2*mp3*mpp2*x2 + mp1*mp3*mpp2*x2 + m1*mp1*mp3*mpp2*x2 + m2*mp1*mp3*mpp2*x2 + m1*mp2*mp3*mpp2*x2 + mp1*mp2*mp3*mpp2*x2 + m2*mp3*mpp1*mpp2*x2 + mp1*mp3*mpp1*mpp2*x2 + mp2*mp3*mpp1*mpp2*x2 + mp1*mpp3*x2 + m1*mp1*mpp3*x2 + m1*m2*mp2*mpp3*x2 + mp1*mp2*mpp3*x2 + m1*mp1*mp2*mpp3*x2 + m2*mp1*mp2*mpp3*x2 + mpp1*mpp3*x2 + mp1*mpp1*mpp3*x2 + mp2*mpp1*mpp3*x2 + m2*mp2*mpp1*mpp3*x2 + mp1*mp2*mpp1*mpp3*x2 + m1*mpp2*mpp3*x2 + m1*m2*mpp2*mpp3*x2 + m1*mp1*mpp2*mpp3*x2 + m2*mp1*mpp2*mpp3*x2 + m1*mp2*mpp2*mpp3*x2 + mp1*mp2*mpp2*mpp3*x2 + m2*mpp1*mpp2*mpp3*x2 + mp1*mpp1*mpp2*mpp3*x2 + mp2*mpp1*mpp2*mpp3*x2 + m3*x1*x2 + m1*m3*x1*x2 + m3*mp1*x1*x2 + m1*m3*mp1*x1*x2 + mp3*x1*x2 + m1*mp3*x1*x2 + m1*mp1*mp3*x1*x2 + mp1*mp2*mp3*x1*x2 + m3*mpp1*x1*x2 + m1*m3*mpp1*x1*x2 + m3*mp1*mpp1*x1*x2 + m1*mp3*mpp1*x1*x2 + mp1*mp3*mpp1*x1*x2 + mp2*mp3*mpp1*x1*x2 + mp1*mp3*mpp2*x1*x2 + mp3*mpp1*mpp2*x1*x2 + mp1*mpp3*x1*x2 + mp1*mp2*mpp3*x1*x2 + mpp1*mpp3*x1*x2 + mp2*mpp1*mpp3*x1*x2 + mp1*mpp2*mpp3*x1*x2 + mpp1*mpp2*mpp3*x1*x2 + m1*m2*x3 + m1*m2*m3*x3 + m2*mp1*x3 + m1*m2*mp1*x3 + m2*m3*mp1*x3 + m1*m2*m3*mp1*x3 + m1*mp2*x3 + m1*m2*m3*mp2*x3 + m1*mp1*mp2*x3 + m3*mp1*mp2*x3 + m1*m2*mp1*mp3*x3 + m1*m2*mp2*mp3*x3 + mp1*mp2*mp3*x3 + m1*m2*mpp1*x3 + m2*m3*mpp1*x3 + m1*m2*m3*mpp1*x3 + m1*m2*mp1*mpp1*x3 + m1*mp2*mpp1*x3 + m2*mp2*mpp1*x3 + m1*m3*mp2*mpp1*x3 + mp1*mp2*mpp1*x3 + m1*mp1*mp2*mpp1*x3 + m1*m2*mp3*mpp1*x3 + m1*mp2*mp3*mpp1*x3 + m1*mpp2*x3 + m1*m2*m3*mpp2*x3 + mp1*mpp2*x3 + m2*mp1*mpp2*x3 + m1*m3*mp1*mpp2*x3 + m2*m3*mp1*mpp2*x3 + m1*m3*mp2*mpp2*x3 + m1*mp3*mpp2*x3 + m1*m2*mp3*mpp2*x3 + mp1*mp3*mpp2*x3 + m1*mp1*mp3*mpp2*x3 + m2*mp1*mp3*mpp2*x3 + m1*mp2*mp3*mpp2*x3 + m3*mpp1*mpp2*x3 + m2*m3*mpp1*mpp2*x3 + mp1*mpp1*mpp2*x3 + mp2*mpp1*mpp2*x3 + m2*mp3*mpp1*mpp2*x3 + m1*m2*mpp3*x3 + m2*mp1*mpp3*x3 + m2*mpp1*mpp3*x3 + m1*mpp2*mpp3*x3 + mp1*mpp2*mpp3*x3 + mpp1*mpp2*mpp3*x3 + m1*m2*x1*x3 + m2*m3*x1*x3 + m1*m2*mp1*x1*x3 + m2*m3*mp1*x1*x3 + m2*mp2*x1*x3 + m3*mp2*x1*x3 + m1*m3*mp2*x1*x3 + m2*m3*mp2*x1*x3 + mp1*mp2*x1*x3 + m1*mp1*mp2*x1*x3 + m2*mp3*x1*x3 + m2*mp1*mp3*x1*x3 + mp2*mp3*x1*x3 + m1*mp2*mp3*x1*x3 + m2*mp2*mp3*x1*x3 + m1*m2*mpp1*x1*x3 + m2*m3*mpp1*x1*x3 + m2*mp1*mpp1*x1*x3 + m1*mp2*mpp1*x1*x3 + m3*mp2*mpp1*x1*x3 + mp1*mp2*mpp1*x1*x3 + m2*mp3*mpp1*x1*x3 + mp2*mp3*mpp1*x1*x3 + mpp2*x1*x3 + m1*mpp2*x1*x3 + m2*mpp2*x1*x3 + m3*mpp2*x1*x3 + m1*m3*mpp2*x1*x3 + m2*m3*mpp2*x1*x3 + mp1*mpp2*x1*x3 + m3*mp1*mpp2*x1*x3 + mp2*mpp2*x1*x3 + m3*mp2*mpp2*x1*x3 + mp3*mpp2*x1*x3 + m1*mp3*mpp2*x1*x3 + m2*mp3*mpp2*x1*x3 + mp1*mp3*mpp2*x1*x3 + mp2*mp3*mpp2*x1*x3 + m1*x2*x3 + m1*m3*x2*x3 + mp1*x2*x3 + m1*mp1*x2*x3 + m2*mp1*x2*x3 + m3*mp1*x2*x3 + m1*m3*mp1*x2*x3 + m2*m3*mp1*x2*x3 + m1*mp2*x2*x3 + m1*m3*mp2*x2*x3 + mp1*mp2*x2*x3 + m3*mp1*mp2*x2*x3 + m1*mp3*x2*x3 + mp1*mp3*x2*x3 + m1*mp1*mp3*x2*x3 + m2*mp1*mp3*x2*x3 + m1*mp2*mp3*x2*x3 + mp1*mp2*mp3*x2*x3 + mpp1*x2*x3 + m1*mpp1*x2*x3 + m2*mpp1*x2*x3 + m3*mpp1*x2*x3 + m1*m3*mpp1*x2*x3 + m2*m3*mpp1*x2*x3 + mp1*mpp1*x2*x3 + m3*mp1*mpp1*x2*x3 + mp3*mpp1*x2*x3 + m1*mp3*mpp1*x2*x3 + m2*mp3*mpp1*x2*x3 + mp1*mp3*mpp1*x2*x3 + m1*mpp2*x2*x3 + m1*m3*mpp2*x2*x3 + m1*mp3*mpp2*x2*x3 + mpp1*mpp2*x2*x3 + m3*mpp1*mpp2*x2*x3 + mp3*mpp1*mpp2*x2*x3 + m2*m3*y1 + m2*m3*mp1*y1 + m3*mp1*mp2*y1 + m2*mp3*y1 + m1*m2*mp3*y1 + m2*mp1*mp3*y1 + m1*m2*mp1*mp3*y1 + m1*mp2*mp3*y1 + m2*mp2*mp3*y1 + m1*m2*mp2*mp3*y1 + m2*m3*mpp1*y1 + m2*mp3*mpp1*y1 + m1*m2*mp3*mpp1*y1 + mp2*mp3*mpp1*y1 + m1*mp2*mp3*mpp1*y1 + m1*mp3*mpp2*y1 + m2*mp3*mpp2*y1 + m1*m2*mp3*mpp2*y1 + mp1*mp3*mpp2*y1 + m1*mp1*mp3*mpp2*y1 + m2*mp1*mp3*mpp2*y1 + mp2*mp3*mpp2*y1 + m1*mp2*mp3*mpp2*y1 + m2*mp2*mp3*mpp2*y1 + m3*mpp1*mpp2*y1 + m2*mp3*mpp1*mpp2*y1 + m1*m2*mpp3*y1 + m1*m2*mp1*mpp3*y1 + m1*mp2*mpp3*y1 + m2*mp2*mpp3*y1 + m1*m2*mp2*mpp3*y1 + mp1*mp2*mpp3*y1 + m1*m2*mpp1*mpp3*y1 + mp2*mpp1*mpp3*y1 + m1*mp2*mpp1*mpp3*y1 + m1*mpp2*mpp3*y1 + m2*mpp2*mpp3*y1 + m1*m2*mpp2*mpp3*y1 + mp1*mpp2*mpp3*y1 + m1*mp1*mpp2*mpp3*y1 + m2*mp1*mpp2*mpp3*y1 + mp2*mpp2*mpp3*y1 + m1*mp2*mpp2*mpp3*y1 + m2*mp2*mpp2*mpp3*y1 + mpp1*mpp2*mpp3*y1 + m2*mpp1*mpp2*mpp3*y1 + mp2*mp3*x1*y1 + mp3*mpp2*x1*y1 + mp2*mpp3*x1*y1 + mpp2*mpp3*x1*y1 + m1*m3*x2*y1 + m1*m3*mp1*x2*y1 + mp3*x2*y1 + m1*mp3*x2*y1 + mp1*mp3*x2*y1 + m1*mp1*mp3*x2*y1 + mp2*mp3*x2*y1 + mp1*mp2*mp3*x2*y1 + m1*m3*mpp1*x2*y1 + m3*mp1*mpp1*x2*y1 + mp3*mpp1*x2*y1 + m1*mp3*mpp1*x2*y1 + mp1*mp3*mpp1*x2*y1 + mp2*mp3*mpp1*x2*y1 + mp3*mpp2*x2*y1 + mp1*mp3*mpp2*x2*y1 + mp3*mpp1*mpp2*x2*y1 + mpp3*x2*y1 + mp1*mpp3*x2*y1 + mp2*mpp3*x2*y1 + mp1*mp2*mpp3*x2*y1 + mpp1*mpp3*x2*y1 + mp2*mpp1*mpp3*x2*y1 + mpp2*mpp3*x2*y1 + mp1*mpp2*mpp3*x2*y1 + mpp1*mpp2*mpp3*x2*y1 + m2*x3*y1 + m1*m2*x3*y1 + m2*m3*x3*y1 + m2*mp1*x3*y1 + m1*m2*mp1*x3*y1 + m2*m3*mp1*x3*y1 + m2*mp2*x3*y1 + m1*m3*mp2*x3*y1 + m2*m3*mp2*x3*y1 + m1*mp1*mp2*x3*y1 + m2*mp3*x3*y1 + m2*mp1*mp3*x3*y1 + m1*mp2*mp3*x3*y1 + m2*mp2*mp3*x3*y1 + m2*mpp1*x3*y1 + m1*m2*mpp1*x3*y1 + m2*m3*mpp1*x3*y1 + m2*mp1*mpp1*x3*y1 + mp2*mpp1*x3*y1 + m1*mp2*mpp1*x3*y1 + m3*mp2*mpp1*x3*y1 + mp1*mp2*mpp1*x3*y1 + m2*mp3*mpp1*x3*y1 + mp2*mp3*mpp1*x3*y1 + m1*mpp2*x3*y1 + m2*mpp2*x3*y1 + m1*m3*mpp2*x3*y1 + m2*m3*mpp2*x3*y1 + mp1*mpp2*x3*y1 + m3*mp1*mpp2*x3*y1 + mp2*mpp2*x3*y1 + m3*mp2*mpp2*x3*y1 + m1*mp3*mpp2*x3*y1 + m2*mp3*mpp2*x3*y1 + mp1*mp3*mpp2*x3*y1 + mp2*mp3*mpp2*x3*y1 + m1*m3*y2 + m1*m3*mp1*y2 + m3*mp1*mp2*y2 + m1*mp3*y2 + m1*m2*mp3*y2 + m1*mp1*mp3*y2 + m2*mp1*mp3*y2 + m1*mp2*mp3*y2 + m1*m2*mp2*mp3*y2 + m1*mp1*mp2*mp3*y2 + m2*mp1*mp2*mp3*y2 + m1*m3*mpp1*y2 + m3*mp1*mpp1*y2 + m1*m3*mp1*mpp1*y2 + m1*mp3*mpp1*y2 + m2*mp3*mpp1*y2 + mp1*mp3*mpp1*y2 + m1*mp1*mp3*mpp1*y2 + m2*mp2*mp3*mpp1*y2 + mp1*mp2*mp3*mpp1*y2 + m3*mp1*mpp2*y2 + m1*mp3*mpp2*y2 + m1*m2*mp3*mpp2*y2 + m1*mp1*mp3*mpp2*y2 + m2*mp1*mp3*mpp2*y2 + m1*mp2*mp3*mpp2*y2 + mp1*mp2*mp3*mpp2*y2 + m2*mp3*mpp1*mpp2*y2 + mp1*mp3*mpp1*mpp2*y2 + mp2*mp3*mpp1*mpp2*y2 + m1*m2*mpp3*y2 + m2*mp1*mpp3*y2 + m1*mp2*mpp3*y2 + m1*m2*mp2*mpp3*y2 + mp1*mp2*mpp3*y2 + m1*mp1*mp2*mpp3*y2 + m2*mp1*mp2*mpp3*y2 + m2*mpp1*mpp3*y2 + m2*mp2*mpp1*mpp3*y2 + mp1*mp2*mpp1*mpp3*y2 + m1*mpp2*mpp3*y2 + m1*m2*mpp2*mpp3*y2 + mp1*mpp2*mpp3*y2 + m1*mp1*mpp2*mpp3*y2 + m2*mp1*mpp2*mpp3*y2 + m1*mp2*mpp2*mpp3*y2 + mp1*mp2*mpp2*mpp3*y2 + m2*mpp1*mpp2*mpp3*y2 + mp1*mpp1*mpp2*mpp3*y2 + mp2*mpp1*mpp2*mpp3*y2 + m3*x1*y2 + m1*m3*x1*y2 + m3*mp1*x1*y2 + m1*m3*mp1*x1*y2 + mp3*x1*y2 + m1*mp3*x1*y2 + mp1*mp3*x1*y2 + m1*mp1*mp3*x1*y2 + mp2*mp3*x1*y2 + mp1*mp2*mp3*x1*y2 + m3*mpp1*x1*y2 + m1*m3*mpp1*x1*y2 + m3*mp1*mpp1*x1*y2 + mp3*mpp1*x1*y2 + m1*mp3*mpp1*x1*y2 + mp1*mp3*mpp1*x1*y2 + mp2*mp3*mpp1*x1*y2 + mp3*mpp2*x1*y2 + mp1*mp3*mpp2*x1*y2 + mp3*mpp1*mpp2*x1*y2 + mp2*mpp3*x1*y2 + mp1*mp2*mpp3*x1*y2 + mp2*mpp1*mpp3*x1*y2 + mpp2*mpp3*x1*y2 + mp1*mpp2*mpp3*x1*y2 + mpp1*mpp2*mpp3*x1*y2 + m1*x3*y2 + m1*m3*x3*y2 + m1*mp1*x3*y2 + m2*mp1*x3*y2 + m1*m3*mp1*x3*y2 + m2*m3*mp1*x3*y2 + m1*mp2*x3*y2 + m1*m3*mp2*x3*y2 + mp1*mp2*x3*y2 + m3*mp1*mp2*x3*y2 + m1*mp3*x3*y2 + m1*mp1*mp3*x3*y2 + m2*mp1*mp3*x3*y2 + m1*mp2*mp3*x3*y2 + mp1*mp2*mp3*x3*y2 + m1*mpp1*x3*y2 + m2*mpp1*x3*y2 + m1*m3*mpp1*x3*y2 + m2*m3*mpp1*x3*y2 + mp1*mpp1*x3*y2 + m3*mp1*mpp1*x3*y2 + m1*mp3*mpp1*x3*y2 + m2*mp3*mpp1*x3*y2 + mp1*mp3*mpp1*x3*y2 + m1*mpp2*x3*y2 + m1*m3*mpp2*x3*y2 + m1*mp3*mpp2*x3*y2 + mpp1*mpp2*x3*y2 + m3*mpp1*mpp2*x3*y2 + mp3*mpp1*mpp2*x3*y2 + m1*m3*y1*y2 + m1*m3*mp1*y1*y2 + m1*mp3*y1*y2 + m1*mp1*mp3*y1*y2 + mp1*mp2*mp3*y1*y2 + m1*m3*mpp1*y1*y2 + m3*mp1*mpp1*y1*y2 + m1*mp3*mpp1*y1*y2 + mp1*mp3*mpp1*y1*y2 + mp2*mp3*mpp1*y1*y2 + mp1*mp3*mpp2*y1*y2 + mp3*mpp1*mpp2*y1*y2 + mp1*mp2*mpp3*y1*y2 + mp2*mpp1*mpp3*y1*y2 + mp1*mpp2*mpp3*y1*y2 + mpp1*mpp2*mpp3*y1*y2 + m1*m2*y3 + m1*m2*m3*y3 + m2*mp1*y3 + m1*m2*mp1*y3 + m2*m3*mp1*y3 + m1*m2*m3*mp1*y3 + m1*mp2*y3 + m1*m2*m3*mp2*y3 + m1*mp1*mp2*y3 + m3*mp1*mp2*y3 + m1*m2*mp1*mp3*y3 + m1*m2*mp2*mp3*y3 + mp1*mp2*mp3*y3 + m1*m2*mpp1*y3 + m2*m3*mpp1*y3 + m1*m2*m3*mpp1*y3 + m1*m2*mp1*mpp1*y3 + m1*mp2*mpp1*y3 + m2*mp2*mpp1*y3 + m1*m3*mp2*mpp1*y3 + mp1*mp2*mpp1*y3 + m1*mp1*mp2*mpp1*y3 + m1*m2*mp3*mpp1*y3 + m1*mp2*mp3*mpp1*y3 + m1*mpp2*y3 + m1*m2*m3*mpp2*y3 + mp1*mpp2*y3 + m2*mp1*mpp2*y3 + m1*m3*mp1*mpp2*y3 + m2*m3*mp1*mpp2*y3 + m1*m3*mp2*mpp2*y3 + m1*mp3*mpp2*y3 + m1*m2*mp3*mpp2*y3 + mp1*mp3*mpp2*y3 + m1*mp1*mp3*mpp2*y3 + m2*mp1*mp3*mpp2*y3 + m1*mp2*mp3*mpp2*y3 + m3*mpp1*mpp2*y3 + m2*m3*mpp1*mpp2*y3 + mp1*mpp1*mpp2*y3 + mp2*mpp1*mpp2*y3 + m2*mp3*mpp1*mpp2*y3 + m1*m2*mpp3*y3 + m2*mp1*mpp3*y3 + m2*mpp1*mpp3*y3 + m1*mpp2*mpp3*y3 + mp1*mpp2*mpp3*y3 + mpp1*mpp2*mpp3*y3 + m1*m2*x1*y3 + m2*m3*x1*y3 + m1*m2*mp1*x1*y3 + m2*m3*mp1*x1*y3 + m2*mp2*x1*y3 + m3*mp2*x1*y3 + m1*m3*mp2*x1*y3 + m2*m3*mp2*x1*y3 + mp1*mp2*x1*y3 + m1*mp1*mp2*x1*y3 + m2*mp3*x1*y3 + m2*mp1*mp3*x1*y3 + mp2*mp3*x1*y3 + m1*mp2*mp3*x1*y3 + m2*mp2*mp3*x1*y3 + m1*m2*mpp1*x1*y3 + m2*m3*mpp1*x1*y3 + m2*mp1*mpp1*x1*y3 + m1*mp2*mpp1*x1*y3 + m3*mp2*mpp1*x1*y3 + mp1*mp2*mpp1*x1*y3 + m2*mp3*mpp1*x1*y3 + mp2*mp3*mpp1*x1*y3 + mpp2*x1*y3 + m1*mpp2*x1*y3 + m2*mpp2*x1*y3 + m3*mpp2*x1*y3 + m1*m3*mpp2*x1*y3 + m2*m3*mpp2*x1*y3 + mp1*mpp2*x1*y3 + m3*mp1*mpp2*x1*y3 + mp2*mpp2*x1*y3 + m3*mp2*mpp2*x1*y3 + mp3*mpp2*x1*y3 + m1*mp3*mpp2*x1*y3 + m2*mp3*mpp2*x1*y3 + mp1*mp3*mpp2*x1*y3 + mp2*mp3*mpp2*x1*y3 + m1*x2*y3 + m1*m3*x2*y3 + mp1*x2*y3 + m1*mp1*x2*y3 + m2*mp1*x2*y3 + m3*mp1*x2*y3 + m1*m3*mp1*x2*y3 + m2*m3*mp1*x2*y3 + m1*mp2*x2*y3 + m1*m3*mp2*x2*y3 + mp1*mp2*x2*y3 + m3*mp1*mp2*x2*y3 + m1*mp3*x2*y3 + mp1*mp3*x2*y3 + m1*mp1*mp3*x2*y3 + m2*mp1*mp3*x2*y3 + m1*mp2*mp3*x2*y3 + mp1*mp2*mp3*x2*y3 + mpp1*x2*y3 + m1*mpp1*x2*y3 + m2*mpp1*x2*y3 + m3*mpp1*x2*y3 + m1*m3*mpp1*x2*y3 + m2*m3*mpp1*x2*y3 + mp1*mpp1*x2*y3 + m3*mp1*mpp1*x2*y3 + mp3*mpp1*x2*y3 + m1*mp3*mpp1*x2*y3 + m2*mp3*mpp1*x2*y3 + mp1*mp3*mpp1*x2*y3 + m1*mpp2*x2*y3 + m1*m3*mpp2*x2*y3 + m1*mp3*mpp2*x2*y3 + mpp1*mpp2*x2*y3 + m3*mpp1*mpp2*x2*y3 + mp3*mpp1*mpp2*x2*y3 + m2*y1*y3 + m1*m2*y1*y3 + m2*m3*y1*y3 + m2*mp1*y1*y3 + m1*m2*mp1*y1*y3 + m2*m3*mp1*y1*y3 + m2*mp2*y1*y3 + m1*m3*mp2*y1*y3 + m2*m3*mp2*y1*y3 + m1*mp1*mp2*y1*y3 + m2*mp3*y1*y3 + m2*mp1*mp3*y1*y3 + m1*mp2*mp3*y1*y3 + m2*mp2*mp3*y1*y3 + m2*mpp1*y1*y3 + m1*m2*mpp1*y1*y3 + m2*m3*mpp1*y1*y3 + m2*mp1*mpp1*y1*y3 + mp2*mpp1*y1*y3 + m1*mp2*mpp1*y1*y3 + m3*mp2*mpp1*y1*y3 + mp1*mp2*mpp1*y1*y3 + m2*mp3*mpp1*y1*y3 + mp2*mp3*mpp1*y1*y3 + m1*mpp2*y1*y3 + m2*mpp2*y1*y3 + m1*m3*mpp2*y1*y3 + m2*m3*mpp2*y1*y3 + mp1*mpp2*y1*y3 + m3*mp1*mpp2*y1*y3 + mp2*mpp2*y1*y3 + m3*mp2*mpp2*y1*y3 + m1*mp3*mpp2*y1*y3 + m2*mp3*mpp2*y1*y3 + mp1*mp3*mpp2*y1*y3 + mp2*mp3*mpp2*y1*y3 + m1*y2*y3 + m1*m3*y2*y3 + m1*mp1*y2*y3 + m2*mp1*y2*y3 + m1*m3*mp1*y2*y3 + m2*m3*mp1*y2*y3 + m1*mp2*y2*y3 + m1*m3*mp2*y2*y3 + mp1*mp2*y2*y3 + m3*mp1*mp2*y2*y3 + m1*mp3*y2*y3 + m1*mp1*mp3*y2*y3 + m2*mp1*mp3*y2*y3 + m1*mp2*mp3*y2*y3 + mp1*mp2*mp3*y2*y3 + m1*mpp1*y2*y3 + m2*mpp1*y2*y3 + m1*m3*mpp1*y2*y3 + m2*m3*mpp1*y2*y3 + mp1*mpp1*y2*y3 + m3*mp1*mpp1*y2*y3 + m1*mp3*mpp1*y2*y3 + m2*mp3*mpp1*y2*y3 + mp1*mp3*mpp1*y2*y3 + m1*mpp2*y2*y3 + m1*m3*mpp2*y2*y3 + m1*mp3*mpp2*y2*y3 + mpp1*mpp2*y2*y3 + m3*mpp1*mpp2*y2*y3 + mp3*mpp1*mpp2*y2*y3 + m2*x3*z1 + mp2*x3*z1 + m2*y3*z1 + mp2*y3*z1 + m3*x1*z2 + mpp3*x1*z2 + m1*x3*z2 + mpp1*x3*z2 + m3*y1*z2 + mpp3*y1*z2 + m1*y3*z2 + mpp1*y3*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 69 (Fmmm)
#####################################################################
Am1in69:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in69:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in69:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyin69:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1;
end;
#####################################################################
Axzin69:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + z1;
end;
#####################################################################
CGAPin69:=function(g1,g2,g3)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2,x3,y3,z3,m3,mp3,mpp3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];x3:=g3[1];y3:=g3[2];z3:=g3[3];m3:=g3[4];mp3:=g3[5];mpp3:=g3[6];
return ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1))/2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2 + (m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2 + ((m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3 + ((m2 + mpp2 - 2*m2*mpp2)*x1*(1 + x1)*x3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*(1 + x1)*x3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*x3)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*x3)/2 + m1*x2*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*x2*x3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*x2*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*x3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3 + m1*(m3 + mpp3 - 2*m3*mpp3)*x2*x3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*x3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*x3 + x1*x2*x3 + (m1 + mpp1 - 2*m1*mpp1)*x1*x2*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*x1*x2*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x1*x2*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x2*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x2*x3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x2*x3 + (m3 + mpp3 - 2*m3*mpp3)*x1*x2*x3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*x3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*x3 + ((mp1 + mpp1 - 2*mp1*mpp1)*x2*(1 + x2)*x3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*(1 + x2)*x3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*(1 + x2)*x3)/2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y1 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + (m2 + mpp2 - 2*m2*mpp2)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*x1*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*x2*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*x3*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*x2*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3*y1 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*x3*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*(1 + y1))/2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + (m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + ((m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y2)/2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x3*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x3*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y2 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x1*x3*y2 + (m2 + mpp2 - 2*m2*mpp2)*x1*x3*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*x3*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3*y2 + m1*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*x3*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*y2 + ((m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x3*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y2*(1 + y2))/2 + ((m3 + mpp3 - 2*m3*mpp3)*y1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*(1 + y2))/2 + (m2 + mpp2 - 2*m2*mpp2)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*(1 + x1)*y3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*(1 + x1)*y3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y3)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y3)/2 + m1*x2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*x2*y3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*x2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*y3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*y3 + m1*(m2 + mpp2 - 2*m2*mpp2)*x2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*y3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3 + m1*(m3 + mpp3 - 2*m3*mpp3)*x2*y3 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y3 + x1*x2*y3 + (m1 + mpp1 - 2*m1*mpp1)*x1*x2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*x1*x2*y3 + (m2 + mpp2 - 2*m2*mpp2)*x1*x2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x2*y3 + (m3 + mpp3 - 2*m3*mpp3)*x1*x2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y3 + ((mp1 + mpp1 - 2*mp1*mpp1)*x2*(1 + x2)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*(1 + x2)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*(1 + x2)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*(1 + x2)*y3)/2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*y3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*x3*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*x2*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*x2*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*y3 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y3)/2 + m1*(m2 + mpp2 - 2*m2*mpp2)*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*y2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + (m3 + mpp3 - 2*m3*mpp3)*x1*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*x1*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*x3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3*z1 + (m3 + mpp3 - 2*m3*mpp3)*x2*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + (m3 + mpp3 - 2*m3*mpp3)*x1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*x1*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3*z1 + (m3 + mpp3 - 2*m3*mpp3)*x2*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y3*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*y3*z1 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z1*(1 + z1))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1*(1 + z1))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1*(1 + z1))/2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z2)/2 + m1*(m3 + mpp3 - 2*m3*mpp3)*x2*z2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z2 + m1*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z2)/2 + m1*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x3*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x3*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*z2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z2 + m1*(m3 + mpp3 - 2*m3*mpp3)*x3*z2 + m1*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z2 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z2 + (m2 + mpp2 - 2*m2*mpp2)*x1*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*z2 + (m3 + mpp3 - 2*m3*mpp3)*x1*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (m3 + mpp3 - 2*m3*mpp3)*x1*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z2 + (m3 + mpp3 - 2*m3*mpp3)*x2*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*x3*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1*z2 + (m3 + mpp3 - 2*m3*mpp3)*x3*y1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*z2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z2)/2 + m1*(m3 + mpp3 - 2*m3*mpp3)*y2*z2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + (m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*(1 + y2)*z2)/2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*y3*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*y3*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y3*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z2 + m1*(m3 + mpp3 - 2*m3*mpp3)*y3*z2 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*x1*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x3*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*y1*y3*z2 + (m2 + mpp2 - 2*m2*mpp2)*y1*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x3*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*y3*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y3*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1*z2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x3*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*y3*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*y3*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y3*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z2*(1 + z2))/2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*z3 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*(1 + x1)*z3)/2 + m1*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*x2*z3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*x2*z3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*z3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*z3 + m1*(m3 + mpp3 - 2*m3*mpp3)*x2*z3 + m1*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z3 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*x1*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*x1*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x1*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x2*z3 + ((mp1 + mpp1 - 2*mp1*mpp1)*x2*(1 + x2)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*(1 + x2)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*(1 + x2)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*(1 + x2)*z3)/2 + (m2 + mpp2 - 2*m2*mpp2)*x1*x3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z3 + (m1 + mpp1 - 2*m1*mpp1)*x2*x3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*x3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*x3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*x3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y1*z3 + x2*y1*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*x2*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*x3*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y1*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*x3*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*z3 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*(1 + y1)*z3)/2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*y2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*y2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y2*z3 + m1*(m3 + mpp3 - 2*m3*mpp3)*y2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z3 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x3*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*y1*y2*z3 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*y2*(1 + y2)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y2*(1 + y2)*z3)/2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*x2*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*y3*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y2*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y2*y3*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y2*y3*z3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*z2*z3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*z2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*z2*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*z2*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z2*z3 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*z2*(1 + z2)*z3)/2;
end;
#####################################################################
#####################################################################
#Space Group No. 70 (Fddd)
#####################################################################
Am1in70:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in70:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in70:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Bin70:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*m2*mp1 + m2*mp1*mp2 + m1*m2*mpp1 + m2*mp1*mpp1 + m1*m2*mp1*mpp1 + m2*mp2*mpp1 + mp1*mp2*mpp1 + m2*mp1*mp2*mpp1 + mp1*mpp2 + m1*mp1*mpp2 + m2*mp1*mpp2 + m1*m2*mp1*mpp2 + m1*mp2*mpp2 + m1*mp1*mp2*mpp2 + m2*mp1*mp2*mpp2 + mpp1*mpp2 + m1*mpp1*mpp2 + m2*mpp1*mpp2 + m1*m2*mpp1*mpp2 + mp1*mpp1*mpp2 + m1*mp1*mpp1*mpp2 + m1*mp2*mpp1*mpp2 + m2*mp2*mpp1*mpp2 + m2*x1 + m1*m2*x1 + mp2*x1 + m1*mp2*x1 + m2*mp2*x1 + mp2*mpp1*x1 + mpp2*x1 + mpp1*mpp2*x1 + m1*x2 + m1*m2*x2 + mp1*x2 + m1*mp1*x2 + mp1*mp2*x2 + mpp1*x2 + m1*mpp1*x2 + mp1*mpp1*x2 + mp2*mpp1*x2 + m1*mpp2*x2 + mp1*mpp2*x2 + mpp1*mpp2*x2 + x1*x2 + m2*y1 + m1*m2*y1 + m1*mp2*y1 + m2*mp2*y1 + mp2*mpp1*y1 + mpp1*mpp2*y1 + x2*y1 + m1*m2*y2 + m1*mpp2*y2 + mp1*z2 + m1*mp1*z2 + mp1*mp2*z2 + mpp1*z2 + m1*mpp1*z2 + mp1*mpp1*z2 + mp2*mpp1*z2 + mp1*mpp2*z2 + mpp1*mpp2*z2 + x1*z2 + y1*z2;
end;
#####################################################################
CGAPin70:=function(g1,g2,g3)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2,x3,y3,z3,m3,mp3,mpp3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];x3:=g3[1];y3:=g3[2];z3:=g3[3];m3:=g3[4];mp3:=g3[5];mpp3:=g3[6];
return m3*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2) + m3*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2) + m3*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3) + m1*m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3) + m3*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3) + m3*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3) + m1*m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3) + m1*m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m3*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m3*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*m2*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*m2*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m1*m2*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + m2*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + m2*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m2*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m2*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1) + ((m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(1 - m1*mp1 + x1))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(1 - m1*mp1 + x1))/2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mp2) + x2) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mp2) + x2) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mp2) + x2) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mp2) + x2) + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mp2) + x2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mp2) + x2) + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(1 - m2*mp2 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(1 - m2*mp2 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(1 - m2*mp2 + x2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(1 - m2*mp2 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(1 - m2*mp2 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(1 - m2*mp2 + x2))/2 + m2*(m1 + mpp1 - 2*m1*mpp1)*(-(m3*mp3) + x3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(-(m3*mp3) + x3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(-(m3*mp3) + x3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(-(m3*mp3) + x3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(-(m3*mp3) + x3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(-(m3*mp3) + x3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3) + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3) + (m2 + mpp2 - 2*m2*mpp2)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mp3) + x3) + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(-(m3*mp3) + x3)*(1 - m3*mp3 + x3))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3)*(1 - m3*mp3 + x3))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3)*(1 - m3*mp3 + x3))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(1 - m3*mp3 + x3))/2 + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m2*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m2*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m1*mpp1) + mp1*mpp1 + y1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m1*mpp1) + mp1*mpp1 + y1) + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m1*mpp1) + mp1*mpp1 + y1) + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(-(m3*mp3) + x3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(-(m1*mpp1) + mp1*mpp1 + y1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(-(m1*mpp1) + mp1*mpp1 + y1) + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(1 - m1*mpp1 + mp1*mpp1 + y1))/2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(-(m3*mp3) + x3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(-(m3*mp3) + x3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(-(m2*mpp2) + mp2*mpp2 + y2) + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(-(m2*mpp2) + mp2*mpp2 + y2) + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2)*(1 - m2*mpp2 + mp2*mpp2 + y2))/2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(-(m3*mpp3) + mp3*mpp3 + y3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mp1) + x1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mp1) + x1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m2*mp2) + x2)*(-(m3*mpp3) + mp3*mpp3 + y3) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m2*mp2) + x2)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mpp3) + mp3*mpp3 + y3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(-(m3*mpp3) + mp3*mpp3 + y3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mpp1) + mp1*mpp1 + y1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mpp1) + mp1*mpp1 + y1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(-(m3*mpp3) + mp3*mpp3 + y3) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m2*mpp2) + mp2*mpp2 + y2)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2)*(-(m3*mpp3) + mp3*mpp3 + y3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2)*(-(m3*mpp3) + mp3*mpp3 + y3) + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3)*(1 - m3*mpp3 + mp3*mpp3 + y3))/2 + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m2*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m2*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mp2) + x2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(-(m3*mp3) + x3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1) + ((m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(1 + m1*mp1 + m1*mpp1 - mp1*mpp1 + z1))/2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mp1) + x1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mp3) + x3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mp3) + x3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2) + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2)*(1 + m2*mp2 + m2*mpp2 - mp2*mpp2 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2)*(1 + m2*mp2 + m2*mpp2 - mp2*mpp2 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2)*(1 + m2*mp2 + m2*mpp2 - mp2*mpp2 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2)*(1 + m2*mp2 + m2*mpp2 - mp2*mpp2 + z2))/2 + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + m2*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + m2*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mp1) + x1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mp1) + x1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mp1) + x1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(-(m2*mp2) + x2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(-(m2*mp2) + x2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m2*mp2) + x2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m2*mp2) + x2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mp2) + x2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mp3) + x3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m1*mpp1) + mp1*mpp1 + y1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(-(m2*mpp2) + mp2*mpp2 + y2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m2*mpp2) + mp2*mpp2 + y2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m2*mpp2) + mp2*mpp2 + y2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m2*mpp2) + mp2*mpp2 + y2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(-(m3*mpp3) + mp3*mpp3 + y3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(-(m3*mpp3) + mp3*mpp3 + y3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*(m1*mp1 + m1*mpp1 - mp1*mpp1 + z1)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m2*mp2 + m2*mpp2 - mp2*mpp2 + z2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3) + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3)*(1 + m3*mp3 + m3*mpp3 - mp3*mpp3 + z3))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*(m3*mp3 + m3*mpp3 - mp3*mpp3 + z3)*(1 + m3*mp3 + m3*mpp3 - mp3*mpp3 + z3))/2;
end;
#####################################################################
#####################################################################
#Space Group No. 71 (Immm)
#####################################################################
Am1in71:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in71:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in71:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyzin71:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
B1in71:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m2*x1 + m2*mp1*x1 + m1*mp2*x1 + m2*mp2*x1 + m2*mpp1*x1 + mp2*mpp1*x1 + 2*mpp2*x1 + m1*mpp2*x1 + m2*mpp2*x1 + mp1*mpp2*x1 + mp2*mpp2*x1 + m2*y1 + m2*mp1*y1 + mp2*y1 + m1*mp2*y1 + m2*mp2*y1 + m2*mpp1*y1 + mp2*mpp1*y1 + mpp2*y1 + m1*mpp2*y1 + m2*mpp2*y1 + mp1*mpp2*y1 + mp2*mpp2*y1 + m2*mp1*z1 + m1*mp2*z1 + m2*mp2*z1 + m2*mpp1*z1 + mp2*mpp1*z1 + mpp2*z1 + m1*mpp2*z1 + m2*mpp2*z1 + mp1*mpp2*z1 + mp2*mpp2*z1;
end;
#####################################################################
B2in71:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*x1*x2 + mp1*x1*x2 + x1*y2 + m1*x1*y2 + mp1*x1*y2 + m1*x2*y2 + mp1*x2*y2 + x1*z2 + m1*x1*z2 + mp1*x1*z2 + m1*x2*z2 + mp1*x2*z2;
end;
#####################################################################
B3in71:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*x1*x2 + mpp1*x1*x2 + mp1*x2*y1 + mpp1*x2*y1 + x1*y2 + m1*x1*y2 + mpp1*x1*y2 + m1*x2*y2 + mp1*x2*y2 + mp1*y1*y2 + mpp1*y1*y2 + m1*x1*z2 + mpp1*x1*z2 + m1*x2*z2 + mpp1*x2*z2 + y1*z2 + mp1*y1*z2 + mpp1*y1*z2 + mp1*y2*z2 + mpp1*y2*z2;
end;
#####################################################################
CGAPin71:=function(g1,g2,g3)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2,x3,y3,z3,m3,mp3,mpp3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];x3:=g3[1];y3:=g3[2];z3:=g3[3];m3:=g3[4];mp3:=g3[5];mpp3:=g3[6];
return (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*x2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*x2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*x2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*x2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*x2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*x2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*(1 + x2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*(1 + x2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2^2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2^2*(1 + x2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2^2*(1 + x2))/2 + (m2 + mpp2 - 2*m2*mpp2)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*(1 + x1)*x3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*(1 + x1)*x3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*x3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*x3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*x3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*x3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*x3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*x3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*x3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*x3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*x3)/2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x2*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*x3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*x3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*x3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*x3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*x3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*x3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y1)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y1)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y1)/2 + (m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1 + (mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y1 + ((m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*y1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*y1)/2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*x1*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*x2*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*x3*y1 + (m3 + mpp3 - 2*m3*mpp3)*x2*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*y1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*y1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*x3*y1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*x3*y1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*x3*y1 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*(1 + y1))/2 + ((m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*x3*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*(1 + y1))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1^2*(1 + y1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1^2*(1 + y1))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1^2*(1 + y1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1^2*(1 + y1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1^2*(1 + y1))/2 + m1*(m3 + mpp3 - 2*m3*mpp3)*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2 + (m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2 + (mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2 + ((m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y2)/2 + m1*(m3 + mpp3 - 2*m3*mpp3)*x2*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2 + (m3 + mpp3 - 2*m3*mpp3)*x1*x2*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y2 + (mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y2 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*y2)/2 + m1*(m3 + mpp3 - 2*m3*mpp3)*x3*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y2 + x1*x3*y2 + (m1 + mpp1 - 2*m1*mpp1)*x1*x3*y2 + (m2 + mpp2 - 2*m2*mpp2)*x1*x3*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3*y2 + (m3 + mpp3 - 2*m3*mpp3)*x1*x3*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*y2 + (mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*y2 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*y2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*y2 + m1*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*y2 + (mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y2 + (m3 + mpp3 - 2*m3*mpp3)*x2*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y2 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*x3*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*y2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*y2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*y2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*y2 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*y2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*y2 + ((m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y2)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y2)/2 + ((mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y2)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y2)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2))/2 + ((m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*(1 + y2))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*(1 + y2))/2 + ((m3 + mpp3 - 2*m3*mpp3)*y1*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*(1 + y2))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*(1 + y2))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*(1 + y2))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2^2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2^2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2^2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2^2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2^2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2^2*(1 + y2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2^2*(1 + y2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2^2*(1 + y2))/2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3 + ((m2 + mpp2 - 2*m2*mpp2)*x1*(1 + x1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*(1 + x1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*(1 + x1)*y3)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*x1*(1 + x1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*(1 + x1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*(1 + x1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y3)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*y3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y3)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y3)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*y3)/2 + m1*x2*y3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3 + m1*(m3 + mpp3 - 2*m3*mpp3)*x2*y3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y3 + (m1 + mpp1 - 2*m1*mpp1)*x1*x2*y3 + (m2 + mpp2 - 2*m2*mpp2)*x1*x2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*y3 + (mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y3 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*x1*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*y3 + x2*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*x2*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*x2*y1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*x2*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y1*y3 + (m3 + mpp3 - 2*m3*mpp3)*x2*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*y3 + (mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y3 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*y3 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*(1 + y1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*(1 + y1)*y3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*(1 + y1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y3)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y3)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*y3)/2 + m1*y2*y3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*y2*y3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*y3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*y3 + m1*(mp3 + mpp3 - 2*mp3*mpp3)*y2*y3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*y3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*y3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*x1*y2*y3 + (m2 + mpp2 - 2*m2*mpp2)*x1*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y2*y3 + (m3 + mpp3 - 2*m3*mpp3)*x1*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*y3 + (mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*y3 + y1*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*y1*y2*y3 + (m2 + mpp2 - 2*m2*mpp2)*y1*y2*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*y1*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*y2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*y3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*y3 + (mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*y3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*y3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*y3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z1)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z1)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z1)/2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1 + (m3 + mpp3 - 2*m3*mpp3)*x1*x2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z1 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z1)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z1)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z1)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z1)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*z1)/2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*x3*z1 + (m3 + mpp3 - 2*m3*mpp3)*x2*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*x3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*x3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z1 + (m3 + mpp3 - 2*m3*mpp3)*x2*y1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z1 + (mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*x3*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*z1 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z1)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z1)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z1)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z1)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z1)/2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1 + (mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1 + (m3 + mpp3 - 2*m3*mpp3)*x1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z1 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z1 + (m3 + mpp3 - 2*m3*mpp3)*x2*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z1 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z1 + x3*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*x3*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*x3*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x3*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x3*y2*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y2*z1 + (mp3 + mpp3 - 2*mp3*mpp3)*x3*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y2*z1 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y2*z1 + (m3 + mpp3 - 2*m3*mpp3)*y1*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z1 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z1 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*(1 + y2)*z1)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*(1 + y2)*z1)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*(1 + y2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*(1 + y2)*z1)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*(1 + y2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*(1 + y2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*(1 + y2)*z1)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*(1 + y2)*z1)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z1)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z1)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z1)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z1)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z1)/2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*x2*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*x2*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y3*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*y1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3*z1 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*y2*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*y2*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y2*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y2*y3*z1 + (m3 + mpp3 - 2*m3*mpp3)*y2*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*y3*z1 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*y3*z1 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*y3*z1 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*y3*z1 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*y3*z1 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*(1 + z1))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*(1 + z1))/2 + ((m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x3*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*(1 + z1))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*(1 + z1))/2 + ((mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*(1 + z1))/2 + ((m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*(1 + z1))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*(1 + z1))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*(1 + z1))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*(1 + z1))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*(1 + z1))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*(1 + z1))/2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2 + ((m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z2)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z2)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*z2)/2 + m1*(m3 + mpp3 - 2*m3*mpp3)*x2*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2 + (m3 + mpp3 - 2*m3*mpp3)*x1*x2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*z2)/2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2 + (mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z2 + (mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z2 + (m3 + mpp3 - 2*m3*mpp3)*x2*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z2 + (mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*x3*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*y1*z2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z2)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z2)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z2)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z2)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z2)/2 + ((m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z2)/2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2 + (m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z2 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z2 + (m3 + mpp3 - 2*m3*mpp3)*y1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z2 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z2)/2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z2 + m1*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z2 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z2 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z2 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y3*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y3*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*y1*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*y3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*y3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y3*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y3*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*z2 + (m3 + mpp3 - 2*m3*mpp3)*x2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x3*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x3*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x3*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z2 + (mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z2 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y3*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1*z2 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y3*z1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*z2 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*z2 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*z2 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y3*z1*z2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*z1*(1 + z1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*(1 + z1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*(1 + z1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*(1 + z1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*(1 + z1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*(1 + z1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*(1 + z1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z2)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z2)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*(1 + z2))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*(1 + z2))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*(1 + z2))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2*(1 + z2))/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*(1 + z2))/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2*(1 + z2))/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z2^2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z2^2*(1 + z2))/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z2^2*(1 + z2))/2 + (m2 + mpp2 - 2*m2*mpp2)*x1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z3 + ((m2 + mpp2 - 2*m2*mpp2)*x1*(1 + x1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*(1 + x1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*(1 + x1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*(1 + x1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*(1 + x1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*(1 + x1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*(1 + x1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*z3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*z3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*(1 + x1)*z3)/2 + (m1 + mpp1 - 2*m1*mpp1)*x2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*x2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*z3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*x1*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x1*x2*z3 + (m2 + mpp2 - 2*m2*mpp2)*x1*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*x2*z3 + ((m1 + mpp1 - 2*m1*mpp1)*x2*(1 + x2)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*(1 + x2)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*(1 + x2)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*(1 + x2)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*(1 + x2)*z3)/2 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*x1*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*x1*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*x2*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*x2*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*y1*z3 + (m3 + mpp3 - 2*m3*mpp3)*x2*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y1*z3 + ((m2 + mpp2 - 2*m2*mpp2)*y1*(1 + y1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*(1 + y1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*(1 + y1)*z3)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*y1*(1 + y1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*(1 + y1)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*(1 + y1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*(1 + y1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*(1 + y1)*z3)/2 + ((mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*(1 + y1)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*(1 + y1)*z3)/2 + m1*(m1 + mpp1 - 2*m1*mpp1)*y2*z3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*y2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y2*z3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y2*z3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z3 + m1*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z3 + m1*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x1*y2*z3 + (m2 + mpp2 - 2*m2*mpp2)*x1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*y2*z3 + (m3 + mpp3 - 2*m3*mpp3)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*y2*z3 + (mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*x2*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x2*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*y1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*y1*y2*z3 + (m2 + mpp2 - 2*m2*mpp2)*y1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*y2*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*y1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*y2*z3 + (m3 + mpp3 - 2*m3*mpp3)*y1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*y2*z3 + ((m1 + mpp1 - 2*m1*mpp1)*y2*(1 + y2)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*y2*(1 + y2)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y2*(1 + y2)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y2*(1 + y2)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*(1 + y2)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*(1 + y2)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*(1 + y2)*z3)/2 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z1*z3 + (m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y2*z1*z3 + (mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + (m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y2*z1*z3 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*z1*(1 + z1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*z1*(1 + z1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*(1 + z1)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*(1 + z1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z3)/2 + ((m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*(1 + z1)*z3)/2 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*z2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z2*z3 + m1*(m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z2*z3 + m1*(mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z2*z3 + m1*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*x1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*z3 + (mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*x1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*x2*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*x2*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*x2*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*y1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*y1*z2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*y1*z2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*y1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2*z3 + (m1 + mpp1 - 2*m1*mpp1)*(mp1 + mpp1 - 2*mp1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2*z3 + (m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2*z3 + (mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z1*z2*z3 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*z2*(1 + z2)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*z2*(1 + z2)*z3)/2 + ((m1 + mpp1 - 2*m1*mpp1)*(mp2 + mpp2 - 2*mp2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*z2*(1 + z2)*z3)/2 + ((mp1 + mpp1 - 2*mp1*mpp1)*(m2 + mpp2 - 2*m2*mpp2)*(m3 + mpp3 - 2*m3*mpp3)*(mp3 + mpp3 - 2*mp3*mpp3)*z2*(1 + z2)*z3)/2;
end;
#####################################################################
#####################################################################
#Space Group No. 72 (Ibam)
#####################################################################
Am1in72:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in72:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in72:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyzin72:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
Bin72:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return x2*z1 + mp1*x2*z1 + mpp1*x2*z1 + y2*z1 + mp1*y2*z1 + mpp1*y2*z1 + mp1*x2*z2 + mpp1*x2*z2 + mp1*y2*z2 + mpp1*y2*z2 + mp1*z1*z2 + mpp1*z1*z2;
end;
#####################################################################
#####################################################################
#Space Group No. 73 (Ibca)
#####################################################################
Am1in73:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in73:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in73:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyzin73:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
#####################################################################
#Space Group No. 74 (Imma)
#####################################################################
Am1in74:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return m1;
end;
#####################################################################
Am2in74:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mp1;
end;
#####################################################################
Am3in74:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return mpp1;
end;
#####################################################################
Axyzin74:=function(g1)
local x1,y1,z1,m1,mp1,mpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];
return x1 + y1 + z1;
end;
#####################################################################
B1in74:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*m2*mp1 + m2*mp1*x2 + m1*m2*mp1*x2 + mpp1*x2 + m1*mpp1*x2 + m1*m2*mpp1*x2 + mp1*mpp1*x2 + m2*mp1*mpp1*x2 + x2*y1 + m1*x2*y1 + mpp1*x2*y1 + m1*y2 + mp1*y2 + m2*mp1*y2 + m1*m2*mp1*y2 + m1*mpp1*y2 + m1*m2*mpp1*y2 + mp1*mpp1*y2 + m2*mp1*mpp1*y2 + m1*x2*y2 + mpp1*x2*y2 + m1*y1*y2 + mpp1*y1*y2 + m1*m2*z1 + m2*mp1*z1 + x2*z1 + mp1*x2*z1 + mpp1*x2*z1 + y2*z1 + mp1*y2*z1 + mpp1*y2*z1 + m1*m2*z2 + m1*m2*mp1*z2 + m1*mpp1*z2 + m1*m2*mpp1*z2 + mp1*mpp1*z2 + m2*mp1*mpp1*z2 + mp1*x2*z2 + mpp1*x2*z2 + y1*z2 + m1*y1*z2 + mpp1*y1*z2 + m1*y2*z2 + mp1*y2*z2 + mp1*z1*z2 + mpp1*z1*z2;
end;
#####################################################################
B2in74:=function(g1,g2)
local x1,y1,z1,m1,mp1,mpp1,x2,y2,z2,m2,mp2,mpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];m1:=g1[4];mp1:=g1[5];mpp1:=g1[6];x2:=g2[1];y2:=g2[2];z2:=g2[3];m2:=g2[4];mp2:=g2[5];mpp2:=g2[6];
return m1*m2*mpp1 + m2*mp1*mpp1 + m1*m2*mpp2 + m2*mp1*mpp2 + m2*mpp1*x1 + mpp2*x1 + m1*mpp2*x1 + m2*mpp2*x1 + m1*m2*x2 + mpp1*x2 + m1*mpp1*x2 + mp1*mpp1*x2 + mp1*mpp2*x2 + m2*y1 + m2*mpp1*y1 + m1*mpp2*y1 + m2*mpp2*y1 + x2*y1 + m1*x2*y1 + mpp1*x2*y1 + m1*y2 + m1*m2*y2 + m1*mpp1*y2 + mp1*mpp1*y2 + mp1*mpp2*y2 + m1*x2*y2 + mpp1*x2*y2 + m1*y1*y2 + mpp1*y1*y2 + m2*mpp1*z1 + m1*mpp2*z1 + m2*mpp2*z1 + m1*m2*z2 + m1*mpp1*z2 + mp1*mpp1*z2 + mp1*mpp2*z2 + y1*z2 + m1*y1*z2 + mpp1*y1*z2 + m1*y2*z2 + mpp1*y2*z2;
end;
#####################################################################





#####################################################################
#Space Group No. 91 (Subscript[P4,1]22)
#####################################################################
Acpin91:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cp1;
end;
#####################################################################
Acppin91:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cpp1;
end;
#####################################################################
Axyin91:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return x1+y1;
end;
#####################################################################
BGAPin91:=function(g1,g2)
local x1, y1, z1, c1, cp1, cpp1, x2, y2, z2, c2, cp2, cpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];cpp2:=g2[6];
return x2*y1+cpp1*x2*y1+cpp1*x2*y2+cpp1*y1*y2;
end;
#####################################################################
#Space Group No. 92(Subscript[P4,1]*Subscript[2,2]2)
#####################################################################
Acpin92:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cp1;
end;
#####################################################################
Acppin92:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cpp1;
end;
#####################################################################
BGAPin92:=function(g1,g2)
local x1, y1, z1, c1, cp1, cpp1, x2, y2, z2, c2, cp2, cpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];cpp2:=g2[6];
return c2*x1+cp2*cpp1*x1+cp1*x2+cp1*cpp1*x2+cp2*cpp1*x2+c2*y1+cp2*cpp1*y1+cp1*cpp1*y2+cp2*cpp1*y2;
end;
#####################################################################
CGAPin92:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c3*cp1*cp2+c1*c2*cp1*cp3+c1*c2*c3*cp1*cp3+c1*c2*c3*cp2*cp3+c2*cp1*cp2*cp3+c1*c2*c3*cp1*cp2*cp3+c1*c2*c3*cp1*m1+c1*c2*c3*cp2*m1+c3*cp1*cp2*m1+c2*c3*cp1*cp2*m1+c1*c2*cp3*m1+c1*c2*c3*cp3*m1+c1*c2*cp1*cp3*m1+c1*cp2*cp3*m1+c1*c2*cp2*cp3*m1+c1*c3*cp2*cp3*m1+c1*cp1*cp2*cp3*m1+c2*cp1*cp2*cp3*m1+c1*c2*cp1*cp2*cp3*m1+c3*cp1*cp2*cp3*m1+c2*c3*cp1*cp2*cp3*m1+c1*c3*cp1*m2+c1*c2*c3*cp1*m2+c1*c3*cp2*m2+c1*c2*c3*cp2*m2+c2*c3*cp1*cp2*m2+c1*c2*c3*cp1*cp2*m2+c1*c2*c3*cp3*m2+c2*cp1*cp3*m2+c1*c2*cp1*cp3*m2+c1*c3*cp1*cp3*m2+c1*c2*c3*cp1*cp3*m2+c1*cp2*cp3*m2+c1*c3*cp2*cp3*m2+c1*cp1*cp2*cp3*m2+c2*c3*cp1*cp2*cp3*m2+c3*cp1*m1*m2+c1*c3*cp1*m1*m2+c3*cp2*m1*m2+c2*c3*cp2*m1*m2+c1*c3*cp1*cp2*m1*m2+c2*cp1*cp3*m1*m2+c1*c2*cp1*cp3*m1*m2+c3*cp1*cp3*m1*m2+c1*c3*cp1*cp3*m1*m2+c2*c3*cp1*cp3*m1*m2+c3*cp2*cp3*m1*m2+c2*c3*cp2*cp3*m1*m2+c1*cp1*cp2*cp3*m1*m2+c3*cp1*cp2*cp3*m1*m2+c1*c3*cp1*cp2*cp3*m1*m2+c2*c3*cp1*cp2*cp3*m1*m2+c1*c2*cp1*m3+c1*c2*cp2*m3+c1*c3*cp2*m3+c1*c2*c3*cp2*m3+c1*cp1*cp2*m3+c2*cp1*cp2*m3+c1*c3*cp1*cp2*m3+c2*c3*cp1*cp2*m3+c1*c2*cp3*m3+c1*c2*c3*cp3*m3+c1*cp2*cp3*m3+c1*c3*cp2*cp3*m3+c2*cp1*cp2*cp3*m3+c1*c3*cp1*cp2*cp3*m3+c2*c3*cp1*cp2*cp3*m3+c1*c2*c3*cp1*cp2*cp3*m3+c2*cp1*m1*m3+c2*c3*cp1*m1*m3+c1*cp2*m1*m3+cp1*cp2*m1*m3+c1*cp1*cp2*m1*m3+c2*cp1*cp2*m1*m3+c1*c2*cp3*m1*m3+c2*cp1*cp3*m1*m3+c1*c2*cp1*cp3*m1*m3+cp1*cp2*cp3*m1*m3+c3*cp1*cp2*cp3*m1*m3+c2*c3*cp1*cp2*cp3*m1*m3+c1*c2*cp1*m2*m3+c3*cp1*m2*m3+c1*c3*cp1*m2*m3+c2*c3*cp1*m2*m3+c1*c2*cp1*cp2*m2*m3+c1*c2*cp3*m2*m3+c2*cp1*cp3*m2*m3+c3*cp1*cp3*m2*m3+c1*c3*cp1*cp3*m2*m3+c2*c3*cp1*cp3*m2*m3+c2*cp1*cp2*cp3*m2*m3+m1*m2*m3+c3*cp2*m1*m2*m3+c1*cp2*cp3*m1*m2*m3+c3*cp2*cp3*m1*m2*m3+cp1*cp2*cp3*m1*m2*m3+c1*cp1*cp2*cp3*m1*m2*m3+c2*c3*cp1*x1+c2*c3*cp1*cp2*x1+c2*cp3*x1+c2*cp1*cp3*x1+c1*c2*cp1*cp3*x1+c2*c3*cp1*cp3*x1+cp2*cp3*x1+c1*cp1*cp2*cp3*x1+c2*cp1*cp2*cp3*x1+c3*cp1*cp2*cp3*x1+c2*c3*cp1*m1*x1+c1*c3*cp2*m1*x1+c3*cp1*cp2*m1*x1+c2*c3*cp1*cp2*m1*x1+c2*cp3*m1*x1+c1*c2*cp3*m1*x1+c2*c3*cp3*m1*x1+c1*c2*cp1*cp3*m1*x1+c2*c3*cp1*cp3*m1*x1+cp2*cp3*m1*x1+c1*cp1*cp2*cp3*m1*x1+c2*cp1*cp2*cp3*m1*x1+c3*cp1*cp2*cp3*m1*x1+c3*cp1*m2*x1+c1*c3*cp1*m2*x1+c2*c3*cp1*m2*x1+c1*c3*cp2*m2*x1+c3*cp1*cp2*m2*x1+c2*c3*cp1*cp2*m2*x1+c2*cp3*m2*x1+c1*c2*cp3*m2*x1+c2*c3*cp3*m2*x1+cp1*cp3*m2*x1+c1*cp1*cp3*m2*x1+c1*c2*cp1*cp3*m2*x1+c2*c3*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c1*cp2*cp3*m2*x1+c3*cp2*cp3*m2*x1+cp1*cp2*cp3*m2*x1+c1*cp1*cp2*cp3*m2*x1+c2*cp1*cp2*cp3*m2*x1+c3*cp1*cp2*cp3*m2*x1+c3*cp1*m1*m2*x1+c1*c3*cp1*m1*m2*x1+c3*cp1*cp2*m1*m2*x1+c1*c3*cp1*cp2*m1*m2*x1+cp1*cp3*m1*m2*x1+c1*cp1*cp3*m1*m2*x1+c2*cp1*cp3*m1*m2*x1+c1*c2*cp1*cp3*m1*m2*x1+c3*cp1*cp3*m1*m2*x1+c1*c3*cp1*cp3*m1*m2*x1+cp2*cp3*m1*m2*x1+c1*cp2*cp3*m1*m2*x1+c3*cp2*cp3*m1*m2*x1+c3*cp1*cp2*cp3*m1*m2*x1+c2*cp1*m3*x1+cp2*m3*x1+c1*cp2*m3*x1+c2*cp2*m3*x1+c1*c2*cp2*m3*x1+c3*cp2*m3*x1+c2*c3*cp2*m3*x1+c1*c2*cp1*cp2*m3*x1+c3*cp1*cp2*m3*x1+c2*c3*cp1*cp2*m3*x1+c1*c2*cp3*m3*x1+c2*c3*cp3*m3*x1+c2*cp1*cp3*m3*x1+c1*c2*cp1*cp3*m3*x1+c3*cp2*cp3*m3*x1+cp1*cp2*cp3*m3*x1+c1*cp1*cp2*cp3*m3*x1+c2*cp1*cp2*cp3*m3*x1+c2*cp1*m1*m3*x1+cp2*m1*m3*x1+c2*cp2*m1*m3*x1+c3*cp2*m1*m3*x1+c1*c3*cp2*m1*m3*x1+c2*c3*cp2*m1*m3*x1+c1*cp1*cp2*m1*m3*x1+c3*cp1*cp2*m1*m3*x1+c1*c3*cp1*cp2*m1*m3*x1+c2*c3*cp1*cp2*m1*m3*x1+c2*cp3*m1*m3*x1+c2*cp1*cp3*m1*m3*x1+c1*cp2*cp3*m1*m3*x1+c2*cp2*cp3*m1*m3*x1+c3*cp2*cp3*m1*m3*x1+c1*c3*cp2*cp3*m1*m3*x1+c2*c3*cp2*cp3*m1*m3*x1+c1*cp1*cp2*cp3*m1*m3*x1+c2*cp1*cp2*cp3*m1*m3*x1+c3*cp1*cp2*cp3*m1*m3*x1+cp1*m2*m3*x1+c1*cp1*m2*m3*x1+c1*c2*cp1*m2*m3*x1+c3*cp1*m2*m3*x1+c1*c3*cp1*m2*m3*x1+cp2*m2*m3*x1+c1*cp2*m2*m3*x1+c2*cp2*m2*m3*x1+c3*cp2*m2*m3*x1+c1*c3*cp2*m2*m3*x1+c2*c3*cp2*m2*m3*x1+c2*cp1*cp2*m2*m3*x1+c1*c2*cp1*cp2*m2*m3*x1+c2*c3*cp1*cp2*m2*m3*x1+c2*cp3*m2*m3*x1+c1*c2*cp1*cp3*m2*m3*x1+c3*cp1*cp3*m2*m3*x1+c1*c3*cp1*cp3*m2*m3*x1+c2*cp2*cp3*m2*m3*x1+c3*cp2*cp3*m2*m3*x1+c1*c3*cp2*cp3*m2*m3*x1+c2*c3*cp2*cp3*m2*m3*x1+cp1*cp2*cp3*m2*m3*x1+c1*cp1*cp2*cp3*m2*m3*x1+c2*cp1*cp2*cp3*m2*m3*x1+c3*cp1*cp2*cp3*m2*m3*x1+cp2*m1*m2*m3*x1+c3*cp2*m1*m2*m3*x1+cp1*cp2*m1*m2*m3*x1+c3*cp1*cp2*m1*m2*m3*x1+c3*cp2*cp3*m1*m2*m3*x1+c2*c3*cp1*x2+c1*c3*cp2*x2+c3*cp1*cp2*x2+c1*c3*cp1*cp2*x2+c2*cp1*cp3*x2+c1*c2*cp1*cp3*x2+c2*c3*cp1*cp3*x2+c1*c3*cp2*cp3*x2+c2*c3*cp1*m1*x2+c1*c3*cp2*m1*x2+c2*c3*cp2*m1*x2+c3*cp1*cp2*m1*x2+c1*c3*cp1*cp2*m1*x2+c2*cp1*cp3*m1*x2+c1*c2*cp1*cp3*m1*x2+c2*c3*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c3*cp2*cp3*m1*x2+c1*c3*cp2*cp3*m1*x2+c2*c3*cp2*cp3*m1*x2+c3*cp1*m2*x2+c1*c3*cp1*m2*x2+c2*c3*cp1*m2*x2+c3*cp1*cp2*m2*x2+c1*c2*cp3*m2*x2+cp1*cp3*m2*x2+c1*cp1*cp3*m2*x2+c2*cp1*cp3*m2*x2+c3*cp1*cp3*m2*x2+c1*c3*cp1*cp3*m2*x2+c2*c3*cp1*cp3*m2*x2+c1*cp2*cp3*m2*x2+c1*c3*cp2*cp3*m2*x2+c1*cp1*cp2*cp3*m2*x2+c3*cp1*m1*m2*x2+c2*c3*cp1*m1*m2*x2+c3*cp2*m1*m2*x2+c3*cp1*cp2*m1*m2*x2+c2*c3*cp1*cp2*m1*m2*x2+cp1*cp3*m1*m2*x2+c2*cp1*cp3*m1*m2*x2+c1*c2*cp1*cp3*m1*m2*x2+c3*cp1*cp3*m1*m2*x2+c2*c3*cp1*cp3*m1*m2*x2+cp2*cp3*m1*m2*x2+c3*cp2*cp3*m1*m2*x2+c2*cp1*m3*x2+c1*cp2*m3*x2+c1*c2*cp2*m3*x2+c1*c3*cp2*m3*x2+cp1*cp2*m3*x2+c1*cp1*cp2*m3*x2+c2*cp1*cp2*m3*x2+c3*cp1*cp2*m3*x2+c1*c2*cp3*m3*x2+cp1*cp3*m3*x2+c1*cp1*cp3*m3*x2+c3*cp1*cp3*m3*x2+c1*c3*cp1*cp3*m3*x2+c1*c3*cp2*cp3*m3*x2+cp1*cp2*cp3*m3*x2+c3*cp1*cp2*cp3*m3*x2+c2*cp1*m1*m3*x2+c3*cp2*m1*m3*x2+cp1*cp3*m1*m3*x2+c3*cp1*cp3*m1*m3*x2+c3*cp2*cp3*m1*m3*x2+c3*cp1*cp2*cp3*m1*m3*x2+cp1*m2*m3*x2+c1*cp1*m2*m3*x2+c1*c2*cp1*m2*m3*x2+c3*cp1*m2*m3*x2+c1*c3*cp1*m2*m3*x2+c1*cp2*m2*m3*x2+c1*c3*cp2*m2*m3*x2+c2*cp1*cp2*m2*m3*x2+c1*c2*cp1*cp2*m2*m3*x2+c2*c3*cp1*cp2*m2*m3*x2+cp1*cp3*m2*m3*x2+c1*cp1*cp3*m2*m3*x2+c1*c2*cp1*cp3*m2*m3*x2+c3*cp1*cp3*m2*m3*x2+c1*c3*cp1*cp3*m2*m3*x2+c1*c3*cp2*cp3*m2*m3*x2+c1*cp1*cp2*cp3*m2*m3*x2+c3*cp1*cp2*cp3*m2*m3*x2+cp1*m1*m2*m3*x2+c3*cp1*m1*m2*m3*x2+cp1*cp2*m1*m2*m3*x2+c3*cp1*cp2*m1*m2*m3*x2+cp1*cp3*m1*m2*m3*x2+c3*cp1*cp3*m1*m2*m3*x2+cp1*cp2*cp3*m1*m2*m3*x2+c3*cp1*cp2*cp3*m1*m2*m3*x2+c3*cp1*m1*m2*x1*x2+c3*cp2*m1*m2*x1*x2+c1*cp3*m1*m2*x1*x2+c2*cp3*m1*m2*x1*x2+c3*cp3*m1*m2*x1*x2+cp2*cp3*m1*m2*x1*x2+cp3*m1*m3*x1*x2+c3*cp3*m1*m3*x1*x2+c1*cp1*m1*m2*m3*x1*x2+c2*cp1*m1*m2*m3*x1*x2+c3*cp1*m1*m2*m3*x1*x2+cp2*m1*m2*m3*x1*x2+c1*cp2*m1*m2*m3*x1*x2+c2*cp2*m1*m2*m3*x1*x2+c3*cp2*m1*m2*m3*x1*x2+cp1*cp2*m1*m2*m3*x1*x2+c1*cp3*m1*m2*m3*x1*x2+c2*cp3*m1*m2*m3*x1*x2+c3*cp3*m1*m2*m3*x1*x2+cp2*cp3*m1*m2*m3*x1*x2+c1*c2*cp1*x3+c2*c3*cp1*x3+c1*c3*cp2*x3+cp1*cp2*x3+c2*cp1*cp2*x3+c1*c2*cp1*cp2*x3+c3*cp1*cp2*x3+c1*c3*cp1*cp2*x3+c2*cp1*cp3*x3+c1*c2*cp1*cp3*x3+c2*c3*cp1*cp3*x3+c1*c3*cp2*cp3*x3+c1*c2*cp1*m1*x3+c2*c3*cp1*m1*x3+c1*c3*cp2*m1*x3+c2*c3*cp2*m1*x3+cp1*cp2*m1*x3+c2*cp1*cp2*m1*x3+c1*c2*cp1*cp2*m1*x3+c3*cp1*cp2*m1*x3+c1*c3*cp1*cp2*m1*x3+c2*cp1*cp3*m1*x3+c1*c2*cp1*cp3*m1*x3+c2*c3*cp1*cp3*m1*x3+cp2*cp3*m1*x3+c3*cp2*cp3*m1*x3+c1*c3*cp2*cp3*m1*x3+c2*c3*cp2*cp3*m1*x3+c1*c2*cp1*m2*x3+c2*c3*cp1*m2*x3+c1*c3*cp2*m2*x3+cp1*cp2*m2*x3+c2*cp1*cp2*m2*x3+c1*c2*cp1*cp2*m2*x3+c3*cp1*cp2*m2*x3+c1*c3*cp1*cp2*m2*x3+c2*cp1*cp3*m2*x3+c1*c2*cp1*cp3*m2*x3+c2*c3*cp1*cp3*m2*x3+c1*c3*cp2*cp3*m2*x3+c1*c3*cp2*m1*m2*x3+c2*c3*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+c3*cp1*cp2*m1*m2*x3+c1*c3*cp1*cp2*m1*m2*x3+c2*c3*cp1*cp2*m1*m2*x3+cp2*cp3*m1*m2*x3+c3*cp2*cp3*m1*m2*x3+c1*c3*cp2*cp3*m1*m2*x3+c2*c3*cp2*cp3*m1*m2*x3+c2*cp1*cp2*cp3*m1*m2*x3+c2*cp1*m3*x3+c1*cp2*m3*x3+c1*c2*cp2*m3*x3+c1*c3*cp2*m3*x3+cp1*cp2*m3*x3+c1*cp1*cp2*m3*x3+c2*cp1*cp2*m3*x3+c3*cp1*cp2*m3*x3+c1*c2*cp3*m3*x3+c1*cp2*cp3*m3*x3+c2*cp1*m1*m3*x3+c3*cp2*m1*m3*x3+c3*cp2*cp3*m1*m3*x3+cp1*cp2*cp3*m1*m3*x3+c2*cp1*m2*m3*x3+c1*cp2*m2*m3*x3+c1*c3*cp2*m2*m3*x3+cp1*cp2*m2*m3*x3+c3*cp1*cp2*m2*m3*x3+c1*c3*cp1*cp2*m2*m3*x3+c2*c3*cp1*cp2*m2*m3*x3+c1*cp2*cp3*m2*m3*x3+c1*c3*cp2*cp3*m2*m3*x3+c1*cp1*cp2*cp3*m2*m3*x3+c2*cp1*cp2*cp3*m2*m3*x3+c3*cp2*m1*m2*m3*x3+cp1*cp2*m1*m2*m3*x3+c3*cp1*cp2*m1*m2*m3*x3+c3*cp2*cp3*m1*m2*m3*x3+c3*cp1*cp2*cp3*m1*m2*m3*x3+m1*m2*x2*x3+c1*cp1*m1*m2*x2*x3+c2*cp1*m1*m2*x2*x3+c3*cp1*m1*m2*x2*x3+cp2*m1*m2*x2*x3+c1*cp2*m1*m2*x2*x3+c2*cp2*m1*m2*x2*x3+c3*cp2*m1*m2*x2*x3+cp1*cp2*m1*m2*x2*x3+c1*cp3*m1*m2*x2*x3+c2*cp3*m1*m2*x2*x3+c3*cp3*m1*m2*x2*x3+cp2*cp3*m1*m2*x2*x3+c1*cp1*m2*m3*x2*x3+c2*cp1*m2*m3*x2*x3+c3*cp1*m2*m3*x2*x3+c1*cp2*m2*m3*x2*x3+c1*cp3*m2*m3*x2*x3+cp1*cp3*m2*m3*x2*x3+cp2*m1*m2*m3*x2*x3+cp1*cp2*m1*m2*m3*x2*x3+cp3*m1*m2*m3*x2*x3+cp1*cp3*m1*m2*m3*x2*x3+c1*c3*cp2*y1+c1*c2*cp3*y1+c2*c3*cp3*y1+c1*c3*cp2*m1*y1+c2*cp3*m1*y1+c1*c2*cp3*m1*y1+c2*c3*cp3*m1*y1+cp2*cp3*m1*y1+c1*c3*cp2*m2*y1+c1*c3*cp1*cp2*m2*y1+c2*cp3*m2*y1+c1*c2*cp3*m2*y1+c2*c3*cp3*m2*y1+c1*c2*cp1*cp3*m2*y1+c1*c3*cp1*cp3*m2*y1+c1*cp1*cp2*cp3*m2*y1+c1*c3*cp1*m1*m2*y1+c1*c3*cp1*cp2*m1*m2*y1+c1*cp1*cp3*m1*m2*y1+c1*c2*cp1*cp3*m1*m2*y1+c1*c3*cp1*cp3*m1*m2*y1+cp2*cp3*m1*m2*y1+c1*cp2*cp3*m1*m2*y1+c3*cp2*cp3*m1*m2*y1+c1*cp1*cp2*cp3*m1*m2*y1+c1*cp2*m3*y1+c1*c2*cp2*m3*y1+c1*c3*cp2*m3*y1+c1*cp1*cp2*m3*y1+c1*c2*cp1*cp2*m3*y1+c1*c3*cp1*cp2*m3*y1+c2*cp3*m3*y1+c1*c2*cp3*m3*y1+c2*c3*cp3*m3*y1+c1*c2*cp1*cp3*m3*y1+c1*cp2*cp3*m3*y1+c2*cp2*cp3*m3*y1+c1*c3*cp2*cp3*m3*y1+c2*c3*cp2*cp3*m3*y1+cp2*m1*m3*y1+c2*cp2*m1*m3*y1+c3*cp2*m1*m3*y1+c1*c3*cp2*m1*m3*y1+c2*c3*cp2*m1*m3*y1+cp1*cp2*m1*m3*y1+c1*cp1*cp2*m1*m3*y1+c2*cp1*cp2*m1*m3*y1+c3*cp1*cp2*m1*m3*y1+c1*c3*cp1*cp2*m1*m3*y1+c2*c3*cp1*cp2*m1*m3*y1+c2*cp3*m1*m3*y1+c1*cp2*cp3*m1*m3*y1+c2*cp2*cp3*m1*m3*y1+c3*cp2*cp3*m1*m3*y1+c1*c3*cp2*cp3*m1*m3*y1+c2*c3*cp2*cp3*m1*m3*y1+cp1*cp2*cp3*m1*m3*y1+c1*cp1*cp2*cp3*m1*m3*y1+c2*cp1*cp2*cp3*m1*m3*y1+c1*cp1*m2*m3*y1+c1*c2*cp1*m2*m3*y1+c1*c3*cp1*m2*m3*y1+c1*cp2*m2*m3*y1+c2*cp2*m2*m3*y1+c1*c3*cp2*m2*m3*y1+c2*c3*cp2*m2*m3*y1+c2*cp1*cp2*m2*m3*y1+c1*c2*cp1*cp2*m2*m3*y1+c2*c3*cp1*cp2*m2*m3*y1+c2*cp3*m2*m3*y1+c1*c2*cp1*cp3*m2*m3*y1+c1*c3*cp1*cp3*m2*m3*y1+c2*cp2*cp3*m2*m3*y1+c1*c3*cp2*cp3*m2*m3*y1+c2*c3*cp2*cp3*m2*m3*y1+c1*cp1*cp2*cp3*m2*m3*y1+c2*cp1*cp2*cp3*m2*m3*y1+cp2*m1*m2*m3*y1+c3*cp2*m1*m2*m3*y1+cp1*cp2*m1*m2*m3*y1+c3*cp1*cp2*m1*m2*m3*y1+c3*cp2*cp3*m1*m2*m3*y1+cp1*cp2*cp3*m1*m2*m3*y1+c3*cp2*m2*x1*y1+c2*cp3*m2*x1*y1+c3*cp3*m2*x1*y1+cp2*cp3*m2*x1*y1+c3*cp1*m1*m2*x1*y1+c3*cp2*m1*m2*x1*y1+c1*cp3*m1*m2*x1*y1+c2*cp3*m1*m2*x1*y1+c3*cp3*m1*m2*x1*y1+cp2*cp3*m1*m2*x1*y1+cp2*m3*x1*y1+c2*cp2*m3*x1*y1+c3*cp2*m3*x1*y1+c2*cp3*m3*x1*y1+c1*cp1*m2*m3*x1*y1+c2*cp1*m2*m3*x1*y1+c3*cp1*m2*m3*x1*y1+c1*cp2*m2*m3*x1*y1+c2*cp2*m2*m3*x1*y1+c3*cp2*m2*m3*x1*y1+c1*cp3*m2*m3*x1*y1+c2*cp3*m2*m3*x1*y1+c3*cp3*m2*m3*x1*y1+cp1*cp3*m2*m3*x1*y1+cp2*m1*m2*m3*x1*y1+cp1*cp2*m1*m2*m3*x1*y1+cp3*m1*m2*m3*x1*y1+cp1*cp3*m1*m2*m3*x1*y1+cp3*m3*x2*y1+c3*cp3*m3*x2*y1+cp3*m1*m3*x2*y1+c3*cp3*m1*m3*x2*y1+c1*cp1*m2*m3*x2*y1+c2*cp1*m2*m3*x2*y1+c3*cp1*m2*m3*x2*y1+c1*cp2*m2*m3*x2*y1+c2*cp2*m2*m3*x2*y1+c3*cp2*m2*m3*x2*y1+cp3*m2*m3*x2*y1+c1*cp3*m2*m3*x2*y1+c2*cp3*m2*m3*x2*y1+c3*cp3*m2*m3*x2*y1+cp1*cp3*m2*m3*x2*y1+cp2*cp3*m2*m3*x2*y1+c1*cp1*m1*m2*m3*x2*y1+c2*cp1*m1*m2*m3*x2*y1+c3*cp1*m1*m2*m3*x2*y1+c1*cp2*m1*m2*m3*x2*y1+c2*cp2*m1*m2*m3*x2*y1+c3*cp2*m1*m2*m3*x2*y1+cp3*m1*m2*m3*x2*y1+c1*cp3*m1*m2*m3*x2*y1+c2*cp3*m1*m2*m3*x2*y1+c3*cp3*m1*m2*m3*x2*y1+cp1*cp3*m1*m2*m3*x2*y1+cp2*cp3*m1*m2*m3*x2*y1+c1*c3*cp1*y2+c1*c3*cp2*y2+c1*c3*cp1*cp2*y2+c1*c2*cp3*y2+c1*cp1*cp3*y2+c1*c2*cp1*cp3*y2+c1*c3*cp1*cp3*y2+c3*cp1*m1*y2+cp1*cp3*m1*y2+c3*cp1*cp3*m1*y2+c1*c3*cp1*m2*y2+c1*c3*cp2*m2*y2+c1*c3*cp1*cp2*m2*y2+c1*c2*cp3*m2*y2+c1*cp1*cp3*m2*y2+c1*c2*cp1*cp3*m2*y2+c1*c3*cp1*cp3*m2*y2+c3*cp1*m1*m2*y2+c2*c3*cp1*m1*m2*y2+c2*c3*cp1*cp2*m1*m2*y2+cp1*cp3*m1*m2*y2+c2*cp1*cp3*m1*m2*y2+c1*c2*cp1*cp3*m1*m2*y2+c3*cp1*cp3*m1*m2*y2+c2*c3*cp1*cp3*m1*m2*y2+c2*cp1*cp2*cp3*m1*m2*y2+c1*cp1*m3*y2+c1*c2*cp1*m3*y2+c1*c3*cp1*m3*y2+c1*cp2*m3*y2+c1*c2*cp2*m3*y2+c1*c3*cp2*m3*y2+c1*cp1*cp2*m3*y2+c1*c2*cp1*cp2*m3*y2+c1*c3*cp1*cp2*m3*y2+c1*c2*cp3*m3*y2+c1*c2*cp1*cp3*m3*y2+c1*cp2*cp3*m3*y2+c1*c3*cp2*cp3*m3*y2+cp1*m1*m3*y2+c2*cp1*m1*m3*y2+c3*cp1*m1*m3*y2+cp1*cp2*cp3*m1*m3*y2+c3*cp1*cp2*cp3*m1*m3*y2+c1*cp1*m2*m3*y2+c1*c2*cp1*m2*m3*y2+c1*c3*cp1*m2*m3*y2+c1*cp2*m2*m3*y2+c1*c3*cp2*m2*m3*y2+c2*cp1*cp2*m2*m3*y2+c1*c2*cp1*cp2*m2*m3*y2+c2*c3*cp1*cp2*m2*m3*y2+c1*cp1*cp3*m2*m3*y2+c1*c2*cp1*cp3*m2*m3*y2+c1*c3*cp1*cp3*m2*m3*y2+c1*c3*cp2*cp3*m2*m3*y2+c1*cp1*cp2*cp3*m2*m3*y2+c2*cp1*cp2*cp3*m2*m3*y2+cp1*m1*m2*m3*y2+c3*cp1*m1*m2*m3*y2+cp1*cp2*m1*m2*m3*y2+c3*cp1*cp2*m1*m2*m3*y2+cp1*cp3*m1*m2*m3*y2+c3*cp1*cp3*m1*m2*m3*y2+cp1*cp2*cp3*m1*m2*m3*y2+c3*cp1*cp2*cp3*m1*m2*m3*y2+c3*cp1*x1*y2+c3*cp2*x1*y2+c1*cp3*x1*y2+c2*cp3*x1*y2+c3*cp3*x1*y2+c3*cp1*m1*x1*y2+c3*cp2*m1*x1*y2+c1*cp3*m1*x1*y2+c2*cp3*m1*x1*y2+c3*cp3*m1*x1*y2+c3*cp1*m2*x1*y2+c3*cp2*m2*x1*y2+c1*cp3*m2*x1*y2+c2*cp3*m2*x1*y2+c3*cp3*m2*x1*y2+c3*cp1*m1*m2*x1*y2+c3*cp2*m1*m2*x1*y2+c1*cp3*m1*m2*x1*y2+c2*cp3*m1*m2*x1*y2+c3*cp3*m1*m2*x1*y2+c1*cp1*m3*x1*y2+c2*cp1*m3*x1*y2+c3*cp1*m3*x1*y2+c1*cp2*m3*x1*y2+c2*cp2*m3*x1*y2+c3*cp2*m3*x1*y2+cp3*m3*x1*y2+c1*cp3*m3*x1*y2+c2*cp3*m3*x1*y2+c1*cp1*m1*m3*x1*y2+c2*cp1*m1*m3*x1*y2+c3*cp1*m1*m3*x1*y2+c1*cp2*m1*m3*x1*y2+c2*cp2*m1*m3*x1*y2+c3*cp2*m1*m3*x1*y2+cp3*m1*m3*x1*y2+c1*cp3*m1*m3*x1*y2+c2*cp3*m1*m3*x1*y2+c1*cp1*m2*m3*x1*y2+c2*cp1*m2*m3*x1*y2+c3*cp1*m2*m3*x1*y2+c1*cp2*m2*m3*x1*y2+c2*cp2*m2*m3*x1*y2+c3*cp2*m2*m3*x1*y2+c1*cp3*m2*m3*x1*y2+c2*cp3*m2*m3*x1*y2+c3*cp3*m2*m3*x1*y2+c1*cp1*m1*m2*m3*x1*y2+c2*cp1*m1*m2*m3*x1*y2+c3*cp1*m1*m2*m3*x1*y2+c1*cp2*m1*m2*m3*x1*y2+c2*cp2*m1*m2*m3*x1*y2+c3*cp2*m1*m2*m3*x1*y2+c1*cp3*m1*m2*m3*x1*y2+c2*cp3*m1*m2*m3*x1*y2+c3*cp3*m1*m2*m3*x1*y2+c3*cp1*m1*m2*x2*y2+c3*cp2*m1*m2*x2*y2+c1*cp3*m1*m2*x2*y2+c2*cp3*m1*m2*x2*y2+c3*cp3*m1*m2*x2*y2+cp2*cp3*m1*m2*x2*y2+c1*cp1*m2*m3*x2*y2+c2*cp1*m2*m3*x2*y2+c3*cp1*m2*m3*x2*y2+c1*cp2*m2*m3*x2*y2+c1*cp3*m2*m3*x2*y2+cp1*cp3*m2*m3*x2*y2+cp2*m1*m2*m3*x2*y2+cp1*cp2*m1*m2*m3*x2*y2+cp3*m1*m2*m3*x2*y2+cp1*cp3*m1*m2*m3*x2*y2+c1*cp1*m1*m3*y1*y2+c2*cp1*m1*m3*y1*y2+c3*cp1*m1*m3*y1*y2+cp2*m1*m3*y1*y2+c1*cp2*m1*m3*y1*y2+c2*cp2*m1*m3*y1*y2+c3*cp2*m1*m3*y1*y2+cp1*cp2*m1*m3*y1*y2+c1*cp3*m1*m3*y1*y2+c2*cp3*m1*m3*y1*y2+cp1*cp3*m1*m3*y1*y2+c1*cp1*m1*m2*m3*y1*y2+c2*cp1*m1*m2*m3*y1*y2+c3*cp1*m1*m2*m3*y1*y2+cp2*m1*m2*m3*y1*y2+c1*cp2*m1*m2*m3*y1*y2+c2*cp2*m1*m2*m3*y1*y2+c3*cp2*m1*m2*m3*y1*y2+cp1*cp2*m1*m2*m3*y1*y2+cp3*m1*m2*m3*y1*y2+c1*cp3*m1*m2*m3*y1*y2+c2*cp3*m1*m2*m3*y1*y2+c3*cp3*m1*m2*m3*y1*y2+cp1*cp3*m1*m2*m3*y1*y2+c1*c2*cp2*y3+c1*cp1*cp2*y3+c2*cp1*cp2*y3+c1*c3*cp1*cp2*y3+c2*c3*cp1*cp2*y3+c1*c2*cp3*y3+c1*cp2*cp3*y3+c1*c3*cp2*cp3*y3+c2*cp1*m1*y3+c1*c2*cp1*m1*y3+c2*c3*cp1*m1*y3+cp1*cp2*m1*y3+c2*cp1*cp2*m1*y3+c1*c2*cp1*cp2*m1*y3+c3*cp1*cp2*m1*y3+c2*c3*cp1*cp2*m1*y3+c2*cp1*cp3*m1*y3+c1*c2*cp1*cp3*m1*y3+c2*c3*cp1*cp3*m1*y3+cp1*cp2*cp3*m1*y3+c3*cp1*cp2*cp3*m1*y3+c2*cp1*m2*y3+c1*c2*cp1*m2*y3+c2*c3*cp1*m2*y3+c1*cp2*m2*y3+c2*cp1*cp2*m2*y3+c1*c2*cp1*cp2*m2*y3+c2*c3*cp1*cp2*m2*y3+c2*cp1*cp3*m2*y3+c1*c2*cp1*cp3*m2*y3+c2*c3*cp1*cp3*m2*y3+c1*cp2*cp3*m2*y3+c1*cp1*cp2*cp3*m2*y3+c3*cp2*m1*m2*y3+c1*c3*cp2*m1*m2*y3+c2*c3*cp2*m1*m2*y3+c1*c3*cp1*cp2*m1*m2*y3+c2*c3*cp1*cp2*m1*m2*y3+c1*c3*cp2*cp3*m1*m2*y3+c2*c3*cp2*cp3*m1*m2*y3+cp1*cp2*cp3*m1*m2*y3+c1*cp1*cp2*cp3*m1*m2*y3+c3*cp1*cp2*cp3*m1*m2*y3+c1*c2*cp2*m3*y3+c1*cp1*cp2*m3*y3+c2*cp1*cp2*m3*y3+c1*c3*cp1*cp2*m3*y3+c2*c3*cp1*cp2*m3*y3+c1*c2*cp3*m3*y3+c1*cp2*cp3*m3*y3+c1*c3*cp2*cp3*m3*y3+c2*cp1*m1*m3*y3+cp1*cp2*m1*m3*y3+c3*cp1*cp2*m1*m3*y3+cp1*cp2*cp3*m1*m3*y3+c3*cp1*cp2*cp3*m1*m3*y3+c2*cp1*m2*m3*y3+c1*cp2*m2*m3*y3+c1*c3*cp2*m2*m3*y3+cp1*cp2*m2*m3*y3+c3*cp1*cp2*m2*m3*y3+c1*c3*cp1*cp2*m2*m3*y3+c2*c3*cp1*cp2*m2*m3*y3+c1*cp2*cp3*m2*m3*y3+c1*c3*cp2*cp3*m2*m3*y3+cp1*cp2*cp3*m2*m3*y3+c3*cp2*m1*m2*m3*y3+cp1*cp2*m1*m2*m3*y3+c3*cp1*cp2*m1*m2*m3*y3+c3*cp2*cp3*m1*m2*m3*y3+c3*cp1*cp2*cp3*m1*m2*m3*y3+c1*cp1*x2*y3+c2*cp1*x2*y3+c3*cp1*x2*y3+c1*cp2*x2*y3+c1*cp3*x2*y3+m1*x2*y3+c1*cp1*m1*x2*y3+c2*cp1*m1*x2*y3+c3*cp1*m1*x2*y3+c1*cp2*m1*x2*y3+c2*cp2*m1*x2*y3+c3*cp2*m1*x2*y3+c1*cp3*m1*x2*y3+c2*cp3*m1*x2*y3+c3*cp3*m1*x2*y3+c1*cp1*m2*x2*y3+c2*cp1*m2*x2*y3+c3*cp1*m2*x2*y3+c1*cp2*m2*x2*y3+c1*cp3*m2*x2*y3+m1*m2*x2*y3+c1*cp1*m1*m2*x2*y3+c2*cp1*m1*m2*x2*y3+c3*cp1*m1*m2*x2*y3+c1*cp2*m1*m2*x2*y3+c2*cp2*m1*m2*x2*y3+c3*cp2*m1*m2*x2*y3+c1*cp3*m1*m2*x2*y3+c2*cp3*m1*m2*x2*y3+c3*cp3*m1*m2*x2*y3+c1*cp1*m3*x2*y3+c2*cp1*m3*x2*y3+c3*cp1*m3*x2*y3+c1*cp2*m3*x2*y3+c1*cp3*m3*x2*y3+cp2*m1*m3*x2*y3+cp1*cp2*m1*m3*x2*y3+cp3*m1*m3*x2*y3+cp1*cp3*m1*m3*x2*y3+c1*cp1*m2*m3*x2*y3+c2*cp1*m2*m3*x2*y3+c3*cp1*m2*m3*x2*y3+c1*cp2*m2*m3*x2*y3+c1*cp3*m2*m3*x2*y3+cp2*m1*m2*m3*x2*y3+cp1*cp2*m1*m2*m3*x2*y3+cp3*m1*m2*m3*x2*y3+cp1*cp3*m1*m2*m3*x2*y3+m1*m2*x3*y3+c1*cp1*m1*m2*x3*y3+c2*cp1*m1*m2*x3*y3+c3*cp1*m1*m2*x3*y3+cp2*m1*m2*x3*y3+c1*cp2*m1*m2*x3*y3+c2*cp2*m1*m2*x3*y3+c3*cp2*m1*m2*x3*y3+cp1*cp2*m1*m2*x3*y3+c1*cp3*m1*m2*x3*y3+c2*cp3*m1*m2*x3*y3+c3*cp3*m1*m2*x3*y3+cp2*cp3*m1*m2*x3*y3+c1*cp1*m2*m3*x3*y3+c2*cp1*m2*m3*x3*y3+c3*cp1*m2*m3*x3*y3+c1*cp2*m2*m3*x3*y3+c1*cp3*m2*m3*x3*y3+cp1*cp3*m2*m3*x3*y3+cp2*m1*m2*m3*x3*y3+cp1*cp2*m1*m2*m3*x3*y3+cp3*m1*m2*m3*x3*y3+cp1*cp3*m1*m2*m3*x3*y3+c2*c3*cp1*z1+c2*c3*cp2*z1+c3*cp1*cp2*z1+c1*c2*cp3*z1+c2*c3*cp3*z1+c1*cp2*cp3*z1+c2*cp2*cp3*z1+c3*cp2*cp3*z1+c2*cp1*cp3*m1*z1+cp1*cp2*cp3*m1*z1+c3*cp1*m2*z1+c3*cp2*m2*z1+c1*cp1*cp3*m2*z1+c3*cp1*cp3*m2*z1+cp2*cp3*m2*z1+c1*cp2*cp3*m2*z1+c3*cp2*cp3*m2*z1+cp1*cp2*cp3*m2*z1+cp1*cp3*m1*m2*z1+cp1*cp2*cp3*m1*m2*z1+c1*cp2*m3*z1+c2*cp3*m3*z1+cp1*cp2*m1*m3*z1+cp1*cp3*m2*m3*z1+cp2*cp3*m2*m3*z1+c1*c2*cp3*z2+c1*cp2*cp3*z2+c2*cp1*cp3*m1*z2+cp1*cp2*cp3*m1*z2+c1*cp1*cp3*m2*z2+c2*cp1*cp3*m2*z2+c1*cp2*cp3*m2*z2+cp1*cp3*m1*m2*z2+cp1*cp2*cp3*m1*m2*z2+c1*cp2*m3*z2+cp1*cp2*m1*m3*z2+cp1*cp3*m2*m3*z2+c1*c2*cp1*z3+c1*c2*cp2*z3+c1*cp1*cp2*z3+c2*cp1*cp2*z3+c1*c2*cp3*z3+c1*cp2*cp3*z3+c2*cp1*m1*z3+cp1*cp2*m1*z3+c2*cp1*cp2*m1*z3+c2*cp1*cp3*m1*z3+cp1*cp2*cp3*m1*z3+c1*cp2*m2*z3+c1*cp1*cp3*m2*z3+c2*cp1*cp3*m2*z3+c1*cp2*cp3*m2*z3+cp1*cp2*m1*m2*z3+cp1*cp3*m1*m2*z3+cp1*cp2*cp3*m1*m2*z3+c1*cp2*m3*z3+cp1*cp2*m1*m3*z3+cp1*cp3*m2*m3*z3+cp1*z2*z3;
end;
#####################################################################
#Space Group No. 93 (Subscript[P4,2]22)
#####################################################################
Acpin93:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cp1;
end;
#####################################################################
Acppin93:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cpp1;
end;
#####################################################################
Axyin93:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return x1+y1;
end;
#####################################################################
Azin93:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return z1+c1+cp1+cpp1;
end;
#####################################################################
BGAPin93:=function(g1,g2)
local x1, y1, z1, c1, cp1, cpp1, x2, y2, z2, c2, cp2, cpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];cpp2:=g2[6];
return x2*y1+cpp1*x2*y1+cpp1*x2*y2+cpp1*y1*y2;
end;
#####################################################################
#Space Group No. 94 (Subscript[P4,2]*Subscript[2,1]2)
#####################################################################
Acpin94:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cp1;
end;
#####################################################################
Acppin94:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cpp1;
end;
#####################################################################
Azin94:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return z1+c1;
end;
#####################################################################
BGAPin94:=function(g1,g2)
local x1, y1, z1, c1, cp1, cpp1, x2, y2, z2, c2, cp2, cpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];cpp2:=g2[6];
return c2*x1+cp2*cpp1*x1+cp1*x2+cp1*cpp1*x2+cp2*cpp1*x2+c2*y1+cp2*cpp1*y1+cp1*cpp1*y2+cp2*cpp1*y2;
end;
#####################################################################
CGAPin94:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c2*c3+c1*c3*cp1*cp2+c2*c3*cp1*cp2+c1*c2*cp1*cp3+c1*cp2*cp3+c1*c3*cp2*cp3+c2*cp1*cp2*cp3+c3*cp1*cp2*cp3+c2*c3*m1+c3*cp1*cp2*m1+cp1*cp2*cp3*m1+c2*cp1*cp2*cp3*m1+c1*c3*cp2*m2+cp1*cp2*cp3*m2+c1*cp1*cp2*cp3*m2+c2*cp1*cp2*cp3*m2+c3*cp1*cp2*m1*m2+c1*cp3*m1*m2+cp1*cp3*m1*m2+c2*cp1*cp3*m1*m2+c3*cp1*cp3*m1*m2+c3*cp2*cp3*m1*m2+c1*c2*cp2*m3+c1*c3*cp2*m3+c1*c2*cp3*m3+c2*cp1*cp2*m1*m3+c3*cp1*cp2*m1*m3+c2*cp1*cp3*m1*m3+c1*cp3*m2*m3+c3*cp1*cp3*m2*m3+c1*cp2*cp3*m2*m3+m1*m2*m3+cp1*cp3*m1*m2*m3+cp1*cp2*cp3*m1*m2*m3+c2*c3*x1+c3*cp2*x1+c2*cp3*x1+cp2*cp3*x1+c3*cp2*m1*x1+c2*cp3*m1*x1+cp2*cp3*m1*x1+c2*cp3*m2*x1+cp2*cp3*m2*x1+cp2*cp3*m1*m2*x1+c3*cp2*m1*x2+cp2*cp3*m1*x2+cp2*cp3*m1*m2*x2+c2*cp1*x3+cp1*cp2*x3+c2*cp1*m1*x3+c3*cp2*m1*x3+cp1*cp2*m1*x3+cp2*cp3*m1*x3+c2*cp1*m2*x3+cp1*cp2*m2*x3+c3*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+cp2*cp3*m1*m2*x3+m1*m2*x2*x3+c2*c3*y1+c3*cp2*m1*y1+c2*cp3*m1*y1+cp2*cp3*m1*y1+c2*cp3*m2*y1+cp2*cp3*m1*m2*y1+c2*cp1*m1*y3+c2*cp1*m2*y3+cp1*cp2*m2*y3+c3*cp2*m1*m2*y3+cp1*cp2*m1*m2*y3+m1*x2*y3+m1*m2*x2*y3+m1*m2*x3*y3;
end;
#####################################################################
#Space Group No. 95 (Subscript[P4,3]22)
#####################################################################
Acpin95:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cp1;
end;
#####################################################################
Acppin95:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cpp1;
end;
#####################################################################
Axyin95:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return x1+y1;
end;
#####################################################################
BGAPin95:=function(g1,g2)
local x1, y1, z1, c1, cp1, cpp1, x2, y2, z2, c2, cp2, cpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];cpp2:=g2[6];
return x2*y1+cpp1*x2*y1+cpp1*x2*y2+cpp1*y1*y2;
end;
#####################################################################
#Space Group No. 96 (Subscript[P4,3]*Subscript[2,2]2)
#####################################################################
Acpin96:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cp1;
end;
#####################################################################
Acppin96:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cpp1;
end;
#####################################################################
BGAPin96:=function(g1,g2)
local x1, y1, z1, c1, cp1, cpp1, x2, y2, z2, c2, cp2, cpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];cpp2:=g2[6];
return c2*x1+cp2*cpp1*x1+cp1*x2+cp1*cpp1*x2+cp2*cpp1*x2+c2*y1+cp2*cpp1*y1+cp1*cpp1*y2+cp2*cpp1*y2;
end;
#####################################################################
CGAPin96:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c3*cp1*cp2+c1*c2*cp1*cp3+c1*c2*c3*cp1*cp3+c1*c2*c3*cp2*cp3+c2*cp1*cp2*cp3+c1*c2*c3*cp1*cp2*cp3+c1*c2*c3*cp1*m1+c1*c2*c3*cp2*m1+c3*cp1*cp2*m1+c2*c3*cp1*cp2*m1+c1*c2*cp3*m1+c1*c2*c3*cp3*m1+c1*c2*cp1*cp3*m1+c1*cp2*cp3*m1+c1*c2*cp2*cp3*m1+c1*c3*cp2*cp3*m1+c1*cp1*cp2*cp3*m1+c2*cp1*cp2*cp3*m1+c1*c2*cp1*cp2*cp3*m1+c3*cp1*cp2*cp3*m1+c2*c3*cp1*cp2*cp3*m1+c1*c3*cp1*m2+c1*c2*c3*cp1*m2+c1*c3*cp2*m2+c1*c2*c3*cp2*m2+c2*c3*cp1*cp2*m2+c1*c2*c3*cp1*cp2*m2+c1*c2*c3*cp3*m2+c2*cp1*cp3*m2+c1*c2*cp1*cp3*m2+c1*c3*cp1*cp3*m2+c1*c2*c3*cp1*cp3*m2+c1*cp2*cp3*m2+c1*c3*cp2*cp3*m2+c1*cp1*cp2*cp3*m2+c2*c3*cp1*cp2*cp3*m2+c3*cp1*m1*m2+c1*c3*cp1*m1*m2+c3*cp2*m1*m2+c2*c3*cp2*m1*m2+c1*c3*cp1*cp2*m1*m2+c2*cp1*cp3*m1*m2+c1*c2*cp1*cp3*m1*m2+c3*cp1*cp3*m1*m2+c1*c3*cp1*cp3*m1*m2+c2*c3*cp1*cp3*m1*m2+c3*cp2*cp3*m1*m2+c2*c3*cp2*cp3*m1*m2+c1*cp1*cp2*cp3*m1*m2+c3*cp1*cp2*cp3*m1*m2+c1*c3*cp1*cp2*cp3*m1*m2+c2*c3*cp1*cp2*cp3*m1*m2+c1*c2*cp1*m3+c1*c2*cp2*m3+c1*c3*cp2*m3+c1*c2*c3*cp2*m3+c1*cp1*cp2*m3+c2*cp1*cp2*m3+c1*c3*cp1*cp2*m3+c2*c3*cp1*cp2*m3+c1*c2*cp3*m3+c1*c2*c3*cp3*m3+c1*cp2*cp3*m3+c1*c3*cp2*cp3*m3+c2*cp1*cp2*cp3*m3+c1*c3*cp1*cp2*cp3*m3+c2*c3*cp1*cp2*cp3*m3+c1*c2*c3*cp1*cp2*cp3*m3+c2*cp1*m1*m3+c2*c3*cp1*m1*m3+c1*cp2*m1*m3+cp1*cp2*m1*m3+c1*cp1*cp2*m1*m3+c2*cp1*cp2*m1*m3+c1*c2*cp3*m1*m3+c2*cp1*cp3*m1*m3+c1*c2*cp1*cp3*m1*m3+cp1*cp2*cp3*m1*m3+c3*cp1*cp2*cp3*m1*m3+c2*c3*cp1*cp2*cp3*m1*m3+c1*c2*cp1*m2*m3+c3*cp1*m2*m3+c1*c3*cp1*m2*m3+c2*c3*cp1*m2*m3+c1*c2*cp1*cp2*m2*m3+c1*c2*cp3*m2*m3+c2*cp1*cp3*m2*m3+c3*cp1*cp3*m2*m3+c1*c3*cp1*cp3*m2*m3+c2*c3*cp1*cp3*m2*m3+c2*cp1*cp2*cp3*m2*m3+m1*m2*m3+c3*cp2*m1*m2*m3+c1*cp2*cp3*m1*m2*m3+c3*cp2*cp3*m1*m2*m3+cp1*cp2*cp3*m1*m2*m3+c1*cp1*cp2*cp3*m1*m2*m3+c2*c3*cp1*x1+c2*c3*cp1*cp2*x1+c2*cp3*x1+c2*cp1*cp3*x1+c1*c2*cp1*cp3*x1+c2*c3*cp1*cp3*x1+cp2*cp3*x1+c1*cp1*cp2*cp3*x1+c2*cp1*cp2*cp3*x1+c3*cp1*cp2*cp3*x1+c2*c3*cp1*m1*x1+c1*c3*cp2*m1*x1+c3*cp1*cp2*m1*x1+c2*c3*cp1*cp2*m1*x1+c2*cp3*m1*x1+c1*c2*cp3*m1*x1+c2*c3*cp3*m1*x1+c1*c2*cp1*cp3*m1*x1+c2*c3*cp1*cp3*m1*x1+cp2*cp3*m1*x1+c1*cp1*cp2*cp3*m1*x1+c2*cp1*cp2*cp3*m1*x1+c3*cp1*cp2*cp3*m1*x1+c3*cp1*m2*x1+c1*c3*cp1*m2*x1+c2*c3*cp1*m2*x1+c1*c3*cp2*m2*x1+c3*cp1*cp2*m2*x1+c2*c3*cp1*cp2*m2*x1+c2*cp3*m2*x1+c1*c2*cp3*m2*x1+c2*c3*cp3*m2*x1+cp1*cp3*m2*x1+c1*cp1*cp3*m2*x1+c1*c2*cp1*cp3*m2*x1+c2*c3*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c1*cp2*cp3*m2*x1+c3*cp2*cp3*m2*x1+cp1*cp2*cp3*m2*x1+c1*cp1*cp2*cp3*m2*x1+c2*cp1*cp2*cp3*m2*x1+c3*cp1*cp2*cp3*m2*x1+c3*cp1*m1*m2*x1+c1*c3*cp1*m1*m2*x1+c3*cp1*cp2*m1*m2*x1+c1*c3*cp1*cp2*m1*m2*x1+cp1*cp3*m1*m2*x1+c1*cp1*cp3*m1*m2*x1+c2*cp1*cp3*m1*m2*x1+c1*c2*cp1*cp3*m1*m2*x1+c3*cp1*cp3*m1*m2*x1+c1*c3*cp1*cp3*m1*m2*x1+cp2*cp3*m1*m2*x1+c1*cp2*cp3*m1*m2*x1+c3*cp2*cp3*m1*m2*x1+c3*cp1*cp2*cp3*m1*m2*x1+c2*cp1*m3*x1+cp2*m3*x1+c1*cp2*m3*x1+c2*cp2*m3*x1+c1*c2*cp2*m3*x1+c3*cp2*m3*x1+c2*c3*cp2*m3*x1+c1*c2*cp1*cp2*m3*x1+c3*cp1*cp2*m3*x1+c2*c3*cp1*cp2*m3*x1+c1*c2*cp3*m3*x1+c2*c3*cp3*m3*x1+c2*cp1*cp3*m3*x1+c1*c2*cp1*cp3*m3*x1+c3*cp2*cp3*m3*x1+cp1*cp2*cp3*m3*x1+c1*cp1*cp2*cp3*m3*x1+c2*cp1*cp2*cp3*m3*x1+c2*cp1*m1*m3*x1+cp2*m1*m3*x1+c2*cp2*m1*m3*x1+c3*cp2*m1*m3*x1+c1*c3*cp2*m1*m3*x1+c2*c3*cp2*m1*m3*x1+c1*cp1*cp2*m1*m3*x1+c3*cp1*cp2*m1*m3*x1+c1*c3*cp1*cp2*m1*m3*x1+c2*c3*cp1*cp2*m1*m3*x1+c2*cp3*m1*m3*x1+c2*cp1*cp3*m1*m3*x1+c1*cp2*cp3*m1*m3*x1+c2*cp2*cp3*m1*m3*x1+c3*cp2*cp3*m1*m3*x1+c1*c3*cp2*cp3*m1*m3*x1+c2*c3*cp2*cp3*m1*m3*x1+c1*cp1*cp2*cp3*m1*m3*x1+c2*cp1*cp2*cp3*m1*m3*x1+c3*cp1*cp2*cp3*m1*m3*x1+cp1*m2*m3*x1+c1*cp1*m2*m3*x1+c1*c2*cp1*m2*m3*x1+c3*cp1*m2*m3*x1+c1*c3*cp1*m2*m3*x1+cp2*m2*m3*x1+c1*cp2*m2*m3*x1+c2*cp2*m2*m3*x1+c3*cp2*m2*m3*x1+c1*c3*cp2*m2*m3*x1+c2*c3*cp2*m2*m3*x1+c2*cp1*cp2*m2*m3*x1+c1*c2*cp1*cp2*m2*m3*x1+c2*c3*cp1*cp2*m2*m3*x1+c2*cp3*m2*m3*x1+c1*c2*cp1*cp3*m2*m3*x1+c3*cp1*cp3*m2*m3*x1+c1*c3*cp1*cp3*m2*m3*x1+c2*cp2*cp3*m2*m3*x1+c3*cp2*cp3*m2*m3*x1+c1*c3*cp2*cp3*m2*m3*x1+c2*c3*cp2*cp3*m2*m3*x1+cp1*cp2*cp3*m2*m3*x1+c1*cp1*cp2*cp3*m2*m3*x1+c2*cp1*cp2*cp3*m2*m3*x1+c3*cp1*cp2*cp3*m2*m3*x1+cp2*m1*m2*m3*x1+c3*cp2*m1*m2*m3*x1+cp1*cp2*m1*m2*m3*x1+c3*cp1*cp2*m1*m2*m3*x1+c3*cp2*cp3*m1*m2*m3*x1+c2*c3*cp1*x2+c1*c3*cp2*x2+c3*cp1*cp2*x2+c1*c3*cp1*cp2*x2+c2*cp1*cp3*x2+c1*c2*cp1*cp3*x2+c2*c3*cp1*cp3*x2+c1*c3*cp2*cp3*x2+c2*c3*cp1*m1*x2+c1*c3*cp2*m1*x2+c2*c3*cp2*m1*x2+c3*cp1*cp2*m1*x2+c1*c3*cp1*cp2*m1*x2+c2*cp1*cp3*m1*x2+c1*c2*cp1*cp3*m1*x2+c2*c3*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c3*cp2*cp3*m1*x2+c1*c3*cp2*cp3*m1*x2+c2*c3*cp2*cp3*m1*x2+c3*cp1*m2*x2+c1*c3*cp1*m2*x2+c2*c3*cp1*m2*x2+c3*cp1*cp2*m2*x2+c1*c2*cp3*m2*x2+cp1*cp3*m2*x2+c1*cp1*cp3*m2*x2+c2*cp1*cp3*m2*x2+c3*cp1*cp3*m2*x2+c1*c3*cp1*cp3*m2*x2+c2*c3*cp1*cp3*m2*x2+c1*cp2*cp3*m2*x2+c1*c3*cp2*cp3*m2*x2+c1*cp1*cp2*cp3*m2*x2+c3*cp1*m1*m2*x2+c2*c3*cp1*m1*m2*x2+c3*cp2*m1*m2*x2+c3*cp1*cp2*m1*m2*x2+c2*c3*cp1*cp2*m1*m2*x2+cp1*cp3*m1*m2*x2+c2*cp1*cp3*m1*m2*x2+c1*c2*cp1*cp3*m1*m2*x2+c3*cp1*cp3*m1*m2*x2+c2*c3*cp1*cp3*m1*m2*x2+cp2*cp3*m1*m2*x2+c3*cp2*cp3*m1*m2*x2+c2*cp1*m3*x2+c1*cp2*m3*x2+c1*c2*cp2*m3*x2+c1*c3*cp2*m3*x2+cp1*cp2*m3*x2+c1*cp1*cp2*m3*x2+c2*cp1*cp2*m3*x2+c3*cp1*cp2*m3*x2+c1*c2*cp3*m3*x2+cp1*cp3*m3*x2+c1*cp1*cp3*m3*x2+c3*cp1*cp3*m3*x2+c1*c3*cp1*cp3*m3*x2+c1*c3*cp2*cp3*m3*x2+cp1*cp2*cp3*m3*x2+c3*cp1*cp2*cp3*m3*x2+c2*cp1*m1*m3*x2+c3*cp2*m1*m3*x2+cp1*cp3*m1*m3*x2+c3*cp1*cp3*m1*m3*x2+c3*cp2*cp3*m1*m3*x2+c3*cp1*cp2*cp3*m1*m3*x2+cp1*m2*m3*x2+c1*cp1*m2*m3*x2+c1*c2*cp1*m2*m3*x2+c3*cp1*m2*m3*x2+c1*c3*cp1*m2*m3*x2+c1*cp2*m2*m3*x2+c1*c3*cp2*m2*m3*x2+c2*cp1*cp2*m2*m3*x2+c1*c2*cp1*cp2*m2*m3*x2+c2*c3*cp1*cp2*m2*m3*x2+cp1*cp3*m2*m3*x2+c1*cp1*cp3*m2*m3*x2+c1*c2*cp1*cp3*m2*m3*x2+c3*cp1*cp3*m2*m3*x2+c1*c3*cp1*cp3*m2*m3*x2+c1*c3*cp2*cp3*m2*m3*x2+c1*cp1*cp2*cp3*m2*m3*x2+c3*cp1*cp2*cp3*m2*m3*x2+cp1*m1*m2*m3*x2+c3*cp1*m1*m2*m3*x2+cp1*cp2*m1*m2*m3*x2+c3*cp1*cp2*m1*m2*m3*x2+cp1*cp3*m1*m2*m3*x2+c3*cp1*cp3*m1*m2*m3*x2+cp1*cp2*cp3*m1*m2*m3*x2+c3*cp1*cp2*cp3*m1*m2*m3*x2+c3*cp1*m1*m2*x1*x2+c3*cp2*m1*m2*x1*x2+c1*cp3*m1*m2*x1*x2+c2*cp3*m1*m2*x1*x2+c3*cp3*m1*m2*x1*x2+cp2*cp3*m1*m2*x1*x2+cp3*m1*m3*x1*x2+c3*cp3*m1*m3*x1*x2+c1*cp1*m1*m2*m3*x1*x2+c2*cp1*m1*m2*m3*x1*x2+c3*cp1*m1*m2*m3*x1*x2+cp2*m1*m2*m3*x1*x2+c1*cp2*m1*m2*m3*x1*x2+c2*cp2*m1*m2*m3*x1*x2+c3*cp2*m1*m2*m3*x1*x2+cp1*cp2*m1*m2*m3*x1*x2+c1*cp3*m1*m2*m3*x1*x2+c2*cp3*m1*m2*m3*x1*x2+c3*cp3*m1*m2*m3*x1*x2+cp2*cp3*m1*m2*m3*x1*x2+c1*c2*cp1*x3+c2*c3*cp1*x3+c1*c3*cp2*x3+cp1*cp2*x3+c2*cp1*cp2*x3+c1*c2*cp1*cp2*x3+c3*cp1*cp2*x3+c1*c3*cp1*cp2*x3+c2*cp1*cp3*x3+c1*c2*cp1*cp3*x3+c2*c3*cp1*cp3*x3+c1*c3*cp2*cp3*x3+c1*c2*cp1*m1*x3+c2*c3*cp1*m1*x3+c1*c3*cp2*m1*x3+c2*c3*cp2*m1*x3+cp1*cp2*m1*x3+c2*cp1*cp2*m1*x3+c1*c2*cp1*cp2*m1*x3+c3*cp1*cp2*m1*x3+c1*c3*cp1*cp2*m1*x3+c2*cp1*cp3*m1*x3+c1*c2*cp1*cp3*m1*x3+c2*c3*cp1*cp3*m1*x3+cp2*cp3*m1*x3+c3*cp2*cp3*m1*x3+c1*c3*cp2*cp3*m1*x3+c2*c3*cp2*cp3*m1*x3+c1*c2*cp1*m2*x3+c2*c3*cp1*m2*x3+c1*c3*cp2*m2*x3+cp1*cp2*m2*x3+c2*cp1*cp2*m2*x3+c1*c2*cp1*cp2*m2*x3+c3*cp1*cp2*m2*x3+c1*c3*cp1*cp2*m2*x3+c2*cp1*cp3*m2*x3+c1*c2*cp1*cp3*m2*x3+c2*c3*cp1*cp3*m2*x3+c1*c3*cp2*cp3*m2*x3+c1*c3*cp2*m1*m2*x3+c2*c3*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+c3*cp1*cp2*m1*m2*x3+c1*c3*cp1*cp2*m1*m2*x3+c2*c3*cp1*cp2*m1*m2*x3+cp2*cp3*m1*m2*x3+c3*cp2*cp3*m1*m2*x3+c1*c3*cp2*cp3*m1*m2*x3+c2*c3*cp2*cp3*m1*m2*x3+c2*cp1*cp2*cp3*m1*m2*x3+c2*cp1*m3*x3+c1*cp2*m3*x3+c1*c2*cp2*m3*x3+c1*c3*cp2*m3*x3+cp1*cp2*m3*x3+c1*cp1*cp2*m3*x3+c2*cp1*cp2*m3*x3+c3*cp1*cp2*m3*x3+c1*c2*cp3*m3*x3+c1*cp2*cp3*m3*x3+c2*cp1*m1*m3*x3+c3*cp2*m1*m3*x3+c3*cp2*cp3*m1*m3*x3+cp1*cp2*cp3*m1*m3*x3+c2*cp1*m2*m3*x3+c1*cp2*m2*m3*x3+c1*c3*cp2*m2*m3*x3+cp1*cp2*m2*m3*x3+c3*cp1*cp2*m2*m3*x3+c1*c3*cp1*cp2*m2*m3*x3+c2*c3*cp1*cp2*m2*m3*x3+c1*cp2*cp3*m2*m3*x3+c1*c3*cp2*cp3*m2*m3*x3+c1*cp1*cp2*cp3*m2*m3*x3+c2*cp1*cp2*cp3*m2*m3*x3+c3*cp2*m1*m2*m3*x3+cp1*cp2*m1*m2*m3*x3+c3*cp1*cp2*m1*m2*m3*x3+c3*cp2*cp3*m1*m2*m3*x3+c3*cp1*cp2*cp3*m1*m2*m3*x3+m1*m2*x2*x3+c1*cp1*m1*m2*x2*x3+c2*cp1*m1*m2*x2*x3+c3*cp1*m1*m2*x2*x3+cp2*m1*m2*x2*x3+c1*cp2*m1*m2*x2*x3+c2*cp2*m1*m2*x2*x3+c3*cp2*m1*m2*x2*x3+cp1*cp2*m1*m2*x2*x3+c1*cp3*m1*m2*x2*x3+c2*cp3*m1*m2*x2*x3+c3*cp3*m1*m2*x2*x3+cp2*cp3*m1*m2*x2*x3+c1*cp1*m2*m3*x2*x3+c2*cp1*m2*m3*x2*x3+c3*cp1*m2*m3*x2*x3+c1*cp2*m2*m3*x2*x3+c1*cp3*m2*m3*x2*x3+cp1*cp3*m2*m3*x2*x3+cp2*m1*m2*m3*x2*x3+cp1*cp2*m1*m2*m3*x2*x3+cp3*m1*m2*m3*x2*x3+cp1*cp3*m1*m2*m3*x2*x3+c1*c3*cp2*y1+c1*c2*cp3*y1+c2*c3*cp3*y1+c1*c3*cp2*m1*y1+c2*cp3*m1*y1+c1*c2*cp3*m1*y1+c2*c3*cp3*m1*y1+cp2*cp3*m1*y1+c1*c3*cp2*m2*y1+c1*c3*cp1*cp2*m2*y1+c2*cp3*m2*y1+c1*c2*cp3*m2*y1+c2*c3*cp3*m2*y1+c1*c2*cp1*cp3*m2*y1+c1*c3*cp1*cp3*m2*y1+c1*cp1*cp2*cp3*m2*y1+c1*c3*cp1*m1*m2*y1+c1*c3*cp1*cp2*m1*m2*y1+c1*cp1*cp3*m1*m2*y1+c1*c2*cp1*cp3*m1*m2*y1+c1*c3*cp1*cp3*m1*m2*y1+cp2*cp3*m1*m2*y1+c1*cp2*cp3*m1*m2*y1+c3*cp2*cp3*m1*m2*y1+c1*cp1*cp2*cp3*m1*m2*y1+c1*cp2*m3*y1+c1*c2*cp2*m3*y1+c1*c3*cp2*m3*y1+c1*cp1*cp2*m3*y1+c1*c2*cp1*cp2*m3*y1+c1*c3*cp1*cp2*m3*y1+c2*cp3*m3*y1+c1*c2*cp3*m3*y1+c2*c3*cp3*m3*y1+c1*c2*cp1*cp3*m3*y1+c1*cp2*cp3*m3*y1+c2*cp2*cp3*m3*y1+c1*c3*cp2*cp3*m3*y1+c2*c3*cp2*cp3*m3*y1+cp2*m1*m3*y1+c2*cp2*m1*m3*y1+c3*cp2*m1*m3*y1+c1*c3*cp2*m1*m3*y1+c2*c3*cp2*m1*m3*y1+cp1*cp2*m1*m3*y1+c1*cp1*cp2*m1*m3*y1+c2*cp1*cp2*m1*m3*y1+c3*cp1*cp2*m1*m3*y1+c1*c3*cp1*cp2*m1*m3*y1+c2*c3*cp1*cp2*m1*m3*y1+c2*cp3*m1*m3*y1+c1*cp2*cp3*m1*m3*y1+c2*cp2*cp3*m1*m3*y1+c3*cp2*cp3*m1*m3*y1+c1*c3*cp2*cp3*m1*m3*y1+c2*c3*cp2*cp3*m1*m3*y1+cp1*cp2*cp3*m1*m3*y1+c1*cp1*cp2*cp3*m1*m3*y1+c2*cp1*cp2*cp3*m1*m3*y1+c1*cp1*m2*m3*y1+c1*c2*cp1*m2*m3*y1+c1*c3*cp1*m2*m3*y1+c1*cp2*m2*m3*y1+c2*cp2*m2*m3*y1+c1*c3*cp2*m2*m3*y1+c2*c3*cp2*m2*m3*y1+c2*cp1*cp2*m2*m3*y1+c1*c2*cp1*cp2*m2*m3*y1+c2*c3*cp1*cp2*m2*m3*y1+c2*cp3*m2*m3*y1+c1*c2*cp1*cp3*m2*m3*y1+c1*c3*cp1*cp3*m2*m3*y1+c2*cp2*cp3*m2*m3*y1+c1*c3*cp2*cp3*m2*m3*y1+c2*c3*cp2*cp3*m2*m3*y1+c1*cp1*cp2*cp3*m2*m3*y1+c2*cp1*cp2*cp3*m2*m3*y1+cp2*m1*m2*m3*y1+c3*cp2*m1*m2*m3*y1+cp1*cp2*m1*m2*m3*y1+c3*cp1*cp2*m1*m2*m3*y1+c3*cp2*cp3*m1*m2*m3*y1+cp1*cp2*cp3*m1*m2*m3*y1+c3*cp2*m2*x1*y1+c2*cp3*m2*x1*y1+c3*cp3*m2*x1*y1+cp2*cp3*m2*x1*y1+c3*cp1*m1*m2*x1*y1+c3*cp2*m1*m2*x1*y1+c1*cp3*m1*m2*x1*y1+c2*cp3*m1*m2*x1*y1+c3*cp3*m1*m2*x1*y1+cp2*cp3*m1*m2*x1*y1+cp2*m3*x1*y1+c2*cp2*m3*x1*y1+c3*cp2*m3*x1*y1+c2*cp3*m3*x1*y1+c1*cp1*m2*m3*x1*y1+c2*cp1*m2*m3*x1*y1+c3*cp1*m2*m3*x1*y1+c1*cp2*m2*m3*x1*y1+c2*cp2*m2*m3*x1*y1+c3*cp2*m2*m3*x1*y1+c1*cp3*m2*m3*x1*y1+c2*cp3*m2*m3*x1*y1+c3*cp3*m2*m3*x1*y1+cp1*cp3*m2*m3*x1*y1+cp2*m1*m2*m3*x1*y1+cp1*cp2*m1*m2*m3*x1*y1+cp3*m1*m2*m3*x1*y1+cp1*cp3*m1*m2*m3*x1*y1+cp3*m3*x2*y1+c3*cp3*m3*x2*y1+cp3*m1*m3*x2*y1+c3*cp3*m1*m3*x2*y1+c1*cp1*m2*m3*x2*y1+c2*cp1*m2*m3*x2*y1+c3*cp1*m2*m3*x2*y1+c1*cp2*m2*m3*x2*y1+c2*cp2*m2*m3*x2*y1+c3*cp2*m2*m3*x2*y1+cp3*m2*m3*x2*y1+c1*cp3*m2*m3*x2*y1+c2*cp3*m2*m3*x2*y1+c3*cp3*m2*m3*x2*y1+cp1*cp3*m2*m3*x2*y1+cp2*cp3*m2*m3*x2*y1+c1*cp1*m1*m2*m3*x2*y1+c2*cp1*m1*m2*m3*x2*y1+c3*cp1*m1*m2*m3*x2*y1+c1*cp2*m1*m2*m3*x2*y1+c2*cp2*m1*m2*m3*x2*y1+c3*cp2*m1*m2*m3*x2*y1+cp3*m1*m2*m3*x2*y1+c1*cp3*m1*m2*m3*x2*y1+c2*cp3*m1*m2*m3*x2*y1+c3*cp3*m1*m2*m3*x2*y1+cp1*cp3*m1*m2*m3*x2*y1+cp2*cp3*m1*m2*m3*x2*y1+c1*c3*cp1*y2+c1*c3*cp2*y2+c1*c3*cp1*cp2*y2+c1*c2*cp3*y2+c1*cp1*cp3*y2+c1*c2*cp1*cp3*y2+c1*c3*cp1*cp3*y2+c3*cp1*m1*y2+cp1*cp3*m1*y2+c3*cp1*cp3*m1*y2+c1*c3*cp1*m2*y2+c1*c3*cp2*m2*y2+c1*c3*cp1*cp2*m2*y2+c1*c2*cp3*m2*y2+c1*cp1*cp3*m2*y2+c1*c2*cp1*cp3*m2*y2+c1*c3*cp1*cp3*m2*y2+c3*cp1*m1*m2*y2+c2*c3*cp1*m1*m2*y2+c2*c3*cp1*cp2*m1*m2*y2+cp1*cp3*m1*m2*y2+c2*cp1*cp3*m1*m2*y2+c1*c2*cp1*cp3*m1*m2*y2+c3*cp1*cp3*m1*m2*y2+c2*c3*cp1*cp3*m1*m2*y2+c2*cp1*cp2*cp3*m1*m2*y2+c1*cp1*m3*y2+c1*c2*cp1*m3*y2+c1*c3*cp1*m3*y2+c1*cp2*m3*y2+c1*c2*cp2*m3*y2+c1*c3*cp2*m3*y2+c1*cp1*cp2*m3*y2+c1*c2*cp1*cp2*m3*y2+c1*c3*cp1*cp2*m3*y2+c1*c2*cp3*m3*y2+c1*c2*cp1*cp3*m3*y2+c1*cp2*cp3*m3*y2+c1*c3*cp2*cp3*m3*y2+cp1*m1*m3*y2+c2*cp1*m1*m3*y2+c3*cp1*m1*m3*y2+cp1*cp2*cp3*m1*m3*y2+c3*cp1*cp2*cp3*m1*m3*y2+c1*cp1*m2*m3*y2+c1*c2*cp1*m2*m3*y2+c1*c3*cp1*m2*m3*y2+c1*cp2*m2*m3*y2+c1*c3*cp2*m2*m3*y2+c2*cp1*cp2*m2*m3*y2+c1*c2*cp1*cp2*m2*m3*y2+c2*c3*cp1*cp2*m2*m3*y2+c1*cp1*cp3*m2*m3*y2+c1*c2*cp1*cp3*m2*m3*y2+c1*c3*cp1*cp3*m2*m3*y2+c1*c3*cp2*cp3*m2*m3*y2+c1*cp1*cp2*cp3*m2*m3*y2+c2*cp1*cp2*cp3*m2*m3*y2+cp1*m1*m2*m3*y2+c3*cp1*m1*m2*m3*y2+cp1*cp2*m1*m2*m3*y2+c3*cp1*cp2*m1*m2*m3*y2+cp1*cp3*m1*m2*m3*y2+c3*cp1*cp3*m1*m2*m3*y2+cp1*cp2*cp3*m1*m2*m3*y2+c3*cp1*cp2*cp3*m1*m2*m3*y2+c3*cp1*x1*y2+c3*cp2*x1*y2+c1*cp3*x1*y2+c2*cp3*x1*y2+c3*cp3*x1*y2+c3*cp1*m1*x1*y2+c3*cp2*m1*x1*y2+c1*cp3*m1*x1*y2+c2*cp3*m1*x1*y2+c3*cp3*m1*x1*y2+c3*cp1*m2*x1*y2+c3*cp2*m2*x1*y2+c1*cp3*m2*x1*y2+c2*cp3*m2*x1*y2+c3*cp3*m2*x1*y2+c3*cp1*m1*m2*x1*y2+c3*cp2*m1*m2*x1*y2+c1*cp3*m1*m2*x1*y2+c2*cp3*m1*m2*x1*y2+c3*cp3*m1*m2*x1*y2+c1*cp1*m3*x1*y2+c2*cp1*m3*x1*y2+c3*cp1*m3*x1*y2+c1*cp2*m3*x1*y2+c2*cp2*m3*x1*y2+c3*cp2*m3*x1*y2+cp3*m3*x1*y2+c1*cp3*m3*x1*y2+c2*cp3*m3*x1*y2+c1*cp1*m1*m3*x1*y2+c2*cp1*m1*m3*x1*y2+c3*cp1*m1*m3*x1*y2+c1*cp2*m1*m3*x1*y2+c2*cp2*m1*m3*x1*y2+c3*cp2*m1*m3*x1*y2+cp3*m1*m3*x1*y2+c1*cp3*m1*m3*x1*y2+c2*cp3*m1*m3*x1*y2+c1*cp1*m2*m3*x1*y2+c2*cp1*m2*m3*x1*y2+c3*cp1*m2*m3*x1*y2+c1*cp2*m2*m3*x1*y2+c2*cp2*m2*m3*x1*y2+c3*cp2*m2*m3*x1*y2+c1*cp3*m2*m3*x1*y2+c2*cp3*m2*m3*x1*y2+c3*cp3*m2*m3*x1*y2+c1*cp1*m1*m2*m3*x1*y2+c2*cp1*m1*m2*m3*x1*y2+c3*cp1*m1*m2*m3*x1*y2+c1*cp2*m1*m2*m3*x1*y2+c2*cp2*m1*m2*m3*x1*y2+c3*cp2*m1*m2*m3*x1*y2+c1*cp3*m1*m2*m3*x1*y2+c2*cp3*m1*m2*m3*x1*y2+c3*cp3*m1*m2*m3*x1*y2+c3*cp1*m1*m2*x2*y2+c3*cp2*m1*m2*x2*y2+c1*cp3*m1*m2*x2*y2+c2*cp3*m1*m2*x2*y2+c3*cp3*m1*m2*x2*y2+cp2*cp3*m1*m2*x2*y2+c1*cp1*m2*m3*x2*y2+c2*cp1*m2*m3*x2*y2+c3*cp1*m2*m3*x2*y2+c1*cp2*m2*m3*x2*y2+c1*cp3*m2*m3*x2*y2+cp1*cp3*m2*m3*x2*y2+cp2*m1*m2*m3*x2*y2+cp1*cp2*m1*m2*m3*x2*y2+cp3*m1*m2*m3*x2*y2+cp1*cp3*m1*m2*m3*x2*y2+c1*cp1*m1*m3*y1*y2+c2*cp1*m1*m3*y1*y2+c3*cp1*m1*m3*y1*y2+cp2*m1*m3*y1*y2+c1*cp2*m1*m3*y1*y2+c2*cp2*m1*m3*y1*y2+c3*cp2*m1*m3*y1*y2+cp1*cp2*m1*m3*y1*y2+c1*cp3*m1*m3*y1*y2+c2*cp3*m1*m3*y1*y2+cp1*cp3*m1*m3*y1*y2+c1*cp1*m1*m2*m3*y1*y2+c2*cp1*m1*m2*m3*y1*y2+c3*cp1*m1*m2*m3*y1*y2+cp2*m1*m2*m3*y1*y2+c1*cp2*m1*m2*m3*y1*y2+c2*cp2*m1*m2*m3*y1*y2+c3*cp2*m1*m2*m3*y1*y2+cp1*cp2*m1*m2*m3*y1*y2+cp3*m1*m2*m3*y1*y2+c1*cp3*m1*m2*m3*y1*y2+c2*cp3*m1*m2*m3*y1*y2+c3*cp3*m1*m2*m3*y1*y2+cp1*cp3*m1*m2*m3*y1*y2+c1*c2*cp2*y3+c1*cp1*cp2*y3+c2*cp1*cp2*y3+c1*c3*cp1*cp2*y3+c2*c3*cp1*cp2*y3+c1*c2*cp3*y3+c1*cp2*cp3*y3+c1*c3*cp2*cp3*y3+c2*cp1*m1*y3+c1*c2*cp1*m1*y3+c2*c3*cp1*m1*y3+cp1*cp2*m1*y3+c2*cp1*cp2*m1*y3+c1*c2*cp1*cp2*m1*y3+c3*cp1*cp2*m1*y3+c2*c3*cp1*cp2*m1*y3+c2*cp1*cp3*m1*y3+c1*c2*cp1*cp3*m1*y3+c2*c3*cp1*cp3*m1*y3+cp1*cp2*cp3*m1*y3+c3*cp1*cp2*cp3*m1*y3+c2*cp1*m2*y3+c1*c2*cp1*m2*y3+c2*c3*cp1*m2*y3+c1*cp2*m2*y3+c2*cp1*cp2*m2*y3+c1*c2*cp1*cp2*m2*y3+c2*c3*cp1*cp2*m2*y3+c2*cp1*cp3*m2*y3+c1*c2*cp1*cp3*m2*y3+c2*c3*cp1*cp3*m2*y3+c1*cp2*cp3*m2*y3+c1*cp1*cp2*cp3*m2*y3+c3*cp2*m1*m2*y3+c1*c3*cp2*m1*m2*y3+c2*c3*cp2*m1*m2*y3+c1*c3*cp1*cp2*m1*m2*y3+c2*c3*cp1*cp2*m1*m2*y3+c1*c3*cp2*cp3*m1*m2*y3+c2*c3*cp2*cp3*m1*m2*y3+cp1*cp2*cp3*m1*m2*y3+c1*cp1*cp2*cp3*m1*m2*y3+c3*cp1*cp2*cp3*m1*m2*y3+c1*c2*cp2*m3*y3+c1*cp1*cp2*m3*y3+c2*cp1*cp2*m3*y3+c1*c3*cp1*cp2*m3*y3+c2*c3*cp1*cp2*m3*y3+c1*c2*cp3*m3*y3+c1*cp2*cp3*m3*y3+c1*c3*cp2*cp3*m3*y3+c2*cp1*m1*m3*y3+cp1*cp2*m1*m3*y3+c3*cp1*cp2*m1*m3*y3+cp1*cp2*cp3*m1*m3*y3+c3*cp1*cp2*cp3*m1*m3*y3+c2*cp1*m2*m3*y3+c1*cp2*m2*m3*y3+c1*c3*cp2*m2*m3*y3+cp1*cp2*m2*m3*y3+c3*cp1*cp2*m2*m3*y3+c1*c3*cp1*cp2*m2*m3*y3+c2*c3*cp1*cp2*m2*m3*y3+c1*cp2*cp3*m2*m3*y3+c1*c3*cp2*cp3*m2*m3*y3+cp1*cp2*cp3*m2*m3*y3+c3*cp2*m1*m2*m3*y3+cp1*cp2*m1*m2*m3*y3+c3*cp1*cp2*m1*m2*m3*y3+c3*cp2*cp3*m1*m2*m3*y3+c3*cp1*cp2*cp3*m1*m2*m3*y3+c1*cp1*x2*y3+c2*cp1*x2*y3+c3*cp1*x2*y3+c1*cp2*x2*y3+c1*cp3*x2*y3+m1*x2*y3+c1*cp1*m1*x2*y3+c2*cp1*m1*x2*y3+c3*cp1*m1*x2*y3+c1*cp2*m1*x2*y3+c2*cp2*m1*x2*y3+c3*cp2*m1*x2*y3+c1*cp3*m1*x2*y3+c2*cp3*m1*x2*y3+c3*cp3*m1*x2*y3+c1*cp1*m2*x2*y3+c2*cp1*m2*x2*y3+c3*cp1*m2*x2*y3+c1*cp2*m2*x2*y3+c1*cp3*m2*x2*y3+m1*m2*x2*y3+c1*cp1*m1*m2*x2*y3+c2*cp1*m1*m2*x2*y3+c3*cp1*m1*m2*x2*y3+c1*cp2*m1*m2*x2*y3+c2*cp2*m1*m2*x2*y3+c3*cp2*m1*m2*x2*y3+c1*cp3*m1*m2*x2*y3+c2*cp3*m1*m2*x2*y3+c3*cp3*m1*m2*x2*y3+c1*cp1*m3*x2*y3+c2*cp1*m3*x2*y3+c3*cp1*m3*x2*y3+c1*cp2*m3*x2*y3+c1*cp3*m3*x2*y3+cp2*m1*m3*x2*y3+cp1*cp2*m1*m3*x2*y3+cp3*m1*m3*x2*y3+cp1*cp3*m1*m3*x2*y3+c1*cp1*m2*m3*x2*y3+c2*cp1*m2*m3*x2*y3+c3*cp1*m2*m3*x2*y3+c1*cp2*m2*m3*x2*y3+c1*cp3*m2*m3*x2*y3+cp2*m1*m2*m3*x2*y3+cp1*cp2*m1*m2*m3*x2*y3+cp3*m1*m2*m3*x2*y3+cp1*cp3*m1*m2*m3*x2*y3+m1*m2*x3*y3+c1*cp1*m1*m2*x3*y3+c2*cp1*m1*m2*x3*y3+c3*cp1*m1*m2*x3*y3+cp2*m1*m2*x3*y3+c1*cp2*m1*m2*x3*y3+c2*cp2*m1*m2*x3*y3+c3*cp2*m1*m2*x3*y3+cp1*cp2*m1*m2*x3*y3+c1*cp3*m1*m2*x3*y3+c2*cp3*m1*m2*x3*y3+c3*cp3*m1*m2*x3*y3+cp2*cp3*m1*m2*x3*y3+c1*cp1*m2*m3*x3*y3+c2*cp1*m2*m3*x3*y3+c3*cp1*m2*m3*x3*y3+c1*cp2*m2*m3*x3*y3+c1*cp3*m2*m3*x3*y3+cp1*cp3*m2*m3*x3*y3+cp2*m1*m2*m3*x3*y3+cp1*cp2*m1*m2*m3*x3*y3+cp3*m1*m2*m3*x3*y3+cp1*cp3*m1*m2*m3*x3*y3+c2*c3*cp1*(c1+z1)+c2*c3*cp2*(c1+z1)+c3*cp1*cp2*(c1+z1)+c1*c2*cp3*(c1+z1)+c2*c3*cp3*(c1+z1)+c1*cp2*cp3*(c1+z1)+c2*cp2*cp3*(c1+z1)+c3*cp2*cp3*(c1+z1)+c2*cp1*cp3*m1*(c1+z1)+cp1*cp2*cp3*m1*(c1+z1)+c3*cp1*m2*(c1+z1)+c3*cp2*m2*(c1+z1)+c1*cp1*cp3*m2*(c1+z1)+c3*cp1*cp3*m2*(c1+z1)+cp2*cp3*m2*(c1+z1)+c1*cp2*cp3*m2*(c1+z1)+c3*cp2*cp3*m2*(c1+z1)+cp1*cp2*cp3*m2*(c1+z1)+cp1*cp3*m1*m2*(c1+z1)+cp1*cp2*cp3*m1*m2*(c1+z1)+c1*cp2*m3*(c1+z1)+c2*cp3*m3*(c1+z1)+cp1*cp2*m1*m3*(c1+z1)+cp1*cp3*m2*m3*(c1+z1)+cp2*cp3*m2*m3*(c1+z1)+c1*c2*cp3*(c2+z2)+c1*cp2*cp3*(c2+z2)+c2*cp1*cp3*m1*(c2+z2)+cp1*cp2*cp3*m1*(c2+z2)+c1*cp1*cp3*m2*(c2+z2)+c2*cp1*cp3*m2*(c2+z2)+c1*cp2*cp3*m2*(c2+z2)+cp1*cp3*m1*m2*(c2+z2)+cp1*cp2*cp3*m1*m2*(c2+z2)+c1*cp2*m3*(c2+z2)+cp1*cp2*m1*m3*(c2+z2)+cp1*cp3*m2*m3*(c2+z2)+c1*c2*cp1*(c3+z3)+c1*c2*cp2*(c3+z3)+c1*cp1*cp2*(c3+z3)+c2*cp1*cp2*(c3+z3)+c1*c2*cp3*(c3+z3)+c1*cp2*cp3*(c3+z3)+c2*cp1*m1*(c3+z3)+cp1*cp2*m1*(c3+z3)+c2*cp1*cp2*m1*(c3+z3)+c2*cp1*cp3*m1*(c3+z3)+cp1*cp2*cp3*m1*(c3+z3)+c1*cp2*m2*(c3+z3)+c1*cp1*cp3*m2*(c3+z3)+c2*cp1*cp3*m2*(c3+z3)+c1*cp2*cp3*m2*(c3+z3)+cp1*cp2*m1*m2*(c3+z3)+cp1*cp3*m1*m2*(c3+z3)+cp1*cp2*cp3*m1*m2*(c3+z3)+c1*cp2*m3*(c3+z3)+cp1*cp2*m1*m3*(c3+z3)+cp1*cp3*m2*m3*(c3+z3)+cp1*(c2+z2)*(c3+z3);
end;
#####################################################################
#Space Group No. 97 (I422)
#####################################################################
Acpin97:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cp1;
end;
#####################################################################
Acppin97:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cpp1;
end;
#####################################################################
Axyzin97:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return x1+y1+z1;
end;
#####################################################################
Bdeltain97:=function(g1,g2)
local x1, y1, z1, c1, cp1, cpp1, x2, y2, z2, c2, cp2, cpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];cpp2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*cpp1+c1*cp2*cpp1+c2*cp2*cpp1;
end;
#####################################################################
B2in97:=function(g1,g2)
local x1, y1, z1, c1, cp1, cpp1, x2, y2, z2, c2, cp2, cpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];cpp2:=g2[6];
return c1*x2+cp1*x2+c1*cp2*x2+cpp1*x2+cp2*cpp1*x2+cp2*y1+c1*y2+cp1*y2+c1*cp2*y2+cpp1*y2+cp2*cpp1*y2+cp1*z2+c1*cp2*z2;
end;
#####################################################################
B3in97:=function(g1,g2)
local x1, y1, z1, c1, cp1, cpp1, x2, y2, z2, c2, cp2, cpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];cpp2:=g2[6];
return x2*z1+cp1*x2*z1+y2*z1+cp1*y2*z1+cp1*x2*z2+cp1*y2*z2+cp1*z1*z2;
end;
#####################################################################
C1in97:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c3*m1*m2*x1+c3*cp1*m1*m2*x1+c1*cp3*m1*m2*x1+c2*cp2*m1*m3*x1+c3*cp2*m1*m3*x1+c2*cp3*m1*m3*x1+m2*m3*x1+c1*m2*m3*x1+c2*m2*m3*x1+c3*m2*m3*x1+cp1*m2*m3*x1+c1*cp1*m2*m3*x1+c2*cp1*m2*m3*x1+c3*cp1*m2*m3*x1+cp2*m2*m3*x1+c1*cp2*m2*m3*x1+c2*cp2*m2*m3*x1+c3*cp2*m2*m3*x1+cp3*m2*m3*x1+c1*cp3*m2*m3*x1+c2*cp3*m2*m3*x1+cp1*cp3*m2*m3*x1+cp2*cp3*m2*m3*x1+cp1*cp2*m1*m2*m3*x1+cp3*m1*m2*m3*x1+cp1*cp3*m1*m2*m3*x1+cp2*cp3*m1*m2*m3*x1+c2*cp3*x1*(1+x1)+(1/2)*c3*m2*x1*(1+x1)+(1/2)*c3*cp1*m2*x1*(1+x1)+(1/2)*cp3*m2*x1*(1+x1)+(1/2)*c1*cp3*m2*x1*(1+x1)+(1/2)*cp1*cp3*m2*x1*(1+x1)+cp2*cp3*m2*x1*(1+x1)+(1/2)*cp3*m1*m2*x1*(1+x1)+(1/2)*cp1*cp3*m1*m2*x1*(1+x1)+(1/2)*c2*cp2*m3*x1*(1+x1)+(1/2)*c3*cp2*m3*x1*(1+x1)+(1/2)*c2*cp3*m3*x1*(1+x1)+(1/2)*m2*m3*x1*(1+x1)+(1/2)*cp1*m2*m3*x1*(1+x1)+(1/2)*cp2*m2*m3*x1*(1+x1)+(1/2)*cp2*cp3*m2*m3*x1*(1+x1)+c3*x1*x2+c1*c2*c3*x1*x2+c3*cp2*x1*x2+c1*cp3*x1*x2+c2*cp3*x1*x2+c3*cp3*x1*x2+cp1*cp3*x1*x2+c1*cp2*cp3*x1*x2+cp1*cp2*cp3*x1*x2+c2*c3*m1*x1*x2+c2*c3*cp1*m1*x1*x2+cp3*m1*x1*x2+cp1*cp3*m1*x1*x2+cp2*cp3*m1*x1*x2+cp1*cp2*cp3*m1*x1*x2+c1*c3*m2*x1*x2+c3*cp1*m2*x1*x2+c2*c3*cp1*m2*x1*x2+c1*c3*cp2*m2*x1*x2+c3*cp1*cp2*m2*x1*x2+cp2*cp3*m2*x1*x2+cp1*cp2*cp3*m2*x1*x2+c3*m1*m2*x1*x2+c3*cp1*m1*m2*x1*x2+c3*cp2*m1*m2*x1*x2+c3*cp1*cp2*m1*m2*x1*x2+c1*m3*x1*x2+c2*m3*x1*x2+c3*m3*x1*x2+c1*cp2*m3*x1*x2+c2*cp2*m3*x1*x2+c3*cp2*m3*x1*x2+c2*cp3*m3*x1*x2+m1*m3*x1*x2+cp1*m1*m3*x1*x2+cp2*m1*m3*x1*x2+cp1*cp2*m1*m3*x1*x2+m2*m3*x1*x2+cp1*m2*m3*x1*x2+cp2*m2*m3*x1*x2+cp1*cp2*m2*m3*x1*x2+cp3*m2*m3*x1*x2+cp2*cp3*m2*m3*x1*x2+c2*x1*x3+c2*cp1*x1*x3+c2*cp2*x1*x3+c3*cp2*x1*x3+c2*cp1*cp2*x1*x3+c3*cp2*cp3*x1*x3+cp2*m2*x1*x3+cp1*cp2*m2*x1*x3+cp3*m2*x1*x3+cp1*cp3*m2*x1*x3+c3*m1*m2*y1+c3*cp1*m1*m2*y1+cp3*m1*m2*y1+c1*cp3*m1*m2*y1+c2*cp2*m1*m3*y1+c3*cp2*m1*m3*y1+c2*cp3*m1*m3*y1+c1*m2*m3*y1+c2*m2*m3*y1+c3*m2*m3*y1+c1*cp1*m2*m3*y1+c2*cp1*m2*m3*y1+c3*cp1*m2*m3*y1+c1*cp2*m2*m3*y1+c2*cp2*m2*m3*y1+c3*cp2*m2*m3*y1+c1*cp3*m2*m3*y1+c2*cp3*m2*m3*y1+cp1*cp3*m2*m3*y1+cp2*cp3*m2*m3*y1+cp1*cp2*m1*m2*m3*y1+cp3*m1*m2*m3*y1+cp1*cp3*m1*m2*m3*y1+cp2*cp3*m1*m2*m3*y1+c2*c3*x1*y1+cp2*cp3*x1*y1+c3*cp2*m2*x1*y1+cp3*m2*x1*y1+cp1*cp3*m2*x1*y1+cp2*m3*x1*y1+c2*cp2*m3*x1*y1+c3*cp2*m3*x1*y1+c2*cp3*m3*x1*y1+m2*m3*x1*y1+cp1*m2*m3*x1*y1+cp2*m2*m3*x1*y1+cp2*cp3*m2*m3*x1*y1+c3*x2*y1+c2*c3*x2*y1+c1*c2*c3*x2*y1+c3*cp2*x2*y1+cp3*x2*y1+c1*cp3*x2*y1+c2*cp3*x2*y1+c3*cp3*x2*y1+cp1*cp3*x2*y1+cp2*cp3*x2*y1+c1*cp2*cp3*x2*y1+cp1*cp2*cp3*x2*y1+c2*c3*m1*x2*y1+c2*c3*cp1*m1*x2*y1+cp3*m1*x2*y1+cp1*cp3*m1*x2*y1+cp2*cp3*m1*x2*y1+cp1*cp2*cp3*m1*x2*y1+c3*m2*x2*y1+c1*c3*m2*x2*y1+c3*cp1*m2*x2*y1+c2*c3*cp1*m2*x2*y1+c3*cp2*m2*x2*y1+c1*c3*cp2*m2*x2*y1+c3*cp1*cp2*m2*x2*y1+cp2*cp3*m2*x2*y1+cp1*cp2*cp3*m2*x2*y1+c3*m1*m2*x2*y1+c3*cp1*m1*m2*x2*y1+c3*cp2*m1*m2*x2*y1+c3*cp1*cp2*m1*m2*x2*y1+m3*x2*y1+c1*m3*x2*y1+c2*m3*x2*y1+c3*m3*x2*y1+cp2*m3*x2*y1+c1*cp2*m3*x2*y1+c2*cp2*m3*x2*y1+c3*cp2*m3*x2*y1+c2*cp3*m3*x2*y1+m1*m3*x2*y1+cp1*m1*m3*x2*y1+cp2*m1*m3*x2*y1+cp1*cp2*m1*m3*x2*y1+m2*m3*x2*y1+cp1*m2*m3*x2*y1+cp2*m2*m3*x2*y1+cp1*cp2*m2*m3*x2*y1+cp3*m2*m3*x2*y1+cp2*cp3*m2*m3*x2*y1+c2*x3*y1+c2*cp1*x3*y1+c2*cp2*x3*y1+c3*cp2*x3*y1+c2*cp1*cp2*x3*y1+c3*cp2*cp3*x3*y1+cp2*m2*x3*y1+cp1*cp2*m2*x3*y1+cp3*m2*x3*y1+cp1*cp3*m2*x3*y1+c2*cp3*y1*(1+y1)+(1/2)*c3*m2*y1*(1+y1)+(1/2)*c3*cp1*m2*y1*(1+y1)+cp3*m2*y1*(1+y1)+(1/2)*c1*cp3*m2*y1*(1+y1)+(1/2)*cp1*cp3*m2*y1*(1+y1)+cp2*cp3*m2*y1*(1+y1)+(1/2)*cp3*m1*m2*y1*(1+y1)+(1/2)*cp1*cp3*m1*m2*y1*(1+y1)+(1/2)*c2*cp2*m3*y1*(1+y1)+(1/2)*c3*cp2*m3*y1*(1+y1)+(1/2)*c2*cp3*m3*y1*(1+y1)+(1/2)*m2*m3*y1*(1+y1)+(1/2)*cp1*m2*m3*y1*(1+y1)+(1/2)*cp2*m2*m3*y1*(1+y1)+(1/2)*cp2*cp3*m2*m3*y1*(1+y1)+c1*c3*x1*y2+c2*c3*x1*y2+c1*c2*c3*x1*y2+c3*cp2*x1*y2+c1*cp3*x1*y2+c2*cp3*x1*y2+c3*cp3*x1*y2+cp1*cp3*x1*y2+cp2*cp3*x1*y2+c1*cp2*cp3*x1*y2+cp1*cp2*cp3*x1*y2+c3*m1*x1*y2+c2*c3*m1*x1*y2+c3*cp1*m1*x1*y2+c2*c3*cp1*m1*x1*y2+cp3*m1*x1*y2+cp1*cp3*m1*x1*y2+cp2*cp3*m1*x1*y2+cp1*cp2*cp3*m1*x1*y2+c3*m2*x1*y2+c1*c3*m2*x1*y2+c2*c3*cp1*m2*x1*y2+c3*cp2*m2*x1*y2+c1*c3*cp2*m2*x1*y2+c3*cp1*cp2*m2*x1*y2+cp2*cp3*m2*x1*y2+cp1*cp2*cp3*m2*x1*y2+c3*m1*m2*x1*y2+c3*cp1*m1*m2*x1*y2+c3*cp2*m1*m2*x1*y2+c3*cp1*cp2*m1*m2*x1*y2+c1*m3*x1*y2+c2*m3*x1*y2+c3*m3*x1*y2+c1*cp2*m3*x1*y2+c2*cp2*m3*x1*y2+c3*cp2*m3*x1*y2+cp3*m3*x1*y2+c2*cp3*m3*x1*y2+m1*m3*x1*y2+cp1*m1*m3*x1*y2+cp2*m1*m3*x1*y2+cp1*cp2*m1*m3*x1*y2+m2*m3*x1*y2+cp1*m2*m3*x1*y2+cp2*m2*m3*x1*y2+cp1*cp2*m2*m3*x1*y2+cp3*m2*m3*x1*y2+cp2*cp3*m2*m3*x1*y2+c3*y1*y2+c1*c3*y1*y2+c1*c2*c3*y1*y2+c3*cp2*y1*y2+cp3*y1*y2+c1*cp3*y1*y2+c2*cp3*y1*y2+c3*cp3*y1*y2+cp1*cp3*y1*y2+c1*cp2*cp3*y1*y2+cp1*cp2*cp3*y1*y2+c3*m1*y1*y2+c2*c3*m1*y1*y2+c3*cp1*m1*y1*y2+c2*c3*cp1*m1*y1*y2+cp3*m1*y1*y2+cp1*cp3*m1*y1*y2+cp2*cp3*m1*y1*y2+cp1*cp2*cp3*m1*y1*y2+c1*c3*m2*y1*y2+c2*c3*cp1*m2*y1*y2+c1*c3*cp2*m2*y1*y2+c3*cp1*cp2*m2*y1*y2+cp2*cp3*m2*y1*y2+cp1*cp2*cp3*m2*y1*y2+c3*m1*m2*y1*y2+c3*cp1*m1*m2*y1*y2+c3*cp2*m1*m2*y1*y2+c3*cp1*cp2*m1*m2*y1*y2+m3*y1*y2+c1*m3*y1*y2+c2*m3*y1*y2+c3*m3*y1*y2+cp2*m3*y1*y2+c1*cp2*m3*y1*y2+c2*cp2*m3*y1*y2+c3*cp2*m3*y1*y2+cp3*m3*y1*y2+c2*cp3*m3*y1*y2+m1*m3*y1*y2+cp1*m1*m3*y1*y2+cp2*m1*m3*y1*y2+cp1*cp2*m1*m3*y1*y2+m2*m3*y1*y2+cp1*m2*m3*y1*y2+cp2*m2*m3*y1*y2+cp1*cp2*m2*m3*y1*y2+cp3*m2*m3*y1*y2+cp2*cp3*m2*m3*y1*y2+c2*x1*y3+c2*cp1*x1*y3+cp2*x1*y3+c2*cp2*x1*y3+c3*cp2*x1*y3+cp1*cp2*x1*y3+c2*cp1*cp2*x1*y3+cp2*cp3*x1*y3+c3*cp2*cp3*x1*y3+cp2*m2*x1*y3+cp1*cp2*m2*x1*y3+cp3*m2*x1*y3+cp1*cp3*m2*x1*y3+c2*y1*y3+c2*cp1*y1*y3+cp2*y1*y3+c2*cp2*y1*y3+c3*cp2*y1*y3+cp1*cp2*y1*y3+c2*cp1*cp2*y1*y3+cp2*cp3*y1*y3+c3*cp2*cp3*y1*y3+cp2*m2*y1*y3+cp1*cp2*m2*y1*y3+cp3*m2*y1*y3+cp1*cp3*m2*y1*y3+c3*cp1*m1*m2*z1+c1*cp3*m1*m2*z1+c2*cp2*m1*m3*z1+c3*cp2*m1*m3*z1+c2*cp3*m1*m3*z1+cp1*m2*m3*z1+c1*cp1*m2*m3*z1+c2*cp1*m2*m3*z1+c3*cp1*m2*m3*z1+cp2*m2*m3*z1+c1*cp2*m2*m3*z1+c2*cp2*m2*m3*z1+c3*cp2*m2*m3*z1+c1*cp3*m2*m3*z1+c2*cp3*m2*m3*z1+cp1*cp3*m2*m3*z1+cp2*cp3*m2*m3*z1+cp2*m1*m2*m3*z1+cp1*cp2*m1*m2*m3*z1+cp1*cp3*m1*m2*m3*z1+cp2*cp3*m1*m2*m3*z1+cp2*cp3*x1*z1+c2*c3*m1*x1*z1+cp2*cp3*m1*x1*z1+c1*c3*m2*x1*z1+c2*c3*m2*x1*z1+c3*cp2*m2*x1*z1+cp3*m2*x1*z1+c1*cp3*m2*x1*z1+cp2*cp3*m2*x1*z1+c3*cp2*m1*m2*x1*z1+c1*cp3*m1*m2*x1*z1+c2*cp2*m3*x1*z1+c3*cp2*m3*x1*z1+c2*cp3*m3*x1*z1+cp2*m1*m3*x1*z1+cp2*cp3*m2*m3*x1*z1+c3*x2*z1+c1*c2*c3*x2*z1+c3*cp2*x2*z1+cp3*x2*z1+c1*cp3*x2*z1+c2*cp3*x2*z1+c3*cp3*x2*z1+cp1*cp3*x2*z1+cp2*cp3*x2*z1+c1*cp2*cp3*x2*z1+cp1*cp2*cp3*x2*z1+c2*c3*cp1*m1*x2*z1+cp1*cp3*m1*x2*z1+cp1*cp2*cp3*m1*x2*z1+c3*m2*x2*z1+c1*c3*m2*x2*z1+c2*c3*m2*x2*z1+c3*cp1*m2*x2*z1+c2*c3*cp1*m2*x2*z1+c3*cp2*m2*x2*z1+c1*c3*cp2*m2*x2*z1+c3*cp1*cp2*m2*x2*z1+cp1*cp2*cp3*m2*x2*z1+c3*cp1*m1*m2*x2*z1+c3*cp1*cp2*m1*m2*x2*z1+c1*m3*x2*z1+c2*m3*x2*z1+c3*m3*x2*z1+c1*cp2*m3*x2*z1+c2*cp2*m3*x2*z1+c3*cp2*m3*x2*z1+c2*cp3*m3*x2*z1+cp1*m1*m3*x2*z1+cp1*cp2*m1*m3*x2*z1+cp1*m2*m3*x2*z1+cp1*cp2*m2*m3*x2*z1+cp3*m2*m3*x2*z1+cp2*cp3*m2*m3*x2*z1+c2*cp1*x3*z1+c3*cp2*x3*z1+c2*cp1*cp2*x3*z1+c3*cp2*cp3*x3*z1+cp1*cp2*m2*x3*z1+cp1*cp3*m2*x3*z1+c2*c3*y1*z1+c2*c3*m1*y1*z1+cp2*cp3*m1*y1*z1+c1*c3*m2*y1*z1+c2*c3*m2*y1*z1+c3*cp1*m2*y1*z1+cp3*m2*y1*z1+cp2*cp3*m2*y1*z1+c3*cp2*m1*m2*y1*z1+c1*cp3*m1*m2*y1*z1+cp1*cp3*m1*m2*y1*z1+cp2*m3*y1*z1+c2*cp2*m3*y1*z1+c3*cp2*m3*y1*z1+c2*cp3*m3*y1*z1+cp2*m1*m3*y1*z1+cp2*cp3*m2*m3*y1*z1+c1*c3*y2*z1+c2*c3*y2*z1+c1*c2*c3*y2*z1+c3*cp2*y2*z1+3*cp3*y2*z1+c1*cp3*y2*z1+c2*cp3*y2*z1+c3*cp3*y2*z1+cp1*cp3*y2*z1+c1*cp2*cp3*y2*z1+cp1*cp2*cp3*y2*z1+c3*cp1*m1*y2*z1+c2*c3*cp1*m1*y2*z1+cp1*cp3*m1*y2*z1+cp1*cp2*cp3*m1*y2*z1+c3*m2*y2*z1+c1*c3*m2*y2*z1+c2*c3*m2*y2*z1+c2*c3*cp1*m2*y2*z1+c1*c3*cp2*m2*y2*z1+c3*cp1*cp2*m2*y2*z1+cp1*cp2*cp3*m2*y2*z1+c3*cp1*m1*m2*y2*z1+c3*cp1*cp2*m1*m2*y2*z1+c1*m3*y2*z1+c2*m3*y2*z1+c3*m3*y2*z1+c1*cp2*m3*y2*z1+c2*cp2*m3*y2*z1+c3*cp2*m3*y2*z1+cp3*m3*y2*z1+c2*cp3*m3*y2*z1+cp1*m1*m3*y2*z1+cp1*cp2*m1*m3*y2*z1+cp1*m2*m3*y2*z1+cp1*cp2*m2*m3*y2*z1+cp3*m2*m3*y2*z1+cp2*cp3*m2*m3*y2*z1+c2*cp1*y3*z1+c3*cp2*y3*z1+cp1*cp2*y3*z1+c2*cp1*cp2*y3*z1+cp2*cp3*y3*z1+c3*cp2*cp3*y3*z1+cp1*cp2*m2*y3*z1+cp1*cp3*m2*y3*z1+c2*cp3*z1*(1+z1)+(1/2)*c3*cp1*m2*z1*(1+z1)+(1/2)*c1*cp3*m2*z1*(1+z1)+(1/2)*cp1*cp3*m2*z1*(1+z1)+cp2*cp3*m2*z1*(1+z1)+(1/2)*cp1*cp3*m1*m2*z1*(1+z1)+(1/2)*c2*cp2*m3*z1*(1+z1)+(1/2)*c3*cp2*m3*z1*(1+z1)+(1/2)*c2*cp3*m3*z1*(1+z1)+(1/2)*cp1*m2*m3*z1*(1+z1)+(1/2)*cp2*m2*m3*z1*(1+z1)+(1/2)*cp2*cp3*m2*m3*z1*(1+z1)+c1*c2*c3*x1*z2+cp2*cp3*x1*z2+c1*cp2*cp3*x1*z2+cp1*cp2*cp3*x1*z2+c2*c3*m1*x1*z2+c2*c3*cp1*m1*x1*z2+cp2*cp3*m1*x1*z2+cp1*cp2*cp3*m1*x1*z2+c2*c3*m2*x1*z2+c2*c3*cp1*m2*x1*z2+c3*cp2*m2*x1*z2+c1*c3*cp2*m2*x1*z2+c3*cp1*cp2*m2*x1*z2+cp3*m2*x1*z2+cp1*cp3*m2*x1*z2+cp2*cp3*m2*x1*z2+cp1*cp2*cp3*m2*x1*z2+c3*cp2*m1*m2*x1*z2+c3*cp1*cp2*m1*m2*x1*z2+c1*cp2*m3*x1*z2+c2*cp2*m3*x1*z2+c3*cp2*m3*x1*z2+c2*cp3*m3*x1*z2+cp2*m1*m3*x1*z2+cp1*cp2*m1*m3*x1*z2+cp1*cp2*m2*m3*x1*z2+cp2*cp3*m2*m3*x1*z2+c2*c3*y1*z2+c1*c2*c3*y1*z2+c1*cp2*cp3*y1*z2+cp1*cp2*cp3*y1*z2+c2*c3*m1*y1*z2+c2*c3*cp1*m1*y1*z2+cp2*cp3*m1*y1*z2+cp1*cp2*cp3*m1*y1*z2+c2*c3*m2*y1*z2+c2*c3*cp1*m2*y1*z2+c1*c3*cp2*m2*y1*z2+c3*cp1*cp2*m2*y1*z2+cp3*m2*y1*z2+cp1*cp3*m2*y1*z2+cp2*cp3*m2*y1*z2+cp1*cp2*cp3*m2*y1*z2+c3*cp2*m1*m2*y1*z2+c3*cp1*cp2*m1*m2*y1*z2+cp2*m3*y1*z2+c1*cp2*m3*y1*z2+c2*cp2*m3*y1*z2+c3*cp2*m3*y1*z2+c2*cp3*m3*y1*z2+cp2*m1*m3*y1*z2+cp1*cp2*m1*m3*y1*z2+cp1*cp2*m2*m3*y1*z2+cp2*cp3*m2*m3*y1*z2+c1*c2*c3*z1*z2+c1*cp2*cp3*z1*z2+cp1*cp2*cp3*z1*z2+c2*c3*cp1*m1*z1*z2+cp1*cp2*cp3*m1*z1*z2+c2*c3*cp1*m2*z1*z2+c1*c3*cp2*m2*z1*z2+c3*cp1*cp2*m2*z1*z2+cp1*cp3*m2*z1*z2+cp1*cp2*cp3*m2*z1*z2+c3*cp1*cp2*m1*m2*z1*z2+c1*cp2*m3*z1*z2+c2*cp2*m3*z1*z2+c3*cp2*m3*z1*z2+c2*cp3*m3*z1*z2+cp1*cp2*m1*m3*z1*z2+cp2*m2*m3*z1*z2+cp1*cp2*m2*m3*z1*z2+cp2*cp3*m2*m3*z1*z2+c2*cp2*x1*z3+c2*cp1*cp2*x1*z3+c3*cp2*cp3*x1*z3+cp3*m2*x1*z3+cp1*cp3*m2*x1*z3+c2*cp2*y1*z3+c2*cp1*cp2*y1*z3+c3*cp2*cp3*y1*z3+cp3*m2*y1*z3+cp1*cp3*m2*y1*z3+c2*cp1*cp2*z1*z3+c3*cp2*cp3*z1*z3+cp1*cp3*m2*z1*z3;
end;
#####################################################################
C2in97:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c3*x1*x2+c1*c3*cp1*x1*x2+c1*c3*cp1*cp2*x1*x2+c2*cp1*cp3*x1*x2+c3*m1*x1*x2+c1*c3*cp1*m1*x1*x2+c3*cp2*m1*x1*x2+c1*c3*cp2*m1*x1*x2+c3*cp1*m2*x1*x2+c2*cp1*cp3*m2*x1*x2+c3*cp1*cp3*m2*x1*x2+(1/2)*c1*c3*cp1*x1*(1+x1)*x2+(1/2)*c1*c3*cp2*x1*(1+x1)*x2+(1/2)*c3*cp1*m1*x1*(1+x1)*x2+(1/2)*c3*cp2*m1*x1*(1+x1)*x2+(1/2)*c3*cp1*x1*x2*(1+x2)+(1/2)*c1*c3*cp1*x1*x2*(1+x2)+(1/2)*c1*c3*cp2*x1*x2*(1+x2)+(1/2)*c3*cp1*m1*x1*x2*(1+x2)+(1/2)*c3*cp2*m1*x1*x2*(1+x2)+c2*x1*x3+c2*c3*x1*x3+c1*c2*cp2*x1*x3+c2*c3*cp2*x1*x3+c1*cp1*cp2*x1*x3+c2*cp1*cp2*x1*x3+c1*c2*cp1*cp2*x1*x3+c2*cp3*x1*x3+c2*cp2*cp3*x1*x3+c2*m2*x1*x3+c3*m2*x1*x3+cp1*m2*x1*x3+c1*cp1*m2*x1*x3+c2*cp1*m2*x1*x3+c3*cp2*m2*x1*x3+cp1*cp2*m2*x1*x3+c1*cp1*cp2*m2*x1*x3+c2*cp3*m2*x1*x3+c3*cp1*cp3*m2*x1*x3+c2*cp2*cp3*m2*x1*x3+c3*cp2*cp3*m2*x1*x3+c1*cp1*x1*x2*x3+c2*cp1*x1*x2*x3+c1*c2*cp1*x1*x2*x3+c1*cp1*cp2*x1*x2*x3+c2*cp1*cp2*x1*x2*x3+cp1*m2*x1*x2*x3+c1*cp1*m2*x1*x2*x3+cp1*cp2*m2*x1*x2*x3+(1/2)*cp2*m1*x1*x3*(1+x3)+(1/2)*cp1*cp2*m1*x1*x3*(1+x3)+(1/2)*cp1*m2*x1*x3*(1+x3)+(1/2)*cp2*m2*x1*x3*(1+x3)+(1/2)*c1*c3*x2*x3*(1+x3)+(1/2)*c2*cp1*x2*x3*(1+x3)+(1/2)*c3*m1*x2*x3*(1+x3)+(1/2)*cp1*m1*x2*x3*(1+x3)+(1/2)*cp1*cp2*m1*x2*x3*(1+x3)+cp3*m2*x1*y1+(1/2)*c3*cp2*x1*(1+x1)*y1+(1/2)*cp1*cp3*m2*x1*(1+x1)*y1+c3*x2*y1+c1*c3*x2*y1+c3*cp1*x2*y1+c1*c3*cp1*x2*y1+c3*cp1*cp2*x2*y1+c1*c3*cp1*cp2*x2*y1+c2*cp1*cp3*x2*y1+c3*m1*x2*y1+c1*c3*cp1*m1*x2*y1+c1*c3*cp2*m1*x2*y1+c3*cp1*cp2*m1*x2*y1+c3*cp1*m2*x2*y1+c2*cp1*cp3*m2*x2*y1+c3*cp1*cp3*m2*x2*y1+c3*cp1*x1*x2*y1+c3*cp2*x1*x2*y1+(1/2)*c3*x2*(1+x2)*y1+(1/2)*c3*cp1*x2*(1+x2)*y1+(1/2)*c1*c3*cp1*x2*(1+x2)*y1+(1/2)*c3*cp2*x2*(1+x2)*y1+(1/2)*c1*c3*cp2*x2*(1+x2)*y1+(1/2)*c3*cp1*cp2*x2*(1+x2)*y1+(1/2)*c3*cp1*m1*x2*(1+x2)*y1+(1/2)*c3*cp2*m1*x2*(1+x2)*y1+(1/2)*cp3*m2*x2*(1+x2)*y1+c2*x3*y1+c2*c3*x3*y1+c2*cp2*x3*y1+c1*c2*cp2*x3*y1+cp1*cp2*x3*y1+c1*cp1*cp2*x3*y1+c1*c2*cp1*cp2*x3*y1+c2*cp3*x3*y1+c2*cp2*cp3*x3*y1+m2*x3*y1+c2*m2*x3*y1+c1*cp1*m2*x3*y1+c2*cp1*m2*x3*y1+cp2*m2*x3*y1+c2*cp2*m2*x3*y1+c1*cp1*cp2*m2*x3*y1+cp3*m2*x3*y1+c2*cp3*m2*x3*y1+c3*cp1*cp3*m2*x3*y1+cp2*cp3*m2*x3*y1+c3*cp2*cp3*m2*x3*y1+cp1*cp2*x1*x3*y1+c3*x2*x3*y1+c2*c3*x2*x3*y1+cp1*x2*x3*y1+c1*cp1*x2*x3*y1+c1*c2*cp1*x2*x3*y1+c2*cp2*x2*x3*y1+c3*cp2*x2*x3*y1+cp1*cp2*x2*x3*y1+c1*cp1*cp2*x2*x3*y1+c2*cp1*cp2*x2*x3*y1+c2*m2*x2*x3*y1+c3*m2*x2*x3*y1+c1*cp1*m2*x2*x3*y1+cp1*cp2*m2*x2*x3*y1+c2*cp3*m2*x2*x3*y1+cp2*cp3*m2*x2*x3*y1+(1/2)*cp2*m1*x3*(1+x3)*y1+(1/2)*cp1*cp2*m1*x3*(1+x3)*y1+(1/2)*m2*x3*(1+x3)*y1+(1/2)*cp1*m2*x3*(1+x3)*y1+(1/2)*cp2*m2*x3*(1+x3)*y1+(1/2)*cp3*m2*x3*(1+x3)*y1+(1/2)*c3*cp2*x1*y1*(1+y1)+(1/2)*cp1*cp3*m2*x1*y1*(1+y1)+(1/2)*c1*c3*cp1*x2*y1*(1+y1)+(1/2)*c3*cp2*x2*y1*(1+y1)+(1/2)*c1*c3*cp2*x2*y1*(1+y1)+(1/2)*c3*cp1*cp2*x2*y1*(1+y1)+(1/2)*c3*cp1*m1*x2*y1*(1+y1)+(1/2)*c3*cp2*m1*x2*y1*(1+y1)+c1*c3*x1*y2+c3*cp1*x1*y2+c1*c3*cp1*x1*y2+c3*cp1*cp2*x1*y2+c1*c3*cp1*cp2*x1*y2+cp3*x1*y2+cp1*cp3*x1*y2+c2*cp1*cp3*x1*y2+c3*m1*x1*y2+c3*cp1*m1*x1*y2+c1*c3*cp1*m1*x1*y2+c1*c3*cp2*m1*x1*y2+c3*cp1*m2*x1*y2+cp3*m2*x1*y2+cp1*cp3*m2*x1*y2+c2*cp1*cp3*m2*x1*y2+c3*cp1*cp3*m2*x1*y2+(1/2)*c3*cp1*x1*(1+x1)*y2+(1/2)*c1*c3*cp1*x1*(1+x1)*y2+(1/2)*c3*cp2*x1*(1+x1)*y2+(1/2)*c1*c3*cp2*x1*(1+x1)*y2+(1/2)*c3*cp1*m1*x1*(1+x1)*y2+(1/2)*c3*cp2*m1*x1*(1+x1)*y2+c3*cp2*x1*x2*y2+(1/2)*c3*cp1*cp2*x2*(1+x2)*y2+c2*cp1*x1*x3*y2+c1*c2*cp1*x1*x3*y2+c2*cp1*cp2*x1*x3*y2+cp1*m2*x1*x3*y2+c1*cp1*m2*x1*x3*y2+cp1*cp2*m2*x1*x3*y2+(1/2)*c1*c3*x3*(1+x3)*y2+(1/2)*cp1*x3*(1+x3)*y2+(1/2)*c2*cp1*x3*(1+x3)*y2+(1/2)*c3*m1*x3*(1+x3)*y2+(1/2)*cp1*m1*x3*(1+x3)*y2+(1/2)*cp1*cp2*m1*x3*(1+x3)*y2+c3*y1*y2+c1*c3*y1*y2+c1*c3*cp1*y1*y2+c1*c3*cp1*cp2*y1*y2+cp3*y1*y2+cp1*cp3*y1*y2+c2*cp1*cp3*y1*y2+c3*m1*y1*y2+c3*cp1*m1*y1*y2+c1*c3*cp1*m1*y1*y2+c3*cp2*m1*y1*y2+c1*c3*cp2*m1*y1*y2+c3*cp1*cp2*m1*y1*y2+c3*cp1*m2*y1*y2+cp3*m2*y1*y2+cp1*cp3*m2*y1*y2+c2*cp1*cp3*m2*y1*y2+c3*cp1*cp3*m2*y1*y2+c3*cp1*x1*y1*y2+c3*cp2*x1*y1*y2+c3*cp2*x2*y1*y2+c2*c3*x3*y1*y2+c1*c2*cp1*x3*y1*y2+c2*cp1*cp2*x3*y1*y2+m2*x3*y1*y2+c2*m2*x3*y1*y2+c3*m2*x3*y1*y2+c1*cp1*m2*x3*y1*y2+cp1*cp2*m2*x3*y1*y2+cp3*m2*x3*y1*y2+c2*cp3*m2*x3*y1*y2+(1/2)*c3*cp1*y1*(1+y1)*y2+(1/2)*c1*c3*cp1*y1*(1+y1)*y2+(1/2)*c1*c3*cp2*y1*(1+y1)*y2+(1/2)*c3*cp1*cp2*y1*(1+y1)*y2+(1/2)*c3*cp1*m1*y1*(1+y1)*y2+(1/2)*c3*cp2*m1*y1*(1+y1)*y2+(1/2)*c1*c3*cp1*x1*y2*(1+y2)+(1/2)*c3*cp2*x1*y2*(1+y2)+(1/2)*c1*c3*cp2*x1*y2*(1+y2)+(1/2)*c3*cp1*m1*x1*y2*(1+y2)+(1/2)*c3*cp2*m1*x1*y2*(1+y2)+(1/2)*c3*cp1*cp2*x2*y2*(1+y2)+(1/2)*c3*y1*y2*(1+y2)+(1/2)*c1*c3*cp1*y1*y2*(1+y2)+(1/2)*c1*c3*cp2*y1*y2*(1+y2)+(1/2)*c3*cp1*cp2*y1*y2*(1+y2)+(1/2)*c3*cp1*m1*y1*y2*(1+y2)+(1/2)*c3*cp2*m1*y1*y2*(1+y2)+(1/2)*cp3*m2*y1*y2*(1+y2)+c2*c3*x1*y3+cp2*x1*y3+c1*cp2*x1*y3+c2*cp2*x1*y3+c1*c2*cp2*x1*y3+c3*cp2*x1*y3+c2*c3*cp2*x1*y3+cp1*cp2*x1*y3+c2*cp1*cp2*x1*y3+c1*c2*cp1*cp2*x1*y3+c2*cp3*x1*y3+cp2*cp3*x1*y3+c2*cp2*cp3*x1*y3+c2*m2*x1*y3+c3*m2*x1*y3+c1*cp1*m2*x1*y3+c2*cp1*m2*x1*y3+cp2*m2*x1*y3+c3*cp2*m2*x1*y3+cp1*cp2*m2*x1*y3+c1*cp1*cp2*m2*x1*y3+cp3*m2*x1*y3+c2*cp3*m2*x1*y3+cp1*cp3*m2*x1*y3+c3*cp1*cp3*m2*x1*y3+c2*cp2*cp3*m2*x1*y3+c3*cp2*cp3*m2*x1*y3+cp1*x1*x2*y3+c2*cp1*x1*x2*y3+c1*c2*cp1*x1*x2*y3+cp1*cp2*x1*x2*y3+c1*cp1*cp2*x1*x2*y3+c2*cp1*cp2*x1*x2*y3+cp1*m2*x1*x2*y3+c1*cp1*m2*x1*x2*y3+cp1*cp2*m2*x1*x2*y3+c2*cp1*x1*x3*y3+c1*cp2*x1*x3*y3+c2*cp2*x1*x3*y3+c1*cp1*cp2*x1*x3*y3+cp1*m2*x1*x3*y3+cp2*m2*x1*x3*y3+c2*c3*y1*y3+cp2*y1*y3+c1*cp2*y1*y3+c2*cp2*y1*y3+c1*c2*cp2*y1*y3+cp1*cp2*y1*y3+c1*c2*cp1*cp2*y1*y3+c2*cp3*y1*y3+cp2*cp3*y1*y3+c2*cp2*cp3*y1*y3+c2*m2*y1*y3+cp1*m2*y1*y3+c1*cp1*m2*y1*y3+c2*cp1*m2*y1*y3+c2*cp2*m2*y1*y3+c1*cp1*cp2*m2*y1*y3+c2*cp3*m2*y1*y3+cp1*cp3*m2*y1*y3+c3*cp1*cp3*m2*y1*y3+c3*cp2*cp3*m2*y1*y3+cp1*cp2*x1*y1*y3+c2*x2*y1*y3+c2*c3*x2*y1*y3+cp1*x2*y1*y3+c1*c2*cp1*x2*y1*y3+c2*cp2*x2*y1*y3+c3*cp2*x2*y1*y3+c1*cp1*cp2*x2*y1*y3+c2*cp1*cp2*x2*y1*y3+c2*m2*x2*y1*y3+c3*m2*x2*y1*y3+c1*cp1*m2*x2*y1*y3+cp1*cp2*m2*x2*y1*y3+cp3*m2*x2*y1*y3+c2*cp3*m2*x2*y1*y3+cp2*cp3*m2*x2*y1*y3+c2*cp1*x3*y1*y3+cp2*x3*y1*y3+c1*cp2*x3*y1*y3+c3*cp2*x3*y1*y3+cp1*cp2*x3*y1*y3+c1*cp1*cp2*x3*y1*y3+cp1*m2*x3*y1*y3+cp2*m2*x3*y1*y3+cp2*cp3*m2*x3*y1*y3+cp1*x1*y2*y3+c1*cp1*x1*y2*y3+c2*cp1*x1*y2*y3+c1*c2*cp1*x1*y2*y3+cp1*cp2*x1*y2*y3+c2*cp1*cp2*x1*y2*y3+cp1*m2*x1*y2*y3+c1*cp1*m2*x1*y2*y3+cp1*cp2*m2*x1*y2*y3+y1*y2*y3+c2*y1*y2*y3+c3*y1*y2*y3+c2*c3*y1*y2*y3+c1*cp1*y1*y2*y3+c1*c2*cp1*y1*y2*y3+cp1*cp2*y1*y2*y3+c2*cp1*cp2*y1*y2*y3+m2*y1*y2*y3+c2*m2*y1*y2*y3+c3*m2*y1*y2*y3+c1*cp1*m2*y1*y2*y3+cp1*cp2*m2*y1*y2*y3+c2*cp3*m2*y1*y2*y3+(1/2)*cp2*m1*x1*y3*(1+y3)+(1/2)*cp1*cp2*m1*x1*y3*(1+y3)+(1/2)*cp1*m2*x1*y3*(1+y3)+(1/2)*cp2*m2*x1*y3*(1+y3)+(1/2)*c1*x2*y3*(1+y3)+(1/2)*c1*c3*x2*y3*(1+y3)+(1/2)*cp1*x2*y3*(1+y3)+(1/2)*c2*cp1*x2*y3*(1+y3)+(1/2)*m1*x2*y3*(1+y3)+(1/2)*c3*m1*x2*y3*(1+y3)+(1/2)*cp1*m1*x2*y3*(1+y3)+(1/2)*cp1*cp2*m1*x2*y3*(1+y3)+(1/2)*cp2*m1*y1*y3*(1+y3)+(1/2)*cp1*cp2*m1*y1*y3*(1+y3)+(1/2)*m2*y1*y3*(1+y3)+(1/2)*cp1*m2*y1*y3*(1+y3)+(1/2)*cp2*m2*y1*y3*(1+y3)+(1/2)*cp3*m2*y1*y3*(1+y3)+(1/2)*c1*y2*y3*(1+y3)+(1/2)*c1*c3*y2*y3*(1+y3)+(1/2)*c2*cp1*y2*y3*(1+y3)+(1/2)*m1*y2*y3*(1+y3)+(1/2)*c3*m1*y2*y3*(1+y3)+(1/2)*cp1*m1*y2*y3*(1+y3)+(1/2)*cp1*cp2*m1*y2*y3*(1+y3)+c2*cp3*x1*z1+c3*cp2*m1*x1*z1+c3*m2*x1*z1+c1*cp3*m2*x1*z1+c2*cp3*m2*x1*z1+c3*cp3*m2*x1*z1+c1*c3*cp1*x2*z1+c1*c3*cp2*x2*z1+c1*c3*cp1*cp2*x2*z1+c2*cp3*x2*z1+c2*cp1*cp3*x2*z1+c3*m1*x2*z1+c3*m2*x2*z1+c3*cp1*m2*x2*z1+c2*cp3*m2*x2*z1+c3*cp3*m2*x2*z1+c2*cp1*cp3*m2*x2*z1+c3*cp1*cp3*m2*x2*z1+c3*cp1*x1*x2*z1+c1*c3*cp1*x1*x2*z1+c1*c3*cp2*x1*x2*z1+c3*cp1*m1*x1*x2*z1+c3*cp2*m1*x1*x2*z1+c2*x3*z1+c2*c3*x3*z1+c1*cp2*x3*z1+c1*c2*cp2*x3*z1+c2*c3*cp2*x3*z1+c1*cp1*cp2*x3*z1+c2*cp1*cp2*x3*z1+c1*c2*cp1*cp2*x3*z1+c2*cp3*x3*z1+c2*cp2*cp3*x3*z1+c2*m2*x3*z1+c3*m2*x3*z1+cp1*m2*x3*z1+c1*cp1*m2*x3*z1+c2*cp1*m2*x3*z1+c3*cp2*m2*x3*z1+cp1*cp2*m2*x3*z1+c1*cp1*cp2*m2*x3*z1+c2*cp3*m2*x3*z1+c3*cp3*m2*x3*z1+c3*cp1*cp3*m2*x3*z1+c2*cp2*cp3*m2*x3*z1+c3*cp2*cp3*m2*x3*z1+c1*cp2*x1*x3*z1+c2*cp2*x1*x3*z1+cp2*m1*x1*x3*z1+cp2*m2*x1*x3*z1+c2*x2*x3*z1+c1*cp1*x2*x3*z1+c2*cp1*x2*x3*z1+c1*c2*cp1*x2*x3*z1+c2*cp2*x2*x3*z1+c1*cp1*cp2*x2*x3*z1+c2*cp1*cp2*x2*x3*z1+m2*x2*x3*z1+cp1*m2*x2*x3*z1+c1*cp1*m2*x2*x3*z1+cp2*m2*x2*x3*z1+cp1*cp2*m2*x2*x3*z1+(1/2)*cp2*m1*x3*(1+x3)*z1+(1/2)*cp1*cp2*m1*x3*(1+x3)*z1+(1/2)*cp1*m2*x3*(1+x3)*z1+(1/2)*cp2*m2*x3*(1+x3)*z1+c3*cp2*y1*z1+c2*cp3*y1*z1+c3*cp2*m1*y1*z1+c3*m2*y1*z1+cp3*m2*y1*z1+c1*cp3*m2*y1*z1+c2*cp3*m2*y1*z1+c3*cp3*m2*y1*z1+cp1*cp3*m2*y1*z1+c3*cp2*x1*y1*z1+cp1*cp3*m2*x1*y1*z1+c3*cp1*x2*y1*z1+c1*c3*cp1*x2*y1*z1+c3*cp2*x2*y1*z1+c1*c3*cp2*x2*y1*z1+c3*cp1*cp2*x2*y1*z1+c3*cp1*m1*x2*y1*z1+c3*cp2*m1*x2*y1*z1+cp2*x3*y1*z1+c1*cp2*x3*y1*z1+c2*cp2*x3*y1*z1+cp1*cp2*x3*y1*z1+cp2*m1*x3*y1*z1+cp2*m2*x3*y1*z1+c3*y2*z1+c3*cp1*y2*z1+c1*c3*cp1*y2*z1+c3*cp2*y2*z1+c1*c3*cp2*y2*z1+c3*cp1*cp2*y2*z1+c1*c3*cp1*cp2*y2*z1+c2*cp3*y2*z1+cp1*cp3*y2*z1+c2*cp1*cp3*y2*z1+c3*m1*y2*z1+c3*m2*y2*z1+c3*cp1*m2*y2*z1+c2*cp3*m2*y2*z1+c3*cp3*m2*y2*z1+cp1*cp3*m2*y2*z1+c2*cp1*cp3*m2*y2*z1+c3*cp1*cp3*m2*y2*z1+c1*c3*cp1*x1*y2*z1+c3*cp2*x1*y2*z1+c1*c3*cp2*x1*y2*z1+c3*cp1*m1*x1*y2*z1+c3*cp2*m1*x1*y2*z1+c3*cp2*x2*y2*z1+c3*cp1*cp2*x2*y2*z1+c2*cp1*x3*y2*z1+c1*c2*cp1*x3*y2*z1+c2*cp2*x3*y2*z1+c2*cp1*cp2*x3*y2*z1+cp1*m2*x3*y2*z1+c1*cp1*m2*x3*y2*z1+cp2*m2*x3*y2*z1+cp1*cp2*m2*x3*y2*z1+c1*c3*cp1*y1*y2*z1+c1*c3*cp2*y1*y2*z1+c3*cp1*cp2*y1*y2*z1+c3*cp1*m1*y1*y2*z1+c3*cp2*m1*y1*y2*z1+c2*c3*y3*z1+cp2*y3*z1+c2*cp2*y3*z1+c1*c2*cp2*y3*z1+c3*cp2*y3*z1+c2*c3*cp2*y3*z1+cp1*cp2*y3*z1+c2*cp1*cp2*y3*z1+c1*c2*cp1*cp2*y3*z1+c2*cp3*y3*z1+cp2*cp3*y3*z1+c2*cp2*cp3*y3*z1+c2*m2*y3*z1+c3*m2*y3*z1+c1*cp1*m2*y3*z1+c2*cp1*m2*y3*z1+cp2*m2*y3*z1+c3*cp2*m2*y3*z1+cp1*cp2*m2*y3*z1+c1*cp1*cp2*m2*y3*z1+c2*cp3*m2*y3*z1+c3*cp3*m2*y3*z1+cp1*cp3*m2*y3*z1+c3*cp1*cp3*m2*y3*z1+c2*cp2*cp3*m2*y3*z1+c3*cp2*cp3*m2*y3*z1+cp2*x1*y3*z1+c1*cp2*x1*y3*z1+c2*cp2*x1*y3*z1+cp2*m1*x1*y3*z1+cp2*m2*x1*y3*z1+x2*y3*z1+c2*x2*y3*z1+cp1*x2*y3*z1+c2*cp1*x2*y3*z1+c1*c2*cp1*x2*y3*z1+cp2*x2*y3*z1+c2*cp2*x2*y3*z1+cp1*cp2*x2*y3*z1+c1*cp1*cp2*x2*y3*z1+c2*cp1*cp2*x2*y3*z1+m2*x2*y3*z1+cp1*m2*x2*y3*z1+c1*cp1*m2*x2*y3*z1+cp2*m2*x2*y3*z1+cp1*cp2*m2*x2*y3*z1+c2*x3*y3*z1+c2*cp1*x3*y3*z1+c1*cp2*x3*y3*z1+c2*cp2*x3*y3*z1+c1*cp1*cp2*x3*y3*z1+m2*x3*y3*z1+cp1*m2*x3*y3*z1+cp2*m2*x3*y3*z1+c1*cp2*y1*y3*z1+c2*cp2*y1*y3*z1+cp1*cp2*y1*y3*z1+cp2*m1*y1*y3*z1+cp2*m2*y1*y3*z1+cp1*y2*y3*z1+c1*cp1*y2*y3*z1+c2*cp1*y2*y3*z1+c1*c2*cp1*y2*y3*z1+cp2*y2*y3*z1+c2*cp2*y2*y3*z1+cp1*cp2*y2*y3*z1+c2*cp1*cp2*y2*y3*z1+cp1*m2*y2*y3*z1+c1*cp1*m2*y2*y3*z1+cp2*m2*y2*y3*z1+cp1*cp2*m2*y2*y3*z1+(1/2)*cp2*m1*y3*(1+y3)*z1+(1/2)*cp1*cp2*m1*y3*(1+y3)*z1+(1/2)*cp1*m2*y3*(1+y3)*z1+(1/2)*cp2*m2*y3*(1+y3)*z1+(1/2)*cp3*m2*x1*z1*(1+z1)+(1/2)*c3*x2*z1*(1+z1)+(1/2)*c3*cp1*x2*z1*(1+z1)+(1/2)*cp3*m2*y1*z1*(1+z1)+(1/2)*c3*y2*z1*(1+z1)+(1/2)*c3*cp1*y2*z1*(1+z1)+c1*c3*x1*z2+c1*c3*cp2*x1*z2+c1*c3*cp1*cp2*x1*z2+c2*cp3*x1*z2+c2*cp1*cp3*x1*z2+c3*m1*x1*z2+c3*cp1*m1*x1*z2+c1*c3*cp1*m1*x1*z2+c3*cp2*m1*x1*z2+c1*c3*cp2*m1*x1*z2+c3*cp1*cp2*m1*x1*z2+c3*m2*x1*z2+c3*cp1*m2*x1*z2+c2*cp3*m2*x1*z2+c3*cp3*m2*x1*z2+c2*cp1*cp3*m2*x1*z2+c3*cp1*cp3*m2*x1*z2+(1/2)*c1*c3*cp1*x1*(1+x1)*z2+(1/2)*c1*c3*cp2*x1*(1+x1)*z2+c1*c3*cp1*x1*x2*z2+c1*c3*cp2*x1*x2*z2+c3*cp1*m1*x1*x2*z2+c1*c3*cp1*m1*x1*x2*z2+c3*cp2*m1*x1*x2*z2+c1*c3*cp2*m1*x1*x2*z2+(1/2)*c3*cp1*x2*(1+x2)*z2+(1/2)*c1*c3*cp1*x2*(1+x2)*z2+(1/2)*c1*c3*cp2*x2*(1+x2)*z2+(1/2)*c3*cp1*m1*x2*(1+x2)*z2+(1/2)*c3*cp1*cp2*m1*x2*(1+x2)*z2+c1*cp2*x1*x3*z2+c2*cp2*x1*x3*z2+c1*cp1*cp2*x1*x3*z2+c2*cp1*cp2*x1*x3*z2+cp2*m2*x1*x3*z2+cp1*cp2*m2*x1*x3*z2+(1/2)*c1*c3*x3*(1+x3)*z2+(1/2)*c2*cp1*x3*(1+x3)*z2+(1/2)*cp2*m1*x3*(1+x3)*z2+(1/2)*cp1*cp2*m1*x3*(1+x3)*z2+c3*y1*z2+c1*c3*y1*z2+c3*cp2*y1*z2+c1*c3*cp2*y1*z2+c3*cp1*cp2*y1*z2+c1*c3*cp1*cp2*y1*z2+c2*cp3*y1*z2+c2*cp1*cp3*y1*z2+c3*m1*y1*z2+c1*c3*cp1*m1*y1*z2+c3*cp2*m1*y1*z2+c1*c3*cp2*m1*y1*z2+c3*m2*y1*z2+c3*cp1*m2*y1*z2+c2*cp3*m2*y1*z2+c3*cp3*m2*y1*z2+c2*cp1*cp3*m2*y1*z2+c3*cp1*cp3*m2*y1*z2+c3*cp1*x1*y1*z2+c3*cp2*x1*y1*z2+c3*cp1*x2*y1*z2+c3*cp2*x2*y1*z2+c1*c3*cp1*m1*x2*y1*z2+c3*cp2*m1*x2*y1*z2+c1*c3*cp2*m1*x2*y1*z2+c3*cp1*cp2*m1*x2*y1*z2+cp2*x3*y1*z2+c1*cp2*x3*y1*z2+c3*cp2*x3*y1*z2+cp1*cp2*x3*y1*z2+c1*cp1*cp2*x3*y1*z2+c2*cp1*cp2*x3*y1*z2+cp2*m2*x3*y1*z2+cp1*cp2*m2*x3*y1*z2+cp2*cp3*m2*x3*y1*z2+(1/2)*c3*cp1*y1*(1+y1)*z2+(1/2)*c1*c3*cp1*y1*(1+y1)*z2+(1/2)*c1*c3*cp2*y1*(1+y1)*z2+(1/2)*c3*cp1*cp2*y1*(1+y1)*z2+c3*cp1*x1*y2*z2+c3*cp2*x1*y2*z2+c3*cp1*m1*x1*y2*z2+c1*c3*cp1*m1*x1*y2*z2+c3*cp2*m1*x1*y2*z2+c1*c3*cp2*m1*x1*y2*z2+c3*cp1*y1*y2*z2+c1*c3*cp1*y1*y2*z2+c1*c3*cp2*y1*y2*z2+c3*cp1*cp2*y1*y2*z2+c1*c3*cp1*m1*y1*y2*z2+c3*cp2*m1*y1*y2*z2+c1*c3*cp2*m1*y1*y2*z2+c3*cp1*cp2*m1*y1*y2*z2+(1/2)*c1*c3*cp1*y2*(1+y2)*z2+(1/2)*c1*c3*cp2*y2*(1+y2)*z2+(1/2)*c3*cp1*cp2*y2*(1+y2)*z2+(1/2)*c3*cp1*m1*y2*(1+y2)*z2+(1/2)*c3*cp1*cp2*m1*y2*(1+y2)*z2+cp2*x1*y3*z2+c1*cp2*x1*y3*z2+c2*cp2*x1*y3*z2+cp1*cp2*x1*y3*z2+c1*cp1*cp2*x1*y3*z2+c2*cp1*cp2*x1*y3*z2+cp2*m2*x1*y3*z2+cp1*cp2*m2*x1*y3*z2+c1*cp2*y1*y3*z2+c3*cp2*y1*y3*z2+c1*cp1*cp2*y1*y3*z2+c2*cp1*cp2*y1*y3*z2+cp2*m2*y1*y3*z2+cp1*cp2*m2*y1*y3*z2+cp2*cp3*m2*y1*y3*z2+(1/2)*c1*y3*(1+y3)*z2+(1/2)*c1*c3*y3*(1+y3)*z2+(1/2)*cp1*y3*(1+y3)*z2+(1/2)*c2*cp1*y3*(1+y3)*z2+(1/2)*cp2*m1*y3*(1+y3)*z2+(1/2)*cp1*cp2*m1*y3*(1+y3)*z2+c1*c3*z1*z2+c1*c3*cp1*cp2*z1*z2+c2*cp1*cp3*z1*z2+c3*cp1*cp2*m1*z1*z2+c3*cp1*m2*z1*z2+c2*cp1*cp3*m2*z1*z2+c3*cp1*cp3*m2*z1*z2+c3*x1*z1*z2+c3*cp1*x1*z1*z2+c1*c3*cp1*x1*z1*z2+c1*c3*cp2*x1*z1*z2+c3*x2*z1*z2+c1*c3*cp1*x2*z1*z2+c1*c3*cp2*x2*z1*z2+c3*cp1*m1*x2*z1*z2+c3*cp1*cp2*m1*x2*z1*z2+c1*cp2*x3*z1*z2+c1*cp1*cp2*x3*z1*z2+c2*cp1*cp2*x3*z1*z2+cp1*cp2*m2*x3*z1*z2+c3*y1*z1*z2+c1*c3*cp1*y1*z1*z2+c1*c3*cp2*y1*z1*z2+c3*cp1*cp2*y1*z1*z2+c3*y2*z1*z2+c3*cp1*y2*z1*z2+c1*c3*cp1*y2*z1*z2+c1*c3*cp2*y2*z1*z2+c3*cp1*cp2*y2*z1*z2+c3*cp1*m1*y2*z1*z2+c3*cp1*cp2*m1*y2*z1*z2+c1*cp2*y3*z1*z2+cp1*cp2*y3*z1*z2+c1*cp1*cp2*y3*z1*z2+c2*cp1*cp2*y3*z1*z2+cp1*cp2*m2*y3*z1*z2+(1/2)*c3*cp1*z1*(1+z1)*z2+(1/2)*c3*x1*z2*(1+z2)+(1/2)*c3*cp1*x1*z2*(1+z2)+(1/2)*c1*c3*cp1*x1*z2*(1+z2)+(1/2)*c1*c3*cp2*x1*z2*(1+z2)+(1/2)*c3*cp1*x2*z2*(1+z2)+(1/2)*c1*c3*cp1*x2*z2*(1+z2)+(1/2)*c1*c3*cp2*x2*z2*(1+z2)+(1/2)*c3*cp1*m1*x2*z2*(1+z2)+(1/2)*c3*cp1*cp2*m1*x2*z2*(1+z2)+c3*y1*z2*(1+z2)+(1/2)*c1*c3*cp1*y1*z2*(1+z2)+(1/2)*c1*c3*cp2*y1*z2*(1+z2)+(1/2)*c3*cp1*cp2*y1*z2*(1+z2)+(1/2)*cp3*m2*y1*z2*(1+z2)+(1/2)*c1*c3*cp1*y2*z2*(1+z2)+(1/2)*c1*c3*cp2*y2*z2*(1+z2)+(1/2)*c3*cp1*cp2*y2*z2*(1+z2)+(1/2)*c3*cp1*m1*y2*z2*(1+z2)+(1/2)*c3*cp1*cp2*m1*y2*z2*(1+z2)+c2*x1*z3+c1*c2*x1*z3+c1*c2*cp1*x1*z3+c1*cp2*x1*z3+c1*c2*cp2*x1*z3+c2*c3*cp2*x1*z3+c1*cp1*cp2*x1*z3+c2*cp1*cp2*x1*z3+c1*c2*cp1*cp2*x1*z3+c2*cp2*cp3*x1*z3+cp2*m1*x1*z3+cp1*cp2*m1*x1*z3+c1*m2*x1*z3+c2*m2*x1*z3+c3*m2*x1*z3+c1*cp1*m2*x1*z3+c2*cp1*m2*x1*z3+c3*cp1*m2*x1*z3+c1*cp2*m2*x1*z3+c2*cp2*m2*x1*z3+c3*cp2*m2*x1*z3+c3*cp3*m2*x1*z3+c3*cp1*cp3*m2*x1*z3+c2*cp2*cp3*m2*x1*z3+c3*cp2*cp3*m2*x1*z3+c2*cp1*x1*x2*z3+c1*c2*cp1*x1*x2*z3+c1*cp2*x1*x2*z3+c1*cp1*cp2*x1*x2*z3+c2*cp1*cp2*x1*x2*z3+cp2*m1*x1*x2*z3+cp1*cp2*m1*x1*x2*z3+cp1*m2*x1*x2*z3+c1*c2*cp1*x1*x3*z3+c1*cp1*cp2*m2*x1*x3*z3+c1*c2*y1*z3+c2*c3*y1*z3+c2*cp1*y1*z3+c1*c2*cp1*y1*z3+cp2*y1*z3+c1*cp2*y1*z3+c2*cp2*y1*z3+c1*c2*cp2*y1*z3+cp1*cp2*y1*z3+c1*cp1*cp2*y1*z3+c1*c2*cp1*cp2*y1*z3+c2*cp2*cp3*y1*z3+cp2*m1*y1*z3+cp1*cp2*m1*y1*z3+m2*y1*z3+c1*m2*y1*z3+c2*m2*y1*z3+cp1*m2*y1*z3+c1*cp1*m2*y1*z3+c2*cp1*m2*y1*z3+c3*cp1*m2*y1*z3+cp2*m2*y1*z3+c1*cp2*m2*y1*z3+c2*cp2*m2*y1*z3+c3*cp2*m2*y1*z3+cp3*m2*y1*z3+c2*cp3*m2*y1*z3+c3*cp3*m2*y1*z3+c3*cp1*cp3*m2*y1*z3+c3*cp2*cp3*m2*y1*z3+cp2*x1*y1*z3+cp1*cp2*x1*y1*z3+c2*x2*y1*z3+c2*c3*x2*y1*z3+c1*c2*cp1*x2*y1*z3+cp2*x2*y1*z3+c1*cp2*x2*y1*z3+c2*cp2*x2*y1*z3+c3*cp2*x2*y1*z3+cp1*cp2*x2*y1*z3+c1*cp1*cp2*x2*y1*z3+c2*cp1*cp2*x2*y1*z3+cp2*m1*x2*y1*z3+cp1*cp2*m1*x2*y1*z3+cp1*m2*x2*y1*z3+c2*cp3*m2*x2*y1*z3+cp2*cp3*m2*x2*y1*z3+c2*c3*x3*y1*z3+c2*cp1*x3*y1*z3+c1*c2*cp1*x3*y1*z3+c2*m2*x3*y1*z3+c2*cp2*m2*x3*y1*z3+c3*cp2*m2*x3*y1*z3+cp1*cp2*m2*x3*y1*z3+c1*cp1*cp2*m2*x3*y1*z3+c2*cp3*m2*x3*y1*z3+cp2*cp3*m2*x3*y1*z3+cp1*x1*y2*z3+c2*cp1*x1*y2*z3+c1*c2*cp1*x1*y2*z3+cp2*x1*y2*z3+c1*cp2*x1*y2*z3+c2*cp1*cp2*x1*y2*z3+cp2*m1*x1*y2*z3+cp1*cp2*m1*x1*y2*z3+cp1*m2*x1*y2*z3+c2*c3*y1*y2*z3+cp1*y1*y2*z3+c1*c2*cp1*y1*y2*z3+c1*cp2*y1*y2*z3+c2*cp1*cp2*y1*y2*z3+cp2*m1*y1*y2*z3+cp1*cp2*m1*y1*y2*z3+cp1*m2*y1*y2*z3+c2*cp3*m2*y1*y2*z3+c1*c2*cp1*x1*y3*z3+c1*cp1*cp2*x1*y3*z3+c1*cp1*cp2*m2*x1*y3*z3+c2*y1*y3*z3+c2*c3*y1*y3*z3+c2*cp1*y1*y3*z3+c1*c2*cp1*y1*y3*z3+c2*cp2*y1*y3*z3+c3*cp2*y1*y3*z3+cp1*cp2*y1*y3*z3+c1*cp1*cp2*y1*y3*z3+c2*m2*y1*y3*z3+c2*cp2*m2*y1*y3*z3+c3*cp2*m2*y1*y3*z3+cp1*cp2*m2*y1*y3*z3+c1*cp1*cp2*m2*y1*y3*z3+c2*cp3*m2*y1*y3*z3+c1*c2*z1*z3+c1*c2*cp1*z1*z3+c1*c2*cp2*z1*z3+c2*c3*cp2*z1*z3+c1*cp1*cp2*z1*z3+c2*cp1*cp2*z1*z3+c1*c2*cp1*cp2*z1*z3+c2*cp2*cp3*z1*z3+cp1*cp2*m1*z1*z3+c1*m2*z1*z3+c2*m2*z1*z3+c1*cp1*m2*z1*z3+c2*cp1*m2*z1*z3+c3*cp1*m2*z1*z3+c1*cp2*m2*z1*z3+c2*cp2*m2*z1*z3+c3*cp2*m2*z1*z3+c3*cp1*cp3*m2*z1*z3+c2*cp2*cp3*m2*z1*z3+c3*cp2*cp3*m2*z1*z3+c1*cp2*x1*z1*z3+c2*cp2*x1*z1*z3+m2*x1*z1*z3+c2*x2*z1*z3+c2*cp1*x2*z1*z3+c1*c2*cp1*x2*z1*z3+c1*cp2*x2*z1*z3+c2*cp2*x2*z1*z3+c1*cp1*cp2*x2*z1*z3+c2*cp1*cp2*x2*z1*z3+cp1*cp2*m1*x2*z1*z3+m2*x2*z1*z3+cp1*m2*x2*z1*z3+c2*x3*z1*z3+c1*c2*cp1*x3*z1*z3+c2*m2*x3*z1*z3+c1*cp1*cp2*m2*x3*z1*z3+c1*cp2*y1*z1*z3+c2*cp2*y1*z1*z3+cp1*cp2*y1*z1*z3+m2*y1*z1*z3+y2*z1*z3+cp1*y2*z1*z3+c2*cp1*y2*z1*z3+c1*c2*cp1*y2*z1*z3+cp2*y2*z1*z3+c1*cp2*y2*z1*z3+c2*cp2*y2*z1*z3+c2*cp1*cp2*y2*z1*z3+cp1*cp2*m1*y2*z1*z3+m2*y2*z1*z3+cp1*m2*y2*z1*z3+c1*c2*cp1*y3*z1*z3+c1*cp1*cp2*y3*z1*z3+c2*m2*y3*z1*z3+c1*cp1*cp2*m2*y3*z1*z3+c1*cp1*x1*z2*z3+c2*cp2*x1*z2*z3+c1*cp1*cp2*x1*z2*z3+c2*cp1*cp2*x1*z2*z3+m1*x1*z2*z3+cp1*m1*x1*z2*z3+cp2*m1*x1*z2*z3+cp1*cp2*m1*x1*z2*z3+m2*x1*z2*z3+cp1*m2*x1*z2*z3+c2*y1*z2*z3+c3*y1*z2*z3+cp1*y1*z2*z3+c1*cp1*y1*z2*z3+c3*cp2*y1*z2*z3+cp1*cp2*y1*z2*z3+c1*cp1*cp2*y1*z2*z3+c2*cp1*cp2*y1*z2*z3+m1*y1*z2*z3+cp1*m1*y1*z2*z3+cp2*m1*y1*z2*z3+cp1*cp2*m1*y1*z2*z3+m2*y1*z2*z3+cp1*m2*y1*z2*z3+cp3*m2*y1*z2*z3+cp2*cp3*m2*y1*z2*z3+c1*cp1*z1*z2*z3+c1*cp1*cp2*z1*z2*z3+c2*cp1*cp2*z1*z2*z3+cp1*m1*z1*z2*z3+cp1*cp2*m1*z1*z2*z3+cp1*m2*z1*z2*z3+(1/2)*cp1*cp2*m1*x1*z3*(1+z3)+(1/2)*c1*c3*x2*z3*(1+z3)+(1/2)*c2*cp1*x2*z3*(1+z3)+(1/2)*m1*x2*z3*(1+z3)+(1/2)*c3*m1*x2*z3*(1+z3)+(1/2)*cp1*m1*x2*z3*(1+z3)+(1/2)*cp2*m1*x2*z3*(1+z3)+(1/2)*cp1*cp2*m1*x2*z3*(1+z3)+(1/2)*cp1*cp2*m1*y1*z3*(1+z3)+(1/2)*cp3*m2*y1*z3*(1+z3)+(1/2)*c1*c3*y2*z3*(1+z3)+(1/2)*cp1*y2*z3*(1+z3)+(1/2)*c2*cp1*y2*z3*(1+z3)+(1/2)*m1*y2*z3*(1+z3)+(1/2)*c3*m1*y2*z3*(1+z3)+(1/2)*cp1*m1*y2*z3*(1+z3)+(1/2)*cp2*m1*y2*z3*(1+z3)+(1/2)*cp1*cp2*m1*y2*z3*(1+z3)+(1/2)*cp1*cp2*m1*z1*z3*(1+z3)+(1/2)*c1*c3*z2*z3*(1+z3)+(1/2)*c2*cp1*z2*z3*(1+z3)+(1/2)*cp1*cp2*m1*z2*z3*(1+z3);
end;
#####################################################################
#Space Group No. 98 (Subscript[I4,1]22)
#####################################################################
Acpin98:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cp1;
end;
#####################################################################
Acppin98:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return cpp1;
end;
#####################################################################
Axyzin98:=function(g1)
local x1, y1, z1, c1, cp1, cpp1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
return x1+y1+z1;
end;
#####################################################################
BGAPin98:=function(g1,g2)
local x1, y1, z1, c1, cp1, cpp1, x2, y2, z2, c2, cp2, cpp2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];cpp1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];cpp2:=g2[6];
return c2*cp1+c1*cp2+c2*cpp1+c1*cp2*cpp1+c2*cp2*cpp1+c1*x2+c1*cp1*x2+c2*cp1*x2+cpp1*x2+x1*x2+x2*y1+c1*y2+c1*cp1*y2+c2*cp1*y2+cpp1*y2+x1*y2+y1*y2+c2*z1+cp1*x2*z1+cp1*y2*z1+c1*cp1*z2+c2*cp1*z2+cpp1*z2+x1*z2+cp1*x2*z2+y1*z2+cp1*y2*z2+z1*z2+cp1*z1*z2;
end;
#####################################################################
CGAPin98:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return
c1*c2*c3*cp1*cp2+c1*c2*cp1*cp3+c1*c2*c3*cp1*cp3+c1*c3*cp2*cp3+c1*c3*cp1*cp2*cp3+c2*c3*cp1*cp2*cp3+c2*c3*cp1*m1+c1*c2*c3*cp1*m1+c1*c2*c3*cp2*m1+c2*c3*cp1*cp2*m1+c1*c2*cp3*m1+c1*c2*c3*cp3*m1+c2*cp1*cp3*m1+c2*c3*cp1*cp3*m1+cp1*cp2*cp3*m1+c2*c3*cp1*cp2*cp3*m1+c1*c2*c3*m2+c1*c2*c3*cp2*m2+c1*c2*c3*cp1*cp2*m2+c1*c2*cp3*m2+c1*cp1*cp3*m2+c2*cp1*cp3*m2+c1*cp2*cp3*m2+c1*c2*cp2*cp3*m2+c1*c3*cp2*cp3*m2+cp1*cp2*cp3*m2+c2*c3*cp1*cp2*cp3*m2+c1*c3*m1*m2+c2*c3*m1*m2+c1*c2*c3*m1*m2+c1*c3*cp1*m1*m2+c2*c3*cp1*m1*m2+c3*cp2*m1*m2+c1*c3*cp2*m1*m2+c3*cp1*cp2*m1*m2+c1*c3*cp1*cp2*m1*m2+c1*cp3*m1*m2+c1*c2*cp3*m1*m2+cp1*cp3*m1*m2+c2*cp1*cp3*m1*m2+c1*c2*cp1*cp3*m1*m2+c3*cp1*cp3*m1*m2+c1*c3*cp1*cp3*m1*m2+c2*c3*cp1*cp3*m1*m2+c2*cp2*cp3*m1*m2+c1*c2*cp2*cp3*m1*m2+c3*cp2*cp3*m1*m2+c1*c3*cp2*cp3*m1*m2+c1*cp1*cp2*cp3*m1*m2+c3*cp1*cp2*cp3*m1*m2+c1*c3*cp1*cp2*cp3*m1*m2+c2*c3*cp1*cp2*cp3*m1*m2+c1*c2*cp2*m3+c1*c2*c3*cp2*m3+c1*cp1*cp2*m3+c2*cp1*cp2*m3+c1*c3*cp1*cp2*m3+c2*c3*cp1*cp2*m3+c1*c2*c3*cp1*cp2*m3+c1*c2*cp3*m3+c1*cp2*cp3*m3+c1*c2*cp2*cp3*m3+c1*c3*cp2*cp3*m3+c1*c2*c3*cp2*cp3*m3+c2*cp1*cp2*cp3*m3+c3*cp1*cp2*cp3*m3+c1*c3*cp1*cp2*cp3*m3+c2*cp1*m1*m3+c1*c2*cp1*m1*m3+c1*c3*cp2*m1*m3+cp1*cp2*m1*m3+c1*cp1*cp2*m1*m3+c1*c2*cp1*cp2*m1*m3+c1*c3*cp1*cp2*m1*m3+c2*c3*cp1*cp3*m1*m3+cp1*cp2*cp3*m1*m3+c1*cp1*cp2*cp3*m1*m3+c2*cp1*cp2*cp3*m1*m3+c1*c3*cp1*cp2*cp3*m1*m3+c2*c3*cp1*cp2*cp3*m1*m3+c1*c2*m2*m3+c1*c3*m2*m3+c1*c2*c3*m2*m3+c1*cp1*m2*m3+c2*cp1*m2*m3+c1*c2*cp1*m2*m3+c2*c3*cp1*m2*m3+c1*cp2*m2*m3+c1*c2*cp2*m2*m3+c2*cp1*cp2*m2*m3+c1*cp3*m2*m3+c1*cp1*cp3*m2*m3+c1*c2*cp1*cp3*m2*m3+c1*c3*cp1*cp3*m2*m3+c1*c2*cp2*cp3*m2*m3+c1*c3*cp2*cp3*m2*m3+cp1*cp2*cp3*m2*m3+c2*cp1*cp2*cp3*m2*m3+c1*c2*cp1*cp2*cp3*m2*m3+c1*c3*cp1*cp2*cp3*m2*m3+c2*c3*cp1*cp2*cp3*m2*m3+m1*m2*m3+c2*m1*m2*m3+c3*m1*m2*m3+c3*cp1*m1*m2*m3+c1*cp2*m1*m2*m3+c2*cp2*m1*m2*m3+c3*cp2*m1*m2*m3+c1*c3*cp2*m1*m2*m3+c2*c3*cp2*m1*m2*m3+c1*cp1*cp2*m1*m2*m3+c2*cp1*cp2*m1*m2*m3+c3*cp1*cp2*m1*m2*m3+c2*cp3*m1*m2*m3+c1*c2*cp3*m1*m2*m3+c1*c3*cp3*m1*m2*m3+c2*c3*cp3*m1*m2*m3+cp1*cp3*m1*m2*m3+c3*cp1*cp3*m1*m2*m3+cp2*cp3*m1*m2*m3+c1*cp2*cp3*m1*m2*m3+cp1*cp2*cp3*m1*m2*m3+c2*c3*x1+c2*c3*cp1*x1+c2*c3*cp2*x1+c1*c3*cp1*cp2*x1+c2*c3*cp1*cp2*x1+c1*c2*c3*cp1*cp2*x1+c1*c2*c3*cp3*x1+c1*c2*c3*cp1*cp3*x1+c1*c3*cp1*cp2*cp3*x1+c1*c2*c3*cp1*cp2*cp3*x1+c2*c3*m1*x1+c2*c3*cp1*m1*x1+c3*cp2*m1*x1+c1*c3*cp2*m1*x1+c2*c3*cp2*m1*x1+c3*cp1*cp2*m1*x1+c2*c3*cp1*cp2*m1*x1+c2*cp3*m1*x1+c1*c2*cp3*m1*x1+c2*c3*cp3*m1*x1+c1*c2*cp1*cp3*m1*x1+cp2*cp3*m1*x1+c1*cp2*cp3*m1*x1+c2*cp2*cp3*m1*x1+c2*c3*cp2*cp3*m1*x1+cp1*cp2*cp3*m1*x1+c1*c3*cp1*cp2*cp3*m1*x1+c1*c3*cp2*m2*x1+c1*c3*cp1*cp2*m2*x1+cp3*m2*x1+c1*cp3*m2*x1+c1*c2*cp3*m2*x1+c3*cp3*m2*x1+c1*c2*c3*cp3*m2*x1+cp1*cp3*m2*x1+c2*cp1*cp3*m2*x1+c3*cp1*cp3*m2*x1+c1*c3*cp1*cp3*m2*x1+c2*c3*cp1*cp3*m2*x1+c1*c2*c3*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c1*cp2*cp3*m2*x1+c3*cp2*cp3*m2*x1+c1*c3*cp2*cp3*m2*x1+c2*c3*cp2*cp3*m2*x1+c1*c2*c3*cp2*cp3*m2*x1+c1*cp1*cp2*cp3*m2*x1+c3*cp1*cp2*cp3*m2*x1+c2*c3*cp1*cp2*cp3*m2*x1+c1*c2*c3*cp1*cp2*cp3*m2*x1+c3*m1*m2*x1+c1*c3*m1*m2*x1+c2*c3*m1*m2*x1+c3*cp1*m1*m2*x1+c3*cp1*cp2*m1*m2*x1+cp3*m1*m2*x1+c2*c3*cp3*m1*m2*x1+c2*c3*cp1*cp3*m1*m2*x1+c1*cp2*cp3*m1*m2*x1+c2*cp2*cp3*m1*m2*x1+c3*cp2*cp3*m1*m2*x1+c2*c3*cp2*cp3*m1*m2*x1+cp1*cp2*cp3*m1*m2*x1+c1*cp1*cp2*cp3*m1*m2*x1+c2*c3*cp1*cp2*cp3*m1*m2*x1+c1*c2*cp2*m3*x1+c1*c3*cp2*m3*x1+c1*cp1*cp2*m3*x1+c1*c2*cp1*cp2*m3*x1+c1*c3*cp1*cp2*m3*x1+c2*c3*cp3*m3*x1+c1*c2*cp1*cp3*m3*x1+c2*c3*cp1*cp3*m3*x1+c1*cp2*cp3*m3*x1+c2*cp2*cp3*m3*x1+c1*c3*cp2*cp3*m3*x1+c2*c3*cp2*cp3*m3*x1+c1*c2*m1*m3*x1+cp2*m1*m3*x1+c1*cp2*m1*m3*x1+cp1*cp2*m1*m3*x1+c1*cp1*cp2*m1*m3*x1+c2*cp1*cp2*m1*m3*x1+c3*cp1*cp2*m1*m3*x1+c2*cp3*m1*m3*x1+cp2*cp3*m1*m3*x1+c3*cp2*cp3*m1*m3*x1+cp1*cp2*cp3*m1*m3*x1+c3*cp1*cp2*cp3*m1*m3*x1+m2*m3*x1+c1*m2*m3*x1+c2*m2*m3*x1+c3*m2*m3*x1+c1*c3*m2*m3*x1+c2*c3*m2*m3*x1+cp1*m2*m3*x1+c1*cp1*m2*m3*x1+c2*cp1*m2*m3*x1+c3*cp1*m2*m3*x1+cp2*m2*m3*x1+c1*cp2*m2*m3*x1+c2*cp2*m2*m3*x1+c3*cp2*m2*m3*x1+cp3*m2*m3*x1+c2*cp3*m2*m3*x1+c2*cp1*cp3*m2*m3*x1+c3*cp1*cp3*m2*m3*x1+c2*cp2*cp3*m2*m3*x1+c3*cp2*cp3*m2*m3*x1+c1*cp1*cp2*cp3*m2*m3*x1+c3*cp2*m1*m2*m3*x1+cp1*cp2*m1*m2*m3*x1+c1*cp3*m1*m2*m3*x1+c2*cp3*m1*m2*m3*x1+c3*cp3*m1*m2*m3*x1+cp2*cp3*m1*m2*m3*x1+(1/2)*c2*c3*x1*(1+x1)+(1/2)*c2*c3*cp1*x1*(1+x1)+(1/2)*c2*c3*cp2*x1*(1+x1)+(1/2)*c1*c2*cp3*x1*(1+x1)+(1/2)*c2*c3*cp3*x1*(1+x1)+(1/2)*c2*cp1*cp3*m1*x1*(1+x1)+(1/2)*c3*cp2*m2*x1*(1+x1)+(1/2)*cp3*m2*x1*(1+x1)+(1/2)*c2*cp3*m2*x1*(1+x1)+(1/2)*c3*cp3*m2*x1*(1+x1)+(1/2)*c1*cp1*cp3*m2*x1*(1+x1)+(1/2)*c3*cp1*cp3*m2*x1*(1+x1)+(1/2)*cp2*cp3*m2*x1*(1+x1)+(1/2)*c1*cp2*cp3*m2*x1*(1+x1)+(1/2)*c3*cp2*cp3*m2*x1*(1+x1)+(1/2)*cp1*cp3*m1*m2*x1*(1+x1)+(1/2)*cp1*cp2*cp3*m1*m2*x1*(1+x1)+(1/2)*c2*cp2*m3*x1*(1+x1)+(1/2)*c3*cp2*m3*x1*(1+x1)+(1/2)*c2*cp3*m3*x1*(1+x1)+(1/2)*m2*m3*x1*(1+x1)+(1/2)*cp3*m2*m3*x1*(1+x1)+(1/2)*cp2*cp3*m2*m3*x1*(1+x1)+c1*c2*cp3*x2+c1*c2*c3*cp3*x2+c1*c2*cp1*cp3*x2+c2*c3*cp1*cp3*x2+c1*c2*c3*cp1*cp2*cp3*x2+c1*c3*m1*x2+c2*c3*m1*x2+c1*c3*cp2*m1*x2+c2*c3*cp2*m1*x2+c1*c3*cp1*cp2*m1*x2+cp3*m1*x2+c2*cp3*m1*x2+c1*c3*cp3*m1*x2+c2*c3*cp3*m1*x2+cp1*cp3*m1*x2+c2*cp1*cp3*m1*x2+c1*c2*cp1*cp3*m1*x2+c1*c3*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c1*cp2*cp3*m1*x2+c1*c2*cp2*cp3*m1*x2+c1*c3*cp2*cp3*m1*x2+c2*c3*cp2*cp3*m1*x2+c2*cp1*cp2*cp3*m1*x2+c1*c3*m2*x2+c1*c3*cp1*m2*x2+c1*c3*cp2*m2*x2+c1*c3*cp1*cp2*m2*x2+c1*cp3*m2*x2+c1*c2*cp3*m2*x2+c1*cp1*cp3*m2*x2+c2*cp1*cp3*m2*x2+c3*cp1*cp3*m2*x2+c1*c3*cp1*cp3*m2*x2+c2*c3*cp1*cp3*m2*x2+c1*c2*c3*cp1*cp3*m2*x2+c1*c3*cp2*cp3*m2*x2+c1*c2*cp1*cp2*cp3*m2*x2+c1*c2*c3*cp1*cp2*cp3*m2*x2+c3*m1*m2*x2+c2*c3*m1*m2*x2+c3*cp1*m1*m2*x2+c3*cp2*m1*m2*x2+c3*cp1*cp2*m1*m2*x2+cp3*m1*m2*x2+c1*cp3*m1*m2*x2+c2*cp3*m1*m2*x2+c3*cp3*m1*m2*x2+cp1*cp3*m1*m2*x2+c1*cp1*cp3*m1*m2*x2+c1*c2*cp1*cp3*m1*m2*x2+c3*cp1*cp3*m1*m2*x2+c1*c3*cp1*cp3*m1*m2*x2+c2*c3*cp1*cp3*m1*m2*x2+cp2*cp3*m1*m2*x2+c2*cp2*cp3*m1*m2*x2+cp1*cp2*cp3*m1*m2*x2+c2*cp1*cp2*cp3*m1*m2*x2+c1*c2*cp1*cp2*cp3*m1*m2*x2+c1*c3*cp1*cp2*cp3*m1*m2*x2+c2*c3*cp1*cp2*cp3*m1*m2*x2+c1*c2*m3*x2+c1*c3*m3*x2+c1*c2*cp1*m3*x2+c1*c3*cp1*m3*x2+c1*c2*cp2*m3*x2+c1*c3*cp2*m3*x2+c1*c2*cp1*cp2*m3*x2+c1*c3*cp1*cp2*m3*x2+c1*c2*cp3*m3*x2+c1*c2*cp1*cp3*m3*x2+c1*m1*m3*x2+c3*m1*m3*x2+c1*cp1*m1*m3*x2+c2*cp1*m1*m3*x2+c3*cp1*m1*m3*x2+c2*cp2*m1*m3*x2+c3*cp2*m1*m3*x2+cp1*cp2*m1*m3*x2+c1*cp1*cp2*m1*m3*x2+c2*cp1*cp2*m1*m3*x2+c3*cp1*cp2*m1*m3*x2+c2*cp3*m1*m3*x2+cp1*cp3*m1*m3*x2+c2*cp1*cp3*m1*m3*x2+c1*m2*m3*x2+c1*cp1*m2*m3*x2+c1*cp3*m2*m3*x2+c1*cp1*cp3*m2*m3*x2+c1*cp2*cp3*m2*m3*x2+c1*cp1*cp2*cp3*m2*m3*x2+m1*m2*m3*x2+c3*m1*m2*m3*x2+cp1*m1*m2*m3*x2+cp2*m1*m2*m3*x2+c3*cp2*m1*m2*m3*x2+c2*cp3*m1*m2*m3*x2+c3*cp3*m1*m2*m3*x2+c3*x1*x2+c2*c3*x1*x2+c3*cp1*x1*x2+c1*c3*cp1*x1*x2+c2*c3*cp1*x1*x2+c3*cp2*x1*x2+c2*c3*cp2*x1*x2+c2*c3*cp1*cp2*x1*x2+cp3*x1*x2+c1*cp3*x1*x2+c2*cp3*x1*x2+c1*c2*cp3*x1*x2+c3*cp3*x1*x2+c2*c3*cp3*x1*x2+c1*c2*cp1*cp3*x1*x2+c1*c3*cp2*cp3*x1*x2+c3*cp1*cp2*m1*x1*x2+cp3*m1*x1*x2+c2*cp1*cp3*m1*x1*x2+c3*cp1*cp3*m1*x1*x2+c3*cp2*cp3*m1*x1*x2+c3*cp1*cp2*cp3*m1*x1*x2+c3*m2*x1*x2+c3*cp2*m2*x1*x2+c1*cp3*m2*x1*x2+c2*cp3*m2*x1*x2+c3*cp3*m2*x1*x2+c1*cp1*cp3*m2*x1*x2+c3*cp1*cp3*m2*x1*x2+c1*cp2*cp3*m2*x1*x2+c3*cp2*cp3*m2*x1*x2+c1*cp1*cp2*cp3*m2*x1*x2+c3*cp1*cp2*cp3*m2*x1*x2+cp1*cp3*m1*m2*x1*x2+cp1*cp2*cp3*m1*m2*x1*x2+c1*m3*x1*x2+c2*m3*x1*x2+c3*m3*x1*x2+c1*cp2*m3*x1*x2+c2*cp2*m3*x1*x2+c3*cp2*m3*x1*x2+c2*cp3*m3*x1*x2+m1*m3*x1*x2+c1*m1*m3*x1*x2+cp3*m1*m3*x1*x2+cp1*cp3*m1*m3*x1*x2+m2*m3*x1*x2+cp1*cp3*m2*m3*x1*x2+cp2*cp3*m2*m3*x1*x2+(1/2)*c3*cp1*cp2*x2*(1+x2)+(1/2)*c1*c3*cp1*cp2*x2*(1+x2)+(1/2)*c1*c2*cp3*x2*(1+x2)+(1/2)*cp1*cp3*x2*(1+x2)+(1/2)*c1*cp1*cp3*x2*(1+x2)+(1/2)*c2*cp1*cp3*x2*(1+x2)+(1/2)*c1*c2*cp1*cp3*x2*(1+x2)+(1/2)*c3*cp1*cp3*x2*(1+x2)+(1/2)*c1*c3*cp1*cp3*x2*(1+x2)+(1/2)*c3*cp1*cp2*m1*x2*(1+x2)+(1/2)*cp1*cp3*m1*x2*(1+x2)+(1/2)*c1*cp1*cp3*m1*x2*(1+x2)+(1/2)*c2*cp1*cp3*m1*x2*(1+x2)+(1/2)*c3*cp1*cp3*m1*x2*(1+x2)+(1/2)*cp1*cp3*m2*x2*(1+x2)+(1/2)*c1*cp1*cp3*m2*x2*(1+x2)+(1/2)*c1*cp2*cp3*m2*x2*(1+x2)+(1/2)*cp1*cp2*cp3*m2*x2*(1+x2)+(1/2)*c1*cp1*cp2*cp3*m2*x2*(1+x2)+(1/2)*cp1*cp2*cp3*m1*m2*x2*(1+x2)+(1/2)*m1*m3*x2*(1+x2)+(1/2)*cp1*cp2*m1*m3*x2*(1+x2)+(1/2)*cp1*cp3*m1*m3*x2*(1+x2)+c1*c2*c3*x3+c2*c3*cp1*x3+c1*c2*c3*cp2*x3+c2*c3*cp1*cp2*x3+c2*c3*cp1*cp3*x3+c2*c3*cp1*cp2*cp3*x3+c1*c2*cp1*m1*x3+c1*c2*cp1*cp2*m1*x3+c3*cp1*cp2*m1*x3+c1*c3*cp1*cp2*m1*x3+c2*c3*cp1*cp2*m1*x3+c1*c2*cp1*cp3*m1*x3+c1*c2*c3*cp1*cp3*m1*x3+c1*c2*cp1*cp2*cp3*m1*x3+c3*cp1*cp2*cp3*m1*x3+c1*c3*cp1*cp2*cp3*m1*x3+c2*c3*cp1*cp2*cp3*m1*x3+c1*c2*c3*cp1*cp2*cp3*m1*x3+c1*m2*x3+c1*c2*m2*x3+cp1*m2*x3+c1*cp1*m2*x3+c2*cp1*m2*x3+c1*c2*cp1*m2*x3+c1*c3*cp1*m2*x3+c1*cp2*m2*x3+c1*c2*cp2*m2*x3+cp1*cp2*m2*x3+c1*cp1*cp2*m2*x3+c2*cp1*cp2*m2*x3+c1*c2*cp1*cp2*m2*x3+c1*c2*c3*cp1*cp2*m2*x3+c1*c3*cp3*m2*x3+c3*cp1*cp3*m2*x3+c1*c3*cp1*cp3*m2*x3+c1*c2*c3*cp1*cp3*m2*x3+c1*c2*cp2*cp3*m2*x3+c2*cp1*cp2*cp3*m2*x3+c1*c2*cp1*cp2*cp3*m2*x3+c3*cp1*cp2*cp3*m2*x3+c1*c3*cp1*cp2*cp3*m2*x3+c2*c3*cp1*cp2*cp3*m2*x3+c1*c2*m1*m2*x3+cp1*m1*m2*x3+c1*cp1*m1*m2*x3+c3*cp1*m1*m2*x3+c1*cp2*m1*m2*x3+c2*cp2*m1*m2*x3+c3*cp2*m1*m2*x3+c1*cp1*cp2*m1*m2*x3+c1*c2*cp1*cp2*m1*m2*x3+c1*c3*cp1*cp2*m1*m2*x3+c2*c3*cp1*cp2*m1*m2*x3+c1*cp3*m1*m2*x3+c2*cp3*m1*m2*x3+c3*cp3*m1*m2*x3+cp1*cp3*m1*m2*x3+c3*cp2*cp3*m1*m2*x3+c2*cp1*cp2*cp3*m1*m2*x3+c1*c2*cp1*cp2*cp3*m1*m2*x3+c3*cp1*cp2*cp3*m1*m2*x3+c1*c3*cp1*cp2*cp3*m1*m2*x3+c2*c3*cp1*cp2*cp3*m1*m2*x3+c2*cp1*m3*x3+c1*c2*cp1*m3*x3+c2*c3*cp1*m3*x3+c2*cp1*cp2*m3*x3+c1*c2*cp1*cp2*m3*x3+c2*c3*cp1*cp2*m3*x3+c1*c2*cp3*m3*x3+c1*c2*cp2*cp3*m3*x3+c2*cp1*m1*m3*x3+c2*cp1*cp2*m1*m3*x3+c2*cp1*cp3*m1*m3*x3+c2*cp1*cp2*cp3*m1*m3*x3+c1*c2*m2*m3*x3+cp1*m2*m3*x3+c2*cp1*m2*m3*x3+c3*cp1*m2*m3*x3+c1*cp2*m2*m3*x3+c1*cp1*cp2*m2*m3*x3+c2*cp1*cp2*m2*m3*x3+c3*cp1*cp2*m2*m3*x3+c1*cp3*m2*m3*x3+c2*cp1*cp3*m2*m3*x3+c1*cp2*cp3*m2*m3*x3+cp1*cp2*cp3*m2*m3*x3+c2*cp1*cp2*cp3*m2*m3*x3+c1*m1*m2*m3*x3+c2*m1*m2*m3*x3+c3*m1*m2*m3*x3+cp1*m1*m2*m3*x3+c1*cp2*m1*m2*m3*x3+c2*cp2*m1*m2*m3*x3+cp1*cp2*m1*m2*m3*x3+c3*cp3*m1*m2*m3*x3+cp1*cp3*m1*m2*m3*x3+cp1*cp2*cp3*m1*m2*m3*x3+c1*c2*x1*x3+c2*c3*cp1*x1*x3+c1*c2*c3*cp2*x1*x3+c1*c2*cp1*cp2*x1*x3+c2*c3*cp1*cp2*x1*x3+c1*c2*c3*cp1*cp2*x1*x3+c1*c2*cp3*x1*x3+c2*c3*cp3*x1*x3+c1*c2*c3*cp3*x1*x3+c1*c2*c3*cp1*cp3*x1*x3+c1*c2*cp2*cp3*x1*x3+c2*c3*cp2*cp3*x1*x3+c2*m1*x1*x3+c2*cp1*m1*x1*x3+c2*c3*cp2*m1*x1*x3+c2*c3*cp1*cp2*m1*x1*x3+c2*cp3*m1*x1*x3+c2*c3*cp3*m1*x1*x3+c2*cp1*cp3*m1*x1*x3+c2*c3*cp1*cp3*m1*x1*x3+c2*cp2*cp3*m1*x1*x3+c2*cp1*cp2*cp3*m1*x1*x3+c1*m2*x1*x3+cp1*m2*x1*x3+c2*cp1*m2*x1*x3+c3*cp1*m2*x1*x3+c1*cp2*m2*x1*x3+c1*c2*cp2*m2*x1*x3+c1*c3*cp2*m2*x1*x3+cp1*cp2*m2*x1*x3+c2*cp1*cp2*m2*x1*x3+c1*c2*cp1*cp2*m2*x1*x3+c3*cp1*cp2*m2*x1*x3+c1*c3*cp1*cp2*m2*x1*x3+c1*cp3*m2*x1*x3+c3*cp3*m2*x1*x3+c1*c3*cp3*m2*x1*x3+cp1*cp3*m2*x1*x3+c2*cp1*cp3*m2*x1*x3+c1*c3*cp1*cp3*m2*x1*x3+c1*c2*cp2*cp3*m2*x1*x3+c3*cp2*cp3*m2*x1*x3+cp1*cp2*cp3*m2*x1*x3+c1*cp1*cp2*cp3*m2*x1*x3+c2*cp1*cp2*cp3*m2*x1*x3+c1*c2*cp1*cp2*cp3*m2*x1*x3+c1*m1*m2*x1*x3+c2*m1*m2*x1*x3+cp1*m1*m2*x1*x3+c2*cp2*m1*m2*x1*x3+c3*cp2*m1*m2*x1*x3+cp1*cp2*m1*m2*x1*x3+c2*cp1*cp2*m1*m2*x1*x3+c3*cp1*cp2*m1*m2*x1*x3+cp3*m1*m2*x1*x3+c3*cp3*m1*m2*x1*x3+cp1*cp3*m1*m2*x1*x3+c3*cp1*cp3*m1*m2*x1*x3+c2*cp2*cp3*m1*m2*x1*x3+c2*cp1*cp2*cp3*m1*m2*x1*x3+c1*m2*m3*x1*x3+c2*m2*m3*x1*x3+m1*m2*m3*x1*x3+cp2*m1*m2*m3*x1*x3+c1*x2*x3+c1*c3*x2*x3+cp1*x2*x3+c1*cp1*x2*x3+c2*cp1*x2*x3+c3*cp1*x2*x3+c1*c3*cp1*x2*x3+c2*c3*cp1*x2*x3+c1*cp2*x2*x3+c1*c3*cp2*x2*x3+c1*c2*cp1*cp2*x2*x3+c1*c2*c3*cp1*cp2*x2*x3+c1*cp3*x2*x3+c1*c2*cp3*x2*x3+c1*c3*cp3*x2*x3+c1*c2*c3*cp1*cp3*x2*x3+m1*x2*x3+c1*m1*x2*x3+c2*m1*x2*x3+c3*m1*x2*x3+cp1*m1*x2*x3+c1*cp1*m1*x2*x3+c2*cp1*m1*x2*x3+c3*cp1*m1*x2*x3+cp2*m1*x2*x3+c1*cp2*m1*x2*x3+c2*cp2*m1*x2*x3+c3*cp2*m1*x2*x3+c1*c2*cp1*cp2*m1*x2*x3+c1*c3*cp1*cp2*m1*x2*x3+c2*c3*cp1*cp2*m1*x2*x3+cp3*m1*x2*x3+c3*cp3*m1*x2*x3+c2*cp1*cp3*m1*x2*x3+c2*c3*cp1*cp3*m1*x2*x3+c1*cp2*cp3*m1*x2*x3+c2*cp2*cp3*m1*x2*x3+c3*cp2*cp3*m1*x2*x3+c2*cp1*cp2*cp3*m1*x2*x3+c1*c2*cp1*cp2*cp3*m1*x2*x3+c3*cp1*cp2*cp3*m1*x2*x3+c1*c3*cp1*cp2*cp3*m1*x2*x3+c1*m2*x2*x3+cp1*m2*x2*x3+c1*cp1*m2*x2*x3+c2*cp1*m2*x2*x3+c3*cp1*m2*x2*x3+c1*cp2*m2*x2*x3+c1*c2*cp1*cp2*m2*x2*x3+c1*c3*cp1*cp2*m2*x2*x3+c1*cp1*cp3*m2*x2*x3+c2*cp1*cp3*m2*x2*x3+c1*c3*cp1*cp3*m2*x2*x3+c1*cp2*cp3*m2*x2*x3+c1*cp1*cp2*cp3*m2*x2*x3+c1*c2*cp1*cp2*cp3*m2*x2*x3+c2*m1*m2*x2*x3+cp2*m1*m2*x2*x3+cp1*cp2*m1*m2*x2*x3+c2*cp1*cp2*m1*m2*x2*x3+c3*cp1*cp2*m1*m2*x2*x3+cp1*cp3*m1*m2*x2*x3+c3*cp1*cp3*m1*m2*x2*x3+cp2*cp3*m1*m2*x2*x3+cp1*cp2*cp3*m1*m2*x2*x3+c2*cp1*cp2*cp3*m1*m2*x2*x3+cp3*m1*m3*x2*x3+cp1*cp3*m1*m3*x2*x3+cp2*cp3*m1*m3*x2*x3+cp1*cp2*cp3*m1*m3*x2*x3+cp2*m1*m2*m3*x2*x3+(1/2)*cp1*cp2*x3*(1+x3)+(1/2)*c1*cp1*cp2*x3*(1+x3)+(1/2)*c2*cp1*cp2*x3*(1+x3)+(1/2)*c3*cp1*cp2*x3*(1+x3)+(1/2)*c1*c3*cp1*cp2*x3*(1+x3)+(1/2)*c2*c3*cp1*cp2*x3*(1+x3)+(1/2)*c1*c2*cp3*x3*(1+x3)+(1/2)*c1*cp2*cp3*x3*(1+x3)+(1/2)*c1*c3*cp2*cp3*x3*(1+x3)+(1/2)*cp1*cp2*m1*x3*(1+x3)+(1/2)*c1*cp1*cp2*m1*x3*(1+x3)+(1/2)*c2*cp1*cp2*m1*x3*(1+x3)+(1/2)*c2*cp1*cp3*m1*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m1*x3*(1+x3)+(1/2)*c1*cp1*cp2*cp3*m1*x3*(1+x3)+(1/2)*c2*cp1*cp2*cp3*m1*x3*(1+x3)+(1/2)*cp1*cp2*m2*x3*(1+x3)+(1/2)*c1*cp1*cp2*m2*x3*(1+x3)+(1/2)*c2*cp1*cp2*m2*x3*(1+x3)+(1/2)*c3*cp1*cp2*m2*x3*(1+x3)+(1/2)*c1*cp1*cp3*m2*x3*(1+x3)+(1/2)*c2*cp1*cp3*m2*x3*(1+x3)+(1/2)*c1*cp2*cp3*m2*x3*(1+x3)+(1/2)*c1*cp1*cp2*cp3*m2*x3*(1+x3)+(1/2)*c2*cp1*cp2*cp3*m2*x3*(1+x3)+(1/2)*m1*m2*x3*(1+x3)+(1/2)*cp1*cp2*m1*m2*x3*(1+x3)+(1/2)*cp1*cp3*m1*m2*x3*(1+x3)+(1/2)*cp1*cp3*m2*m3*x3*(1+x3)+c1*c3*cp2*y1+c2*c3*cp2*y1+c3*cp1*cp2*y1+c1*c2*c3*cp1*cp2*y1+c1*c2*cp3*y1+c2*c3*cp3*y1+c1*c2*c3*cp3*y1+c2*cp1*cp3*y1+c1*c2*cp1*cp3*y1+c2*c3*cp1*cp3*y1+c1*c2*c3*cp1*cp3*y1+c3*cp2*cp3*y1+c1*c3*cp2*cp3*y1+c2*c3*cp2*cp3*y1+c3*cp1*cp2*cp3*y1+c1*c3*cp1*cp2*cp3*y1+c2*c3*cp1*cp2*cp3*y1+c1*c2*c3*cp1*cp2*cp3*y1+c2*c3*m1*y1+c2*c3*cp1*m1*y1+c3*cp2*m1*y1+c1*c3*cp2*m1*y1+c2*c3*cp2*m1*y1+c2*c3*cp1*cp2*m1*y1+c2*cp3*m1*y1+c1*c2*cp3*m1*y1+c2*c3*cp3*m1*y1+c1*c2*cp1*cp3*m1*y1+cp2*cp3*m1*y1+c2*c3*cp2*cp3*m1*y1+c3*cp1*cp2*cp3*m1*y1+c1*c3*cp1*cp2*cp3*m1*y1+c1*c3*cp2*m2*y1+c3*cp1*cp2*m2*y1+c1*c3*cp1*cp2*m2*y1+cp3*m2*y1+c1*c2*cp3*m2*y1+c3*cp3*m2*y1+c1*c2*c3*cp3*m2*y1+cp1*cp3*m2*y1+c1*cp1*cp3*m2*y1+c1*c3*cp1*cp3*m2*y1+c1*c2*c3*cp1*cp3*m2*y1+c2*cp2*cp3*m2*y1+c1*c3*cp2*cp3*m2*y1+c2*c3*cp2*cp3*m2*y1+c1*c2*c3*cp2*cp3*m2*y1+cp1*cp2*cp3*m2*y1+c3*cp1*cp2*cp3*m2*y1+c1*c2*c3*cp1*cp2*cp3*m2*y1+c1*c3*m1*m2*y1+c2*c3*m1*m2*y1+c3*cp1*m1*m2*y1+c3*cp1*cp2*m1*m2*y1+c2*c3*cp3*m1*m2*y1+c2*c3*cp1*cp3*m1*m2*y1+cp2*cp3*m1*m2*y1+c1*cp2*cp3*m1*m2*y1+c2*cp2*cp3*m1*m2*y1+c3*cp2*cp3*m1*m2*y1+c2*c3*cp2*cp3*m1*m2*y1+c1*cp1*cp2*cp3*m1*m2*y1+c2*c3*cp1*cp2*cp3*m1*m2*y1+cp2*m3*y1+c1*cp2*m3*y1+c1*c2*cp2*m3*y1+c1*c3*cp2*m3*y1+cp1*cp2*m3*y1+c1*cp1*cp2*m3*y1+c2*cp1*cp2*m3*y1+c1*c2*cp1*cp2*m3*y1+c3*cp1*cp2*m3*y1+c1*c3*cp1*cp2*m3*y1+c2*cp3*m3*y1+c2*c3*cp3*m3*y1+c2*cp1*cp3*m3*y1+c1*c2*cp1*cp3*m3*y1+c2*c3*cp1*cp3*m3*y1+cp2*cp3*m3*y1+c1*cp2*cp3*m3*y1+c2*cp2*cp3*m3*y1+c3*cp2*cp3*m3*y1+c1*c3*cp2*cp3*m3*y1+c2*c3*cp2*cp3*m3*y1+c2*m1*m3*y1+c1*c2*m1*m3*y1+cp2*m1*m3*y1+c1*cp2*m1*m3*y1+c1*cp1*cp2*m1*m3*y1+c2*cp1*cp2*m1*m3*y1+c3*cp1*cp2*m1*m3*y1+c2*cp3*m1*m3*y1+cp2*cp3*m1*m3*y1+c3*cp2*cp3*m1*m3*y1+cp1*cp2*cp3*m1*m3*y1+c3*cp1*cp2*cp3*m1*m3*y1+m2*m3*y1+c1*m2*m3*y1+c2*m2*m3*y1+c1*c3*m2*m3*y1+c2*c3*m2*m3*y1+c1*cp1*m2*m3*y1+c2*cp1*m2*m3*y1+c3*cp1*m2*m3*y1+c1*cp2*m2*m3*y1+c2*cp2*m2*m3*y1+c3*cp2*m2*m3*y1+cp3*m2*m3*y1+c2*cp3*m2*m3*y1+c2*cp1*cp3*m2*m3*y1+c3*cp1*cp3*m2*m3*y1+cp2*cp3*m2*m3*y1+c2*cp2*cp3*m2*m3*y1+c3*cp2*cp3*m2*m3*y1+cp1*cp2*cp3*m2*m3*y1+c1*cp1*cp2*cp3*m2*m3*y1+c3*cp2*m1*m2*m3*y1+cp1*cp2*m1*m2*m3*y1+cp3*m1*m2*m3*y1+c1*cp3*m1*m2*m3*y1+c2*cp3*m1*m2*m3*y1+c3*cp3*m1*m2*m3*y1+cp2*cp3*m1*m2*m3*y1+c2*c3*x1*y1+c2*c3*cp1*x1*y1+c2*c3*cp2*x1*y1+c3*cp1*cp2*x1*y1+c1*c2*cp3*x1*y1+c2*c3*cp3*x1*y1+c2*cp1*cp3*x1*y1+c3*cp2*cp3*x1*y1+c2*cp1*cp3*m1*x1*y1+c3*cp2*m2*x1*y1+c2*cp3*m2*x1*y1+c3*cp3*m2*x1*y1+cp1*cp3*m2*x1*y1+c1*cp1*cp3*m2*x1*y1+c3*cp1*cp3*m2*x1*y1+cp2*cp3*m2*x1*y1+c1*cp2*cp3*m2*x1*y1+c3*cp2*cp3*m2*x1*y1+cp1*cp2*cp3*m2*x1*y1+cp1*cp3*m1*m2*x1*y1+cp1*cp2*cp3*m1*m2*x1*y1+cp2*m3*x1*y1+c2*cp2*m3*x1*y1+c3*cp2*m3*x1*y1+c2*cp3*m3*x1*y1+m2*m3*x1*y1+cp3*m2*m3*x1*y1+cp2*cp3*m2*m3*x1*y1+c2*c3*x2*y1+c3*cp1*x2*y1+c1*c3*cp1*x2*y1+c2*c3*cp1*x2*y1+c2*c3*cp2*x2*y1+c2*c3*cp1*cp2*x2*y1+cp3*x2*y1+c1*cp3*x2*y1+c1*c2*cp3*x2*y1+c2*c3*cp3*x2*y1+cp1*cp3*x2*y1+c1*cp1*cp3*x2*y1+c1*c2*cp1*cp3*x2*y1+c3*cp2*cp3*x2*y1+c1*c3*cp2*cp3*x2*y1+c3*cp1*cp2*m1*x2*y1+cp3*m1*x2*y1+cp1*cp3*m1*x2*y1+c2*cp1*cp3*m1*x2*y1+c3*cp1*cp3*m1*x2*y1+c3*cp2*cp3*m1*x2*y1+c3*cp1*cp2*cp3*m1*x2*y1+c3*m2*x2*y1+c3*cp2*m2*x2*y1+cp3*m2*x2*y1+c1*cp3*m2*x2*y1+c2*cp3*m2*x2*y1+c3*cp3*m2*x2*y1+c1*cp1*cp3*m2*x2*y1+c3*cp1*cp3*m2*x2*y1+cp2*cp3*m2*x2*y1+c1*cp2*cp3*m2*x2*y1+c3*cp2*cp3*m2*x2*y1+c1*cp1*cp2*cp3*m2*x2*y1+c3*cp1*cp2*cp3*m2*x2*y1+cp1*cp3*m1*m2*x2*y1+cp1*cp2*cp3*m1*m2*x2*y1+m3*x2*y1+c1*m3*x2*y1+c2*m3*x2*y1+c3*m3*x2*y1+cp2*m3*x2*y1+c1*cp2*m3*x2*y1+c2*cp2*m3*x2*y1+c3*cp2*m3*x2*y1+c2*cp3*m3*x2*y1+c1*m1*m3*x2*y1+cp3*m1*m3*x2*y1+cp1*cp3*m1*m3*x2*y1+m2*m3*x2*y1+cp1*cp3*m2*m3*x2*y1+cp2*cp3*m2*m3*x2*y1+c2*x3*y1+c1*c2*x3*y1+c2*c3*cp1*x3*y1+c2*cp2*x3*y1+c1*c2*c3*cp2*x3*y1+c2*cp1*cp2*x3*y1+c1*c2*cp1*cp2*x3*y1+c1*c2*c3*cp1*cp2*x3*y1+c2*cp3*x3*y1+c1*c2*cp3*x3*y1+c2*c3*cp3*x3*y1+c1*c2*c3*cp3*x3*y1+c2*c3*cp1*cp3*x3*y1+c1*c2*c3*cp1*cp3*x3*y1+c2*cp2*cp3*x3*y1+c1*c2*cp2*cp3*x3*y1+c2*c3*cp2*cp3*x3*y1+c2*m1*x3*y1+c2*cp1*m1*x3*y1+c2*c3*cp2*m1*x3*y1+c2*c3*cp1*cp2*m1*x3*y1+c2*cp3*m1*x3*y1+c2*c3*cp3*m1*x3*y1+c2*cp1*cp3*m1*x3*y1+c2*c3*cp1*cp3*m1*x3*y1+c2*cp2*cp3*m1*x3*y1+c2*cp1*cp2*cp3*m1*x3*y1+m2*x3*y1+c1*m2*x3*y1+cp1*m2*x3*y1+c2*cp1*m2*x3*y1+c3*cp1*m2*x3*y1+cp2*m2*x3*y1+c1*cp2*m2*x3*y1+c1*c2*cp2*m2*x3*y1+c1*c3*cp2*m2*x3*y1+cp1*cp2*m2*x3*y1+c1*c2*cp1*cp2*m2*x3*y1+c1*c3*cp1*cp2*m2*x3*y1+cp3*m2*x3*y1+c1*cp3*m2*x3*y1+c3*cp3*m2*x3*y1+c1*c3*cp3*m2*x3*y1+cp1*cp3*m2*x3*y1+c2*cp1*cp3*m2*x3*y1+c3*cp1*cp3*m2*x3*y1+c1*c3*cp1*cp3*m2*x3*y1+cp2*cp3*m2*x3*y1+c1*c2*cp2*cp3*m2*x3*y1+c3*cp2*cp3*m2*x3*y1+c1*cp1*cp2*cp3*m2*x3*y1+c1*c2*cp1*cp2*cp3*m2*x3*y1+m1*m2*x3*y1+c1*m1*m2*x3*y1+c2*m1*m2*x3*y1+cp1*m1*m2*x3*y1+c2*cp2*m1*m2*x3*y1+c3*cp2*m1*m2*x3*y1+cp1*cp2*m1*m2*x3*y1+c2*cp1*cp2*m1*m2*x3*y1+c3*cp1*cp2*m1*m2*x3*y1+cp3*m1*m2*x3*y1+c3*cp3*m1*m2*x3*y1+cp1*cp3*m1*m2*x3*y1+c3*cp1*cp3*m1*m2*x3*y1+c2*cp2*cp3*m1*m2*x3*y1+c2*cp1*cp2*cp3*m1*m2*x3*y1+m2*m3*x3*y1+c1*m2*m3*x3*y1+c2*m2*m3*x3*y1+m1*m2*m3*x3*y1+cp2*m1*m2*m3*x3*y1+(1/2)*c2*c3*y1*(1+y1)+(1/2)*c2*c3*cp1*y1*(1+y1)+(1/2)*c2*c3*cp2*y1*(1+y1)+(1/2)*c1*c2*cp3*y1*(1+y1)+(1/2)*c2*c3*cp3*y1*(1+y1)+(1/2)*c2*cp1*cp3*m1*y1*(1+y1)+(1/2)*c3*cp2*m2*y1*(1+y1)+(1/2)*cp3*m2*y1*(1+y1)+(1/2)*c2*cp3*m2*y1*(1+y1)+(1/2)*c3*cp3*m2*y1*(1+y1)+(1/2)*c1*cp1*cp3*m2*y1*(1+y1)+(1/2)*c3*cp1*cp3*m2*y1*(1+y1)+(1/2)*cp2*cp3*m2*y1*(1+y1)+(1/2)*c1*cp2*cp3*m2*y1*(1+y1)+(1/2)*c3*cp2*cp3*m2*y1*(1+y1)+(1/2)*cp1*cp3*m1*m2*y1*(1+y1)+(1/2)*cp1*cp2*cp3*m1*m2*y1*(1+y1)+(1/2)*c2*cp2*m3*y1*(1+y1)+(1/2)*c3*cp2*m3*y1*(1+y1)+(1/2)*c2*cp3*m3*y1*(1+y1)+(1/2)*m2*m3*y1*(1+y1)+(1/2)*cp3*m2*m3*y1*(1+y1)+(1/2)*cp2*cp3*m2*m3*y1*(1+y1)+c1*c3*cp2*y2+c1*c3*cp1*cp2*y2+c1*c2*c3*cp1*cp2*y2+c1*c2*c3*cp3*y2+cp1*cp3*y2+c1*cp1*cp3*y2+c2*cp1*cp3*y2+c1*c2*cp1*cp3*y2+c3*cp1*cp3*y2+c1*c3*cp1*cp3*y2+c2*c3*cp1*cp3*y2+c1*c2*c3*cp1*cp3*y2+c1*c3*cp2*cp3*y2+c1*c3*cp1*cp2*cp3*y2+c2*c3*cp1*cp2*cp3*y2+c1*c2*c3*cp1*cp2*cp3*y2+c1*c3*m1*y2+c2*c3*m1*y2+c1*c3*cp2*m1*y2+c2*c3*cp2*m1*y2+c2*c3*cp1*cp2*m1*y2+c2*cp3*m1*y2+c1*c3*cp3*m1*y2+c2*c3*cp3*m1*y2+c2*c3*cp1*cp3*m1*y2+cp2*cp3*m1*y2+c2*cp2*cp3*m1*y2+c1*c2*cp2*cp3*m1*y2+c1*c3*cp2*cp3*m1*y2+c2*c3*cp2*cp3*m1*y2+cp1*cp2*cp3*m1*y2+c2*cp1*cp2*cp3*m1*y2+c1*c3*m2*y2+c1*c3*cp1*m2*y2+c1*c3*cp2*m2*y2+c3*cp1*cp2*m2*y2+c1*c3*cp1*cp2*m2*y2+c1*c2*cp3*m2*y2+c2*cp1*cp3*m2*y2+c1*c2*cp1*cp3*m2*y2+c1*c2*c3*cp1*cp3*m2*y2+c1*c3*cp2*cp3*m2*y2+cp1*cp2*cp3*m2*y2+c2*cp1*cp2*cp3*m2*y2+c3*cp1*cp2*cp3*m2*y2+c1*c3*cp1*cp2*cp3*m2*y2+c2*c3*cp1*cp2*cp3*m2*y2+c1*c2*c3*cp1*cp2*cp3*m2*y2+c2*c3*m1*m2*y2+c3*cp1*m1*m2*y2+c3*cp2*m1*m2*y2+c3*cp1*cp2*m1*m2*y2+cp3*m1*m2*y2+c1*cp3*m1*m2*y2+c2*cp3*m1*m2*y2+c3*cp3*m1*m2*y2+c1*cp1*cp3*m1*m2*y2+c1*c2*cp1*cp3*m1*m2*y2+c3*cp1*cp3*m1*m2*y2+c1*c3*cp1*cp3*m1*m2*y2+c2*c3*cp1*cp3*m1*m2*y2+c2*cp2*cp3*m1*m2*y2+cp1*cp2*cp3*m1*m2*y2+c2*cp1*cp2*cp3*m1*m2*y2+c1*c2*cp1*cp2*cp3*m1*m2*y2+c1*c3*cp1*cp2*cp3*m1*m2*y2+c2*c3*cp1*cp2*cp3*m1*m2*y2+c1*c2*m3*y2+c1*c3*m3*y2+c1*c2*cp1*m3*y2+c1*c3*cp1*m3*y2+c1*cp2*m3*y2+c1*c2*cp2*m3*y2+c1*c3*cp2*m3*y2+c1*cp1*cp2*m3*y2+c2*cp1*cp2*m3*y2+c1*c2*cp1*cp2*m3*y2+c3*cp1*cp2*m3*y2+c1*c3*cp1*cp2*m3*y2+c1*c2*cp3*m3*y2+cp1*cp3*m3*y2+c1*cp1*cp3*m3*y2+c2*cp1*cp3*m3*y2+c1*c2*cp1*cp3*m3*y2+c2*m1*m3*y2+c3*m1*m3*y2+c1*cp1*m1*m3*y2+c2*cp1*m1*m3*y2+c3*cp1*m1*m3*y2+cp2*m1*m3*y2+c2*cp2*m1*m3*y2+c3*cp2*m1*m3*y2+c1*cp1*cp2*m1*m3*y2+c2*cp1*cp2*m1*m3*y2+c3*cp1*cp2*m1*m3*y2+cp3*m1*m3*y2+c2*cp3*m1*m3*y2+cp1*cp3*m1*m3*y2+c2*cp1*cp3*m1*m3*y2+c1*m2*m3*y2+cp1*m2*m3*y2+c1*cp1*m2*m3*y2+c1*cp3*m2*m3*y2+c1*cp1*cp3*m2*m3*y2+c1*cp2*cp3*m2*m3*y2+cp1*cp2*cp3*m2*m3*y2+c1*cp1*cp2*cp3*m2*m3*y2+m1*m2*m3*y2+c3*m1*m2*m3*y2+cp1*m1*m2*m3*y2+cp2*m1*m2*m3*y2+c3*cp2*m1*m2*m3*y2+cp3*m1*m2*m3*y2+c2*cp3*m1*m2*m3*y2+c3*cp3*m1*m2*m3*y2+c2*c3*x1*y2+c1*c3*cp1*x1*y2+c2*c3*cp1*x1*y2+c3*cp2*x1*y2+c1*c3*cp2*x1*y2+c2*c3*cp2*x1*y2+c3*cp1*cp2*x1*y2+c1*c3*cp1*cp2*x1*y2+c2*c3*cp1*cp2*x1*y2+cp3*x1*y2+c2*cp3*x1*y2+c3*cp3*x1*y2+c1*c3*cp3*x1*y2+c2*c3*cp3*x1*y2+cp1*cp3*x1*y2+c2*cp1*cp3*x1*y2+c1*c3*cp1*cp3*x1*y2+c3*cp2*cp3*x1*y2+c1*c3*cp2*cp3*x1*y2+c3*cp2*m1*x1*y2+cp3*m1*x1*y2+c2*cp3*m1*x1*y2+c3*cp3*m1*x1*y2+cp1*cp3*m1*x1*y2+c3*cp2*cp3*m1*x1*y2+c3*cp1*cp2*cp3*m1*x1*y2+c3*m2*x1*y2+c3*cp2*m2*x1*y2+cp3*m2*x1*y2+c2*cp3*m2*x1*y2+c3*cp3*m2*x1*y2+c3*cp1*cp3*m2*x1*y2+c3*cp2*cp3*m2*x1*y2+cp1*cp2*cp3*m2*x1*y2+c3*cp1*cp2*cp3*m2*x1*y2+cp3*m1*m2*x1*y2+cp2*cp3*m1*m2*x1*y2+c1*m3*x1*y2+c2*m3*x1*y2+c3*m3*x1*y2+c1*cp2*m3*x1*y2+c2*cp2*m3*x1*y2+c3*cp2*m3*x1*y2+cp3*m3*x1*y2+c2*cp3*m3*x1*y2+c1*m1*m3*x1*y2+cp3*m1*m3*x1*y2+cp1*cp3*m1*m3*x1*y2+m2*m3*x1*y2+cp1*cp3*m2*m3*x1*y2+cp2*cp3*m2*m3*x1*y2+c1*c2*cp3*x2*y2+c1*cp1*cp3*m1*x2*y2+c1*cp2*cp3*m2*x2*y2+cp1*cp3*m1*m2*x2*y2+cp1*cp2*m1*m3*x2*y2+cp1*cp3*m1*m3*x2*y2+c1*x3*y2+c1*c3*x3*y2+cp1*x3*y2+c1*cp1*x3*y2+c2*cp1*x3*y2+c3*cp1*x3*y2+c1*c3*cp1*x3*y2+c2*c3*cp1*x3*y2+c1*cp2*x3*y2+c1*c3*cp2*x3*y2+cp1*cp2*x3*y2+c1*cp1*cp2*x3*y2+c2*cp1*cp2*x3*y2+c1*c2*cp1*cp2*x3*y2+c3*cp1*cp2*x3*y2+c1*c3*cp1*cp2*x3*y2+c2*c3*cp1*cp2*x3*y2+c1*c2*c3*cp1*cp2*x3*y2+c1*cp3*x3*y2+c1*c2*cp3*x3*y2+c1*c3*cp3*x3*y2+c3*cp1*cp3*x3*y2+c1*c3*cp1*cp3*x3*y2+c2*c3*cp1*cp3*x3*y2+c1*c2*c3*cp1*cp3*x3*y2+c1*cp2*cp3*x3*y2+m1*x3*y2+c1*m1*x3*y2+c2*m1*x3*y2+c3*m1*x3*y2+cp1*m1*x3*y2+c1*cp1*m1*x3*y2+c2*cp1*m1*x3*y2+c3*cp1*m1*x3*y2+cp2*m1*x3*y2+c1*cp2*m1*x3*y2+c2*cp2*m1*x3*y2+c3*cp2*m1*x3*y2+cp1*cp2*m1*x3*y2+c1*cp1*cp2*m1*x3*y2+c2*cp1*cp2*m1*x3*y2+c1*c2*cp1*cp2*m1*x3*y2+c1*c3*cp1*cp2*m1*x3*y2+c2*c3*cp1*cp2*m1*x3*y2+cp3*m1*x3*y2+c3*cp3*m1*x3*y2+c2*cp1*cp3*m1*x3*y2+c3*cp1*cp3*m1*x3*y2+c2*c3*cp1*cp3*m1*x3*y2+c1*cp2*cp3*m1*x3*y2+c2*cp2*cp3*m1*x3*y2+c3*cp2*cp3*m1*x3*y2+cp1*cp2*cp3*m1*x3*y2+c1*cp1*cp2*cp3*m1*x3*y2+c1*c2*cp1*cp2*cp3*m1*x3*y2+c1*c3*cp1*cp2*cp3*m1*x3*y2+c1*m2*x3*y2+cp1*m2*x3*y2+c1*cp1*m2*x3*y2+c2*cp1*m2*x3*y2+c3*cp1*m2*x3*y2+c1*cp2*m2*x3*y2+cp1*cp2*m2*x3*y2+c1*cp1*cp2*m2*x3*y2+c2*cp1*cp2*m2*x3*y2+c1*c2*cp1*cp2*m2*x3*y2+c3*cp1*cp2*m2*x3*y2+c1*c3*cp1*cp2*m2*x3*y2+c1*cp1*cp3*m2*x3*y2+c2*cp1*cp3*m2*x3*y2+c3*cp1*cp3*m2*x3*y2+c1*c3*cp1*cp3*m2*x3*y2+c1*cp2*cp3*m2*x3*y2+c2*cp1*cp2*cp3*m2*x3*y2+c1*c2*cp1*cp2*cp3*m2*x3*y2+m1*m2*x3*y2+c2*m1*m2*x3*y2+cp2*m1*m2*x3*y2+c2*cp1*cp2*m1*m2*x3*y2+c3*cp1*cp2*m1*m2*x3*y2+cp1*cp3*m1*m2*x3*y2+c3*cp1*cp3*m1*m2*x3*y2+cp2*cp3*m1*m2*x3*y2+c2*cp1*cp2*cp3*m1*m2*x3*y2+cp3*m1*m3*x3*y2+cp1*cp3*m1*m3*x3*y2+cp2*cp3*m1*m3*x3*y2+cp1*cp2*cp3*m1*m3*x3*y2+cp2*m1*m2*m3*x3*y2+c3*y1*y2+c2*c3*y1*y2+c1*c3*cp1*y1*y2+c2*c3*cp1*y1*y2+c1*c3*cp2*y1*y2+c2*c3*cp2*y1*y2+c1*c3*cp1*cp2*y1*y2+c2*c3*cp1*cp2*y1*y2+cp3*y1*y2+c1*c3*cp3*y1*y2+c2*c3*cp3*y1*y2+c1*cp1*cp3*y1*y2+c3*cp1*cp3*y1*y2+c1*c3*cp1*cp3*y1*y2+c1*c3*cp2*cp3*y1*y2+c3*cp2*m1*y1*y2+cp3*m1*y1*y2+c2*cp3*m1*y1*y2+c3*cp3*m1*y1*y2+c3*cp2*cp3*m1*y1*y2+c3*cp1*cp2*cp3*m1*y1*y2+c3*m2*y1*y2+c3*cp2*m2*y1*y2+c2*cp3*m2*y1*y2+c3*cp3*m2*y1*y2+cp1*cp3*m2*y1*y2+c3*cp1*cp3*m2*y1*y2+cp2*cp3*m2*y1*y2+c3*cp2*cp3*m2*y1*y2+c3*cp1*cp2*cp3*m2*y1*y2+cp3*m1*m2*y1*y2+cp2*cp3*m1*m2*y1*y2+m3*y1*y2+c1*m3*y1*y2+c2*m3*y1*y2+c3*m3*y1*y2+cp2*m3*y1*y2+c1*cp2*m3*y1*y2+c2*cp2*m3*y1*y2+c3*cp2*m3*y1*y2+cp3*m3*y1*y2+c2*cp3*m3*y1*y2+m1*m3*y1*y2+c1*m1*m3*y1*y2+cp3*m1*m3*y1*y2+cp1*cp3*m1*m3*y1*y2+m2*m3*y1*y2+cp1*cp3*m2*m3*y1*y2+cp2*cp3*m2*m3*y1*y2+(1/2)*c1*c3*cp1*cp2*y2*(1+y2)+(1/2)*c1*c2*cp3*y2*(1+y2)+(1/2)*c1*c2*cp1*cp3*y2*(1+y2)+(1/2)*c1*c3*cp1*cp3*y2*(1+y2)+(1/2)*c3*cp1*cp2*m1*y2*(1+y2)+(1/2)*c1*cp1*cp3*m1*y2*(1+y2)+(1/2)*c2*cp1*cp3*m1*y2*(1+y2)+(1/2)*c3*cp1*cp3*m1*y2*(1+y2)+(1/2)*c1*cp1*cp3*m2*y2*(1+y2)+(1/2)*c1*cp2*cp3*m2*y2*(1+y2)+(1/2)*c1*cp1*cp2*cp3*m2*y2*(1+y2)+(1/2)*cp1*cp2*cp3*m1*m2*y2*(1+y2)+(1/2)*m1*m3*y2*(1+y2)+(1/2)*cp1*cp2*m1*m3*y2*(1+y2)+(1/2)*cp1*cp3*m1*m3*y2*(1+y2)+c1*c2*c3*y3+c2*c3*cp1*y3+c1*cp2*y3+c1*c2*cp2*y3+c1*c3*cp2*y3+c1*c2*c3*cp2*y3+cp1*cp2*y3+c2*cp1*cp2*y3+c3*cp1*cp2*y3+c1*c3*cp1*cp2*y3+c2*c3*cp1*cp2*y3+c1*c2*c3*cp1*cp2*y3+c1*c2*cp3*y3+c2*c3*cp1*cp3*y3+c1*cp2*cp3*y3+c1*c2*c3*cp2*cp3*y3+cp1*cp2*cp3*y3+c1*cp1*cp2*cp3*y3+c2*cp1*cp2*cp3*y3+c3*cp1*cp2*cp3*y3+c1*c3*cp1*cp2*cp3*y3+c2*c3*cp1*cp2*cp3*y3+c2*cp1*m1*y3+c1*c2*cp1*m1*y3+c2*cp1*cp3*m1*y3+c1*c2*c3*cp1*cp3*m1*y3+cp2*cp3*m1*y3+c1*cp2*cp3*m1*y3+c2*cp2*cp3*m1*y3+c3*cp2*cp3*m1*y3+c1*c3*cp2*cp3*m1*y3+c2*c3*cp2*cp3*m1*y3+cp1*cp2*cp3*m1*y3+c1*c2*cp1*cp2*cp3*m1*y3+c3*cp1*cp2*cp3*m1*y3+c1*c2*c3*cp1*cp2*cp3*m1*y3+c1*c2*m2*y3+c1*c2*cp1*m2*y3+c1*c3*cp1*m2*y3+c1*cp2*m2*y3+c1*c2*cp2*m2*y3+c1*cp1*cp2*m2*y3+c2*cp1*cp2*m2*y3+c1*c2*cp1*cp2*m2*y3+c1*c2*c3*cp1*cp2*m2*y3+c1*cp3*m2*y3+c1*c3*cp3*m2*y3+cp1*cp3*m2*y3+c2*cp1*cp3*m2*y3+c1*c2*cp1*cp3*m2*y3+c3*cp1*cp3*m2*y3+c1*c3*cp1*cp3*m2*y3+c1*c2*c3*cp1*cp3*m2*y3+c1*cp2*cp3*m2*y3+c1*c2*cp2*cp3*m2*y3+c1*c3*cp2*cp3*m2*y3+m1*m2*y3+c1*m1*m2*y3+c2*m1*m2*y3+c1*c2*m1*m2*y3+c3*m1*m2*y3+c1*cp1*m1*m2*y3+c3*cp1*m1*m2*y3+cp2*m1*m2*y3+c1*cp2*m1*m2*y3+c2*cp2*m1*m2*y3+c3*cp2*m1*m2*y3+c1*cp1*cp2*m1*m2*y3+c1*c2*cp1*cp2*m1*m2*y3+c1*c3*cp1*cp2*m1*m2*y3+c2*c3*cp1*cp2*m1*m2*y3+c1*cp3*m1*m2*y3+c2*cp3*m1*m2*y3+c3*cp3*m1*m2*y3+cp1*cp3*m1*m2*y3+cp2*cp3*m1*m2*y3+c3*cp2*cp3*m1*m2*y3+cp1*cp2*cp3*m1*m2*y3+c2*cp1*cp2*cp3*m1*m2*y3+c1*c2*cp1*cp2*cp3*m1*m2*y3+c1*c3*cp1*cp2*cp3*m1*m2*y3+c2*c3*cp1*cp2*cp3*m1*m2*y3+c2*cp1*m3*y3+c1*c2*cp1*m3*y3+c2*c3*cp1*m3*y3+c1*cp2*m3*y3+c1*cp1*cp2*m3*y3+c1*c2*cp1*cp2*m3*y3+c3*cp1*cp2*m3*y3+c2*c3*cp1*cp2*m3*y3+c1*c2*cp3*m3*y3+c1*cp2*cp3*m3*y3+c1*c2*cp2*cp3*m3*y3+c2*cp1*m1*m3*y3+c2*cp1*cp2*m1*m3*y3+c2*cp1*cp3*m1*m3*y3+cp1*cp2*cp3*m1*m3*y3+c2*cp1*cp2*cp3*m1*m3*y3+c1*m2*m3*y3+c1*c2*m2*m3*y3+c2*cp1*m2*m3*y3+c3*cp1*m2*m3*y3+c1*cp2*m2*m3*y3+c1*cp1*cp2*m2*m3*y3+c2*cp1*cp2*m2*m3*y3+c3*cp1*cp2*m2*m3*y3+c1*cp3*m2*m3*y3+c2*cp1*cp3*m2*m3*y3+c1*cp2*cp3*m2*m3*y3+c2*cp1*cp2*cp3*m2*m3*y3+c1*m1*m2*m3*y3+c2*m1*m2*m3*y3+c3*m1*m2*m3*y3+cp1*m1*m2*m3*y3+cp2*m1*m2*m3*y3+c1*cp2*m1*m2*m3*y3+c2*cp2*m1*m2*m3*y3+cp1*cp2*m1*m2*m3*y3+cp3*m1*m2*m3*y3+c3*cp3*m1*m2*m3*y3+cp1*cp3*m1*m2*m3*y3+cp1*cp2*cp3*m1*m2*m3*y3+c2*x1*y3+c1*c2*x1*y3+c2*cp1*x1*y3+c2*c3*cp1*x1*y3+cp2*x1*y3+c1*cp2*x1*y3+c1*c2*cp2*x1*y3+c3*cp2*x1*y3+c1*c3*cp2*x1*y3+c1*c2*c3*cp2*x1*y3+cp1*cp2*x1*y3+c2*cp1*cp2*x1*y3+c3*cp1*cp2*x1*y3+c1*c3*cp1*cp2*x1*y3+c2*c3*cp1*cp2*x1*y3+c1*c2*c3*cp1*cp2*x1*y3+c2*cp3*x1*y3+c1*c2*c3*cp3*x1*y3+c2*cp1*cp3*x1*y3+c1*c2*cp1*cp3*x1*y3+c2*c3*cp1*cp3*x1*y3+c1*c2*c3*cp1*cp3*x1*y3+cp2*cp3*x1*y3+c1*c2*cp2*cp3*x1*y3+c3*cp2*cp3*x1*y3+c1*c3*cp2*cp3*x1*y3+c2*m1*x1*y3+c2*cp1*m1*x1*y3+cp2*m1*x1*y3+c2*cp2*m1*x1*y3+c3*cp2*m1*x1*y3+c2*c3*cp2*m1*x1*y3+cp1*cp2*m1*x1*y3+c2*cp1*cp2*m1*x1*y3+c3*cp1*cp2*m1*x1*y3+c2*c3*cp1*cp2*m1*x1*y3+c2*c3*cp3*m1*x1*y3+c2*c3*cp1*cp3*m1*x1*y3+c2*cp2*cp3*m1*x1*y3+c3*cp2*cp3*m1*x1*y3+c2*cp1*cp2*cp3*m1*x1*y3+c3*cp1*cp2*cp3*m1*x1*y3+m2*x1*y3+c1*m2*x1*y3+c2*cp1*m2*x1*y3+c3*cp1*m2*x1*y3+cp2*m2*x1*y3+c1*cp2*m2*x1*y3+c1*c2*cp2*m2*x1*y3+c1*c3*cp2*m2*x1*y3+cp1*cp2*m2*x1*y3+c2*cp1*cp2*m2*x1*y3+c1*c2*cp1*cp2*m2*x1*y3+c3*cp1*cp2*m2*x1*y3+c1*c3*cp1*cp2*m2*x1*y3+cp3*m2*x1*y3+c1*c3*cp3*m2*x1*y3+c1*cp1*cp3*m2*x1*y3+c2*cp1*cp3*m2*x1*y3+c3*cp1*cp3*m2*x1*y3+c1*c3*cp1*cp3*m2*x1*y3+cp2*cp3*m2*x1*y3+c1*cp2*cp3*m2*x1*y3+c1*c2*cp2*cp3*m2*x1*y3+c2*cp1*cp2*cp3*m2*x1*y3+c1*c2*cp1*cp2*cp3*m2*x1*y3+m1*m2*x1*y3+c1*m1*m2*x1*y3+c2*m1*m2*x1*y3+cp1*m1*m2*x1*y3+c2*cp2*m1*m2*x1*y3+c3*cp2*m1*m2*x1*y3+cp1*cp2*m1*m2*x1*y3+c2*cp1*cp2*m1*m2*x1*y3+c3*cp1*cp2*m1*m2*x1*y3+c3*cp3*m1*m2*x1*y3+c3*cp1*cp3*m1*m2*x1*y3+cp2*cp3*m1*m2*x1*y3+c2*cp2*cp3*m1*m2*x1*y3+cp1*cp2*cp3*m1*m2*x1*y3+c2*cp1*cp2*cp3*m1*m2*x1*y3+m2*m3*x1*y3+c1*m2*m3*x1*y3+c2*m2*m3*x1*y3+m1*m2*m3*x1*y3+cp2*m1*m2*m3*x1*y3+c1*c3*x2*y3+c1*c3*cp1*x2*y3+c2*c3*cp1*x2*y3+c1*c3*cp2*x2*y3+c1*c3*cp1*cp2*x2*y3+c1*c2*c3*cp1*cp2*x2*y3+c1*c2*cp3*x2*y3+c1*c2*cp1*cp3*x2*y3+c1*c2*c3*cp1*cp3*x2*y3+m1*x2*y3+c1*m1*x2*y3+c2*m1*x2*y3+c3*m1*x2*y3+cp1*m1*x2*y3+c1*cp1*m1*x2*y3+c2*cp1*m1*x2*y3+c3*cp1*m1*x2*y3+cp2*m1*x2*y3+c1*cp2*m1*x2*y3+c2*cp2*m1*x2*y3+c3*cp2*m1*x2*y3+cp1*cp2*m1*x2*y3+c2*cp1*cp2*m1*x2*y3+c1*c2*cp1*cp2*m1*x2*y3+c3*cp1*cp2*m1*x2*y3+c1*c3*cp1*cp2*m1*x2*y3+c2*c3*cp1*cp2*m1*x2*y3+cp3*m1*x2*y3+cp1*cp3*m1*x2*y3+c2*c3*cp1*cp3*m1*x2*y3+c1*cp2*cp3*m1*x2*y3+c2*cp2*cp3*m1*x2*y3+c3*cp2*cp3*m1*x2*y3+c2*cp1*cp2*cp3*m1*x2*y3+c1*c2*cp1*cp2*cp3*m1*x2*y3+c3*cp1*cp2*cp3*m1*x2*y3+c1*c3*cp1*cp2*cp3*m1*x2*y3+c1*m2*x2*y3+cp1*m2*x2*y3+c1*cp1*m2*x2*y3+c2*cp1*m2*x2*y3+c3*cp1*m2*x2*y3+c1*cp2*m2*x2*y3+c1*c2*cp1*cp2*m2*x2*y3+c1*c3*cp1*cp2*m2*x2*y3+cp1*cp3*m2*x2*y3+c2*cp1*cp3*m2*x2*y3+c1*c3*cp1*cp3*m2*x2*y3+c1*cp2*cp3*m2*x2*y3+c1*c2*cp1*cp2*cp3*m2*x2*y3+m1*m2*x2*y3+c2*m1*m2*x2*y3+cp2*m1*m2*x2*y3+cp1*cp2*m1*m2*x2*y3+c2*cp1*cp2*m1*m2*x2*y3+c3*cp1*cp2*m1*m2*x2*y3+c3*cp1*cp3*m1*m2*x2*y3+cp2*cp3*m1*m2*x2*y3+c2*cp1*cp2*cp3*m1*m2*x2*y3+cp3*m1*m3*x2*y3+cp1*cp3*m1*m3*x2*y3+cp2*cp3*m1*m3*x2*y3+cp1*cp2*cp3*m1*m3*x2*y3+cp2*m1*m2*m3*x2*y3+c1*c2*cp3*x3*y3+c2*cp1*cp3*m1*x3*y3+c1*cp1*cp3*m2*x3*y3+c2*cp1*cp3*m2*x3*y3+c1*cp2*cp3*m2*x3*y3+cp1*cp3*m1*m2*x3*y3+cp1*cp2*cp3*m1*m2*x3*y3+cp1*cp3*m2*m3*x3*y3+c1*c2*y1*y3+c2*cp1*y1*y3+c2*c3*cp1*y1*y3+c1*cp2*y1*y3+c2*cp2*y1*y3+c1*c2*cp2*y1*y3+c3*cp2*y1*y3+c1*c3*cp2*y1*y3+c1*c2*c3*cp2*y1*y3+cp1*cp2*y1*y3+c2*cp1*cp2*y1*y3+c1*c3*cp1*cp2*y1*y3+c1*c2*c3*cp1*cp2*y1*y3+c1*c2*c3*cp3*y1*y3+c1*c2*cp1*cp3*y1*y3+c1*c2*c3*cp1*cp3*y1*y3+cp2*cp3*y1*y3+c2*cp2*cp3*y1*y3+c1*c2*cp2*cp3*y1*y3+c1*c3*cp2*cp3*y1*y3+c2*m1*y1*y3+c2*cp1*m1*y1*y3+cp2*m1*y1*y3+c2*cp2*m1*y1*y3+c3*cp2*m1*y1*y3+c2*c3*cp2*m1*y1*y3+cp1*cp2*m1*y1*y3+c2*cp1*cp2*m1*y1*y3+c3*cp1*cp2*m1*y1*y3+c2*c3*cp1*cp2*m1*y1*y3+c2*c3*cp3*m1*y1*y3+c2*c3*cp1*cp3*m1*y1*y3+c2*cp2*cp3*m1*y1*y3+c3*cp2*cp3*m1*y1*y3+c2*cp1*cp2*cp3*m1*y1*y3+c3*cp1*cp2*cp3*m1*y1*y3+c1*m2*y1*y3+c2*cp1*m2*y1*y3+c3*cp1*m2*y1*y3+c1*cp2*m2*y1*y3+c1*c2*cp2*m2*y1*y3+c1*c3*cp2*m2*y1*y3+cp1*cp2*m2*y1*y3+c1*c2*cp1*cp2*m2*y1*y3+c1*c3*cp1*cp2*m2*y1*y3+c1*c3*cp3*m2*y1*y3+cp1*cp3*m2*y1*y3+c1*cp1*cp3*m2*y1*y3+c2*cp1*cp3*m2*y1*y3+c1*c3*cp1*cp3*m2*y1*y3+c1*cp2*cp3*m2*y1*y3+c1*c2*cp2*cp3*m2*y1*y3+c1*c2*cp1*cp2*cp3*m2*y1*y3+c1*m1*m2*y1*y3+c2*m1*m2*y1*y3+cp1*m1*m2*y1*y3+c2*cp2*m1*m2*y1*y3+c3*cp2*m1*m2*y1*y3+cp1*cp2*m1*m2*y1*y3+c2*cp1*cp2*m1*m2*y1*y3+c3*cp1*cp2*m1*m2*y1*y3+c3*cp3*m1*m2*y1*y3+c3*cp1*cp3*m1*m2*y1*y3+cp2*cp3*m1*m2*y1*y3+c2*cp2*cp3*m1*m2*y1*y3+cp1*cp2*cp3*m1*m2*y1*y3+c2*cp1*cp2*cp3*m1*m2*y1*y3+c1*m2*m3*y1*y3+c2*m2*m3*y1*y3+m1*m2*m3*y1*y3+cp2*m1*m2*m3*y1*y3+c1*c3*y2*y3+c1*c3*cp1*y2*y3+c2*c3*cp1*y2*y3+c1*c3*cp2*y2*y3+c2*c3*cp1*cp2*y2*y3+c1*c2*c3*cp1*cp2*y2*y3+c1*c2*cp3*y2*y3+cp1*cp3*y2*y3+c1*cp1*cp3*y2*y3+c2*cp1*cp3*y2*y3+c1*c2*cp1*cp3*y2*y3+c3*cp1*cp3*y2*y3+c1*c3*cp1*cp3*y2*y3+c2*c3*cp1*cp3*y2*y3+c1*c2*c3*cp1*cp3*y2*y3+c1*cp2*cp3*y2*y3+m1*y2*y3+c1*m1*y2*y3+c2*m1*y2*y3+c3*m1*y2*y3+cp1*m1*y2*y3+c1*cp1*m1*y2*y3+c2*cp1*m1*y2*y3+c3*cp1*m1*y2*y3+cp2*m1*y2*y3+c1*cp2*m1*y2*y3+c2*cp2*m1*y2*y3+c3*cp2*m1*y2*y3+cp1*cp2*m1*y2*y3+c1*cp1*cp2*m1*y2*y3+c1*c2*cp1*cp2*m1*y2*y3+c3*cp1*cp2*m1*y2*y3+c1*c3*cp1*cp2*m1*y2*y3+c2*c3*cp1*cp2*m1*y2*y3+cp3*m1*y2*y3+c3*cp1*cp3*m1*y2*y3+c2*c3*cp1*cp3*m1*y2*y3+c1*cp2*cp3*m1*y2*y3+c2*cp2*cp3*m1*y2*y3+c3*cp2*cp3*m1*y2*y3+cp1*cp2*cp3*m1*y2*y3+c1*cp1*cp2*cp3*m1*y2*y3+c1*c2*cp1*cp2*cp3*m1*y2*y3+c1*c3*cp1*cp2*cp3*m1*y2*y3+c1*m2*y2*y3+cp1*m2*y2*y3+c1*cp1*m2*y2*y3+c2*cp1*m2*y2*y3+c3*cp1*m2*y2*y3+c1*cp2*m2*y2*y3+cp1*cp2*m2*y2*y3+c1*cp1*cp2*m2*y2*y3+c2*cp1*cp2*m2*y2*y3+c1*c2*cp1*cp2*m2*y2*y3+c3*cp1*cp2*m2*y2*y3+c1*c3*cp1*cp2*m2*y2*y3+c2*cp1*cp3*m2*y2*y3+c3*cp1*cp3*m2*y2*y3+c1*c3*cp1*cp3*m2*y2*y3+c1*cp2*cp3*m2*y2*y3+cp1*cp2*cp3*m2*y2*y3+c1*cp1*cp2*cp3*m2*y2*y3+c2*cp1*cp2*cp3*m2*y2*y3+c1*c2*cp1*cp2*cp3*m2*y2*y3+c2*m1*m2*y2*y3+cp2*m1*m2*y2*y3+c2*cp1*cp2*m1*m2*y2*y3+c3*cp1*cp2*m1*m2*y2*y3+c3*cp1*cp3*m1*m2*y2*y3+cp2*cp3*m1*m2*y2*y3+cp1*cp2*cp3*m1*m2*y2*y3+c2*cp1*cp2*cp3*m1*m2*y2*y3+cp3*m1*m3*y2*y3+cp1*cp3*m1*m3*y2*y3+cp2*cp3*m1*m3*y2*y3+cp1*cp2*cp3*m1*m3*y2*y3+cp2*m1*m2*m3*y2*y3+(1/2)*c1*c3*cp1*cp2*y3*(1+y3)+(1/2)*c2*c3*cp1*cp2*y3*(1+y3)+(1/2)*c1*c2*cp3*y3*(1+y3)+(1/2)*c1*c3*cp2*cp3*y3*(1+y3)+(1/2)*c1*cp1*cp2*m1*y3*(1+y3)+(1/2)*c2*cp1*cp2*m1*y3*(1+y3)+(1/2)*c2*cp1*cp3*m1*y3*(1+y3)+(1/2)*c1*cp1*cp2*cp3*m1*y3*(1+y3)+(1/2)*c2*cp1*cp2*cp3*m1*y3*(1+y3)+(1/2)*cp1*cp2*m2*y3*(1+y3)+(1/2)*c1*cp1*cp2*m2*y3*(1+y3)+(1/2)*c2*cp1*cp2*m2*y3*(1+y3)+(1/2)*c3*cp1*cp2*m2*y3*(1+y3)+(1/2)*c1*cp1*cp3*m2*y3*(1+y3)+(1/2)*c2*cp1*cp3*m2*y3*(1+y3)+(1/2)*c1*cp2*cp3*m2*y3*(1+y3)+(1/2)*cp1*cp2*cp3*m2*y3*(1+y3)+(1/2)*c1*cp1*cp2*cp3*m2*y3*(1+y3)+(1/2)*c2*cp1*cp2*cp3*m2*y3*(1+y3)+(1/2)*m1*m2*y3*(1+y3)+(1/2)*cp1*cp2*m1*m2*y3*(1+y3)+(1/2)*cp1*cp3*m1*m2*y3*(1+y3)+(1/2)*cp1*cp3*m2*m3*y3*(1+y3)+c1*c2*c3*cp1*z1+c1*c2*c3*cp1*cp2*z1+c1*c2*c3*cp3*z1+c2*c3*cp1*cp3*z1+c1*c2*c3*cp1*cp3*z1+c1*c2*c3*cp2*cp3*z1+c1*c3*cp1*cp2*cp3*z1+c1*c2*c3*cp1*cp2*cp3*z1+c2*c3*cp1*m1*z1+c2*c3*cp2*m1*z1+c3*cp1*cp2*m1*z1+c1*c3*cp1*cp2*m1*z1+c2*cp3*m1*z1+c1*c2*cp3*m1*z1+c2*c3*cp3*m1*z1+c3*cp1*cp2*cp3*m1*z1+c1*c3*cp1*cp2*cp3*m1*z1+c1*c3*cp1*cp2*m2*z1+c1*cp3*m2*z1+c2*cp3*m2*z1+c1*c3*cp3*m2*z1+c2*c3*cp3*m2*z1+cp1*cp3*m2*z1+c1*cp1*cp3*m2*z1+c2*cp1*cp3*m2*z1+c1*c2*cp1*cp3*m2*z1+c3*cp1*cp3*m2*z1+c1*c3*cp1*cp3*m2*z1+c2*c3*cp1*cp3*m2*z1+c1*c2*c3*cp1*cp3*m2*z1+cp2*cp3*m2*z1+c1*cp2*cp3*m2*z1+c1*c2*cp2*cp3*m2*z1+c1*c3*cp2*cp3*m2*z1+c2*cp1*cp2*cp3*m2*z1+c3*cp1*cp2*cp3*m2*z1+c2*c3*cp1*cp2*cp3*m2*z1+c1*c2*c3*cp1*cp2*cp3*m2*z1+c1*c3*m1*m2*z1+c2*c3*m1*m2*z1+c3*cp1*m1*m2*z1+c3*cp2*m1*m2*z1+c3*cp1*cp2*m1*m2*z1+cp3*m1*m2*z1+c2*c3*cp1*cp3*m1*m2*z1+cp2*cp3*m1*m2*z1+c2*cp2*cp3*m1*m2*z1+c3*cp2*cp3*m1*m2*z1+c2*cp1*cp2*cp3*m1*m2*z1+c2*c3*cp1*cp2*cp3*m1*m2*z1+c1*cp1*cp2*m3*z1+c1*c2*cp1*cp2*m3*z1+c1*c3*cp1*cp2*m3*z1+c1*c2*cp3*m3*z1+c1*c2*cp1*cp3*m3*z1+c2*c3*cp1*cp3*m3*z1+c1*cp2*cp3*m3*z1+c2*cp2*cp3*m3*z1+c1*c3*cp2*cp3*m3*z1+c2*c3*cp2*cp3*m3*z1+c1*c2*m1*m3*z1+c2*cp2*m1*m3*z1+c3*cp2*m1*m3*z1+cp1*cp2*m1*m3*z1+c1*cp1*cp2*m1*m3*z1+c2*cp1*cp2*m1*m3*z1+c3*cp1*cp2*m1*m3*z1+c2*cp3*m1*m3*z1+cp1*cp2*cp3*m1*m3*z1+c3*cp1*cp2*cp3*m1*m3*z1+c1*c3*m2*m3*z1+c2*c3*m2*m3*z1+cp1*m2*m3*z1+c1*cp1*m2*m3*z1+c2*cp1*m2*m3*z1+c3*cp1*m2*m3*z1+cp2*m2*m3*z1+c1*cp2*m2*m3*z1+c2*cp2*m2*m3*z1+c3*cp2*m2*m3*z1+cp3*m2*m3*z1+c3*cp3*m2*m3*z1+c2*cp1*cp3*m2*m3*z1+c3*cp1*cp3*m2*m3*z1+c1*cp2*cp3*m2*m3*z1+c2*cp2*cp3*m2*m3*z1+c3*cp2*cp3*m2*m3*z1+c1*cp1*cp2*cp3*m2*m3*z1+cp2*m1*m2*m3*z1+c3*cp2*m1*m2*m3*z1+cp1*cp2*m1*m2*m3*z1+c1*cp3*m1*m2*m3*z1+c2*cp3*m1*m2*m3*z1+c3*cp3*m1*m2*m3*z1+cp2*cp3*m1*m2*m3*z1+c1*c3*cp2*x1*z1+c1*c2*cp3*x1*z1+c2*c3*cp3*x1*z1+c3*cp2*m1*x1*z1+c2*cp3*m1*x1*z1+c3*cp2*cp3*m1*x1*z1+c3*cp2*m2*x1*z1+c1*cp3*m2*x1*z1+c2*cp3*m2*x1*z1+cp2*cp3*m2*x1*z1+c1*cp2*cp3*m2*x1*z1+cp2*cp3*m1*m2*x1*z1+c2*cp2*m3*x1*z1+c3*cp2*m3*x1*z1+c2*cp3*m3*x1*z1+cp2*m1*m3*x1*z1+m2*m3*x1*z1+cp2*cp3*m2*m3*x1*z1+c1*c3*x2*z1+c2*c3*cp1*x2*z1+c1*c3*cp2*x2*z1+c2*c3*cp1*cp2*x2*z1+c1*c2*cp3*x2*z1+c1*c3*cp3*x2*z1+c2*c3*cp3*x2*z1+c1*c2*cp1*cp3*x2*z1+c1*c3*cp2*cp3*x2*z1+c3*cp1*m1*x2*z1+c3*cp1*cp2*m1*x2*z1+c1*cp1*cp3*m1*x2*z1+c2*cp1*cp3*m1*x2*z1+c3*cp1*cp3*m1*x2*z1+c3*cp1*cp2*cp3*m1*x2*z1+c3*m2*x2*z1+c3*cp2*m2*x2*z1+cp3*m2*x2*z1+c1*cp3*m2*x2*z1+c2*cp3*m2*x2*z1+cp1*cp3*m2*x2*z1+c3*cp1*cp3*m2*x2*z1+cp2*cp3*m2*x2*z1+c1*cp2*cp3*m2*x2*z1+c1*cp1*cp2*cp3*m2*x2*z1+c3*cp1*cp2*cp3*m2*x2*z1+cp1*cp2*cp3*m1*m2*x2*z1+c1*m3*x2*z1+c2*m3*x2*z1+c3*m3*x2*z1+c1*cp2*m3*x2*z1+c2*cp2*m3*x2*z1+c3*cp2*m3*x2*z1+c2*cp3*m3*x2*z1+m1*m3*x2*z1+c1*m1*m3*x2*z1+cp1*cp3*m1*m3*x2*z1+m2*m3*x2*z1+cp3*m2*m3*x2*z1+cp1*cp3*m2*m3*x2*z1+cp2*cp3*m2*m3*x2*z1+c1*c2*x3*z1+c2*c3*x3*z1+c2*c3*cp1*x3*z1+c1*c2*cp2*x3*z1+c2*c3*cp2*x3*z1+c1*c2*cp1*cp2*x3*z1+c2*c3*cp1*cp2*x3*z1+c1*c2*c3*cp1*cp2*x3*z1+c1*c2*cp3*x3*z1+c2*c3*cp3*x3*z1+c1*c2*c3*cp1*cp3*x3*z1+c1*c2*cp2*cp3*x3*z1+c2*c3*cp2*cp3*x3*z1+c2*cp1*m1*x3*z1+c2*c3*cp1*cp2*m1*x3*z1+c2*cp1*cp3*m1*x3*z1+c2*c3*cp1*cp3*m1*x3*z1+c2*cp1*cp2*cp3*m1*x3*z1+m2*x3*z1+c1*m2*x3*z1+c2*m2*x3*z1+c3*m2*x3*z1+cp1*m2*x3*z1+c2*cp1*m2*x3*z1+c3*cp1*m2*x3*z1+cp2*m2*x3*z1+c1*cp2*m2*x3*z1+c2*cp2*m2*x3*z1+c3*cp2*m2*x3*z1+cp1*cp2*m2*x3*z1+c2*cp1*cp2*m2*x3*z1+c1*c2*cp1*cp2*m2*x3*z1+c3*cp1*cp2*m2*x3*z1+c1*c3*cp1*cp2*m2*x3*z1+cp3*m2*x3*z1+c1*cp3*m2*x3*z1+c2*cp3*m2*x3*z1+c3*cp3*m2*x3*z1+cp1*cp3*m2*x3*z1+c2*cp1*cp3*m2*x3*z1+c1*c3*cp1*cp3*m2*x3*z1+cp2*cp3*m2*x3*z1+c1*cp2*cp3*m2*x3*z1+c2*cp2*cp3*m2*x3*z1+c3*cp2*cp3*m2*x3*z1+cp1*cp2*cp3*m2*x3*z1+c1*cp1*cp2*cp3*m2*x3*z1+c2*cp1*cp2*cp3*m2*x3*z1+c1*c2*cp1*cp2*cp3*m2*x3*z1+m1*m2*x3*z1+c1*m1*m2*x3*z1+c2*m1*m2*x3*z1+cp1*m1*m2*x3*z1+cp2*m1*m2*x3*z1+cp1*cp2*m1*m2*x3*z1+c2*cp1*cp2*m1*m2*x3*z1+c3*cp1*cp2*m1*m2*x3*z1+cp1*cp3*m1*m2*x3*z1+c3*cp1*cp3*m1*m2*x3*z1+c2*cp1*cp2*cp3*m1*m2*x3*z1+c1*m2*m3*x3*z1+c2*m2*m3*x3*z1+m1*m2*m3*x3*z1+cp2*m1*m2*m3*x3*z1+c3*cp2*y1*z1+c1*c3*cp2*y1*z1+c3*cp1*cp2*y1*z1+c2*cp3*y1*z1+c1*c2*cp3*y1*z1+c2*c3*cp3*y1*z1+c2*cp1*cp3*y1*z1+c3*cp2*cp3*y1*z1+c3*cp2*m1*y1*z1+c2*cp3*m1*y1*z1+c3*cp2*cp3*m1*y1*z1+c3*cp2*m2*y1*z1+c1*cp3*m2*y1*z1+c2*cp3*m2*y1*z1+cp1*cp3*m2*y1*z1+c1*cp2*cp3*m2*y1*z1+cp1*cp2*cp3*m2*y1*z1+cp2*cp3*m1*m2*y1*z1+cp2*m3*y1*z1+c2*cp2*m3*y1*z1+c3*cp2*m3*y1*z1+c2*cp3*m3*y1*z1+cp2*m1*m3*y1*z1+m2*m3*y1*z1+cp2*cp3*m2*m3*y1*z1+c1*c3*y2*z1+c2*c3*cp1*y2*z1+c1*c3*cp2*y2*z1+c3*cp1*cp2*y2*z1+c1*c3*cp1*cp2*y2*z1+c2*c3*cp1*cp2*y2*z1+c1*c2*cp3*y2*z1+c3*cp3*y2*z1+c1*c3*cp3*y2*z1+c2*c3*cp3*y2*z1+cp1*cp3*y2*z1+c2*cp1*cp3*y2*z1+c1*c3*cp1*cp3*y2*z1+c3*cp2*cp3*y2*z1+c1*c3*cp2*cp3*y2*z1+c3*cp1*m1*y2*z1+c1*cp1*cp3*m1*y2*z1+c3*cp1*cp2*cp3*m1*y2*z1+c3*m2*y2*z1+c3*cp2*m2*y2*z1+cp3*m2*y2*z1+c1*cp3*m2*y2*z1+c2*cp3*m2*y2*z1+c1*cp1*cp3*m2*y2*z1+c3*cp1*cp3*m2*y2*z1+cp2*cp3*m2*y2*z1+c1*cp2*cp3*m2*y2*z1+cp1*cp2*cp3*m2*y2*z1+c3*cp1*cp2*cp3*m2*y2*z1+cp1*cp3*m1*m2*y2*z1+c1*m3*y2*z1+c2*m3*y2*z1+c3*m3*y2*z1+c1*cp2*m3*y2*z1+c2*cp2*m3*y2*z1+c3*cp2*m3*y2*z1+cp3*m3*y2*z1+c2*cp3*m3*y2*z1+c1*m1*m3*y2*z1+cp1*cp3*m1*m3*y2*z1+m2*m3*y2*z1+cp3*m2*m3*y2*z1+cp1*cp3*m2*m3*y2*z1+cp2*cp3*m2*m3*y2*z1+c1*c2*y3*z1+c2*c3*y3*z1+c2*cp1*y3*z1+c2*c3*cp1*y3*z1+c1*cp2*y3*z1+c2*cp2*y3*z1+c1*c2*cp2*y3*z1+c2*c3*cp2*y3*z1+cp1*cp2*y3*z1+c2*cp1*cp2*y3*z1+c3*cp1*cp2*y3*z1+c1*c3*cp1*cp2*y3*z1+c2*c3*cp1*cp2*y3*z1+c1*c2*c3*cp1*cp2*y3*z1+c1*c2*cp3*y3*z1+c2*c3*cp3*y3*z1+c2*cp1*cp3*y3*z1+c1*c2*cp1*cp3*y3*z1+c2*c3*cp1*cp3*y3*z1+c1*c2*c3*cp1*cp3*y3*z1+cp2*cp3*y3*z1+c1*c2*cp2*cp3*y3*z1+c3*cp2*cp3*y3*z1+c1*c3*cp2*cp3*y3*z1+c2*cp1*m1*y3*z1+cp1*cp2*m1*y3*z1+c2*cp1*cp2*m1*y3*z1+c3*cp1*cp2*m1*y3*z1+c2*c3*cp1*cp2*m1*y3*z1+c2*c3*cp1*cp3*m1*y3*z1+c2*cp1*cp2*cp3*m1*y3*z1+c3*cp1*cp2*cp3*m1*y3*z1+m2*y3*z1+c1*m2*y3*z1+c2*m2*y3*z1+c3*m2*y3*z1+c2*cp1*m2*y3*z1+c3*cp1*m2*y3*z1+c1*cp2*m2*y3*z1+c2*cp2*m2*y3*z1+c3*cp2*m2*y3*z1+cp1*cp2*m2*y3*z1+c2*cp1*cp2*m2*y3*z1+c1*c2*cp1*cp2*m2*y3*z1+c3*cp1*cp2*m2*y3*z1+c1*c3*cp1*cp2*m2*y3*z1+cp3*m2*y3*z1+c1*cp3*m2*y3*z1+c2*cp3*m2*y3*z1+c3*cp3*m2*y3*z1+c1*cp1*cp3*m2*y3*z1+c2*cp1*cp3*m2*y3*z1+c3*cp1*cp3*m2*y3*z1+c1*c3*cp1*cp3*m2*y3*z1+cp2*cp3*m2*y3*z1+c1*cp2*cp3*m2*y3*z1+c2*cp2*cp3*m2*y3*z1+c2*cp1*cp2*cp3*m2*y3*z1+c1*c2*cp1*cp2*cp3*m2*y3*z1+c1*m1*m2*y3*z1+c2*m1*m2*y3*z1+cp1*m1*m2*y3*z1+cp2*m1*m2*y3*z1+cp1*cp2*m1*m2*y3*z1+c2*cp1*cp2*m1*m2*y3*z1+c3*cp1*cp2*m1*m2*y3*z1+c3*cp1*cp3*m1*m2*y3*z1+cp1*cp2*cp3*m1*m2*y3*z1+c2*cp1*cp2*cp3*m1*m2*y3*z1+m2*m3*y3*z1+c1*m2*m3*y3*z1+c2*m2*m3*y3*z1+m1*m2*m3*y3*z1+cp2*m1*m2*m3*y3*z1+(1/2)*c2*c3*cp1*z1*(1+z1)+(1/2)*c2*c3*cp2*z1*(1+z1)+(1/2)*c1*c2*cp3*z1*(1+z1)+(1/2)*c2*c3*cp3*z1*(1+z1)+(1/2)*c2*cp3*m1*z1*(1+z1)+(1/2)*c2*cp1*cp3*m1*z1*(1+z1)+(1/2)*c3*cp2*m2*z1*(1+z1)+(1/2)*cp3*m2*z1*(1+z1)+(1/2)*c1*cp3*m2*z1*(1+z1)+(1/2)*c2*cp3*m2*z1*(1+z1)+(1/2)*c1*cp1*cp3*m2*z1*(1+z1)+(1/2)*c3*cp1*cp3*m2*z1*(1+z1)+(1/2)*cp2*cp3*m2*z1*(1+z1)+(1/2)*c1*cp2*cp3*m2*z1*(1+z1)+(1/2)*c3*cp2*cp3*m2*z1*(1+z1)+(1/2)*cp3*m1*m2*z1*(1+z1)+(1/2)*cp1*cp3*m1*m2*z1*(1+z1)+(1/2)*cp2*cp3*m1*m2*z1*(1+z1)+(1/2)*cp1*cp2*cp3*m1*m2*z1*(1+z1)+(1/2)*c2*cp2*m3*z1*(1+z1)+(1/2)*c3*cp2*m3*z1*(1+z1)+(1/2)*c2*cp3*m3*z1*(1+z1)+(1/2)*m2*m3*z1*(1+z1)+(1/2)*cp3*m2*m3*z1*(1+z1)+(1/2)*cp2*cp3*m2*m3*z1*(1+z1)+c1*c2*cp1*cp3*z2+c1*c2*c3*cp1*cp2*cp3*z2+c3*cp1*cp2*m1*z2+c2*c3*cp1*cp2*m1*z2+c1*c2*c3*cp1*cp2*m1*z2+c1*cp3*m1*z2+c1*c2*cp3*m1*z2+c1*cp1*cp3*m1*z2+c2*cp1*cp3*m1*z2+c1*c2*cp1*cp3*m1*z2+c3*cp1*cp3*m1*z2+c1*c3*cp1*cp3*m1*z2+c1*c2*c3*cp1*cp3*m1*z2+c1*cp2*cp3*m1*z2+c1*c2*cp2*cp3*m1*z2+c2*cp1*cp2*cp3*m1*z2+c1*c3*cp1*cp2*cp3*m1*z2+c2*c3*cp1*cp2*cp3*m1*z2+c1*c3*cp1*cp2*m2*z2+c1*cp1*cp3*m2*z2+c1*c2*c3*cp1*cp3*m2*z2+c1*c2*cp1*cp2*cp3*m2*z2+c1*c2*c3*cp1*cp2*cp3*m2*z2+c2*c3*m1*m2*z2+cp3*m1*m2*z2+c1*cp3*m1*m2*z2+c2*cp3*m1*m2*z2+c1*cp1*cp3*m1*m2*z2+cp2*cp3*m1*m2*z2+c1*cp2*cp3*m1*m2*z2+c2*cp2*cp3*m1*m2*z2+cp1*cp2*cp3*m1*m2*z2+c1*cp1*cp2*cp3*m1*m2*z2+c1*c2*cp1*cp2*m3*z2+c1*c3*cp1*cp2*m3*z2+c1*c2*cp1*cp3*m3*z2+cp1*cp2*m1*m3*z2+c1*cp1*cp2*m1*m3*z2+cp1*cp3*m1*m3*z2+c1*cp1*m2*m3*z2+c1*cp1*cp2*cp3*m2*m3*z2+m1*m2*m3*z2+cp2*m1*m2*m3*z2+c3*cp2*m1*m2*m3*z2+cp3*m1*m2*m3*z2+c2*cp3*m1*m2*m3*z2+c3*cp3*m1*m2*m3*z2+cp1*cp2*cp3*m1*m2*m3*z2+c3*x1*z2+c1*c3*x1*z2+c3*cp1*x1*z2+c1*c3*cp1*x1*z2+c3*cp2*x1*z2+c2*c3*cp1*cp2*x1*z2+cp3*x1*z2+c1*cp3*x1*z2+c2*cp3*x1*z2+c3*cp3*x1*z2+c1*c3*cp3*x1*z2+c2*c3*cp3*x1*z2+c1*c2*cp1*cp3*x1*z2+c1*c3*cp2*cp3*x1*z2+c3*cp2*m1*x1*z2+c3*cp1*cp2*m1*x1*z2+c2*cp3*m1*x1*z2+c3*cp2*cp3*m1*x1*z2+c3*cp1*cp2*cp3*m1*x1*z2+c3*cp2*m2*x1*z2+c2*cp3*m2*x1*z2+c1*cp1*cp2*cp3*m2*x1*z2+c3*cp1*cp2*cp3*m2*x1*z2+cp2*cp3*m1*m2*x1*z2+c1*cp2*m3*x1*z2+c2*cp2*m3*x1*z2+c3*cp2*m3*x1*z2+c2*cp3*m3*x1*z2+c1*m1*m3*x1*z2+cp2*m1*m3*x1*z2+cp1*cp3*m1*m3*x1*z2+m2*m3*x1*z2+cp1*cp3*m2*m3*x1*z2+cp2*cp3*m2*m3*x1*z2+c3*cp1*cp2*x2*z2+c1*c3*cp1*cp2*x2*z2+cp1*cp3*x2*z2+c1*cp1*cp3*x2*z2+c2*cp1*cp3*x2*z2+c1*c2*cp1*cp3*x2*z2+c3*cp1*cp3*x2*z2+c1*c3*cp1*cp3*x2*z2+c3*cp1*cp2*m1*x2*z2+c1*c3*cp1*cp2*m1*x2*z2+cp1*cp3*m1*x2*z2+c1*cp1*cp3*m1*x2*z2+c2*cp1*cp3*m1*x2*z2+c1*c2*cp1*cp3*m1*x2*z2+c3*cp1*cp3*m1*x2*z2+c1*c3*cp1*cp3*m1*x2*z2+cp1*cp3*m2*x2*z2+c1*cp1*cp3*m2*x2*z2+cp1*cp2*cp3*m2*x2*z2+c1*cp1*cp2*cp3*m2*x2*z2+cp1*cp3*m1*m2*x2*z2+c1*cp1*cp3*m1*m2*x2*z2+cp1*cp2*cp3*m1*m2*x2*z2+c1*cp1*cp2*cp3*m1*m2*x2*z2+m1*m3*x2*z2+c1*c2*cp1*cp2*x3*z2+c1*c2*c3*cp1*cp2*x3*z2+c1*c2*c3*cp1*cp3*x3*z2+c1*c2*cp1*cp2*m1*x3*z2+c1*c3*cp1*cp3*m1*x3*z2+cp1*cp2*cp3*m1*x3*z2+c1*cp1*cp2*cp3*m1*x3*z2+c1*c2*cp1*cp2*cp3*m1*x3*z2+c1*c3*cp1*cp2*cp3*m1*x3*z2+c1*c2*cp1*cp2*m2*x3*z2+c1*c3*cp1*cp2*m2*x3*z2+c1*c3*cp1*cp3*m2*x3*z2+c1*cp1*cp2*cp3*m2*x3*z2+c1*c2*cp1*cp2*cp3*m2*x3*z2+m1*m2*x3*z2+c2*m1*m2*x3*z2+cp2*m1*m2*x3*z2+c1*cp1*cp2*m1*m2*x3*z2+cp1*cp2*cp3*m1*m2*x3*z2+c1*cp1*cp2*cp3*m1*m2*x3*z2+cp1*cp2*cp3*m1*m3*x3*z2+m1*m2*m3*x3*z2+cp2*m1*m2*m3*x3*z2+c3*y1*z2+c1*c3*y1*z2+c3*cp1*y1*z2+c1*c3*cp1*y1*z2+c2*c3*cp1*cp2*y1*z2+c3*cp3*y1*z2+c1*c3*cp3*y1*z2+c2*c3*cp3*y1*z2+cp1*cp3*y1*z2+c1*cp1*cp3*y1*z2+c1*c2*cp1*cp3*y1*z2+c3*cp2*cp3*y1*z2+c1*c3*cp2*cp3*y1*z2+c3*cp2*m1*y1*z2+c3*cp1*cp2*m1*y1*z2+c2*cp3*m1*y1*z2+c3*cp2*cp3*m1*y1*z2+c3*cp1*cp2*cp3*m1*y1*z2+c3*cp2*m2*y1*z2+c2*cp3*m2*y1*z2+cp2*cp3*m2*y1*z2+c1*cp1*cp2*cp3*m2*y1*z2+c3*cp1*cp2*cp3*m2*y1*z2+cp2*cp3*m1*m2*y1*z2+cp2*m3*y1*z2+c1*cp2*m3*y1*z2+c2*cp2*m3*y1*z2+c3*cp2*m3*y1*z2+c2*cp3*m3*y1*z2+m1*m3*y1*z2+c1*m1*m3*y1*z2+cp2*m1*m3*y1*z2+cp1*cp3*m1*m3*y1*z2+m2*m3*y1*z2+cp1*cp3*m2*m3*y1*z2+cp2*cp3*m2*m3*y1*z2+c3*cp1*cp2*m1*y2*z2+c1*c3*cp1*cp2*m1*y2*z2+c2*cp1*cp3*m1*y2*z2+c1*c2*cp1*cp3*m1*y2*z2+c3*cp1*cp3*m1*y2*z2+c1*c3*cp1*cp3*m1*y2*z2+cp1*cp3*m1*m2*y2*z2+c1*cp1*cp3*m1*m2*y2*z2+cp1*cp2*cp3*m1*m2*y2*z2+c1*cp1*cp2*cp3*m1*m2*y2*z2+c1*c3*cp1*cp2*y3*z2+c1*c2*c3*cp1*cp2*y3*z2+c1*c2*cp1*cp3*y3*z2+c1*c2*c3*cp1*cp3*y3*z2+c1*cp1*cp2*m1*y3*z2+c1*c2*cp1*cp2*m1*y3*z2+c1*cp1*cp3*m1*y3*z2+c1*c3*cp1*cp3*m1*y3*z2+cp1*cp2*cp3*m1*y3*z2+c1*cp1*cp2*cp3*m1*y3*z2+c1*c2*cp1*cp2*cp3*m1*y3*z2+c1*c3*cp1*cp2*cp3*m1*y3*z2+c1*c2*cp1*cp2*m2*y3*z2+c1*c3*cp1*cp2*m2*y3*z2+c1*cp1*cp3*m2*y3*z2+c1*c3*cp1*cp3*m2*y3*z2+c1*c2*cp1*cp2*cp3*m2*y3*z2+c2*m1*m2*y3*z2+cp2*m1*m2*y3*z2+c1*cp1*cp2*m1*m2*y3*z2+cp1*cp2*cp3*m1*m2*y3*z2+c1*cp1*cp2*cp3*m1*m2*y3*z2+cp1*cp2*cp3*m1*m3*y3*z2+m1*m2*m3*y3*z2+cp2*m1*m2*m3*y3*z2+c1*c3*cp2*z1*z2+c2*c3*cp2*z1*z2+c2*c3*cp1*cp2*z1*z2+c2*c3*cp3*z1*z2+c1*c2*cp1*cp3*z1*z2+c1*c3*cp2*cp3*z1*z2+c3*cp1*cp2*m1*z1*z2+cp3*m1*z1*z2+c1*cp3*m1*z1*z2+c2*cp3*m1*z1*z2+cp1*cp3*m1*z1*z2+c1*cp1*cp3*m1*z1*z2+c3*cp1*cp2*cp3*m1*z1*z2+c3*cp2*m2*z1*z2+cp3*m2*z1*z2+c1*cp3*m2*z1*z2+c2*cp3*m2*z1*z2+cp1*cp3*m2*z1*z2+c1*cp1*cp3*m2*z1*z2+cp2*cp3*m2*z1*z2+c3*cp2*cp3*m2*z1*z2+c1*cp1*cp2*cp3*m2*z1*z2+c3*cp1*cp2*cp3*m2*z1*z2+cp2*cp3*m1*m2*z1*z2+c1*cp2*m3*z1*z2+c2*cp2*m3*z1*z2+c3*cp2*m3*z1*z2+c2*cp3*m3*z1*z2+c1*m1*m3*z1*z2+cp2*m1*m3*z1*z2+cp3*m1*m3*z1*z2+cp1*cp3*m1*m3*z1*z2+m2*m3*z1*z2+cp3*m2*m3*z1*z2+cp1*cp3*m2*m3*z1*z2+cp2*cp3*m2*m3*z1*z2+(1/2)*c3*cp1*cp2*z2*(1+z2)+(1/2)*c1*c3*cp1*cp2*z2*(1+z2)+(1/2)*c1*c2*cp3*z2*(1+z2)+(1/2)*cp1*cp3*z2*(1+z2)+(1/2)*c1*cp1*cp3*z2*(1+z2)+(1/2)*c2*cp1*cp3*z2*(1+z2)+(1/2)*c1*c2*cp1*cp3*z2*(1+z2)+(1/2)*c3*cp1*cp3*z2*(1+z2)+(1/2)*c1*c3*cp1*cp3*z2*(1+z2)+(1/2)*cp3*m1*z2*(1+z2)+(1/2)*c1*cp3*m1*z2*(1+z2)+(1/2)*c2*cp3*m1*z2*(1+z2)+(1/2)*c1*cp3*m2*z2*(1+z2)+(1/2)*cp1*cp3*m2*z2*(1+z2)+(1/2)*c1*cp1*cp3*m2*z2*(1+z2)+(1/2)*c1*cp2*cp3*m2*z2*(1+z2)+(1/2)*cp1*cp2*cp3*m2*z2*(1+z2)+(1/2)*c1*cp1*cp2*cp3*m2*z2*(1+z2)+(1/2)*cp1*cp3*m1*m2*z2*(1+z2)+(1/2)*cp2*cp3*m1*m2*z2*(1+z2)+(1/2)*cp1*m1*m3*z2*(1+z2)+(1/2)*cp2*m1*m3*z2*(1+z2)+(1/2)*cp1*cp2*m1*m3*z2*(1+z2)+(1/2)*cp3*m1*m3*z2*(1+z2)+(1/2)*cp1*cp3*m1*m3*z2*(1+z2)+c1*c2*c3*cp2*z3+c2*c3*cp1*cp2*cp3*z3+c1*c2*c3*cp1*cp2*m1*z3+c1*c2*cp1*cp2*cp3*m1*z3+c1*c2*c3*cp1*cp2*cp3*m1*z3+c1*c2*m2*z3+c1*c2*cp2*m2*z3+cp1*cp2*m2*z3+c1*cp1*cp2*m2*z3+c1*c2*cp1*cp2*m2*z3+c3*cp1*cp2*m2*z3+c1*c3*cp1*cp2*m2*z3+c1*c2*cp3*m2*z3+cp1*cp2*cp3*m2*z3+c1*cp1*cp2*cp3*m2*z3+c2*cp1*cp2*cp3*m2*z3+c3*cp1*cp2*cp3*m2*z3+c1*c3*cp1*cp2*cp3*m2*z3+c2*c3*cp1*cp2*cp3*m2*z3+c1*c2*m1*m2*z3+c1*cp2*m1*m2*z3+c2*cp2*m1*m2*z3+c3*cp1*cp2*m1*m2*z3+cp1*cp3*m1*m2*z3+c1*cp1*cp3*m1*m2*z3+c1*cp2*cp3*m1*m2*z3+c2*cp2*cp3*m1*m2*z3+c2*cp1*cp2*cp3*m1*m2*z3+c3*cp1*cp2*cp3*m1*m2*z3+c1*c2*cp2*m3*z3+c2*cp1*cp2*m3*z3+c1*c2*cp1*cp2*m3*z3+c2*c3*cp1*cp2*m3*z3+c1*c2*cp2*cp3*m3*z3+c2*cp1*cp2*cp3*m1*m3*z3+c1*c2*m2*m3*z3+c1*cp1*m2*m3*z3+c1*cp2*m2*m3*z3+cp1*cp3*m2*m3*z3+c2*cp1*cp2*cp3*m2*m3*z3+m1*m2*m3*z3+cp1*m1*m2*m3*z3+c1*cp2*m1*m2*m3*z3+c2*cp2*m1*m2*m3*z3+c3*cp3*m1*m2*m3*z3+cp1*cp3*m1*m2*m3*z3+cp2*cp3*m1*m2*m3*z3+c1*c2*x1*z3+c1*c2*cp1*x1*z3+c1*c2*cp2*x1*z3+c2*c3*cp2*x1*z3+c1*c2*c3*cp2*x1*z3+c1*c2*cp1*cp2*x1*z3+c2*c3*cp1*cp2*x1*z3+c1*c2*c3*cp1*cp2*x1*z3+c1*c2*c3*cp3*x1*z3+c1*c2*c3*cp1*cp3*x1*z3+c1*c2*cp2*cp3*x1*z3+c2*c3*cp2*cp3*x1*z3+c2*m1*x1*z3+c2*cp1*m1*x1*z3+c2*cp2*m1*x1*z3+c2*c3*cp2*m1*x1*z3+c2*cp1*cp2*m1*x1*z3+c2*c3*cp1*cp2*m1*x1*z3+c2*c3*cp3*m1*x1*z3+c2*c3*cp1*cp3*m1*x1*z3+c2*cp2*cp3*m1*x1*z3+c2*cp1*cp2*cp3*m1*x1*z3+c1*c2*cp3*m2*x1*z3+c1*c2*cp1*cp3*m2*x1*z3+c1*c2*cp2*cp3*m2*x1*z3+c2*cp1*cp2*cp3*m2*x1*z3+c1*c2*cp1*cp2*cp3*m2*x1*z3+m1*m2*x1*z3+c1*m1*m2*x1*z3+c2*m1*m2*x1*z3+cp2*m1*m2*x1*z3+c2*cp3*m1*m2*x1*z3+c2*cp1*cp3*m1*m2*x1*z3+c2*cp2*cp3*m1*m2*x1*z3+c2*cp1*cp2*cp3*m1*m2*x1*z3+m2*m3*x1*z3+c1*m2*m3*x1*z3+c2*m2*m3*x1*z3+cp2*m1*m2*m3*x1*z3+c1*x2*z3+c1*c2*x2*z3+c1*c3*x2*z3+cp1*x2*z3+c1*cp1*x2*z3+c2*cp1*x2*z3+c1*c2*cp1*x2*z3+c3*cp1*x2*z3+c1*c3*cp1*x2*z3+c2*c3*cp1*x2*z3+c1*cp2*x2*z3+c1*c3*cp2*x2*z3+c1*c2*cp1*cp2*x2*z3+c1*c2*c3*cp1*cp2*x2*z3+c1*cp3*x2*z3+c1*c2*cp3*x2*z3+c1*c3*cp3*x2*z3+c1*c2*c3*cp1*cp3*x2*z3+m1*x2*z3+c1*m1*x2*z3+c2*m1*x2*z3+cp1*m1*x2*z3+c1*cp1*m1*x2*z3+c2*cp1*m1*x2*z3+cp2*m1*x2*z3+c2*cp1*cp2*m1*x2*z3+c3*cp1*cp2*m1*x2*z3+c2*c3*cp1*cp2*m1*x2*z3+cp3*m1*x2*z3+c1*cp3*m1*x2*z3+c2*cp3*m1*x2*z3+c1*c2*cp1*cp3*m1*x2*z3+c3*cp1*cp3*m1*x2*z3+c1*c3*cp1*cp3*m1*x2*z3+c2*c3*cp1*cp3*m1*x2*z3+c1*cp2*cp3*m1*x2*z3+c2*cp2*cp3*m1*x2*z3+c3*cp2*cp3*m1*x2*z3+c2*cp1*cp2*cp3*m1*x2*z3+c1*c2*cp1*cp2*cp3*m1*x2*z3+c3*cp1*cp2*cp3*m1*x2*z3+c1*c3*cp1*cp2*cp3*m1*x2*z3+cp1*cp3*m2*x2*z3+c1*cp1*cp3*m2*x2*z3+c2*cp1*cp3*m2*x2*z3+c1*c2*cp1*cp3*m2*x2*z3+c1*cp2*cp3*m2*x2*z3+c1*c2*cp1*cp2*cp3*m2*x2*z3+c2*m1*m2*x2*z3+cp1*cp2*m1*m2*x2*z3+cp1*cp3*m1*m2*x2*z3+c1*cp1*cp3*m1*m2*x2*z3+c2*cp1*cp3*m1*m2*x2*z3+cp1*cp2*cp3*m1*m2*x2*z3+c1*cp1*cp2*cp3*m1*m2*x2*z3+c2*cp1*cp2*cp3*m1*m2*x2*z3+cp2*m1*m3*x2*z3+cp1*cp2*m1*m3*x2*z3+cp2*cp3*m1*m3*x2*z3+cp1*cp2*cp3*m1*m3*x2*z3+m1*m2*m3*x2*z3+cp2*m1*m2*m3*x2*z3+cp1*cp2*x3*z3+c1*cp1*cp2*x3*z3+c2*cp1*cp2*x3*z3+c3*cp1*cp2*x3*z3+c1*c3*cp1*cp2*x3*z3+c2*c3*cp1*cp2*x3*z3+c1*cp2*cp3*x3*z3+c1*c3*cp2*cp3*x3*z3+cp1*cp2*m1*x3*z3+c1*cp1*cp2*m1*x3*z3+c2*cp1*cp2*m1*x3*z3+c3*cp1*cp2*m1*x3*z3+c1*c3*cp1*cp2*m1*x3*z3+c2*c3*cp1*cp2*m1*x3*z3+cp2*cp3*m1*x3*z3+c1*cp2*cp3*m1*x3*z3+c2*cp2*cp3*m1*x3*z3+c3*cp2*cp3*m1*x3*z3+c1*c3*cp2*cp3*m1*x3*z3+c2*c3*cp2*cp3*m1*x3*z3+cp1*cp2*m2*x3*z3+c1*cp1*cp2*m2*x3*z3+c2*cp1*cp2*m2*x3*z3+c3*cp1*cp2*m2*x3*z3+c1*c3*cp1*cp2*m2*x3*z3+c2*c3*cp1*cp2*m2*x3*z3+c1*cp2*cp3*m2*x3*z3+c1*c3*cp2*cp3*m2*x3*z3+m1*m2*x3*z3+cp1*cp2*m1*m2*x3*z3+c3*cp1*cp2*m1*m2*x3*z3+cp2*cp3*m1*m2*x3*z3+c3*cp2*cp3*m1*m2*x3*z3+m1*m2*m3*x3*z3+c1*c2*y1*z3+c2*cp1*y1*z3+c1*c2*cp1*y1*z3+c1*c2*cp2*y1*z3+c2*c3*cp2*y1*z3+c1*c2*c3*cp2*y1*z3+c2*cp1*cp2*y1*z3+c1*c2*cp1*cp2*y1*z3+c1*c2*c3*cp1*cp2*y1*z3+c1*c2*c3*cp3*y1*z3+c2*c3*cp1*cp3*y1*z3+c1*c2*c3*cp1*cp3*y1*z3+c2*cp2*cp3*y1*z3+c1*c2*cp2*cp3*y1*z3+c2*c3*cp2*cp3*y1*z3+c2*m1*y1*z3+c2*cp1*m1*y1*z3+c2*cp2*m1*y1*z3+c2*c3*cp2*m1*y1*z3+c2*cp1*cp2*m1*y1*z3+c2*c3*cp1*cp2*m1*y1*z3+c2*c3*cp3*m1*y1*z3+c2*c3*cp1*cp3*m1*y1*z3+c2*cp2*cp3*m1*y1*z3+c2*cp1*cp2*cp3*m1*y1*z3+c1*c2*cp3*m2*y1*z3+c2*cp1*cp3*m2*y1*z3+c1*c2*cp1*cp3*m2*y1*z3+c1*c2*cp2*cp3*m2*y1*z3+c1*c2*cp1*cp2*cp3*m2*y1*z3+c1*m1*m2*y1*z3+c2*m1*m2*y1*z3+cp2*m1*m2*y1*z3+c2*cp3*m1*m2*y1*z3+c2*cp1*cp3*m1*m2*y1*z3+c2*cp2*cp3*m1*m2*y1*z3+c2*cp1*cp2*cp3*m1*m2*y1*z3+c1*m2*m3*y1*z3+c2*m2*m3*y1*z3+cp2*m1*m2*m3*y1*z3+c1*c2*y2*z3+c1*c3*y2*z3+c1*c2*cp1*y2*z3+c3*cp1*y2*z3+c1*c3*cp1*y2*z3+c2*c3*cp1*y2*z3+c1*c3*cp2*y2*z3+cp1*cp2*y2*z3+c1*cp1*cp2*y2*z3+c2*cp1*cp2*y2*z3+c1*c2*cp1*cp2*y2*z3+c3*cp1*cp2*y2*z3+c1*c3*cp1*cp2*y2*z3+c2*c3*cp1*cp2*y2*z3+c1*c2*c3*cp1*cp2*y2*z3+c1*c2*cp3*y2*z3+c1*c3*cp3*y2*z3+c3*cp1*cp3*y2*z3+c1*c3*cp1*cp3*y2*z3+c2*c3*cp1*cp3*y2*z3+c1*c2*c3*cp1*cp3*y2*z3+c1*cp2*cp3*y2*z3+m1*y2*z3+c1*m1*y2*z3+c2*m1*y2*z3+cp1*m1*y2*z3+c1*cp1*m1*y2*z3+c2*cp1*m1*y2*z3+cp2*m1*y2*z3+c2*cp1*cp2*m1*y2*z3+c2*c3*cp1*cp2*m1*y2*z3+cp3*m1*y2*z3+c1*cp3*m1*y2*z3+c2*cp3*m1*y2*z3+cp1*cp3*m1*y2*z3+c1*cp1*cp3*m1*y2*z3+c2*cp1*cp3*m1*y2*z3+c1*c2*cp1*cp3*m1*y2*z3+c3*cp1*cp3*m1*y2*z3+c1*c3*cp1*cp3*m1*y2*z3+c2*c3*cp1*cp3*m1*y2*z3+c1*cp2*cp3*m1*y2*z3+c2*cp2*cp3*m1*y2*z3+c3*cp2*cp3*m1*y2*z3+cp1*cp2*cp3*m1*y2*z3+c1*cp1*cp2*cp3*m1*y2*z3+c1*c2*cp1*cp2*cp3*m1*y2*z3+c1*c3*cp1*cp2*cp3*m1*y2*z3+c1*c2*cp1*cp3*m2*y2*z3+c1*cp2*cp3*m2*y2*z3+cp1*cp2*cp3*m2*y2*z3+c1*cp1*cp2*cp3*m2*y2*z3+c2*cp1*cp2*cp3*m2*y2*z3+c1*c2*cp1*cp2*cp3*m2*y2*z3+m1*m2*y2*z3+c2*m1*m2*y2*z3+cp1*cp2*m1*m2*y2*z3+cp1*cp3*m1*m2*y2*z3+c1*cp1*cp3*m1*m2*y2*z3+c2*cp1*cp3*m1*m2*y2*z3+cp1*cp2*cp3*m1*m2*y2*z3+c1*cp1*cp2*cp3*m1*m2*y2*z3+c2*cp1*cp2*cp3*m1*m2*y2*z3+cp2*m1*m3*y2*z3+cp1*cp2*m1*m3*y2*z3+cp2*cp3*m1*m3*y2*z3+cp1*cp2*cp3*m1*m3*y2*z3+m1*m2*m3*y2*z3+cp2*m1*m2*m3*y2*z3+c1*cp1*cp2*m1*y3*z3+c2*cp1*cp2*m1*y3*z3+c1*c3*cp1*cp2*m1*y3*z3+c2*c3*cp1*cp2*m1*y3*z3+c1*c3*cp2*cp3*m1*y3*z3+c2*c3*cp2*cp3*m1*y3*z3+c1*cp1*cp2*cp3*m1*y3*z3+c2*cp1*cp2*cp3*m1*y3*z3+cp1*cp2*m2*y3*z3+c1*cp1*cp2*m2*y3*z3+c2*cp1*cp2*m2*y3*z3+c3*cp1*cp2*m2*y3*z3+c1*c3*cp1*cp2*m2*y3*z3+c2*c3*cp1*cp2*m2*y3*z3+c1*c3*cp2*cp3*m2*y3*z3+cp1*cp2*cp3*m2*y3*z3+c1*cp1*cp2*cp3*m2*y3*z3+c2*cp1*cp2*cp3*m2*y3*z3+cp1*cp2*m1*m2*y3*z3+c3*cp1*cp2*m1*m2*y3*z3+c3*cp2*cp3*m1*m2*y3*z3+cp1*cp2*cp3*m1*m2*y3*z3+m1*m2*m3*y3*z3+c1*c2*cp1*z1*z3+c1*c2*cp1*cp2*z1*z3+c2*c3*cp1*cp2*z1*z3+c1*c2*c3*cp1*cp2*z1*z3+c1*c2*c3*cp1*cp3*z1*z3+c1*c2*cp2*cp3*z1*z3+c2*c3*cp2*cp3*z1*z3+c2*cp1*m1*z1*z3+c2*cp1*cp2*m1*z1*z3+c2*c3*cp1*cp2*m1*z1*z3+c2*c3*cp1*cp3*m1*z1*z3+c2*cp1*cp2*cp3*m1*z1*z3+c1*c2*cp1*cp3*m2*z1*z3+c2*cp2*cp3*m2*z1*z3+c2*cp1*cp2*cp3*m2*z1*z3+c1*c2*cp1*cp2*cp3*m2*z1*z3+m1*m2*z1*z3+c1*m1*m2*z1*z3+c2*m1*m2*z1*z3+cp2*m1*m2*z1*z3+c2*cp1*cp3*m1*m2*z1*z3+c2*cp1*cp2*cp3*m1*m2*z1*z3+m2*m3*z1*z3+c1*m2*m3*z1*z3+c2*m2*m3*z1*z3+cp2*m1*m2*m3*z1*z3+c1*c2*cp1*z2*z3+c1*c2*cp1*cp2*z2*z3+c1*c2*c3*cp1*cp2*z2*z3+c1*c2*c3*cp1*cp3*z2*z3+cp1*m1*z2*z3+c1*cp1*m1*z2*z3+cp1*cp2*m1*z2*z3+c1*cp1*cp2*m1*z2*z3+c1*c3*cp1*cp2*m1*z2*z3+cp1*cp3*m1*z2*z3+c1*cp1*cp3*m1*z2*z3+c1*c2*cp1*cp3*m1*z2*z3+cp1*cp2*cp3*m1*z2*z3+c1*cp1*cp2*cp3*m1*z2*z3+c1*c2*cp1*cp2*cp3*m1*z2*z3+c1*c3*cp1*cp2*cp3*m1*z2*z3+c1*c2*cp1*cp3*m2*z2*z3+c1*c2*cp1*cp2*cp3*m2*z2*z3+m1*m2*z2*z3+c2*m1*m2*z2*z3+cp1*m1*m2*z2*z3+cp2*m1*m2*z2*z3+cp1*cp2*m1*m2*z2*z3+cp1*cp3*m1*m2*z2*z3+cp1*cp2*cp3*m1*m2*z2*z3+cp1*m1*m3*z2*z3+cp1*cp2*m1*m3*z2*z3+cp1*cp3*m1*m3*z2*z3+cp1*cp2*cp3*m1*m3*z2*z3+cp2*m1*m2*m3*z2*z3+(1/2)*c1*c2*z3*(1+z3)+(1/2)*cp1*cp2*z3*(1+z3)+(1/2)*c1*cp1*cp2*z3*(1+z3)+(1/2)*c2*cp1*cp2*z3*(1+z3)+(1/2)*c3*cp1*cp2*z3*(1+z3)+(1/2)*c1*c3*cp1*cp2*z3*(1+z3)+(1/2)*c2*c3*cp1*cp2*z3*(1+z3)+(1/2)*c1*c2*cp3*z3*(1+z3)+(1/2)*c1*cp2*cp3*z3*(1+z3)+(1/2)*c1*c3*cp2*cp3*z3*(1+z3)+(1/2)*c2*cp1*m1*z3*(1+z3)+(1/2)*cp1*cp2*m1*z3*(1+z3)+(1/2)*c3*cp1*cp2*m1*z3*(1+z3)+(1/2)*c2*cp1*cp3*m1*z3*(1+z3)+(1/2)*cp2*cp3*m1*z3*(1+z3)+(1/2)*c1*cp2*cp3*m1*z3*(1+z3)+(1/2)*c2*cp2*cp3*m1*z3*(1+z3)+(1/2)*c3*cp2*cp3*m1*z3*(1+z3)+(1/2)*c1*cp1*cp2*cp3*m1*z3*(1+z3)+(1/2)*c2*cp1*cp2*cp3*m1*z3*(1+z3)+(1/2)*cp1*m2*z3*(1+z3)+(1/2)*c1*cp1*m2*z3*(1+z3)+(1/2)*c2*cp1*m2*z3*(1+z3)+(1/2)*c1*cp2*m2*z3*(1+z3)+(1/2)*cp1*cp3*m2*z3*(1+z3)+(1/2)*c1*cp1*cp3*m2*z3*(1+z3)+(1/2)*c2*cp1*cp3*m2*z3*(1+z3)+(1/2)*cp1*cp2*cp3*m2*z3*(1+z3)+(1/2)*c1*cp1*cp2*cp3*m2*z3*(1+z3)+(1/2)*c2*cp1*cp2*cp3*m2*z3*(1+z3)+(1/2)*m1*m2*z3*(1+z3)+(1/2)*cp1*m1*m2*z3*(1+z3)+(1/2)*cp1*cp2*m1*m2*z3*(1+z3)+(1/2)*cp1*cp3*m1*m2*z3*(1+z3)+(1/2)*cp2*cp3*m1*m2*z3*(1+z3)+(1/2)*cp1*m2*m3*z3*(1+z3)+(1/2)*cp1*cp3*m2*m3*z3*(1+z3);
end;
#####################################################################
#Space Group No. 102*(Subscript[P4,2]nm)
#####################################################################
Ampin102:=function(g1)
local x1, y1, z1, c1, mp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];mp1:=g1[5];m1:=g1[6];
return mp1;
end;
#####################################################################
Amin102:=function(g1)
local x1, y1, z1, c1, mp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];mp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Axyzin102:=function(g1)
local x1, y1, z1, c1, mp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];mp1:=g1[5];m1:=g1[6];
return x1+y1+z1;
end;
#####################################################################
Bdeltain102:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
CGAPin102:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c2*c3+c1*c2*c3*cp1+c1*c2*c3*cp2+c2*c3*cp1*cp2+c1*c2*c3*cp1*cp2+c1*c2*cp1*cp3+c1*c2*c3*cp2*cp3+c1*cp1*cp2*cp3+c1*c2*c3*cp1*cp2*cp3+c2*c3*m1+c1*c2*c3*cp1*m1+c3*cp1*cp2*m1+c1*c3*cp1*cp2*m1+c2*c3*cp1*cp2*m1+c1*c2*c3*cp1*cp2*m1+c2*cp1*cp3*m1+c1*c2*cp1*cp3*m1+c1*c2*c3*cp1*cp3*m1+cp1*cp2*cp3*m1+c1*cp1*cp2*cp3*m1+c1*c2*c3*cp1*m2+c1*c3*cp2*m2+c2*c3*cp1*cp2*m2+c1*c2*c3*cp1*cp2*m2+c1*cp1*cp3*m2+c2*cp1*cp3*m2+c1*c3*cp1*cp3*m2+c1*c2*c3*cp1*cp3*m2+c1*cp2*cp3*m2+c1*c2*cp2*cp3*m2+c1*c3*cp2*cp3*m2+cp1*cp2*cp3*m2+c1*c2*cp1*cp2*cp3*m2+c3*cp1*cp2*cp3*m2+c1*c3*cp1*cp2*cp3*m2+c3*cp1*m1*m2+c1*c3*cp2*m1*m2+c2*c3*cp2*m1*m2+c1*c3*cp1*cp2*m1*m2+c2*c3*cp1*cp2*m1*m2+c1*cp3*m1*m2+c1*cp1*cp3*m1*m2+cp2*cp3*m1*m2+c1*c3*cp2*cp3*m1*m2+c2*c3*cp2*cp3*m1*m2+c1*cp1*cp2*cp3*m1*m2+c1*c2*cp1*cp2*cp3*m1*m2+c3*cp1*cp2*cp3*m1*m2+c1*c3*cp1*cp2*cp3*m1*m2+c2*c3*cp1*cp2*cp3*m1*m2+c1*c2*cp1*m3+c1*c3*cp2*m3+c1*cp1*cp2*m3+c2*cp1*cp2*m3+c1*c2*cp1*cp2*m3+c2*c3*cp1*cp2*m3+c1*cp2*cp3*m3+c1*c3*cp2*cp3*m3+cp1*cp2*cp3*m3+c2*cp1*cp2*cp3*m3+c3*cp1*cp2*cp3*m3+c2*c3*cp1*cp2*cp3*m3+c1*c2*c3*cp1*cp2*cp3*m3+c2*cp1*m1*m3+c2*c3*cp1*m1*m3+cp1*cp2*m1*m3+c1*cp1*cp2*m1*m3+c2*cp1*cp2*m1*m3+c3*cp1*cp2*m1*m3+c2*c3*cp1*cp2*m1*m3+c2*cp1*cp3*m1*m3+c2*c3*cp1*cp3*m1*m3+cp1*cp2*cp3*m1*m3+c1*c3*cp1*cp2*cp3*m1*m3+c1*cp1*m2*m3+c3*cp1*m2*m3+c2*c3*cp1*m2*m3+c1*cp2*m2*m3+c2*cp1*cp2*m2*m3+c2*c3*cp1*cp2*m2*m3+c1*cp3*m2*m3+cp1*cp3*m2*m3+c2*cp1*cp3*m2*m3+c2*c3*cp1*cp3*m2*m3+c1*cp2*cp3*m2*m3+c1*c2*cp1*cp2*cp3*m2*m3+c1*c3*cp1*cp2*cp3*m2*m3+m1*m2*m3+c3*cp2*m1*m2*m3+c3*cp1*cp2*m1*m2*m3+cp1*cp3*m1*m2*m3+c3*cp2*cp3*m1*m2*m3+c1*cp1*cp2*cp3*m1*m2*m3+c2*cp1*cp2*cp3*m1*m2*m3+c3*cp1*cp2*cp3*m1*m2*m3+c2*c3*x1+c2*c3*cp1*x1+c3*cp1*cp2*x1+c2*c3*cp1*cp2*x1+c2*cp1*cp3*x1+c1*c2*cp1*cp3*x1+c2*c3*cp1*cp3*x1+c1*cp2*cp3*x1+c2*cp2*cp3*x1+c3*cp2*cp3*x1+c2*c3*cp1*m1*x1+c1*c3*cp2*m1*x1+c2*c3*cp1*cp2*m1*x1+c1*c2*cp3*m1*x1+c2*c3*cp3*m1*x1+c1*c2*cp1*cp3*m1*x1+c2*c3*cp1*cp3*m1*x1+c1*cp2*cp3*m1*x1+c2*cp2*cp3*m1*x1+c3*cp2*cp3*m1*x1+c3*cp1*m2*x1+c1*c3*cp1*m2*x1+c2*c3*cp1*m2*x1+c3*cp2*m2*x1+c1*c3*cp2*m2*x1+c3*cp1*cp2*m2*x1+c2*c3*cp1*cp2*m2*x1+c1*c2*cp3*m2*x1+c2*c3*cp3*m2*x1+cp1*cp3*m2*x1+c1*cp1*cp3*m2*x1+c2*cp1*cp3*m2*x1+c1*c2*cp1*cp3*m2*x1+c3*cp1*cp3*m2*x1+c2*c3*cp1*cp3*m2*x1+c2*cp2*cp3*m2*x1+c1*c3*cp1*m1*m2*x1+c3*cp2*m1*m2*x1+c3*cp1*cp2*m1*m2*x1+c1*c3*cp1*cp2*m1*m2*x1+cp1*cp3*m1*m2*x1+c1*c2*cp1*cp3*m1*m2*x1+c1*c3*cp1*cp3*m1*m2*x1+c2*cp2*cp3*m1*m2*x1+c3*cp1*cp2*cp3*m1*m2*x1+c2*cp1*m3*x1+cp2*m3*x1+c1*c2*cp2*m3*x1+c2*c3*cp2*m3*x1+cp1*cp2*m3*x1+c1*cp1*cp2*m3*x1+c1*c2*cp1*cp2*m3*x1+c3*cp1*cp2*m3*x1+c2*c3*cp1*cp2*m3*x1+c1*c2*cp3*m3*x1+c2*c3*cp3*m3*x1+c1*c2*cp1*cp3*m3*x1+cp2*cp3*m3*x1+c1*cp2*cp3*m3*x1+c2*cp2*cp3*m3*x1+c3*cp2*cp3*m3*x1+c2*cp1*m1*m3*x1+cp2*m1*m3*x1+c1*cp2*m1*m3*x1+c1*c3*cp2*m1*m3*x1+c2*c3*cp2*m1*m3*x1+c2*cp1*cp2*m1*m3*x1+c1*c3*cp1*cp2*m1*m3*x1+c2*c3*cp1*cp2*m1*m3*x1+c2*cp3*m1*m3*x1+c2*cp1*cp3*m1*m3*x1+cp2*cp3*m1*m3*x1+c3*cp2*cp3*m1*m3*x1+c1*c3*cp2*cp3*m1*m3*x1+c2*c3*cp2*cp3*m1*m3*x1+cp1*m2*m3*x1+c2*cp1*m2*m3*x1+c1*c2*cp1*m2*m3*x1+c1*c3*cp1*m2*m3*x1+cp2*m2*m3*x1+c1*c3*cp2*m2*m3*x1+c2*c3*cp2*m2*m3*x1+c2*cp1*cp2*m2*m3*x1+c1*c2*cp1*cp2*m2*m3*x1+c2*c3*cp1*cp2*m2*m3*x1+c2*cp3*m2*m3*x1+cp1*cp3*m2*m3*x1+c1*cp1*cp3*m2*m3*x1+c2*cp1*cp3*m2*m3*x1+c1*c2*cp1*cp3*m2*m3*x1+c1*c3*cp1*cp3*m2*m3*x1+c1*cp2*cp3*m2*m3*x1+c1*c3*cp2*cp3*m2*m3*x1+c2*c3*cp2*cp3*m2*m3*x1+cp1*cp2*cp3*m2*m3*x1+cp2*m1*m2*m3*x1+c1*cp2*m1*m2*m3*x1+c2*cp2*m1*m2*m3*x1+cp1*cp2*m1*m2*m3*x1+c1*cp1*cp2*m1*m2*m3*x1+c2*cp1*cp2*m1*m2*m3*x1+c1*cp2*cp3*m1*m2*m3*x1+c2*cp2*cp3*m1*m2*m3*x1+cp1*cp2*cp3*m1*m2*m3*x1+c2*c3*cp1*x2+c1*c3*cp2*x2+c3*cp1*cp2*x2+c1*c3*cp1*cp2*x2+c1*cp3*x2+c1*cp1*cp3*x2+c1*c2*cp1*cp3*x2+c3*cp1*cp3*x2+c2*c3*cp1*cp3*x2+c1*cp2*cp3*x2+c1*c3*cp2*cp3*x2+c2*c3*cp1*m1*x2+c1*c3*cp2*m1*x2+c2*c3*cp2*m1*x2+c3*cp1*cp2*m1*x2+c1*c3*cp1*cp2*m1*x2+cp3*m1*x2+c1*cp3*m1*x2+c2*cp3*m1*x2+c3*cp3*m1*x2+c1*cp1*cp3*m1*x2+c1*c2*cp1*cp3*m1*x2+c3*cp1*cp3*m1*x2+c2*c3*cp1*cp3*m1*x2+c1*cp2*cp3*m1*x2+c2*cp2*cp3*m1*x2+c1*c3*cp2*cp3*m1*x2+c2*c3*cp2*cp3*m1*x2+c3*cp1*m2*x2+c1*c3*cp1*m2*x2+c2*c3*cp1*m2*x2+c3*cp1*cp2*m2*x2+c1*cp3*m2*x2+c1*c2*cp3*m2*x2+cp1*cp3*m2*x2+c1*c3*cp1*cp3*m2*x2+c2*c3*cp1*cp3*m2*x2+c1*c3*cp2*cp3*m2*x2+c1*cp1*cp2*cp3*m2*x2+c3*cp1*m1*m2*x2+c2*c3*cp1*m1*m2*x2+c2*c3*cp1*cp2*m1*m2*x2+cp3*m1*m2*x2+c1*cp3*m1*m2*x2+c2*cp3*m1*m2*x2+c3*cp3*m1*m2*x2+cp1*cp3*m1*m2*x2+c1*cp1*cp3*m1*m2*x2+c1*c2*cp1*cp3*m1*m2*x2+c2*c3*cp1*cp3*m1*m2*x2+c3*cp2*cp3*m1*m2*x2+cp1*cp2*cp3*m1*m2*x2+c1*cp1*cp2*cp3*m1*m2*x2+c2*cp1*cp2*cp3*m1*m2*x2+c3*cp1*cp2*cp3*m1*m2*x2+c2*cp1*m3*x2+c1*cp2*m3*x2+c1*c2*cp2*m3*x2+c1*c3*cp2*m3*x2+cp1*cp2*m3*x2+c1*cp1*cp2*m3*x2+c2*cp1*cp2*m3*x2+c3*cp1*cp2*m3*x2+c1*cp3*m3*x2+c1*c2*cp3*m3*x2+c2*cp1*cp3*m3*x2+c3*cp1*cp3*m3*x2+c1*c3*cp1*cp3*m3*x2+c1*cp2*cp3*m3*x2+c1*c3*cp2*cp3*m3*x2+c2*cp1*m1*m3*x2+c3*cp2*m1*m3*x2+cp3*m1*m3*x2+cp1*cp3*m1*m3*x2+cp2*cp3*m1*m3*x2+c3*cp2*cp3*m1*m3*x2+cp1*cp2*cp3*m1*m3*x2+c3*cp1*cp2*cp3*m1*m3*x2+cp1*m2*m3*x2+c2*cp1*m2*m3*x2+c1*c2*cp1*m2*m3*x2+c1*c3*cp1*m2*m3*x2+c1*c3*cp2*m2*m3*x2+c2*cp1*cp2*m2*m3*x2+c1*c2*cp1*cp2*m2*m3*x2+c2*c3*cp1*cp2*m2*m3*x2+c1*cp3*m2*m3*x2+cp1*cp3*m2*m3*x2+c1*cp1*cp3*m2*m3*x2+c1*c2*cp1*cp3*m2*m3*x2+c3*cp1*cp3*m2*m3*x2+c1*c3*cp1*cp3*m2*m3*x2+c1*c3*cp2*cp3*m2*m3*x2+cp1*cp2*cp3*m2*m3*x2+c2*cp1*cp2*cp3*m2*m3*x2+cp1*m1*m2*m3*x2+c1*cp1*m1*m2*m3*x2+c2*cp1*m1*m2*m3*x2+cp2*m1*m2*m3*x2+c1*cp1*cp2*m1*m2*m3*x2+c2*cp1*cp2*m1*m2*m3*x2+cp3*m1*m2*m3*x2+c1*cp1*cp3*m1*m2*m3*x2+c2*cp1*cp3*m1*m2*m3*x2+c3*cp1*cp2*cp3*m1*m2*m3*x2+c3*cp1*m1*m2*x1*x2+c3*cp2*m1*m2*x1*x2+c1*cp3*m1*m2*x1*x2+c2*cp3*m1*m2*x1*x2+c3*cp3*m1*m2*x1*x2+cp2*cp3*m1*m2*x1*x2+cp3*m1*m3*x1*x2+c3*cp3*m1*m3*x1*x2+c1*cp1*m1*m2*m3*x1*x2+c2*cp1*m1*m2*m3*x1*x2+c3*cp1*m1*m2*m3*x1*x2+cp2*m1*m2*m3*x1*x2+c1*cp2*m1*m2*m3*x1*x2+c2*cp2*m1*m2*m3*x1*x2+c3*cp2*m1*m2*m3*x1*x2+cp1*cp2*m1*m2*m3*x1*x2+c1*cp3*m1*m2*m3*x1*x2+c2*cp3*m1*m2*m3*x1*x2+c3*cp3*m1*m2*m3*x1*x2+cp2*cp3*m1*m2*m3*x1*x2+c1*c2*cp1*x3+c2*c3*cp1*x3+c1*c3*cp2*x3+c2*cp1*cp2*x3+c1*c2*cp1*cp2*x3+c3*cp1*cp2*x3+c1*c3*cp1*cp2*x3+c2*cp1*cp3*x3+c1*c2*cp1*cp3*x3+c2*c3*cp1*cp3*x3+c1*c3*cp2*cp3*x3+c1*c2*cp1*m1*x3+c2*c3*cp1*m1*x3+c1*c3*cp2*m1*x3+c2*c3*cp2*m1*x3+c2*cp1*cp2*m1*x3+c1*c2*cp1*cp2*m1*x3+c3*cp1*cp2*m1*x3+c1*c3*cp1*cp2*m1*x3+c2*cp1*cp3*m1*x3+c1*c2*cp1*cp3*m1*x3+c2*c3*cp1*cp3*m1*x3+c3*cp2*cp3*m1*x3+c1*c3*cp2*cp3*m1*x3+c2*c3*cp2*cp3*m1*x3+c1*c2*cp1*m2*x3+c2*c3*cp1*m2*x3+c1*c3*cp2*m2*x3+c2*cp1*cp2*m2*x3+c1*c2*cp1*cp2*m2*x3+c3*cp1*cp2*m2*x3+c1*c3*cp1*cp2*m2*x3+c2*cp1*cp3*m2*x3+c1*c2*cp1*cp3*m2*x3+c2*c3*cp1*cp3*m2*x3+c1*c3*cp2*cp3*m2*x3+c1*c3*cp2*m1*m2*x3+c2*c3*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+c3*cp1*cp2*m1*m2*x3+c1*c3*cp1*cp2*m1*m2*x3+c2*c3*cp1*cp2*m1*m2*x3+cp3*m1*m2*x3+c1*cp3*m1*m2*x3+c2*cp3*m1*m2*x3+c3*cp3*m1*m2*x3+c1*cp1*cp3*m1*m2*x3+c2*cp1*cp3*m1*m2*x3+c3*cp1*cp3*m1*m2*x3+c1*cp2*cp3*m1*m2*x3+c2*cp2*cp3*m1*m2*x3+c1*c3*cp2*cp3*m1*m2*x3+c2*c3*cp2*cp3*m1*m2*x3+c1*cp1*cp2*cp3*m1*m2*x3+c3*cp1*cp2*cp3*m1*m2*x3+c2*cp1*m3*x3+c1*cp2*m3*x3+c1*c2*cp2*m3*x3+c1*c3*cp2*m3*x3+cp1*cp2*m3*x3+c1*cp1*cp2*m3*x3+c2*cp1*cp2*m3*x3+c3*cp1*cp2*m3*x3+c1*c2*cp3*m3*x3+c1*cp2*cp3*m3*x3+c2*cp1*m1*m3*x3+c3*cp2*m1*m3*x3+c3*cp2*cp3*m1*m3*x3+cp1*cp2*cp3*m1*m3*x3+c2*cp1*m2*m3*x3+c1*cp2*m2*m3*x3+c1*c3*cp2*m2*m3*x3+cp1*cp2*m2*m3*x3+c3*cp1*cp2*m2*m3*x3+c1*c3*cp1*cp2*m2*m3*x3+c2*c3*cp1*cp2*m2*m3*x3+c1*cp3*m2*m3*x3+cp1*cp3*m2*m3*x3+c1*cp1*cp3*m2*m3*x3+c2*cp1*cp3*m2*m3*x3+c3*cp1*cp3*m2*m3*x3+c1*c3*cp2*cp3*m2*m3*x3+cp1*cp2*cp3*m2*m3*x3+c3*cp1*cp2*cp3*m2*m3*x3+c3*cp2*m1*m2*m3*x3+cp1*cp2*m1*m2*m3*x3+c3*cp1*cp2*m1*m2*m3*x3+cp3*m1*m2*m3*x3+cp1*cp3*m1*m2*m3*x3+cp2*cp3*m1*m2*m3*x3+c3*cp2*cp3*m1*m2*m3*x3+cp1*cp2*cp3*m1*m2*m3*x3+c3*cp1*cp2*cp3*m1*m2*m3*x3+m1*m2*x2*x3+c1*cp1*m1*m2*x2*x3+c2*cp1*m1*m2*x2*x3+c3*cp1*m1*m2*x2*x3+cp2*m1*m2*x2*x3+c1*cp2*m1*m2*x2*x3+c2*cp2*m1*m2*x2*x3+c3*cp2*m1*m2*x2*x3+cp1*cp2*m1*m2*x2*x3+c1*cp3*m1*m2*x2*x3+c2*cp3*m1*m2*x2*x3+c3*cp3*m1*m2*x2*x3+cp2*cp3*m1*m2*x2*x3+c1*cp1*m2*m3*x2*x3+c2*cp1*m2*m3*x2*x3+c3*cp1*m2*m3*x2*x3+c1*cp2*m2*m3*x2*x3+c1*cp3*m2*m3*x2*x3+cp1*cp3*m2*m3*x2*x3+cp2*m1*m2*m3*x2*x3+cp1*cp2*m1*m2*m3*x2*x3+cp3*m1*m2*m3*x2*x3+cp1*cp3*m1*m2*m3*x2*x3+c2*c3*y1+c1*c3*cp2*y1+c1*c2*cp3*y1+c2*c3*cp3*y1+c3*cp2*m1*y1+c1*c3*cp2*m1*y1+c1*c2*cp3*m1*y1+c2*c3*cp3*m1*y1+c1*c3*cp2*m2*y1+c1*c3*cp1*cp2*m2*y1+c1*c2*cp3*m2*y1+c2*c3*cp3*m2*y1+c1*c2*cp1*cp3*m2*y1+c1*c3*cp1*cp3*m2*y1+c1*cp1*cp2*cp3*m2*y1+c1*c3*cp1*m1*m2*y1+c1*c3*cp1*cp2*m1*m2*y1+c1*cp1*cp3*m1*m2*y1+c1*c2*cp1*cp3*m1*m2*y1+c1*c3*cp1*cp3*m1*m2*y1+c1*cp2*cp3*m1*m2*y1+c3*cp2*cp3*m1*m2*y1+c1*cp1*cp2*cp3*m1*m2*y1+c1*cp2*m3*y1+c1*c2*cp2*m3*y1+c1*c3*cp2*m3*y1+c1*cp1*cp2*m3*y1+c1*c2*cp1*cp2*m3*y1+c1*c3*cp1*cp2*m3*y1+c2*cp3*m3*y1+c1*c2*cp3*m3*y1+c2*c3*cp3*m3*y1+c1*c2*cp1*cp3*m3*y1+c1*cp2*cp3*m3*y1+c2*cp2*cp3*m3*y1+c1*c3*cp2*cp3*m3*y1+c2*c3*cp2*cp3*m3*y1+cp1*cp2*cp3*m3*y1+c3*cp1*cp2*cp3*m3*y1+c1*cp2*m1*m3*y1+c1*c3*cp2*m1*m3*y1+c2*c3*cp2*m1*m3*y1+c1*c3*cp1*cp2*m1*m3*y1+c2*c3*cp1*cp2*m1*m3*y1+c2*cp3*m1*m3*y1+c3*cp2*cp3*m1*m3*y1+c1*c3*cp2*cp3*m1*m3*y1+c2*c3*cp2*cp3*m1*m3*y1+c3*cp1*cp2*cp3*m1*m3*y1+c1*cp1*m2*m3*y1+c1*c2*cp1*m2*m3*y1+c1*c3*cp1*m2*m3*y1+c1*cp2*m2*m3*y1+c2*cp2*m2*m3*y1+c1*c3*cp2*m2*m3*y1+c2*c3*cp2*m2*m3*y1+c2*cp1*cp2*m2*m3*y1+c1*c2*cp1*cp2*m2*m3*y1+c2*c3*cp1*cp2*m2*m3*y1+c2*cp3*m2*m3*y1+c1*c2*cp1*cp3*m2*m3*y1+c1*c3*cp1*cp3*m2*m3*y1+c2*cp2*cp3*m2*m3*y1+c1*c3*cp2*cp3*m2*m3*y1+c2*c3*cp2*cp3*m2*m3*y1+cp1*cp2*cp3*m2*m3*y1+c3*cp1*cp2*cp3*m2*m3*y1+c1*cp2*m1*m2*m3*y1+c2*cp2*m1*m2*m3*y1+c1*cp1*cp2*m1*m2*m3*y1+c2*cp1*cp2*m1*m2*m3*y1+cp2*cp3*m1*m2*m3*y1+c1*cp2*cp3*m1*m2*m3*y1+c2*cp2*cp3*m1*m2*m3*y1+cp1*cp2*cp3*m1*m2*m3*y1+c3*cp2*m2*x1*y1+c2*cp3*m2*x1*y1+c3*cp3*m2*x1*y1+cp2*cp3*m2*x1*y1+c3*cp1*m1*m2*x1*y1+c3*cp2*m1*m2*x1*y1+c1*cp3*m1*m2*x1*y1+c2*cp3*m1*m2*x1*y1+c3*cp3*m1*m2*x1*y1+cp2*cp3*m1*m2*x1*y1+cp2*m3*x1*y1+c2*cp2*m3*x1*y1+c3*cp2*m3*x1*y1+c2*cp3*m3*x1*y1+c1*cp1*m2*m3*x1*y1+c2*cp1*m2*m3*x1*y1+c3*cp1*m2*m3*x1*y1+c1*cp2*m2*m3*x1*y1+c2*cp2*m2*m3*x1*y1+c3*cp2*m2*m3*x1*y1+c1*cp3*m2*m3*x1*y1+c2*cp3*m2*m3*x1*y1+c3*cp3*m2*m3*x1*y1+cp1*cp3*m2*m3*x1*y1+cp2*m1*m2*m3*x1*y1+cp1*cp2*m1*m2*m3*x1*y1+cp3*m1*m2*m3*x1*y1+cp1*cp3*m1*m2*m3*x1*y1+cp3*m3*x2*y1+c3*cp3*m3*x2*y1+cp3*m1*m3*x2*y1+c3*cp3*m1*m3*x2*y1+c1*cp1*m2*m3*x2*y1+c2*cp1*m2*m3*x2*y1+c3*cp1*m2*m3*x2*y1+c1*cp2*m2*m3*x2*y1+c2*cp2*m2*m3*x2*y1+c3*cp2*m2*m3*x2*y1+cp3*m2*m3*x2*y1+c1*cp3*m2*m3*x2*y1+c2*cp3*m2*m3*x2*y1+c3*cp3*m2*m3*x2*y1+cp1*cp3*m2*m3*x2*y1+cp2*cp3*m2*m3*x2*y1+c1*cp1*m1*m2*m3*x2*y1+c2*cp1*m1*m2*m3*x2*y1+c3*cp1*m1*m2*m3*x2*y1+c1*cp2*m1*m2*m3*x2*y1+c2*cp2*m1*m2*m3*x2*y1+c3*cp2*m1*m2*m3*x2*y1+cp3*m1*m2*m3*x2*y1+c1*cp3*m1*m2*m3*x2*y1+c2*cp3*m1*m2*m3*x2*y1+c3*cp3*m1*m2*m3*x2*y1+cp1*cp3*m1*m2*m3*x2*y1+cp2*cp3*m1*m2*m3*x2*y1+c1*c3*cp1*y2+c1*c3*cp2*y2+c1*c3*cp1*cp2*y2+c1*c2*cp3*y2+c1*cp1*cp3*y2+c1*c2*cp1*cp3*y2+c1*c3*cp1*cp3*y2+c3*cp1*m1*y2+cp1*cp3*m1*y2+c3*cp1*cp3*m1*y2+c1*c3*cp1*m2*y2+c1*c3*cp2*m2*y2+c1*c3*cp1*cp2*m2*y2+c1*c2*cp3*m2*y2+c1*cp1*cp3*m2*y2+c1*c2*cp1*cp3*m2*y2+c1*c3*cp1*cp3*m2*y2+c3*cp1*m1*m2*y2+c2*c3*cp1*m1*m2*y2+c2*c3*cp1*cp2*m1*m2*y2+cp1*cp3*m1*m2*y2+c2*cp1*cp3*m1*m2*y2+c1*c2*cp1*cp3*m1*m2*y2+c3*cp1*cp3*m1*m2*y2+c2*c3*cp1*cp3*m1*m2*y2+cp1*cp2*cp3*m1*m2*y2+c1*cp1*cp2*cp3*m1*m2*y2+c3*cp1*cp2*cp3*m1*m2*y2+c1*cp1*m3*y2+c1*c2*cp1*m3*y2+c1*c3*cp1*m3*y2+c1*cp2*m3*y2+c1*c2*cp2*m3*y2+c1*c3*cp2*m3*y2+c1*cp1*cp2*m3*y2+c1*c2*cp1*cp2*m3*y2+c1*c3*cp1*cp2*m3*y2+c1*c2*cp3*m3*y2+c1*c2*cp1*cp3*m3*y2+c1*cp2*cp3*m3*y2+c1*c3*cp2*cp3*m3*y2+cp1*cp2*cp3*m3*y2+c3*cp1*cp2*cp3*m3*y2+cp1*m1*m3*y2+c1*cp1*m1*m3*y2+c1*cp1*cp2*m1*m3*y2+c2*cp1*cp2*m1*m3*y2+c3*cp1*cp2*m1*m3*y2+cp1*cp3*m1*m3*y2+c1*cp1*cp3*m1*m3*y2+c2*cp1*cp3*m1*m3*y2+cp1*cp2*cp3*m1*m3*y2+c3*cp1*cp2*cp3*m1*m3*y2+c1*cp1*m2*m3*y2+c1*c2*cp1*m2*m3*y2+c1*c3*cp1*m2*m3*y2+c1*cp2*m2*m3*y2+c1*c3*cp2*m2*m3*y2+c2*cp1*cp2*m2*m3*y2+c1*c2*cp1*cp2*m2*m3*y2+c2*c3*cp1*cp2*m2*m3*y2+c1*cp1*cp3*m2*m3*y2+c1*c2*cp1*cp3*m2*m3*y2+c1*c3*cp1*cp3*m2*m3*y2+c1*c3*cp2*cp3*m2*m3*y2+cp1*cp2*cp3*m2*m3*y2+c3*cp1*cp2*cp3*m2*m3*y2+cp1*m1*m2*m3*y2+c1*cp1*m1*m2*m3*y2+c2*cp1*m1*m2*m3*y2+cp1*cp2*m1*m2*m3*y2+c1*cp1*cp2*m1*m2*m3*y2+c2*cp1*cp2*m1*m2*m3*y2+cp1*cp3*m1*m2*m3*y2+c1*cp1*cp3*m1*m2*m3*y2+c2*cp1*cp3*m1*m2*m3*y2+cp1*cp2*cp3*m1*m2*m3*y2+c3*cp1*cp2*cp3*m1*m2*m3*y2+c3*cp1*x1*y2+c3*cp2*x1*y2+c1*cp3*x1*y2+c2*cp3*x1*y2+c3*cp3*x1*y2+c3*cp1*m1*x1*y2+c3*cp2*m1*x1*y2+c1*cp3*m1*x1*y2+c2*cp3*m1*x1*y2+c3*cp3*m1*x1*y2+c3*cp1*m2*x1*y2+c3*cp2*m2*x1*y2+c1*cp3*m2*x1*y2+c2*cp3*m2*x1*y2+c3*cp3*m2*x1*y2+c3*cp1*m1*m2*x1*y2+c3*cp2*m1*m2*x1*y2+c1*cp3*m1*m2*x1*y2+c2*cp3*m1*m2*x1*y2+c3*cp3*m1*m2*x1*y2+c1*cp1*m3*x1*y2+c2*cp1*m3*x1*y2+c3*cp1*m3*x1*y2+c1*cp2*m3*x1*y2+c2*cp2*m3*x1*y2+c3*cp2*m3*x1*y2+cp3*m3*x1*y2+c1*cp3*m3*x1*y2+c2*cp3*m3*x1*y2+c1*cp1*m1*m3*x1*y2+c2*cp1*m1*m3*x1*y2+c3*cp1*m1*m3*x1*y2+c1*cp2*m1*m3*x1*y2+c2*cp2*m1*m3*x1*y2+c3*cp2*m1*m3*x1*y2+cp3*m1*m3*x1*y2+c1*cp3*m1*m3*x1*y2+c2*cp3*m1*m3*x1*y2+c1*cp1*m2*m3*x1*y2+c2*cp1*m2*m3*x1*y2+c3*cp1*m2*m3*x1*y2+c1*cp2*m2*m3*x1*y2+c2*cp2*m2*m3*x1*y2+c3*cp2*m2*m3*x1*y2+c1*cp3*m2*m3*x1*y2+c2*cp3*m2*m3*x1*y2+c3*cp3*m2*m3*x1*y2+c1*cp1*m1*m2*m3*x1*y2+c2*cp1*m1*m2*m3*x1*y2+c3*cp1*m1*m2*m3*x1*y2+c1*cp2*m1*m2*m3*x1*y2+c2*cp2*m1*m2*m3*x1*y2+c3*cp2*m1*m2*m3*x1*y2+c1*cp3*m1*m2*m3*x1*y2+c2*cp3*m1*m2*m3*x1*y2+c3*cp3*m1*m2*m3*x1*y2+c3*cp1*m1*m2*x2*y2+c3*cp2*m1*m2*x2*y2+c1*cp3*m1*m2*x2*y2+c2*cp3*m1*m2*x2*y2+c3*cp3*m1*m2*x2*y2+cp2*cp3*m1*m2*x2*y2+c1*cp1*m2*m3*x2*y2+c2*cp1*m2*m3*x2*y2+c3*cp1*m2*m3*x2*y2+c1*cp2*m2*m3*x2*y2+c1*cp3*m2*m3*x2*y2+cp1*cp3*m2*m3*x2*y2+cp2*m1*m2*m3*x2*y2+cp1*cp2*m1*m2*m3*x2*y2+cp3*m1*m2*m3*x2*y2+cp1*cp3*m1*m2*m3*x2*y2+c1*cp1*m1*m3*y1*y2+c2*cp1*m1*m3*y1*y2+c3*cp1*m1*m3*y1*y2+cp2*m1*m3*y1*y2+c1*cp2*m1*m3*y1*y2+c2*cp2*m1*m3*y1*y2+c3*cp2*m1*m3*y1*y2+cp1*cp2*m1*m3*y1*y2+c1*cp3*m1*m3*y1*y2+c2*cp3*m1*m3*y1*y2+cp1*cp3*m1*m3*y1*y2+c1*cp1*m1*m2*m3*y1*y2+c2*cp1*m1*m2*m3*y1*y2+c3*cp1*m1*m2*m3*y1*y2+cp2*m1*m2*m3*y1*y2+c1*cp2*m1*m2*m3*y1*y2+c2*cp2*m1*m2*m3*y1*y2+c3*cp2*m1*m2*m3*y1*y2+cp1*cp2*m1*m2*m3*y1*y2+cp3*m1*m2*m3*y1*y2+c1*cp3*m1*m2*m3*y1*y2+c2*cp3*m1*m2*m3*y1*y2+c3*cp3*m1*m2*m3*y1*y2+cp1*cp3*m1*m2*m3*y1*y2+c1*c2*cp2*y3+c1*cp1*cp2*y3+c2*cp1*cp2*y3+c1*c3*cp1*cp2*y3+c2*c3*cp1*cp2*y3+c1*c2*cp3*y3+c1*cp2*cp3*y3+c1*c3*cp2*cp3*y3+c1*cp1*cp2*cp3*y3+c2*cp1*cp2*cp3*y3+c3*cp1*cp2*cp3*y3+c2*cp1*m1*y3+c1*c2*cp1*m1*y3+c2*c3*cp1*m1*y3+c2*cp1*cp2*m1*y3+c1*c2*cp1*cp2*m1*y3+c3*cp1*cp2*m1*y3+c2*c3*cp1*cp2*m1*y3+c2*cp1*cp3*m1*y3+c1*c2*cp1*cp3*m1*y3+c2*c3*cp1*cp3*m1*y3+cp1*cp2*cp3*m1*y3+c1*cp1*cp2*cp3*m1*y3+c2*cp1*cp2*cp3*m1*y3+c2*cp1*m2*y3+c1*c2*cp1*m2*y3+c2*c3*cp1*m2*y3+c1*cp2*m2*y3+cp1*cp2*m2*y3+c2*cp1*cp2*m2*y3+c1*c2*cp1*cp2*m2*y3+c2*c3*cp1*cp2*m2*y3+c2*cp1*cp3*m2*y3+c1*c2*cp1*cp3*m2*y3+c2*c3*cp1*cp3*m2*y3+c1*cp2*cp3*m2*y3+c2*cp1*cp2*cp3*m2*y3+c3*cp1*cp2*cp3*m2*y3+c3*cp2*m1*m2*y3+c1*c3*cp2*m1*m2*y3+c2*c3*cp2*m1*m2*y3+c1*c3*cp1*cp2*m1*m2*y3+c2*c3*cp1*cp2*m1*m2*y3+cp2*cp3*m1*m2*y3+c1*c3*cp2*cp3*m1*m2*y3+c2*c3*cp2*cp3*m1*m2*y3+cp1*cp2*cp3*m1*m2*y3+c2*cp1*cp2*cp3*m1*m2*y3+c1*c2*cp2*m3*y3+c1*cp1*cp2*m3*y3+c2*cp1*cp2*m3*y3+c1*c3*cp1*cp2*m3*y3+c2*c3*cp1*cp2*m3*y3+c1*c2*cp3*m3*y3+c1*cp2*cp3*m3*y3+c1*c3*cp2*cp3*m3*y3+c1*cp1*cp2*cp3*m3*y3+c2*cp1*cp2*cp3*m3*y3+c3*cp1*cp2*cp3*m3*y3+c2*cp1*m1*m3*y3+cp1*cp2*m1*m3*y3+c3*cp1*cp2*m1*m3*y3+cp1*cp2*cp3*m1*m3*y3+c3*cp1*cp2*cp3*m1*m3*y3+c2*cp1*m2*m3*y3+c1*cp2*m2*m3*y3+c1*c3*cp2*m2*m3*y3+cp1*cp2*m2*m3*y3+c3*cp1*cp2*m2*m3*y3+c1*c3*cp1*cp2*m2*m3*y3+c2*c3*cp1*cp2*m2*m3*y3+c1*cp2*cp3*m2*m3*y3+c1*c3*cp2*cp3*m2*m3*y3+cp1*cp2*cp3*m2*m3*y3+c1*cp1*cp2*cp3*m2*m3*y3+c2*cp1*cp2*cp3*m2*m3*y3+c3*cp1*cp2*cp3*m2*m3*y3+c3*cp2*m1*m2*m3*y3+cp1*cp2*m1*m2*m3*y3+c3*cp1*cp2*m1*m2*m3*y3+c3*cp2*cp3*m1*m2*m3*y3+c3*cp1*cp2*cp3*m1*m2*m3*y3+c1*cp1*x2*y3+c2*cp1*x2*y3+c3*cp1*x2*y3+c1*cp2*x2*y3+c1*cp3*x2*y3+m1*x2*y3+c1*cp1*m1*x2*y3+c2*cp1*m1*x2*y3+c3*cp1*m1*x2*y3+c1*cp2*m1*x2*y3+c2*cp2*m1*x2*y3+c3*cp2*m1*x2*y3+c1*cp3*m1*x2*y3+c2*cp3*m1*x2*y3+c3*cp3*m1*x2*y3+c1*cp1*m2*x2*y3+c2*cp1*m2*x2*y3+c3*cp1*m2*x2*y3+c1*cp2*m2*x2*y3+c1*cp3*m2*x2*y3+m1*m2*x2*y3+c1*cp1*m1*m2*x2*y3+c2*cp1*m1*m2*x2*y3+c3*cp1*m1*m2*x2*y3+c1*cp2*m1*m2*x2*y3+c2*cp2*m1*m2*x2*y3+c3*cp2*m1*m2*x2*y3+c1*cp3*m1*m2*x2*y3+c2*cp3*m1*m2*x2*y3+c3*cp3*m1*m2*x2*y3+c1*cp1*m3*x2*y3+c2*cp1*m3*x2*y3+c3*cp1*m3*x2*y3+c1*cp2*m3*x2*y3+c1*cp3*m3*x2*y3+cp2*m1*m3*x2*y3+cp1*cp2*m1*m3*x2*y3+cp3*m1*m3*x2*y3+cp1*cp3*m1*m3*x2*y3+c1*cp1*m2*m3*x2*y3+c2*cp1*m2*m3*x2*y3+c3*cp1*m2*m3*x2*y3+c1*cp2*m2*m3*x2*y3+c1*cp3*m2*m3*x2*y3+cp2*m1*m2*m3*x2*y3+cp1*cp2*m1*m2*m3*x2*y3+cp3*m1*m2*m3*x2*y3+cp1*cp3*m1*m2*m3*x2*y3+m1*m2*x3*y3+c1*cp1*m1*m2*x3*y3+c2*cp1*m1*m2*x3*y3+c3*cp1*m1*m2*x3*y3+cp2*m1*m2*x3*y3+c1*cp2*m1*m2*x3*y3+c2*cp2*m1*m2*x3*y3+c3*cp2*m1*m2*x3*y3+cp1*cp2*m1*m2*x3*y3+c1*cp3*m1*m2*x3*y3+c2*cp3*m1*m2*x3*y3+c3*cp3*m1*m2*x3*y3+cp2*cp3*m1*m2*x3*y3+c1*cp1*m2*m3*x3*y3+c2*cp1*m2*m3*x3*y3+c3*cp1*m2*m3*x3*y3+c1*cp2*m2*m3*x3*y3+c1*cp3*m2*m3*x3*y3+cp1*cp3*m2*m3*x3*y3+cp2*m1*m2*m3*x3*y3+cp1*cp2*m1*m2*m3*x3*y3+cp3*m1*m2*m3*x3*y3+cp1*cp3*m1*m2*m3*x3*y3;
end;
#####################################################################
#Space Group No. 106 (Subscript[P4,2]bc)
#####################################################################
Ampin106:=function(g1)
local x1, y1, z1, c1, mp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];mp1:=g1[5];m1:=g1[6];
return mp1;
end;
#####################################################################
Amin106:=function(g1)
local x1, y1, z1, c1, mp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];mp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Bdeltain106:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
B2in106:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c2*cp1*cp2+c2*m1+c1*cp2*m1+cp1*cp2*m1+c2*x1+cp2*m1*x1+c2*y1+cp2*y1+cp2*m1*y1;
end;
#####################################################################
B3in106:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c2*m1+cp2*z1;
end;
#####################################################################
C1in106:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c2*c3*cp1+c1*c2*c3*cp2+c1*c2*c3*cp1*cp2+c1*c2*cp1*cp3+c1*cp2*cp3+c1*c2*c3*cp2*cp3+c2*cp1*cp2*cp3+c1*c2*cp1*cp2*cp3+c1*c3*cp1*cp2*cp3+c2*c3*cp1*m1+c1*c2*c3*cp1*m1+c1*c2*c3*cp2*m1+c3*cp1*cp2*m1+c1*c3*cp1*cp2*m1+c2*c3*cp1*cp2*m1+c1*c2*cp3*m1+c1*c2*c3*cp3*m1+c2*c3*cp1*cp3*m1+c1*c2*c3*cp1*cp3*m1+c1*c2*cp2*cp3*m1+c1*c3*cp2*cp3*m1+cp1*cp2*cp3*m1+c2*cp1*cp2*cp3*m1+c3*cp1*cp2*cp3*m1+c1*c3*cp1*cp2*cp3*m1+c2*c3*cp1*cp2*cp3*m1+c1*c2*c3*m2+c1*c3*cp1*m2+c2*c3*cp1*m2+c1*c2*c3*cp1*m2+c1*c2*c3*cp1*cp2*m2+c1*c2*cp3*m2+c2*c3*cp1*cp3*m2+c1*c2*c3*cp1*cp3*m2+c1*cp2*cp3*m2+c1*c3*cp2*cp3*m2+c1*c2*c3*cp2*cp3*m2+cp1*cp2*cp3*m2+c2*c3*cp1*cp2*cp3*m2+c1*c3*m1*m2+c1*c2*c3*m1*m2+c3*cp1*m1*m2+c3*cp2*m1*m2+c2*c3*cp2*m1*m2+c1*c2*c3*cp2*m1*m2+c3*cp1*cp2*m1*m2+c2*c3*cp1*cp2*m1*m2+c1*c3*cp3*m1*m2+c1*c2*c3*cp3*m1*m2+c1*cp1*cp3*m1*m2+c2*cp1*cp3*m1*m2+c1*c2*cp1*cp3*m1*m2+c3*cp1*cp3*m1*m2+c2*c3*cp1*cp3*m1*m2+cp2*cp3*m1*m2+c1*cp2*cp3*m1*m2+c1*c2*cp2*cp3*m1*m2+c1*c3*cp2*cp3*m1*m2+c2*c3*cp2*cp3*m1*m2+c1*c2*c3*cp2*cp3*m1*m2+cp1*cp2*cp3*m1*m2+c1*cp1*cp2*cp3*m1*m2+c1*c3*cp1*cp2*cp3*m1*m2+c1*c2*cp1*m3+c1*c2*c3*cp1*m3+c1*cp2*m3+c1*c2*cp2*m3+c1*c3*cp2*m3+c2*cp1*cp2*m3+c1*c2*cp1*cp2*m3+c3*cp1*cp2*m3+c1*c2*c3*cp1*cp2*m3+c1*c2*cp3*m3+c1*c2*c3*cp1*cp3*m3+c2*cp1*cp2*cp3*m3+c1*c3*cp1*cp2*cp3*m3+c2*c3*cp1*cp2*cp3*m3+c1*c2*c3*cp1*cp2*cp3*m3+c2*cp1*m1*m3+c2*c3*cp1*m1*m3+c1*cp2*m1*m3+c1*c2*cp2*m1*m3+c1*c3*cp2*m1*m3+c1*c2*c3*cp2*m1*m3+c2*cp1*cp2*m1*m3+c3*cp1*cp2*m1*m3+c1*c3*cp1*cp2*m1*m3+c2*c3*cp1*cp2*m1*m3+c1*c2*cp3*m1*m3+c1*c2*cp1*cp3*m1*m3+c2*c3*cp1*cp3*m1*m3+c1*c2*cp2*cp3*m1*m3+c1*c3*cp2*cp3*m1*m3+c1*c2*c3*cp2*cp3*m1*m3+cp1*cp2*cp3*m1*m3+c1*cp1*cp2*cp3*m1*m3+c1*c2*cp1*cp2*cp3*m1*m3+c1*c2*m2*m3+c1*c3*m2*m3+c1*cp1*m2*m3+c2*cp1*m2*m3+c1*c2*cp1*m2*m3+c3*cp1*m2*m3+c2*c3*cp1*m2*m3+c1*c2*cp2*m2*m3+c1*c3*cp2*m2*m3+c1*cp1*cp2*m2*m3+c2*cp1*cp2*m2*m3+c1*c2*cp1*cp2*m2*m3+c3*cp1*cp2*m2*m3+c2*c3*cp1*cp2*m2*m3+c1*c3*cp3*m2*m3+c1*cp1*cp3*m2*m3+c2*cp1*cp3*m2*m3+c1*c2*cp1*cp3*m2*m3+c2*c3*cp1*cp3*m2*m3+c1*cp2*cp3*m2*m3+c1*c2*c3*cp2*cp3*m2*m3+c1*cp1*cp2*cp3*m2*m3+c1*c2*cp1*cp2*cp3*m2*m3+c1*c3*cp1*cp2*cp3*m2*m3+c2*c3*cp1*cp2*cp3*m2*m3+c1*c2*m1*m2*m3+c3*m1*m2*m3+c1*c3*m1*m2*m3+cp1*m1*m2*m3+c1*cp1*m1*m2*m3+c2*cp1*m1*m2*m3+c2*c3*cp1*m1*m2*m3+c2*cp2*m1*m2*m3+c1*c2*cp2*m1*m2*m3+c2*c3*cp2*m1*m2*m3+cp1*cp2*m1*m2*m3+c2*cp1*cp2*m1*m2*m3+c3*cp1*cp2*m1*m2*m3+c1*c3*cp1*cp2*m1*m2*m3+c2*c3*cp1*cp2*m1*m2*m3+c1*c2*cp3*m1*m2*m3+c1*c3*cp3*m1*m2*m3+cp1*cp3*m1*m2*m3+c1*cp1*cp3*m1*m2*m3+c2*c3*cp1*cp3*m1*m2*m3+c1*cp2*cp3*m1*m2*m3+c3*cp2*cp3*m1*m2*m3+c1*c3*cp2*cp3*m1*m2*m3+c2*c3*cp2*cp3*m1*m2*m3+c1*cp1*cp2*cp3*m1*m2*m3+c3*cp1*cp2*cp3*m1*m2*m3+c1*c3*cp1*cp2*cp3*m1*m2*m3+c2*c3*cp1*cp2*cp3*m1*m2*m3+c2*c3*cp1*x1+c1*c3*cp2*x1+c1*c3*cp1*cp2*x1+c2*cp3*x1+c1*c2*cp1*cp3*x1+c2*c3*cp1*cp3*x1+cp2*cp3*x1+c1*c2*c3*cp2*cp3*x1+cp1*cp2*cp3*x1+c1*c3*cp1*cp2*cp3*x1+c2*c3*cp1*m1*x1+c2*c3*cp2*m1*x1+c3*cp1*cp2*m1*x1+c1*c3*cp1*cp2*m1*x1+c2*cp3*m1*x1+c1*c2*cp3*m1*x1+c2*c3*cp3*m1*x1+c2*cp1*cp3*m1*x1+c1*c2*cp1*cp3*m1*x1+c2*c3*cp1*cp3*m1*x1+cp2*cp3*m1*x1+c1*cp2*cp3*m1*x1+c2*cp2*cp3*m1*x1+c1*c3*cp2*cp3*m1*x1+c2*c3*cp2*cp3*m1*x1+cp1*cp2*cp3*m1*x1+c1*c2*c3*m2*x1+c3*cp1*m2*x1+c2*c3*cp1*m2*x1+c3*cp2*m2*x1+c1*c3*cp2*m2*x1+c1*c2*c3*cp2*m2*x1+c3*cp1*cp2*m2*x1+c1*c3*cp1*cp2*m2*x1+cp3*m2*x1+c1*cp3*m2*x1+c1*c2*cp3*m2*x1+c3*cp3*m2*x1+c1*c3*cp3*m2*x1+c1*c2*c3*cp3*m2*x1+c1*cp1*cp3*m2*x1+c2*c3*cp1*cp3*m2*x1+c2*cp2*cp3*m2*x1+c1*c3*cp2*cp3*m2*x1+c2*c3*cp2*cp3*m2*x1+cp1*cp2*cp3*m2*x1+c1*cp1*cp2*cp3*m2*x1+c1*c3*m1*m2*x1+c1*c3*cp2*m1*m2*x1+c3*cp1*cp2*m1*m2*x1+cp3*m1*m2*x1+c2*cp3*m1*m2*x1+c1*c2*cp3*m1*m2*x1+c3*cp3*m1*m2*x1+c1*c3*cp3*m1*m2*x1+cp1*cp3*m1*m2*x1+c1*cp1*cp3*m1*m2*x1+cp2*cp3*m1*m2*x1+cp1*cp2*cp3*m1*m2*x1+c1*cp1*cp2*cp3*m1*m2*x1+c3*cp1*cp2*cp3*m1*m2*x1+c1*c2*m3*x1+c2*c3*m3*x1+c1*cp2*m3*x1+c1*c2*cp2*m3*x1+c3*cp2*m3*x1+c1*c3*cp2*m3*x1+cp1*cp2*m3*x1+c2*cp1*cp2*m3*x1+c1*c3*cp1*cp2*m3*x1+c2*c3*cp1*cp2*m3*x1+c2*cp3*m3*x1+c1*c2*cp3*m3*x1+c2*c3*cp3*m3*x1+c2*cp1*cp3*m3*x1+cp2*cp3*m3*x1+c1*c2*cp2*cp3*m3*x1+c1*c3*cp2*cp3*m3*x1+cp1*cp2*cp3*m3*x1+c1*cp1*cp2*cp3*m3*x1+c3*cp1*cp2*cp3*m3*x1+c1*c3*cp1*cp2*cp3*m3*x1+c2*c3*cp1*cp2*cp3*m3*x1+c1*c2*m1*m3*x1+c2*c3*m1*m3*x1+c1*cp2*m1*m3*x1+c2*cp2*m1*m3*x1+c1*c2*cp2*m1*m3*x1+c3*cp2*m1*m3*x1+c2*c3*cp2*m1*m3*x1+c2*cp1*cp2*m1*m3*x1+c3*cp1*cp2*m1*m3*x1+c1*c2*cp3*m1*m3*x1+c2*c3*cp3*m1*m3*x1+c2*cp1*cp3*m1*m3*x1+cp2*cp3*m1*m3*x1+c1*c3*cp2*cp3*m1*m3*x1+c2*c3*cp2*cp3*m1*m3*x1+c1*cp1*cp2*cp3*m1*m3*x1+c2*cp1*cp2*cp3*m1*m3*x1+c3*cp1*cp2*cp3*m1*m3*x1+c1*c2*m2*m3*x1+c2*c3*m2*m3*x1+cp1*m2*m3*x1+c2*cp1*m2*m3*x1+cp2*m2*m3*x1+c1*cp2*m2*m3*x1+c1*c2*cp2*m2*m3*x1+c3*cp2*m2*m3*x1+c1*c3*cp2*m2*m3*x1+cp1*cp2*m2*m3*x1+c1*cp1*cp2*m2*m3*x1+cp3*m2*m3*x1+c1*cp3*m2*m3*x1+c2*cp3*m2*m3*x1+c1*c2*cp3*m2*m3*x1+c2*c3*cp3*m2*m3*x1+cp1*cp3*m2*m3*x1+c2*cp1*cp3*m2*m3*x1+c1*cp2*cp3*m2*m3*x1+c1*c2*cp2*cp3*m2*m3*x1+c3*cp2*cp3*m2*m3*x1+c1*c3*cp2*cp3*m2*m3*x1+cp1*cp2*cp3*m2*m3*x1+c1*cp1*cp2*cp3*m2*m3*x1+cp1*m1*m2*m3*x1+c3*cp1*cp2*m1*m2*m3*x1+cp3*m1*m2*m3*x1+c1*cp2*cp3*m1*m2*m3*x1+c3*cp1*cp2*cp3*m1*m2*m3*x1+(1/2)*c3*cp2*x1*(1+x1)+(1/2)*c2*cp3*x1*(1+x1)+(1/2)*c1*c3*m2*x1*(1+x1)+(1/2)*c3*cp1*m2*x1*(1+x1)+(1/2)*c3*cp2*m2*x1*(1+x1)+(1/2)*c1*c3*cp2*m2*x1*(1+x1)+(1/2)*c3*cp1*cp2*m2*x1*(1+x1)+(1/2)*cp3*m2*x1*(1+x1)+(1/2)*c2*cp3*m2*x1*(1+x1)+(1/2)*c1*c2*cp3*m2*x1*(1+x1)+(1/2)*c3*cp3*m2*x1*(1+x1)+(1/2)*c1*c3*cp3*m2*x1*(1+x1)+(1/2)*c1*cp1*cp3*m2*x1*(1+x1)+(1/2)*c2*cp1*cp3*m2*x1*(1+x1)+(1/2)*c3*cp1*cp3*m2*x1*(1+x1)+(1/2)*c1*cp2*cp3*m2*x1*(1+x1)+(1/2)*cp1*cp2*cp3*m2*x1*(1+x1)+(1/2)*c3*cp1*m1*m2*x1*(1+x1)+(1/2)*c3*cp1*cp2*m1*m2*x1*(1+x1)+(1/2)*cp1*cp3*m1*m2*x1*(1+x1)+(1/2)*c2*cp1*cp3*m1*m2*x1*(1+x1)+(1/2)*c3*cp1*cp3*m1*m2*x1*(1+x1)+(1/2)*cp1*cp2*cp3*m1*m2*x1*(1+x1)+(1/2)*c1*c2*m3*x1*(1+x1)+(1/2)*c2*c3*m3*x1*(1+x1)+(1/2)*cp2*m3*x1*(1+x1)+(1/2)*c1*cp2*m3*x1*(1+x1)+(1/2)*c1*c2*cp2*m3*x1*(1+x1)+(1/2)*c1*c3*cp2*m3*x1*(1+x1)+(1/2)*c1*cp1*cp2*m3*x1*(1+x1)+(1/2)*c2*cp1*cp2*m3*x1*(1+x1)+(1/2)*c3*cp1*cp2*m3*x1*(1+x1)+(1/2)*c2*cp3*m3*x1*(1+x1)+(1/2)*c1*c2*cp3*m3*x1*(1+x1)+(1/2)*c2*c3*cp3*m3*x1*(1+x1)+(1/2)*c1*cp2*cp3*m3*x1*(1+x1)+(1/2)*c2*cp2*cp3*m3*x1*(1+x1)+(1/2)*c3*cp2*cp3*m3*x1*(1+x1)+(1/2)*c2*cp1*m1*m3*x1*(1+x1)+(1/2)*c2*cp1*cp2*m1*m3*x1*(1+x1)+(1/2)*c3*cp1*cp2*m1*m3*x1*(1+x1)+(1/2)*c2*cp1*cp3*m1*m3*x1*(1+x1)+(1/2)*cp1*cp2*cp3*m1*m3*x1*(1+x1)+(1/2)*cp1*m2*m3*x1*(1+x1)+(1/2)*c3*cp1*m2*m3*x1*(1+x1)+(1/2)*cp2*m2*m3*x1*(1+x1)+(1/2)*c3*cp2*m2*m3*x1*(1+x1)+(1/2)*cp3*m2*m3*x1*(1+x1)+(1/2)*cp1*cp3*m2*m3*x1*(1+x1)+(1/2)*c3*cp1*cp3*m2*m3*x1*(1+x1)+(1/2)*c1*cp2*cp3*m2*m3*x1*(1+x1)+(1/2)*c3*cp2*cp3*m2*m3*x1*(1+x1)+(1/2)*cp1*cp2*cp3*m2*m3*x1*(1+x1)+(1/2)*cp1*cp2*cp3*m1*m2*m3*x1*(1+x1)+c1*c3*x2+c3*cp1*x2+c2*c3*cp1*x2+c1*c3*cp2*x2+c1*c3*cp1*cp2*x2+c1*cp3*x2+c1*c3*cp3*x2+c1*cp1*cp3*x2+c1*c2*cp1*cp3*x2+c2*c3*cp1*cp3*x2+c1*c2*cp2*cp3*x2+c1*c3*cp2*cp3*x2+c1*c2*c3*cp2*cp3*x2+cp1*cp2*cp3*x2+c1*cp1*cp2*cp3*x2+c2*cp1*cp2*cp3*x2+c3*cp1*cp2*cp3*x2+c1*c3*cp1*cp2*cp3*x2+c2*c3*cp1*cp2*cp3*x2+c3*cp1*m1*x2+cp3*m1*x2+c1*cp3*m1*x2+cp1*cp3*m1*x2+c2*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c1*c2*cp2*cp3*m1*x2+c1*c3*cp2*cp3*m1*x2+cp1*cp2*cp3*m1*x2+c3*cp1*cp2*cp3*m1*x2+c2*c3*cp1*cp2*cp3*m1*x2+c1*c3*m2*x2+c1*c2*c3*m2*x2+c3*cp1*m2*x2+c1*c3*cp2*m2*x2+c1*c2*c3*cp2*m2*x2+c3*cp1*cp2*m2*x2+c1*c3*cp1*cp2*m2*x2+c2*c3*cp1*cp2*m2*x2+c1*cp3*m2*x2+c1*c2*cp3*m2*x2+c1*c3*cp3*m2*x2+c1*c2*c3*cp3*m2*x2+cp1*cp3*m2*x2+c1*cp1*cp3*m2*x2+c1*c2*cp2*cp3*m2*x2+cp1*cp2*cp3*m2*x2+c2*cp1*cp2*cp3*m2*x2+c3*cp1*cp2*cp3*m2*x2+c2*c3*cp1*m1*m2*x2+c2*c3*cp1*cp2*m1*m2*x2+cp3*m1*m2*x2+c1*cp3*m1*m2*x2+cp1*cp3*m1*m2*x2+c2*cp1*cp3*m1*m2*x2+c3*cp1*cp3*m1*m2*x2+c2*c3*cp1*cp3*m1*m2*x2+c1*c2*cp2*cp3*m1*m2*x2+c1*c3*cp2*cp3*m1*m2*x2+c3*cp1*cp2*cp3*m1*m2*x2+c1*c2*c3*m3*x2+c1*c2*cp1*m3*x2+c1*c3*cp1*m3*x2+cp1*cp2*m3*x2+c2*cp1*cp2*m3*x2+c1*c3*cp1*cp2*m3*x2+c2*c3*cp1*cp2*m3*x2+c1*cp3*m3*x2+c1*c2*cp3*m3*x2+c1*c2*c3*cp3*m3*x2+c1*cp1*cp3*m3*x2+c2*cp1*cp3*m3*x2+c1*c2*cp1*cp3*m3*x2+c1*c3*cp1*cp3*m3*x2+c1*cp2*cp3*m3*x2+c1*cp1*cp2*cp3*m3*x2+c2*cp1*cp2*cp3*m3*x2+c1*c3*cp1*cp2*cp3*m3*x2+c2*c3*cp1*cp2*cp3*m3*x2+c2*cp1*m1*m3*x2+c1*c3*cp1*m1*m3*x2+c1*cp2*m1*m3*x2+cp1*cp2*m1*m3*x2+c1*cp1*cp2*m1*m3*x2+c2*cp1*cp2*m1*m3*x2+c1*cp3*m1*m3*x2+c1*cp1*cp3*m1*m3*x2+c2*cp1*cp3*m1*m3*x2+c1*c3*cp1*cp3*m1*m3*x2+cp1*cp2*cp3*m1*m3*x2+c1*cp1*cp2*cp3*m1*m3*x2+c2*cp1*cp2*cp3*m1*m3*x2+c1*c2*m2*m3*x2+c1*cp1*m2*m3*x2+c3*cp1*m2*m3*x2+c1*c3*cp1*m2*m3*x2+c1*cp2*m2*m3*x2+c1*c2*cp2*m2*m3*x2+cp1*cp2*m2*m3*x2+c1*cp1*cp2*m2*m3*x2+c2*cp1*cp2*m2*m3*x2+c3*cp1*cp2*m2*m3*x2+c1*cp3*m2*m3*x2+c1*c2*cp3*m2*m3*x2+cp1*cp3*m2*m3*x2+c1*cp1*cp3*m2*m3*x2+c3*cp1*cp3*m2*m3*x2+c1*c3*cp1*cp3*m2*m3*x2+c1*c2*cp2*cp3*m2*m3*x2+cp1*cp2*cp3*m2*m3*x2+c1*cp1*cp2*cp3*m2*m3*x2+c2*cp1*cp2*cp3*m2*m3*x2+c3*cp1*cp2*cp3*m2*m3*x2+c2*cp1*m1*m2*m3*x2+c1*cp2*m1*m2*m3*x2+cp1*cp2*m1*m2*m3*x2+c2*cp1*cp2*m1*m2*m3*x2+c3*cp1*cp2*m1*m2*m3*x2+c1*cp3*m1*m2*m3*x2+c2*cp1*cp3*m1*m2*m3*x2+c2*cp1*cp2*cp3*m1*m2*m3*x2+c3*cp1*cp2*cp3*m1*m2*m3*x2+cp3*x1*x2+c3*cp3*x1*x2+c1*c3*m2*x1*x2+c3*cp2*m2*x1*x2+c1*c3*cp2*m2*x1*x2+cp3*m2*x1*x2+c2*cp3*m2*x1*x2+c1*c2*cp3*m2*x1*x2+c3*cp3*m2*x1*x2+c1*c3*cp3*m2*x1*x2+cp1*cp3*m2*x1*x2+c1*cp1*cp3*m2*x1*x2+cp2*cp3*m2*x1*x2+c1*cp2*cp3*m2*x1*x2+c1*c2*m3*x1*x2+c2*c3*m3*x1*x2+c2*cp1*m3*x1*x2+c3*cp1*m3*x1*x2+c1*cp2*m3*x1*x2+c1*c2*cp2*m3*x1*x2+c1*c3*cp2*m3*x1*x2+cp1*cp2*m3*x1*x2+c1*cp1*cp2*m3*x1*x2+cp3*m3*x1*x2+c2*cp3*m3*x1*x2+c1*c2*cp3*m3*x1*x2+c2*c3*cp3*m3*x1*x2+cp1*cp3*m3*x1*x2+c2*cp1*cp3*m3*x1*x2+c3*cp1*cp3*m3*x1*x2+c1*cp2*cp3*m3*x1*x2+c2*cp2*cp3*m3*x1*x2+c3*cp2*cp3*m3*x1*x2+c3*cp1*m1*m3*x1*x2+cp1*cp2*m1*m3*x1*x2+cp1*cp3*m1*m3*x1*x2+c3*cp1*cp3*m1*m3*x1*x2+cp1*cp2*cp3*m1*m3*x1*x2+cp1*m2*m3*x1*x2+c3*cp1*m2*m3*x1*x2+cp2*m2*m3*x1*x2+c3*cp2*m2*m3*x1*x2+cp3*m2*m3*x1*x2+cp1*cp3*m2*m3*x1*x2+c3*cp1*cp3*m2*m3*x1*x2+c1*cp2*cp3*m2*m3*x1*x2+c3*cp2*cp3*m2*m3*x1*x2+(1/2)*c1*c3*x2*(1+x2)+(1/2)*c3*cp1*x2*(1+x2)+(1/2)*c1*c3*cp2*x2*(1+x2)+(1/2)*c3*cp1*cp2*x2*(1+x2)+(1/2)*c1*c2*cp3*x2*(1+x2)+(1/2)*c1*c3*cp3*x2*(1+x2)+(1/2)*c1*cp1*cp3*x2*(1+x2)+(1/2)*c2*cp1*cp3*x2*(1+x2)+(1/2)*c3*cp1*cp3*x2*(1+x2)+(1/2)*c1*c3*m1*x2*(1+x2)+(1/2)*c1*c3*cp2*m1*x2*(1+x2)+(1/2)*c1*c2*cp3*m1*x2*(1+x2)+(1/2)*c1*c3*cp3*m1*x2*(1+x2)+(1/2)*cp1*cp3*m1*x2*(1+x2)+(1/2)*c1*c3*m2*x2*(1+x2)+(1/2)*c3*cp1*m2*x2*(1+x2)+(1/2)*c1*c3*cp2*m2*x2*(1+x2)+(1/2)*c3*cp1*cp2*m2*x2*(1+x2)+(1/2)*c1*c2*cp3*m2*x2*(1+x2)+(1/2)*c1*c3*cp3*m2*x2*(1+x2)+(1/2)*c1*cp1*cp3*m2*x2*(1+x2)+(1/2)*c2*cp1*cp3*m2*x2*(1+x2)+(1/2)*c3*cp1*cp3*m2*x2*(1+x2)+(1/2)*c3*cp1*m1*m2*x2*(1+x2)+(1/2)*c3*cp1*cp2*m1*m2*x2*(1+x2)+(1/2)*cp1*cp3*m1*m2*x2*(1+x2)+(1/2)*c2*cp1*cp3*m1*m2*x2*(1+x2)+(1/2)*c3*cp1*cp3*m1*m2*x2*(1+x2)+(1/2)*c1*cp2*cp3*m1*m2*x2*(1+x2)+(1/2)*cp1*cp2*cp3*m1*m2*x2*(1+x2)+(1/2)*c1*c2*m3*x2*(1+x2)+(1/2)*cp1*m3*x2*(1+x2)+(1/2)*c1*cp2*m3*x2*(1+x2)+(1/2)*c1*c2*cp2*m3*x2*(1+x2)+(1/2)*c1*c3*cp2*m3*x2*(1+x2)+(1/2)*c1*cp1*cp2*m3*x2*(1+x2)+(1/2)*c2*cp1*cp2*m3*x2*(1+x2)+(1/2)*c3*cp1*cp2*m3*x2*(1+x2)+(1/2)*c1*c2*cp3*m3*x2*(1+x2)+(1/2)*c1*cp2*cp3*m3*x2*(1+x2)+(1/2)*c2*cp1*m1*m3*x2*(1+x2)+(1/2)*c2*cp1*cp2*m1*m3*x2*(1+x2)+(1/2)*c3*cp1*cp2*m1*m3*x2*(1+x2)+(1/2)*c2*cp1*cp3*m1*m3*x2*(1+x2)+(1/2)*cp1*cp2*cp3*m1*m3*x2*(1+x2)+(1/2)*cp1*m2*m3*x2*(1+x2)+(1/2)*c3*cp1*m2*m3*x2*(1+x2)+(1/2)*cp1*cp3*m2*m3*x2*(1+x2)+(1/2)*c3*cp1*cp3*m2*m3*x2*(1+x2)+(1/2)*c1*cp2*cp3*m2*m3*x2*(1+x2)+(1/2)*cp1*cp2*cp3*m2*m3*x2*(1+x2)+(1/2)*cp1*cp2*cp3*m1*m2*m3*x2*(1+x2)+c1*c2*x3+c1*c2*c3*x3+c2*cp1*x3+c1*c2*cp2*x3+c1*c3*cp2*x3+c1*c2*c3*cp2*x3+cp1*cp2*x3+c1*cp1*cp2*x3+c2*cp1*cp2*x3+c1*c3*cp1*cp2*x3+c2*c3*cp1*cp2*x3+c1*c2*cp3*x3+c1*c2*c3*cp3*x3+c1*cp2*cp3*x3+c1*c2*cp2*cp3*x3+c1*c3*cp2*cp3*x3+c1*c2*c3*cp2*cp3*x3+c1*cp1*cp2*cp3*x3+c2*cp1*cp2*cp3*x3+c1*c3*cp1*cp2*cp3*x3+c2*c3*cp1*cp2*cp3*x3+c1*c2*m1*x3+c1*c2*c3*m1*x3+c2*cp1*m1*x3+cp2*m1*x3+c1*cp2*m1*x3+c1*c2*cp2*m1*x3+c1*c2*c3*cp2*m1*x3+cp1*cp2*m1*x3+c2*cp3*m1*x3+c1*c2*cp3*m1*x3+c1*c2*c3*cp3*m1*x3+c1*c2*cp2*cp3*m1*x3+c1*c3*cp2*cp3*m1*x3+c3*cp1*cp2*cp3*m1*x3+c2*c3*cp1*cp2*cp3*m1*x3+c1*c2*m2*x3+c1*c3*m2*x3+cp1*m2*x3+c1*cp1*m2*x3+c1*cp2*m2*x3+c1*c2*cp2*m2*x3+c1*c3*cp2*m2*x3+cp1*cp2*m2*x3+c1*cp1*cp2*m2*x3+c2*cp1*cp2*m2*x3+c3*cp1*cp2*m2*x3+c1*c2*cp3*m2*x3+c1*c3*cp3*m2*x3+cp1*cp3*m2*x3+c1*cp1*cp3*m2*x3+c2*cp1*cp3*m2*x3+c1*c2*cp2*cp3*m2*x3+c1*c3*cp2*cp3*m2*x3+c1*cp1*cp2*cp3*m2*x3+c2*cp1*cp2*cp3*m2*x3+c3*cp1*cp2*cp3*m2*x3+m1*m2*x3+cp1*m1*m2*x3+c2*cp1*m1*m2*x3+c3*cp1*m1*m2*x3+cp2*m1*m2*x3+c1*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+c2*cp1*cp2*m1*m2*x3+c3*cp1*cp2*m1*m2*x3+cp3*m1*m2*x3+c2*cp3*m1*m2*x3+cp1*cp3*m1*m2*x3+c2*cp1*cp3*m1*m2*x3+c3*cp1*cp3*m1*m2*x3+c1*cp2*cp3*m1*m2*x3+c1*c2*cp2*cp3*m1*m2*x3+c3*cp1*cp2*cp3*m1*m2*x3+c1*c2*m3*x3+c1*c2*c3*m3*x3+c2*cp1*m3*x3+c1*c2*cp1*m3*x3+c1*c3*cp2*m3*x3+c1*c2*c3*cp2*m3*x3+cp1*cp2*m3*x3+c1*c2*cp1*cp2*m3*x3+c1*c3*cp1*cp2*m3*x3+c2*c3*cp1*cp2*m3*x3+c1*c2*c3*cp3*m3*x3+c2*cp1*cp3*m3*x3+c1*c2*cp1*cp3*m3*x3+c1*c2*cp2*cp3*m3*x3+c1*c3*cp2*cp3*m3*x3+cp1*cp2*cp3*m3*x3+c1*cp1*cp2*cp3*m3*x3+c1*c3*cp1*cp2*cp3*m3*x3+c1*cp2*m1*m3*x3+c3*cp2*m1*m3*x3+c1*c3*cp2*m1*m3*x3+cp1*cp2*m1*m3*x3+c1*cp1*cp2*m1*m3*x3+c3*cp1*cp2*m1*m3*x3+c2*c3*cp1*cp2*m1*m3*x3+c2*cp3*m1*m3*x3+c1*cp2*cp3*m1*m3*x3+c3*cp2*cp3*m1*m3*x3+c1*c3*cp2*cp3*m1*m3*x3+c1*cp1*cp2*cp3*m1*m3*x3+c3*cp1*cp2*cp3*m1*m3*x3+c2*cp1*m2*m3*x3+c1*cp2*m2*m3*x3+cp1*cp2*m2*m3*x3+c2*cp1*cp2*m2*m3*x3+c3*cp1*cp2*m2*m3*x3+c2*cp1*cp3*m2*m3*x3+c1*c2*cp2*cp3*m2*m3*x3+cp1*cp2*cp3*m2*m3*x3+c2*cp1*cp2*cp3*m2*m3*x3+m1*m2*m3*x3+c2*cp1*m1*m2*m3*x3+c1*cp2*m1*m2*m3*x3+c3*cp2*m1*m2*m3*x3+c2*cp1*cp2*m1*m2*m3*x3+c3*cp1*cp2*m1*m2*m3*x3+c2*cp3*m1*m2*m3*x3+c2*cp1*cp3*m1*m2*m3*x3+c3*cp2*cp3*m1*m2*m3*x3+cp1*cp2*cp3*m1*m2*m3*x3+c2*cp1*cp2*cp3*m1*m2*m3*x3+c1*c2*m3*x1*x3+c2*c3*m3*x1*x3+c2*cp1*m3*x1*x3+c1*cp2*m3*x1*x3+c1*c2*cp2*m3*x1*x3+c3*cp2*m3*x1*x3+c1*c3*cp2*m3*x1*x3+cp1*cp2*m3*x1*x3+c1*cp1*cp2*m3*x1*x3+c2*cp3*m3*x1*x3+c1*c2*cp3*m3*x1*x3+c2*c3*cp3*m3*x1*x3+c2*cp1*cp3*m3*x1*x3+cp2*cp3*m3*x1*x3+c1*cp2*cp3*m3*x1*x3+c2*cp2*cp3*m3*x1*x3+c3*cp2*m1*m3*x1*x3+cp1*cp2*m1*m3*x1*x3+cp2*cp3*m1*m3*x1*x3+c3*cp2*cp3*m1*m3*x1*x3+cp1*cp2*cp3*m1*m3*x1*x3+cp2*cp3*m2*m3*x1*x3+c1*cp2*cp3*m2*m3*x1*x3+c1*c2*x2*x3+c1*c3*x2*x3+c1*cp1*x2*x3+c2*cp1*x2*x3+c3*cp1*x2*x3+c1*c2*cp2*x2*x3+c1*c3*cp2*x2*x3+c1*cp1*cp2*x2*x3+c2*cp1*cp2*x2*x3+c3*cp1*cp2*x2*x3+c1*c2*cp3*x2*x3+c1*c3*cp3*x2*x3+c1*cp1*cp3*x2*x3+c2*cp1*cp3*x2*x3+c3*cp1*cp3*x2*x3+m1*x2*x3+c1*c2*m1*x2*x3+c1*c3*m1*x2*x3+cp1*m1*x2*x3+c1*c2*cp2*m1*x2*x3+c1*c3*cp2*m1*x2*x3+cp1*cp2*m1*x2*x3+c1*c2*cp3*m1*x2*x3+c1*c3*cp3*m1*x2*x3+cp1*cp3*m1*x2*x3+c1*cp2*cp3*m2*x2*x3+cp1*cp2*cp3*m2*x2*x3+c1*cp2*cp3*m1*m2*x2*x3+c1*c2*m3*x2*x3+cp1*m3*x2*x3+c3*cp1*m3*x2*x3+c1*cp2*m3*x2*x3+c1*c2*cp2*m3*x2*x3+c1*c3*cp2*m3*x2*x3+c1*cp1*cp2*m3*x2*x3+c2*cp1*cp2*m3*x2*x3+c3*cp1*cp2*m3*x2*x3+c1*c2*cp3*m3*x2*x3+cp1*cp3*m3*x2*x3+c3*cp1*cp3*m3*x2*x3+c1*cp2*cp3*m3*x2*x3+c2*cp1*m1*m3*x2*x3+c2*cp1*cp2*m1*m3*x2*x3+c3*cp1*cp2*m1*m3*x2*x3+c2*cp1*cp3*m1*m3*x2*x3+cp1*cp2*cp3*m1*m3*x2*x3+c1*cp2*cp3*m2*m3*x2*x3+cp1*cp2*cp3*m2*m3*x2*x3+cp1*cp2*cp3*m1*m2*m3*x2*x3+(1/2)*c1*c2*x3*(1+x3)+(1/2)*c1*cp2*x3*(1+x3)+(1/2)*c1*c2*cp2*x3*(1+x3)+(1/2)*c1*c3*cp2*x3*(1+x3)+(1/2)*c1*cp1*cp2*x3*(1+x3)+(1/2)*c2*cp1*cp2*x3*(1+x3)+(1/2)*c3*cp1*cp2*x3*(1+x3)+(1/2)*c1*c2*cp3*x3*(1+x3)+(1/2)*c1*cp2*cp3*x3*(1+x3)+(1/2)*c1*c2*m1*x3*(1+x3)+(1/2)*c2*c3*m1*x3*(1+x3)+(1/2)*c1*c2*cp2*m1*x3*(1+x3)+(1/2)*c1*c3*cp2*m1*x3*(1+x3)+(1/2)*c1*c2*cp3*m1*x3*(1+x3)+(1/2)*c2*c3*cp3*m1*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m1*x3*(1+x3)+(1/2)*c1*c2*m2*x3*(1+x3)+(1/2)*cp1*m2*x3*(1+x3)+(1/2)*c1*cp1*m2*x3*(1+x3)+(1/2)*c2*cp1*m2*x3*(1+x3)+(1/2)*c3*cp1*m2*x3*(1+x3)+(1/2)*c1*c2*cp2*m2*x3*(1+x3)+(1/2)*c1*c3*cp2*m2*x3*(1+x3)+(1/2)*c1*cp1*cp2*m2*x3*(1+x3)+(1/2)*c2*cp1*cp2*m2*x3*(1+x3)+(1/2)*c3*cp1*cp2*m2*x3*(1+x3)+(1/2)*c1*c2*cp3*m2*x3*(1+x3)+(1/2)*cp1*cp3*m2*x3*(1+x3)+(1/2)*c1*cp1*cp3*m2*x3*(1+x3)+(1/2)*c2*cp1*cp3*m2*x3*(1+x3)+(1/2)*c3*cp1*cp3*m2*x3*(1+x3)+(1/2)*m1*m2*x3*(1+x3)+(1/2)*cp1*m1*m2*x3*(1+x3)+(1/2)*c2*cp1*m1*m2*x3*(1+x3)+(1/2)*c3*cp1*m1*m2*x3*(1+x3)+(1/2)*c3*cp2*m1*m2*x3*(1+x3)+(1/2)*cp1*cp2*m1*m2*x3*(1+x3)+(1/2)*c2*cp1*cp2*m1*m2*x3*(1+x3)+(1/2)*c3*cp1*cp2*m1*m2*x3*(1+x3)+(1/2)*cp1*cp3*m1*m2*x3*(1+x3)+(1/2)*c2*cp1*cp3*m1*m2*x3*(1+x3)+(1/2)*c3*cp1*cp3*m1*m2*x3*(1+x3)+(1/2)*c1*cp2*cp3*m1*m2*x3*(1+x3)+(1/2)*c3*cp2*cp3*m1*m2*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m1*m2*x3*(1+x3)+(1/2)*c1*c2*m3*x3*(1+x3)+(1/2)*c1*cp2*m3*x3*(1+x3)+(1/2)*c1*c2*cp2*m3*x3*(1+x3)+(1/2)*c1*c3*cp2*m3*x3*(1+x3)+(1/2)*c1*cp1*cp2*m3*x3*(1+x3)+(1/2)*c2*cp1*cp2*m3*x3*(1+x3)+(1/2)*c3*cp1*cp2*m3*x3*(1+x3)+(1/2)*c1*c2*cp3*m3*x3*(1+x3)+(1/2)*c1*cp2*cp3*m3*x3*(1+x3)+(1/2)*c2*cp1*m1*m3*x3*(1+x3)+(1/2)*c2*cp1*cp2*m1*m3*x3*(1+x3)+(1/2)*c3*cp1*cp2*m1*m3*x3*(1+x3)+(1/2)*c2*cp1*cp3*m1*m3*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m1*m3*x3*(1+x3)+(1/2)*cp1*m2*m3*x3*(1+x3)+(1/2)*c3*cp1*m2*m3*x3*(1+x3)+(1/2)*cp1*cp3*m2*m3*x3*(1+x3)+(1/2)*c3*cp1*cp3*m2*m3*x3*(1+x3)+(1/2)*c1*cp2*cp3*m2*m3*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m2*m3*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m1*m2*m3*x3*(1+x3)+c1*c3*cp2*y1+c2*c3*cp2*y1+c3*cp1*cp2*y1+c1*c2*cp3*y1+c2*c3*cp3*y1+c2*cp1*cp3*y1+c1*cp2*cp3*y1+c2*cp2*cp3*y1+c1*c3*cp2*cp3*y1+c2*c3*cp2*cp3*y1+c1*c2*c3*cp2*cp3*y1+cp1*cp2*cp3*y1+c1*c3*cp1*cp2*cp3*y1+c2*c3*cp1*cp2*cp3*y1+c2*c3*cp1*m1*y1+c2*c3*cp2*m1*y1+c1*c3*cp1*cp2*m1*y1+c2*cp3*m1*y1+c1*c2*cp3*m1*y1+c2*c3*cp3*m1*y1+c2*cp1*cp3*m1*y1+c1*c2*cp1*cp3*m1*y1+c2*c3*cp1*cp3*m1*y1+cp2*cp3*m1*y1+c1*cp2*cp3*m1*y1+c2*cp2*cp3*m1*y1+c1*c3*cp2*cp3*m1*y1+c2*c3*cp2*cp3*m1*y1+c3*cp1*cp2*cp3*m1*y1+c1*c3*m2*y1+c1*c2*c3*m2*y1+c3*cp1*m2*y1+c1*c3*cp1*m2*y1+c3*cp2*m2*y1+c1*c2*c3*cp2*m2*y1+c3*cp1*cp2*m2*y1+c2*c3*cp1*cp2*m2*y1+c1*cp3*m2*y1+c2*cp3*m2*y1+c1*c2*c3*cp3*m2*y1+cp1*cp3*m2*y1+c1*cp1*cp3*m2*y1+c1*c2*cp1*cp3*m2*y1+c1*c3*cp1*cp3*m2*y1+cp2*cp3*m2*y1+c2*cp2*cp3*m2*y1+c1*c3*cp2*cp3*m2*y1+c2*c3*cp2*cp3*m2*y1+cp1*cp2*cp3*m2*y1+c1*cp1*cp2*cp3*m2*y1+c1*c3*m1*m2*y1+c1*c3*cp2*m1*m2*y1+c3*cp1*cp2*m1*m2*y1+cp3*m1*m2*y1+c2*cp3*m1*m2*y1+c1*c2*cp3*m1*m2*y1+c3*cp3*m1*m2*y1+c1*c3*cp3*m1*m2*y1+cp1*cp3*m1*m2*y1+c1*cp1*cp3*m1*m2*y1+cp2*cp3*m1*m2*y1+cp1*cp2*cp3*m1*m2*y1+c1*cp1*cp2*cp3*m1*m2*y1+c3*cp1*cp2*cp3*m1*m2*y1+c1*c2*cp1*m3*y1+c2*c3*cp1*m3*y1+c2*cp2*m3*y1+c1*c3*cp2*m3*y1+c2*c3*cp2*m3*y1+c2*cp1*cp2*m3*y1+c1*c2*cp1*cp2*m3*y1+c2*c3*cp1*cp2*m3*y1+c2*cp3*m3*y1+c2*cp1*cp3*m3*y1+c1*c2*cp1*cp3*m3*y1+c2*c3*cp1*cp3*m3*y1+c1*c2*cp2*cp3*m3*y1+c2*c3*cp2*cp3*m3*y1+cp1*cp2*cp3*m3*y1+c1*cp1*cp2*cp3*m3*y1+c2*cp1*cp2*cp3*m3*y1+c1*c3*cp1*cp2*cp3*m3*y1+c2*c3*cp1*cp2*cp3*m3*y1+c1*c2*m1*m3*y1+c2*c3*m1*m3*y1+c1*cp2*m1*m3*y1+c2*cp2*m1*m3*y1+c1*c2*cp2*m1*m3*y1+c3*cp2*m1*m3*y1+c2*c3*cp2*m1*m3*y1+cp1*cp2*m1*m3*y1+c2*cp1*cp2*m1*m3*y1+c1*c2*cp3*m1*m3*y1+c2*c3*cp3*m1*m3*y1+c2*cp1*cp3*m1*m3*y1+cp2*cp3*m1*m3*y1+c1*c3*cp2*cp3*m1*m3*y1+c2*c3*cp2*cp3*m1*m3*y1+c1*cp1*cp2*cp3*m1*m3*y1+c2*cp1*cp2*cp3*m1*m3*y1+c1*c2*m2*m3*y1+c2*c3*m2*m3*y1+cp1*m2*m3*y1+c3*cp1*m2*m3*y1+cp2*m2*m3*y1+c1*cp2*m2*m3*y1+c1*c2*cp2*m2*m3*y1+c3*cp2*m2*m3*y1+c1*c3*cp2*m2*m3*y1+c1*cp1*cp2*m2*m3*y1+c2*cp1*cp2*m2*m3*y1+c3*cp1*cp2*m2*m3*y1+c1*cp3*m2*m3*y1+c2*cp3*m2*m3*y1+c1*c2*cp3*m2*m3*y1+c2*c3*cp3*m2*m3*y1+c3*cp1*cp3*m2*m3*y1+c1*c2*cp2*cp3*m2*m3*y1+c3*cp2*cp3*m2*m3*y1+c1*c3*cp2*cp3*m2*m3*y1+cp1*cp2*cp3*m2*m3*y1+c2*cp1*cp2*cp3*m2*m3*y1+c3*cp1*cp2*cp3*m2*m3*y1+cp1*m1*m2*m3*y1+c3*cp1*cp2*m1*m2*m3*y1+cp3*m1*m2*m3*y1+c1*cp2*cp3*m1*m2*m3*y1+c3*cp1*cp2*cp3*m1*m2*m3*y1+c3*cp2*x1*y1+c2*cp3*x1*y1+c1*c3*m2*x1*y1+c3*cp1*m2*x1*y1+c3*cp2*m2*x1*y1+c1*c3*cp2*m2*x1*y1+c3*cp1*cp2*m2*x1*y1+cp3*m2*x1*y1+c2*cp3*m2*x1*y1+c1*c2*cp3*m2*x1*y1+c3*cp3*m2*x1*y1+c1*c3*cp3*m2*x1*y1+c1*cp1*cp3*m2*x1*y1+c2*cp1*cp3*m2*x1*y1+c3*cp1*cp3*m2*x1*y1+c1*cp2*cp3*m2*x1*y1+cp1*cp2*cp3*m2*x1*y1+c3*cp1*m1*m2*x1*y1+c3*cp1*cp2*m1*m2*x1*y1+cp1*cp3*m1*m2*x1*y1+c2*cp1*cp3*m1*m2*x1*y1+c3*cp1*cp3*m1*m2*x1*y1+cp1*cp2*cp3*m1*m2*x1*y1+c1*c2*m3*x1*y1+c2*c3*m3*x1*y1+cp2*m3*x1*y1+c1*cp2*m3*x1*y1+c1*c2*cp2*m3*x1*y1+c1*c3*cp2*m3*x1*y1+c1*cp1*cp2*m3*x1*y1+c2*cp1*cp2*m3*x1*y1+c3*cp1*cp2*m3*x1*y1+c2*cp3*m3*x1*y1+c1*c2*cp3*m3*x1*y1+c2*c3*cp3*m3*x1*y1+c1*cp2*cp3*m3*x1*y1+c2*cp2*cp3*m3*x1*y1+c3*cp2*cp3*m3*x1*y1+c2*cp1*m1*m3*x1*y1+c2*cp1*cp2*m1*m3*x1*y1+c3*cp1*cp2*m1*m3*x1*y1+c2*cp1*cp3*m1*m3*x1*y1+cp1*cp2*cp3*m1*m3*x1*y1+cp1*m2*m3*x1*y1+c3*cp1*m2*m3*x1*y1+cp2*m2*m3*x1*y1+c3*cp2*m2*m3*x1*y1+cp3*m2*m3*x1*y1+cp1*cp3*m2*m3*x1*y1+c3*cp1*cp3*m2*m3*x1*y1+c1*cp2*cp3*m2*m3*x1*y1+c3*cp2*cp3*m2*m3*x1*y1+cp1*cp2*cp3*m2*m3*x1*y1+cp1*cp2*cp3*m1*m2*m3*x1*y1+cp3*x2*y1+c3*cp3*x2*y1+c1*c3*m2*x2*y1+c3*cp1*m2*x2*y1+c3*cp2*m2*x2*y1+c1*c3*cp2*m2*x2*y1+c3*cp1*cp2*m2*x2*y1+cp3*m2*x2*y1+c2*cp3*m2*x2*y1+c1*c2*cp3*m2*x2*y1+c3*cp3*m2*x2*y1+c1*c3*cp3*m2*x2*y1+c1*cp1*cp3*m2*x2*y1+c2*cp1*cp3*m2*x2*y1+c3*cp1*cp3*m2*x2*y1+cp2*cp3*m2*x2*y1+c1*cp2*cp3*m2*x2*y1+cp1*cp2*cp3*m2*x2*y1+c1*c2*m3*x2*y1+c2*c3*m3*x2*y1+c1*cp2*m3*x2*y1+c1*c2*cp2*m3*x2*y1+c1*c3*cp2*m3*x2*y1+c1*cp1*cp2*m3*x2*y1+c2*cp1*cp2*m3*x2*y1+c3*cp1*cp2*m3*x2*y1+cp3*m3*x2*y1+c2*cp3*m3*x2*y1+c1*c2*cp3*m3*x2*y1+c2*c3*cp3*m3*x2*y1+c1*cp2*cp3*m3*x2*y1+c2*cp2*cp3*m3*x2*y1+c3*cp2*cp3*m3*x2*y1+c3*cp1*m1*m3*x2*y1+cp1*cp2*m1*m3*x2*y1+cp1*cp3*m1*m3*x2*y1+c3*cp1*cp3*m1*m3*x2*y1+cp1*cp2*cp3*m1*m3*x2*y1+cp1*m2*m3*x2*y1+c3*cp1*m2*m3*x2*y1+cp2*m2*m3*x2*y1+c3*cp2*m2*m3*x2*y1+cp3*m2*m3*x2*y1+cp1*cp3*m2*m3*x2*y1+c3*cp1*cp3*m2*m3*x2*y1+c1*cp2*cp3*m2*m3*x2*y1+c3*cp2*cp3*m2*m3*x2*y1+cp1*cp2*cp3*m2*m3*x2*y1+c1*c2*m3*x3*y1+c2*c3*m3*x3*y1+c1*cp2*m3*x3*y1+c1*c2*cp2*m3*x3*y1+c1*c3*cp2*m3*x3*y1+c1*cp1*cp2*m3*x3*y1+c2*cp1*cp2*m3*x3*y1+c3*cp1*cp2*m3*x3*y1+c2*cp3*m3*x3*y1+c1*c2*cp3*m3*x3*y1+c2*c3*cp3*m3*x3*y1+c1*cp2*cp3*m3*x3*y1+c2*cp2*cp3*m3*x3*y1+c3*cp2*cp3*m3*x3*y1+c3*cp2*m1*m3*x3*y1+cp1*cp2*m1*m3*x3*y1+cp2*cp3*m1*m3*x3*y1+c3*cp2*cp3*m1*m3*x3*y1+cp1*cp2*cp3*m1*m3*x3*y1+cp2*cp3*m2*m3*x3*y1+c1*cp2*cp3*m2*m3*x3*y1+cp1*cp2*cp3*m2*m3*x3*y1+(1/2)*c3*cp2*y1*(1+y1)+(1/2)*c2*cp3*y1*(1+y1)+(1/2)*c1*c3*m2*y1*(1+y1)+(1/2)*c3*cp1*m2*y1*(1+y1)+(1/2)*c3*cp2*m2*y1*(1+y1)+(1/2)*c1*c3*cp2*m2*y1*(1+y1)+(1/2)*c3*cp1*cp2*m2*y1*(1+y1)+(1/2)*cp3*m2*y1*(1+y1)+(1/2)*c2*cp3*m2*y1*(1+y1)+(1/2)*c1*c2*cp3*m2*y1*(1+y1)+(1/2)*c3*cp3*m2*y1*(1+y1)+(1/2)*c1*c3*cp3*m2*y1*(1+y1)+(1/2)*c1*cp1*cp3*m2*y1*(1+y1)+(1/2)*c2*cp1*cp3*m2*y1*(1+y1)+(1/2)*c3*cp1*cp3*m2*y1*(1+y1)+(1/2)*c1*cp2*cp3*m2*y1*(1+y1)+(1/2)*cp1*cp2*cp3*m2*y1*(1+y1)+(1/2)*c3*cp1*m1*m2*y1*(1+y1)+(1/2)*c3*cp1*cp2*m1*m2*y1*(1+y1)+(1/2)*cp1*cp3*m1*m2*y1*(1+y1)+(1/2)*c2*cp1*cp3*m1*m2*y1*(1+y1)+(1/2)*c3*cp1*cp3*m1*m2*y1*(1+y1)+(1/2)*cp1*cp2*cp3*m1*m2*y1*(1+y1)+(1/2)*c1*c2*m3*y1*(1+y1)+(1/2)*c2*c3*m3*y1*(1+y1)+(1/2)*cp2*m3*y1*(1+y1)+(1/2)*c1*cp2*m3*y1*(1+y1)+(1/2)*c1*c2*cp2*m3*y1*(1+y1)+(1/2)*c1*c3*cp2*m3*y1*(1+y1)+(1/2)*c1*cp1*cp2*m3*y1*(1+y1)+(1/2)*c2*cp1*cp2*m3*y1*(1+y1)+(1/2)*c3*cp1*cp2*m3*y1*(1+y1)+(1/2)*c2*cp3*m3*y1*(1+y1)+(1/2)*c1*c2*cp3*m3*y1*(1+y1)+(1/2)*c2*c3*cp3*m3*y1*(1+y1)+(1/2)*c1*cp2*cp3*m3*y1*(1+y1)+(1/2)*c2*cp2*cp3*m3*y1*(1+y1)+(1/2)*c3*cp2*cp3*m3*y1*(1+y1)+(1/2)*c2*cp1*m1*m3*y1*(1+y1)+(1/2)*c2*cp1*cp2*m1*m3*y1*(1+y1)+(1/2)*c3*cp1*cp2*m1*m3*y1*(1+y1)+(1/2)*c2*cp1*cp3*m1*m3*y1*(1+y1)+(1/2)*cp1*cp2*cp3*m1*m3*y1*(1+y1)+(1/2)*cp1*m2*m3*y1*(1+y1)+(1/2)*c3*cp1*m2*m3*y1*(1+y1)+(1/2)*cp2*m2*m3*y1*(1+y1)+(1/2)*c3*cp2*m2*m3*y1*(1+y1)+(1/2)*cp3*m2*m3*y1*(1+y1)+(1/2)*cp1*cp3*m2*m3*y1*(1+y1)+(1/2)*c3*cp1*cp3*m2*m3*y1*(1+y1)+(1/2)*c1*cp2*cp3*m2*m3*y1*(1+y1)+(1/2)*c3*cp2*cp3*m2*m3*y1*(1+y1)+(1/2)*cp1*cp2*cp3*m2*m3*y1*(1+y1)+(1/2)*cp1*cp2*cp3*m1*m2*m3*y1*(1+y1)+c1*cp2*cp3*y2+c1*c3*cp2*cp3*y2+c1*c2*c3*cp2*cp3*y2+cp1*cp2*cp3*y2+c1*c3*cp1*cp2*cp3*y2+c2*c3*cp1*cp2*cp3*y2+c3*cp1*cp2*m1*y2+cp1*cp3*m1*y2+c2*cp1*cp3*m1*y2+c1*c2*cp2*cp3*m1*y2+c1*c3*cp2*cp3*m1*y2+cp1*cp2*cp3*m1*y2+c2*cp1*cp2*cp3*m1*y2+c3*cp1*cp2*cp3*m1*y2+c2*c3*cp1*cp2*cp3*m1*y2+c1*c2*c3*m2*y2+c1*c2*c3*cp2*m2*y2+c3*cp1*cp2*m2*y2+c1*c3*cp1*cp2*m2*y2+c2*c3*cp1*cp2*m2*y2+c1*c2*c3*cp3*m2*y2+c1*cp2*cp3*m2*y2+c1*c3*cp2*cp3*m2*y2+c2*c3*cp1*m1*m2*y2+c2*c3*cp1*cp2*m1*m2*y2+c2*cp1*cp3*m1*m2*y2+c3*cp1*cp3*m1*m2*y2+c2*c3*cp1*cp3*m1*m2*y2+c1*c2*cp2*cp3*m1*m2*y2+c1*c3*cp2*cp3*m1*m2*y2+cp1*cp2*cp3*m1*m2*y2+c2*cp1*cp2*cp3*m1*m2*y2+c1*c2*m3*y2+c1*c2*c3*m3*y2+c1*cp1*m3*y2+c1*c2*cp1*m3*y2+c1*c3*cp1*m3*y2+c1*c2*cp2*m3*y2+cp1*cp2*m3*y2+c3*cp1*cp2*m3*y2+c1*c3*cp1*cp2*m3*y2+c2*c3*cp1*cp2*m3*y2+c1*c2*c3*cp3*m3*y2+c1*cp1*cp3*m3*y2+c1*c2*cp1*cp3*m3*y2+c1*c3*cp1*cp3*m3*y2+c1*cp2*cp3*m3*y2+c1*c3*cp2*cp3*m3*y2+cp1*cp2*cp3*m3*y2+c3*cp1*cp2*cp3*m3*y2+c1*c3*cp1*cp2*cp3*m3*y2+c2*c3*cp1*cp2*cp3*m3*y2+c2*cp1*m1*m3*y2+c3*cp1*m1*m3*y2+c1*c3*cp1*m1*m3*y2+cp1*cp2*m1*m3*y2+c1*cp1*cp2*m1*m3*y2+c2*cp1*cp2*m1*m3*y2+c3*cp1*cp2*m1*m3*y2+cp1*cp3*m1*m3*y2+c1*cp1*cp3*m1*m3*y2+c2*cp1*cp3*m1*m3*y2+c3*cp1*cp3*m1*m3*y2+c1*c3*cp1*cp3*m1*m3*y2+c1*cp1*cp2*cp3*m1*m3*y2+c2*cp1*cp2*cp3*m1*m3*y2+c3*cp1*cp2*cp3*m1*m3*y2+c1*c2*m2*m3*y2+c1*cp1*m2*m3*y2+c1*c3*cp1*m2*m3*y2+c1*c2*cp2*m2*m3*y2+cp1*cp2*m2*m3*y2+c1*cp1*cp2*m2*m3*y2+c2*cp1*cp2*m2*m3*y2+c1*c2*cp3*m2*m3*y2+c1*cp1*cp3*m2*m3*y2+c1*c3*cp1*cp3*m2*m3*y2+c1*cp2*cp3*m2*m3*y2+c1*c2*cp2*cp3*m2*m3*y2+c1*cp1*cp2*cp3*m2*m3*y2+c2*cp1*cp2*cp3*m2*m3*y2+c2*cp1*m1*m2*m3*y2+c2*cp1*cp2*m1*m2*m3*y2+c3*cp1*cp2*m1*m2*m3*y2+cp1*cp3*m1*m2*m3*y2+c2*cp1*cp3*m1*m2*m3*y2+c2*cp1*cp2*cp3*m1*m2*m3*y2+c3*cp1*cp2*cp3*m1*m2*m3*y2+c1*c3*x1*y2+c3*cp2*x1*y2+c1*c3*cp2*x1*y2+c2*cp3*x1*y2+c1*c2*cp3*x1*y2+c1*c3*cp3*x1*y2+cp1*cp3*x1*y2+c1*cp1*cp3*x1*y2+c1*c3*m2*x1*y2+c3*cp2*m2*x1*y2+c1*c3*cp2*m2*x1*y2+cp3*m2*x1*y2+c2*cp3*m2*x1*y2+c1*c2*cp3*m2*x1*y2+c3*cp3*m2*x1*y2+c1*c3*cp3*m2*x1*y2+cp1*cp3*m2*x1*y2+c1*cp1*cp3*m2*x1*y2+c1*c2*m3*x1*y2+c2*c3*m3*x1*y2+cp1*m3*x1*y2+c2*cp1*m3*x1*y2+c3*cp1*m3*x1*y2+cp2*m3*x1*y2+c1*cp2*m3*x1*y2+c1*c2*cp2*m3*x1*y2+c1*c3*cp2*m3*x1*y2+cp1*cp2*m3*x1*y2+c1*cp1*cp2*m3*x1*y2+c2*cp3*m3*x1*y2+c1*c2*cp3*m3*x1*y2+c2*c3*cp3*m3*x1*y2+cp1*cp3*m3*x1*y2+c2*cp1*cp3*m3*x1*y2+c3*cp1*cp3*m3*x1*y2+c1*cp2*cp3*m3*x1*y2+c2*cp2*cp3*m3*x1*y2+c3*cp2*cp3*m3*x1*y2+c3*cp1*m1*m3*x1*y2+cp1*cp2*m1*m3*x1*y2+cp1*cp3*m1*m3*x1*y2+c3*cp1*cp3*m1*m3*x1*y2+cp1*cp2*cp3*m1*m3*x1*y2+cp1*m2*m3*x1*y2+c3*cp1*m2*m3*x1*y2+cp2*m2*m3*x1*y2+c3*cp2*m2*m3*x1*y2+cp3*m2*m3*x1*y2+cp1*cp3*m2*m3*x1*y2+c3*cp1*cp3*m2*m3*x1*y2+c1*cp2*cp3*m2*m3*x1*y2+c3*cp2*cp3*m2*m3*x1*y2+c1*c3*m1*x2*y2+c3*cp1*m1*x2*y2+c1*c3*cp2*m1*x2*y2+c3*cp1*cp2*m1*x2*y2+c1*c2*cp3*m1*x2*y2+c1*c3*cp3*m1*x2*y2+c2*cp1*cp3*m1*x2*y2+c3*cp1*cp3*m1*x2*y2+c1*c3*m2*x2*y2+c3*cp1*m2*x2*y2+c1*c3*cp2*m2*x2*y2+c3*cp1*cp2*m2*x2*y2+c1*c2*cp3*m2*x2*y2+c1*c3*cp3*m2*x2*y2+c1*cp1*cp3*m2*x2*y2+c2*cp1*cp3*m2*x2*y2+c3*cp1*cp3*m2*x2*y2+c1*cp2*cp3*m2*x2*y2+cp1*cp2*cp3*m2*x2*y2+c3*cp1*m1*m2*x2*y2+c3*cp1*cp2*m1*m2*x2*y2+cp1*cp3*m1*m2*x2*y2+c2*cp1*cp3*m1*m2*x2*y2+c3*cp1*cp3*m1*m2*x2*y2+c1*cp2*cp3*m1*m2*x2*y2+c1*c2*m3*x2*y2+c1*cp2*m3*x2*y2+c1*c2*cp2*m3*x2*y2+c1*c3*cp2*m3*x2*y2+c1*cp1*cp2*m3*x2*y2+c2*cp1*cp2*m3*x2*y2+c3*cp1*cp2*m3*x2*y2+c1*c2*cp3*m3*x2*y2+c1*cp2*cp3*m3*x2*y2+c2*cp1*m1*m3*x2*y2+c2*cp1*cp2*m1*m3*x2*y2+c3*cp1*cp2*m1*m3*x2*y2+c2*cp1*cp3*m1*m3*x2*y2+cp1*cp2*cp3*m1*m3*x2*y2+cp1*m2*m3*x2*y2+c3*cp1*m2*m3*x2*y2+cp1*cp3*m2*m3*x2*y2+c3*cp1*cp3*m2*m3*x2*y2+c1*cp2*cp3*m2*m3*x2*y2+cp1*cp2*cp3*m2*m3*x2*y2+cp1*cp2*cp3*m1*m2*m3*x2*y2+c1*c2*m1*x3*y2+c1*c3*m1*x3*y2+c2*cp1*m1*x3*y2+c3*cp1*m1*x3*y2+c1*c2*cp2*m1*x3*y2+c1*c3*cp2*m1*x3*y2+c2*cp1*cp2*m1*x3*y2+c3*cp1*cp2*m1*x3*y2+c1*c2*cp3*m1*x3*y2+c1*c3*cp3*m1*x3*y2+c2*cp1*cp3*m1*x3*y2+c3*cp1*cp3*m1*x3*y2+c1*cp2*cp3*m1*m2*x3*y2+cp1*cp2*cp3*m1*m2*x3*y2+c1*c2*m3*x3*y2+c1*cp2*m3*x3*y2+c1*c2*cp2*m3*x3*y2+c1*c3*cp2*m3*x3*y2+c1*cp1*cp2*m3*x3*y2+c2*cp1*cp2*m3*x3*y2+c3*cp1*cp2*m3*x3*y2+c1*c2*cp3*m3*x3*y2+c1*cp2*cp3*m3*x3*y2+c2*cp1*m1*m3*x3*y2+c2*cp1*cp2*m1*m3*x3*y2+c3*cp1*cp2*m1*m3*x3*y2+c2*cp1*cp3*m1*m3*x3*y2+cp1*cp2*cp3*m1*m3*x3*y2+c1*cp2*cp3*m2*m3*x3*y2+cp1*cp2*cp3*m2*m3*x3*y2+cp1*cp2*cp3*m1*m2*m3*x3*y2+c1*c3*y1*y2+c3*cp1*y1*y2+c3*cp2*y1*y2+c1*c3*cp2*y1*y2+c3*cp1*cp2*y1*y2+c2*cp3*y1*y2+c1*c2*cp3*y1*y2+c1*c3*cp3*y1*y2+c1*cp1*cp3*y1*y2+c2*cp1*cp3*y1*y2+c3*cp1*cp3*y1*y2+c1*c3*m2*y1*y2+c3*cp1*m2*y1*y2+c3*cp2*m2*y1*y2+c1*c3*cp2*m2*y1*y2+c3*cp1*cp2*m2*y1*y2+cp3*m2*y1*y2+c2*cp3*m2*y1*y2+c1*c2*cp3*m2*y1*y2+c3*cp3*m2*y1*y2+c1*c3*cp3*m2*y1*y2+c1*cp1*cp3*m2*y1*y2+c2*cp1*cp3*m2*y1*y2+c3*cp1*cp3*m2*y1*y2+c1*c2*m3*y1*y2+c2*c3*m3*y1*y2+cp1*m3*y1*y2+cp2*m3*y1*y2+c1*cp2*m3*y1*y2+c1*c2*cp2*m3*y1*y2+c1*c3*cp2*m3*y1*y2+c1*cp1*cp2*m3*y1*y2+c2*cp1*cp2*m3*y1*y2+c3*cp1*cp2*m3*y1*y2+c2*cp3*m3*y1*y2+c1*c2*cp3*m3*y1*y2+c2*c3*cp3*m3*y1*y2+c1*cp2*cp3*m3*y1*y2+c2*cp2*cp3*m3*y1*y2+c3*cp2*cp3*m3*y1*y2+c3*cp1*m1*m3*y1*y2+cp1*cp2*m1*m3*y1*y2+cp1*cp3*m1*m3*y1*y2+c3*cp1*cp3*m1*m3*y1*y2+cp1*cp2*cp3*m1*m3*y1*y2+cp1*m2*m3*y1*y2+c3*cp1*m2*m3*y1*y2+cp2*m2*m3*y1*y2+c3*cp2*m2*m3*y1*y2+cp3*m2*m3*y1*y2+cp1*cp3*m2*m3*y1*y2+c3*cp1*cp3*m2*m3*y1*y2+c1*cp2*cp3*m2*m3*y1*y2+c3*cp2*cp3*m2*m3*y1*y2+cp1*cp2*cp3*m2*m3*y1*y2+(1/2)*c1*c3*y2*(1+y2)+(1/2)*c3*cp1*y2*(1+y2)+(1/2)*c1*c3*cp2*y2*(1+y2)+(1/2)*c3*cp1*cp2*y2*(1+y2)+(1/2)*c1*c2*cp3*y2*(1+y2)+(1/2)*c1*c3*cp3*y2*(1+y2)+(1/2)*c1*cp1*cp3*y2*(1+y2)+(1/2)*c2*cp1*cp3*y2*(1+y2)+(1/2)*c3*cp1*cp3*y2*(1+y2)+(1/2)*c1*c3*m1*y2*(1+y2)+(1/2)*c1*c3*cp2*m1*y2*(1+y2)+(1/2)*c1*c2*cp3*m1*y2*(1+y2)+(1/2)*c1*c3*cp3*m1*y2*(1+y2)+(1/2)*cp1*cp3*m1*y2*(1+y2)+(1/2)*c1*c3*m2*y2*(1+y2)+(1/2)*c3*cp1*m2*y2*(1+y2)+(1/2)*c1*c3*cp2*m2*y2*(1+y2)+(1/2)*c3*cp1*cp2*m2*y2*(1+y2)+(1/2)*c1*c2*cp3*m2*y2*(1+y2)+(1/2)*c1*c3*cp3*m2*y2*(1+y2)+(1/2)*c1*cp1*cp3*m2*y2*(1+y2)+(1/2)*c2*cp1*cp3*m2*y2*(1+y2)+(1/2)*c3*cp1*cp3*m2*y2*(1+y2)+(1/2)*c3*cp1*m1*m2*y2*(1+y2)+(1/2)*c3*cp1*cp2*m1*m2*y2*(1+y2)+(1/2)*cp1*cp3*m1*m2*y2*(1+y2)+(1/2)*c2*cp1*cp3*m1*m2*y2*(1+y2)+(1/2)*c3*cp1*cp3*m1*m2*y2*(1+y2)+(1/2)*c1*cp2*cp3*m1*m2*y2*(1+y2)+(1/2)*cp1*cp2*cp3*m1*m2*y2*(1+y2)+(1/2)*c1*c2*m3*y2*(1+y2)+(1/2)*cp1*m3*y2*(1+y2)+(1/2)*c1*cp2*m3*y2*(1+y2)+(1/2)*c1*c2*cp2*m3*y2*(1+y2)+(1/2)*c1*c3*cp2*m3*y2*(1+y2)+(1/2)*c1*cp1*cp2*m3*y2*(1+y2)+(1/2)*c2*cp1*cp2*m3*y2*(1+y2)+(1/2)*c3*cp1*cp2*m3*y2*(1+y2)+(1/2)*c1*c2*cp3*m3*y2*(1+y2)+(1/2)*c1*cp2*cp3*m3*y2*(1+y2)+(1/2)*c2*cp1*m1*m3*y2*(1+y2)+(1/2)*c2*cp1*cp2*m1*m3*y2*(1+y2)+(1/2)*c3*cp1*cp2*m1*m3*y2*(1+y2)+(1/2)*c2*cp1*cp3*m1*m3*y2*(1+y2)+(1/2)*cp1*cp2*cp3*m1*m3*y2*(1+y2)+(1/2)*cp1*m2*m3*y2*(1+y2)+(1/2)*c3*cp1*m2*m3*y2*(1+y2)+(1/2)*cp1*cp3*m2*m3*y2*(1+y2)+(1/2)*c3*cp1*cp3*m2*m3*y2*(1+y2)+(1/2)*c1*cp2*cp3*m2*m3*y2*(1+y2)+(1/2)*cp1*cp2*cp3*m2*m3*y2*(1+y2)+(1/2)*cp1*cp2*cp3*m1*m2*m3*y2*(1+y2)+c1*c2*c3*y3+c1*c2*cp1*y3+c1*c2*cp2*y3+c1*c2*c3*cp2*y3+c1*cp1*cp2*y3+c1*c2*cp1*cp2*y3+c1*c3*cp1*cp2*y3+c2*c3*cp1*cp2*y3+c1*c2*cp3*y3+c1*c2*c3*cp3*y3+c1*c2*cp1*cp3*y3+c1*cp2*cp3*y3+c1*c2*cp2*cp3*y3+c1*c2*c3*cp2*cp3*y3+cp1*cp2*cp3*y3+c1*cp1*cp2*cp3*y3+c3*cp1*cp2*cp3*y3+c2*c3*cp1*cp2*cp3*y3+c1*c2*m1*y3+c1*c2*c3*m1*y3+c2*c3*cp1*m1*y3+c1*c2*cp2*m1*y3+c1*c3*cp2*m1*y3+c1*c2*c3*cp2*m1*y3+c1*cp1*cp2*m1*y3+c2*cp1*cp2*m1*y3+c3*cp1*cp2*m1*y3+c1*c2*cp3*m1*y3+c1*c2*c3*cp3*m1*y3+c2*cp1*cp3*m1*y3+c2*c3*cp1*cp3*m1*y3+c1*cp2*cp3*m1*y3+c1*c3*cp2*cp3*m1*y3+cp1*cp2*cp3*m1*y3+c1*cp1*cp2*cp3*m1*y3+c3*cp1*cp2*cp3*m1*y3+c2*c3*cp1*cp2*cp3*m1*y3+c2*cp1*cp2*m2*y3+c3*cp1*cp2*m2*y3+c2*cp1*cp3*m2*y3+c1*cp2*cp3*m2*y3+c1*c2*cp2*cp3*m2*y3+c1*c3*cp2*cp3*m2*y3+cp1*cp2*cp3*m2*y3+c2*cp1*cp2*cp3*m2*y3+c3*cp1*cp2*cp3*m2*y3+c2*cp1*m1*m2*y3+cp2*m1*m2*y3+c3*cp2*m1*m2*y3+c2*cp1*cp2*m1*m2*y3+c3*cp1*cp2*m1*m2*y3+c2*cp1*cp3*m1*m2*y3+c1*c2*cp2*cp3*m1*m2*y3+c3*cp2*cp3*m1*m2*y3+cp1*cp2*cp3*m1*m2*y3+c3*cp1*cp2*cp3*m1*m2*y3+c1*c2*c3*m3*y3+c1*c2*cp1*m3*y3+c1*c2*cp2*m3*y3+c1*c2*c3*cp2*m3*y3+c1*cp1*cp2*m3*y3+c1*c2*cp1*cp2*m3*y3+c1*c3*cp1*cp2*m3*y3+c2*c3*cp1*cp2*m3*y3+c1*c2*cp3*m3*y3+c1*c2*c3*cp3*m3*y3+c1*c2*cp1*cp3*m3*y3+c1*cp2*cp3*m3*y3+cp1*cp2*cp3*m3*y3+c2*cp1*cp2*cp3*m3*y3+c3*cp1*cp2*cp3*m3*y3+c1*c3*cp1*cp2*cp3*m3*y3+c1*c3*cp2*m1*m3*y3+cp1*cp2*m1*m3*y3+c1*cp1*cp2*m1*m3*y3+c3*cp1*cp2*m1*m3*y3+c2*c3*cp1*cp2*m1*m3*y3+c1*cp2*cp3*m1*m3*y3+c1*c3*cp2*cp3*m1*m3*y3+c1*cp1*cp2*cp3*m1*m3*y3+c2*cp1*cp2*cp3*m1*m3*y3+c2*cp1*m2*m3*y3+c2*cp1*cp2*m2*m3*y3+c3*cp1*cp2*m2*m3*y3+c2*cp1*cp3*m2*m3*y3+c1*c2*cp2*cp3*m2*m3*y3+c2*cp1*cp2*cp3*m2*m3*y3+c2*cp1*m1*m2*m3*y3+c3*cp2*m1*m2*m3*y3+cp1*cp2*m1*m2*m3*y3+c2*cp1*cp2*m1*m2*m3*y3+c3*cp1*cp2*m1*m2*m3*y3+c2*cp1*cp3*m1*m2*m3*y3+cp2*cp3*m1*m2*m3*y3+c3*cp2*cp3*m1*m2*m3*y3+c2*cp1*cp2*cp3*m1*m2*m3*y3+c1*c2*x1*y3+c2*c3*x1*y3+c2*cp1*x1*y3+c1*cp2*x1*y3+c1*c2*cp2*x1*y3+c3*cp2*x1*y3+c1*c3*cp2*x1*y3+cp1*cp2*x1*y3+c1*cp1*cp2*x1*y3+c2*cp3*x1*y3+c1*c2*cp3*x1*y3+c2*c3*cp3*x1*y3+c2*cp1*cp3*x1*y3+cp2*cp3*x1*y3+c1*cp2*cp3*x1*y3+c2*cp2*cp3*x1*y3+c3*cp2*m1*x1*y3+cp1*cp2*m1*x1*y3+cp2*cp3*m1*x1*y3+c3*cp2*cp3*m1*x1*y3+cp1*cp2*cp3*m1*x1*y3+cp2*cp3*m2*x1*y3+c1*cp2*cp3*m2*x1*y3+c1*c2*m3*x1*y3+c2*c3*m3*x1*y3+c2*cp1*m3*x1*y3+c1*cp2*m3*x1*y3+c1*c2*cp2*m3*x1*y3+c3*cp2*m3*x1*y3+c1*c3*cp2*m3*x1*y3+cp1*cp2*m3*x1*y3+c1*cp1*cp2*m3*x1*y3+c2*cp3*m3*x1*y3+c1*c2*cp3*m3*x1*y3+c2*c3*cp3*m3*x1*y3+c2*cp1*cp3*m3*x1*y3+cp2*cp3*m3*x1*y3+c1*cp2*cp3*m3*x1*y3+c2*cp2*cp3*m3*x1*y3+c3*cp2*m1*m3*x1*y3+cp1*cp2*m1*m3*x1*y3+cp2*cp3*m1*m3*x1*y3+c3*cp2*cp3*m1*m3*x1*y3+cp1*cp2*cp3*m1*m3*x1*y3+cp2*cp3*m2*m3*x1*y3+c1*cp2*cp3*m2*m3*x1*y3+c1*c3*x2*y3+cp1*x2*y3+c1*cp1*x2*y3+c2*cp1*x2*y3+c1*cp2*x2*y3+c1*c3*cp3*x2*y3+cp1*cp3*x2*y3+c1*cp1*cp3*x2*y3+c2*cp1*cp3*x2*y3+c1*cp2*cp3*x2*y3+m1*x2*y3+c1*c2*m1*x2*y3+c1*c3*m1*x2*y3+cp1*m1*x2*y3+c2*cp1*m1*x2*y3+c1*c2*cp2*m1*x2*y3+c1*c3*cp2*m1*x2*y3+cp1*cp2*m1*x2*y3+c2*cp1*cp2*m1*x2*y3+c3*cp1*cp2*m1*x2*y3+c1*c2*cp3*m1*x2*y3+c1*c3*cp3*m1*x2*y3+cp1*cp3*m1*x2*y3+c2*cp1*cp3*m1*x2*y3+cp1*cp2*cp3*m1*x2*y3+c1*cp2*cp3*m1*m2*x2*y3+cp1*cp2*cp3*m1*m2*x2*y3+c1*c2*m3*x2*y3+cp1*m3*x2*y3+c3*cp1*m3*x2*y3+c1*cp2*m3*x2*y3+c1*c2*cp2*m3*x2*y3+c1*c3*cp2*m3*x2*y3+c1*cp1*cp2*m3*x2*y3+c2*cp1*cp2*m3*x2*y3+c3*cp1*cp2*m3*x2*y3+c1*c2*cp3*m3*x2*y3+cp1*cp3*m3*x2*y3+c3*cp1*cp3*m3*x2*y3+c1*cp2*cp3*m3*x2*y3+c2*cp1*m1*m3*x2*y3+c2*cp1*cp2*m1*m3*x2*y3+c3*cp1*cp2*m1*m3*x2*y3+c2*cp1*cp3*m1*m3*x2*y3+cp1*cp2*cp3*m1*m3*x2*y3+c1*cp2*cp3*m2*m3*x2*y3+cp1*cp2*cp3*m2*m3*x2*y3+cp1*cp2*cp3*m1*m2*m3*x2*y3+c1*c2*m1*x3*y3+c2*c3*m1*x3*y3+c2*cp1*m1*x3*y3+c1*c2*cp2*m1*x3*y3+c1*c3*cp2*m1*x3*y3+c2*cp1*cp2*m1*x3*y3+c3*cp1*cp2*m1*x3*y3+c1*c2*cp3*m1*x3*y3+c2*c3*cp3*m1*x3*y3+c2*cp1*cp3*m1*x3*y3+c1*c2*m2*x3*y3+c1*cp1*m2*x3*y3+c2*cp1*m2*x3*y3+c1*c2*cp2*m2*x3*y3+c1*c3*cp2*m2*x3*y3+c1*cp1*cp2*m2*x3*y3+c2*cp1*cp2*m2*x3*y3+c3*cp1*cp2*m2*x3*y3+c1*c2*cp3*m2*x3*y3+c1*cp1*cp3*m2*x3*y3+c2*cp1*cp3*m2*x3*y3+c1*cp2*cp3*m2*x3*y3+cp1*cp2*cp3*m2*x3*y3+m1*m2*x3*y3+cp1*m1*m2*x3*y3+c2*cp1*m1*m2*x3*y3+c3*cp1*m1*m2*x3*y3+c3*cp2*m1*m2*x3*y3+cp1*cp2*m1*m2*x3*y3+c2*cp1*cp2*m1*m2*x3*y3+c3*cp1*cp2*m1*m2*x3*y3+cp1*cp3*m1*m2*x3*y3+c2*cp1*cp3*m1*m2*x3*y3+c3*cp1*cp3*m1*m2*x3*y3+c1*cp2*cp3*m1*m2*x3*y3+c3*cp2*cp3*m1*m2*x3*y3+c1*c2*m3*x3*y3+c1*cp2*m3*x3*y3+c1*c2*cp2*m3*x3*y3+c1*c3*cp2*m3*x3*y3+c1*cp1*cp2*m3*x3*y3+c2*cp1*cp2*m3*x3*y3+c3*cp1*cp2*m3*x3*y3+c1*c2*cp3*m3*x3*y3+c1*cp2*cp3*m3*x3*y3+c2*cp1*m1*m3*x3*y3+c2*cp1*cp2*m1*m3*x3*y3+c3*cp1*cp2*m1*m3*x3*y3+c2*cp1*cp3*m1*m3*x3*y3+cp1*cp2*cp3*m1*m3*x3*y3+cp1*m2*m3*x3*y3+c3*cp1*m2*m3*x3*y3+cp1*cp3*m2*m3*x3*y3+c3*cp1*cp3*m2*m3*x3*y3+c1*cp2*cp3*m2*m3*x3*y3+cp1*cp2*cp3*m2*m3*x3*y3+cp1*cp2*cp3*m1*m2*m3*x3*y3+c1*c2*y1*y3+c2*c3*y1*y3+c1*cp2*y1*y3+c1*c2*cp2*y1*y3+c1*c3*cp2*y1*y3+c1*cp1*cp2*y1*y3+c2*cp1*cp2*y1*y3+c3*cp1*cp2*y1*y3+c2*cp3*y1*y3+c1*c2*cp3*y1*y3+c2*c3*cp3*y1*y3+c1*cp2*cp3*y1*y3+c2*cp2*cp3*y1*y3+c3*cp2*cp3*y1*y3+c3*cp2*m1*y1*y3+cp1*cp2*m1*y1*y3+cp2*cp3*m1*y1*y3+c3*cp2*cp3*m1*y1*y3+cp1*cp2*cp3*m1*y1*y3+cp2*cp3*m2*y1*y3+c1*cp2*cp3*m2*y1*y3+cp1*cp2*cp3*m2*y1*y3+c1*c2*m3*y1*y3+c2*c3*m3*y1*y3+c1*cp2*m3*y1*y3+c1*c2*cp2*m3*y1*y3+c1*c3*cp2*m3*y1*y3+c1*cp1*cp2*m3*y1*y3+c2*cp1*cp2*m3*y1*y3+c3*cp1*cp2*m3*y1*y3+c2*cp3*m3*y1*y3+c1*c2*cp3*m3*y1*y3+c2*c3*cp3*m3*y1*y3+c1*cp2*cp3*m3*y1*y3+c2*cp2*cp3*m3*y1*y3+c3*cp2*cp3*m3*y1*y3+c3*cp2*m1*m3*y1*y3+cp1*cp2*m1*m3*y1*y3+cp2*cp3*m1*m3*y1*y3+c3*cp2*cp3*m1*m3*y1*y3+cp1*cp2*cp3*m1*m3*y1*y3+cp2*cp3*m2*m3*y1*y3+c1*cp2*cp3*m2*m3*y1*y3+cp1*cp2*cp3*m2*m3*y1*y3+c1*c2*y2*y3+c1*cp2*y2*y3+c1*c2*cp2*y2*y3+c1*c3*cp2*y2*y3+c1*cp1*cp2*y2*y3+c2*cp1*cp2*y2*y3+c3*cp1*cp2*y2*y3+c1*c2*cp3*y2*y3+c1*cp2*cp3*y2*y3+c1*c2*m1*y2*y3+c1*c3*m1*y2*y3+c3*cp1*m1*y2*y3+c1*c2*cp2*m1*y2*y3+c1*c3*cp2*m1*y2*y3+c1*c2*cp3*m1*y2*y3+c1*c3*cp3*m1*y2*y3+c3*cp1*cp3*m1*y2*y3+cp1*cp2*cp3*m1*y2*y3+c1*cp2*cp3*m2*y2*y3+cp1*cp2*cp3*m2*y2*y3+c1*cp2*cp3*m1*m2*y2*y3+c1*c2*m3*y2*y3+c1*cp2*m3*y2*y3+c1*c2*cp2*m3*y2*y3+c1*c3*cp2*m3*y2*y3+c1*cp1*cp2*m3*y2*y3+c2*cp1*cp2*m3*y2*y3+c3*cp1*cp2*m3*y2*y3+c1*c2*cp3*m3*y2*y3+c1*cp2*cp3*m3*y2*y3+c2*cp1*m1*m3*y2*y3+c2*cp1*cp2*m1*m3*y2*y3+c3*cp1*cp2*m1*m3*y2*y3+c2*cp1*cp3*m1*m3*y2*y3+cp1*cp2*cp3*m1*m3*y2*y3+c1*cp2*cp3*m2*m3*y2*y3+cp1*cp2*cp3*m2*m3*y2*y3+cp1*cp2*cp3*m1*m2*m3*y2*y3+(1/2)*c1*c2*y3*(1+y3)+(1/2)*c1*cp2*y3*(1+y3)+(1/2)*c1*c2*cp2*y3*(1+y3)+(1/2)*c1*c3*cp2*y3*(1+y3)+(1/2)*c1*cp1*cp2*y3*(1+y3)+(1/2)*c2*cp1*cp2*y3*(1+y3)+(1/2)*c3*cp1*cp2*y3*(1+y3)+(1/2)*c1*c2*cp3*y3*(1+y3)+(1/2)*c1*cp2*cp3*y3*(1+y3)+(1/2)*c1*c2*m1*y3*(1+y3)+(1/2)*c2*c3*m1*y3*(1+y3)+(1/2)*c1*c2*cp2*m1*y3*(1+y3)+(1/2)*c1*c3*cp2*m1*y3*(1+y3)+(1/2)*c1*c2*cp3*m1*y3*(1+y3)+(1/2)*c2*c3*cp3*m1*y3*(1+y3)+(1/2)*cp1*cp2*cp3*m1*y3*(1+y3)+(1/2)*c1*c2*m2*y3*(1+y3)+(1/2)*cp1*m2*y3*(1+y3)+(1/2)*c1*cp1*m2*y3*(1+y3)+(1/2)*c2*cp1*m2*y3*(1+y3)+(1/2)*c3*cp1*m2*y3*(1+y3)+(1/2)*c1*c2*cp2*m2*y3*(1+y3)+(1/2)*c1*c3*cp2*m2*y3*(1+y3)+(1/2)*c1*cp1*cp2*m2*y3*(1+y3)+(1/2)*c2*cp1*cp2*m2*y3*(1+y3)+(1/2)*c3*cp1*cp2*m2*y3*(1+y3)+(1/2)*c1*c2*cp3*m2*y3*(1+y3)+(1/2)*cp1*cp3*m2*y3*(1+y3)+(1/2)*c1*cp1*cp3*m2*y3*(1+y3)+(1/2)*c2*cp1*cp3*m2*y3*(1+y3)+(1/2)*c3*cp1*cp3*m2*y3*(1+y3)+(1/2)*m1*m2*y3*(1+y3)+(1/2)*cp1*m1*m2*y3*(1+y3)+(1/2)*c2*cp1*m1*m2*y3*(1+y3)+(1/2)*c3*cp1*m1*m2*y3*(1+y3)+(1/2)*c3*cp2*m1*m2*y3*(1+y3)+(1/2)*cp1*cp2*m1*m2*y3*(1+y3)+(1/2)*c2*cp1*cp2*m1*m2*y3*(1+y3)+(1/2)*c3*cp1*cp2*m1*m2*y3*(1+y3)+(1/2)*cp1*cp3*m1*m2*y3*(1+y3)+(1/2)*c2*cp1*cp3*m1*m2*y3*(1+y3)+(1/2)*c3*cp1*cp3*m1*m2*y3*(1+y3)+(1/2)*c1*cp2*cp3*m1*m2*y3*(1+y3)+(1/2)*c3*cp2*cp3*m1*m2*y3*(1+y3)+(1/2)*cp1*cp2*cp3*m1*m2*y3*(1+y3)+(1/2)*c1*c2*m3*y3*(1+y3)+(1/2)*c1*cp2*m3*y3*(1+y3)+(1/2)*c1*c2*cp2*m3*y3*(1+y3)+(1/2)*c1*c3*cp2*m3*y3*(1+y3)+(1/2)*c1*cp1*cp2*m3*y3*(1+y3)+(1/2)*c2*cp1*cp2*m3*y3*(1+y3)+(1/2)*c3*cp1*cp2*m3*y3*(1+y3)+(1/2)*c1*c2*cp3*m3*y3*(1+y3)+(1/2)*c1*cp2*cp3*m3*y3*(1+y3)+(1/2)*c2*cp1*m1*m3*y3*(1+y3)+(1/2)*c2*cp1*cp2*m1*m3*y3*(1+y3)+(1/2)*c3*cp1*cp2*m1*m3*y3*(1+y3)+(1/2)*c2*cp1*cp3*m1*m3*y3*(1+y3)+(1/2)*cp1*cp2*cp3*m1*m3*y3*(1+y3)+(1/2)*cp1*m2*m3*y3*(1+y3)+(1/2)*c3*cp1*m2*m3*y3*(1+y3)+(1/2)*cp1*cp3*m2*m3*y3*(1+y3)+(1/2)*c3*cp1*cp3*m2*m3*y3*(1+y3)+(1/2)*c1*cp2*cp3*m2*m3*y3*(1+y3)+(1/2)*cp1*cp2*cp3*m2*m3*y3*(1+y3)+(1/2)*cp1*cp2*cp3*m1*m2*m3*y3*(1+y3)+c1*c2*cp3*z1+c2*c3*cp3*z1+c1*cp2*cp3*z1+c2*cp2*cp3*z1+c3*cp2*cp3*z1+c1*c3*cp2*cp3*z1+c3*cp1*cp2*cp3*z1+c2*cp1*cp3*m1*z1+cp2*cp3*m1*z1+cp1*cp2*cp3*m1*z1+c3*cp1*cp2*cp3*m1*z1+c3*cp2*m2*z1+c1*c3*cp2*m2*z1+c1*cp1*cp3*m2*z1+c2*cp1*cp3*m2*z1+cp2*cp3*m2*z1+c1*cp2*cp3*m2*z1+c3*cp2*cp3*m2*z1+c1*c3*cp2*cp3*m2*z1+c3*cp1*cp2*cp3*m2*z1+c3*m1*m2*z1+c3*cp2*m1*m2*z1+c3*cp1*cp2*m1*m2*z1+cp1*cp3*m1*m2*z1+cp2*cp3*m1*m2*z1+cp1*cp2*cp3*m1*m2*z1+c3*cp1*cp2*cp3*m1*m2*z1+c2*m3*z1+c1*cp2*m3*z1+c3*cp2*m3*z1+c1*c3*cp2*m3*z1+cp1*cp2*m3*z1+c1*cp1*cp2*m3*z1+c2*cp1*cp2*m3*z1+c2*cp3*m3*z1+c1*cp2*cp3*m3*z1+c2*cp2*cp3*m3*z1+c3*cp2*cp3*m3*z1+c1*c3*cp2*cp3*m3*z1+c3*cp1*cp2*cp3*m3*z1+c3*cp2*m1*m3*z1+c3*cp1*cp2*m1*m3*z1+cp1*cp2*cp3*m1*m3*z1+c3*cp1*cp2*cp3*m1*m3*z1+c3*m2*m3*z1+c1*cp2*m2*m3*z1+c1*c3*cp2*m2*m3*z1+cp1*cp2*m2*m3*z1+c3*cp1*cp2*m2*m3*z1+cp3*m2*m3*z1+c1*cp3*m2*m3*z1+c1*c3*cp3*m2*m3*z1+c3*cp1*cp3*m2*m3*z1+cp2*cp3*m2*m3*z1+cp1*cp2*cp3*m2*m3*z1+c3*m1*m2*m3*z1+cp1*cp2*m1*m2*m3*z1+c3*cp1*cp2*m1*m2*m3*z1+cp3*m1*m2*m3*z1+cp1*cp3*m1*m2*m3*z1+c3*cp1*cp3*m1*m2*m3*z1+cp2*cp3*m1*m2*m3*z1+c1*cp3*x2*z1+cp1*cp3*x2*z1+cp1*cp3*m1*x2*z1+c1*cp3*m2*x2*z1+cp1*cp3*m2*x2*z1+cp1*cp3*m1*m2*x2*z1+m3*x2*z1+c1*cp2*m3*x2*z1+cp1*cp2*m3*x2*z1+c1*cp3*m3*x2*z1+cp1*cp3*m3*x2*z1+cp1*cp2*m1*m3*x2*z1+cp1*cp3*m1*m3*x2*z1+c1*cp2*x3*z1+cp1*cp2*x3*z1+c2*cp3*x3*z1+cp2*cp3*x3*z1+cp1*cp2*m1*x3*z1+m2*x3*z1+c1*cp2*m2*x3*z1+cp1*cp2*m2*x3*z1+c1*cp3*m2*x3*z1+cp2*cp3*m2*x3*z1+m1*m2*x3*z1+cp1*cp2*m1*m2*x3*z1+cp1*cp3*m1*m2*x3*z1+c1*cp2*m3*x3*z1+cp1*cp2*m3*x3*z1+c2*cp3*m3*x3*z1+cp2*cp3*m3*x3*z1+cp1*cp2*m1*m3*x3*z1+m2*m3*x3*z1+c1*cp2*m2*m3*x3*z1+cp1*cp2*m2*m3*x3*z1+c1*cp3*m2*m3*x3*z1+cp2*cp3*m2*m3*x3*z1+m1*m2*m3*x3*z1+cp1*cp2*m1*m2*m3*x3*z1+cp1*cp3*m1*m2*m3*x3*z1+m1*m3*y2*z1+c1*cp2*m2*m3*y3*z1+cp1*cp2*m2*m3*y3*z1+c1*cp3*m2*m3*y3*z1+cp1*cp3*m2*m3*y3*z1+m1*m2*m3*y3*z1+cp1*cp2*m1*m2*m3*y3*z1+cp1*cp3*m1*m2*m3*y3*z1+c1*c2*cp3*z2+c1*cp2*cp3*z2+c1*c3*cp2*cp3*z2+c3*cp1*cp2*cp3*z2+c1*c3*cp2*m1*z2+c2*cp1*cp3*m1*z2+c1*c3*cp2*cp3*m1*z2+cp1*cp2*cp3*m1*z2+c3*cp1*cp2*cp3*m1*z2+c1*c3*cp2*m2*z2+c1*cp1*cp3*m2*z2+c2*cp1*cp3*m2*z2+c1*cp2*cp3*m2*z2+c1*c3*cp2*cp3*m2*z2+c3*cp1*cp2*cp3*m2*z2+c1*c3*cp2*m1*m2*z2+c3*cp1*cp2*m1*m2*z2+c1*cp3*m1*m2*z2+c1*c3*cp3*m1*m2*z2+c3*cp1*cp3*m1*m2*z2+c1*cp2*cp3*m1*m2*z2+c1*cp2*m3*z2+c1*c3*cp2*m3*z2+cp1*cp2*m3*z2+c1*cp1*cp2*m3*z2+c2*cp1*cp2*m3*z2+c1*cp2*cp3*m3*z2+c1*c3*cp2*cp3*m3*z2+c3*cp1*cp2*cp3*m3*z2+cp1*cp2*cp3*m1*m3*z2+c1*cp2*m2*m3*z2+c1*c3*cp2*m2*m3*z2+cp1*cp2*m2*m3*z2+c3*cp1*cp2*m2*m3*z2+c1*cp3*m2*m3*z2+c1*c3*cp3*m2*m3*z2+c3*cp1*cp3*m2*m3*z2+cp1*cp2*cp3*m2*m3*z2+c1*cp2*m1*m2*m3*z2+cp1*cp2*m1*m2*m3*z2+c1*cp2*cp3*m1*m2*m3*z2+cp1*cp2*cp3*m1*m2*m3*z2+c1*cp3*x2*z2+cp1*cp3*x2*z2+c1*cp3*m1*x2*z2+cp1*cp3*m1*x2*z2+c1*cp3*m2*x2*z2+cp1*cp3*m2*x2*z2+c1*cp3*m1*m2*x2*z2+cp1*cp3*m1*m2*x2*z2+c1*cp2*m3*x2*z2+cp1*cp2*m3*x2*z2+c1*cp3*m3*x2*z2+cp1*cp3*m3*x2*z2+c1*cp2*m1*m3*x2*z2+cp1*cp2*m1*m3*x2*z2+c1*cp3*m1*m3*x2*z2+cp1*cp3*m1*m3*x2*z2+c1*cp2*x3*z2+cp1*cp2*x3*z2+m1*x3*z2+c1*cp2*m1*x3*z2+cp1*cp2*m1*x3*z2+c1*cp3*m1*x3*z2+c1*cp2*m2*x3*z2+cp1*cp2*m2*x3*z2+c1*cp3*m2*x3*z2+c1*cp2*m3*x3*z2+cp1*cp2*m3*x3*z2+c1*cp2*m1*m3*x3*z2+cp1*cp2*m1*m3*x3*z2+c1*cp3*m1*m3*x3*z2+c1*cp2*m2*m3*x3*z2+cp1*cp2*m2*m3*x3*z2+c1*cp3*m2*m3*x3*z2+c1*cp3*m1*m2*y2*z2+cp1*cp3*m1*m2*y2*z2+c1*cp2*m1*m3*y2*z2+cp1*cp2*m1*m3*y2*z2+c1*cp3*m1*m3*y2*z2+cp1*cp3*m1*m3*y2*z2+m1*y3*z2+m1*m3*y3*z2+c1*cp2*m1*m3*y3*z2+cp1*cp2*m1*m3*y3*z2+c1*cp3*m1*m3*y3*z2+cp1*cp3*m1*m3*y3*z2+c1*cp2*m2*m3*y3*z2+cp1*cp2*m2*m3*y3*z2+c1*cp3*m2*m3*y3*z2+cp1*cp3*m2*m3*y3*z2+c1*c2*cp2*z3+c1*cp1*cp2*z3+c2*cp1*cp2*z3+c1*c2*cp3*z3+c1*cp2*cp3*z3+c1*c3*cp2*cp3*z3+c3*cp1*cp2*cp3*z3+c1*c3*cp2*m1*z3+cp1*cp2*m1*z3+c2*cp1*cp2*m1*z3+c2*cp1*cp3*m1*z3+c1*c3*cp2*cp3*m1*z3+cp1*cp2*cp3*m1*z3+c3*cp1*cp2*cp3*m1*z3+c1*cp2*m2*z3+c1*c3*cp2*m2*z3+cp1*cp2*m2*z3+c1*cp1*cp2*m2*z3+c2*cp1*cp2*m2*z3+c1*cp1*cp3*m2*z3+c2*cp1*cp3*m2*z3+c1*cp2*cp3*m2*z3+c1*c3*cp2*cp3*m2*z3+c3*cp1*cp2*cp3*m2*z3+c1*c3*cp2*m1*m2*z3+c3*cp1*cp2*m1*m2*z3+c1*cp3*m1*m2*z3+c1*c3*cp3*m1*m2*z3+c3*cp1*cp3*m1*m2*z3+c1*cp2*cp3*m1*m2*z3+c1*cp2*m3*z3+c1*c3*cp2*m3*z3+cp1*cp2*m3*z3+c1*cp1*cp2*m3*z3+c2*cp1*cp2*m3*z3+c1*cp2*cp3*m3*z3+c1*c3*cp2*cp3*m3*z3+c3*cp1*cp2*cp3*m3*z3+cp1*cp2*cp3*m1*m3*z3+c1*cp2*m2*m3*z3+c1*c3*cp2*m2*m3*z3+cp1*cp2*m2*m3*z3+c3*cp1*cp2*m2*m3*z3+c1*cp3*m2*m3*z3+c1*c3*cp3*m2*m3*z3+c3*cp1*cp3*m2*m3*z3+cp1*cp2*cp3*m2*m3*z3+c1*cp2*m1*m2*m3*z3+cp1*cp2*m1*m2*m3*z3+c1*cp2*cp3*m1*m2*m3*z3+cp1*cp2*cp3*m1*m2*m3*z3+c1*cp2*x2*z3+cp1*cp2*x2*z3+c1*cp3*x2*z3+cp1*cp3*x2*z3+c1*cp2*m1*x2*z3+cp1*cp2*m1*x2*z3+c1*cp3*m1*x2*z3+cp1*cp3*m1*x2*z3+c1*cp2*m2*x2*z3+cp1*cp2*m2*x2*z3+c1*cp3*m2*x2*z3+cp1*cp3*m2*x2*z3+c1*cp2*m1*m2*x2*z3+cp1*cp2*m1*m2*x2*z3+c1*cp3*m1*m2*x2*z3+cp1*cp3*m1*m2*x2*z3+c1*cp2*m3*x2*z3+cp1*cp2*m3*x2*z3+c1*cp3*m3*x2*z3+cp1*cp3*m3*x2*z3+c1*cp2*m1*m3*x2*z3+cp1*cp2*m1*m3*x2*z3+c1*cp3*m1*m3*x2*z3+cp1*cp3*m1*m3*x2*z3+c1*cp2*x3*z3+cp1*cp2*x3*z3+c1*cp2*m1*x3*z3+cp1*cp2*m1*x3*z3+c2*cp3*m1*x3*z3+cp2*cp3*m1*x3*z3+c1*cp2*m2*x3*z3+cp1*cp2*m2*x3*z3+cp2*cp3*m1*m2*x3*z3+c1*cp2*m3*x3*z3+cp1*cp2*m3*x3*z3+c1*cp2*m1*m3*x3*z3+cp1*cp2*m1*m3*x3*z3+c2*cp3*m1*m3*x3*z3+cp2*cp3*m1*m3*x3*z3+c1*cp2*m2*m3*x3*z3+cp1*cp2*m2*m3*x3*z3+cp2*cp3*m1*m2*m3*x3*z3+c1*cp2*m1*m2*y2*z3+cp1*cp2*m1*m2*y2*z3+c1*cp3*m1*m2*y2*z3+cp1*cp3*m1*m2*y2*z3+c1*cp2*m1*m3*y2*z3+cp1*cp2*m1*m3*y2*z3+c1*cp3*m1*m3*y2*z3+cp1*cp3*m1*m3*y2*z3+c1*cp2*m1*m3*y3*z3+cp1*cp2*m1*m3*y3*z3+c2*cp3*m1*m3*y3*z3+c1*cp2*m2*m3*y3*z3+cp1*cp2*m2*m3*y3*z3+cp2*cp3*m1*m2*m3*y3*z3;
end;
#####################################################################
C2in106:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c2*c3+c1*c3*cp2*cp3+c3*cp1*cp2*cp3+c2*c3*cp1*m1+c1*c3*cp2*m1+c1*c3*cp2*cp3*m1+c3*cp1*cp2*cp3*m1+c1*c3*cp1*m2+c2*c3*cp1*m2+c1*c3*cp2*m2+c3*cp1*cp2*m2+c1*cp1*cp3*m2+c1*cp2*cp3*m2+c1*c3*cp2*cp3*m2+c3*cp1*cp2*cp3*m2+c1*c3*m1*m2+c2*c3*m1*m2+c3*cp1*m1*m2+c3*cp2*m1*m2+c1*c3*cp2*m1*m2+c3*cp1*cp2*m1*m2+c2*cp3*m1*m2+c1*c3*cp3*m1*m2+c2*c3*cp3*m1*m2+cp1*cp3*m1*m2+cp2*cp3*m1*m2+c3*cp2*cp3*m1*m2+c1*c3*cp2*cp3*m1*m2+cp1*cp2*cp3*m1*m2+c3*cp1*cp2*cp3*m1*m2+c1*c2*cp2*m3+c3*cp1*cp2*m3+c1*c2*cp3*m3+c1*c3*cp2*cp3*m3+c3*cp1*cp2*cp3*m3+c1*c3*cp2*m1*m3+c2*cp1*cp2*m1*m3+c2*cp1*cp3*m1*m3+c1*c3*cp2*cp3*m1*m3+c3*cp1*cp2*cp3*m1*m3+c1*m2*m3+c1*cp1*m2*m3+c2*cp1*m2*m3+c3*cp1*m2*m3+c1*cp2*m2*m3+c1*c2*cp2*m2*m3+c1*cp1*cp2*m2*m3+c2*cp1*cp2*m2*m3+c1*cp3*m2*m3+c1*c2*cp3*m2*m3+c1*c3*cp3*m2*m3+c1*cp1*cp3*m2*m3+c2*cp1*cp3*m2*m3+c1*c3*cp2*cp3*m2*m3+cp1*cp2*cp3*m2*m3+c3*cp1*cp2*cp3*m2*m3+c1*m1*m2*m3+c2*m1*m2*m3+c3*m1*m2*m3+cp2*m1*m2*m3+c1*c3*cp2*m1*m2*m3+c2*cp1*cp2*m1*m2*m3+c1*cp3*m1*m2*m3+c2*cp3*m1*m2*m3+cp1*cp3*m1*m2*m3+c1*cp1*cp3*m1*m2*m3+cp2*cp3*m1*m2*m3+c1*cp2*cp3*m1*m2*m3+c2*cp2*cp3*m1*m2*m3+c3*cp2*cp3*m1*m2*m3+c1*c3*cp2*cp3*m1*m2*m3+cp1*cp2*cp3*m1*m2*m3+c3*cp1*cp2*cp3*m1*m2*m3+cp3*m2*x1+cp3*m1*m2*x1+c1*cp3*x2+cp1*cp3*x2+c1*cp3*m1*x2+cp1*cp3*m1*x2+c1*cp3*m2*x2+cp1*cp3*m2*x2+c1*cp3*m1*m2*x2+cp1*cp3*m1*m2*x2+c1*cp2*m3*x2+cp1*cp2*m3*x2+c1*cp3*m3*x2+cp1*cp3*m3*x2+c1*cp2*m1*m3*x2+cp1*cp2*m1*m3*x2+c1*cp3*m1*m3*x2+cp1*cp3*m1*m3*x2+c1*cp2*m2*m3*x2+cp1*cp2*m2*m3*x2+c1*cp3*m2*m3*x2+cp1*cp3*m2*m3*x2+c1*cp2*m1*m2*m3*x2+cp1*cp2*m1*m2*m3*x2+c1*cp3*m1*m2*m3*x2+cp1*cp3*m1*m2*m3*x2+c1*cp2*x3+cp1*cp2*x3+c1*cp2*m1*x3+cp1*cp2*m1*x3+c2*cp3*m1*x3+cp2*cp3*m1*x3+c1*m2*x3+c1*cp2*m2*x3+cp1*cp2*m2*x3+c1*m1*m2*x3+c2*m1*m2*x3+c1*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+c2*cp3*m1*m2*x3+cp2*cp3*m1*m2*x3+c1*cp2*m3*x3+cp1*cp2*m3*x3+c1*cp2*m1*m3*x3+cp1*cp2*m1*m3*x3+c2*cp3*m1*m3*x3+cp2*cp3*m1*m3*x3+c1*cp2*m2*m3*x3+cp1*cp2*m2*m3*x3+m1*m2*m3*x3+c1*cp2*m1*m2*m3*x3+cp1*cp2*m1*m2*m3*x3+c2*cp3*m1*m2*m3*x3+cp2*cp3*m1*m2*m3*x3+cp3*m1*m2*y1+c2*c3*z1+c1*c3*cp2*z1+c2*cp3*z1+c1*c2*cp3*z1+c2*c3*cp3*z1+c1*cp2*cp3*z1+c1*c3*cp2*cp3*z1+cp1*cp2*cp3*z1+c3*cp1*cp2*cp3*z1+c3*cp1*cp2*m1*z1+c2*cp1*cp3*m1*z1+cp2*cp3*m1*z1+cp1*cp2*cp3*m1*z1+c3*cp1*cp2*cp3*m1*z1+c1*c3*m2*z1+c1*c3*cp2*m2*z1+c1*cp3*m2*z1+cp1*cp3*m2*z1+c1*cp1*cp3*m2*z1+c2*cp1*cp3*m2*z1+cp2*cp3*m2*z1+c3*cp2*cp3*m2*z1+c1*c3*cp2*cp3*m2*z1+c3*cp1*cp2*cp3*m2*z1+c3*m1*m2*z1+c3*cp1*m1*m2*z1+c3*cp2*m1*m2*z1+c3*cp1*cp2*m1*m2*z1+cp2*cp3*m1*m2*z1+c3*cp1*cp2*cp3*m1*m2*z1+c1*cp2*m3*z1+c3*cp2*m3*z1+c1*c3*cp2*m3*z1+cp1*cp2*m3*z1+c1*cp1*cp2*m3*z1+c2*cp1*cp2*m3*z1+c2*cp3*m3*z1+c1*cp2*cp3*m3*z1+c2*cp2*cp3*m3*z1+c3*cp2*cp3*m3*z1+c1*c3*cp2*cp3*m3*z1+c3*cp1*cp2*cp3*m3*z1+c3*cp2*m1*m3*z1+c3*cp1*cp2*m1*m3*z1+cp1*cp2*cp3*m1*m3*z1+c3*cp1*cp2*cp3*m1*m3*z1+c1*m2*m3*z1+c3*m2*m3*z1+cp2*m2*m3*z1+c1*cp2*m2*m3*z1+c1*c3*cp2*m2*m3*z1+cp1*cp2*m2*m3*z1+c3*cp1*cp2*m2*m3*z1+cp3*m2*m3*z1+c1*cp3*m2*m3*z1+c1*c3*cp3*m2*m3*z1+c3*cp1*cp3*m2*m3*z1+cp2*cp3*m2*m3*z1+cp1*cp2*cp3*m2*m3*z1+c3*m1*m2*m3*z1+cp1*m1*m2*m3*z1+cp1*cp2*m1*m2*m3*z1+c3*cp1*cp2*m1*m2*m3*z1+cp3*m1*m2*m3*z1+cp1*cp3*m1*m2*m3*z1+c3*cp1*cp3*m1*m2*m3*z1+cp2*cp3*m1*m2*m3*z1+c1*cp3*x2*z1+cp1*cp3*x2*z1+cp1*cp3*m1*x2*z1+c1*cp3*m2*x2*z1+cp1*cp3*m2*x2*z1+cp1*cp3*m1*m2*x2*z1+m3*x2*z1+c1*cp2*m3*x2*z1+cp1*cp2*m3*x2*z1+c1*cp3*m3*x2*z1+cp1*cp3*m3*x2*z1+cp1*cp2*m1*m3*x2*z1+cp1*cp3*m1*m3*x2*z1+c2*x3*z1+cp2*x3*z1+c1*cp2*x3*z1+cp1*cp2*x3*z1+c2*cp3*x3*z1+cp2*cp3*x3*z1+cp1*cp2*m1*x3*z1+m2*x3*z1+c1*m2*x3*z1+cp2*m2*x3*z1+c1*cp2*m2*x3*z1+cp1*cp2*m2*x3*z1+c1*cp3*m2*x3*z1+cp2*cp3*m2*x3*z1+m1*m2*x3*z1+cp1*m1*m2*x3*z1+cp1*cp2*m1*m2*x3*z1+cp1*cp3*m1*m2*x3*z1+c1*cp2*m3*x3*z1+cp1*cp2*m3*x3*z1+c2*cp3*m3*x3*z1+cp2*cp3*m3*x3*z1+cp1*cp2*m1*m3*x3*z1+m2*m3*x3*z1+c1*cp2*m2*m3*x3*z1+cp1*cp2*m2*m3*x3*z1+c1*cp3*m2*m3*x3*z1+cp2*cp3*m2*m3*x3*z1+m1*m2*m3*x3*z1+cp1*cp2*m1*m2*m3*x3*z1+cp1*cp3*m1*m2*m3*x3*z1+m1*m3*y2*z1+c1*m2*y3*z1+cp1*m2*y3*z1+cp1*m1*m2*y3*z1+c1*cp2*m2*m3*y3*z1+cp1*cp2*m2*m3*y3*z1+c1*cp3*m2*m3*y3*z1+cp1*cp3*m2*m3*y3*z1+m1*m2*m3*y3*z1+cp1*cp2*m1*m2*m3*y3*z1+cp1*cp3*m1*m2*m3*y3*z1+c1*c2*cp3*z2+c1*cp2*cp3*z2+c1*c3*cp2*cp3*z2+cp1*cp2*cp3*z2+c3*cp1*cp2*cp3*z2+c1*c3*cp2*m1*z2+cp1*cp3*m1*z2+c2*cp1*cp3*m1*z2+c1*c3*cp2*cp3*m1*z2+cp1*cp2*cp3*m1*z2+c3*cp1*cp2*cp3*m1*z2+c1*c3*cp2*m2*z2+cp1*cp3*m2*z2+c1*cp1*cp3*m2*z2+c2*cp1*cp3*m2*z2+c1*cp2*cp3*m2*z2+c1*c3*cp2*cp3*m2*z2+c3*cp1*cp2*cp3*m2*z2+c1*c3*cp2*m1*m2*z2+c3*cp1*cp2*m1*m2*z2+c1*cp3*m1*m2*z2+c1*c3*cp3*m1*m2*z2+c3*cp1*cp3*m1*m2*z2+c1*cp2*cp3*m1*m2*z2+c1*cp2*m3*z2+c1*c3*cp2*m3*z2+cp1*cp2*m3*z2+c1*cp1*cp2*m3*z2+c2*cp1*cp2*m3*z2+c1*cp2*cp3*m3*z2+c1*c3*cp2*cp3*m3*z2+c3*cp1*cp2*cp3*m3*z2+cp1*cp2*cp3*m1*m3*z2+c1*cp2*m2*m3*z2+c1*c3*cp2*m2*m3*z2+cp1*cp2*m2*m3*z2+c3*cp1*cp2*m2*m3*z2+c1*cp3*m2*m3*z2+c1*c3*cp3*m2*m3*z2+c3*cp1*cp3*m2*m3*z2+cp1*cp2*cp3*m2*m3*z2+c1*cp2*m1*m2*m3*z2+cp1*cp2*m1*m2*m3*z2+c1*cp2*cp3*m1*m2*m3*z2+cp1*cp2*cp3*m1*m2*m3*z2+cp3*x1*z2+c1*cp3*x2*z2+cp1*cp3*x2*z2+c1*cp3*m1*x2*z2+cp1*cp3*m1*x2*z2+c1*cp3*m2*x2*z2+cp1*cp3*m2*x2*z2+c1*cp3*m1*m2*x2*z2+cp1*cp3*m1*m2*x2*z2+c1*cp2*m3*x2*z2+cp1*cp2*m3*x2*z2+c1*cp3*m3*x2*z2+cp1*cp3*m3*x2*z2+c1*cp2*m1*m3*x2*z2+cp1*cp2*m1*m3*x2*z2+c1*cp3*m1*m3*x2*z2+cp1*cp3*m1*m3*x2*z2+c1*cp2*x3*z2+cp1*cp2*x3*z2+m1*x3*z2+c1*cp2*m1*x3*z2+cp1*cp2*m1*x3*z2+c1*cp3*m1*x3*z2+c1*cp2*m2*x3*z2+cp1*cp2*m2*x3*z2+c1*cp3*m2*x3*z2+c1*cp2*m3*x3*z2+cp1*cp2*m3*x3*z2+c1*cp2*m1*m3*x3*z2+cp1*cp2*m1*m3*x3*z2+c1*cp3*m1*m3*x3*z2+c1*cp2*m2*m3*x3*z2+cp1*cp2*m2*m3*x3*z2+c1*cp3*m2*m3*x3*z2+cp3*y1*z2+c1*cp3*m1*m2*y2*z2+cp1*cp3*m1*m2*y2*z2+c1*cp2*m1*m3*y2*z2+cp1*cp2*m1*m3*y2*z2+c1*cp3*m1*m3*y2*z2+cp1*cp3*m1*m3*y2*z2+c1*y3*z2+m1*y3*z2+cp1*m1*y3*z2+cp1*m2*y3*z2+m1*m3*y3*z2+c1*cp2*m1*m3*y3*z2+cp1*cp2*m1*m3*y3*z2+c1*cp3*m1*m3*y3*z2+cp1*cp3*m1*m3*y3*z2+c1*cp2*m2*m3*y3*z2+cp1*cp2*m2*m3*y3*z2+c1*cp3*m2*m3*y3*z2+cp1*cp3*m2*m3*y3*z2+c1*c2*cp2*z3+c1*cp1*cp2*z3+c2*cp1*cp2*z3+c1*c2*cp3*z3+c1*cp2*cp3*z3+c1*c3*cp2*cp3*z3+c3*cp1*cp2*cp3*z3+c1*c3*cp2*m1*z3+cp1*cp2*m1*z3+c2*cp1*cp2*m1*z3+c2*cp1*cp3*m1*z3+c1*c3*cp2*cp3*m1*z3+cp1*cp2*cp3*m1*z3+c3*cp1*cp2*cp3*m1*z3+c1*cp2*m2*z3+c1*c3*cp2*m2*z3+cp1*cp2*m2*z3+c1*cp1*cp2*m2*z3+c2*cp1*cp2*m2*z3+c1*cp1*cp3*m2*z3+c2*cp1*cp3*m2*z3+c1*cp2*cp3*m2*z3+c1*c3*cp2*cp3*m2*z3+c3*cp1*cp2*cp3*m2*z3+c1*c3*cp2*m1*m2*z3+c3*cp1*cp2*m1*m2*z3+c1*cp3*m1*m2*z3+c1*c3*cp3*m1*m2*z3+c3*cp1*cp3*m1*m2*z3+c1*cp2*cp3*m1*m2*z3+c1*cp2*m3*z3+c1*c3*cp2*m3*z3+cp1*cp2*m3*z3+c1*cp1*cp2*m3*z3+c2*cp1*cp2*m3*z3+c1*cp2*cp3*m3*z3+c1*c3*cp2*cp3*m3*z3+c3*cp1*cp2*cp3*m3*z3+cp1*cp2*cp3*m1*m3*z3+c1*cp2*m2*m3*z3+c1*c3*cp2*m2*m3*z3+cp1*cp2*m2*m3*z3+c3*cp1*cp2*m2*m3*z3+c1*cp3*m2*m3*z3+c1*c3*cp3*m2*m3*z3+c3*cp1*cp3*m2*m3*z3+cp1*cp2*cp3*m2*m3*z3+c1*cp2*m1*m2*m3*z3+cp1*cp2*m1*m2*m3*z3+c1*cp2*cp3*m1*m2*m3*z3+cp1*cp2*cp3*m1*m2*m3*z3+c1*cp2*x2*z3+cp1*cp2*x2*z3+c1*cp3*x2*z3+cp1*cp3*x2*z3+c1*cp2*m1*x2*z3+cp1*cp2*m1*x2*z3+c1*cp3*m1*x2*z3+cp1*cp3*m1*x2*z3+c1*cp2*m2*x2*z3+cp1*cp2*m2*x2*z3+c1*cp3*m2*x2*z3+cp1*cp3*m2*x2*z3+c1*cp2*m1*m2*x2*z3+cp1*cp2*m1*m2*x2*z3+c1*cp3*m1*m2*x2*z3+cp1*cp3*m1*m2*x2*z3+c1*cp2*m3*x2*z3+cp1*cp2*m3*x2*z3+c1*cp3*m3*x2*z3+cp1*cp3*m3*x2*z3+c1*cp2*m1*m3*x2*z3+cp1*cp2*m1*m3*x2*z3+c1*cp3*m1*m3*x2*z3+cp1*cp3*m1*m3*x2*z3+c1*cp2*x3*z3+cp1*cp2*x3*z3+c1*cp2*m1*x3*z3+cp1*cp2*m1*x3*z3+c2*cp3*m1*x3*z3+cp2*cp3*m1*x3*z3+c1*cp2*m2*x3*z3+cp1*cp2*m2*x3*z3+cp2*cp3*m1*m2*x3*z3+c1*cp2*m3*x3*z3+cp1*cp2*m3*x3*z3+c1*cp2*m1*m3*x3*z3+cp1*cp2*m1*m3*x3*z3+c2*cp3*m1*m3*x3*z3+cp2*cp3*m1*m3*x3*z3+c1*cp2*m2*m3*x3*z3+cp1*cp2*m2*m3*x3*z3+cp2*cp3*m1*m2*m3*x3*z3+c1*cp2*m1*m2*y2*z3+cp1*cp2*m1*m2*y2*z3+c1*cp3*m1*m2*y2*z3+cp1*cp3*m1*m2*y2*z3+c1*cp2*m1*m3*y2*z3+cp1*cp2*m1*m3*y2*z3+c1*cp3*m1*m3*y2*z3+cp1*cp3*m1*m3*y2*z3+c1*cp2*m1*m3*y3*z3+cp1*cp2*m1*m3*y3*z3+c2*cp3*m1*m3*y3*z3+c1*cp2*m2*m3*y3*z3+cp1*cp2*m2*m3*y3*z3+cp2*cp3*m1*m2*m3*y3*z3;
end;
#####################################################################
#Space Group No. 109 (Subscript[I4,1]md)
#####################################################################
Ampin109:=function(g1)
local x1, y1, z1, c1, mp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];mp1:=g1[5];m1:=g1[6];
return mp1;
end;
#####################################################################
Amin109:=function(g1)
local x1, y1, z1, c1, mp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];mp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Bdeltain109:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
B2in109:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c2*cp1*cp2+c2*cp2*m1+c2*cp1*x1+c2*cp1*cp2*x1+c2*cp1*m1*x1+c2*cp2*m1*x1+c2*cp1*cp2*x2+cp1*m1*x2+c2*cp2*m1*x2+cp1*cp2*m1*x2+cp1*x1*x2+cp1*cp2*x1*x2+c2*cp1*y1+c2*cp1*cp2*y1+c2*cp1*m1*y1+c2*cp2*m1*y1+cp1*x2*y1+cp1*cp2*x2*y1+cp1*y2+c2*cp1*cp2*y2+m1*y2+cp1*m1*y2+c2*cp2*m1*y2+cp1*cp2*m1*y2+cp1*x1*y2+cp1*cp2*x1*y2+cp1*y1*y2+cp1*cp2*y1*y2+c2*cp1*cp2*z1+c2*m1*z1+c2*cp1*m1*z1+c2*cp2*m1*z1+cp1*cp2*m1*z1+cp2*x1*z1+x2*z1+cp1*x2*z1+cp2*x2*z1+cp1*cp2*x2*z1+cp2*y1*z1+y2*z1+cp1*y2*z1+cp2*y2*z1+cp1*cp2*y2*z1+c2*cp1*z2+c2*cp1*cp2*z2+c2*m1*z2+c2*cp2*m1*z2+cp2*x1*z2+cp1*cp2*x1*z2+cp2*y1*z2+cp1*cp2*y1*z2+cp1*cp2*z1*z2;
end;
#####################################################################
C1in109:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c2*c3+c1*c2*c3*cp2+c1*c3*cp1*cp2+c1*c2*c3*cp1*cp3+c1*cp2*cp3+c1*c3*cp2*cp3+c2*c3*cp1*cp2*cp3+c1*c2*c3*cp1*cp2*cp3+c2*c3*cp1*m1+c1*c2*c3*cp1*m1+c1*c3*cp2*m1+c1*c2*c3*cp2*m1+c3*cp1*cp2*m1+c1*c3*cp1*cp2*m1+c2*c3*cp1*cp2*m1+c1*c2*c3*cp3*m1+c2*cp1*cp3*m1+c1*c2*cp1*cp3*m1+c1*c2*c3*cp1*cp3*m1+c1*c2*cp2*cp3*m1+c1*c3*cp2*cp3*m1+c1*c2*c3*cp2*cp3*m1+cp1*cp2*cp3*m1+c2*cp1*cp2*cp3*m1+c3*cp1*cp2*cp3*m1+c1*c3*cp1*cp2*cp3*m1+c2*c3*cp1*cp2*cp3*m1+c1*c3*cp1*m2+c2*c3*cp1*m2+c3*cp1*cp2*m2+c1*c3*cp1*cp2*m2+c2*c3*cp1*cp2*m2+c2*cp1*cp3*m2+c1*c2*cp1*cp3*m2+c1*c3*cp1*cp3*m2+c2*c3*cp1*cp3*m2+c1*c3*cp2*cp3*m2+c2*cp1*cp2*cp3*m2+c1*c2*cp1*cp2*cp3*m2+c3*cp1*cp2*cp3*m2+c2*c3*cp1*cp2*cp3*m2+c1*c3*m1*m2+c1*c2*c3*cp1*m1*m2+c3*cp2*m1*m2+c1*c3*cp2*m1*m2+c1*c3*cp1*cp2*m1*m2+c2*c3*cp1*cp2*m1*m2+c1*c3*cp3*m1*m2+c2*c3*cp3*m1*m2+c1*cp1*cp3*m1*m2+c2*cp1*cp3*m1*m2+c1*c2*cp1*cp3*m1*m2+c1*c3*cp1*cp3*m1*m2+c2*c3*cp1*cp3*m1*m2+c1*c2*c3*cp1*cp3*m1*m2+c1*c2*cp2*cp3*m1*m2+c1*c3*cp2*cp3*m1*m2+cp1*cp2*cp3*m1*m2+c1*c2*c3*cp1*m3+c1*c3*cp2*m3+c1*c2*c3*cp2*m3+c1*c2*cp1*cp2*m3+c1*c2*c3*cp1*cp2*m3+c1*c2*cp1*cp2*cp3*m3+c2*c3*cp1*cp2*cp3*m3+c1*c2*c3*cp1*cp2*cp3*m3+c1*c2*cp1*m1*m3+c2*c3*cp1*m1*m3+c1*cp2*m1*m3+c1*c2*cp2*m1*m3+cp1*cp2*m1*m3+c1*cp1*cp2*m1*m3+c1*c2*cp1*cp2*m1*m3+c3*cp1*cp2*m1*m3+c1*c3*cp1*cp2*m1*m3+c1*c2*cp3*m1*m3+c2*cp1*cp3*m1*m3+c1*c2*cp1*cp3*m1*m3+c2*c3*cp1*cp3*m1*m3+cp1*cp2*cp3*m1*m3+c1*cp1*cp2*cp3*m1*m3+c2*cp1*cp2*cp3*m1*m3+c1*c2*cp1*cp2*cp3*m1*m3+c1*m2*m3+c1*c2*c3*m2*m3+c2*cp1*m2*m3+c1*c3*cp1*m2*m3+c2*c3*cp1*m2*m3+c1*c2*c3*cp1*m2*m3+c3*cp1*cp2*m2*m3+c1*c3*cp1*cp2*m2*m3+c1*cp3*m2*m3+c1*c2*c3*cp3*m2*m3+c1*cp1*cp3*m2*m3+c3*cp1*cp3*m2*m3+c1*cp2*cp3*m2*m3+c1*c2*c3*cp2*cp3*m2*m3+c2*cp1*cp2*cp3*m2*m3+c1*c3*cp1*cp2*cp3*m2*m3+c2*c3*cp1*cp2*cp3*m2*m3+c1*c2*m1*m2*m3+c2*c3*m1*m2*m3+c1*cp1*m1*m2*m3+c2*cp1*m1*m2*m3+c3*cp1*m1*m2*m3+cp2*m1*m2*m3+c1*cp2*m1*m2*m3+c1*c2*cp2*m1*m2*m3+c1*c3*cp2*m1*m2*m3+cp1*cp2*m1*m2*m3+c1*cp1*cp2*m1*m2*m3+c1*c2*cp1*cp2*m1*m2*m3+c3*cp1*cp2*m1*m2*m3+c1*cp3*m1*m2*m3+c1*c2*cp3*m1*m2*m3+c3*cp3*m1*m2*m3+c2*c3*cp3*m1*m2*m3+cp1*cp3*m1*m2*m3+c1*cp1*cp3*m1*m2*m3+c1*c2*cp1*cp3*m1*m2*m3+c1*c3*cp1*cp3*m1*m2*m3+c2*c3*cp1*cp3*m1*m2*m3+cp2*cp3*m1*m2*m3+c2*cp2*cp3*m1*m2*m3+c3*cp2*cp3*m1*m2*m3+c1*c3*cp2*cp3*m1*m2*m3+c2*c3*cp2*cp3*m1*m2*m3+cp1*cp2*cp3*m1*m2*m3+c1*cp1*cp2*cp3*m1*m2*m3+c2*cp1*cp2*cp3*m1*m2*m3+c1*c2*cp1*cp2*cp3*m1*m2*m3+c3*cp1*cp2*cp3*m1*m2*m3+c2*c3*cp2*x1+c1*c2*c3*cp2*x1+c1*c3*cp1*cp2*x1+c2*c3*cp1*cp2*x1+c1*c2*cp3*x1+c1*c2*c3*cp3*x1+c1*c2*cp2*cp3*x1+c1*c3*cp1*cp2*cp3*x1+c1*c2*c3*cp1*cp2*cp3*x1+c2*c3*m1*x1+c1*c2*c3*m1*x1+c2*c3*cp1*m1*x1+c1*c3*cp2*m1*x1+c2*cp3*m1*x1+c2*cp1*cp3*m1*x1+c1*c2*cp1*cp3*m1*x1+c3*cp2*cp3*m1*x1+c2*cp1*cp2*cp3*m1*x1+c3*m2*x1+c1*c3*m2*x1+c2*c3*m2*x1+c1*c2*c3*m2*x1+c3*cp1*m2*x1+c2*c3*cp1*m2*x1+c1*c2*c3*cp1*m2*x1+c1*c2*c3*cp2*m2*x1+c1*c3*cp1*cp2*m2*x1+c2*c3*cp1*cp2*m2*x1+c1*c2*c3*cp1*cp2*m2*x1+cp3*m2*x1+c2*cp3*m2*x1+c1*c2*cp3*m2*x1+c1*c3*cp3*m2*x1+c2*c3*cp3*m2*x1+cp1*cp3*m2*x1+c1*cp1*cp3*m2*x1+c2*cp1*cp3*m2*x1+c1*c2*cp1*cp3*m2*x1+c1*c2*c3*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c1*cp2*cp3*m2*x1+c1*c3*cp2*cp3*m2*x1+c1*cp1*cp2*cp3*m2*x1+c2*cp1*cp2*cp3*m2*x1+c3*cp1*cp2*cp3*m2*x1+c1*c3*cp1*cp2*cp3*m2*x1+c2*c3*cp1*cp2*cp3*m2*x1+c3*m1*m2*x1+c1*c2*c3*m1*m2*x1+c3*cp1*m1*m2*x1+c2*c3*cp1*m1*m2*x1+c2*c3*cp1*cp2*m1*m2*x1+c2*cp3*m1*m2*x1+c1*c2*cp3*m1*m2*x1+c3*cp3*m1*m2*x1+c2*c3*cp3*m1*m2*x1+c2*cp1*cp3*m1*m2*x1+c3*cp1*cp3*m1*m2*x1+cp2*cp3*m1*m2*x1+c1*cp2*cp3*m1*m2*x1+c3*cp2*cp3*m1*m2*x1+cp1*cp2*cp3*m1*m2*x1+c2*cp1*cp2*cp3*m1*m2*x1+c3*cp1*cp2*cp3*m1*m2*x1+c1*c2*m3*x1+c2*c3*m3*x1+c1*c2*cp1*m3*x1+c2*c3*cp1*m3*x1+c1*cp2*m3*x1+c1*c2*cp2*m3*x1+c1*cp1*cp2*m3*x1+c1*c3*cp1*cp2*m3*x1+c2*cp3*m3*x1+c1*c2*cp3*m3*x1+c2*cp1*cp3*m3*x1+c1*c2*cp1*cp3*m3*x1+c1*cp2*cp3*m3*x1+c2*cp2*cp3*m3*x1+c1*c2*cp2*cp3*m3*x1+c1*c3*cp2*cp3*m3*x1+c2*cp1*cp2*cp3*m3*x1+c1*c3*cp1*cp2*cp3*m3*x1+c2*m1*m3*x1+c2*cp1*m1*m3*x1+cp2*m1*m3*x1+c1*cp2*m1*m3*x1+c2*cp2*m1*m3*x1+cp1*cp2*m1*m3*x1+c2*cp3*m1*m3*x1+c1*c2*cp3*m1*m3*x1+c2*cp1*cp3*m1*m3*x1+c2*cp2*cp3*m1*m3*x1+c3*cp2*cp3*m1*m3*x1+cp1*cp2*cp3*m1*m3*x1+c2*cp1*cp2*cp3*m1*m3*x1+c3*cp1*cp2*cp3*m1*m3*x1+m2*m3*x1+c1*c2*m2*m3*x1+c3*m2*m3*x1+cp1*m2*m3*x1+c1*c2*cp1*m2*m3*x1+c3*cp1*m2*m3*x1+c1*c3*cp1*m2*m3*x1+cp2*m2*m3*x1+c1*cp2*m2*m3*x1+c1*c2*cp2*m2*m3*x1+c1*cp1*cp2*m2*m3*x1+c1*c2*cp1*cp2*m2*m3*x1+c1*cp3*m2*m3*x1+c2*cp3*m2*m3*x1+cp1*cp3*m2*m3*x1+c1*cp1*cp3*m2*m3*x1+c1*c2*cp1*cp3*m2*m3*x1+cp2*cp3*m2*m3*x1+c1*c2*cp2*cp3*m2*m3*x1+m1*m2*m3*x1+c1*m1*m2*m3*x1+c1*cp1*m1*m2*m3*x1+cp2*m1*m2*m3*x1+c1*cp2*m1*m2*m3*x1+c2*cp1*cp2*m1*m2*m3*x1+cp3*m1*m2*m3*x1+c1*c2*cp3*m1*m2*m3*x1+cp1*cp3*m1*m2*m3*x1+c1*cp1*cp3*m1*m2*m3*x1+c2*cp1*cp3*m1*m2*m3*x1+cp2*cp3*m1*m2*m3*x1+c1*cp2*cp3*m1*m2*m3*x1+c2*cp2*cp3*m1*m2*m3*x1+cp1*cp2*cp3*m1*m2*m3*x1+c2*cp1*cp2*cp3*m1*m2*m3*x1+c1*c3*x2+c1*c2*c3*x2+c1*c3*cp2*x2+c1*c2*c3*cp2*x2+c2*c3*cp1*cp2*x2+c1*c3*cp3*x2+c1*c2*c3*cp3*x2+c1*c2*cp1*cp3*x2+c1*c3*cp1*cp3*x2+c1*c3*cp2*cp3*x2+c1*c3*cp1*cp2*cp3*x2+c1*c2*c3*cp1*cp2*cp3*x2+c3*m1*x2+c1*c3*m1*x2+c3*cp1*m1*x2+c2*c3*cp1*m1*x2+c1*c2*c3*cp1*m1*x2+c2*c3*cp2*m1*x2+c1*c3*cp1*cp2*m1*x2+c2*c3*cp1*cp2*m1*x2+c3*cp3*m1*x2+c1*c2*c3*cp3*m1*x2+c1*cp1*cp3*m1*x2+c3*cp1*cp3*m1*x2+c1*c3*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c1*cp2*cp3*m1*x2+c2*cp2*cp3*m1*x2+c3*cp2*cp3*m1*x2+c2*c3*cp2*cp3*m1*x2+cp1*cp2*cp3*m1*x2+c2*cp1*cp2*cp3*m1*x2+c3*cp1*cp2*cp3*m1*x2+c1*c3*cp1*cp2*cp3*m1*x2+c1*c2*c3*m2*x2+c3*cp1*m2*x2+c1*c3*cp1*m2*x2+c1*c2*c3*cp2*m2*x2+c3*cp1*cp2*m2*x2+c1*c3*cp1*cp2*m2*x2+c1*c2*c3*cp1*cp2*m2*x2+c1*c3*cp3*m2*x2+c3*cp1*cp3*m2*x2+c2*c3*cp1*cp3*m2*x2+c1*c2*c3*cp1*cp3*m2*x2+c1*c2*c3*cp2*cp3*m2*x2+c1*cp1*cp2*cp3*m2*x2+c2*cp1*cp2*cp3*m2*x2+c2*c3*cp1*cp2*cp3*m2*x2+c1*c3*m1*m2*x2+c2*c3*m1*m2*x2+c3*cp1*m1*m2*x2+c2*c3*cp1*m1*m2*x2+c3*cp1*cp2*m1*m2*x2+c1*c3*cp1*cp2*m1*m2*x2+c2*c3*cp1*cp2*m1*m2*x2+c1*cp3*m1*m2*x2+c2*cp3*m1*m2*x2+c1*c3*cp3*m1*m2*x2+c2*c3*cp3*m1*m2*x2+cp1*cp3*m1*m2*x2+c1*cp1*cp3*m1*m2*x2+c2*c3*cp1*cp3*m1*m2*x2+cp2*cp3*m1*m2*x2+c3*cp2*cp3*m1*m2*x2+c1*c3*cp2*cp3*m1*m2*x2+cp1*cp2*cp3*m1*m2*x2+c1*m3*x2+c1*c2*m3*x2+c1*cp1*m3*x2+c2*c3*cp1*m3*x2+c1*cp2*m3*x2+c1*c2*cp2*m3*x2+c1*cp1*cp2*m3*x2+c1*c2*cp1*cp2*m3*x2+c2*c3*cp1*cp2*m3*x2+c1*cp3*m3*x2+c1*cp1*cp3*m3*x2+c2*cp1*cp3*m3*x2+c1*c2*cp1*cp3*m3*x2+c1*c3*cp1*cp3*m3*x2+c2*c3*cp1*cp3*m3*x2+c1*cp2*cp3*m3*x2+c1*cp1*cp2*cp3*m3*x2+c1*c3*cp1*cp2*cp3*m3*x2+m1*m3*x2+c2*m1*m3*x2+c1*c2*m1*m3*x2+c1*c3*m1*m3*x2+cp1*m1*m3*x2+c1*cp1*m1*m3*x2+c1*c2*cp1*m1*m3*x2+c3*cp1*m1*m3*x2+cp2*m1*m3*x2+c1*c2*cp2*m1*m3*x2+c1*cp1*cp2*m1*m3*x2+c2*cp1*cp2*m1*m3*x2+cp3*m1*m3*x2+c1*cp3*m1*m3*x2+c2*cp3*m1*m3*x2+cp1*cp3*m1*m3*x2+c1*cp1*cp3*m1*m3*x2+c1*c2*cp1*cp3*m1*m3*x2+c3*cp1*cp3*m1*m3*x2+c3*cp2*cp3*m1*m3*x2+cp1*cp2*cp3*m1*m3*x2+c1*cp1*cp2*cp3*m1*m3*x2+cp1*m2*m3*x2+c2*cp1*m2*m3*x2+c1*c2*cp1*m2*m3*x2+c1*c3*cp1*m2*m3*x2+cp1*cp2*m2*m3*x2+c2*cp1*cp2*m2*m3*x2+c1*c2*cp1*cp2*m2*m3*x2+c1*c2*cp3*m2*m3*x2+cp1*cp3*m2*m3*x2+c1*cp1*cp3*m2*m3*x2+c2*cp1*cp3*m2*m3*x2+cp1*cp2*cp3*m2*m3*x2+c1*cp1*m1*m2*m3*x2+c1*c2*cp1*m1*m2*m3*x2+c3*cp1*m1*m2*m3*x2+cp2*m1*m2*m3*x2+c2*cp2*m1*m2*m3*x2+c1*c2*cp2*m1*m2*m3*x2+c1*cp1*cp2*m1*m2*m3*x2+c2*cp1*cp2*m1*m2*m3*x2+c1*cp3*m1*m2*m3*x2+c2*cp3*m1*m2*m3*x2+c2*cp1*cp3*m1*m2*m3*x2+cp2*cp3*m1*m2*m3*x2+cp1*cp2*cp3*m1*m2*m3*x2+c1*cp1*cp2*cp3*m1*m2*m3*x2+c1*c2*c3*x1*x2+c1*cp3*x1*x2+cp1*cp3*x1*x2+c2*cp1*cp3*x1*x2+c3*cp1*cp3*x1*x2+c1*cp2*cp3*x1*x2+c2*c3*m1*x1*x2+c3*cp1*m1*x1*x2+c2*c3*cp1*m1*x1*x2+c3*cp1*cp2*m1*x1*x2+c1*cp3*m1*x1*x2+cp1*cp3*m1*x1*x2+c1*cp1*cp3*m1*x1*x2+c2*cp1*cp3*m1*x1*x2+c3*cp1*cp3*m1*x1*x2+cp2*cp3*m1*x1*x2+cp1*cp2*cp3*m1*x1*x2+c1*c3*m2*x1*x2+c2*c3*cp1*m2*x1*x2+c1*c3*cp2*m2*x1*x2+c2*cp1*cp3*m2*x1*x2+c3*cp1*cp3*m2*x1*x2+cp1*cp2*cp3*m2*x1*x2+c3*m1*m2*x1*x2+c3*cp1*m1*m2*x1*x2+c3*cp2*m1*m2*x1*x2+c3*cp1*cp2*m1*m2*x1*x2+cp1*cp3*m1*m2*x1*x2+cp1*cp2*cp3*m1*m2*x1*x2+c1*m3*x1*x2+c1*cp1*cp2*m3*x1*x2+c1*cp3*m3*x1*x2+c1*c2*cp3*m3*x1*x2+c1*cp2*cp3*m3*x1*x2+cp1*cp2*cp3*m3*x1*x2+m1*m3*x1*x2+cp1*m1*m3*x1*x2+cp1*cp2*m1*m3*x1*x2+cp3*m1*m3*x1*x2+c2*cp3*m1*m3*x1*x2+c2*cp1*cp3*m1*m3*x1*x2+cp2*cp3*m1*m3*x1*x2+cp1*cp2*cp3*m1*m3*x1*x2+c1*cp3*m2*m3*x1*x2+cp1*cp3*m2*m3*x1*x2+c2*cp1*cp3*m2*m3*x1*x2+c1*cp2*cp3*m2*m3*x1*x2+cp3*m1*m2*m3*x1*x2+cp1*cp3*m1*m2*m3*x1*x2+cp2*cp3*m1*m2*m3*x1*x2+cp1*cp2*cp3*m1*m2*m3*x1*x2+c1*c2*x3+c1*c2*c3*x3+c2*cp1*x3+c1*c2*c3*cp1*x3+c1*c3*cp2*x3+c2*c3*cp1*cp2*x3+c1*c2*c3*cp1*cp2*x3+c1*c2*cp3*x3+c1*c2*c3*cp3*x3+c1*c2*c3*cp1*cp3*x3+c1*c2*cp2*cp3*x3+c1*c2*c3*cp2*cp3*x3+c2*c3*cp1*cp2*cp3*x3+c1*c2*c3*cp1*cp2*cp3*x3+c2*cp1*m1*x3+c1*c2*cp1*m1*x3+c2*c3*cp1*m1*x3+c1*c2*cp2*m1*x3+c3*cp2*m1*x3+c1*cp1*cp2*m1*x3+c2*cp1*cp2*m1*x3+c1*c2*cp1*cp2*m1*x3+c1*c2*cp3*m1*x3+c1*c2*c3*cp3*m1*x3+c1*c2*cp2*cp3*m1*x3+c3*cp2*cp3*m1*x3+c1*c3*cp1*cp2*cp3*m1*x3+c1*m2*x3+c2*cp1*m2*x3+c1*c2*cp1*m2*x3+c3*cp1*m2*x3+c1*c3*cp2*m2*x3+c1*c2*c3*cp2*m2*x3+c1*c2*cp1*cp2*m2*x3+c3*cp1*cp2*m2*x3+c1*c3*cp1*cp2*m2*x3+c1*c2*cp3*m2*x3+c1*cp1*cp3*m2*x3+c2*c3*cp1*cp3*m2*x3+c1*c2*cp2*cp3*m2*x3+c1*c3*cp2*cp3*m2*x3+c1*c2*c3*cp2*cp3*m2*x3+cp1*cp2*cp3*m2*x3+c1*c2*cp1*cp2*cp3*m2*x3+c3*cp1*cp2*cp3*m2*x3+c1*c3*cp1*cp2*cp3*m2*x3+c2*c3*cp1*cp2*cp3*m2*x3+c2*m1*m2*x3+c1*c3*m1*m2*x3+cp1*m1*m2*x3+c3*cp1*m1*m2*x3+c1*c3*cp1*m1*m2*x3+c1*cp2*m1*m2*x3+c2*cp2*m1*m2*x3+c3*cp2*m1*m2*x3+c2*c3*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+c2*cp1*cp2*m1*m2*x3+c1*c2*cp3*m1*m2*x3+c2*c3*cp3*m1*m2*x3+c1*c3*cp1*cp3*m1*m2*x3+c2*c3*cp1*cp3*m1*m2*x3+cp2*cp3*m1*m2*x3+c2*cp2*cp3*m1*m2*x3+c1*c3*cp2*cp3*m1*m2*x3+c2*c3*cp2*cp3*m1*m2*x3+c1*cp1*cp2*cp3*m1*m2*x3+c3*cp1*cp2*cp3*m1*m2*x3+c2*cp1*m3*x3+c2*c3*cp1*m3*x3+c2*cp1*cp2*m3*x3+c1*c3*cp1*cp2*m3*x3+c2*c3*cp1*cp2*m3*x3+c1*c2*cp1*cp3*m3*x3+c1*c2*cp2*cp3*m3*x3+c1*c3*cp2*cp3*m3*x3+c2*cp1*cp2*cp3*m3*x3+c1*c2*cp1*cp2*cp3*m3*x3+c2*cp1*m1*m3*x3+c2*cp1*cp2*m1*m3*x3+c3*cp1*cp2*m1*m3*x3+c1*c2*cp3*m1*m3*x3+c1*cp1*cp2*cp3*m1*m3*x3+c3*cp1*cp2*cp3*m1*m3*x3+c1*c3*m2*m3*x3+c2*cp1*m2*m3*x3+c1*c3*cp1*m2*m3*x3+c2*c3*cp1*m2*m3*x3+c1*c2*cp2*m2*m3*x3+c1*c3*cp2*m2*m3*x3+c1*c2*c3*cp2*m2*m3*x3+cp1*cp2*m2*m3*x3+c1*c3*cp3*m2*m3*x3+c1*c2*c3*cp3*m2*m3*x3+cp1*cp3*m2*m3*x3+c1*cp1*cp3*m2*m3*x3+c2*cp1*cp3*m2*m3*x3+c3*cp1*cp3*m2*m3*x3+c1*c2*cp2*cp3*m2*m3*x3+c1*cp1*cp2*cp3*m2*m3*x3+c2*cp1*cp2*cp3*m2*m3*x3+c3*cp1*cp2*cp3*m2*m3*x3+c1*m1*m2*m3*x3+c3*m1*m2*m3*x3+c1*cp1*m1*m2*m3*x3+c2*cp1*m1*m2*m3*x3+c2*c3*cp1*m1*m2*m3*x3+c1*cp2*m1*m2*m3*x3+c2*cp2*m1*m2*m3*x3+c3*cp2*m1*m2*m3*x3+c3*cp1*cp2*m1*m2*m3*x3+c1*cp3*m1*m2*m3*x3+cp1*cp2*cp3*m1*m2*m3*x3+c2*x1*x3+c1*c2*x1*x3+c2*cp1*x1*x3+c2*c3*cp1*x1*x3+c2*cp2*x1*x3+c1*c2*cp2*x1*x3+c1*cp1*cp2*x1*x3+c2*c3*cp1*cp2*x1*x3+c1*c2*cp3*x1*x3+c2*c3*cp1*cp3*x1*x3+c1*c2*cp1*cp2*cp3*x1*x3+c1*c3*cp1*cp2*cp3*x1*x3+c2*m1*x1*x3+c2*cp1*m1*x1*x3+c2*cp2*m1*x1*x3+c2*cp1*cp2*m1*x1*x3+c2*cp3*m1*x1*x3+c2*cp1*cp3*m1*x1*x3+m2*x1*x3+c1*m2*x1*x3+c2*m2*x1*x3+cp1*m2*x1*x3+c1*cp1*m2*x1*x3+c3*cp1*m2*x1*x3+cp2*m2*x1*x3+cp1*cp2*m2*x1*x3+c2*cp1*cp2*m2*x1*x3+c3*cp1*cp2*m2*x1*x3+cp1*cp3*m2*x1*x3+c1*cp1*cp3*m2*x1*x3+c2*cp1*cp3*m2*x1*x3+c3*cp1*cp3*m2*x1*x3+c1*cp2*cp3*m2*x1*x3+cp1*cp2*cp3*m2*x1*x3+c2*cp1*cp2*cp3*m2*x1*x3+m1*m2*x1*x3+cp1*m1*m2*x1*x3+cp2*cp3*m1*m2*x1*x3+cp1*cp2*cp3*m1*m2*x1*x3+c2*m3*x1*x3+c2*cp2*m3*x1*x3+c2*cp3*m3*x1*x3+c2*cp1*cp3*m3*x1*x3+c2*cp2*cp3*m3*x1*x3+c1*cp1*cp2*cp3*m3*x1*x3+m2*m3*x1*x3+cp1*m2*m3*x1*x3+cp3*m2*m3*x1*x3+cp1*cp3*m2*m3*x1*x3+cp2*cp3*m2*m3*x1*x3+c1*x2*x3+c1*cp1*x2*x3+c1*cp2*x2*x3+c1*c3*cp2*x2*x3+c1*c2*c3*cp2*x2*x3+cp1*cp2*x2*x3+c2*cp1*cp2*x2*x3+c3*cp1*cp2*x2*x3+c1*c3*cp1*cp2*x2*x3+c2*c3*cp1*cp2*x2*x3+c1*c3*cp3*x2*x3+c1*c2*c3*cp3*x2*x3+c1*c3*cp1*cp3*x2*x3+c2*c3*cp1*cp3*x2*x3+c1*cp2*cp3*x2*x3+c1*c2*cp1*cp2*cp3*x2*x3+c1*c3*cp1*cp2*cp3*x2*x3+c1*m1*x2*x3+c2*m1*x2*x3+c1*c2*m1*x2*x3+c2*c3*m1*x2*x3+c1*cp1*m1*x2*x3+c2*cp1*m1*x2*x3+cp2*m1*x2*x3+c1*c3*cp2*m1*x2*x3+cp1*cp2*m1*x2*x3+c2*cp3*m1*x2*x3+c1*c2*cp3*m1*x2*x3+c3*cp3*m1*x2*x3+c2*cp1*cp3*m1*x2*x3+c3*cp1*cp3*m1*x2*x3+cp2*cp3*m1*x2*x3+c2*cp2*cp3*m1*x2*x3+c3*cp2*cp3*m1*x2*x3+c1*cp1*cp2*cp3*m1*x2*x3+c1*m2*x2*x3+cp1*m2*x2*x3+c1*cp1*m2*x2*x3+c2*cp1*m2*x2*x3+c1*c2*cp2*m2*x2*x3+c1*c3*cp2*m2*x2*x3+c3*cp1*cp2*m2*x2*x3+c1*c3*cp3*m2*x2*x3+cp1*cp3*m2*x2*x3+c2*cp1*cp3*m2*x2*x3+c3*cp1*cp3*m2*x2*x3+c1*c2*cp2*cp3*m2*x2*x3+c1*cp1*cp2*cp3*m2*x2*x3+c2*cp1*cp2*cp3*m2*x2*x3+m1*m2*x2*x3+c1*m1*m2*x2*x3+c2*m1*m2*x2*x3+c3*m1*m2*x2*x3+c1*cp2*m1*m2*x2*x3+cp1*cp2*m1*m2*x2*x3+c1*cp3*m1*m2*x2*x3+c2*cp3*m1*m2*x2*x3+cp1*cp3*m1*m2*x2*x3+c1*cp2*cp3*m1*m2*x2*x3+c2*cp1*m3*x2*x3+c1*cp1*cp2*m3*x2*x3+c2*cp1*cp2*m3*x2*x3+c1*cp3*m3*x2*x3+c1*cp1*cp3*m3*x2*x3+c2*cp1*cp3*m3*x2*x3+c1*cp1*cp2*cp3*m3*x2*x3+cp1*cp2*m1*m3*x2*x3+cp3*m1*m3*x2*x3+cp1*cp3*m1*m3*x2*x3+cp2*cp3*m1*m3*x2*x3+cp1*m2*m3*x2*x3+cp1*cp2*m2*m3*x2*x3+cp1*cp3*m2*m3*x2*x3+c2*c3*y1+c2*c3*cp2*y1+c1*c2*c3*cp2*y1+c3*cp1*cp2*y1+c1*c3*cp1*cp2*y1+c2*c3*cp1*cp2*y1+c2*cp3*y1+c1*c2*c3*cp3*y1+cp2*cp3*y1+c1*cp2*cp3*y1+c2*cp2*cp3*y1+c1*c2*cp2*cp3*y1+c3*cp2*cp3*y1+c2*c3*cp2*cp3*y1+c3*cp1*cp2*cp3*y1+c1*c3*cp1*cp2*cp3*y1+c2*c3*cp1*cp2*cp3*y1+c1*c2*c3*cp1*cp2*cp3*y1+c2*c3*m1*y1+c1*c2*c3*m1*y1+c2*c3*cp1*m1*y1+c1*c3*cp2*m1*y1+c1*c2*cp3*m1*y1+c1*c2*cp1*cp3*m1*y1+c3*cp2*cp3*m1*y1+c2*cp1*cp2*cp3*m1*y1+c1*c3*m2*y1+c1*c2*c3*m2*y1+c1*c3*cp1*m2*y1+c1*c2*c3*cp1*m2*y1+c1*c3*cp2*m2*y1+c1*c2*c3*cp2*m2*y1+c3*cp1*cp2*m2*y1+c1*c3*cp1*cp2*m2*y1+c1*c2*c3*cp1*cp2*m2*y1+cp3*m2*y1+c1*c3*cp3*m2*y1+cp1*cp3*m2*y1+c1*c2*cp1*cp3*m2*y1+c2*c3*cp1*cp3*m2*y1+c1*c2*c3*cp1*cp3*m2*y1+cp2*cp3*m2*y1+c1*cp2*cp3*m2*y1+c2*cp2*cp3*m2*y1+c1*c3*cp2*cp3*m2*y1+cp1*cp2*cp3*m2*y1+c1*cp1*cp2*cp3*m2*y1+c2*cp1*cp2*cp3*m2*y1+c1*c3*cp1*cp2*cp3*m2*y1+c2*c3*cp1*cp2*cp3*m2*y1+c3*m1*m2*y1+c1*c3*m1*m2*y1+c1*c2*c3*m1*m2*y1+c3*cp1*m1*m2*y1+c2*c3*cp1*m1*m2*y1+c2*c3*cp1*cp2*m1*m2*y1+cp3*m1*m2*y1+c1*cp3*m1*m2*y1+c2*cp3*m1*m2*y1+c1*c2*cp3*m1*m2*y1+c2*c3*cp3*m1*m2*y1+c2*cp1*cp3*m1*m2*y1+c3*cp1*cp3*m1*m2*y1+c1*cp2*cp3*m1*m2*y1+c3*cp2*cp3*m1*m2*y1+cp1*cp2*cp3*m1*m2*y1+c2*cp1*cp2*cp3*m1*m2*y1+c3*cp1*cp2*cp3*m1*m2*y1+c1*c2*m3*y1+c2*c3*m3*y1+c2*c3*cp1*m3*y1+c2*cp2*m3*y1+c3*cp2*m3*y1+cp1*cp2*m3*y1+c2*cp1*cp2*m3*y1+c3*cp1*cp2*m3*y1+c1*c3*cp1*cp2*m3*y1+c2*cp3*m3*y1+c1*c2*cp1*cp3*m3*y1+cp2*cp3*m3*y1+c1*c2*cp2*cp3*m3*y1+c1*c3*cp2*cp3*m3*y1+c2*cp1*cp2*cp3*m3*y1+c3*cp1*cp2*cp3*m3*y1+c1*c3*cp1*cp2*cp3*m3*y1+c2*m1*m3*y1+c2*cp1*m1*m3*y1+c1*cp2*m1*m3*y1+c2*cp2*m1*m3*y1+cp1*cp2*m1*m3*y1+c1*cp1*cp2*m1*m3*y1+c2*cp3*m1*m3*y1+c1*c2*cp3*m1*m3*y1+c2*cp1*cp3*m1*m3*y1+cp2*cp3*m1*m3*y1+c2*cp2*cp3*m1*m3*y1+c3*cp2*cp3*m1*m3*y1+cp1*cp2*cp3*m1*m3*y1+c2*cp1*cp2*cp3*m1*m3*y1+c3*cp1*cp2*cp3*m1*m3*y1+m2*m3*y1+c1*c2*m2*m3*y1+cp1*m2*m3*y1+c2*cp1*m2*m3*y1+c1*c2*cp1*m2*m3*y1+c1*c3*cp1*m2*m3*y1+cp2*m2*m3*y1+c1*cp2*m2*m3*y1+c1*c2*cp2*m2*m3*y1+cp1*cp2*m2*m3*y1+c1*cp1*cp2*m2*m3*y1+c2*cp1*cp2*m2*m3*y1+c1*c2*cp1*cp2*m2*m3*y1+cp3*m2*m3*y1+c1*cp3*m2*m3*y1+c2*cp3*m2*m3*y1+cp1*cp3*m2*m3*y1+c2*cp1*cp3*m2*m3*y1+c1*c2*cp1*cp3*m2*m3*y1+c1*cp2*cp3*m2*m3*y1+c2*cp2*cp3*m2*m3*y1+c1*c2*cp2*cp3*m2*m3*y1+m1*m2*m3*y1+c1*m1*m2*m3*y1+c2*cp1*m1*m2*m3*y1+c2*cp2*m1*m2*m3*y1+cp1*cp2*m1*m2*m3*y1+c2*cp1*cp2*m1*m2*m3*y1+cp3*m1*m2*m3*y1+c2*cp3*m1*m2*m3*y1+c1*c2*cp3*m1*m2*m3*y1+c1*cp1*cp3*m1*m2*m3*y1+c2*cp1*cp3*m1*m2*m3*y1+cp2*cp3*m1*m2*m3*y1+c1*cp2*cp3*m1*m2*m3*y1+c2*cp2*cp3*m1*m2*m3*y1+cp1*cp2*cp3*m1*m2*m3*y1+c2*cp1*cp2*cp3*m1*m2*m3*y1+c2*c3*x1*y1+cp2*cp3*x1*y1+c3*m2*x1*y1+c3*cp1*m2*x1*y1+c3*cp2*m2*x1*y1+cp3*m2*x1*y1+cp1*cp3*m2*x1*y1+c1*cp2*m3*x1*y1+cp1*cp2*m3*x1*y1+c2*cp3*m3*x1*y1+cp2*cp3*m3*x1*y1+cp2*m1*m3*x1*y1+cp1*cp2*m1*m3*x1*y1+cp3*m2*m3*x1*y1+cp1*cp3*m2*m3*x1*y1+cp2*cp3*m2*m3*x1*y1+c3*x2*y1+c1*c3*x2*y1+c2*c3*x2*y1+c1*c2*c3*x2*y1+c3*cp2*x2*y1+c2*cp3*x2*y1+c3*cp3*x2*y1+cp1*cp3*x2*y1+c2*cp1*cp3*x2*y1+c3*cp1*cp3*x2*y1+cp2*cp3*x2*y1+c1*cp2*cp3*x2*y1+c3*m1*x2*y1+c2*c3*m1*x2*y1+c3*cp1*m1*x2*y1+c2*c3*cp1*m1*x2*y1+c3*cp1*cp2*m1*x2*y1+c1*cp1*cp3*m1*x2*y1+c2*cp1*cp3*m1*x2*y1+c3*cp1*cp3*m1*x2*y1+cp2*cp3*m1*x2*y1+cp1*cp2*cp3*m1*x2*y1+c3*m2*x2*y1+c1*c3*m2*x2*y1+c2*c3*cp1*m2*x2*y1+c3*cp2*m2*x2*y1+c1*c3*cp2*m2*x2*y1+cp3*m2*x2*y1+c1*cp3*m2*x2*y1+c2*cp1*cp3*m2*x2*y1+c3*cp1*cp3*m2*x2*y1+cp2*cp3*m2*x2*y1+cp1*cp2*cp3*m2*x2*y1+c3*m1*m2*x2*y1+c3*cp1*m1*m2*x2*y1+c3*cp2*m1*m2*x2*y1+c3*cp1*cp2*m1*m2*x2*y1+cp3*m1*m2*x2*y1+cp1*cp3*m1*m2*x2*y1+cp1*cp2*cp3*m1*m2*x2*y1+m3*x2*y1+c1*m3*x2*y1+c1*cp1*m3*x2*y1+c1*cp2*m3*x2*y1+c1*cp1*cp2*m3*x2*y1+c1*cp3*m3*x2*y1+c2*cp3*m3*x2*y1+c1*c2*cp3*m3*x2*y1+cp2*cp3*m3*x2*y1+c1*cp2*cp3*m3*x2*y1+cp1*cp2*cp3*m3*x2*y1+m1*m3*x2*y1+cp2*m1*m3*x2*y1+cp1*cp2*m1*m3*x2*y1+cp3*m1*m3*x2*y1+c2*cp3*m1*m3*x2*y1+c2*cp1*cp3*m1*m3*x2*y1+cp2*cp3*m1*m3*x2*y1+cp1*cp2*cp3*m1*m3*x2*y1+cp3*m2*m3*x2*y1+c1*cp3*m2*m3*x2*y1+cp1*cp3*m2*m3*x2*y1+c2*cp1*cp3*m2*m3*x2*y1+cp2*cp3*m2*m3*x2*y1+c1*cp2*cp3*m2*m3*x2*y1+cp3*m1*m2*m3*x2*y1+cp1*cp3*m1*m2*m3*x2*y1+cp2*cp3*m1*m2*m3*x2*y1+cp1*cp2*cp3*m1*m2*m3*x2*y1+c1*c2*x3*y1+c2*cp1*x3*y1+c2*c3*cp1*x3*y1+cp2*x3*y1+c1*c2*cp2*x3*y1+cp1*cp2*x3*y1+c1*cp1*cp2*x3*y1+c2*c3*cp1*cp2*x3*y1+c2*cp3*x3*y1+c1*c2*cp3*x3*y1+c2*c3*cp1*cp3*x3*y1+c2*cp2*cp3*x3*y1+c3*cp2*cp3*x3*y1+c2*cp1*cp2*cp3*x3*y1+c1*c2*cp1*cp2*cp3*x3*y1+c3*cp1*cp2*cp3*x3*y1+c1*c3*cp1*cp2*cp3*x3*y1+c2*m1*x3*y1+c2*cp1*m1*x3*y1+c2*cp2*m1*x3*y1+c2*cp1*cp2*m1*x3*y1+c2*cp3*m1*x3*y1+c2*cp1*cp3*m1*x3*y1+m2*x3*y1+c1*m2*x3*y1+c2*m2*x3*y1+c1*cp1*m2*x3*y1+c3*cp1*m2*x3*y1+cp2*m2*x3*y1+cp1*cp2*m2*x3*y1+c2*cp1*cp2*m2*x3*y1+c3*cp1*cp2*m2*x3*y1+cp3*m2*x3*y1+c1*cp1*cp3*m2*x3*y1+c2*cp1*cp3*m2*x3*y1+c3*cp1*cp3*m2*x3*y1+cp2*cp3*m2*x3*y1+c1*cp2*cp3*m2*x3*y1+cp1*cp2*cp3*m2*x3*y1+c2*cp1*cp2*cp3*m2*x3*y1+m1*m2*x3*y1+cp1*m1*m2*x3*y1+cp2*cp3*m1*m2*x3*y1+cp1*cp2*cp3*m1*m2*x3*y1+c2*m3*x3*y1+c2*cp2*m3*x3*y1+c2*cp3*m3*x3*y1+c2*cp1*cp3*m3*x3*y1+cp2*cp3*m3*x3*y1+c2*cp2*cp3*m3*x3*y1+cp1*cp2*cp3*m3*x3*y1+c1*cp1*cp2*cp3*m3*x3*y1+m2*m3*x3*y1+cp1*m2*m3*x3*y1+cp3*m2*m3*x3*y1+cp1*cp3*m2*m3*x3*y1+cp2*cp3*m2*m3*x3*y1+c1*c2*c3*y2+c3*cp1*y2+c1*c3*cp1*y2+c2*c3*cp1*y2+c3*cp1*cp2*y2+c2*c3*cp1*cp2*y2+c1*cp3*y2+c1*c2*c3*cp3*y2+c1*cp1*cp3*y2+c2*cp1*cp3*y2+c1*c2*cp1*cp3*y2+c3*cp1*cp3*y2+c1*c3*cp1*cp3*y2+c1*cp2*cp3*y2+c1*c3*cp2*cp3*y2+c1*c2*c3*cp2*cp3*y2+c2*c3*cp1*cp2*cp3*y2+c1*c2*c3*cp1*cp2*cp3*y2+c3*m1*y2+c1*c2*c3*cp1*m1*y2+c2*c3*cp2*m1*y2+c1*c3*cp1*cp2*m1*y2+c2*c3*cp1*cp2*m1*y2+c1*cp3*m1*y2+c1*c3*cp3*m1*y2+c2*c3*cp3*m1*y2+c1*c2*c3*cp3*m1*y2+c2*cp1*cp3*m1*y2+c3*cp1*cp3*m1*y2+c1*c3*cp1*cp3*m1*y2+cp2*cp3*m1*y2+c1*cp2*cp3*m1*y2+c2*cp2*cp3*m1*y2+c2*c3*cp2*cp3*m1*y2+cp1*cp2*cp3*m1*y2+c2*cp1*cp2*cp3*m1*y2+c1*c3*cp1*cp2*cp3*m1*y2+c1*c2*c3*m2*y2+c3*cp1*m2*y2+c1*c3*cp1*m2*y2+c1*c3*cp2*m2*y2+c2*c3*cp1*cp2*m2*y2+c1*c2*c3*cp1*cp2*m2*y2+c1*cp3*m2*y2+c1*c3*cp3*m2*y2+c1*c2*c3*cp3*m2*y2+c1*cp1*cp3*m2*y2+c2*cp1*cp3*m2*y2+c1*c3*cp1*cp3*m2*y2+c1*c2*c3*cp1*cp3*m2*y2+c1*cp2*cp3*m2*y2+c1*c2*cp2*cp3*m2*y2+c1*c2*c3*cp2*cp3*m2*y2+c1*cp1*cp2*cp3*m2*y2+c2*cp1*cp2*cp3*m2*y2+c3*cp1*cp2*cp3*m2*y2+c2*c3*cp1*cp2*cp3*m2*y2+c3*m1*m2*y2+c1*c3*m1*m2*y2+c3*cp1*m1*m2*y2+c2*c3*cp1*m1*m2*y2+c1*c3*cp1*cp2*m1*m2*y2+c2*c3*cp1*cp2*m1*m2*y2+c3*cp3*m1*m2*y2+c1*c3*cp3*m1*m2*y2+c2*c3*cp3*m1*m2*y2+cp1*cp3*m1*m2*y2+c3*cp1*cp3*m1*m2*y2+c2*c3*cp1*cp3*m1*m2*y2+cp2*cp3*m1*m2*y2+c1*c3*cp2*cp3*m1*m2*y2+c1*m3*y2+c1*c2*m3*y2+c1*cp1*m3*y2+c2*cp1*m3*y2+c1*c2*cp1*m3*y2+c3*cp1*m3*y2+c1*cp2*m3*y2+c1*cp1*cp2*m3*y2+c2*cp1*cp2*m3*y2+c1*c2*cp1*cp2*m3*y2+c2*c3*cp1*cp2*m3*y2+c1*c2*cp3*m3*y2+c1*c2*cp1*cp3*m3*y2+c1*c3*cp1*cp3*m3*y2+c2*c3*cp1*cp3*m3*y2+c1*cp1*cp2*cp3*m3*y2+c3*cp1*cp2*cp3*m3*y2+c1*c3*cp1*cp2*cp3*m3*y2+m1*m3*y2+c1*m1*m3*y2+c1*c2*m1*m3*y2+c3*m1*m3*y2+c1*c3*m1*m3*y2+cp1*m1*m3*y2+c1*cp1*m1*m3*y2+c1*c2*cp1*m1*m3*y2+c3*cp1*m1*m3*y2+cp2*m1*m3*y2+c1*c2*cp2*m1*m3*y2+c1*cp1*cp2*m1*m3*y2+c2*cp1*cp2*m1*m3*y2+c1*cp3*m1*m3*y2+c2*cp3*m1*m3*y2+c1*c2*cp1*cp3*m1*m3*y2+c3*cp1*cp3*m1*m3*y2+cp2*cp3*m1*m3*y2+c3*cp2*cp3*m1*m3*y2+cp1*cp2*cp3*m1*m3*y2+c1*cp1*cp2*cp3*m1*m3*y2+cp1*m2*m3*y2+c1*cp1*m2*m3*y2+c2*cp1*m2*m3*y2+c1*c2*cp1*m2*m3*y2+c1*c3*cp1*m2*m3*y2+c1*cp2*m2*m3*y2+c1*c2*cp2*m2*m3*y2+c1*c3*cp2*m2*m3*y2+c1*cp1*cp2*m2*m3*y2+c1*c2*cp1*cp2*m2*m3*y2+c1*c3*cp3*m2*m3*y2+c1*cp1*cp3*m2*m3*y2+cp1*cp2*cp3*m2*m3*y2+c1*c2*cp1*m1*m2*m3*y2+cp2*m1*m2*m3*y2+c1*cp2*m1*m2*m3*y2+c1*c2*cp2*m1*m2*m3*y2+cp1*cp2*m1*m2*m3*y2+c1*cp1*cp2*m1*m2*m3*y2+c2*cp1*cp2*m1*m2*m3*y2+c1*cp3*m1*m2*m3*y2+c2*cp1*cp3*m1*m2*m3*y2+cp2*cp3*m1*m2*m3*y2+cp1*cp2*cp3*m1*m2*m3*y2+c1*cp1*cp2*cp3*m1*m2*m3*y2+c3*x1*y2+c1*c3*x1*y2+c2*c3*x1*y2+c1*c2*c3*x1*y2+c3*cp1*x1*y2+c3*cp1*cp2*x1*y2+cp3*x1*y2+cp1*cp3*x1*y2+cp2*cp3*x1*y2+c1*cp2*cp3*x1*y2+c3*m1*x1*y2+c2*c3*m1*x1*y2+c2*c3*cp1*m1*x1*y2+c3*cp1*cp2*m1*x1*y2+c1*cp3*m1*x1*y2+c1*cp1*cp3*m1*x1*y2+c2*cp1*cp3*m1*x1*y2+c3*cp1*cp3*m1*x1*y2+cp2*cp3*m1*x1*y2+cp1*cp2*cp3*m1*x1*y2+c3*m2*x1*y2+c1*c3*m2*x1*y2+c3*cp1*m2*x1*y2+c2*c3*cp1*m2*x1*y2+c3*cp2*m2*x1*y2+c1*c3*cp2*m2*x1*y2+cp3*m2*x1*y2+c2*cp1*cp3*m2*x1*y2+c3*cp1*cp3*m2*x1*y2+c3*m1*m2*x1*y2+c3*cp1*m1*m2*x1*y2+c3*cp2*m1*m2*x1*y2+c3*cp1*cp2*m1*m2*x1*y2+cp1*cp3*m1*m2*x1*y2+cp1*cp2*cp3*m1*m2*x1*y2+c1*m3*x1*y2+cp2*m3*x1*y2+c1*cp1*cp2*m3*x1*y2+cp3*m3*x1*y2+c2*cp3*m3*x1*y2+c1*c2*cp3*m3*x1*y2+cp1*cp3*m3*x1*y2+cp2*cp3*m3*x1*y2+c1*cp2*cp3*m3*x1*y2+cp1*cp2*cp3*m3*x1*y2+m1*m3*x1*y2+cp1*m1*m3*x1*y2+cp1*cp2*m1*m3*x1*y2+c2*cp3*m1*m3*x1*y2+cp1*cp3*m1*m3*x1*y2+c2*cp1*cp3*m1*m3*x1*y2+cp2*cp3*m1*m3*x1*y2+cp1*cp2*cp3*m1*m3*x1*y2+cp3*m2*m3*x1*y2+c1*cp3*m2*m3*x1*y2+c2*cp1*cp3*m2*m3*x1*y2+cp2*cp3*m2*m3*x1*y2+c1*cp2*cp3*m2*m3*x1*y2+cp3*m1*m2*m3*x1*y2+cp1*cp3*m1*m2*m3*x1*y2+cp2*cp3*m1*m2*m3*x1*y2+cp1*cp2*cp3*m1*m2*m3*x1*y2+c1*c3*x2*y2+c1*c3*cp2*x2*y2+c1*c2*cp3*x2*y2+c1*c3*cp3*x2*y2+c1*cp2*cp3*m2*x2*y2+c1*cp1*m3*x2*y2+c1*cp2*m3*x2*y2+cp1*m1*m3*x2*y2+cp2*m1*m3*x2*y2+c1*x3*y2+c1*cp1*x3*y2+c2*cp1*x3*y2+c1*cp2*x3*y2+c1*c3*cp2*x3*y2+c1*c2*c3*cp2*x3*y2+cp1*cp2*x3*y2+c2*cp1*cp2*x3*y2+c3*cp1*cp2*x3*y2+c1*c3*cp1*cp2*x3*y2+c2*c3*cp1*cp2*x3*y2+c1*cp3*x3*y2+c1*c2*cp3*x3*y2+c1*c2*c3*cp3*x3*y2+c1*c3*cp1*cp3*x3*y2+c2*c3*cp1*cp3*x3*y2+c1*c2*cp2*cp3*x3*y2+c1*c3*cp2*cp3*x3*y2+cp1*cp2*cp3*x3*y2+c1*cp1*cp2*cp3*x3*y2+c2*cp1*cp2*cp3*x3*y2+c1*c2*cp1*cp2*cp3*x3*y2+c3*cp1*cp2*cp3*x3*y2+c1*c3*cp1*cp2*cp3*x3*y2+m1*x3*y2+c1*c2*m1*x3*y2+c3*m1*x3*y2+c2*c3*m1*x3*y2+cp1*m1*x3*y2+c1*cp1*m1*x3*y2+cp2*m1*x3*y2+c3*cp2*m1*x3*y2+c1*c3*cp2*m1*x3*y2+c1*cp3*m1*x3*y2+c1*c2*cp3*m1*x3*y2+c3*cp3*m1*x3*y2+cp1*cp3*m1*x3*y2+c2*cp1*cp3*m1*x3*y2+c3*cp1*cp3*m1*x3*y2+c2*cp2*cp3*m1*x3*y2+c3*cp2*cp3*m1*x3*y2+cp1*cp2*cp3*m1*x3*y2+c1*cp1*cp2*cp3*m1*x3*y2+c1*m2*x3*y2+c1*cp1*m2*x3*y2+c1*c2*cp2*m2*x3*y2+c1*c3*cp2*m2*x3*y2+cp1*cp2*m2*x3*y2+c3*cp1*cp2*m2*x3*y2+c1*cp3*m2*x3*y2+c1*c3*cp3*m2*x3*y2+c2*cp1*cp3*m2*x3*y2+c3*cp1*cp3*m2*x3*y2+c1*cp2*cp3*m2*x3*y2+c1*c2*cp2*cp3*m2*x3*y2+c1*cp1*cp2*cp3*m2*x3*y2+c2*cp1*cp2*cp3*m2*x3*y2+m1*m2*x3*y2+c1*m1*m2*x3*y2+c2*m1*m2*x3*y2+c3*m1*m2*x3*y2+cp1*m1*m2*x3*y2+cp2*m1*m2*x3*y2+c1*cp2*m1*m2*x3*y2+cp1*cp2*m1*m2*x3*y2+c1*cp3*m1*m2*x3*y2+c2*cp3*m1*m2*x3*y2+cp1*cp3*m1*m2*x3*y2+cp2*cp3*m1*m2*x3*y2+c1*cp2*cp3*m1*m2*x3*y2+cp1*cp2*m3*x3*y2+c1*cp1*cp2*m3*x3*y2+c2*cp1*cp2*m3*x3*y2+c1*cp3*m3*x3*y2+c1*cp1*cp3*m3*x3*y2+c2*cp1*cp3*m3*x3*y2+cp1*cp2*cp3*m3*x3*y2+c1*cp1*cp2*cp3*m3*x3*y2+cp1*cp2*m1*m3*x3*y2+cp3*m1*m3*x3*y2+cp1*cp3*m1*m3*x3*y2+cp2*cp3*m1*m3*x3*y2+cp1*cp2*m2*m3*x3*y2+cp1*cp3*m2*m3*x3*y2+c1*c2*c3*y1*y2+c3*cp1*y1*y2+c3*cp2*y1*y2+c3*cp1*cp2*y1*y2+c1*cp3*y1*y2+c2*cp3*y1*y2+c3*cp3*y1*y2+cp1*cp3*y1*y2+c1*cp2*cp3*y1*y2+c2*c3*m1*y1*y2+c2*c3*cp1*m1*y1*y2+c3*cp1*cp2*m1*y1*y2+cp3*m1*y1*y2+cp1*cp3*m1*y1*y2+c1*cp1*cp3*m1*y1*y2+c2*cp1*cp3*m1*y1*y2+c3*cp1*cp3*m1*y1*y2+cp2*cp3*m1*y1*y2+cp1*cp2*cp3*m1*y1*y2+c1*c3*m2*y1*y2+c3*cp1*m2*y1*y2+c2*c3*cp1*m2*y1*y2+c1*c3*cp2*m2*y1*y2+cp3*m2*y1*y2+c1*cp3*m2*y1*y2+c2*cp1*cp3*m2*y1*y2+c3*cp1*cp3*m2*y1*y2+cp2*cp3*m2*y1*y2+c3*m1*m2*y1*y2+c3*cp1*m1*m2*y1*y2+c3*cp2*m1*m2*y1*y2+c3*cp1*cp2*m1*m2*y1*y2+cp3*m1*m2*y1*y2+cp1*cp3*m1*m2*y1*y2+cp1*cp2*cp3*m1*m2*y1*y2+m3*y1*y2+c1*m3*y1*y2+cp1*m3*y1*y2+c1*cp1*m3*y1*y2+c1*cp2*m3*y1*y2+c1*cp1*cp2*m3*y1*y2+c1*c2*cp3*m3*y1*y2+cp1*cp3*m3*y1*y2+c1*cp2*cp3*m3*y1*y2+cp1*cp2*cp3*m3*y1*y2+m1*m3*y1*y2+cp2*m1*m3*y1*y2+cp1*cp2*m1*m3*y1*y2+c2*cp3*m1*m3*y1*y2+cp1*cp3*m1*m3*y1*y2+c2*cp1*cp3*m1*m3*y1*y2+cp2*cp3*m1*m3*y1*y2+cp1*cp2*cp3*m1*m3*y1*y2+c1*cp3*m2*m3*y1*y2+c2*cp1*cp3*m2*m3*y1*y2+c1*cp2*cp3*m2*m3*y1*y2+cp3*m1*m2*m3*y1*y2+cp1*cp3*m1*m2*m3*y1*y2+cp2*cp3*m1*m2*m3*y1*y2+cp1*cp2*cp3*m1*m2*m3*y1*y2+c1*c2*y3+c1*c2*c3*y3+c2*cp1*y3+c1*c2*cp1*y3+c2*c3*cp1*y3+c1*c2*c3*cp1*y3+c1*c2*cp2*y3+c1*c2*c3*cp2*y3+cp1*cp2*y3+c2*cp1*cp2*y3+c1*c2*cp1*cp2*y3+c3*cp1*cp2*y3+c1*c2*c3*cp1*cp2*y3+c1*c2*c3*cp3*y3+c1*c2*cp1*cp3*y3+c1*c2*c3*cp1*cp3*y3+c1*cp2*cp3*y3+c1*c3*cp2*cp3*y3+cp1*cp2*cp3*y3+c1*cp1*cp2*cp3*y3+c2*cp1*cp2*cp3*y3+c3*cp1*cp2*cp3*y3+c1*c3*cp1*cp2*cp3*y3+c1*c2*c3*cp1*cp2*cp3*y3+c1*c2*m1*y3+c1*c2*cp1*m1*y3+c1*cp2*m1*y3+c2*cp2*m1*y3+c1*c2*cp2*m1*y3+c1*c3*cp2*m1*y3+cp1*cp2*m1*y3+c2*cp1*cp2*m1*y3+c1*c2*cp1*cp2*m1*y3+c3*cp1*cp2*m1*y3+c2*cp3*m1*y3+c1*c2*cp3*m1*y3+c1*c2*c3*cp3*m1*y3+cp2*cp3*m1*y3+c1*c2*cp2*cp3*m1*y3+c3*cp2*cp3*m1*y3+c1*c3*cp1*cp2*cp3*m1*y3+c1*c3*m2*y3+cp1*m2*y3+c1*cp1*m2*y3+c1*c2*cp1*m2*y3+c2*c3*cp1*m2*y3+c1*cp2*m2*y3+cp1*cp2*m2*y3+c1*c2*cp1*cp2*m2*y3+c2*c3*cp1*cp2*m2*y3+c1*c3*cp3*m2*y3+c1*c2*c3*cp3*m2*y3+c1*cp1*cp3*m2*y3+c2*cp1*cp3*m2*y3+c3*cp1*cp3*m2*y3+c1*c3*cp1*cp3*m2*y3+c1*c3*cp2*cp3*m2*y3+c1*c2*c3*cp2*cp3*m2*y3+cp1*cp2*cp3*m2*y3+c2*cp1*cp2*cp3*m2*y3+c1*c2*cp1*cp2*cp3*m2*y3+c1*c3*cp1*cp2*cp3*m2*y3+c2*c3*cp1*cp2*cp3*m2*y3+c1*m1*m2*y3+c2*c3*m1*m2*y3+cp1*m1*m2*y3+c1*cp1*m1*m2*y3+c2*cp1*m1*m2*y3+c1*c3*cp1*m1*m2*y3+c2*c3*cp2*m1*m2*y3+c2*cp1*cp2*m1*m2*y3+c2*cp3*m1*m2*y3+c1*c2*cp3*m1*m2*y3+c3*cp3*m1*m2*y3+c2*c3*cp3*m1*m2*y3+cp1*cp3*m1*m2*y3+c1*c3*cp1*cp3*m1*m2*y3+c2*c3*cp1*cp3*m1*m2*y3+cp2*cp3*m1*m2*y3+c1*cp2*cp3*m1*m2*y3+c2*cp2*cp3*m1*m2*y3+c3*cp2*cp3*m1*m2*y3+c1*c3*cp2*cp3*m1*m2*y3+c2*c3*cp2*cp3*m1*m2*y3+c1*cp1*cp2*cp3*m1*m2*y3+c3*cp1*cp2*cp3*m1*m2*y3+c2*cp1*m3*y3+cp1*cp2*m3*y3+c2*cp1*cp2*m3*y3+c1*c3*cp1*cp2*m3*y3+c2*c3*cp1*cp2*m3*y3+c1*c2*cp1*cp3*m3*y3+c1*c2*cp2*cp3*m3*y3+c1*c3*cp2*cp3*m3*y3+cp1*cp2*cp3*m3*y3+c2*cp1*cp2*cp3*m3*y3+c1*c2*cp1*cp2*cp3*m3*y3+c3*cp1*cp2*cp3*m3*y3+c2*cp1*m1*m3*y3+cp1*cp2*m1*m3*y3+c2*cp1*cp2*m1*m3*y3+c3*cp1*cp2*m1*m3*y3+c1*c2*cp3*m1*m3*y3+c1*cp1*cp2*cp3*m1*m3*y3+c3*cp1*cp2*cp3*m1*m3*y3+c1*m2*m3*y3+c1*c3*m2*m3*y3+c1*cp1*m2*m3*y3+c2*cp1*m2*m3*y3+c1*c3*cp1*m2*m3*y3+c2*c3*cp1*m2*m3*y3+c1*cp2*m2*m3*y3+c1*c2*c3*cp2*m2*m3*y3+c1*cp1*cp2*m2*m3*y3+c2*cp1*cp2*m2*m3*y3+c1*c2*cp3*m2*m3*y3+c1*c2*c3*cp3*m2*m3*y3+cp1*cp3*m2*m3*y3+c3*cp1*cp3*m2*m3*y3+c1*cp2*cp3*m2*m3*y3+c1*c2*cp2*cp3*m2*m3*y3+c1*cp1*cp2*cp3*m2*m3*y3+c2*cp1*cp2*cp3*m2*m3*y3+c3*cp1*cp2*cp3*m2*m3*y3+c1*m1*m2*m3*y3+c3*m1*m2*m3*y3+c1*cp1*m1*m2*m3*y3+c3*cp1*m1*m2*m3*y3+c2*c3*cp1*m1*m2*m3*y3+c1*cp2*m1*m2*m3*y3+c2*cp2*m1*m2*m3*y3+c3*cp2*m1*m2*m3*y3+c3*cp1*cp2*m1*m2*m3*y3+cp3*m1*m2*m3*y3+c1*cp3*m1*m2*m3*y3+cp1*cp3*m1*m2*m3*y3+cp1*cp2*cp3*m1*m2*m3*y3+c1*c2*x1*y3+c2*c3*cp1*x1*y3+cp2*x1*y3+c1*cp2*x1*y3+c2*cp2*x1*y3+c1*c2*cp2*x1*y3+c3*cp2*x1*y3+cp1*cp2*x1*y3+c1*cp1*cp2*x1*y3+c2*cp1*cp2*x1*y3+c3*cp1*cp2*x1*y3+c2*c3*cp1*cp2*x1*y3+c2*cp3*x1*y3+c1*c2*cp3*x1*y3+c2*cp1*cp3*x1*y3+c2*c3*cp1*cp3*x1*y3+cp2*cp3*x1*y3+c3*cp2*cp3*x1*y3+c1*c2*cp1*cp2*cp3*x1*y3+c1*c3*cp1*cp2*cp3*x1*y3+c2*m1*x1*y3+c2*cp1*m1*x1*y3+cp2*m1*x1*y3+c2*cp2*m1*x1*y3+cp1*cp2*m1*x1*y3+c2*cp1*cp2*m1*x1*y3+c2*cp3*m1*x1*y3+c2*cp1*cp3*m1*x1*y3+m2*x1*y3+c1*m2*x1*y3+c2*m2*x1*y3+cp1*m2*x1*y3+c1*cp1*m2*x1*y3+c3*cp1*m2*x1*y3+cp1*cp2*m2*x1*y3+c2*cp1*cp2*m2*x1*y3+c3*cp1*cp2*m2*x1*y3+cp3*m2*x1*y3+c1*cp1*cp3*m2*x1*y3+c2*cp1*cp3*m2*x1*y3+c3*cp1*cp3*m2*x1*y3+cp2*cp3*m2*x1*y3+c1*cp2*cp3*m2*x1*y3+c2*cp1*cp2*cp3*m2*x1*y3+m1*m2*x1*y3+cp1*m1*m2*x1*y3+cp2*cp3*m1*m2*x1*y3+cp1*cp2*cp3*m1*m2*x1*y3+c2*m3*x1*y3+cp2*m3*x1*y3+c2*cp2*m3*x1*y3+c2*cp3*m3*x1*y3+c2*cp1*cp3*m3*x1*y3+c2*cp2*cp3*m3*x1*y3+c1*cp1*cp2*cp3*m3*x1*y3+m2*m3*x1*y3+cp1*m2*m3*x1*y3+cp3*m2*m3*x1*y3+cp1*cp3*m2*m3*x1*y3+cp2*cp3*m2*m3*x1*y3+c1*x2*y3+c1*cp1*x2*y3+c1*cp2*x2*y3+c1*c2*cp2*x2*y3+c1*c2*c3*cp2*x2*y3+c1*cp1*cp2*x2*y3+c1*c3*cp1*cp2*x2*y3+c2*c3*cp1*cp2*x2*y3+c1*c2*cp3*x2*y3+c1*c2*c3*cp3*x2*y3+cp1*cp3*x2*y3+c1*cp1*cp3*x2*y3+c2*cp1*cp3*x2*y3+c3*cp1*cp3*x2*y3+c1*c3*cp1*cp3*x2*y3+c2*c3*cp1*cp3*x2*y3+c1*cp2*cp3*x2*y3+c1*c2*cp1*cp2*cp3*x2*y3+c1*c3*cp1*cp2*cp3*x2*y3+c1*c2*m1*x2*y3+c3*m1*x2*y3+c2*c3*m1*x2*y3+cp1*m1*x2*y3+c1*cp1*m1*x2*y3+c2*cp1*m1*x2*y3+cp2*m1*x2*y3+c1*cp2*m1*x2*y3+c1*c3*cp2*m1*x2*y3+cp1*cp2*m1*x2*y3+c1*cp3*m1*x2*y3+c2*cp3*m1*x2*y3+c1*c2*cp3*m1*x2*y3+c3*cp3*m1*x2*y3+c2*cp1*cp3*m1*x2*y3+c3*cp1*cp3*m1*x2*y3+cp2*cp3*m1*x2*y3+c2*cp2*cp3*m1*x2*y3+c3*cp2*cp3*m1*x2*y3+c1*cp1*cp2*cp3*m1*x2*y3+c1*m2*x2*y3+c1*cp1*m2*x2*y3+c2*cp1*m2*x2*y3+c1*c2*cp2*m2*x2*y3+c1*c3*cp2*m2*x2*y3+cp1*cp2*m2*x2*y3+c3*cp1*cp2*m2*x2*y3+c1*cp3*m2*x2*y3+c1*c3*cp3*m2*x2*y3+cp1*cp3*m2*x2*y3+c2*cp1*cp3*m2*x2*y3+c3*cp1*cp3*m2*x2*y3+c1*cp2*cp3*m2*x2*y3+c1*c2*cp2*cp3*m2*x2*y3+cp1*cp2*cp3*m2*x2*y3+c1*cp1*cp2*cp3*m2*x2*y3+c2*cp1*cp2*cp3*m2*x2*y3+m1*m2*x2*y3+c1*m1*m2*x2*y3+c2*m1*m2*x2*y3+c3*m1*m2*x2*y3+c1*cp2*m1*m2*x2*y3+cp1*cp2*m1*m2*x2*y3+cp3*m1*m2*x2*y3+c1*cp3*m1*m2*x2*y3+c2*cp3*m1*m2*x2*y3+cp1*cp3*m1*m2*x2*y3+c1*cp2*cp3*m1*m2*x2*y3+cp1*m3*x2*y3+c2*cp1*m3*x2*y3+cp1*cp2*m3*x2*y3+c1*cp1*cp2*m3*x2*y3+c2*cp1*cp2*m3*x2*y3+c1*cp3*m3*x2*y3+cp1*cp3*m3*x2*y3+c1*cp1*cp3*m3*x2*y3+c2*cp1*cp3*m3*x2*y3+c1*cp1*cp2*cp3*m3*x2*y3+cp1*cp2*m1*m3*x2*y3+cp3*m1*m3*x2*y3+cp1*cp3*m1*m3*x2*y3+cp2*cp3*m1*m3*x2*y3+cp1*m2*m3*x2*y3+cp1*cp2*m2*m3*x2*y3+cp1*cp3*m2*m3*x2*y3+c2*cp1*x3*y3+c1*c2*cp3*x3*y3+c1*cp2*cp3*x3*y3+c1*c2*cp2*cp3*x3*y3+c1*c3*cp2*cp3*x3*y3+cp1*cp2*cp3*x3*y3+c1*cp1*cp2*cp3*x3*y3+c2*cp1*cp2*cp3*x3*y3+c3*cp1*cp2*cp3*x3*y3+c2*cp1*m1*x3*y3+c3*cp2*m1*x3*y3+cp1*cp2*m1*x3*y3+c3*cp2*cp3*m1*x3*y3+cp1*cp2*cp3*m1*x3*y3+c1*m2*x3*y3+c2*cp1*m2*x3*y3+cp1*cp2*m2*x3*y3+c1*cp2*cp3*m2*x3*y3+cp1*m1*m2*x3*y3+c2*cp1*m3*x3*y3+cp1*cp2*m3*x3*y3+cp1*cp2*cp3*m3*x3*y3+cp1*m2*m3*x3*y3+c2*y1*y3+c1*c2*y1*y3+c2*c3*cp1*y1*y3+cp2*y1*y3+c1*cp2*y1*y3+c1*c2*cp2*y1*y3+c3*cp2*y1*y3+c1*cp1*cp2*y1*y3+c2*cp1*cp2*y1*y3+c3*cp1*cp2*y1*y3+c2*c3*cp1*cp2*y1*y3+c1*c2*cp3*y1*y3+c2*cp1*cp3*y1*y3+c2*c3*cp1*cp3*y1*y3+cp2*cp3*y1*y3+c2*cp2*cp3*y1*y3+c2*cp1*cp2*cp3*y1*y3+c1*c2*cp1*cp2*cp3*y1*y3+c3*cp1*cp2*cp3*y1*y3+c1*c3*cp1*cp2*cp3*y1*y3+c2*m1*y1*y3+c2*cp1*m1*y1*y3+cp2*m1*y1*y3+c2*cp2*m1*y1*y3+cp1*cp2*m1*y1*y3+c2*cp1*cp2*m1*y1*y3+c2*cp3*m1*y1*y3+c2*cp1*cp3*m1*y1*y3+m2*y1*y3+c1*m2*y1*y3+c2*m2*y1*y3+c1*cp1*m2*y1*y3+c3*cp1*m2*y1*y3+cp1*cp2*m2*y1*y3+c2*cp1*cp2*m2*y1*y3+c3*cp1*cp2*m2*y1*y3+cp1*cp3*m2*y1*y3+c1*cp1*cp3*m2*y1*y3+c2*cp1*cp3*m2*y1*y3+c3*cp1*cp3*m2*y1*y3+c1*cp2*cp3*m2*y1*y3+c2*cp1*cp2*cp3*m2*y1*y3+m1*m2*y1*y3+cp1*m1*m2*y1*y3+cp2*cp3*m1*m2*y1*y3+cp1*cp2*cp3*m1*m2*y1*y3+c2*m3*y1*y3+cp2*m3*y1*y3+c2*cp2*m3*y1*y3+c2*cp3*m3*y1*y3+c2*cp1*cp3*m3*y1*y3+cp2*cp3*m3*y1*y3+c2*cp2*cp3*m3*y1*y3+cp1*cp2*cp3*m3*y1*y3+c1*cp1*cp2*cp3*m3*y1*y3+m2*m3*y1*y3+cp1*m2*m3*y1*y3+cp3*m2*m3*y1*y3+cp1*cp3*m2*m3*y1*y3+cp2*cp3*m2*m3*y1*y3+c1*y2*y3+cp1*y2*y3+c1*cp1*y2*y3+c2*cp1*y2*y3+c1*cp2*y2*y3+c1*c2*cp2*y2*y3+c1*c2*c3*cp2*y2*y3+c1*cp1*cp2*y2*y3+c1*c3*cp1*cp2*y2*y3+c2*c3*cp1*cp2*y2*y3+c1*cp3*y2*y3+c1*c3*cp3*y2*y3+c1*c2*c3*cp3*y2*y3+cp1*cp3*y2*y3+c1*cp1*cp3*y2*y3+c2*cp1*cp3*y2*y3+c3*cp1*cp3*y2*y3+c1*c3*cp1*cp3*y2*y3+c2*c3*cp1*cp3*y2*y3+c1*c2*cp2*cp3*y2*y3+c1*c3*cp2*cp3*y2*y3+cp1*cp2*cp3*y2*y3+c1*cp1*cp2*cp3*y2*y3+c2*cp1*cp2*cp3*y2*y3+c1*c2*cp1*cp2*cp3*y2*y3+c3*cp1*cp2*cp3*y2*y3+c1*c3*cp1*cp2*cp3*y2*y3+m1*y2*y3+c1*m1*y2*y3+c2*m1*y2*y3+c1*c2*m1*y2*y3+c2*c3*m1*y2*y3+cp1*m1*y2*y3+c1*cp1*m1*y2*y3+c1*cp2*m1*y2*y3+c3*cp2*m1*y2*y3+c1*c3*cp2*m1*y2*y3+cp3*m1*y2*y3+c1*c2*cp3*m1*y2*y3+c3*cp3*m1*y2*y3+cp1*cp3*m1*y2*y3+c2*cp1*cp3*m1*y2*y3+c3*cp1*cp3*m1*y2*y3+c2*cp2*cp3*m1*y2*y3+c3*cp2*cp3*m1*y2*y3+cp1*cp2*cp3*m1*y2*y3+c1*cp1*cp2*cp3*m1*y2*y3+c1*m2*y2*y3+c1*cp1*m2*y2*y3+c1*c2*cp2*m2*y2*y3+c1*c3*cp2*m2*y2*y3+c3*cp1*cp2*m2*y2*y3+c1*c3*cp3*m2*y2*y3+c2*cp1*cp3*m2*y2*y3+c3*cp1*cp3*m2*y2*y3+c1*c2*cp2*cp3*m2*y2*y3+cp1*cp2*cp3*m2*y2*y3+c1*cp1*cp2*cp3*m2*y2*y3+c2*cp1*cp2*cp3*m2*y2*y3+m1*m2*y2*y3+c1*m1*m2*y2*y3+c2*m1*m2*y2*y3+c3*m1*m2*y2*y3+cp1*m1*m2*y2*y3+cp2*m1*m2*y2*y3+c1*cp2*m1*m2*y2*y3+cp1*cp2*m1*m2*y2*y3+cp3*m1*m2*y2*y3+c1*cp3*m1*m2*y2*y3+c2*cp3*m1*m2*y2*y3+cp1*cp3*m1*m2*y2*y3+cp2*cp3*m1*m2*y2*y3+c1*cp2*cp3*m1*m2*y2*y3+c1*cp1*cp2*m3*y2*y3+c2*cp1*cp2*m3*y2*y3+c1*cp3*m3*y2*y3+cp1*cp3*m3*y2*y3+c1*cp1*cp3*m3*y2*y3+c2*cp1*cp3*m3*y2*y3+cp1*cp2*cp3*m3*y2*y3+c1*cp1*cp2*cp3*m3*y2*y3+cp1*cp2*m1*m3*y2*y3+cp3*m1*m3*y2*y3+cp1*cp3*m1*m3*y2*y3+cp2*cp3*m1*m3*y2*y3+cp1*cp2*m2*m3*y2*y3+cp1*cp3*m2*m3*y2*y3+c1*c2*c3*z1+c1*c2*c3*cp1*z1+c1*c3*cp1*cp2*z1+c1*c2*cp1*cp3*z1+c2*c3*cp1*cp3*z1+c1*c2*cp2*cp3*z1+c1*c3*cp2*cp3*z1+c1*c2*c3*cp2*cp3*z1+c1*c3*cp1*cp2*cp3*z1+c1*c2*c3*cp1*cp2*cp3*z1+c2*c3*cp1*m1*z1+c1*c3*cp2*m1*z1+c3*cp1*cp2*m1*z1+c2*cp1*cp3*m1*z1+cp1*cp2*cp3*m1*z1+c2*cp1*cp2*cp3*m1*z1+c1*c2*c3*m2*z1+c3*cp1*m2*z1+c2*c3*cp1*m2*z1+c1*c2*c3*cp1*m2*z1+c1*c3*cp2*m2*z1+c2*c3*cp2*m2*z1+c1*c3*cp1*cp2*m2*z1+c2*c3*cp1*cp2*m2*z1+c1*c2*c3*cp1*cp2*m2*z1+c1*cp3*m2*z1+c2*c3*cp3*m2*z1+c1*c2*c3*cp3*m2*z1+cp1*cp3*m2*z1+c1*cp1*cp3*m2*z1+c2*cp1*cp3*m2*z1+c1*c2*c3*cp1*cp3*m2*z1+cp2*cp3*m2*z1+c2*cp2*cp3*m2*z1+c1*c2*cp2*cp3*m2*z1+c3*cp2*cp3*m2*z1+c2*c3*cp2*cp3*m2*z1+c1*cp1*cp2*cp3*m2*z1+c3*cp1*cp2*cp3*m2*z1+c1*c3*cp1*cp2*cp3*m2*z1+c2*c3*cp1*cp2*cp3*m2*z1+c1*c3*m1*m2*z1+c1*c2*c3*m1*m2*z1+c3*cp1*m1*m2*z1+c1*c3*cp1*m1*m2*z1+c3*cp1*cp2*m1*m2*z1+c2*c3*cp1*cp2*m1*m2*z1+c1*c2*cp3*m1*m2*z1+c1*c3*cp3*m1*m2*z1+cp1*cp3*m1*m2*z1+c1*cp1*cp3*m1*m2*z1+cp1*cp2*cp3*m1*m2*z1+c2*cp1*cp2*cp3*m1*m2*z1+c3*cp1*cp2*cp3*m1*m2*z1+c2*c3*cp1*m3*z1+c1*c3*cp2*m3*z1+c1*c3*cp1*cp2*m3*z1+c1*c2*cp3*m3*z1+c1*c2*cp1*cp3*m3*z1+c1*c2*cp2*cp3*m3*z1+c2*cp1*cp2*cp3*m3*z1+c1*c3*cp1*cp2*cp3*m3*z1+c1*cp2*m1*m3*z1+cp1*cp2*m1*m3*z1+c2*cp1*cp3*m1*m3*z1+c1*cp2*cp3*m1*m3*z1+cp1*cp2*cp3*m1*m3*z1+c2*cp1*cp2*cp3*m1*m3*z1+c3*cp1*cp2*cp3*m1*m3*z1+c1*c3*m2*m3*z1+cp1*m2*m3*z1+c1*c2*cp1*m2*m3*z1+c3*cp1*m2*m3*z1+c1*c3*cp1*m2*m3*z1+cp2*m2*m3*z1+c1*cp1*cp2*m2*m3*z1+c1*c2*cp1*cp2*m2*m3*z1+cp3*m2*m3*z1+c2*cp3*m2*m3*z1+cp1*cp3*m2*m3*z1+c1*cp1*cp3*m2*m3*z1+c1*c2*cp1*cp3*m2*m3*z1+cp2*cp3*m2*m3*z1+c1*c2*cp2*cp3*m2*m3*z1+m1*m2*m3*z1+c2*cp1*m1*m2*m3*z1+cp1*cp2*m1*m2*m3*z1+c2*cp1*cp2*m1*m2*m3*z1+c1*c2*cp3*m1*m2*m3*z1+c1*cp1*cp3*m1*m2*m3*z1+c2*cp1*cp3*m1*m2*m3*z1+cp1*cp2*cp3*m1*m2*m3*z1+c2*cp1*cp2*cp3*m1*m2*m3*z1+c3*cp2*x1*z1+c2*c3*m1*x1*z1+cp2*cp3*m1*x1*z1+c1*c3*m2*x1*z1+c2*c3*m2*x1*z1+cp3*m2*x1*z1+c1*cp3*m2*x1*z1+c2*cp3*m2*x1*z1+c3*cp3*m2*x1*z1+c3*cp2*m1*m2*x1*z1+cp2*m3*x1*z1+cp1*cp2*m3*x1*z1+cp2*cp3*m3*x1*z1+cp2*m1*m3*x1*z1+c1*cp2*m1*m3*x1*z1+c2*cp3*m1*m3*x1*z1+cp2*cp3*m1*m3*x1*z1+cp3*m2*m3*x1*z1+c1*cp3*m2*m3*x1*z1+c2*cp3*m2*m3*x1*z1+cp2*cp3*m1*m2*m3*x1*z1+c3*x2*z1+c1*c3*x2*z1+c1*c2*c3*x2*z1+c3*cp1*x2*z1+c1*c3*cp1*x2*z1+c3*cp2*x2*z1+c1*c3*cp2*x2*z1+c3*cp1*cp2*x2*z1+c1*c2*cp3*x2*z1+c1*c3*cp3*x2*z1+c1*cp1*cp3*x2*z1+c1*cp2*cp3*x2*z1+c2*c3*cp1*m1*x2*z1+c3*cp1*cp2*m1*x2*z1+cp1*cp3*m1*x2*z1+c2*cp1*cp3*m1*x2*z1+c3*cp1*cp3*m1*x2*z1+cp1*cp2*cp3*m1*x2*z1+c1*c3*m2*x2*z1+c2*c3*m2*x2*z1+c2*c3*cp1*m2*x2*z1+c1*c3*cp2*m2*x2*z1+cp3*m2*x2*z1+c1*cp3*m2*x2*z1+c2*cp3*m2*x2*z1+c3*cp3*m2*x2*z1+cp1*cp3*m2*x2*z1+c1*cp1*cp3*m2*x2*z1+c2*cp1*cp3*m2*x2*z1+c3*cp1*cp3*m2*x2*z1+c1*cp2*cp3*m2*x2*z1+c3*cp1*m1*m2*x2*z1+c3*cp1*cp2*m1*m2*x2*z1+cp1*cp2*cp3*m1*m2*x2*z1+c1*m3*x2*z1+c1*cp1*m3*x2*z1+c1*cp1*cp2*m3*x2*z1+cp3*m3*x2*z1+c1*c2*cp3*m3*x2*z1+cp1*cp3*m3*x2*z1+cp2*cp3*m3*x2*z1+c1*cp2*cp3*m3*x2*z1+cp1*cp2*cp3*m3*x2*z1+cp1*cp2*m1*m3*x2*z1+c2*cp1*cp3*m1*m3*x2*z1+cp1*cp2*cp3*m1*m3*x2*z1+cp3*m2*m3*x2*z1+c1*cp3*m2*m3*x2*z1+c2*cp3*m2*m3*x2*z1+cp1*cp3*m2*m3*x2*z1+c2*cp1*cp3*m2*m3*x2*z1+c1*cp2*cp3*m2*m3*x2*z1+cp1*cp3*m1*m2*m3*x2*z1+cp1*cp2*cp3*m1*m2*m3*x2*z1+c1*c2*x3*z1+c2*c3*x3*z1+c2*cp1*x3*z1+c2*c3*cp1*x3*z1+c1*cp2*x3*z1+c2*cp2*x3*z1+c1*c2*cp2*x3*z1+c2*c3*cp2*x3*z1+c1*cp1*cp2*x3*z1+c2*c3*cp1*cp2*x3*z1+c1*c2*cp3*x3*z1+c2*c3*cp3*x3*z1+c2*c3*cp1*cp3*x3*z1+c1*c2*cp2*cp3*x3*z1+c1*c3*cp2*cp3*x3*z1+c1*c2*cp1*cp2*cp3*x3*z1+c1*c3*cp1*cp2*cp3*x3*z1+c2*cp1*m1*x3*z1+c2*cp1*cp2*m1*x3*z1+c2*cp1*cp3*m1*x3*z1+c2*m2*x3*z1+c3*m2*x3*z1+cp1*m2*x3*z1+c1*cp1*m2*x3*z1+c3*cp1*m2*x3*z1+c2*cp2*m2*x3*z1+c3*cp2*m2*x3*z1+cp1*cp2*m2*x3*z1+c2*cp1*cp2*m2*x3*z1+c3*cp1*cp2*m2*x3*z1+cp3*m2*x3*z1+c1*cp3*m2*x3*z1+c2*cp3*m2*x3*z1+c3*cp3*m2*x3*z1+cp1*cp3*m2*x3*z1+c1*cp1*cp3*m2*x3*z1+c2*cp1*cp3*m2*x3*z1+c3*cp1*cp3*m2*x3*z1+cp2*cp3*m2*x3*z1+c1*cp2*cp3*m2*x3*z1+c2*cp2*cp3*m2*x3*z1+cp1*cp2*cp3*m2*x3*z1+c2*cp1*cp2*cp3*m2*x3*z1+cp1*m1*m2*x3*z1+cp1*cp2*cp3*m1*m2*x3*z1+c2*m3*x3*z1+c2*cp2*m3*x3*z1+c2*cp1*cp3*m3*x3*z1+c1*cp2*cp3*m3*x3*z1+c2*cp2*cp3*m3*x3*z1+c1*cp1*cp2*cp3*m3*x3*z1+cp1*m2*m3*x3*z1+cp1*cp3*m2*m3*x3*z1+cp2*cp3*m2*m3*x3*z1+c2*c3*y1*z1+c3*cp2*y1*z1+cp2*cp3*y1*z1+c2*c3*m1*y1*z1+cp2*cp3*m1*y1*z1+c1*c3*m2*y1*z1+c2*c3*m2*y1*z1+c3*cp1*m2*y1*z1+c3*cp2*m2*y1*z1+cp3*m2*y1*z1+c1*cp3*m2*y1*z1+c2*cp3*m2*y1*z1+c3*cp3*m2*y1*z1+cp1*cp3*m2*y1*z1+c3*cp2*m1*m2*y1*z1+c1*cp2*m3*y1*z1+c2*cp3*m3*y1*z1+cp2*m1*m3*y1*z1+c1*cp2*m1*m3*y1*z1+cp1*cp2*m1*m3*y1*z1+c2*cp3*m1*m3*y1*z1+cp2*cp3*m1*m3*y1*z1+cp3*m2*m3*y1*z1+c1*cp3*m2*m3*y1*z1+c2*cp3*m2*m3*y1*z1+cp1*cp3*m2*m3*y1*z1+cp2*cp3*m2*m3*y1*z1+cp2*cp3*m1*m2*m3*y1*z1+c2*c3*y2*z1+c1*c2*c3*y2*z1+c3*cp1*y2*z1+c1*c3*cp1*y2*z1+c3*cp2*y2*z1+c1*c3*cp2*y2*z1+c1*c2*cp3*y2*z1+c1*c3*cp3*y2*z1+c1*cp1*cp3*y2*z1+c2*cp1*cp3*y2*z1+c3*cp1*cp3*y2*z1+cp2*cp3*y2*z1+c1*cp2*cp3*y2*z1+c3*cp1*m1*y2*z1+c2*c3*cp1*m1*y2*z1+c3*cp1*cp2*m1*y2*z1+cp1*cp3*m1*y2*z1+c2*cp1*cp3*m1*y2*z1+c3*cp1*cp3*m1*y2*z1+cp1*cp2*cp3*m1*y2*z1+c1*c3*m2*y2*z1+c2*c3*m2*y2*z1+c3*cp1*m2*y2*z1+c2*c3*cp1*m2*y2*z1+c3*cp2*m2*y2*z1+c1*c3*cp2*m2*y2*z1+cp3*m2*y2*z1+c1*cp3*m2*y2*z1+c2*cp3*m2*y2*z1+c3*cp3*m2*y2*z1+c1*cp1*cp3*m2*y2*z1+c2*cp1*cp3*m2*y2*z1+c3*cp1*cp3*m2*y2*z1+c1*cp2*cp3*m2*y2*z1+cp1*cp2*cp3*m2*y2*z1+c3*cp1*m1*m2*y2*z1+c3*cp1*cp2*m1*m2*y2*z1+cp1*cp2*cp3*m1*m2*y2*z1+c1*m3*y2*z1+cp1*m3*y2*z1+c1*cp1*m3*y2*z1+c1*cp1*cp2*m3*y2*z1+c1*cp3*m3*y2*z1+c2*cp3*m3*y2*z1+c1*c2*cp3*m3*y2*z1+c1*cp2*cp3*m3*y2*z1+cp1*cp2*cp3*m3*y2*z1+cp1*cp2*m1*m3*y2*z1+cp1*cp3*m1*m3*y2*z1+c2*cp1*cp3*m1*m3*y2*z1+cp1*cp2*cp3*m1*m3*y2*z1+cp3*m2*m3*y2*z1+c1*cp3*m2*m3*y2*z1+c2*cp3*m2*m3*y2*z1+c2*cp1*cp3*m2*m3*y2*z1+cp2*cp3*m2*m3*y2*z1+c1*cp2*cp3*m2*m3*y2*z1+cp1*cp3*m1*m2*m3*y2*z1+cp1*cp2*cp3*m1*m2*m3*y2*z1+c1*c2*y3*z1+c2*c3*y3*z1+c2*c3*cp1*y3*z1+c1*c2*cp2*y3*z1+c2*c3*cp2*y3*z1+cp1*cp2*y3*z1+c1*cp1*cp2*y3*z1+c2*cp1*cp2*y3*z1+c3*cp1*cp2*y3*z1+c2*c3*cp1*cp2*y3*z1+c1*c2*cp3*y3*z1+c2*c3*cp3*y3*z1+c2*cp1*cp3*y3*z1+c2*c3*cp1*cp3*y3*z1+cp2*cp3*y3*z1+c1*c2*cp2*cp3*y3*z1+c3*cp2*cp3*y3*z1+c1*c3*cp2*cp3*y3*z1+c1*c2*cp1*cp2*cp3*y3*z1+c1*c3*cp1*cp2*cp3*y3*z1+c2*cp1*m1*y3*z1+cp1*cp2*m1*y3*z1+c2*cp1*cp2*m1*y3*z1+c2*cp1*cp3*m1*y3*z1+c2*m2*y3*z1+c3*m2*y3*z1+cp1*m2*y3*z1+c1*cp1*m2*y3*z1+c3*cp1*m2*y3*z1+cp2*m2*y3*z1+c2*cp2*m2*y3*z1+c3*cp2*m2*y3*z1+cp1*cp2*m2*y3*z1+c2*cp1*cp2*m2*y3*z1+c3*cp1*cp2*m2*y3*z1+cp3*m2*y3*z1+c1*cp3*m2*y3*z1+c2*cp3*m2*y3*z1+c3*cp3*m2*y3*z1+c1*cp1*cp3*m2*y3*z1+c2*cp1*cp3*m2*y3*z1+c3*cp1*cp3*m2*y3*z1+cp2*cp3*m2*y3*z1+c1*cp2*cp3*m2*y3*z1+c2*cp2*cp3*m2*y3*z1+c2*cp1*cp2*cp3*m2*y3*z1+cp1*m1*m2*y3*z1+cp1*cp2*cp3*m1*m2*y3*z1+c2*m3*y3*z1+cp2*m3*y3*z1+c2*cp2*m3*y3*z1+c2*cp1*cp3*m3*y3*z1+c1*cp2*cp3*m3*y3*z1+c2*cp2*cp3*m3*y3*z1+c1*cp1*cp2*cp3*m3*y3*z1+cp1*m2*m3*y3*z1+cp1*cp3*m2*m3*y3*z1+cp2*cp3*m2*m3*y3*z1+c1*c2*c3*cp1*z2+c1*c2*c3*cp1*cp2*z2+c1*c2*cp1*cp3*z2+c1*c2*c3*cp1*cp3*z2+c1*c3*cp1*cp2*cp3*z2+c1*c2*c3*cp1*cp2*cp3*z2+c1*c2*c3*cp1*m1*z2+c1*c3*cp2*m1*z2+c1*c2*c3*cp3*m1*z2+c1*c2*cp1*cp3*m1*z2+c1*c3*cp1*cp3*m1*z2+c1*c3*cp2*cp3*m1*z2+c2*cp1*cp2*cp3*m1*z2+c3*cp1*cp2*cp3*m1*z2+c1*c3*cp1*cp2*cp3*m1*z2+c1*c3*cp1*cp2*m2*z2+c1*c2*c3*cp1*cp2*m2*z2+c1*c2*cp1*cp3*m2*z2+c1*c3*cp1*cp3*m2*z2+c1*c2*c3*cp1*cp3*m2*z2+c1*cp1*cp2*cp3*m2*z2+c1*c2*cp1*cp2*cp3*m2*z2+c1*c3*cp1*cp2*cp3*m2*z2+c3*cp1*m1*m2*z2+c1*c3*cp1*m1*m2*z2+c2*c3*cp1*m1*m2*z2+c3*cp1*cp2*m1*m2*z2+c1*c3*cp1*cp2*m1*m2*z2+c2*c3*cp1*cp2*m1*m2*z2+c2*cp1*cp3*m1*m2*z2+c3*cp1*cp3*m1*m2*z2+c2*c3*cp1*cp3*m1*m2*z2+c1*c3*cp2*cp3*m1*m2*z2+cp1*cp2*cp3*m1*m2*z2+c1*cp1*cp2*cp3*m1*m2*z2+c2*cp1*cp2*cp3*m1*m2*z2+c1*c2*cp1*m3*z2+c1*cp1*cp2*m3*z2+c1*c3*cp1*cp2*m3*z2+c1*cp1*cp2*cp3*m3*z2+c1*c3*cp1*cp2*cp3*m3*z2+c1*c2*m1*m3*z2+c1*c3*m1*m3*z2+c2*cp1*m1*m3*z2+c3*cp1*m1*m3*z2+c1*cp1*cp2*m1*m3*z2+c3*cp1*cp2*m1*m3*z2+c1*cp3*m1*m3*z2+c1*cp1*cp3*m1*m3*z2+c2*cp1*cp3*m1*m3*z2+c1*c2*cp1*cp3*m1*m3*z2+c3*cp1*cp3*m1*m3*z2+cp1*cp2*cp3*m1*m3*z2+c1*cp1*cp2*cp3*m1*m3*z2+c1*c2*cp1*m2*m3*z2+c1*c3*cp1*m2*m3*z2+c1*cp1*cp2*m2*m3*z2+c1*c2*cp1*cp2*m2*m3*z2+m1*m2*m3*z2+c1*c2*cp1*m1*m2*m3*z2+c1*cp2*m1*m2*m3*z2+c1*c2*cp2*m1*m2*m3*z2+cp1*cp2*m1*m2*m3*z2+c1*cp1*cp2*m1*m2*m3*z2+c2*cp1*cp2*m1*m2*m3*z2+c1*cp1*cp3*m1*m2*m3*z2+c2*cp1*cp3*m1*m2*m3*z2+cp1*cp2*cp3*m1*m2*m3*z2+c1*cp1*cp2*cp3*m1*m2*m3*z2+c1*c2*c3*x1*z2+c1*c3*cp1*x1*z2+c1*c3*cp1*cp2*x1*z2+cp3*x1*z2+c2*cp3*x1*z2+c3*cp3*x1*z2+cp1*cp3*x1*z2+c2*cp1*cp3*x1*z2+c1*c2*cp1*cp3*x1*z2+c3*cp1*cp3*x1*z2+c1*c3*cp1*cp3*x1*z2+c1*cp2*cp3*x1*z2+c2*c3*m1*x1*z2+c2*c3*cp1*m1*x1*z2+c3*cp2*m1*x1*z2+c3*cp1*cp2*m1*x1*z2+cp3*m1*x1*z2+c2*cp3*m1*x1*z2+c3*cp3*m1*x1*z2+cp1*cp3*m1*x1*z2+c1*cp1*cp3*m1*x1*z2+c2*cp1*cp3*m1*x1*z2+c3*cp1*cp3*m1*x1*z2+cp2*cp3*m1*x1*z2+cp1*cp2*cp3*m1*x1*z2+c2*c3*m2*x1*z2+c2*c3*cp1*m2*x1*z2+c1*c3*cp2*m2*x1*z2+cp3*m2*x1*z2+c2*cp3*m2*x1*z2+c3*cp3*m2*x1*z2+cp1*cp3*m2*x1*z2+c1*cp1*cp3*m2*x1*z2+c2*cp1*cp3*m2*x1*z2+c3*cp1*cp3*m2*x1*z2+cp2*cp3*m2*x1*z2+cp1*cp2*cp3*m2*x1*z2+c1*cp1*cp2*cp3*m2*x1*z2+c3*cp2*m1*m2*x1*z2+c3*cp1*cp2*m1*m2*x1*z2+cp2*cp3*m1*m2*x1*z2+cp1*cp2*cp3*m1*m2*x1*z2+c1*cp2*m3*x1*z2+cp3*m3*x1*z2+c1*c2*cp3*m3*x1*z2+cp1*cp3*m3*x1*z2+c1*cp1*cp3*m3*x1*z2+cp2*cp3*m3*x1*z2+c1*cp2*cp3*m3*x1*z2+cp1*cp2*cp3*m3*x1*z2+m1*m3*x1*z2+cp1*m1*m3*x1*z2+cp3*m1*m3*x1*z2+c2*cp3*m1*m3*x1*z2+cp1*cp3*m1*m3*x1*z2+c2*cp1*cp3*m1*m3*x1*z2+cp2*cp3*m1*m3*x1*z2+cp1*cp2*cp3*m1*m3*x1*z2+cp3*m2*m3*x1*z2+c2*cp3*m2*m3*x1*z2+cp1*cp3*m2*m3*x1*z2+c2*cp1*cp3*m2*m3*x1*z2+c1*cp2*cp3*m2*m3*x1*z2+cp2*cp3*m1*m2*m3*x1*z2+cp1*cp2*cp3*m1*m2*m3*x1*z2+c1*c3*x2*z2+c3*cp1*x2*z2+c1*c3*cp1*x2*z2+c3*cp1*cp2*x2*z2+c1*c3*cp1*cp2*x2*z2+c1*cp3*x2*z2+cp1*cp3*x2*z2+c1*cp1*cp3*x2*z2+c2*cp1*cp3*x2*z2+c1*c2*cp1*cp3*x2*z2+c3*cp1*cp3*x2*z2+c1*c3*cp1*cp3*x2*z2+c3*cp1*m1*x2*z2+c3*cp1*cp2*m1*x2*z2+cp1*cp3*m1*x2*z2+c2*cp1*cp3*m1*x2*z2+c3*cp1*cp3*m1*x2*z2+c1*cp3*m2*x2*z2+cp1*cp3*m2*x2*z2+c1*cp1*cp3*m2*x2*z2+cp1*cp2*cp3*m2*x2*z2+c1*cp1*cp2*cp3*m2*x2*z2+cp1*cp3*m1*m2*x2*z2+cp1*cp2*cp3*m1*m2*x2*z2+c1*cp1*m3*x2*z2+c1*cp2*m3*x2*z2+c1*cp1*cp2*m3*x2*z2+cp1*cp3*m3*x2*z2+c1*cp1*cp3*m3*x2*z2+c1*cp1*m1*m3*x2*z2+c1*cp2*m1*m3*x2*z2+cp1*cp2*m1*m3*x2*z2+cp1*cp3*m1*m3*x2*z2+c1*cp1*cp2*x3*z2+c1*c2*cp1*cp2*cp3*x3*z2+c1*c3*cp1*cp2*cp3*x3*z2+c1*c2*m1*x3*z2+c1*c3*m1*x3*z2+c1*cp1*m1*x3*z2+c1*c3*cp2*m1*x3*z2+c1*cp3*m1*x3*z2+c1*c2*cp3*m1*x3*z2+c1*cp1*cp3*m1*x3*z2+c1*cp2*cp3*m1*x3*z2+c1*cp1*cp2*cp3*m1*x3*z2+c1*cp1*m2*x3*z2+c1*cp1*cp3*m2*x3*z2+c1*cp2*m1*m2*x3*z2+c1*cp2*cp3*m1*m2*x3*z2+c1*cp1*cp2*cp3*m3*x3*z2+c3*y1*z2+c1*c3*y1*z2+c2*c3*y1*z2+c1*c2*c3*y1*z2+c3*cp1*y1*z2+c1*c3*cp1*y1*z2+c3*cp1*cp2*y1*z2+c1*c3*cp1*cp2*y1*z2+c1*cp3*y1*z2+c2*cp3*y1*z2+c3*cp3*y1*z2+cp1*cp3*y1*z2+c1*c2*cp1*cp3*y1*z2+c1*c3*cp1*cp3*y1*z2+cp2*cp3*y1*z2+c1*cp2*cp3*y1*z2+c2*c3*m1*y1*z2+c2*c3*cp1*m1*y1*z2+c3*cp2*m1*y1*z2+c3*cp1*cp2*m1*y1*z2+c1*cp3*m1*y1*z2+c2*cp3*m1*y1*z2+c3*cp3*m1*y1*z2+c1*cp1*cp3*m1*y1*z2+c2*cp1*cp3*m1*y1*z2+c3*cp1*cp3*m1*y1*z2+cp2*cp3*m1*y1*z2+cp1*cp2*cp3*m1*y1*z2+c2*c3*m2*y1*z2+c2*c3*cp1*m2*y1*z2+c3*cp2*m2*y1*z2+c1*c3*cp2*m2*y1*z2+c1*cp3*m2*y1*z2+c2*cp3*m2*y1*z2+c3*cp3*m2*y1*z2+c1*cp1*cp3*m2*y1*z2+c2*cp1*cp3*m2*y1*z2+c3*cp1*cp3*m2*y1*z2+cp2*cp3*m2*y1*z2+c1*cp1*cp2*cp3*m2*y1*z2+c3*cp2*m1*m2*y1*z2+c3*cp1*cp2*m1*m2*y1*z2+cp2*cp3*m1*m2*y1*z2+cp1*cp2*cp3*m1*m2*y1*z2+cp1*m3*y1*z2+c1*cp1*m3*y1*z2+cp2*m3*y1*z2+cp1*cp2*m3*y1*z2+cp3*m3*y1*z2+c2*cp3*m3*y1*z2+c1*c2*cp3*m3*y1*z2+c1*cp1*cp3*m3*y1*z2+c1*cp2*cp3*m3*y1*z2+cp1*cp2*cp3*m3*y1*z2+m1*m3*y1*z2+cp1*m1*m3*y1*z2+cp3*m1*m3*y1*z2+c2*cp3*m1*m3*y1*z2+cp1*cp3*m1*m3*y1*z2+c2*cp1*cp3*m1*m3*y1*z2+cp2*cp3*m1*m3*y1*z2+cp1*cp2*cp3*m1*m3*y1*z2+cp3*m2*m3*y1*z2+c2*cp3*m2*m3*y1*z2+cp1*cp3*m2*m3*y1*z2+c2*cp1*cp3*m2*m3*y1*z2+cp2*cp3*m2*m3*y1*z2+c1*cp2*cp3*m2*m3*y1*z2+cp2*cp3*m1*m2*m3*y1*z2+cp1*cp2*cp3*m1*m2*m3*y1*z2+c1*c3*cp1*y2*z2+c1*c3*cp1*cp2*y2*z2+c1*c2*cp1*cp3*y2*z2+c1*c3*cp1*cp3*y2*z2+c3*cp1*m1*y2*z2+c3*cp1*cp2*m1*y2*z2+c2*cp1*cp3*m1*y2*z2+c3*cp1*cp3*m1*y2*z2+c1*cp1*cp3*m2*y2*z2+c1*cp1*cp2*cp3*m2*y2*z2+cp1*cp3*m1*m2*y2*z2+cp1*cp2*cp3*m1*m2*y2*z2+cp1*cp2*m3*y2*z2+c1*cp1*cp2*m3*y2*z2+c1*cp1*cp3*m3*y2*z2+c1*cp1*m1*m3*y2*z2+c1*cp2*m1*m3*y2*z2+cp1*cp2*m1*m3*y2*z2+cp1*cp3*m1*m3*y2*z2+c1*cp1*cp2*y3*z2+c1*c2*cp1*cp2*cp3*y3*z2+c1*c3*cp1*cp2*cp3*y3*z2+c1*c2*m1*y3*z2+c1*c3*m1*y3*z2+c1*cp1*m1*y3*z2+c1*cp2*m1*y3*z2+c1*c3*cp2*m1*y3*z2+c1*c2*cp3*m1*y3*z2+c1*cp1*cp3*m1*y3*z2+c1*cp2*cp3*m1*y3*z2+c1*cp1*cp2*cp3*m1*y3*z2+c1*cp1*m2*y3*z2+c1*cp1*cp3*m2*y3*z2+c1*cp2*m1*m2*y3*z2+c1*cp2*cp3*m1*m2*y3*z2+c1*cp1*cp2*cp3*m3*y3*z2+c1*c2*c3*z1*z2+c3*cp1*cp2*z1*z2+c1*c3*cp1*cp2*z1*z2+c1*cp1*cp3*z1*z2+c1*c2*cp1*cp3*z1*z2+c1*c3*cp1*cp3*z1*z2+c1*cp2*cp3*z1*z2+c2*c3*cp1*m1*z1*z2+c3*cp1*cp2*m1*z1*z2+cp1*cp3*m1*z1*z2+c2*cp1*cp3*m1*z1*z2+c3*cp1*cp3*m1*z1*z2+cp1*cp2*cp3*m1*z1*z2+c2*c3*cp1*m2*z1*z2+c1*c3*cp2*m2*z1*z2+cp1*cp3*m2*z1*z2+c2*cp1*cp3*m2*z1*z2+c3*cp1*cp3*m2*z1*z2+c1*cp1*cp2*cp3*m2*z1*z2+c3*cp1*cp2*m1*m2*z1*z2+cp1*cp2*cp3*m1*m2*z1*z2+c1*cp1*m3*z1*z2+c1*c2*cp3*m3*z1*z2+c1*cp1*cp3*m3*z1*z2+c1*cp2*cp3*m3*z1*z2+cp1*cp2*cp3*m3*z1*z2+cp1*m1*m3*z1*z2+cp1*cp3*m1*m3*z1*z2+c2*cp1*cp3*m1*m3*z1*z2+cp1*cp2*cp3*m1*m3*z1*z2+cp1*cp3*m2*m3*z1*z2+c2*cp1*cp3*m2*m3*z1*z2+c1*cp2*cp3*m2*m3*z1*z2+cp1*cp2*cp3*m1*m2*m3*z1*z2+c1*c2*c3*cp2*z3+c1*c2*cp2*cp3*z3+c2*c3*cp1*cp2*cp3*z3+c1*c2*c3*cp1*cp2*cp3*z3+c2*cp1*cp2*m1*z3+c1*c2*cp1*cp2*m1*z3+c1*c2*cp2*cp3*m1*z3+c1*cp1*m2*z3+c1*cp2*m2*z3+c1*c2*cp2*m2*z3+c1*c2*cp1*cp2*m2*z3+c1*c2*cp3*m2*z3+c1*c2*c3*cp3*m2*z3+c1*c2*c3*cp2*cp3*m2*z3+c1*cp1*cp2*cp3*m2*z3+c2*cp1*cp2*cp3*m2*z3+c3*cp1*cp2*cp3*m2*z3+c1*c3*cp1*cp2*cp3*m2*z3+c2*c3*cp1*cp2*cp3*m2*z3+c1*c2*m1*m2*z3+c3*cp1*m1*m2*z3+c1*c3*cp1*m1*m2*z3+c2*c3*cp1*m1*m2*z3+c1*c3*cp2*m1*m2*z3+c2*c3*cp2*m1*m2*z3+cp1*cp2*m1*m2*z3+c1*cp1*cp2*m1*m2*z3+c2*cp1*cp2*m1*m2*z3+c3*cp1*cp2*m1*m2*z3+c2*cp1*cp3*m1*m2*z3+c3*cp1*cp3*m1*m2*z3+c3*cp1*cp2*cp3*m1*m2*z3+c1*c2*cp1*cp2*m3*z3+c2*cp1*cp2*cp3*m3*z3+c1*c2*cp1*cp2*cp3*m3*z3+c2*cp1*cp2*m1*m3*z3+c1*c3*m2*m3*z3+c2*cp1*m2*m3*z3+c3*cp1*m2*m3*z3+c1*c3*cp1*m2*m3*z3+c1*c2*c3*cp2*m2*m3*z3+c1*cp3*m2*m3*z3+c1*c2*cp3*m2*m3*z3+c1*c2*c3*cp3*m2*m3*z3+c1*cp1*cp3*m2*m3*z3+c3*cp1*cp3*m2*m3*z3+c1*cp2*cp3*m2*m3*z3+c1*c2*cp2*cp3*m2*m3*z3+c1*cp1*cp2*cp3*m2*m3*z3+c2*cp1*cp2*cp3*m2*m3*z3+m1*m2*m3*z3+c2*m1*m2*m3*z3+c2*c3*cp1*m1*m2*m3*z3+c3*cp2*m1*m2*m3*z3+cp1*cp2*m1*m2*m3*z3+c3*cp1*cp2*m1*m2*m3*z3+c1*cp1*cp3*m1*m2*m3*z3+c2*cp1*cp3*m1*m2*m3*z3+cp2*cp3*m1*m2*m3*z3+c1*cp2*cp3*m1*m2*m3*z3+c2*cp2*cp3*m1*m2*m3*z3+cp1*cp2*cp3*m1*m2*m3*z3+c1*c2*x1*z3+c1*c2*cp1*x1*z3+c1*cp2*x1*z3+c1*c2*cp2*x1*z3+c1*c3*cp2*x1*z3+c2*c3*cp2*x1*z3+c1*cp1*cp2*x1*z3+c1*c2*cp1*cp2*x1*z3+c1*c3*cp1*cp2*x1*z3+c2*c3*cp1*cp2*x1*z3+c1*c2*cp3*x1*z3+c1*c2*cp1*cp3*x1*z3+c1*c3*cp2*cp3*x1*z3+c2*c3*cp2*cp3*x1*z3+c1*c2*cp1*cp2*cp3*x1*z3+c1*c3*cp1*cp2*cp3*x1*z3+c2*m1*x1*z3+c2*cp1*m1*x1*z3+cp2*m1*x1*z3+c2*cp2*m1*x1*z3+c3*cp2*m1*x1*z3+cp1*cp2*m1*x1*z3+c2*cp1*cp2*m1*x1*z3+c3*cp1*cp2*m1*x1*z3+c2*cp3*m1*x1*z3+c2*cp1*cp3*m1*x1*z3+c3*cp2*cp3*m1*x1*z3+c3*cp1*cp2*cp3*m1*x1*z3+m2*x1*z3+c1*m2*x1*z3+c2*m2*x1*z3+c1*cp1*m2*x1*z3+c2*cp1*m2*x1*z3+c1*cp1*cp2*m2*x1*z3+c1*cp2*cp3*m2*x1*z3+c1*cp1*cp2*cp3*m2*x1*z3+c2*cp1*cp2*cp3*m2*x1*z3+m1*m2*x1*z3+cp1*m1*m2*x1*z3+cp2*cp3*m1*m2*x1*z3+cp1*cp2*cp3*m1*m2*x1*z3+c1*cp2*m3*x1*z3+c2*cp2*m3*x1*z3+c1*cp1*cp2*m3*x1*z3+c1*cp2*cp3*m3*x1*z3+c1*cp1*cp2*cp3*m3*x1*z3+cp2*m1*m3*x1*z3+cp1*cp2*m1*m3*x1*z3+cp2*cp3*m1*m3*x1*z3+cp1*cp2*cp3*m1*m3*x1*z3+m2*m3*x1*z3+cp1*m2*m3*x1*z3+cp2*m2*m3*x1*z3+c1*c3*x2*z3+cp1*x2*z3+c2*cp1*x2*z3+c1*c2*cp1*x2*z3+c3*cp1*x2*z3+c1*c3*cp2*x2*z3+c1*c2*c3*cp2*x2*z3+cp1*cp2*x2*z3+c2*cp1*cp2*x2*z3+c1*c2*cp1*cp2*x2*z3+c3*cp1*cp2*x2*z3+c2*c3*cp1*cp2*x2*z3+c1*cp3*x2*z3+c1*c2*c3*cp3*x2*z3+c1*c2*cp1*cp3*x2*z3+c1*c3*cp1*cp3*x2*z3+c2*c3*cp1*cp3*x2*z3+c1*cp2*cp3*x2*z3+c1*c2*cp1*cp2*cp3*x2*z3+c1*c3*cp1*cp2*cp3*x2*z3+m1*x2*z3+c1*m1*x2*z3+c2*m1*x2*z3+c3*m1*x2*z3+c1*c3*m1*x2*z3+c2*c3*m1*x2*z3+c2*cp2*m1*x2*z3+c3*cp2*m1*x2*z3+c1*c3*cp2*m1*x2*z3+cp1*cp2*m1*x2*z3+c1*cp1*cp2*m1*x2*z3+cp3*m1*x2*z3+c1*c2*cp3*m1*x2*z3+c3*cp3*m1*x2*z3+c1*cp1*cp3*m1*x2*z3+c2*cp1*cp3*m1*x2*z3+cp2*cp3*m1*x2*z3+c2*cp2*cp3*m1*x2*z3+c3*cp2*cp3*m1*x2*z3+c1*cp1*cp2*cp3*m1*x2*z3+c1*m2*x2*z3+c1*cp1*m2*x2*z3+c2*cp1*m2*x2*z3+c2*cp1*cp2*m2*x2*z3+c1*cp3*m2*x2*z3+c1*c2*cp3*m2*x2*z3+cp1*cp3*m2*x2*z3+c1*cp2*cp3*m2*x2*z3+c1*c2*cp2*cp3*m2*x2*z3+cp1*cp2*cp3*m2*x2*z3+c2*cp1*cp2*cp3*m2*x2*z3+cp2*m1*m2*x2*z3+cp1*cp2*m1*m2*x2*z3+cp3*m1*m2*x2*z3+c1*cp3*m1*m2*x2*z3+c2*cp3*m1*m2*x2*z3+cp2*cp3*m1*m2*x2*z3+c1*cp2*cp3*m1*m2*x2*z3+c2*cp1*m3*x2*z3+c2*cp1*cp2*m3*x2*z3+c1*cp1*cp3*m3*x2*z3+c2*cp1*cp3*m3*x2*z3+c1*cp1*cp2*cp3*m3*x2*z3+m1*m3*x2*z3+cp1*m1*m3*x2*z3+cp2*m1*m3*x2*z3+cp1*cp2*m1*m3*x2*z3+cp3*m1*m3*x2*z3+cp2*cp3*m1*m3*x2*z3+c2*cp1*x3*z3+c1*c3*cp2*x3*z3+c1*c2*c3*cp2*x3*z3+cp1*cp2*x3*z3+c1*cp1*cp2*x3*z3+c2*cp1*cp2*x3*z3+c3*cp1*cp2*x3*z3+c1*c3*cp1*cp2*x3*z3+c2*c3*cp1*cp2*x3*z3+c1*c2*c3*cp3*x3*z3+c1*cp2*cp3*x3*z3+c1*c3*cp2*cp3*x3*z3+c2*cp1*m1*x3*z3+c3*cp2*m1*x3*z3+cp2*cp3*m1*x3*z3+cp1*cp2*cp3*m1*x3*z3+c3*cp1*cp2*cp3*m1*x3*z3+c1*c3*m2*x3*z3+c2*cp1*m2*x3*z3+c1*c2*cp2*m2*x3*z3+c1*c3*cp2*m2*x3*z3+cp1*cp2*m2*x3*z3+c3*cp1*cp2*m2*x3*z3+c1*cp3*m2*x3*z3+c1*c2*cp3*m2*x3*z3+c1*cp2*cp3*m2*x3*z3+c1*c3*cp2*cp3*m2*x3*z3+cp1*cp2*cp3*m2*x3*z3+c3*cp1*cp2*cp3*m2*x3*z3+c2*cp1*m1*m2*x3*z3+c2*cp1*m3*x3*z3+c1*cp1*cp2*m3*x3*z3+c2*cp1*cp2*m3*x3*z3+c1*cp2*cp3*m3*x3*z3+cp1*cp2*m1*m3*x3*z3+cp1*cp2*cp3*m1*m3*x3*z3+c2*cp1*m2*m3*x3*z3+cp1*cp2*cp3*m2*m3*x3*z3+c1*c2*y1*z3+c2*cp1*y1*z3+c1*c2*cp1*y1*z3+c1*cp2*y1*z3+c1*c2*cp2*y1*z3+c1*c3*cp2*y1*z3+c2*c3*cp2*y1*z3+cp1*cp2*y1*z3+c1*cp1*cp2*y1*z3+c2*cp1*cp2*y1*z3+c1*c2*cp1*cp2*y1*z3+c3*cp1*cp2*y1*z3+c1*c3*cp1*cp2*y1*z3+c2*c3*cp1*cp2*y1*z3+c1*c2*cp3*y1*z3+c2*cp1*cp3*y1*z3+c1*c2*cp1*cp3*y1*z3+c2*cp2*cp3*y1*z3+c1*c3*cp2*cp3*y1*z3+c2*c3*cp2*cp3*y1*z3+c2*cp1*cp2*cp3*y1*z3+c1*c2*cp1*cp2*cp3*y1*z3+c3*cp1*cp2*cp3*y1*z3+c1*c3*cp1*cp2*cp3*y1*z3+c2*m1*y1*z3+c2*cp1*m1*y1*z3+cp2*m1*y1*z3+c2*cp2*m1*y1*z3+c3*cp2*m1*y1*z3+cp1*cp2*m1*y1*z3+c2*cp1*cp2*m1*y1*z3+c3*cp1*cp2*m1*y1*z3+c2*cp3*m1*y1*z3+c2*cp1*cp3*m1*y1*z3+c3*cp2*cp3*m1*y1*z3+c3*cp1*cp2*cp3*m1*y1*z3+m2*y1*z3+c1*m2*y1*z3+c2*m2*y1*z3+cp1*m2*y1*z3+c1*cp1*m2*y1*z3+c2*cp1*m2*y1*z3+cp2*m2*y1*z3+cp1*cp2*m2*y1*z3+c1*cp1*cp2*m2*y1*z3+c1*cp2*cp3*m2*y1*z3+cp1*cp2*cp3*m2*y1*z3+c1*cp1*cp2*cp3*m2*y1*z3+c2*cp1*cp2*cp3*m2*y1*z3+m1*m2*y1*z3+cp1*m1*m2*y1*z3+cp2*cp3*m1*m2*y1*z3+cp1*cp2*cp3*m1*m2*y1*z3+c1*cp2*m3*y1*z3+c2*cp2*m3*y1*z3+cp1*cp2*m3*y1*z3+c1*cp1*cp2*m3*y1*z3+c1*cp2*cp3*m3*y1*z3+cp1*cp2*cp3*m3*y1*z3+c1*cp1*cp2*cp3*m3*y1*z3+cp2*m1*m3*y1*z3+cp1*cp2*m1*m3*y1*z3+cp2*cp3*m1*m3*y1*z3+cp1*cp2*cp3*m1*m3*y1*z3+m2*m3*y1*z3+cp1*m2*m3*y1*z3+cp2*m2*m3*y1*z3+c1*c3*y2*z3+cp1*y2*z3+c1*cp1*y2*z3+c2*cp1*y2*z3+c1*c2*cp1*y2*z3+c3*cp1*y2*z3+c1*cp2*y2*z3+c1*c2*cp2*y2*z3+c1*c2*c3*cp2*y2*z3+c1*cp1*cp2*y2*z3+c1*c2*cp1*cp2*y2*z3+c2*c3*cp1*cp2*y2*z3+c1*cp3*y2*z3+c1*c2*c3*cp3*y2*z3+cp1*cp3*y2*z3+c1*cp1*cp3*y2*z3+c2*cp1*cp3*y2*z3+c1*c2*cp1*cp3*y2*z3+c1*c3*cp1*cp3*y2*z3+c2*c3*cp1*cp3*y2*z3+c1*c2*cp2*cp3*y2*z3+c1*c3*cp2*cp3*y2*z3+cp1*cp2*cp3*y2*z3+c1*cp1*cp2*cp3*y2*z3+c2*cp1*cp2*cp3*y2*z3+c1*c2*cp1*cp2*cp3*y2*z3+c3*cp1*cp2*cp3*y2*z3+c1*c3*cp1*cp2*cp3*y2*z3+m1*y2*z3+c1*m1*y2*z3+c2*m1*y2*z3+c3*m1*y2*z3+c1*c3*m1*y2*z3+c2*c3*m1*y2*z3+c2*cp1*m1*y2*z3+cp2*m1*y2*z3+c2*cp2*m1*y2*z3+c1*c3*cp2*m1*y2*z3+cp1*cp2*m1*y2*z3+c1*cp1*cp2*m1*y2*z3+c1*cp3*m1*y2*z3+c2*cp3*m1*y2*z3+c1*c2*cp3*m1*y2*z3+c3*cp3*m1*y2*z3+c1*cp1*cp3*m1*y2*z3+c2*cp1*cp3*m1*y2*z3+c2*cp2*cp3*m1*y2*z3+c3*cp2*cp3*m1*y2*z3+cp1*cp2*cp3*m1*y2*z3+c1*cp1*cp2*cp3*m1*y2*z3+c1*m2*y2*z3+c1*cp1*m2*y2*z3+c2*cp1*cp2*m2*y2*z3+c1*cp3*m2*y2*z3+c1*c2*cp3*m2*y2*z3+cp1*cp3*m2*y2*z3+c1*cp2*cp3*m2*y2*z3+c1*c2*cp2*cp3*m2*y2*z3+c2*cp1*cp2*cp3*m2*y2*z3+cp2*m1*m2*y2*z3+cp1*cp2*m1*m2*y2*z3+cp3*m1*m2*y2*z3+c1*cp3*m1*m2*y2*z3+c2*cp3*m1*m2*y2*z3+c1*cp2*cp3*m1*m2*y2*z3+cp1*m3*y2*z3+c2*cp1*cp2*m3*y2*z3+c1*cp1*cp3*m3*y2*z3+c2*cp1*cp3*m3*y2*z3+cp1*cp2*cp3*m3*y2*z3+c1*cp1*cp2*cp3*m3*y2*z3+m1*m3*y2*z3+cp1*m1*m3*y2*z3+cp2*m1*m3*y2*z3+cp1*cp2*m1*m3*y2*z3+cp3*m1*m3*y2*z3+cp2*cp3*m1*m3*y2*z3+c1*c2*cp2*y3*z3+c1*c2*c3*cp2*y3*z3+c1*c3*cp1*cp2*y3*z3+c2*c3*cp1*cp2*y3*z3+c1*c2*c3*cp3*y3*z3+c1*cp2*cp3*y3*z3+c1*c2*cp2*cp3*y3*z3+cp1*cp2*cp3*y3*z3+c1*cp1*cp2*cp3*y3*z3+c2*cp1*cp2*cp3*y3*z3+c3*cp1*cp2*cp3*y3*z3+cp1*cp2*m1*y3*z3+cp1*cp2*cp3*m1*y3*z3+c3*cp1*cp2*cp3*m1*y3*z3+c1*c3*m2*y3*z3+c1*c2*cp2*m2*y3*z3+c1*c3*cp2*m2*y3*z3+cp1*cp2*m2*y3*z3+c3*cp1*cp2*m2*y3*z3+c1*c2*cp3*m2*y3*z3+c1*cp2*cp3*m2*y3*z3+c1*c3*cp2*cp3*m2*y3*z3+c3*cp1*cp2*cp3*m2*y3*z3+c2*cp1*m1*m2*y3*z3+c1*cp1*cp2*m3*y3*z3+c2*cp1*cp2*m3*y3*z3+c1*cp2*cp3*m3*y3*z3+cp1*cp2*cp3*m3*y3*z3+cp1*cp2*m1*m3*y3*z3+cp1*cp2*cp3*m1*m3*y3*z3+c2*cp1*m2*m3*y3*z3+cp1*cp2*cp3*m2*m3*y3*z3+c1*c2*cp1*z1*z3+c1*cp1*cp2*z1*z3+c1*c2*cp1*cp2*z1*z3+c1*c3*cp1*cp2*z1*z3+c2*c3*cp1*cp2*z1*z3+c1*c2*cp1*cp3*z1*z3+c1*c2*cp2*cp3*z1*z3+c2*c3*cp2*cp3*z1*z3+c1*c2*cp1*cp2*cp3*z1*z3+c1*c3*cp1*cp2*cp3*z1*z3+c2*cp1*m1*z1*z3+cp1*cp2*m1*z1*z3+c2*cp1*cp2*m1*z1*z3+c3*cp1*cp2*m1*z1*z3+c2*cp1*cp3*m1*z1*z3+c3*cp1*cp2*cp3*m1*z1*z3+m2*z1*z3+c1*cp1*m2*z1*z3+c2*cp1*m2*z1*z3+c1*cp2*m2*z1*z3+c1*cp1*cp2*m2*z1*z3+c2*cp2*cp3*m2*z1*z3+c1*cp1*cp2*cp3*m2*z1*z3+c2*cp1*cp2*cp3*m2*z1*z3+cp1*m1*m2*z1*z3+cp1*cp2*cp3*m1*m2*z1*z3+c2*cp2*m3*z1*z3+c1*cp1*cp2*m3*z1*z3+c1*cp1*cp2*cp3*m3*z1*z3+cp1*cp2*m1*m3*z1*z3+cp1*cp2*cp3*m1*m3*z1*z3+cp1*m2*m3*z1*z3+cp2*m2*m3*z1*z3+c1*c2*cp1*z2*z3+c1*cp1*cp2*z2*z3+c1*c2*cp1*cp2*z2*z3+c1*c3*cp1*cp2*z2*z3+c1*c2*cp1*cp3*z2*z3+c1*c2*cp1*cp2*cp3*z2*z3+c1*c3*cp1*cp2*cp3*z2*z3+c1*cp1*m1*z2*z3+c1*cp2*m1*z2*z3+c1*c3*cp2*m1*z2*z3+c1*cp1*cp2*m1*z2*z3+c1*c2*cp3*m1*z2*z3+c1*cp2*cp3*m1*z2*z3+c1*cp1*cp2*cp3*m1*z2*z3+c1*cp1*m2*z2*z3+c1*cp1*cp2*m2*z2*z3+c1*cp1*cp2*cp3*m2*z2*z3+c1*cp2*cp3*m1*m2*z2*z3+c1*cp1*cp2*m3*z2*z3+c1*cp1*cp2*cp3*m3*z2*z3;
end;
#####################################################################
C2in109:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c2*c3+c1*c2*c3*cp1+c1*c2*c3*cp2+c1*c3*cp1*cp2+c2*c3*cp1*cp2+c1*c2*c3*cp1*cp3+c1*c2*cp2*cp3+c1*c3*cp2*cp3+c1*c2*c3*cp2*cp3+c1*c2*c3*cp1*cp2*cp3+c1*c2*c3*m1+c2*c3*cp1*m1+c1*c2*c3*cp1*m1+c1*c3*cp2*m1+c3*cp1*cp2*m1+c2*c3*cp1*cp2*m1+c2*cp1*cp3*m1+c2*c3*cp1*cp3*m1+c1*c2*c3*cp1*cp3*m1+c1*c2*cp1*cp2*cp3*m1+c1*c3*cp1*cp2*cp3*m1+c1*c3*cp1*m2+c1*c2*c3*cp2*m2+c3*cp1*cp2*m2+c1*c2*c3*cp1*cp2*m2+c1*c2*c3*cp3*m2+c1*cp1*cp3*m2+c2*cp1*cp3*m2+c1*c3*cp1*cp3*m2+c1*c2*c3*cp1*cp3*m2+c1*cp2*cp3*m2+c1*c3*cp2*cp3*m2+cp1*cp2*cp3*m2+c1*cp1*cp2*cp3*m2+c2*cp1*cp2*cp3*m2+c1*c2*cp1*cp2*cp3*m2+c3*cp1*cp2*cp3*m2+c2*c3*cp1*cp2*cp3*m2+c1*c2*c3*cp1*cp2*cp3*m2+c2*c3*m1*m2+c2*c3*cp1*m1*m2+c3*cp2*m1*m2+c2*c3*cp2*m1*m2+c1*c2*c3*cp1*cp2*m1*m2+c1*cp3*m1*m2+c2*cp3*m1*m2+c2*c3*cp3*m1*m2+cp1*cp3*m1*m2+c1*c3*cp1*cp3*m1*m2+c2*c3*cp1*cp3*m1*m2+c1*c2*c3*cp1*cp3*m1*m2+cp2*cp3*m1*m2+c1*cp2*cp3*m1*m2+c1*c2*cp2*cp3*m1*m2+c1*c3*cp2*cp3*m1*m2+c1*c2*c3*cp2*cp3*m1*m2+cp1*cp2*cp3*m1*m2+c1*cp1*cp2*cp3*m1*m2+c2*cp1*cp2*cp3*m1*m2+c1*c2*cp1*cp2*cp3*m1*m2+c1*c2*c3*cp1*cp2*cp3*m1*m2+c1*c2*cp1*m3+c1*c2*c3*cp1*m3+c1*c2*c3*cp2*m3+c1*cp1*cp2*m3+c2*cp1*cp2*m3+c1*c2*cp1*cp2*m3+c3*cp1*cp2*m3+c2*c3*cp1*cp2*m3+c1*c2*c3*cp1*cp2*m3+c1*c2*cp3*m3+c1*c2*cp1*cp3*m3+c1*cp2*cp3*m3+c1*c2*c3*cp2*cp3*m3+c1*c2*cp1*cp2*cp3*m3+c2*c3*cp1*cp2*cp3*m3+c1*c2*m1*m3+c2*c3*cp1*m1*m3+c1*c2*c3*cp1*m1*m3+c1*c2*cp2*m1*m3+c1*c3*cp2*m1*m3+c1*c2*c3*cp2*m1*m3+cp1*cp2*m1*m3+c1*c2*cp1*cp2*m1*m3+c3*cp1*cp2*m1*m3+cp1*cp2*cp3*m1*m3+c1*cp1*cp2*cp3*m1*m3+c2*cp1*cp2*cp3*m1*m3+c3*cp1*cp2*cp3*m1*m3+c2*c3*cp1*cp2*cp3*m1*m3+c1*m2*m3+c1*c2*cp1*m2*m3+c3*cp1*m2*m3+c1*c3*cp1*m2*m3+c2*c3*cp1*m2*m3+c1*c2*cp2*m2*m3+c1*c2*c3*cp2*m2*m3+c1*cp1*cp2*m2*m3+c3*cp1*cp2*m2*m3+c1*c3*cp1*cp2*m2*m3+c2*c3*cp1*cp2*m2*m3+c1*c2*c3*cp1*cp2*m2*m3+c1*cp3*m2*m3+c1*c2*c3*cp3*m2*m3+c1*cp1*cp3*m2*m3+c2*cp1*cp3*m2*m3+c1*c2*cp1*cp3*m2*m3+c3*cp1*cp3*m2*m3+c1*c3*cp1*cp3*m2*m3+c1*cp2*cp3*m2*m3+c1*c3*cp2*cp3*m2*m3+cp1*cp2*cp3*m2*m3+c1*c2*cp1*cp2*cp3*m2*m3+c1*c3*cp1*cp2*cp3*m2*m3+c1*c2*c3*cp1*cp2*cp3*m2*m3+c2*m1*m2*m3+c2*c3*m1*m2*m3+c1*c2*c3*m1*m2*m3+cp1*m1*m2*m3+c1*cp1*m1*m2*m3+c2*cp1*m1*m2*m3+c3*cp1*m1*m2*m3+c1*c3*cp1*m1*m2*m3+c1*c2*c3*cp1*m1*m2*m3+cp2*m1*m2*m3+c1*cp2*m1*m2*m3+c2*cp2*m1*m2*m3+c1*c3*cp2*m1*m2*m3+c1*c2*c3*cp2*m1*m2*m3+cp1*cp2*m1*m2*m3+c1*cp1*cp2*m1*m2*m3+c3*cp1*cp2*m1*m2*m3+c1*c3*cp1*cp2*m1*m2*m3+c2*c3*cp1*cp2*m1*m2*m3+c1*c2*c3*cp1*cp2*m1*m2*m3+c1*c2*cp3*m1*m2*m3+c1*c3*cp3*m1*m2*m3+c1*c2*c3*cp3*m1*m2*m3+cp1*cp3*m1*m2*m3+c1*c2*c3*cp1*cp3*m1*m2*m3+c1*cp2*cp3*m1*m2*m3+c2*cp2*cp3*m1*m2*m3+c3*cp2*cp3*m1*m2*m3+c2*c3*cp2*cp3*m1*m2*m3+cp1*cp2*cp3*m1*m2*m3+c1*cp1*cp2*cp3*m1*m2*m3+c2*c3*cp1*cp2*cp3*m1*m2*m3+c2*c3*x1+c2*c3*cp1*x1+c1*c2*c3*cp2*x1+c3*cp1*cp2*x1+c1*c3*cp1*cp2*x1+c1*c2*c3*cp1*cp2*x1+c2*cp3*x1+c1*c2*cp3*x1+c1*c2*c3*cp3*x1+c2*cp1*cp3*x1+c1*c2*cp1*cp3*x1+c2*c3*cp1*cp3*x1+c1*cp2*cp3*x1+c2*cp2*cp3*x1+c1*c2*cp2*cp3*x1+c3*cp2*cp3*x1+c1*c3*cp2*cp3*x1+c2*c3*cp2*cp3*x1+c1*c3*cp1*cp2*cp3*x1+c1*c2*c3*cp1*cp2*cp3*x1+c2*c3*m1*x1+c2*c3*cp1*m1*x1+c3*cp1*cp2*m1*x1+c2*c3*cp1*cp2*m1*x1+c1*c2*cp3*m1*x1+c2*c3*cp3*m1*x1+c1*c2*c3*cp3*m1*x1+cp2*cp3*m1*x1+c1*c2*cp2*cp3*m1*x1+c3*cp2*cp3*m1*x1+cp1*cp2*cp3*m1*x1+c1*cp1*cp2*cp3*m1*x1+c2*cp1*cp2*cp3*m1*x1+c2*c3*m2*x1+c1*c2*c3*m2*x1+c1*c3*cp2*m2*x1+c1*c2*c3*cp2*m2*x1+c3*cp1*cp2*m2*x1+c1*c2*c3*cp1*cp2*m2*x1+cp3*m2*x1+c1*cp3*m2*x1+c2*cp3*m2*x1+c1*c3*cp3*m2*x1+c1*c2*c3*cp3*m2*x1+c1*cp1*cp3*m2*x1+c2*cp1*cp3*m2*x1+c1*c3*cp1*cp3*m2*x1+c1*c2*c3*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c1*c2*cp2*cp3*m2*x1+c3*cp2*cp3*m2*x1+c1*c3*cp2*cp3*m2*x1+c2*c3*cp2*cp3*m2*x1+c1*c2*cp1*cp2*cp3*m2*x1+c3*cp1*cp2*cp3*m2*x1+c2*c3*cp1*cp2*cp3*m2*x1+c3*m1*m2*x1+c3*cp1*m1*m2*x1+c1*c3*cp2*m1*m2*x1+c3*cp1*cp2*m1*m2*x1+c1*c2*cp3*m1*m2*x1+c3*cp3*m1*m2*x1+c1*cp1*cp3*m1*m2*x1+c2*cp1*cp3*m1*m2*x1+c1*c2*cp1*cp3*m1*m2*x1+c3*cp1*cp3*m1*m2*x1+c1*cp2*cp3*m1*m2*x1+c3*cp2*cp3*m1*m2*x1+c1*cp1*cp2*cp3*m1*m2*x1+c1*c2*m3*x1+c1*c2*c3*m3*x1+c1*c2*cp1*m3*x1+c1*c2*c3*cp1*m3*x1+c2*cp2*m3*x1+c1*c2*cp2*m3*x1+c1*c3*cp2*m3*x1+c2*c3*cp2*m3*x1+c1*c2*c3*cp2*m3*x1+cp1*cp2*m3*x1+c2*cp1*cp2*m3*x1+c3*cp1*cp2*m3*x1+c1*c3*cp1*cp2*m3*x1+c2*c3*cp1*cp2*m3*x1+c2*cp3*m3*x1+c1*c2*cp3*m3*x1+c1*c2*c3*cp3*m3*x1+cp2*cp3*m3*x1+c3*cp2*cp3*m3*x1+c1*c3*cp2*cp3*m3*x1+c2*c3*cp2*cp3*m3*x1+c1*c2*cp1*cp2*cp3*m3*x1+c2*m1*m3*x1+c2*cp1*m1*m3*x1+cp2*m1*m3*x1+c1*cp2*m1*m3*x1+c1*c2*cp2*m1*m3*x1+c3*cp2*m1*m3*x1+c1*c3*cp2*m1*m3*x1+cp1*cp2*m1*m3*x1+c1*c2*cp1*cp2*m1*m3*x1+c3*cp1*cp2*m1*m3*x1+c2*cp3*m1*m3*x1+c2*c3*cp3*m1*m3*x1+c2*cp1*cp3*m1*m3*x1+cp2*cp3*m1*m3*x1+c2*cp2*cp3*m1*m3*x1+c1*c2*cp2*cp3*m1*m3*x1+c3*cp2*cp3*m1*m3*x1+cp1*cp2*cp3*m1*m3*x1+c2*cp1*cp2*cp3*m1*m3*x1+m2*m3*x1+c1*c2*m2*m3*x1+c3*m2*m3*x1+c2*c3*m2*m3*x1+c1*cp1*m2*m3*x1+c1*c2*cp1*m2*m3*x1+c3*cp1*m2*m3*x1+c1*c3*cp1*m2*m3*x1+c1*cp2*m2*m3*x1+c2*cp2*m2*m3*x1+c3*cp2*m2*m3*x1+c1*c3*cp2*m2*m3*x1+c1*c2*c3*cp2*m2*m3*x1+c1*c3*cp1*cp2*m2*m3*x1+c1*c2*c3*cp1*cp2*m2*m3*x1+c1*cp3*m2*m3*x1+c1*c3*cp3*m2*m3*x1+c2*c3*cp3*m2*m3*x1+cp1*cp3*m2*m3*x1+c1*cp1*cp3*m2*m3*x1+c1*c2*cp1*cp3*m2*m3*x1+c1*c2*cp2*cp3*m2*m3*x1+c1*c3*cp2*cp3*m2*m3*x1+c1*c2*c3*cp2*cp3*m2*m3*x1+cp1*cp2*cp3*m2*m3*x1+c1*cp1*cp2*cp3*m2*m3*x1+c1*c3*cp1*cp2*cp3*m2*m3*x1+c1*c2*c3*cp1*cp2*cp3*m2*m3*x1+c3*m1*m2*m3*x1+c1*c3*m1*m2*m3*x1+c2*c3*m1*m2*m3*x1+c2*cp1*m1*m2*m3*x1+c3*cp1*m1*m2*m3*x1+c1*c3*cp1*m1*m2*m3*x1+c2*c3*cp1*m1*m2*m3*x1+c1*c3*cp2*m1*m2*m3*x1+cp1*cp2*m1*m2*m3*x1+c2*c3*cp1*cp2*m1*m2*m3*x1+c3*cp3*m1*m2*m3*x1+c1*c3*cp3*m1*m2*m3*x1+c2*c3*cp3*m1*m2*m3*x1+c2*cp1*cp3*m1*m2*m3*x1+c1*cp2*cp3*m1*m2*m3*x1+c2*cp2*cp3*m1*m2*m3*x1+c3*cp2*cp3*m1*m2*m3*x1+c2*c3*cp2*cp3*m1*m2*m3*x1+c3*cp1*cp2*cp3*m1*m2*m3*x1+c2*c3*cp1*cp2*cp3*m1*m2*m3*x1+(1/2)*c2*c3*x1*(1+x1)+(1/2)*c2*c3*cp1*x1*(1+x1)+(1/2)*c2*c3*cp2*x1*(1+x1)+(1/2)*c3*cp1*cp2*x1*(1+x1)+(1/2)*c1*c2*cp3*x1*(1+x1)+(1/2)*c2*c3*cp3*x1*(1+x1)+(1/2)*c1*cp2*cp3*x1*(1+x1)+(1/2)*c2*cp2*cp3*x1*(1+x1)+(1/2)*c3*cp2*cp3*x1*(1+x1)+(1/2)*c2*cp1*cp3*m1*x1*(1+x1)+(1/2)*cp2*cp3*m1*x1*(1+x1)+(1/2)*cp1*cp2*cp3*m1*x1*(1+x1)+(1/2)*c3*cp1*cp2*m2*x1*(1+x1)+(1/2)*cp1*cp3*m2*x1*(1+x1)+(1/2)*c1*cp1*cp3*m2*x1*(1+x1)+(1/2)*c2*cp1*cp3*m2*x1*(1+x1)+(1/2)*c1*cp2*cp3*m2*x1*(1+x1)+(1/2)*c3*cp2*cp3*m2*x1*(1+x1)+(1/2)*cp1*cp3*m1*m2*x1*(1+x1)+(1/2)*cp1*cp2*cp3*m1*m2*x1*(1+x1)+(1/2)*cp1*cp2*m3*x1*(1+x1)+(1/2)*c2*cp1*cp2*m3*x1*(1+x1)+(1/2)*c3*cp1*cp2*m3*x1*(1+x1)+(1/2)*c2*cp1*cp3*m3*x1*(1+x1)+(1/2)*cp2*cp3*m3*x1*(1+x1)+(1/2)*c3*cp2*cp3*m3*x1*(1+x1)+(1/2)*m2*m3*x1*(1+x1)+(1/2)*cp1*cp3*m2*m3*x1*(1+x1)+(1/2)*cp1*cp2*cp3*m2*m3*x1*(1+x1)+c1*c3*x2+c1*c3*cp1*x2+c2*c3*cp1*x2+c1*c3*cp2*x2+c1*c2*c3*cp2*x2+c3*cp1*cp2*x2+c1*c2*c3*cp3*x2+cp1*cp3*x2+c1*c2*cp1*cp3*x2+c1*c3*cp1*cp3*x2+c1*c2*c3*cp1*cp3*x2+c1*c2*c3*cp1*cp2*cp3*x2+c3*m1*x2+c2*c3*m1*x2+c1*c2*c3*m1*x2+c3*cp1*m1*x2+c1*c3*cp1*m1*x2+c2*c3*cp1*m1*x2+c1*c2*c3*cp1*m1*x2+c3*cp2*m1*x2+c2*c3*cp2*m1*x2+c3*cp1*cp2*m1*x2+c1*c2*c3*cp1*cp2*m1*x2+c1*cp3*m1*x2+c1*c2*cp3*m1*x2+c3*cp3*m1*x2+c2*c3*cp3*m1*x2+c1*cp1*cp3*m1*x2+c1*c2*cp1*cp3*m1*x2+c3*cp1*cp3*m1*x2+c1*c3*cp1*cp3*m1*x2+c1*c2*c3*cp1*cp3*m1*x2+c3*cp2*cp3*m1*x2+c1*c3*cp2*cp3*m1*x2+c2*c3*cp2*cp3*m1*x2+c1*cp1*cp2*cp3*m1*x2+c2*cp1*cp2*cp3*m1*x2+c1*c2*cp1*cp2*cp3*m1*x2+c1*c3*cp1*cp2*cp3*m1*x2+c1*c2*c3*m2*x2+c2*c3*cp1*m2*x2+c1*c2*c3*cp1*m2*x2+c1*c3*cp1*cp2*m2*x2+c1*c2*cp3*m2*x2+c1*c3*cp3*m2*x2+c1*cp1*cp3*m2*x2+c2*cp1*cp3*m2*x2+c1*c2*cp1*cp3*m2*x2+c1*cp2*cp3*m2*x2+c1*c3*cp2*cp3*m2*x2+c2*cp1*cp2*cp3*m2*x2+c1*c2*cp1*cp2*cp3*m2*x2+c1*c3*cp1*cp2*cp3*m2*x2+c2*c3*cp1*m1*m2*x2+c2*c3*cp2*m1*m2*x2+c1*c3*cp1*cp2*m1*m2*x2+c1*c2*c3*cp1*cp2*m1*m2*x2+c1*cp3*m1*m2*x2+c2*cp3*m1*m2*x2+c3*cp3*m1*m2*x2+c1*c3*cp3*m1*m2*x2+c2*c3*cp3*m1*m2*x2+c1*cp1*cp3*m1*m2*x2+c1*c3*cp1*cp3*m1*m2*x2+c1*c2*c3*cp1*cp3*m1*m2*x2+c1*cp2*cp3*m1*m2*x2+c1*cp1*cp2*cp3*m1*m2*x2+c1*c2*cp1*cp2*cp3*m1*m2*x2+c3*cp1*cp2*cp3*m1*m2*x2+c1*c3*cp1*cp2*cp3*m1*m2*x2+c1*c3*m3*x2+c1*c3*cp1*m3*x2+c1*c2*cp2*m3*x2+c1*c3*cp2*m3*x2+c1*cp1*cp2*m3*x2+c1*c2*cp1*cp2*m3*x2+c1*c2*c3*cp1*cp2*m3*x2+c1*c3*cp3*m3*x2+c1*cp1*cp3*m3*x2+c2*cp1*cp3*m3*x2+c1*c3*cp1*cp3*m3*x2+c2*c3*cp1*cp3*m3*x2+c1*c2*c3*cp1*cp3*m3*x2+c1*c2*cp2*cp3*m3*x2+c1*c3*cp2*cp3*m3*x2+cp1*cp2*cp3*m3*x2+c2*cp1*cp2*cp3*m3*x2+c1*c2*cp1*cp2*cp3*m3*x2+c2*c3*cp1*cp2*cp3*m3*x2+m1*m3*x2+c1*m1*m3*x2+c2*m1*m3*x2+cp1*m1*m3*x2+c3*cp1*m1*m3*x2+c1*cp2*m1*m3*x2+c2*cp1*cp2*m1*m3*x2+c1*c2*cp1*cp2*m1*m3*x2+c3*cp1*cp2*m1*m3*x2+c1*c3*cp1*cp2*m1*m3*x2+c2*c3*cp1*cp2*m1*m3*x2+c1*c2*c3*cp1*cp2*m1*m3*x2+cp3*m1*m3*x2+c2*cp3*m1*m3*x2+c2*c3*cp3*m1*m3*x2+cp1*cp3*m1*m3*x2+c1*cp1*cp3*m1*m3*x2+c1*c2*cp1*cp3*m1*m3*x2+c3*cp1*cp3*m1*m3*x2+c1*c3*cp1*cp3*m1*m3*x2+cp2*cp3*m1*m3*x2+c2*cp2*cp3*m1*m3*x2+c3*cp2*cp3*m1*m3*x2+c1*c3*cp2*cp3*m1*m3*x2+c2*c3*cp2*cp3*m1*m3*x2+cp1*cp2*cp3*m1*m3*x2+c1*cp1*cp2*cp3*m1*m3*x2+c3*cp1*cp2*cp3*m1*m3*x2+c1*c3*cp1*cp2*cp3*m1*m3*x2+c2*c3*cp1*cp2*cp3*m1*m3*x2+c1*c2*c3*cp1*cp2*cp3*m1*m3*x2+c1*m2*m3*x2+c1*c2*m2*m3*x2+c1*c3*m2*m3*x2+cp1*m2*m3*x2+c1*cp1*m2*m3*x2+c2*cp1*m2*m3*x2+c1*c2*cp1*m2*m3*x2+c3*cp1*m2*m3*x2+c1*c3*cp1*m2*m3*x2+c1*cp2*m2*m3*x2+c1*cp1*cp2*m2*m3*x2+c1*c3*cp1*cp2*m2*m3*x2+c1*c2*c3*cp1*cp2*m2*m3*x2+c1*cp3*m2*m3*x2+cp1*cp3*m2*m3*x2+c1*cp1*cp3*m2*m3*x2+c2*cp1*cp3*m2*m3*x2+c1*c2*cp1*cp3*m2*m3*x2+c1*c3*cp1*cp3*m2*m3*x2+c1*c3*cp2*cp3*m2*m3*x2+c1*c2*cp1*cp2*cp3*m2*m3*x2+c1*c3*cp1*cp2*cp3*m2*m3*x2+c2*c3*cp1*cp2*cp3*m2*m3*x2+c1*c2*c3*cp1*cp2*cp3*m2*m3*x2+m1*m2*m3*x2+c1*m1*m2*m3*x2+c1*cp1*m1*m2*m3*x2+c2*cp1*m1*m2*m3*x2+c3*cp1*m1*m2*m3*x2+cp1*cp2*m1*m2*m3*x2+c1*cp1*cp2*m1*m2*m3*x2+c1*c2*cp1*cp2*m1*m2*m3*x2+c1*c3*cp1*cp2*m1*m2*m3*x2+c2*c3*cp1*cp2*m1*m2*m3*x2+c1*c2*c3*cp1*cp2*m1*m2*m3*x2+cp3*m1*m2*m3*x2+c3*cp3*m1*m2*m3*x2+c1*cp1*cp3*m1*m2*m3*x2+c2*cp1*cp3*m1*m2*m3*x2+c1*c2*cp1*cp3*m1*m2*m3*x2+c3*cp1*cp3*m1*m2*m3*x2+c1*c2*c3*cp1*cp3*m1*m2*m3*x2+c3*cp2*cp3*m1*m2*m3*x2+cp1*cp2*cp3*m1*m2*m3*x2+c2*cp1*cp2*cp3*m1*m2*m3*x2+c1*c3*cp1*cp2*cp3*m1*m2*m3*x2+c2*c3*cp1*cp2*cp3*m1*m2*m3*x2+c3*x1*x2+c2*c3*x1*x2+c3*cp1*x1*x2+c1*c3*cp1*x1*x2+c2*c3*cp1*x1*x2+c3*cp2*x1*x2+c1*c3*cp2*x1*x2+c2*c3*cp2*x1*x2+c1*c3*cp1*cp2*x1*x2+c2*c3*cp1*cp2*x1*x2+cp3*x1*x2+c2*cp3*x1*x2+c3*cp3*x1*x2+c1*c3*cp3*x1*x2+c2*c3*cp3*x1*x2+c1*c2*cp1*cp3*x1*x2+c1*cp2*cp3*x1*x2+c2*cp2*cp3*x1*x2+c1*c2*cp2*cp3*x1*x2+c3*cp2*cp3*x1*x2+c1*c3*m1*x1*x2+c1*c3*cp1*m1*x1*x2+c3*cp2*m1*x1*x2+c1*c3*cp2*m1*x1*x2+c3*cp1*cp2*m1*x1*x2+c2*cp3*m1*x1*x2+c1*c2*cp3*m1*x1*x2+c3*cp3*m1*x1*x2+c1*c3*cp3*m1*x1*x2+cp1*cp3*m1*x1*x2+c2*cp1*cp3*m1*x1*x2+c3*cp1*cp3*m1*x1*x2+cp2*cp3*m1*x1*x2+c2*cp2*cp3*m1*x1*x2+cp1*cp2*cp3*m1*x1*x2+c2*cp1*cp2*cp3*m1*x1*x2+c1*c3*m2*x1*x2+c3*cp1*m2*x1*x2+c1*c3*cp1*m2*x1*x2+c1*c3*cp2*m2*x1*x2+c3*cp1*cp2*m2*x1*x2+cp3*m2*x1*x2+c1*cp3*m2*x1*x2+c1*c2*cp3*m2*x1*x2+c1*c3*cp3*m2*x1*x2+cp1*cp3*m2*x1*x2+c1*cp1*cp3*m2*x1*x2+c3*cp1*cp3*m2*x1*x2+cp2*cp3*m2*x1*x2+c1*cp2*cp3*m2*x1*x2+c3*cp2*cp3*m2*x1*x2+cp1*cp2*cp3*m2*x1*x2+c1*cp1*cp2*cp3*m2*x1*x2+c2*cp1*cp2*cp3*m2*x1*x2+c3*m1*m2*x1*x2+c3*cp1*m1*m2*x1*x2+c3*cp2*m1*m2*x1*x2+c1*cp3*m1*m2*x1*x2+c2*cp3*m1*m2*x1*x2+c3*cp3*m1*m2*x1*x2+cp1*cp3*m1*m2*x1*x2+c1*cp2*cp3*m1*m2*x1*x2+cp1*cp2*cp3*m1*m2*x1*x2+m3*x1*x2+c1*c2*m3*x1*x2+c1*c3*m3*x1*x2+cp1*m3*x1*x2+c1*cp1*m3*x1*x2+c2*cp1*m3*x1*x2+c1*c2*cp1*m3*x1*x2+c3*cp1*m3*x1*x2+c1*c3*cp1*m3*x1*x2+cp2*m3*x1*x2+c1*c2*cp2*m3*x1*x2+c1*c3*cp2*m3*x1*x2+cp1*cp2*m3*x1*x2+c1*cp1*cp2*m3*x1*x2+c2*cp1*cp2*m3*x1*x2+c3*cp1*cp2*m3*x1*x2+cp3*m3*x1*x2+c1*c2*cp3*m3*x1*x2+c1*c3*cp3*m3*x1*x2+cp1*cp3*m3*x1*x2+c1*cp1*cp3*m3*x1*x2+c2*cp1*cp3*m3*x1*x2+cp2*cp3*m3*x1*x2+c3*cp2*cp3*m3*x1*x2+cp1*cp2*cp3*m3*x1*x2+c1*cp1*cp2*cp3*m3*x1*x2+c2*cp1*cp2*cp3*m3*x1*x2+c1*m1*m3*x1*x2+c2*m1*m3*x1*x2+c3*m1*m3*x1*x2+c1*cp1*m1*m3*x1*x2+c2*cp1*m1*m3*x1*x2+c3*cp1*m1*m3*x1*x2+cp2*m1*m3*x1*x2+c1*cp2*m1*m3*x1*x2+c2*cp2*m1*m3*x1*x2+c3*cp2*m1*m3*x1*x2+cp1*cp2*m1*m3*x1*x2+c1*cp1*cp2*m1*m3*x1*x2+cp3*m1*m3*x1*x2+c1*cp3*m1*m3*x1*x2+c2*cp3*m1*m3*x1*x2+c3*cp3*m1*m3*x1*x2+cp1*cp3*m1*m3*x1*x2+c1*cp1*cp3*m1*m3*x1*x2+m2*m3*x1*x2+cp1*m2*m3*x1*x2+c1*cp1*cp3*m2*m3*x1*x2+c1*cp2*cp3*m2*m3*x1*x2+cp1*cp3*m1*m2*m3*x1*x2+cp2*cp3*m1*m2*m3*x1*x2+(1/2)*c3*cp1*cp2*x2*(1+x2)+(1/2)*c1*c3*cp1*cp2*x2*(1+x2)+(1/2)*c1*c2*cp3*x2*(1+x2)+(1/2)*cp1*cp3*x2*(1+x2)+(1/2)*c1*c2*cp1*cp3*x2*(1+x2)+(1/2)*c1*c3*cp1*cp3*x2*(1+x2)+(1/2)*c3*cp1*cp2*m1*x2*(1+x2)+(1/2)*c1*c3*cp1*cp2*m1*x2*(1+x2)+(1/2)*c2*cp1*cp3*m1*x2*(1+x2)+(1/2)*c1*c2*cp1*cp3*m1*x2*(1+x2)+(1/2)*c3*cp1*cp3*m1*x2*(1+x2)+(1/2)*c1*c3*cp1*cp3*m1*x2*(1+x2)+(1/2)*c1*c3*cp1*cp2*m2*x2*(1+x2)+(1/2)*c1*cp1*cp3*m2*x2*(1+x2)+(1/2)*c1*c2*cp1*cp3*m2*x2*(1+x2)+(1/2)*c1*c3*cp1*cp3*m2*x2*(1+x2)+(1/2)*c1*cp2*cp3*m2*x2*(1+x2)+(1/2)*c3*cp1*cp2*m1*m2*x2*(1+x2)+(1/2)*c1*cp1*cp3*m1*m2*x2*(1+x2)+(1/2)*c2*cp1*cp3*m1*m2*x2*(1+x2)+(1/2)*c3*cp1*cp3*m1*m2*x2*(1+x2)+(1/2)*c1*cp1*cp2*cp3*m1*m2*x2*(1+x2)+(1/2)*c1*cp1*cp2*m3*x2*(1+x2)+(1/2)*c1*c2*cp1*cp2*m3*x2*(1+x2)+(1/2)*c1*c3*cp1*cp2*m3*x2*(1+x2)+(1/2)*c1*cp1*cp3*m3*x2*(1+x2)+(1/2)*c1*c2*cp1*cp3*m3*x2*(1+x2)+(1/2)*c1*c3*cp1*cp3*m3*x2*(1+x2)+(1/2)*cp1*cp2*cp3*m3*x2*(1+x2)+(1/2)*c2*cp1*cp2*m1*m3*x2*(1+x2)+(1/2)*c3*cp1*cp2*m1*m3*x2*(1+x2)+(1/2)*c2*cp1*cp3*m1*m3*x2*(1+x2)+(1/2)*c3*cp1*cp3*m1*m3*x2*(1+x2)+(1/2)*c1*cp1*cp3*m2*m3*x2*(1+x2)+(1/2)*c1*cp1*cp2*cp3*m2*m3*x2*(1+x2)+(1/2)*cp1*cp3*m1*m2*m3*x2*(1+x2)+(1/2)*cp1*cp2*cp3*m1*m2*m3*x2*(1+x2)+c1*c2*x3+c1*c2*c3*x3+c2*c3*cp1*x3+c1*c2*c3*cp1*x3+c1*c2*cp2*x3+c1*c2*c3*cp2*x3+cp1*cp2*x3+c1*cp1*cp2*x3+c3*cp1*cp2*x3+c1*c2*c3*cp1*cp2*x3+c1*c2*c3*cp1*cp3*x3+c1*c2*cp2*cp3*x3+c1*c3*cp2*cp3*x3+c1*cp1*cp2*cp3*x3+c1*c3*cp1*cp2*cp3*x3+c1*c2*c3*cp1*cp2*cp3*x3+c1*c2*c3*m1*x3+c2*cp1*m1*x3+c1*c2*c3*cp2*m1*x3+cp1*cp2*m1*x3+c1*cp1*cp2*m1*x3+c1*c3*cp1*cp2*m1*x3+c2*c3*cp1*cp2*m1*x3+c1*c2*c3*cp3*m1*x3+c2*c3*cp1*cp3*m1*x3+cp2*cp3*m1*x3+c1*cp2*cp3*m1*x3+c2*cp2*cp3*m1*x3+c3*cp2*cp3*m1*x3+c1*c3*cp2*cp3*m1*x3+c2*c3*cp2*cp3*m1*x3+c2*cp1*cp2*cp3*m1*x3+c3*cp1*cp2*cp3*m1*x3+c1*c3*cp1*cp2*cp3*m1*x3+c1*m2*x3+c1*c3*m2*x3+cp1*m2*x3+c2*cp1*m2*x3+c3*cp1*m2*x3+c1*c3*cp1*m2*x3+c1*cp2*m2*x3+c1*c3*cp2*m2*x3+c1*cp1*cp2*m2*x3+c2*cp1*cp2*m2*x3+c1*c3*cp1*cp2*m2*x3+c2*c3*cp1*cp2*m2*x3+c1*c2*cp3*m2*x3+c1*c2*c3*cp3*m2*x3+cp1*cp3*m2*x3+c1*cp1*cp3*m2*x3+c1*c2*cp1*cp3*m2*x3+c3*cp1*cp3*m2*x3+c1*c3*cp2*cp3*m2*x3+c2*cp1*cp2*cp3*m2*x3+c2*c3*cp1*cp2*cp3*m2*x3+c1*m1*m2*x3+c1*c2*m1*m2*x3+c1*c3*m1*m2*x3+c2*cp1*m1*m2*x3+c1*cp2*m1*m2*x3+c1*c2*cp2*m1*m2*x3+c1*c3*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+c1*c2*cp1*cp2*m1*m2*x3+c2*c3*cp1*cp2*m1*m2*x3+c1*c2*c3*cp1*cp2*m1*m2*x3+c2*cp3*m1*m2*x3+c1*c2*cp3*m1*m2*x3+c2*c3*cp3*m1*m2*x3+cp1*cp3*m1*m2*x3+c2*cp1*cp3*m1*m2*x3+c3*cp1*cp3*m1*m2*x3+c2*c3*cp1*cp3*m1*m2*x3+cp2*cp3*m1*m2*x3+c1*cp2*cp3*m1*m2*x3+c1*c2*cp2*cp3*m1*m2*x3+c3*cp2*cp3*m1*m2*x3+cp1*cp2*cp3*m1*m2*x3+c1*cp1*cp2*cp3*m1*m2*x3+c2*cp1*cp2*cp3*m1*m2*x3+c1*c2*cp1*cp2*cp3*m1*m2*x3+c2*c3*cp1*cp2*cp3*m1*m2*x3+c1*c2*c3*cp1*cp2*cp3*m1*m2*x3+c1*c2*m3*x3+c1*c2*cp1*m3*x3+c1*c2*cp2*m3*x3+cp1*cp2*m3*x3+c1*cp1*cp2*m3*x3+c2*cp1*cp2*m3*x3+c1*c2*cp1*cp2*m3*x3+c3*cp1*cp2*m3*x3+c1*c2*cp3*m3*x3+c2*cp1*cp3*m3*x3+c2*c3*cp1*cp3*m3*x3+c1*cp2*cp3*m3*x3+c1*c2*cp2*cp3*m3*x3+cp1*cp2*cp3*m3*x3+c2*cp1*cp2*cp3*m3*x3+c3*cp1*cp2*cp3*m3*x3+c2*cp1*m1*m3*x3+cp1*cp2*m1*m3*x3+c1*cp1*cp2*m1*m3*x3+c1*c3*cp1*cp2*m1*m3*x3+c2*c3*cp1*cp2*m1*m3*x3+c2*cp1*cp3*m1*m3*x3+c1*c2*cp1*cp3*m1*m3*x3+c2*c3*cp1*cp3*m1*m3*x3+c1*c2*c3*cp1*cp3*m1*m3*x3+cp1*cp2*cp3*m1*m3*x3+c1*cp1*cp2*cp3*m1*m3*x3+c1*c2*cp1*cp2*cp3*m1*m3*x3+c1*c3*cp1*cp2*cp3*m1*m3*x3+c1*c2*c3*cp1*cp2*cp3*m1*m3*x3+c1*m2*m3*x3+c1*c3*m2*m3*x3+cp1*m2*m3*x3+c1*cp1*m2*m3*x3+c2*cp1*m2*m3*x3+c3*cp1*m2*m3*x3+c1*c3*cp1*m2*m3*x3+c1*cp2*m2*m3*x3+c1*c3*cp2*m2*m3*x3+c1*cp1*cp2*m2*m3*x3+c3*cp1*cp2*m2*m3*x3+c1*c3*cp1*cp2*m2*m3*x3+c2*c3*cp1*cp2*m2*m3*x3+c1*c2*c3*cp1*cp2*m2*m3*x3+c1*c2*cp3*m2*m3*x3+c2*cp1*cp3*m2*m3*x3+c1*c2*cp1*cp3*m2*m3*x3+c1*c3*cp1*cp3*m2*m3*x3+c1*c2*c3*cp1*cp3*m2*m3*x3+c1*cp2*cp3*m2*m3*x3+c1*c3*cp2*cp3*m2*m3*x3+cp1*cp2*cp3*m2*m3*x3+c1*c2*cp1*cp2*cp3*m2*m3*x3+c1*c3*cp1*cp2*cp3*m2*m3*x3+c2*c3*cp1*cp2*cp3*m2*m3*x3+c1*c3*m1*m2*m3*x3+c2*c3*m1*m2*m3*x3+cp1*m1*m2*m3*x3+c1*c3*cp1*m1*m2*m3*x3+c2*c3*cp1*m1*m2*m3*x3+c1*c3*cp2*m1*m2*m3*x3+c2*c3*cp2*m1*m2*m3*x3+cp1*cp2*m1*m2*m3*x3+c2*cp1*cp2*m1*m2*m3*x3+c1*c2*cp1*cp2*m1*m2*m3*x3+c3*cp1*cp2*m1*m2*m3*x3+c1*cp3*m1*m2*m3*x3+c2*cp3*m1*m2*m3*x3+c1*c3*cp3*m1*m2*m3*x3+c2*c3*cp3*m1*m2*m3*x3+cp1*cp3*m1*m2*m3*x3+c1*cp1*cp3*m1*m2*m3*x3+c3*cp1*cp3*m1*m2*m3*x3+c1*c3*cp1*cp3*m1*m2*m3*x3+c2*c3*cp1*cp3*m1*m2*m3*x3+c1*cp2*cp3*m1*m2*m3*x3+c2*cp2*cp3*m1*m2*m3*x3+c1*c3*cp2*cp3*m1*m2*m3*x3+c2*c3*cp2*cp3*m1*m2*m3*x3+c2*cp1*cp2*cp3*m1*m2*m3*x3+c1*c2*cp1*cp2*cp3*m1*m2*m3*x3+c3*cp1*cp2*cp3*m1*m2*m3*x3+c1*c2*x1*x3+c2*c3*cp1*x1*x3+c1*c2*c3*cp2*x1*x3+c1*c2*cp1*cp2*x1*x3+c2*c3*cp1*cp2*x1*x3+c1*c2*c3*cp1*cp2*x1*x3+c1*c2*c3*cp3*x1*x3+c1*c2*cp1*cp3*x1*x3+c2*c3*cp1*cp3*x1*x3+c1*c2*c3*cp1*cp3*x1*x3+c1*c2*cp1*cp2*cp3*x1*x3+c1*c3*cp1*cp2*cp3*x1*x3+c2*m1*x1*x3+c2*cp1*m1*x1*x3+c2*c3*cp2*m1*x1*x3+c2*c3*cp1*cp2*m1*x1*x3+c2*c3*cp3*m1*x1*x3+c2*c3*cp1*cp3*m1*x1*x3+c1*m2*x1*x3+cp1*m2*x1*x3+c2*cp1*m2*x1*x3+c3*cp1*m2*x1*x3+c1*cp2*m2*x1*x3+c1*c2*cp2*m2*x1*x3+c1*c2*c3*cp2*m2*x1*x3+cp1*cp2*m2*x1*x3+c2*cp1*cp2*m2*x1*x3+c1*c2*cp1*cp2*m2*x1*x3+c3*cp1*cp2*m2*x1*x3+c1*c2*c3*cp1*cp2*m2*x1*x3+c1*cp3*m2*x1*x3+c1*c2*cp3*m2*x1*x3+c1*c2*c3*cp3*m2*x1*x3+cp1*cp3*m2*x1*x3+c2*cp1*cp3*m2*x1*x3+c1*c2*cp1*cp3*m2*x1*x3+c3*cp1*cp3*m2*x1*x3+c1*c2*c3*cp1*cp3*m2*x1*x3+cp1*cp2*cp3*m2*x1*x3+c1*cp1*cp2*cp3*m2*x1*x3+c2*cp1*cp2*cp3*m2*x1*x3+m1*m2*x1*x3+cp1*m1*m2*x1*x3+cp2*m1*m2*x1*x3+c2*cp2*m1*m2*x1*x3+c2*c3*cp2*m1*m2*x1*x3+cp1*cp2*m1*m2*x1*x3+c2*cp1*cp2*m1*m2*x1*x3+c2*c3*cp1*cp2*m1*m2*x1*x3+cp3*m1*m2*x1*x3+c2*cp3*m1*m2*x1*x3+c2*c3*cp3*m1*m2*x1*x3+cp1*cp3*m1*m2*x1*x3+c2*cp1*cp3*m1*m2*x1*x3+c2*c3*cp1*cp3*m1*m2*x1*x3+c1*c2*cp2*m3*x1*x3+c1*c2*c3*cp2*m3*x1*x3+c1*c2*cp1*cp2*m3*x1*x3+c1*c2*c3*cp1*cp2*m3*x1*x3+c1*c2*cp3*m3*x1*x3+c1*c2*c3*cp3*m3*x1*x3+c1*c2*cp1*cp3*m3*x1*x3+c1*c2*c3*cp1*cp3*m3*x1*x3+c2*cp2*m1*m3*x1*x3+c2*c3*cp2*m1*m3*x1*x3+c2*cp1*cp2*m1*m3*x1*x3+c2*c3*cp1*cp2*m1*m3*x1*x3+c2*cp3*m1*m3*x1*x3+c2*c3*cp3*m1*m3*x1*x3+c2*cp1*cp3*m1*m3*x1*x3+c2*c3*cp1*cp3*m1*m3*x1*x3+c1*c2*cp2*m2*m3*x1*x3+c1*c3*cp2*m2*m3*x1*x3+c1*c2*cp1*cp2*m2*m3*x1*x3+c1*c3*cp1*cp2*m2*m3*x1*x3+c1*cp3*m2*m3*x1*x3+c1*c3*cp3*m2*m3*x1*x3+c1*cp1*cp3*m2*m3*x1*x3+c1*c3*cp1*cp3*m2*m3*x1*x3+c1*cp2*cp3*m2*m3*x1*x3+c1*c2*cp2*cp3*m2*m3*x1*x3+c1*cp1*cp2*cp3*m2*m3*x1*x3+c1*c2*cp1*cp2*cp3*m2*m3*x1*x3+c2*cp2*m1*m2*m3*x1*x3+c3*cp2*m1*m2*m3*x1*x3+c2*cp1*cp2*m1*m2*m3*x1*x3+c3*cp1*cp2*m1*m2*m3*x1*x3+cp3*m1*m2*m3*x1*x3+c3*cp3*m1*m2*m3*x1*x3+cp1*cp3*m1*m2*m3*x1*x3+c3*cp1*cp3*m1*m2*m3*x1*x3+cp2*cp3*m1*m2*m3*x1*x3+c2*cp2*cp3*m1*m2*m3*x1*x3+cp1*cp2*cp3*m1*m2*m3*x1*x3+c2*cp1*cp2*cp3*m1*m2*m3*x1*x3+c1*x2*x3+c1*c3*x2*x3+cp1*x2*x3+c1*cp1*x2*x3+c2*cp1*x2*x3+c3*cp1*x2*x3+c1*c3*cp1*x2*x3+c2*c3*cp1*x2*x3+c1*cp2*x2*x3+c1*c3*cp2*x2*x3+c1*c2*cp1*cp2*x2*x3+c1*c3*cp1*cp2*x2*x3+c1*c2*c3*cp1*cp2*x2*x3+c1*cp3*x2*x3+c1*c2*cp3*x2*x3+c1*cp1*cp3*x2*x3+c1*c2*cp1*cp3*x2*x3+c1*c3*cp1*cp3*x2*x3+c1*c2*c3*cp1*cp3*x2*x3+c1*cp1*cp2*cp3*x2*x3+c1*c2*cp1*cp2*cp3*x2*x3+c1*c3*cp1*cp2*cp3*x2*x3+m1*x2*x3+c1*m1*x2*x3+c2*m1*x2*x3+c3*m1*x2*x3+c1*c3*m1*x2*x3+c2*c3*m1*x2*x3+cp1*m1*x2*x3+c1*cp1*m1*x2*x3+c2*cp1*m1*x2*x3+c3*cp1*m1*x2*x3+c1*c3*cp1*m1*x2*x3+c2*c3*cp1*m1*x2*x3+cp2*m1*x2*x3+c1*cp2*m1*x2*x3+c2*cp2*m1*x2*x3+c3*cp2*m1*x2*x3+c1*c3*cp2*m1*x2*x3+c2*c3*cp2*m1*x2*x3+c1*c2*cp1*cp2*m1*x2*x3+c3*cp1*cp2*m1*x2*x3+c1*c2*c3*cp1*cp2*m1*x2*x3+cp3*m1*x2*x3+c1*c3*cp3*m1*x2*x3+c2*c3*cp3*m1*x2*x3+cp1*cp3*m1*x2*x3+c1*cp1*cp3*m1*x2*x3+c1*c2*cp1*cp3*m1*x2*x3+c3*cp1*cp3*m1*x2*x3+c1*c2*c3*cp1*cp3*m1*x2*x3+c1*cp2*cp3*m1*x2*x3+c2*cp2*cp3*m1*x2*x3+c3*cp2*cp3*m1*x2*x3+cp1*cp2*cp3*m1*x2*x3+c1*cp1*cp2*cp3*m1*x2*x3+c1*m2*x2*x3+c1*c3*m2*x2*x3+cp1*m2*x2*x3+c1*cp1*m2*x2*x3+c2*cp1*m2*x2*x3+c3*cp1*m2*x2*x3+c1*c3*cp1*m2*x2*x3+c2*c3*cp1*m2*x2*x3+c1*cp2*m2*x2*x3+c1*c3*cp2*m2*x2*x3+c1*c2*cp1*cp2*m2*x2*x3+c2*c3*cp1*cp2*m2*x2*x3+c1*c2*c3*cp1*cp2*m2*x2*x3+c1*c3*cp3*m2*x2*x3+c2*cp1*cp3*m2*x2*x3+c1*c2*cp1*cp3*m2*x2*x3+c2*c3*cp1*cp3*m2*x2*x3+c1*c2*c3*cp1*cp3*m2*x2*x3+c1*cp2*cp3*m2*x2*x3+c3*cp1*cp2*cp3*m2*x2*x3+cp1*cp2*m1*m2*x2*x3+c2*cp1*cp2*m1*m2*x2*x3+c3*cp1*cp2*m1*m2*x2*x3+c2*c3*cp1*cp2*m1*m2*x2*x3+c1*cp1*cp3*m1*m2*x2*x3+c2*cp1*cp3*m1*m2*x2*x3+c3*cp1*cp3*m1*m2*x2*x3+c1*c3*cp1*cp3*m1*m2*x2*x3+c2*c3*cp1*cp3*m1*m2*x2*x3+cp2*cp3*m1*m2*x2*x3+c3*cp2*cp3*m1*m2*x2*x3+c1*cp1*cp2*cp3*m1*m2*x2*x3+c3*cp1*cp2*cp3*m1*m2*x2*x3+c1*c3*cp1*cp2*cp3*m1*m2*x2*x3+c1*m3*x2*x3+c1*c3*m3*x2*x3+cp1*m3*x2*x3+c1*cp1*m3*x2*x3+c2*cp1*m3*x2*x3+c3*cp1*m3*x2*x3+c1*c3*cp1*m3*x2*x3+c2*c3*cp1*m3*x2*x3+c1*cp2*m3*x2*x3+c1*c3*cp2*m3*x2*x3+cp1*cp2*m3*x2*x3+c1*cp1*cp2*m3*x2*x3+c2*cp1*cp2*m3*x2*x3+c1*c2*cp1*cp2*m3*x2*x3+c3*cp1*cp2*m3*x2*x3+c2*c3*cp1*cp2*m3*x2*x3+c1*c2*c3*cp1*cp2*m3*x2*x3+c1*cp3*m3*x2*x3+c1*c3*cp3*m3*x2*x3+cp1*cp3*m3*x2*x3+c2*cp1*cp3*m3*x2*x3+c1*c2*cp1*cp3*m3*x2*x3+c3*cp1*cp3*m3*x2*x3+c2*c3*cp1*cp3*m3*x2*x3+c1*c2*c3*cp1*cp3*m3*x2*x3+c1*cp2*cp3*m3*x2*x3+cp1*cp2*cp3*m3*x2*x3+c2*cp1*cp2*cp3*m3*x2*x3+c3*cp1*cp2*cp3*m3*x2*x3+m1*m3*x2*x3+c1*m1*m3*x2*x3+c2*m1*m3*x2*x3+c3*m1*m3*x2*x3+cp1*m1*m3*x2*x3+c1*cp1*m1*m3*x2*x3+c2*cp1*m1*m3*x2*x3+c3*cp1*m1*m3*x2*x3+cp2*m1*m3*x2*x3+c1*cp2*m1*m3*x2*x3+c2*cp2*m1*m3*x2*x3+c3*cp2*m1*m3*x2*x3+cp1*cp2*m1*m3*x2*x3+c1*c2*cp1*cp2*m1*m3*x2*x3+c1*c3*cp1*cp2*m1*m3*x2*x3+c2*c3*cp1*cp2*m1*m3*x2*x3+c1*cp3*m1*m3*x2*x3+c2*cp3*m1*m3*x2*x3+c3*cp3*m1*m3*x2*x3+cp1*cp3*m1*m3*x2*x3+c1*cp1*cp3*m1*m3*x2*x3+c2*c3*cp1*cp3*m1*m3*x2*x3+c1*cp2*cp3*m1*m3*x2*x3+c2*cp2*cp3*m1*m3*x2*x3+c3*cp2*cp3*m1*m3*x2*x3+cp1*cp2*cp3*m1*m3*x2*x3+c2*cp1*cp2*cp3*m1*m3*x2*x3+c1*c2*cp1*cp2*cp3*m1*m3*x2*x3+c3*cp1*cp2*cp3*m1*m3*x2*x3+c1*c3*cp1*cp2*cp3*m1*m3*x2*x3+c1*m2*m3*x2*x3+cp1*m2*m3*x2*x3+c1*cp1*m2*m3*x2*x3+c2*cp1*m2*m3*x2*x3+c3*cp1*m2*m3*x2*x3+c1*cp2*m2*m3*x2*x3+cp1*cp2*m2*m3*x2*x3+c2*cp1*cp2*m2*m3*x2*x3+c1*c2*cp1*cp2*m2*m3*x2*x3+c3*cp1*cp2*m2*m3*x2*x3+c1*c3*cp1*cp2*m2*m3*x2*x3+c1*cp3*m2*m3*x2*x3+cp1*cp3*m2*m3*x2*x3+c2*cp1*cp3*m2*m3*x2*x3+c3*cp1*cp3*m2*m3*x2*x3+c1*c3*cp1*cp3*m2*m3*x2*x3+c1*cp2*cp3*m2*m3*x2*x3+cp1*cp2*cp3*m2*m3*x2*x3+c1*cp1*cp2*cp3*m2*m3*x2*x3+c2*cp1*cp2*cp3*m2*m3*x2*x3+c1*c2*cp1*cp2*cp3*m2*m3*x2*x3+cp1*cp2*m1*m2*m3*x2*x3+c2*cp1*cp2*m1*m2*m3*x2*x3+c3*cp1*cp2*m1*m2*m3*x2*x3+cp1*cp3*m1*m2*m3*x2*x3+c3*cp1*cp3*m1*m2*m3*x2*x3+c2*cp1*cp2*cp3*m1*m2*m3*x2*x3+(1/2)*c2*c3*cp1*x3*(1+x3)+(1/2)*cp1*cp2*x3*(1+x3)+(1/2)*c1*cp1*cp2*x3*(1+x3)+(1/2)*c3*cp1*cp2*x3*(1+x3)+(1/2)*c1*c3*cp1*cp2*x3*(1+x3)+(1/2)*c1*c2*cp3*x3*(1+x3)+(1/2)*c2*c3*cp1*cp3*x3*(1+x3)+(1/2)*c1*c3*cp2*cp3*x3*(1+x3)+(1/2)*c1*cp1*cp2*cp3*x3*(1+x3)+(1/2)*cp1*cp2*m1*x3*(1+x3)+(1/2)*c1*cp1*cp2*m1*x3*(1+x3)+(1/2)*c2*cp1*cp2*m1*x3*(1+x3)+(1/2)*c3*cp1*cp2*m1*x3*(1+x3)+(1/2)*c1*c3*cp1*cp2*m1*x3*(1+x3)+(1/2)*c2*c3*cp1*cp2*m1*x3*(1+x3)+(1/2)*c2*cp1*cp3*m1*x3*(1+x3)+(1/2)*cp2*cp3*m1*x3*(1+x3)+(1/2)*c1*cp2*cp3*m1*x3*(1+x3)+(1/2)*c2*cp2*cp3*m1*x3*(1+x3)+(1/2)*c3*cp2*cp3*m1*x3*(1+x3)+(1/2)*c1*c3*cp2*cp3*m1*x3*(1+x3)+(1/2)*c2*c3*cp2*cp3*m1*x3*(1+x3)+(1/2)*c2*c3*cp1*m2*x3*(1+x3)+(1/2)*cp1*cp2*m2*x3*(1+x3)+(1/2)*c1*cp1*cp2*m2*x3*(1+x3)+(1/2)*c1*c3*cp1*cp2*m2*x3*(1+x3)+(1/2)*c2*c3*cp1*cp2*m2*x3*(1+x3)+(1/2)*c1*cp1*cp3*m2*x3*(1+x3)+(1/2)*c1*c3*cp2*cp3*m2*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m2*x3*(1+x3)+(1/2)*c3*cp1*cp2*cp3*m2*x3*(1+x3)+(1/2)*cp1*cp2*m1*m2*x3*(1+x3)+(1/2)*c3*cp1*cp2*m1*m2*x3*(1+x3)+(1/2)*cp1*cp3*m1*m2*x3*(1+x3)+(1/2)*cp2*cp3*m1*m2*x3*(1+x3)+(1/2)*c3*cp2*cp3*m1*m2*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m1*m2*x3*(1+x3)+(1/2)*c2*c3*cp1*m3*x3*(1+x3)+(1/2)*cp1*cp2*m3*x3*(1+x3)+(1/2)*c1*cp1*cp2*m3*x3*(1+x3)+(1/2)*c2*cp1*cp2*m3*x3*(1+x3)+(1/2)*c3*cp1*cp2*m3*x3*(1+x3)+(1/2)*c1*c3*cp1*cp2*m3*x3*(1+x3)+(1/2)*c2*c3*cp1*cp2*m3*x3*(1+x3)+(1/2)*c2*cp1*cp3*m3*x3*(1+x3)+(1/2)*c1*cp2*cp3*m3*x3*(1+x3)+(1/2)*c1*c3*cp2*cp3*m3*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m3*x3*(1+x3)+(1/2)*c2*cp1*cp2*cp3*m3*x3*(1+x3)+(1/2)*c3*cp1*cp2*cp3*m3*x3*(1+x3)+(1/2)*cp1*cp2*m1*m3*x3*(1+x3)+(1/2)*c1*cp1*cp2*m1*m3*x3*(1+x3)+(1/2)*c2*cp1*cp2*m1*m3*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m1*m3*x3*(1+x3)+(1/2)*c1*cp1*cp2*cp3*m1*m3*x3*(1+x3)+(1/2)*c2*cp1*cp2*cp3*m1*m3*x3*(1+x3)+(1/2)*cp1*m2*m3*x3*(1+x3)+(1/2)*c2*cp1*m2*m3*x3*(1+x3)+(1/2)*c3*cp1*m2*m3*x3*(1+x3)+(1/2)*cp1*cp2*m2*m3*x3*(1+x3)+(1/2)*c1*cp1*cp2*m2*m3*x3*(1+x3)+(1/2)*c2*cp1*cp2*m2*m3*x3*(1+x3)+(1/2)*c3*cp1*cp2*m2*m3*x3*(1+x3)+(1/2)*cp1*cp3*m2*m3*x3*(1+x3)+(1/2)*c2*cp1*cp3*m2*m3*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m2*m3*x3*(1+x3)+(1/2)*c1*cp1*cp2*cp3*m2*m3*x3*(1+x3)+(1/2)*c2*cp1*cp2*cp3*m2*m3*x3*(1+x3)+(1/2)*cp1*cp2*m1*m2*m3*x3*(1+x3)+(1/2)*cp1*cp2*cp3*m1*m2*m3*x3*(1+x3)+c2*c3*cp1*y1+c3*cp2*y1+c1*c3*cp2*y1+c1*c2*c3*cp2*y1+c1*c3*cp1*cp2*y1+c2*c3*cp1*cp2*y1+c1*c2*c3*cp1*cp2*y1+c2*cp3*y1+c2*c3*cp3*y1+c1*c2*c3*cp3*y1+c2*cp1*cp3*y1+c1*c2*cp1*cp3*y1+c2*c3*cp1*cp3*y1+cp2*cp3*y1+c1*cp2*cp3*y1+c2*cp2*cp3*y1+c3*cp2*cp3*y1+c1*c3*cp2*cp3*y1+c3*cp1*cp2*cp3*y1+c1*c3*cp1*cp2*cp3*y1+c2*c3*cp1*cp2*cp3*y1+c1*c2*c3*cp1*cp2*cp3*y1+c2*c3*m1*y1+c2*c3*cp2*m1*y1+c2*c3*cp1*cp2*m1*y1+c2*cp3*m1*y1+c2*c3*cp3*m1*y1+c1*c2*c3*cp3*m1*y1+c2*cp1*cp3*m1*y1+cp2*cp3*m1*y1+c1*c2*cp2*cp3*m1*y1+c3*cp2*cp3*m1*y1+c2*cp1*cp2*cp3*m1*y1+c1*c2*c3*m2*y1+c2*c3*cp1*m2*y1+c1*c3*cp2*m2*y1+c2*c3*cp2*m2*y1+c1*c2*c3*cp2*m2*y1+c3*cp1*cp2*m2*y1+c2*c3*cp1*cp2*m2*y1+c1*c2*c3*cp1*cp2*m2*y1+cp3*m2*y1+c3*cp3*m2*y1+c1*c3*cp3*m2*y1+c2*c3*cp3*m2*y1+c1*c2*c3*cp3*m2*y1+c1*cp1*cp3*m2*y1+c2*cp1*cp3*m2*y1+c3*cp1*cp3*m2*y1+c1*c3*cp1*cp3*m2*y1+c2*c3*cp1*cp3*m2*y1+c1*c2*c3*cp1*cp3*m2*y1+c1*c2*cp2*cp3*m2*y1+c1*c3*cp2*cp3*m2*y1+c2*c3*cp2*cp3*m2*y1+c1*c2*cp1*cp2*cp3*m2*y1+c3*cp1*cp2*cp3*m2*y1+c2*c3*cp1*cp2*cp3*m2*y1+c3*m1*m2*y1+c1*c3*cp2*m1*m2*y1+c3*cp1*cp2*m1*m2*y1+cp3*m1*m2*y1+c1*cp3*m1*m2*y1+c2*cp3*m1*m2*y1+c1*c2*cp3*m1*m2*y1+c3*cp3*m1*m2*y1+cp1*cp3*m1*m2*y1+c1*c2*cp1*cp3*m1*m2*y1+c3*cp1*cp3*m1*m2*y1+c2*cp2*cp3*m1*m2*y1+c3*cp2*cp3*m1*m2*y1+cp1*cp2*cp3*m1*m2*y1+c1*cp1*cp2*cp3*m1*m2*y1+c1*c2*m3*y1+c1*c2*c3*m3*y1+c2*cp1*m3*y1+c1*c2*cp1*m3*y1+c1*c2*c3*cp1*m3*y1+cp2*m3*y1+c1*cp2*m3*y1+c1*c2*cp2*m3*y1+c3*cp2*m3*y1+c1*c3*cp2*m3*y1+c2*c3*cp2*m3*y1+c1*c2*c3*cp2*m3*y1+c1*cp1*cp2*m3*y1+c1*c3*cp1*cp2*m3*y1+c2*c3*cp1*cp2*m3*y1+c2*cp3*m3*y1+c1*c2*cp3*m3*y1+c1*c2*c3*cp3*m3*y1+c1*cp2*cp3*m3*y1+c2*cp2*cp3*m3*y1+c1*c3*cp2*cp3*m3*y1+c2*c3*cp2*cp3*m3*y1+c2*cp1*cp2*cp3*m3*y1+c1*c2*cp1*cp2*cp3*m3*y1+c2*m1*m3*y1+c2*cp1*m1*m3*y1+c1*cp2*m1*m3*y1+c2*cp2*m1*m3*y1+c1*c2*cp2*m1*m3*y1+c1*c3*cp2*m1*m3*y1+c1*c2*cp1*cp2*m1*m3*y1+c3*cp1*cp2*m1*m3*y1+c2*cp3*m1*m3*y1+c2*c3*cp3*m1*m3*y1+c1*c2*cp2*cp3*m1*m3*y1+c3*cp2*cp3*m1*m3*y1+c2*cp1*cp2*cp3*m1*m3*y1+m2*m3*y1+c1*c2*m2*m3*y1+c2*c3*m2*m3*y1+cp1*m2*m3*y1+c1*cp1*m2*m3*y1+c2*cp1*m2*m3*y1+c1*c2*cp1*m2*m3*y1+c1*c3*cp1*m2*m3*y1+cp2*m2*m3*y1+c1*cp2*m2*m3*y1+c2*cp2*m2*m3*y1+c3*cp2*m2*m3*y1+c1*c3*cp2*m2*m3*y1+c1*c2*c3*cp2*m2*m3*y1+c3*cp1*cp2*m2*m3*y1+c1*c3*cp1*cp2*m2*m3*y1+c2*c3*cp1*cp2*m2*m3*y1+c1*c2*c3*cp1*cp2*m2*m3*y1+cp3*m2*m3*y1+c1*cp3*m2*m3*y1+c3*cp3*m2*m3*y1+c1*c3*cp3*m2*m3*y1+c2*c3*cp3*m2*m3*y1+cp1*cp3*m2*m3*y1+c1*cp1*cp3*m2*m3*y1+c1*c2*cp1*cp3*m2*m3*y1+cp2*cp3*m2*m3*y1+c1*c2*cp2*cp3*m2*m3*y1+c1*c3*cp2*cp3*m2*m3*y1+c1*c2*c3*cp2*cp3*m2*m3*y1+c1*cp1*cp2*cp3*m2*m3*y1+c3*cp1*cp2*cp3*m2*m3*y1+c1*c3*cp1*cp2*cp3*m2*m3*y1+c2*c3*cp1*cp2*cp3*m2*m3*y1+c1*c2*c3*cp1*cp2*cp3*m2*m3*y1+c3*m1*m2*m3*y1+c1*c3*m1*m2*m3*y1+c2*c3*m1*m2*m3*y1+c2*cp1*m1*m2*m3*y1+c3*cp1*m1*m2*m3*y1+c1*c3*cp1*m1*m2*m3*y1+c2*c3*cp1*m1*m2*m3*y1+c1*c3*cp2*m1*m2*m3*y1+cp1*cp2*m1*m2*m3*y1+c2*c3*cp1*cp2*m1*m2*m3*y1+c3*cp3*m1*m2*m3*y1+c1*c3*cp3*m1*m2*m3*y1+c2*c3*cp3*m1*m2*m3*y1+cp1*cp3*m1*m2*m3*y1+c2*cp1*cp3*m1*m2*m3*y1+c1*cp2*cp3*m1*m2*m3*y1+c2*cp2*cp3*m1*m2*m3*y1+c3*cp2*cp3*m1*m2*m3*y1+c2*c3*cp2*cp3*m1*m2*m3*y1+c3*cp1*cp2*cp3*m1*m2*m3*y1+c2*c3*cp1*cp2*cp3*m1*m2*m3*y1+c2*c3*x1*y1+c2*c3*cp1*x1*y1+c2*c3*cp2*x1*y1+c3*cp1*cp2*x1*y1+c1*c2*cp3*x1*y1+c2*c3*cp3*x1*y1+c2*cp1*cp3*x1*y1+cp2*cp3*x1*y1+c3*cp2*cp3*x1*y1+c2*cp1*cp3*m1*x1*y1+c3*cp1*cp2*m2*x1*y1+cp1*cp3*m2*x1*y1+c1*cp1*cp3*m2*x1*y1+c2*cp1*cp3*m2*x1*y1+c1*cp2*cp3*m2*x1*y1+c3*cp2*cp3*m2*x1*y1+cp1*cp3*m1*m2*x1*y1+cp1*cp2*cp3*m1*m2*x1*y1+cp1*cp2*m3*x1*y1+c2*cp1*cp2*m3*x1*y1+c3*cp1*cp2*m3*x1*y1+c2*cp1*cp3*m3*x1*y1+cp2*cp3*m3*x1*y1+c3*cp2*cp3*m3*x1*y1+m2*m3*x1*y1+cp1*cp3*m2*m3*x1*y1+cp1*cp2*cp3*m2*m3*x1*y1+c2*c3*x2*y1+c3*cp1*x2*y1+c1*c3*cp1*x2*y1+c2*c3*cp1*x2*y1+c1*c3*cp2*x2*y1+c2*c3*cp2*x2*y1+c3*cp1*cp2*x2*y1+c1*c3*cp1*cp2*x2*y1+c2*c3*cp1*cp2*x2*y1+c1*c3*cp3*x2*y1+c2*c3*cp3*x2*y1+cp1*cp3*x2*y1+c1*cp1*cp3*x2*y1+c1*c2*cp1*cp3*x2*y1+cp2*cp3*x2*y1+c1*cp2*cp3*x2*y1+c1*c2*cp2*cp3*x2*y1+c3*cp2*cp3*x2*y1+c1*c3*m1*x2*y1+c1*c3*cp1*m1*x2*y1+c3*cp2*m1*x2*y1+c1*c3*cp2*m1*x2*y1+c3*cp1*cp2*m1*x2*y1+c2*cp3*m1*x2*y1+c1*c2*cp3*m1*x2*y1+c3*cp3*m1*x2*y1+c1*c3*cp3*m1*x2*y1+c2*cp1*cp3*m1*x2*y1+c3*cp1*cp3*m1*x2*y1+cp2*cp3*m1*x2*y1+c2*cp2*cp3*m1*x2*y1+cp1*cp2*cp3*m1*x2*y1+c2*cp1*cp2*cp3*m1*x2*y1+c1*c3*m2*x2*y1+c3*cp1*m2*x2*y1+c1*c3*cp1*m2*x2*y1+c1*c3*cp2*m2*x2*y1+c3*cp1*cp2*m2*x2*y1+c1*cp3*m2*x2*y1+c1*c2*cp3*m2*x2*y1+c1*c3*cp3*m2*x2*y1+cp1*cp3*m2*x2*y1+c1*cp1*cp3*m2*x2*y1+c3*cp1*cp3*m2*x2*y1+c1*cp2*cp3*m2*x2*y1+c3*cp2*cp3*m2*x2*y1+cp1*cp2*cp3*m2*x2*y1+c1*cp1*cp2*cp3*m2*x2*y1+c2*cp1*cp2*cp3*m2*x2*y1+c3*m1*m2*x2*y1+c3*cp1*m1*m2*x2*y1+c3*cp2*m1*m2*x2*y1+c1*cp3*m1*m2*x2*y1+c2*cp3*m1*m2*x2*y1+c3*cp3*m1*m2*x2*y1+cp1*cp3*m1*m2*x2*y1+c1*cp2*cp3*m1*m2*x2*y1+cp1*cp2*cp3*m1*m2*x2*y1+c1*c2*m3*x2*y1+c1*c3*m3*x2*y1+cp1*m3*x2*y1+c1*cp1*m3*x2*y1+c2*cp1*m3*x2*y1+c1*c2*cp1*m3*x2*y1+c3*cp1*m3*x2*y1+c1*c3*cp1*m3*x2*y1+c1*c2*cp2*m3*x2*y1+c1*c3*cp2*m3*x2*y1+cp1*cp2*m3*x2*y1+c1*cp1*cp2*m3*x2*y1+c2*cp1*cp2*m3*x2*y1+c3*cp1*cp2*m3*x2*y1+c1*c2*cp3*m3*x2*y1+c1*c3*cp3*m3*x2*y1+cp1*cp3*m3*x2*y1+c1*cp1*cp3*m3*x2*y1+c2*cp1*cp3*m3*x2*y1+cp2*cp3*m3*x2*y1+c3*cp2*cp3*m3*x2*y1+c1*cp1*cp2*cp3*m3*x2*y1+c2*cp1*cp2*cp3*m3*x2*y1+c1*m1*m3*x2*y1+c2*m1*m3*x2*y1+c3*m1*m3*x2*y1+c1*cp1*m1*m3*x2*y1+c2*cp1*m1*m3*x2*y1+c3*cp1*m1*m3*x2*y1+cp2*m1*m3*x2*y1+c1*cp2*m1*m3*x2*y1+c2*cp2*m1*m3*x2*y1+c3*cp2*m1*m3*x2*y1+cp1*cp2*m1*m3*x2*y1+c1*cp1*cp2*m1*m3*x2*y1+cp3*m1*m3*x2*y1+c1*cp3*m1*m3*x2*y1+c2*cp3*m1*m3*x2*y1+c3*cp3*m1*m3*x2*y1+cp1*cp3*m1*m3*x2*y1+c1*cp1*cp3*m1*m3*x2*y1+m2*m3*x2*y1+cp1*m2*m3*x2*y1+c1*cp1*cp3*m2*m3*x2*y1+c1*cp2*cp3*m2*m3*x2*y1+cp1*cp3*m1*m2*m3*x2*y1+cp2*cp3*m1*m2*m3*x2*y1+c2*x3*y1+c1*c2*x3*y1+c2*c3*cp1*x3*y1+c2*cp2*x3*y1+c1*c2*c3*cp2*x3*y1+c2*cp1*cp2*x3*y1+c1*c2*cp1*cp2*x3*y1+c1*c2*c3*cp1*cp2*x3*y1+c2*cp3*x3*y1+c1*c2*c3*cp3*x3*y1+c2*cp1*cp3*x3*y1+c1*c2*cp1*cp3*x3*y1+c1*c2*c3*cp1*cp3*x3*y1+c2*cp2*cp3*x3*y1+c3*cp2*cp3*x3*y1+c2*cp1*cp2*cp3*x3*y1+c1*c2*cp1*cp2*cp3*x3*y1+c3*cp1*cp2*cp3*x3*y1+c1*c3*cp1*cp2*cp3*x3*y1+c2*m1*x3*y1+c2*cp1*m1*x3*y1+c2*c3*cp2*m1*x3*y1+c2*c3*cp1*cp2*m1*x3*y1+c2*c3*cp3*m1*x3*y1+c2*c3*cp1*cp3*m1*x3*y1+m2*x3*y1+c1*m2*x3*y1+cp1*m2*x3*y1+c2*cp1*m2*x3*y1+c3*cp1*m2*x3*y1+cp2*m2*x3*y1+c1*cp2*m2*x3*y1+c1*c2*cp2*m2*x3*y1+c1*c2*c3*cp2*m2*x3*y1+cp1*cp2*m2*x3*y1+c1*c2*cp1*cp2*m2*x3*y1+c3*cp1*cp2*m2*x3*y1+c2*c3*cp1*cp2*m2*x3*y1+c1*c2*c3*cp1*cp2*m2*x3*y1+cp3*m2*x3*y1+c1*cp3*m2*x3*y1+c1*c2*cp3*m2*x3*y1+c1*c2*c3*cp3*m2*x3*y1+cp1*cp3*m2*x3*y1+c1*c2*cp1*cp3*m2*x3*y1+c3*cp1*cp3*m2*x3*y1+c2*c3*cp1*cp3*m2*x3*y1+c1*c2*c3*cp1*cp3*m2*x3*y1+cp2*cp3*m2*x3*y1+c1*cp1*cp2*cp3*m2*x3*y1+c2*cp1*cp2*cp3*m2*x3*y1+m1*m2*x3*y1+cp1*m1*m2*x3*y1+cp2*m1*m2*x3*y1+c2*cp2*m1*m2*x3*y1+c2*c3*cp2*m1*m2*x3*y1+cp1*cp2*m1*m2*x3*y1+c2*cp1*cp2*m1*m2*x3*y1+c2*c3*cp1*cp2*m1*m2*x3*y1+cp3*m1*m2*x3*y1+c2*cp3*m1*m2*x3*y1+c2*c3*cp3*m1*m2*x3*y1+cp1*cp3*m1*m2*x3*y1+c2*cp1*cp3*m1*m2*x3*y1+c2*c3*cp1*cp3*m1*m2*x3*y1+c1*c2*cp2*m3*x3*y1+c1*c2*c3*cp2*m3*x3*y1+c2*cp1*cp2*m3*x3*y1+c1*c2*cp1*cp2*m3*x3*y1+c2*c3*cp1*cp2*m3*x3*y1+c1*c2*c3*cp1*cp2*m3*x3*y1+c1*c2*cp3*m3*x3*y1+c1*c2*c3*cp3*m3*x3*y1+c2*cp1*cp3*m3*x3*y1+c1*c2*cp1*cp3*m3*x3*y1+c2*c3*cp1*cp3*m3*x3*y1+c1*c2*c3*cp1*cp3*m3*x3*y1+c2*cp2*m1*m3*x3*y1+c2*c3*cp2*m1*m3*x3*y1+c2*cp1*cp2*m1*m3*x3*y1+c2*c3*cp1*cp2*m1*m3*x3*y1+c2*cp3*m1*m3*x3*y1+c2*c3*cp3*m1*m3*x3*y1+c2*cp1*cp3*m1*m3*x3*y1+c2*c3*cp1*cp3*m1*m3*x3*y1+c1*c2*cp2*m2*m3*x3*y1+c1*c3*cp2*m2*m3*x3*y1+c2*cp1*cp2*m2*m3*x3*y1+c1*c2*cp1*cp2*m2*m3*x3*y1+c3*cp1*cp2*m2*m3*x3*y1+c1*c3*cp1*cp2*m2*m3*x3*y1+c1*cp3*m2*m3*x3*y1+c1*c3*cp3*m2*m3*x3*y1+cp1*cp3*m2*m3*x3*y1+c1*cp1*cp3*m2*m3*x3*y1+c3*cp1*cp3*m2*m3*x3*y1+c1*c3*cp1*cp3*m2*m3*x3*y1+c1*cp2*cp3*m2*m3*x3*y1+c1*c2*cp2*cp3*m2*m3*x3*y1+cp1*cp2*cp3*m2*m3*x3*y1+c1*cp1*cp2*cp3*m2*m3*x3*y1+c2*cp1*cp2*cp3*m2*m3*x3*y1+c1*c2*cp1*cp2*cp3*m2*m3*x3*y1+c2*cp2*m1*m2*m3*x3*y1+c3*cp2*m1*m2*m3*x3*y1+c2*cp1*cp2*m1*m2*m3*x3*y1+c3*cp1*cp2*m1*m2*m3*x3*y1+cp3*m1*m2*m3*x3*y1+c3*cp3*m1*m2*m3*x3*y1+cp1*cp3*m1*m2*m3*x3*y1+c3*cp1*cp3*m1*m2*m3*x3*y1+cp2*cp3*m1*m2*m3*x3*y1+c2*cp2*cp3*m1*m2*m3*x3*y1+cp1*cp2*cp3*m1*m2*m3*x3*y1+c2*cp1*cp2*cp3*m1*m2*m3*x3*y1+(1/2)*c2*c3*y1*(1+y1)+(1/2)*c2*c3*cp1*y1*(1+y1)+(1/2)*c2*c3*cp2*y1*(1+y1)+(1/2)*c3*cp1*cp2*y1*(1+y1)+(1/2)*c1*c2*cp3*y1*(1+y1)+(1/2)*c2*c3*cp3*y1*(1+y1)+(1/2)*cp2*cp3*y1*(1+y1)+(1/2)*c1*cp2*cp3*y1*(1+y1)+(1/2)*c2*cp2*cp3*y1*(1+y1)+(1/2)*c3*cp2*cp3*y1*(1+y1)+(1/2)*c2*cp1*cp3*m1*y1*(1+y1)+(1/2)*cp2*cp3*m1*y1*(1+y1)+(1/2)*cp1*cp2*cp3*m1*y1*(1+y1)+(1/2)*c3*cp1*cp2*m2*y1*(1+y1)+(1/2)*cp1*cp3*m2*y1*(1+y1)+(1/2)*c1*cp1*cp3*m2*y1*(1+y1)+(1/2)*c2*cp1*cp3*m2*y1*(1+y1)+(1/2)*c1*cp2*cp3*m2*y1*(1+y1)+(1/2)*c3*cp2*cp3*m2*y1*(1+y1)+(1/2)*cp1*cp3*m1*m2*y1*(1+y1)+(1/2)*cp1*cp2*cp3*m1*m2*y1*(1+y1)+(1/2)*cp1*cp2*m3*y1*(1+y1)+(1/2)*c2*cp1*cp2*m3*y1*(1+y1)+(1/2)*c3*cp1*cp2*m3*y1*(1+y1)+(1/2)*c2*cp1*cp3*m3*y1*(1+y1)+(1/2)*cp2*cp3*m3*y1*(1+y1)+(1/2)*c3*cp2*cp3*m3*y1*(1+y1)+(1/2)*m2*m3*y1*(1+y1)+(1/2)*cp1*cp3*m2*m3*y1*(1+y1)+(1/2)*cp1*cp2*cp3*m2*m3*y1*(1+y1)+c1*c3*y2+c3*cp1*y2+c2*c3*cp1*y2+c1*c2*c3*cp2*y2+c3*cp1*cp2*y2+c1*c3*cp1*cp2*y2+c2*c3*cp1*cp2*y2+c1*c2*c3*cp1*cp2*y2+c1*c2*cp3*y2+c1*c2*c3*cp3*y2+c2*cp1*cp3*y2+c2*c3*cp1*cp3*y2+c1*c2*cp2*cp3*y2+c1*c3*cp2*cp3*y2+c1*c3*cp1*cp2*cp3*y2+c1*c2*c3*cp1*cp2*cp3*y2+c2*c3*m1*y2+c1*c2*c3*m1*y2+c3*cp1*m1*y2+c1*c2*c3*cp1*m1*y2+c3*cp2*m1*y2+c3*cp1*cp2*m1*y2+c1*c3*cp1*cp2*m1*y2+c2*c3*cp1*cp2*m1*y2+cp3*m1*y2+c2*cp3*m1*y2+c3*cp3*m1*y2+c2*c3*cp3*m1*y2+cp1*cp3*m1*y2+c1*cp1*cp3*m1*y2+c2*cp1*cp3*m1*y2+c2*c3*cp1*cp3*m1*y2+c3*cp2*cp3*m1*y2+c1*c3*cp2*cp3*m1*y2+c2*c3*cp2*cp3*m1*y2+cp1*cp2*cp3*m1*y2+c2*cp1*cp2*cp3*m1*y2+c1*c2*cp1*cp2*cp3*m1*y2+c1*c3*cp1*cp2*cp3*m1*y2+c1*c3*m2*y2+c1*c2*c3*m2*y2+c3*cp1*m2*y2+c1*c3*cp1*m2*y2+c2*c3*cp1*m2*y2+c1*c2*c3*cp1*m2*y2+c1*c3*cp2*m2*y2+c3*cp1*cp2*m2*y2+c1*c3*cp1*cp2*m2*y2+c1*c2*c3*cp1*cp2*m2*y2+c1*cp3*m2*y2+c1*c2*cp3*m2*y2+c1*c2*c3*cp1*cp3*m2*y2+c1*cp2*cp3*m2*y2+c1*c3*cp2*cp3*m2*y2+c2*cp1*cp2*cp3*m2*y2+c1*c2*cp1*cp2*cp3*m2*y2+c3*cp1*cp2*cp3*m2*y2+c1*c3*cp1*cp2*cp3*m2*y2+c3*m1*m2*y2+c1*c3*m1*m2*y2+c1*c3*cp1*m1*m2*y2+c2*c3*cp1*m1*m2*y2+c1*c3*cp2*m1*m2*y2+c2*c3*cp2*m1*m2*y2+c3*cp1*cp2*m1*m2*y2+c1*c3*cp1*cp2*m1*m2*y2+c1*c2*c3*cp1*cp2*m1*m2*y2+cp3*m1*m2*y2+c1*cp3*m1*m2*y2+c1*c2*cp3*m1*m2*y2+c3*cp3*m1*m2*y2+c2*c3*cp3*m1*m2*y2+cp1*cp3*m1*m2*y2+c1*cp1*cp3*m1*m2*y2+c2*cp1*cp3*m1*m2*y2+c1*c3*cp1*cp3*m1*m2*y2+c1*c2*c3*cp1*cp3*m1*m2*y2+c1*cp2*cp3*m1*m2*y2+c2*cp2*cp3*m1*m2*y2+cp1*cp2*cp3*m1*m2*y2+c1*cp1*cp2*cp3*m1*m2*y2+c1*c3*cp1*cp2*cp3*m1*m2*y2+c1*c3*m3*y2+cp1*m3*y2+c1*cp1*m3*y2+c2*cp1*m3*y2+c1*c3*cp1*m3*y2+c2*c3*cp1*m3*y2+c1*cp2*m3*y2+c1*c2*cp2*m3*y2+c1*c3*cp2*m3*y2+c1*cp1*cp2*m3*y2+c1*c3*cp1*cp2*m3*y2+c1*c3*cp3*m3*y2+c1*c2*cp1*cp3*m3*y2+c1*cp2*cp3*m3*y2+c1*c2*cp2*cp3*m3*y2+c1*c3*cp2*cp3*m3*y2+cp1*cp2*cp3*m3*y2+c1*c2*cp1*cp2*cp3*m3*y2+c1*c2*m1*m3*y2+c3*m1*m3*y2+c1*c3*m1*m3*y2+c1*cp1*m1*m3*y2+c2*cp1*m1*m3*y2+c1*c2*cp1*m1*m3*y2+c1*c3*cp1*m1*m3*y2+cp2*m1*m3*y2+c2*cp2*m1*m3*y2+c1*c2*cp2*m1*m3*y2+c3*cp2*m1*m3*y2+c1*c3*cp2*m1*m3*y2+c1*cp1*cp2*m1*m3*y2+c2*cp1*cp2*m1*m3*y2+c1*c3*cp1*cp2*m1*m3*y2+c2*c3*cp1*cp2*m1*m3*y2+c1*c2*c3*cp1*cp2*m1*m3*y2+cp3*m1*m3*y2+c1*cp3*m1*m3*y2+c2*cp3*m1*m3*y2+c1*c2*cp3*m1*m3*y2+c1*c3*cp3*m1*m3*y2+c2*c3*cp3*m1*m3*y2+c2*cp1*cp3*m1*m3*y2+c3*cp1*cp3*m1*m3*y2+c2*c3*cp1*cp3*m1*m3*y2+c3*cp2*cp3*m1*m3*y2+c1*c3*cp2*cp3*m1*m3*y2+c2*c3*cp2*cp3*m1*m3*y2+c1*cp1*cp2*cp3*m1*m3*y2+c1*c2*c3*cp1*cp2*cp3*m1*m3*y2+c1*c2*m2*m3*y2+c1*c3*m2*m3*y2+cp1*m2*m3*y2+c1*c2*cp1*m2*m3*y2+c1*c3*cp1*m2*m3*y2+c2*c3*cp1*m2*m3*y2+cp1*cp2*m2*m3*y2+c1*cp1*cp2*m2*m3*y2+c1*c2*c3*cp1*cp2*m2*m3*y2+cp1*cp3*m2*m3*y2+c2*cp1*cp3*m2*m3*y2+c3*cp1*cp3*m2*m3*y2+c1*c3*cp1*cp3*m2*m3*y2+c1*c3*cp2*cp3*m2*m3*y2+c1*cp1*cp2*cp3*m2*m3*y2+c1*c2*c3*cp1*cp2*cp3*m2*m3*y2+m1*m2*m3*y2+c1*m1*m2*m3*y2+c1*cp1*m1*m2*m3*y2+c2*cp1*m1*m2*m3*y2+c3*cp1*m1*m2*m3*y2+c2*cp1*cp2*m1*m2*m3*y2+c1*c2*cp1*cp2*m1*m2*m3*y2+c3*cp1*cp2*m1*m2*m3*y2+c1*c2*c3*cp1*cp2*m1*m2*m3*y2+c3*cp3*m1*m2*m3*y2+c2*cp1*cp3*m1*m2*m3*y2+c1*c2*cp1*cp3*m1*m2*m3*y2+c1*c3*cp1*cp3*m1*m2*m3*y2+c2*c3*cp1*cp3*m1*m2*m3*y2+c1*c2*c3*cp1*cp3*m1*m2*m3*y2+c1*cp2*cp3*m1*m2*m3*y2+c3*cp2*cp3*m1*m2*m3*y2+c1*cp1*cp2*cp3*m1*m2*m3*y2+c1*c3*cp1*cp2*cp3*m1*m2*m3*y2+c2*c3*cp1*cp2*cp3*m1*m2*m3*y2+c2*c3*x1*y2+c1*c3*cp1*x1*y2+c2*c3*cp1*x1*y2+c3*cp2*x1*y2+c2*c3*cp2*x1*y2+c3*cp1*cp2*x1*y2+c2*c3*cp1*cp2*x1*y2+c1*cp3*x1*y2+c2*cp3*x1*y2+c1*c2*cp3*x1*y2+c3*cp3*x1*y2+c2*c3*cp3*x1*y2+c1*cp1*cp3*x1*y2+c3*cp1*cp3*x1*y2+c1*c3*cp1*cp3*x1*y2+cp2*cp3*x1*y2+c1*c2*cp2*cp3*x1*y2+c3*cp2*cp3*x1*y2+c3*m1*x1*y2+c1*c3*m1*x1*y2+c3*cp1*m1*x1*y2+c1*c3*cp1*m1*x1*y2+c3*cp2*m1*x1*y2+c1*c3*cp2*m1*x1*y2+cp3*m1*x1*y2+c1*cp3*m1*x1*y2+c2*cp3*m1*x1*y2+c1*c2*cp3*m1*x1*y2+c3*cp3*m1*x1*y2+c1*c3*cp3*m1*x1*y2+cp1*cp3*m1*x1*y2+c2*cp2*cp3*m1*x1*y2+c2*cp1*cp2*cp3*m1*x1*y2+c3*m2*x1*y2+c1*c3*m2*x1*y2+c1*c3*cp1*m2*x1*y2+c3*cp2*m2*x1*y2+c3*cp1*cp2*m2*x1*y2+c1*c3*cp1*cp2*m2*x1*y2+cp3*m2*x1*y2+c2*cp3*m2*x1*y2+c3*cp3*m2*x1*y2+c1*cp1*cp3*m2*x1*y2+c1*c2*cp1*cp3*m2*x1*y2+c3*cp1*cp3*m2*x1*y2+c1*c3*cp1*cp3*m2*x1*y2+c1*cp2*cp3*m2*x1*y2+c3*cp2*cp3*m2*x1*y2+c1*cp1*cp2*cp3*m2*x1*y2+c2*cp1*cp2*cp3*m2*x1*y2+c3*m1*m2*x1*y2+c3*cp1*m1*m2*x1*y2+c3*cp1*cp2*m1*m2*x1*y2+c1*cp3*m1*m2*x1*y2+cp1*cp3*m1*m2*x1*y2+c2*cp1*cp3*m1*m2*x1*y2+c3*cp1*cp3*m1*m2*x1*y2+cp2*cp3*m1*m2*x1*y2+c1*cp2*cp3*m1*m2*x1*y2+cp1*cp2*cp3*m1*m2*x1*y2+c1*m3*x1*y2+c2*m3*x1*y2+c1*c2*m3*x1*y2+c3*m3*x1*y2+c1*c3*m3*x1*y2+c1*c2*cp1*m3*x1*y2+c1*c3*cp1*m3*x1*y2+c1*cp2*m3*x1*y2+c2*cp2*m3*x1*y2+c3*cp2*m3*x1*y2+cp1*cp2*m3*x1*y2+c1*cp1*cp2*m3*x1*y2+c2*cp1*cp2*m3*x1*y2+c1*c2*cp1*cp2*m3*x1*y2+c3*cp1*cp2*m3*x1*y2+c1*c3*cp1*cp2*m3*x1*y2+c1*cp3*m3*x1*y2+c2*cp3*m3*x1*y2+c3*cp3*m3*x1*y2+cp1*cp3*m3*x1*y2+c1*cp1*cp3*m3*x1*y2+c2*cp1*cp3*m3*x1*y2+c1*c2*cp1*cp3*m3*x1*y2+c1*c3*cp1*cp3*m3*x1*y2+cp2*cp3*m3*x1*y2+c3*cp2*cp3*m3*x1*y2+cp1*cp2*cp3*m3*x1*y2+c1*cp1*cp2*cp3*m3*x1*y2+c2*cp1*cp2*cp3*m3*x1*y2+c1*m1*m3*x1*y2+c2*m1*m3*x1*y2+c3*m1*m3*x1*y2+c1*cp1*m1*m3*x1*y2+c2*cp1*m1*m3*x1*y2+c3*cp1*m1*m3*x1*y2+cp2*m1*m3*x1*y2+c1*cp2*m1*m3*x1*y2+c1*cp1*cp2*m1*m3*x1*y2+c2*cp1*cp2*m1*m3*x1*y2+c3*cp1*cp2*m1*m3*x1*y2+cp3*m1*m3*x1*y2+c1*cp3*m1*m3*x1*y2+c1*cp1*cp3*m1*m3*x1*y2+c2*cp1*cp3*m1*m3*x1*y2+c3*cp1*cp3*m1*m3*x1*y2+m2*m3*x1*y2+cp1*m2*m3*x1*y2+c1*cp3*m2*m3*x1*y2+cp1*cp3*m2*m3*x1*y2+cp2*cp3*m2*m3*x1*y2+c1*cp1*cp2*cp3*m2*m3*x1*y2+cp3*m1*m2*m3*x1*y2+cp1*cp2*cp3*m1*m2*m3*x1*y2+c1*c2*cp3*x2*y2+c1*cp1*cp3*m1*x2*y2+c1*cp2*cp3*m2*x2*y2+cp1*cp3*m1*m2*x2*y2+cp1*cp2*m1*m3*x2*y2+cp1*cp3*m1*m3*x2*y2+c1*x3*y2+c1*c3*x3*y2+cp1*x3*y2+c1*cp1*x3*y2+c2*cp1*x3*y2+c3*cp1*x3*y2+c1*c3*cp1*x3*y2+c1*cp2*x3*y2+c1*c3*cp2*x3*y2+cp1*cp2*x3*y2+c1*cp1*cp2*x3*y2+c1*c2*cp1*cp2*x3*y2+c3*cp1*cp2*x3*y2+c1*c2*c3*cp1*cp2*x3*y2+c1*cp3*x3*y2+c1*c2*cp3*x3*y2+c2*cp1*cp3*x3*y2+c1*c2*cp1*cp3*x3*y2+c1*c2*c3*cp1*cp3*x3*y2+c1*cp2*cp3*x3*y2+c1*c2*cp1*cp2*cp3*x3*y2+c1*c3*cp1*cp2*cp3*x3*y2+m1*x3*y2+c1*m1*x3*y2+c2*m1*x3*y2+c3*m1*x3*y2+c1*c3*m1*x3*y2+c2*c3*m1*x3*y2+cp1*m1*x3*y2+c1*cp1*m1*x3*y2+c2*cp1*m1*x3*y2+c3*cp1*m1*x3*y2+c1*c3*cp1*m1*x3*y2+c2*c3*cp1*m1*x3*y2+cp2*m1*x3*y2+c1*cp2*m1*x3*y2+c2*cp2*m1*x3*y2+c3*cp2*m1*x3*y2+c1*c3*cp2*m1*x3*y2+c2*c3*cp2*m1*x3*y2+cp1*cp2*m1*x3*y2+c1*cp1*cp2*m1*x3*y2+c2*cp1*cp2*m1*x3*y2+c1*c2*cp1*cp2*m1*x3*y2+c1*c3*cp1*cp2*m1*x3*y2+c2*c3*cp1*cp2*m1*x3*y2+c1*c2*c3*cp1*cp2*m1*x3*y2+cp3*m1*x3*y2+c1*c3*cp3*m1*x3*y2+c2*c3*cp3*m1*x3*y2+c2*cp1*cp3*m1*x3*y2+c1*c2*cp1*cp3*m1*x3*y2+c1*c3*cp1*cp3*m1*x3*y2+c2*c3*cp1*cp3*m1*x3*y2+c1*c2*c3*cp1*cp3*m1*x3*y2+c1*cp2*cp3*m1*x3*y2+c2*cp2*cp3*m1*x3*y2+c3*cp2*cp3*m1*x3*y2+cp1*cp2*cp3*m1*x3*y2+c1*cp1*cp2*cp3*m1*x3*y2+c1*m2*x3*y2+c1*c3*m2*x3*y2+cp1*m2*x3*y2+c1*cp1*m2*x3*y2+c2*cp1*m2*x3*y2+c3*cp1*m2*x3*y2+c1*c3*cp1*m2*x3*y2+c1*cp2*m2*x3*y2+c1*c3*cp2*m2*x3*y2+cp1*cp2*m2*x3*y2+c1*cp1*cp2*m2*x3*y2+c1*c2*cp1*cp2*m2*x3*y2+c1*c3*cp1*cp2*m2*x3*y2+c1*c2*c3*cp1*cp2*m2*x3*y2+c1*c3*cp3*m2*x3*y2+cp1*cp3*m2*x3*y2+c1*cp1*cp3*m2*x3*y2+c2*cp1*cp3*m2*x3*y2+c1*c2*cp1*cp3*m2*x3*y2+c3*cp1*cp3*m2*x3*y2+c1*c3*cp1*cp3*m2*x3*y2+c1*c2*c3*cp1*cp3*m2*x3*y2+c1*cp2*cp3*m2*x3*y2+cp1*cp2*cp3*m2*x3*y2+c2*cp1*cp2*m1*m2*x3*y2+c2*c3*cp1*cp2*m1*m2*x3*y2+c1*cp1*cp3*m1*m2*x3*y2+c2*cp1*cp3*m1*m2*x3*y2+c3*cp1*cp3*m1*m2*x3*y2+c1*c3*cp1*cp3*m1*m2*x3*y2+c2*c3*cp1*cp3*m1*m2*x3*y2+cp2*cp3*m1*m2*x3*y2+c3*cp2*cp3*m1*m2*x3*y2+cp1*cp2*cp3*m1*m2*x3*y2+c1*cp1*cp2*cp3*m1*m2*x3*y2+c1*c3*cp1*cp2*cp3*m1*m2*x3*y2+c1*m3*x3*y2+c1*c3*m3*x3*y2+cp1*m3*x3*y2+c1*cp1*m3*x3*y2+c2*cp1*m3*x3*y2+c3*cp1*m3*x3*y2+c1*c3*cp1*m3*x3*y2+c1*cp2*m3*x3*y2+c1*c3*cp2*m3*x3*y2+c1*c2*cp1*cp2*m3*x3*y2+c1*c3*cp1*cp2*m3*x3*y2+c1*c2*c3*cp1*cp2*m3*x3*y2+c1*cp3*m3*x3*y2+c1*c3*cp3*m3*x3*y2+cp1*cp3*m3*x3*y2+c1*cp1*cp3*m3*x3*y2+c2*cp1*cp3*m3*x3*y2+c1*c2*cp1*cp3*m3*x3*y2+c3*cp1*cp3*m3*x3*y2+c1*c3*cp1*cp3*m3*x3*y2+c1*c2*c3*cp1*cp3*m3*x3*y2+c1*cp2*cp3*m3*x3*y2+m1*m3*x3*y2+c1*m1*m3*x3*y2+c2*m1*m3*x3*y2+c3*m1*m3*x3*y2+cp1*m1*m3*x3*y2+c1*cp1*m1*m3*x3*y2+c2*cp1*m1*m3*x3*y2+c3*cp1*m1*m3*x3*y2+cp2*m1*m3*x3*y2+c1*cp2*m1*m3*x3*y2+c2*cp2*m1*m3*x3*y2+c3*cp2*m1*m3*x3*y2+c1*cp1*cp2*m1*m3*x3*y2+c2*cp1*cp2*m1*m3*x3*y2+c1*c2*cp1*cp2*m1*m3*x3*y2+c1*c3*cp1*cp2*m1*m3*x3*y2+c2*c3*cp1*cp2*m1*m3*x3*y2+c1*cp3*m1*m3*x3*y2+c2*cp3*m1*m3*x3*y2+c3*cp3*m1*m3*x3*y2+c1*cp1*cp3*m1*m3*x3*y2+c3*cp1*cp3*m1*m3*x3*y2+c2*c3*cp1*cp3*m1*m3*x3*y2+c1*cp2*cp3*m1*m3*x3*y2+c2*cp2*cp3*m1*m3*x3*y2+c3*cp2*cp3*m1*m3*x3*y2+cp1*cp2*cp3*m1*m3*x3*y2+c1*cp1*cp2*cp3*m1*m3*x3*y2+c1*c2*cp1*cp2*cp3*m1*m3*x3*y2+c1*c3*cp1*cp2*cp3*m1*m3*x3*y2+c1*m2*m3*x3*y2+c1*cp1*m2*m3*x3*y2+c1*cp2*m2*m3*x3*y2+c1*cp1*cp2*m2*m3*x3*y2+c1*c2*cp1*cp2*m2*m3*x3*y2+c1*c3*cp1*cp2*m2*m3*x3*y2+c1*cp3*m2*m3*x3*y2+c1*c3*cp1*cp3*m2*m3*x3*y2+c1*cp2*cp3*m2*m3*x3*y2+c1*c2*cp1*cp2*cp3*m2*m3*x3*y2+c2*cp1*cp2*m1*m2*m3*x3*y2+c3*cp1*cp2*m1*m2*m3*x3*y2+cp1*cp3*m1*m2*m3*x3*y2+c3*cp1*cp3*m1*m2*m3*x3*y2+cp1*cp2*cp3*m1*m2*m3*x3*y2+c2*cp1*cp2*cp3*m1*m2*m3*x3*y2+c3*y1*y2+c2*c3*y1*y2+c1*c3*cp1*y1*y2+c2*c3*cp1*y1*y2+c2*c3*cp2*y1*y2+c3*cp1*cp2*y1*y2+c2*c3*cp1*cp2*y1*y2+cp3*y1*y2+c1*cp3*y1*y2+c1*c2*cp3*y1*y2+c2*c3*cp3*y1*y2+c2*cp1*cp3*y1*y2+c1*c3*cp1*cp3*y1*y2+cp2*cp3*y1*y2+c2*cp2*cp3*y1*y2+c1*c2*cp2*cp3*y1*y2+c3*cp2*cp3*y1*y2+c3*m1*y1*y2+c1*c3*m1*y1*y2+c3*cp1*m1*y1*y2+c1*c3*cp1*m1*y1*y2+c3*cp2*m1*y1*y2+c1*c3*cp2*m1*y1*y2+cp3*m1*y1*y2+c1*cp3*m1*y1*y2+c2*cp3*m1*y1*y2+c1*c2*cp3*m1*y1*y2+c3*cp3*m1*y1*y2+c1*c3*cp3*m1*y1*y2+c2*cp2*cp3*m1*y1*y2+c2*cp1*cp2*cp3*m1*y1*y2+c3*m2*y1*y2+c1*c3*m2*y1*y2+c1*c3*cp1*m2*y1*y2+c3*cp2*m2*y1*y2+c1*c3*cp1*cp2*m2*y1*y2+c2*cp3*m2*y1*y2+c3*cp3*m2*y1*y2+c1*cp1*cp3*m2*y1*y2+c2*cp1*cp3*m2*y1*y2+c1*c2*cp1*cp3*m2*y1*y2+c1*c3*cp1*cp3*m2*y1*y2+cp2*cp3*m2*y1*y2+c1*cp2*cp3*m2*y1*y2+c3*cp2*cp3*m2*y1*y2+c1*cp1*cp2*cp3*m2*y1*y2+c2*cp1*cp2*cp3*m2*y1*y2+c3*m1*m2*y1*y2+c3*cp1*m1*m2*y1*y2+c3*cp1*cp2*m1*m2*y1*y2+c1*cp3*m1*m2*y1*y2+cp1*cp3*m1*m2*y1*y2+c2*cp1*cp3*m1*m2*y1*y2+c3*cp1*cp3*m1*m2*y1*y2+cp2*cp3*m1*m2*y1*y2+c1*cp2*cp3*m1*m2*y1*y2+cp1*cp2*cp3*m1*m2*y1*y2+m3*y1*y2+c1*m3*y1*y2+c2*m3*y1*y2+c1*c2*m3*y1*y2+c3*m3*y1*y2+c1*c3*m3*y1*y2+c1*c2*cp1*m3*y1*y2+c1*c3*cp1*m3*y1*y2+cp2*m3*y1*y2+c1*cp2*m3*y1*y2+c2*cp2*m3*y1*y2+c3*cp2*m3*y1*y2+cp1*cp2*m3*y1*y2+c1*cp1*cp2*m3*y1*y2+c1*c2*cp1*cp2*m3*y1*y2+c1*c3*cp1*cp2*m3*y1*y2+cp3*m3*y1*y2+c1*cp3*m3*y1*y2+c2*cp3*m3*y1*y2+c3*cp3*m3*y1*y2+cp1*cp3*m3*y1*y2+c1*cp1*cp3*m3*y1*y2+c1*c2*cp1*cp3*m3*y1*y2+c3*cp1*cp3*m3*y1*y2+c1*c3*cp1*cp3*m3*y1*y2+cp2*cp3*m3*y1*y2+c3*cp2*cp3*m3*y1*y2+c1*cp1*cp2*cp3*m3*y1*y2+c2*cp1*cp2*cp3*m3*y1*y2+c1*m1*m3*y1*y2+c2*m1*m3*y1*y2+c3*m1*m3*y1*y2+c1*cp1*m1*m3*y1*y2+c2*cp1*m1*m3*y1*y2+c3*cp1*m1*m3*y1*y2+cp2*m1*m3*y1*y2+c1*cp2*m1*m3*y1*y2+c1*cp1*cp2*m1*m3*y1*y2+c2*cp1*cp2*m1*m3*y1*y2+c3*cp1*cp2*m1*m3*y1*y2+cp3*m1*m3*y1*y2+c1*cp3*m1*m3*y1*y2+c1*cp1*cp3*m1*m3*y1*y2+c2*cp1*cp3*m1*m3*y1*y2+c3*cp1*cp3*m1*m3*y1*y2+m2*m3*y1*y2+cp1*m2*m3*y1*y2+c1*cp3*m2*m3*y1*y2+cp2*cp3*m2*m3*y1*y2+cp1*cp2*cp3*m2*m3*y1*y2+c1*cp1*cp2*cp3*m2*m3*y1*y2+cp3*m1*m2*m3*y1*y2+cp1*cp2*cp3*m1*m2*m3*y1*y2+(1/2)*c3*cp1*y2*(1+y2)+(1/2)*c3*cp1*cp2*y2*(1+y2)+(1/2)*c1*c3*cp1*cp2*y2*(1+y2)+(1/2)*c1*c2*cp3*y2*(1+y2)+(1/2)*cp1*cp3*y2*(1+y2)+(1/2)*c1*cp1*cp3*y2*(1+y2)+(1/2)*c1*c2*cp1*cp3*y2*(1+y2)+(1/2)*c1*c3*cp1*cp3*y2*(1+y2)+(1/2)*c1*c3*cp1*cp2*m1*y2*(1+y2)+(1/2)*cp1*cp3*m1*y2*(1+y2)+(1/2)*c1*cp1*cp3*m1*y2*(1+y2)+(1/2)*c1*c2*cp1*cp3*m1*y2*(1+y2)+(1/2)*c1*c3*cp1*cp3*m1*y2*(1+y2)+(1/2)*c3*cp1*m2*y2*(1+y2)+(1/2)*c3*cp1*cp2*m2*y2*(1+y2)+(1/2)*c1*c3*cp1*cp2*m2*y2*(1+y2)+(1/2)*c2*cp1*cp3*m2*y2*(1+y2)+(1/2)*c1*c2*cp1*cp3*m2*y2*(1+y2)+(1/2)*c3*cp1*cp3*m2*y2*(1+y2)+(1/2)*c1*c3*cp1*cp3*m2*y2*(1+y2)+(1/2)*c1*cp2*cp3*m2*y2*(1+y2)+(1/2)*cp1*cp2*cp3*m2*y2*(1+y2)+(1/2)*c3*cp1*cp2*m1*m2*y2*(1+y2)+(1/2)*c1*cp1*cp3*m1*m2*y2*(1+y2)+(1/2)*c2*cp1*cp3*m1*m2*y2*(1+y2)+(1/2)*c3*cp1*cp3*m1*m2*y2*(1+y2)+(1/2)*cp1*cp2*cp3*m1*m2*y2*(1+y2)+(1/2)*c1*cp1*cp2*cp3*m1*m2*y2*(1+y2)+(1/2)*cp1*m3*y2*(1+y2)+(1/2)*c2*cp1*m3*y2*(1+y2)+(1/2)*c3*cp1*m3*y2*(1+y2)+(1/2)*cp1*cp2*m3*y2*(1+y2)+(1/2)*c2*cp1*cp2*m3*y2*(1+y2)+(1/2)*c1*c2*cp1*cp2*m3*y2*(1+y2)+(1/2)*c3*cp1*cp2*m3*y2*(1+y2)+(1/2)*c1*c3*cp1*cp2*m3*y2*(1+y2)+(1/2)*cp1*cp3*m3*y2*(1+y2)+(1/2)*c2*cp1*cp3*m3*y2*(1+y2)+(1/2)*c1*c2*cp1*cp3*m3*y2*(1+y2)+(1/2)*c3*cp1*cp3*m3*y2*(1+y2)+(1/2)*c1*c3*cp1*cp3*m3*y2*(1+y2)+(1/2)*cp1*cp2*cp3*m3*y2*(1+y2)+(1/2)*cp1*cp2*m1*m3*y2*(1+y2)+(1/2)*c2*cp1*cp2*m1*m3*y2*(1+y2)+(1/2)*c3*cp1*cp2*m1*m3*y2*(1+y2)+(1/2)*cp1*cp3*m1*m3*y2*(1+y2)+(1/2)*c2*cp1*cp3*m1*m3*y2*(1+y2)+(1/2)*c3*cp1*cp3*m1*m3*y2*(1+y2)+(1/2)*c1*cp1*cp3*m2*m3*y2*(1+y2)+(1/2)*cp1*cp2*cp3*m2*m3*y2*(1+y2)+(1/2)*c1*cp1*cp2*cp3*m2*m3*y2*(1+y2)+(1/2)*cp1*cp3*m1*m2*m3*y2*(1+y2)+(1/2)*cp1*cp2*cp3*m1*m2*m3*y2*(1+y2)+c1*c2*y3+c1*c2*c3*y3+c1*c2*cp1*y3+c1*c2*c3*cp1*y3+c1*cp2*y3+c1*c2*c3*cp2*y3+c1*cp1*cp2*y3+c1*c2*cp1*cp2*y3+c3*cp1*cp2*y3+c1*c3*cp1*cp2*y3+c1*c2*cp3*y3+c2*cp1*cp3*y3+c1*c2*cp1*cp3*y3+c1*c2*cp2*cp3*y3+c1*c3*cp2*cp3*y3+c1*c2*c3*cp2*cp3*y3+c1*cp1*cp2*cp3*y3+c1*c2*c3*cp1*cp2*cp3*y3+c1*c2*m1*y3+c1*c2*c3*m1*y3+cp2*m1*y3+c2*cp2*m1*y3+c1*c2*cp2*m1*y3+c1*c3*cp2*m1*y3+c1*c2*c3*cp2*m1*y3+c2*cp1*cp2*m1*y3+c2*c3*cp1*cp2*m1*y3+c1*c2*c3*cp1*cp2*m1*y3+c1*c2*cp3*m1*y3+c1*c2*c3*cp1*cp3*m1*y3+cp2*cp3*m1*y3+c1*cp2*cp3*m1*y3+c2*cp2*cp3*m1*y3+cp1*cp2*cp3*m1*y3+c2*cp1*cp2*cp3*m1*y3+c1*m2*y3+cp1*m2*y3+c1*cp1*m2*y3+c2*cp1*m2*y3+c1*c3*cp1*m2*y3+c2*c3*cp1*m2*y3+c1*c3*cp2*m2*y3+c1*cp1*cp2*m2*y3+c2*cp1*cp2*m2*y3+c3*cp1*cp2*m2*y3+c1*c3*cp1*cp2*m2*y3+c1*c2*c3*cp1*cp2*m2*y3+c1*c2*cp3*m2*y3+c1*c3*cp3*m2*y3+c1*c2*c3*cp3*m2*y3+c1*c2*cp1*cp3*m2*y3+c1*c3*cp1*cp3*m2*y3+c2*c3*cp1*cp3*m2*y3+c1*c2*c3*cp1*cp3*m2*y3+c1*cp2*cp3*m2*y3+c3*cp1*cp2*cp3*m2*y3+c2*c3*cp1*cp2*cp3*m2*y3+m1*m2*y3+c1*m1*m2*y3+c2*m1*m2*y3+c1*c2*m1*m2*y3+c3*m1*m2*y3+c2*c3*m1*m2*y3+cp1*m1*m2*y3+c2*cp1*m1*m2*y3+c1*c3*cp1*m1*m2*y3+c2*c3*cp1*m1*m2*y3+cp2*m1*m2*y3+c1*cp2*m1*m2*y3+c1*c2*cp2*m1*m2*y3+c3*cp2*m1*m2*y3+c2*c3*cp2*m1*m2*y3+c2*cp1*cp2*m1*m2*y3+c3*cp1*cp2*m1*m2*y3+c2*c3*cp1*cp2*m1*m2*y3+c1*c2*c3*cp1*cp2*m1*m2*y3+cp3*m1*m2*y3+c1*c2*cp3*m1*m2*y3+c3*cp3*m1*m2*y3+c1*c3*cp3*m1*m2*y3+c2*c3*cp3*m1*m2*y3+cp1*cp3*m1*m2*y3+c1*cp1*cp3*m1*m2*y3+c3*cp1*cp3*m1*m2*y3+c1*c3*cp1*cp3*m1*m2*y3+cp2*cp3*m1*m2*y3+c1*cp2*cp3*m1*m2*y3+c2*cp2*cp3*m1*m2*y3+c1*c2*cp2*cp3*m1*m2*y3+c1*c3*cp2*cp3*m1*m2*y3+c2*c3*cp2*cp3*m1*m2*y3+cp1*cp2*cp3*m1*m2*y3+c1*cp1*cp2*cp3*m1*m2*y3+c2*c3*cp1*cp2*cp3*m1*m2*y3+c1*c2*c3*cp1*cp2*cp3*m1*m2*y3+c1*c2*m3*y3+c1*c2*cp1*m3*y3+c2*c3*cp1*m3*y3+c1*c2*cp2*m3*y3+cp1*cp2*m3*y3+c1*cp1*cp2*m3*y3+c2*cp1*cp2*m3*y3+c1*c2*cp1*cp2*m3*y3+c3*cp1*cp2*m3*y3+c1*c3*cp1*cp2*m3*y3+c2*c3*cp1*cp2*m3*y3+c1*c2*c3*cp1*cp2*m3*y3+c1*c2*cp3*m3*y3+c2*cp1*cp3*m3*y3+c2*c3*cp1*cp3*m3*y3+c1*c2*c3*cp1*cp3*m3*y3+c1*cp2*cp3*m3*y3+c1*c2*cp2*cp3*m3*y3+c1*c3*cp2*cp3*m3*y3+c1*c2*c3*cp2*cp3*m3*y3+cp1*cp2*cp3*m3*y3+c2*cp1*cp2*cp3*m3*y3+c3*cp1*cp2*cp3*m3*y3+c2*c3*cp1*cp2*cp3*m3*y3+c2*cp1*m1*m3*y3+cp2*m1*m3*y3+c1*cp1*cp2*m1*m3*y3+c2*cp1*cp2*m1*m3*y3+c1*c2*cp1*cp2*m1*m3*y3+c3*cp1*cp2*m1*m3*y3+c1*c3*cp1*cp2*m1*m3*y3+c2*c3*cp1*cp2*m1*m3*y3+c1*c2*c3*cp3*m1*m3*y3+c2*c3*cp1*cp3*m1*m3*y3+c1*c2*c3*cp1*cp3*m1*m3*y3+cp2*cp3*m1*m3*y3+c1*c3*cp2*cp3*m1*m3*y3+c2*c3*cp2*cp3*m1*m3*y3+cp1*cp2*cp3*m1*m3*y3+c1*cp1*cp2*cp3*m1*m3*y3+c1*c2*cp1*cp2*cp3*m1*m3*y3+c3*cp1*cp2*cp3*m1*m3*y3+c1*c3*cp1*cp2*cp3*m1*m3*y3+c2*c3*cp1*cp2*cp3*m1*m3*y3+c1*c2*c3*cp1*cp2*cp3*m1*m3*y3+c1*m2*m3*y3+c1*cp1*m2*m3*y3+c2*cp1*m2*m3*y3+c3*cp1*m2*m3*y3+c1*cp2*m2*m3*y3+cp1*cp2*m2*m3*y3+c1*cp1*cp2*m2*m3*y3+c3*cp1*cp2*m2*m3*y3+c2*c3*cp1*cp2*m2*m3*y3+c1*c2*c3*cp1*cp2*m2*m3*y3+c1*c2*cp3*m2*m3*y3+c1*c3*cp3*m2*m3*y3+cp1*cp3*m2*m3*y3+c2*cp1*cp3*m2*m3*y3+c3*cp1*cp3*m2*m3*y3+c1*c2*c3*cp1*cp3*m2*m3*y3+cp1*cp2*cp3*m2*m3*y3+c1*cp1*cp2*cp3*m2*m3*y3+c2*cp1*cp2*cp3*m2*m3*y3+c1*c3*m1*m2*m3*y3+c2*c3*m1*m2*m3*y3+cp1*m1*m2*m3*y3+c1*c3*cp1*m1*m2*m3*y3+c2*c3*cp1*m1*m2*m3*y3+c1*c3*cp2*m1*m2*m3*y3+c2*c3*cp2*m1*m2*m3*y3+cp1*cp2*m1*m2*m3*y3+c1*cp1*cp2*m1*m2*m3*y3+c1*c2*cp1*cp2*m1*m2*m3*y3+c3*cp1*cp2*m1*m2*m3*y3+c1*c3*cp1*cp2*m1*m2*m3*y3+c2*c3*cp1*cp2*m1*m2*m3*y3+c1*cp3*m1*m2*m3*y3+c2*cp3*m1*m2*m3*y3+c1*c3*cp3*m1*m2*m3*y3+cp1*cp3*m1*m2*m3*y3+c1*cp1*cp3*m1*m2*m3*y3+c3*cp1*cp3*m1*m2*m3*y3+c1*c3*cp1*cp3*m1*m2*m3*y3+c2*c3*cp1*cp3*m1*m2*m3*y3+c1*cp2*cp3*m1*m2*m3*y3+c2*cp2*cp3*m1*m2*m3*y3+c1*cp1*cp2*cp3*m1*m2*m3*y3+c1*c2*cp1*cp2*cp3*m1*m2*m3*y3+c2*x1*y3+c1*c2*x1*y3+c2*cp1*x1*y3+c2*c3*cp1*x1*y3+cp2*x1*y3+c1*cp2*x1*y3+c1*c2*cp2*x1*y3+c3*cp2*x1*y3+c1*c3*cp2*x1*y3+c1*c2*c3*cp2*x1*y3+cp1*cp2*x1*y3+c2*cp1*cp2*x1*y3+c3*cp1*cp2*x1*y3+c1*c3*cp1*cp2*x1*y3+c2*c3*cp1*cp2*x1*y3+c1*c2*c3*cp1*cp2*x1*y3+c2*cp3*x1*y3+c1*c2*cp3*x1*y3+c2*c3*cp3*x1*y3+c1*c2*c3*cp3*x1*y3+c2*cp1*cp3*x1*y3+c1*c2*c3*cp1*cp3*x1*y3+cp2*cp3*x1*y3+c3*cp2*cp3*x1*y3+c1*c3*cp2*cp3*x1*y3+c2*c3*cp2*cp3*x1*y3+c1*c2*cp1*cp2*cp3*x1*y3+c1*c3*cp1*cp2*cp3*x1*y3+c2*m1*x1*y3+c2*cp1*m1*x1*y3+cp2*m1*x1*y3+c2*cp2*m1*x1*y3+c3*cp2*m1*x1*y3+c2*c3*cp2*m1*x1*y3+cp1*cp2*m1*x1*y3+c2*cp1*cp2*m1*x1*y3+c3*cp1*cp2*m1*x1*y3+c2*c3*cp1*cp2*m1*x1*y3+c2*cp3*m1*x1*y3+c2*c3*cp3*m1*x1*y3+c2*cp1*cp3*m1*x1*y3+c2*c3*cp1*cp3*m1*x1*y3+c3*cp2*cp3*m1*x1*y3+c3*cp1*cp2*cp3*m1*x1*y3+m2*x1*y3+c1*m2*x1*y3+c2*cp1*m2*x1*y3+c3*cp1*m2*x1*y3+cp2*m2*x1*y3+c1*cp2*m2*x1*y3+c1*c3*cp2*m2*x1*y3+c1*c2*c3*cp2*m2*x1*y3+cp1*cp2*m2*x1*y3+c2*cp1*cp2*m2*x1*y3+c3*cp1*cp2*m2*x1*y3+c1*c3*cp1*cp2*m2*x1*y3+c1*c2*c3*cp1*cp2*m2*x1*y3+cp3*m2*x1*y3+c1*cp3*m2*x1*y3+c3*cp3*m2*x1*y3+c1*c3*cp3*m2*x1*y3+c1*c2*c3*cp3*m2*x1*y3+c2*cp1*cp3*m2*x1*y3+c1*c3*cp1*cp3*m2*x1*y3+c1*c2*c3*cp1*cp3*m2*x1*y3+cp2*cp3*m2*x1*y3+c3*cp2*cp3*m2*x1*y3+c1*cp1*cp2*cp3*m2*x1*y3+c2*cp1*cp2*cp3*m2*x1*y3+m1*m2*x1*y3+cp1*m1*m2*x1*y3+cp2*m1*m2*x1*y3+c3*cp2*m1*m2*x1*y3+c2*c3*cp2*m1*m2*x1*y3+cp1*cp2*m1*m2*x1*y3+c3*cp1*cp2*m1*m2*x1*y3+c2*c3*cp1*cp2*m1*m2*x1*y3+cp3*m1*m2*x1*y3+c3*cp3*m1*m2*x1*y3+c2*c3*cp3*m1*m2*x1*y3+cp1*cp3*m1*m2*x1*y3+c3*cp1*cp3*m1*m2*x1*y3+c2*c3*cp1*cp3*m1*m2*x1*y3+c1*c3*cp2*m3*x1*y3+c1*c2*c3*cp2*m3*x1*y3+c1*c3*cp1*cp2*m3*x1*y3+c1*c2*c3*cp1*cp2*m3*x1*y3+c2*c3*cp3*m3*x1*y3+c1*c2*c3*cp3*m3*x1*y3+c2*c3*cp1*cp3*m3*x1*y3+c1*c2*c3*cp1*cp3*m3*x1*y3+c1*c3*cp2*cp3*m3*x1*y3+c2*c3*cp2*cp3*m3*x1*y3+c3*cp2*m1*m3*x1*y3+c2*c3*cp2*m1*m3*x1*y3+c3*cp1*cp2*m1*m3*x1*y3+c2*c3*cp1*cp2*m1*m3*x1*y3+c2*c3*cp3*m1*m3*x1*y3+c2*c3*cp1*cp3*m1*m3*x1*y3+c3*cp2*cp3*m1*m3*x1*y3+c3*cp1*cp2*cp3*m1*m3*x1*y3+c1*c2*cp2*m2*m3*x1*y3+c1*c3*cp2*m2*m3*x1*y3+c1*c2*cp1*cp2*m2*m3*x1*y3+c1*c3*cp1*cp2*m2*m3*x1*y3+c3*cp3*m2*m3*x1*y3+c1*c3*cp3*m2*m3*x1*y3+c3*cp1*cp3*m2*m3*x1*y3+c1*c3*cp1*cp3*m2*m3*x1*y3+c1*c2*cp2*cp3*m2*m3*x1*y3+c3*cp2*cp3*m2*m3*x1*y3+c1*c2*cp1*cp2*cp3*m2*m3*x1*y3+c2*cp2*m1*m2*m3*x1*y3+c3*cp2*m1*m2*m3*x1*y3+c2*cp1*cp2*m1*m2*m3*x1*y3+c3*cp1*cp2*m1*m2*m3*x1*y3+c3*cp3*m1*m2*m3*x1*y3+c3*cp1*cp3*m1*m2*m3*x1*y3+c2*cp2*cp3*m1*m2*m3*x1*y3+c2*cp1*cp2*cp3*m1*m2*m3*x1*y3+c1*c3*x2*y3+c1*c3*cp1*x2*y3+c2*c3*cp1*x2*y3+c1*c3*cp2*x2*y3+c1*cp1*cp2*x2*y3+c1*c2*c3*cp1*cp2*x2*y3+c1*c2*cp3*x2*y3+c1*c3*cp3*x2*y3+c1*c3*cp1*cp3*x2*y3+c1*c2*c3*cp1*cp3*x2*y3+c1*cp1*cp2*cp3*x2*y3+c1*c2*cp1*cp2*cp3*x2*y3+c1*c3*cp1*cp2*cp3*x2*y3+c1*c3*m1*x2*y3+c2*c3*m1*x2*y3+c1*c3*cp1*m1*x2*y3+c2*c3*cp1*m1*x2*y3+c1*c3*cp2*m1*x2*y3+c2*c3*cp2*m1*x2*y3+cp1*cp2*m1*x2*y3+c3*cp1*cp2*m1*x2*y3+c1*c3*cp1*cp2*m1*x2*y3+c1*c2*c3*cp1*cp2*m1*x2*y3+c1*cp3*m1*x2*y3+c2*cp3*m1*x2*y3+c1*c3*cp3*m1*x2*y3+c2*c3*cp3*m1*x2*y3+c1*cp1*cp3*m1*x2*y3+c1*c3*cp1*cp3*m1*x2*y3+c1*c2*c3*cp1*cp3*m1*x2*y3+c1*cp2*cp3*m1*x2*y3+c2*cp2*cp3*m1*x2*y3+c3*cp2*cp3*m1*x2*y3+cp1*cp2*cp3*m1*x2*y3+c1*cp1*cp2*cp3*m1*x2*y3+c1*c3*m2*x2*y3+c1*c3*cp1*m2*x2*y3+c2*c3*cp1*m2*x2*y3+c1*c3*cp2*m2*x2*y3+cp1*cp2*m2*x2*y3+c2*cp1*cp2*m2*x2*y3+c3*cp1*cp2*m2*x2*y3+c1*c3*cp1*cp2*m2*x2*y3+c2*c3*cp1*cp2*m2*x2*y3+c1*c2*c3*cp1*cp2*m2*x2*y3+c1*cp3*m2*x2*y3+c1*c3*cp3*m2*x2*y3+c3*cp1*cp3*m2*x2*y3+c1*c3*cp1*cp3*m2*x2*y3+c2*c3*cp1*cp3*m2*x2*y3+c1*c2*c3*cp1*cp3*m2*x2*y3+c1*cp2*cp3*m2*x2*y3+cp1*cp2*cp3*m2*x2*y3+c3*cp1*cp2*cp3*m2*x2*y3+c2*c3*cp1*cp2*m1*m2*x2*y3+cp1*cp3*m1*m2*x2*y3+c1*c3*cp1*cp3*m1*m2*x2*y3+c2*c3*cp1*cp3*m1*m2*x2*y3+c3*cp2*cp3*m1*m2*x2*y3+cp1*cp2*cp3*m1*m2*x2*y3+c3*cp1*cp2*cp3*m1*m2*x2*y3+c1*c3*cp1*cp2*cp3*m1*m2*x2*y3+c1*c3*m3*x2*y3+c1*c3*cp1*m3*x2*y3+c2*c3*cp1*m3*x2*y3+c1*c3*cp2*m3*x2*y3+c1*cp1*cp2*m3*x2*y3+c1*c3*cp1*cp2*m3*x2*y3+c2*c3*cp1*cp2*m3*x2*y3+c1*c2*c3*cp1*cp2*m3*x2*y3+c2*c3*cp1*cp3*m3*x2*y3+c1*c2*c3*cp1*cp3*m3*x2*y3+c1*cp2*cp3*m3*x2*y3+cp1*cp2*cp3*m3*x2*y3+c2*cp1*cp2*cp3*m3*x2*y3+c3*cp1*cp2*cp3*m3*x2*y3+m1*m3*x2*y3+c1*m1*m3*x2*y3+c2*m1*m3*x2*y3+c3*m1*m3*x2*y3+cp1*m1*m3*x2*y3+c1*cp1*m1*m3*x2*y3+c2*cp1*m1*m3*x2*y3+c3*cp1*m1*m3*x2*y3+cp2*m1*m3*x2*y3+c1*cp2*m1*m3*x2*y3+c2*cp2*m1*m3*x2*y3+c3*cp2*m1*m3*x2*y3+c2*cp1*cp2*m1*m3*x2*y3+c1*c2*cp1*cp2*m1*m3*x2*y3+c3*cp1*cp2*m1*m3*x2*y3+c1*c3*cp1*cp2*m1*m3*x2*y3+c2*c3*cp1*cp2*m1*m3*x2*y3+c1*cp3*m1*m3*x2*y3+c2*cp3*m1*m3*x2*y3+c1*cp1*cp3*m1*m3*x2*y3+c2*cp1*cp3*m1*m3*x2*y3+c2*c3*cp1*cp3*m1*m3*x2*y3+c1*cp2*cp3*m1*m3*x2*y3+c2*cp2*cp3*m1*m3*x2*y3+c3*cp2*cp3*m1*m3*x2*y3+cp1*cp2*cp3*m1*m3*x2*y3+c2*cp1*cp2*cp3*m1*m3*x2*y3+c1*c2*cp1*cp2*cp3*m1*m3*x2*y3+c3*cp1*cp2*cp3*m1*m3*x2*y3+c1*c3*cp1*cp2*cp3*m1*m3*x2*y3+c1*m2*m3*x2*y3+cp1*m2*m3*x2*y3+c1*cp1*m2*m3*x2*y3+c2*cp1*m2*m3*x2*y3+c3*cp1*m2*m3*x2*y3+c1*cp2*m2*m3*x2*y3+cp1*cp2*m2*m3*x2*y3+c2*cp1*cp2*m2*m3*x2*y3+c1*c2*cp1*cp2*m2*m3*x2*y3+c3*cp1*cp2*m2*m3*x2*y3+c1*c3*cp1*cp2*m2*m3*x2*y3+c1*cp3*m2*m3*x2*y3+cp1*cp3*m2*m3*x2*y3+c1*cp1*cp3*m2*m3*x2*y3+c2*cp1*cp3*m2*m3*x2*y3+c3*cp1*cp3*m2*m3*x2*y3+c1*c3*cp1*cp3*m2*m3*x2*y3+c1*cp2*cp3*m2*m3*x2*y3+c2*cp1*cp2*cp3*m2*m3*x2*y3+c1*c2*cp1*cp2*cp3*m2*m3*x2*y3+cp1*cp2*m1*m2*m3*x2*y3+c2*cp1*cp2*m1*m2*m3*x2*y3+c3*cp1*cp2*m1*m2*m3*x2*y3+c3*cp1*cp3*m1*m2*m3*x2*y3+cp1*cp2*cp3*m1*m2*m3*x2*y3+c2*cp1*cp2*cp3*m1*m2*m3*x2*y3+c1*c2*cp3*x3*y3+c2*cp1*cp3*m1*x3*y3+c1*cp1*cp3*m2*x3*y3+c2*cp1*cp3*m2*x3*y3+c1*cp2*cp3*m2*x3*y3+cp1*cp3*m1*m2*x3*y3+cp1*cp2*cp3*m1*m2*x3*y3+cp1*cp3*m2*m3*x3*y3+c1*c2*y1*y3+c2*cp1*y1*y3+c2*c3*cp1*y1*y3+c1*cp2*y1*y3+c2*cp2*y1*y3+c1*c2*cp2*y1*y3+c3*cp2*y1*y3+c1*c3*cp2*y1*y3+c1*c2*c3*cp2*y1*y3+cp1*cp2*y1*y3+c2*cp1*cp2*y1*y3+c1*c3*cp1*cp2*y1*y3+c1*c2*c3*cp1*cp2*y1*y3+c1*c2*cp3*y1*y3+c2*c3*cp3*y1*y3+c1*c2*c3*cp3*y1*y3+c2*cp1*cp3*y1*y3+c2*c3*cp1*cp3*y1*y3+c1*c2*c3*cp1*cp3*y1*y3+cp2*cp3*y1*y3+c2*cp2*cp3*y1*y3+c3*cp2*cp3*y1*y3+c1*c3*cp2*cp3*y1*y3+c2*c3*cp2*cp3*y1*y3+c2*cp1*cp2*cp3*y1*y3+c1*c2*cp1*cp2*cp3*y1*y3+c3*cp1*cp2*cp3*y1*y3+c1*c3*cp1*cp2*cp3*y1*y3+c2*m1*y1*y3+c2*cp1*m1*y1*y3+cp2*m1*y1*y3+c2*cp2*m1*y1*y3+c3*cp2*m1*y1*y3+c2*c3*cp2*m1*y1*y3+cp1*cp2*m1*y1*y3+c2*cp1*cp2*m1*y1*y3+c3*cp1*cp2*m1*y1*y3+c2*c3*cp1*cp2*m1*y1*y3+c2*cp3*m1*y1*y3+c2*c3*cp3*m1*y1*y3+c2*cp1*cp3*m1*y1*y3+c2*c3*cp1*cp3*m1*y1*y3+c3*cp2*cp3*m1*y1*y3+c3*cp1*cp2*cp3*m1*y1*y3+c1*m2*y1*y3+c2*cp1*m2*y1*y3+c3*cp1*m2*y1*y3+c1*cp2*m2*y1*y3+c1*c3*cp2*m2*y1*y3+c1*c2*c3*cp2*m2*y1*y3+cp1*cp2*m2*y1*y3+c2*cp1*cp2*m2*y1*y3+c1*c3*cp1*cp2*m2*y1*y3+c2*c3*cp1*cp2*m2*y1*y3+c1*c2*c3*cp1*cp2*m2*y1*y3+c1*cp3*m2*y1*y3+c3*cp3*m2*y1*y3+c1*c3*cp3*m2*y1*y3+c1*c2*c3*cp3*m2*y1*y3+c2*cp1*cp3*m2*y1*y3+c3*cp1*cp3*m2*y1*y3+c1*c3*cp1*cp3*m2*y1*y3+c2*c3*cp1*cp3*m2*y1*y3+c1*c2*c3*cp1*cp3*m2*y1*y3+c3*cp2*cp3*m2*y1*y3+cp1*cp2*cp3*m2*y1*y3+c1*cp1*cp2*cp3*m2*y1*y3+c2*cp1*cp2*cp3*m2*y1*y3+m1*m2*y1*y3+cp1*m1*m2*y1*y3+cp2*m1*m2*y1*y3+c3*cp2*m1*m2*y1*y3+c2*c3*cp2*m1*m2*y1*y3+cp1*cp2*m1*m2*y1*y3+c3*cp1*cp2*m1*m2*y1*y3+c2*c3*cp1*cp2*m1*m2*y1*y3+cp3*m1*m2*y1*y3+c3*cp3*m1*m2*y1*y3+c2*c3*cp3*m1*m2*y1*y3+cp1*cp3*m1*m2*y1*y3+c3*cp1*cp3*m1*m2*y1*y3+c2*c3*cp1*cp3*m1*m2*y1*y3+c1*c3*cp2*m3*y1*y3+c1*c2*c3*cp2*m3*y1*y3+c3*cp1*cp2*m3*y1*y3+c1*c3*cp1*cp2*m3*y1*y3+c2*c3*cp1*cp2*m3*y1*y3+c1*c2*c3*cp1*cp2*m3*y1*y3+c2*c3*cp3*m3*y1*y3+c1*c2*c3*cp3*m3*y1*y3+c1*c2*c3*cp1*cp3*m3*y1*y3+c3*cp2*cp3*m3*y1*y3+c1*c3*cp2*cp3*m3*y1*y3+c2*c3*cp2*cp3*m3*y1*y3+c3*cp2*m1*m3*y1*y3+c2*c3*cp2*m1*m3*y1*y3+c3*cp1*cp2*m1*m3*y1*y3+c2*c3*cp1*cp2*m1*m3*y1*y3+c2*c3*cp3*m1*m3*y1*y3+c2*c3*cp1*cp3*m1*m3*y1*y3+c3*cp2*cp3*m1*m3*y1*y3+c3*cp1*cp2*cp3*m1*m3*y1*y3+c1*c2*cp2*m2*m3*y1*y3+c1*c3*cp2*m2*m3*y1*y3+c2*cp1*cp2*m2*m3*y1*y3+c1*c2*cp1*cp2*m2*m3*y1*y3+c3*cp1*cp2*m2*m3*y1*y3+c1*c3*cp1*cp2*m2*m3*y1*y3+c3*cp3*m2*m3*y1*y3+c1*c3*cp3*m2*m3*y1*y3+c1*c3*cp1*cp3*m2*m3*y1*y3+c1*c2*cp2*cp3*m2*m3*y1*y3+c3*cp2*cp3*m2*m3*y1*y3+c2*cp1*cp2*cp3*m2*m3*y1*y3+c1*c2*cp1*cp2*cp3*m2*m3*y1*y3+c2*cp2*m1*m2*m3*y1*y3+c3*cp2*m1*m2*m3*y1*y3+c2*cp1*cp2*m1*m2*m3*y1*y3+c3*cp1*cp2*m1*m2*m3*y1*y3+c3*cp3*m1*m2*m3*y1*y3+c3*cp1*cp3*m1*m2*m3*y1*y3+c2*cp2*cp3*m1*m2*m3*y1*y3+c2*cp1*cp2*cp3*m1*m2*m3*y1*y3+c1*c3*y2*y3+cp1*y2*y3+c2*cp1*y2*y3+c3*cp1*y2*y3+c1*c3*cp1*y2*y3+c1*c3*cp2*y2*y3+c1*cp1*cp2*y2*y3+c3*cp1*cp2*y2*y3+c1*c3*cp1*cp2*y2*y3+c1*c2*c3*cp1*cp2*y2*y3+c1*c2*cp3*y2*y3+c1*c3*cp3*y2*y3+cp1*cp3*y2*y3+c2*cp1*cp3*y2*y3+c3*cp1*cp3*y2*y3+c1*c2*c3*cp1*cp3*y2*y3+c1*cp2*cp3*y2*y3+c1*c2*cp1*cp2*cp3*y2*y3+c1*c3*cp1*cp2*cp3*y2*y3+c1*c3*m1*y2*y3+c2*c3*m1*y2*y3+c1*c3*cp1*m1*y2*y3+c2*c3*cp1*m1*y2*y3+c1*c3*cp2*m1*y2*y3+c2*c3*cp2*m1*y2*y3+cp1*cp2*m1*y2*y3+c3*cp1*cp2*m1*y2*y3+c2*c3*cp1*cp2*m1*y2*y3+c1*c2*c3*cp1*cp2*m1*y2*y3+c1*cp3*m1*y2*y3+c2*cp3*m1*y2*y3+c1*c3*cp3*m1*y2*y3+c2*c3*cp3*m1*y2*y3+c1*cp1*cp3*m1*y2*y3+c2*c3*cp1*cp3*m1*y2*y3+c1*c2*c3*cp1*cp3*m1*y2*y3+c1*cp2*cp3*m1*y2*y3+c2*cp2*cp3*m1*y2*y3+c3*cp2*cp3*m1*y2*y3+cp1*cp2*cp3*m1*y2*y3+c1*cp1*cp2*cp3*m1*y2*y3+c1*c3*m2*y2*y3+cp1*m2*y2*y3+c2*cp1*m2*y2*y3+c3*cp1*m2*y2*y3+c1*c3*cp1*m2*y2*y3+c1*c3*cp2*m2*y2*y3+cp1*cp2*m2*y2*y3+c1*c2*c3*cp1*cp2*m2*y2*y3+c1*cp3*m2*y2*y3+c1*c3*cp3*m2*y2*y3+cp1*cp3*m2*y2*y3+c2*cp1*cp3*m2*y2*y3+c3*cp1*cp3*m2*y2*y3+c1*c2*c3*cp1*cp3*m2*y2*y3+c1*cp2*cp3*m2*y2*y3+cp1*cp2*cp3*m2*y2*y3+c3*cp1*cp2*m1*m2*y2*y3+c2*c3*cp1*cp2*m1*m2*y2*y3+cp1*cp3*m1*m2*y2*y3+c1*c3*cp1*cp3*m1*m2*y2*y3+c2*c3*cp1*cp3*m1*m2*y2*y3+c3*cp2*cp3*m1*m2*y2*y3+cp1*cp2*cp3*m1*m2*y2*y3+c1*c3*cp1*cp2*cp3*m1*m2*y2*y3+c1*c3*m3*y2*y3+cp1*m3*y2*y3+c2*cp1*m3*y2*y3+c3*cp1*m3*y2*y3+c1*c3*cp1*m3*y2*y3+c1*c3*cp2*m3*y2*y3+c1*cp1*cp2*m3*y2*y3+c1*c2*c3*cp1*cp2*m3*y2*y3+cp1*cp3*m3*y2*y3+c2*cp1*cp3*m3*y2*y3+c1*c3*cp1*cp3*m3*y2*y3+c1*c2*c3*cp1*cp3*m3*y2*y3+c1*cp2*cp3*m3*y2*y3+m1*m3*y2*y3+c1*m1*m3*y2*y3+c2*m1*m3*y2*y3+c3*m1*m3*y2*y3+cp1*m1*m3*y2*y3+c1*cp1*m1*m3*y2*y3+c2*cp1*m1*m3*y2*y3+c3*cp1*m1*m3*y2*y3+cp2*m1*m3*y2*y3+c1*cp2*m1*m3*y2*y3+c2*cp2*m1*m3*y2*y3+c3*cp2*m1*m3*y2*y3+c1*cp1*cp2*m1*m3*y2*y3+c1*c2*cp1*cp2*m1*m3*y2*y3+c3*cp1*cp2*m1*m3*y2*y3+c1*c3*cp1*cp2*m1*m3*y2*y3+c2*c3*cp1*cp2*m1*m3*y2*y3+c1*cp3*m1*m3*y2*y3+c2*cp3*m1*m3*y2*y3+c1*cp1*cp3*m1*m3*y2*y3+c2*cp1*cp3*m1*m3*y2*y3+c3*cp1*cp3*m1*m3*y2*y3+c2*c3*cp1*cp3*m1*m3*y2*y3+c1*cp2*cp3*m1*m3*y2*y3+c2*cp2*cp3*m1*m3*y2*y3+c3*cp2*cp3*m1*m3*y2*y3+cp1*cp2*cp3*m1*m3*y2*y3+c1*cp1*cp2*cp3*m1*m3*y2*y3+c1*c2*cp1*cp2*cp3*m1*m3*y2*y3+c1*c3*cp1*cp2*cp3*m1*m3*y2*y3+c1*m2*m3*y2*y3+c1*cp1*m2*m3*y2*y3+c1*cp2*m2*m3*y2*y3+c1*cp1*cp2*m2*m3*y2*y3+c1*c2*cp1*cp2*m2*m3*y2*y3+c1*c3*cp1*cp2*m2*m3*y2*y3+c1*cp3*m2*m3*y2*y3+c1*cp1*cp3*m2*m3*y2*y3+c1*c3*cp1*cp3*m2*m3*y2*y3+c1*cp2*cp3*m2*m3*y2*y3+c1*cp1*cp2*cp3*m2*m3*y2*y3+c1*c2*cp1*cp2*cp3*m2*m3*y2*y3+c2*cp1*cp2*m1*m2*m3*y2*y3+c3*cp1*cp2*m1*m2*m3*y2*y3+c3*cp1*cp3*m1*m2*m3*y2*y3+c2*cp1*cp2*cp3*m1*m2*m3*y2*y3+(1/2)*c2*cp1*y3*(1+y3)+(1/2)*c2*c3*cp1*y3*(1+y3)+(1/2)*c3*cp1*cp2*y3*(1+y3)+(1/2)*c1*c3*cp1*cp2*y3*(1+y3)+(1/2)*c1*c2*cp3*y3*(1+y3)+(1/2)*c2*cp1*cp3*y3*(1+y3)+(1/2)*c2*c3*cp1*cp3*y3*(1+y3)+(1/2)*c1*cp2*cp3*y3*(1+y3)+(1/2)*c1*c3*cp2*cp3*y3*(1+y3)+(1/2)*c1*cp1*cp2*cp3*y3*(1+y3)+(1/2)*c1*c3*cp1*cp2*m1*y3*(1+y3)+(1/2)*c2*c3*cp1*cp2*m1*y3*(1+y3)+(1/2)*c2*cp1*cp3*m1*y3*(1+y3)+(1/2)*c1*c3*cp2*cp3*m1*y3*(1+y3)+(1/2)*c2*c3*cp2*cp3*m1*y3*(1+y3)+(1/2)*cp1*m2*y3*(1+y3)+(1/2)*c2*cp1*m2*y3*(1+y3)+(1/2)*c3*cp1*m2*y3*(1+y3)+(1/2)*c2*c3*cp1*m2*y3*(1+y3)+(1/2)*c2*cp1*cp2*m2*y3*(1+y3)+(1/2)*c3*cp1*cp2*m2*y3*(1+y3)+(1/2)*c1*c3*cp1*cp2*m2*y3*(1+y3)+(1/2)*c2*c3*cp1*cp2*m2*y3*(1+y3)+(1/2)*cp1*cp3*m2*y3*(1+y3)+(1/2)*c1*cp1*cp3*m2*y3*(1+y3)+(1/2)*c1*cp2*cp3*m2*y3*(1+y3)+(1/2)*c1*c3*cp2*cp3*m2*y3*(1+y3)+(1/2)*c3*cp1*cp2*cp3*m2*y3*(1+y3)+(1/2)*c3*cp1*cp2*m1*m2*y3*(1+y3)+(1/2)*cp1*cp3*m1*m2*y3*(1+y3)+(1/2)*c3*cp2*cp3*m1*m2*y3*(1+y3)+(1/2)*cp1*cp2*cp3*m1*m2*y3*(1+y3)+(1/2)*c2*cp1*m3*y3*(1+y3)+(1/2)*c2*c3*cp1*m3*y3*(1+y3)+(1/2)*c1*c3*cp1*cp2*m3*y3*(1+y3)+(1/2)*c2*c3*cp1*cp2*m3*y3*(1+y3)+(1/2)*c2*cp1*cp3*m3*y3*(1+y3)+(1/2)*c1*c3*cp2*cp3*m3*y3*(1+y3)+(1/2)*cp1*cp2*cp3*m3*y3*(1+y3)+(1/2)*c2*cp1*cp2*cp3*m3*y3*(1+y3)+(1/2)*c3*cp1*cp2*cp3*m3*y3*(1+y3)+(1/2)*c1*cp1*cp2*m1*m3*y3*(1+y3)+(1/2)*c2*cp1*cp2*m1*m3*y3*(1+y3)+(1/2)*c1*cp1*cp2*cp3*m1*m3*y3*(1+y3)+(1/2)*c2*cp1*cp2*cp3*m1*m3*y3*(1+y3)+(1/2)*cp1*m2*m3*y3*(1+y3)+(1/2)*c2*cp1*m2*m3*y3*(1+y3)+(1/2)*c3*cp1*m2*m3*y3*(1+y3)+(1/2)*cp1*cp2*m2*m3*y3*(1+y3)+(1/2)*c1*cp1*cp2*m2*m3*y3*(1+y3)+(1/2)*c2*cp1*cp2*m2*m3*y3*(1+y3)+(1/2)*c3*cp1*cp2*m2*m3*y3*(1+y3)+(1/2)*c2*cp1*cp3*m2*m3*y3*(1+y3)+(1/2)*c1*cp1*cp2*cp3*m2*m3*y3*(1+y3)+(1/2)*c2*cp1*cp2*cp3*m2*m3*y3*(1+y3)+(1/2)*cp1*cp2*m1*m2*m3*y3*(1+y3)+(1/2)*cp1*cp2*cp3*m1*m2*m3*y3*(1+y3)+c1*c3*cp2*z1+c2*c3*cp2*z1+c1*c3*cp1*cp2*z1+c1*c2*c3*cp1*cp2*z1+c1*c2*c3*cp3*z1+c2*cp1*cp3*z1+c1*c2*cp1*cp3*z1+c2*c3*cp1*cp3*z1+c1*c2*cp2*cp3*z1+c2*c3*cp2*cp3*z1+c1*c2*c3*cp2*cp3*z1+c1*c3*cp1*cp2*cp3*z1+c1*c2*c3*cp1*cp2*cp3*z1+c2*c3*cp1*m1*z1+c1*c2*c3*cp1*m1*z1+c1*c2*c3*cp2*m1*z1+c1*c3*cp1*cp2*m1*z1+c1*c2*cp3*m1*z1+cp1*cp2*cp3*m1*z1+c2*cp1*cp2*cp3*m1*z1+c2*c3*m2*z1+c1*c2*c3*m2*z1+c2*c3*cp1*m2*z1+c1*c2*c3*cp1*m2*z1+c1*c3*cp2*m2*z1+c1*c2*c3*cp2*m2*z1+c2*c3*cp1*cp2*m2*z1+c1*c2*c3*cp1*cp2*m2*z1+c1*cp3*m2*z1+c2*cp3*m2*z1+c1*c3*cp3*m2*z1+c1*c2*c3*cp3*m2*z1+cp1*cp3*m2*z1+c1*c3*cp1*cp3*m2*z1+c1*c2*c3*cp1*cp3*m2*z1+cp2*cp3*m2*z1+c1*cp2*cp3*m2*z1+c3*cp2*cp3*m2*z1+c1*c3*cp2*cp3*m2*z1+c1*c2*cp1*cp2*cp3*m2*z1+c3*cp1*cp2*cp3*m2*z1+c2*c3*cp1*cp2*cp3*m2*z1+c1*c3*cp1*m1*m2*z1+c2*c3*cp1*m1*m2*z1+c3*cp2*m1*m2*z1+c2*c3*cp2*m1*m2*z1+c1*cp3*m1*m2*z1+c1*c2*cp3*m1*m2*z1+c2*c3*cp3*m1*m2*z1+cp1*cp3*m1*m2*z1+c1*c2*cp1*cp3*m1*m2*z1+c3*cp1*cp3*m1*m2*z1+cp2*cp3*m1*m2*z1+c2*cp2*cp3*m1*m2*z1+c1*c2*cp2*cp3*m1*m2*z1+c1*c2*cp1*m3*z1+c2*c3*cp1*m3*z1+c1*cp2*m3*z1+c2*cp2*m3*z1+c1*c2*cp1*cp2*m3*z1+c1*c3*cp1*cp2*m3*z1+c1*c2*cp3*m3*z1+c1*c2*cp2*cp3*m3*z1+c1*c3*cp2*cp3*m3*z1+c2*c3*cp2*cp3*m3*z1+c2*cp1*cp2*cp3*m3*z1+c1*c2*cp1*cp2*cp3*m3*z1+c2*cp1*m1*m3*z1+c1*cp2*m1*m3*z1+c1*c2*cp2*m1*m3*z1+c1*c3*cp2*m1*m3*z1+cp1*cp2*m1*m3*z1+c1*cp1*cp2*m1*m3*z1+c3*cp1*cp2*m1*m3*z1+c1*c2*cp1*cp3*m1*m3*z1+c1*cp2*cp3*m1*m3*z1+c1*c2*cp2*cp3*m1*m3*z1+cp1*cp2*cp3*m1*m3*z1+c1*cp1*cp2*cp3*m1*m3*z1+c1*c3*m2*m3*z1+c2*c3*m2*m3*z1+c1*cp1*m2*m3*z1+c1*c2*cp1*m2*m3*z1+c3*cp1*m2*m3*z1+c1*c3*cp1*m2*m3*z1+c1*cp2*m2*m3*z1+c2*cp2*m2*m3*z1+c3*cp2*m2*m3*z1+c1*c3*cp1*cp2*m2*m3*z1+c1*c2*c3*cp1*cp2*m2*m3*z1+c1*c3*cp3*m2*m3*z1+c2*c3*cp3*m2*m3*z1+c2*cp1*cp3*m2*m3*z1+c1*cp1*cp2*cp3*m2*m3*z1+c2*cp1*cp2*cp3*m2*m3*z1+c1*c3*cp1*cp2*cp3*m2*m3*z1+c1*c2*c3*cp1*cp2*cp3*m2*m3*z1+c2*m1*m2*m3*z1+c2*cp1*m1*m2*m3*z1+c3*cp1*m1*m2*m3*z1+cp2*m1*m2*m3*z1+c3*cp2*m1*m2*m3*z1+cp1*cp2*m1*m2*m3*z1+c3*cp1*cp2*m1*m2*m3*z1+c2*c3*cp1*cp2*m1*m2*m3*z1+c1*cp1*cp3*m1*m2*m3*z1+c3*cp2*cp3*m1*m2*m3*z1+cp1*cp2*cp3*m1*m2*m3*z1+c3*cp1*cp2*cp3*m1*m2*m3*z1+c2*c3*cp1*cp2*cp3*m1*m2*m3*z1+c3*cp2*x1*z1+c1*c3*cp2*x1*z1+c3*cp1*cp2*x1*z1+c1*c2*cp3*x1*z1+c2*c3*cp3*x1*z1+c1*cp2*cp3*x1*z1+c2*cp2*cp3*x1*z1+c3*cp2*cp3*x1*z1+c3*cp2*m1*x1*z1+c3*cp1*cp2*m1*x1*z1+c2*cp3*m1*x1*z1+cp2*cp3*m1*x1*z1+c1*cp2*cp3*m1*x1*z1+c2*cp2*cp3*m1*x1*z1+c3*cp1*cp2*m2*x1*z1+c3*cp3*m2*x1*z1+cp2*cp3*m2*x1*z1+c2*cp2*cp3*m2*x1*z1+c3*cp2*cp3*m2*x1*z1+c1*cp2*m3*x1*z1+c1*cp1*cp2*m3*x1*z1+c2*cp1*cp2*m3*x1*z1+c3*cp1*cp2*m3*x1*z1+c2*cp3*m3*x1*z1+c1*cp2*cp3*m3*x1*z1+c2*cp2*cp3*m3*x1*z1+c3*cp2*cp3*m3*x1*z1+cp2*m1*m3*x1*z1+cp1*cp2*m1*m3*x1*z1+cp2*cp3*m1*m3*x1*z1+cp1*cp2*cp3*m1*m3*x1*z1+cp3*m2*m3*x1*z1+cp2*cp3*m2*m3*x1*z1+cp1*cp2*cp3*m2*m3*x1*z1+c1*c3*x2*z1+c2*c3*cp1*x2*z1+c1*c3*cp2*x2*z1+c1*c3*cp1*cp2*x2*z1+c2*c3*cp1*cp2*x2*z1+c1*cp3*x2*z1+c2*cp3*x2*z1+c1*c2*cp3*x2*z1+c3*cp3*x2*z1+c1*c3*cp3*x2*z1+c2*c3*cp3*x2*z1+c1*c2*cp1*cp3*x2*z1+c1*cp2*cp3*x2*z1+c2*cp2*cp3*x2*z1+c1*c2*cp2*cp3*x2*z1+c3*cp2*cp3*x2*z1+c3*cp1*m1*x2*z1+cp1*cp3*m1*x2*z1+c1*cp1*cp3*m1*x2*z1+c2*cp1*cp3*m1*x2*z1+c3*cp1*cp3*m1*x2*z1+cp1*cp2*cp3*m1*x2*z1+c2*cp1*cp2*cp3*m1*x2*z1+c3*m2*x2*z1+c3*cp2*m2*x2*z1+cp3*m2*x2*z1+c1*cp3*m2*x2*z1+c2*cp3*m2*x2*z1+c3*cp1*cp3*m2*x2*z1+cp2*cp3*m2*x2*z1+c1*cp2*cp3*m2*x2*z1+c2*cp2*cp3*m2*x2*z1+c3*cp2*cp3*m2*x2*z1+cp1*cp2*cp3*m2*x2*z1+c1*cp1*cp2*cp3*m2*x2*z1+c2*cp1*cp2*cp3*m2*x2*z1+cp1*cp2*cp3*m1*m2*x2*z1+c1*m3*x2*z1+c2*m3*x2*z1+c3*m3*x2*z1+c1*cp2*m3*x2*z1+c2*cp2*m3*x2*z1+c3*cp2*m3*x2*z1+c1*cp3*m3*x2*z1+c3*cp3*m3*x2*z1+c2*cp1*cp3*m3*x2*z1+c2*cp2*cp3*m3*x2*z1+c3*cp2*cp3*m3*x2*z1+c1*cp1*cp2*cp3*m3*x2*z1+c2*cp1*cp2*cp3*m3*x2*z1+cp1*m1*m3*x2*z1+cp1*cp2*cp3*m1*m3*x2*z1+cp1*m2*m3*x2*z1+cp3*m2*m3*x2*z1+cp1*cp3*m2*m3*x2*z1+cp1*cp2*cp3*m2*m3*x2*z1+c1*c2*x3*z1+c2*c3*x3*z1+c2*c3*cp1*x3*z1+c1*c2*cp2*x3*z1+c2*c3*cp2*x3*z1+c1*c2*cp1*cp2*x3*z1+c2*c3*cp1*cp2*x3*z1+c1*c2*c3*cp1*cp2*x3*z1+c1*c2*cp3*x3*z1+c2*c3*cp3*x3*z1+c1*c2*cp1*cp3*x3*z1+c2*c3*cp1*cp3*x3*z1+c1*c2*c3*cp1*cp3*x3*z1+c1*c2*cp2*cp3*x3*z1+c1*c3*cp2*cp3*x3*z1+c1*c2*cp1*cp2*cp3*x3*z1+c1*c3*cp1*cp2*cp3*x3*z1+c2*cp1*m1*x3*z1+c2*c3*cp1*cp2*m1*x3*z1+c2*c3*cp1*cp3*m1*x3*z1+m2*x3*z1+c1*m2*x3*z1+c2*m2*x3*z1+c3*m2*x3*z1+cp1*m2*x3*z1+c2*cp1*m2*x3*z1+c3*cp1*m2*x3*z1+cp2*m2*x3*z1+c1*cp2*m2*x3*z1+c2*cp2*m2*x3*z1+c3*cp2*m2*x3*z1+cp1*cp2*m2*x3*z1+c2*cp1*cp2*m2*x3*z1+c1*c2*cp1*cp2*m2*x3*z1+c3*cp1*cp2*m2*x3*z1+c1*c2*c3*cp1*cp2*m2*x3*z1+cp3*m2*x3*z1+c1*cp3*m2*x3*z1+c2*cp3*m2*x3*z1+c3*cp3*m2*x3*z1+cp1*cp3*m2*x3*z1+c2*cp1*cp3*m2*x3*z1+c1*c2*cp1*cp3*m2*x3*z1+c3*cp1*cp3*m2*x3*z1+c1*c2*c3*cp1*cp3*m2*x3*z1+cp2*cp3*m2*x3*z1+c1*cp2*cp3*m2*x3*z1+c2*cp2*cp3*m2*x3*z1+cp1*cp2*cp3*m2*x3*z1+c1*cp1*cp2*cp3*m2*x3*z1+c2*cp1*cp2*cp3*m2*x3*z1+cp1*m1*m2*x3*z1+cp1*cp2*m1*m2*x3*z1+c2*cp1*cp2*m1*m2*x3*z1+c2*c3*cp1*cp2*m1*m2*x3*z1+cp1*cp3*m1*m2*x3*z1+c2*cp1*cp3*m1*m2*x3*z1+c2*c3*cp1*cp3*m1*m2*x3*z1+c1*c2*cp1*cp2*m3*x3*z1+c1*c2*c3*cp1*cp2*m3*x3*z1+c1*c2*cp1*cp3*m3*x3*z1+c1*c2*c3*cp1*cp3*m3*x3*z1+c2*cp1*cp2*m1*m3*x3*z1+c2*c3*cp1*cp2*m1*m3*x3*z1+c2*cp1*cp3*m1*m3*x3*z1+c2*c3*cp1*cp3*m1*m3*x3*z1+c1*c2*cp1*cp2*m2*m3*x3*z1+c1*c3*cp1*cp2*m2*m3*x3*z1+c1*cp1*cp3*m2*m3*x3*z1+c1*c3*cp1*cp3*m2*m3*x3*z1+c1*cp1*cp2*cp3*m2*m3*x3*z1+c1*c2*cp1*cp2*cp3*m2*m3*x3*z1+c2*cp1*cp2*m1*m2*m3*x3*z1+c3*cp1*cp2*m1*m2*m3*x3*z1+cp1*cp3*m1*m2*m3*x3*z1+c3*cp1*cp3*m1*m2*m3*x3*z1+cp1*cp2*cp3*m1*m2*m3*x3*z1+c2*cp1*cp2*cp3*m1*m2*m3*x3*z1+c1*c3*cp2*y1*z1+c3*cp1*cp2*y1*z1+c2*cp3*y1*z1+c1*c2*cp3*y1*z1+c2*c3*cp3*y1*z1+c2*cp1*cp3*y1*z1+cp2*cp3*y1*z1+c3*cp2*cp3*y1*z1+c3*cp2*m1*y1*z1+c3*cp1*cp2*m1*y1*z1+c2*cp3*m1*y1*z1+cp2*cp3*m1*y1*z1+c1*cp2*cp3*m1*y1*z1+c2*cp2*cp3*m1*y1*z1+cp1*cp2*cp3*m1*y1*z1+c3*cp1*cp2*m2*y1*z1+c3*cp3*m2*y1*z1+cp2*cp3*m2*y1*z1+c2*cp2*cp3*m2*y1*z1+c3*cp2*cp3*m2*y1*z1+cp2*m3*y1*z1+c1*cp2*m3*y1*z1+cp1*cp2*m3*y1*z1+c1*cp1*cp2*m3*y1*z1+c2*cp1*cp2*m3*y1*z1+c3*cp1*cp2*m3*y1*z1+c2*cp3*m3*y1*z1+cp2*cp3*m3*y1*z1+c1*cp2*cp3*m3*y1*z1+c2*cp2*cp3*m3*y1*z1+c3*cp2*cp3*m3*y1*z1+cp2*m1*m3*y1*z1+cp1*cp2*m1*m3*y1*z1+cp2*cp3*m1*m3*y1*z1+cp1*cp2*cp3*m1*m3*y1*z1+cp3*m2*m3*y1*z1+cp2*cp3*m2*m3*y1*z1+cp1*cp2*cp3*m2*m3*y1*z1+c1*c3*y2*z1+c2*c3*cp1*y2*z1+c1*c3*cp2*y2*z1+c3*cp1*cp2*y2*z1+c2*c3*cp1*cp2*y2*z1+c1*cp3*y2*z1+c2*cp3*y2*z1+c1*c2*cp3*y2*z1+c1*c3*cp3*y2*z1+c2*c3*cp3*y2*z1+c1*cp1*cp3*y2*z1+c3*cp1*cp3*y2*z1+c1*c3*cp1*cp3*y2*z1+cp2*cp3*y2*z1+c1*c2*cp2*cp3*y2*z1+c3*cp2*cp3*y2*z1+c3*cp1*m1*y2*z1+c3*cp1*cp2*m1*y2*z1+c1*cp1*cp3*m1*y2*z1+c2*cp1*cp2*cp3*m1*y2*z1+c3*m2*y2*z1+c3*cp2*m2*y2*z1+c1*c3*cp1*cp2*m2*y2*z1+cp3*m2*y2*z1+c1*cp3*m2*y2*z1+c2*cp3*m2*y2*z1+c1*c2*cp1*cp3*m2*y2*z1+c3*cp1*cp3*m2*y2*z1+c1*c3*cp1*cp3*m2*y2*z1+c1*cp2*cp3*m2*y2*z1+c2*cp2*cp3*m2*y2*z1+c3*cp2*cp3*m2*y2*z1+c1*cp1*cp2*cp3*m2*y2*z1+c2*cp1*cp2*cp3*m2*y2*z1+c3*cp1*cp2*m1*m2*y2*z1+c2*cp1*cp3*m1*m2*y2*z1+c3*cp1*cp3*m1*m2*y2*z1+cp1*cp2*cp3*m1*m2*y2*z1+c1*m3*y2*z1+c2*m3*y2*z1+c3*m3*y2*z1+c1*cp2*m3*y2*z1+c2*cp2*m3*y2*z1+c3*cp2*m3*y2*z1+c1*c2*cp1*cp2*m3*y2*z1+c1*c3*cp1*cp2*m3*y2*z1+cp3*m3*y2*z1+c1*cp3*m3*y2*z1+c3*cp3*m3*y2*z1+cp1*cp3*m3*y2*z1+c2*cp1*cp3*m3*y2*z1+c1*c2*cp1*cp3*m3*y2*z1+c1*c3*cp1*cp3*m3*y2*z1+cp2*cp3*m3*y2*z1+c2*cp2*cp3*m3*y2*z1+c3*cp2*cp3*m3*y2*z1+c1*cp1*cp2*cp3*m3*y2*z1+c2*cp1*cp2*cp3*m3*y2*z1+cp1*m1*m3*y2*z1+c2*cp1*cp2*m1*m3*y2*z1+c3*cp1*cp2*m1*m3*y2*z1+c2*cp1*cp3*m1*m3*y2*z1+c3*cp1*cp3*m1*m3*y2*z1+cp1*cp2*cp3*m1*m3*y2*z1+cp1*m2*m3*y2*z1+cp3*m2*m3*y2*z1+cp1*cp3*m2*m3*y2*z1+c1*cp1*cp3*m2*m3*y2*z1+cp1*cp2*cp3*m2*m3*y2*z1+c1*cp1*cp2*cp3*m2*m3*y2*z1+cp1*cp3*m1*m2*m3*y2*z1+cp1*cp2*cp3*m1*m2*m3*y2*z1+c1*c2*y3*z1+c2*c3*y3*z1+c2*cp1*y3*z1+c2*c3*cp1*y3*z1+c1*cp2*y3*z1+c2*cp2*y3*z1+c1*c2*cp2*y3*z1+c2*c3*cp2*y3*z1+cp1*cp2*y3*z1+c2*cp1*cp2*y3*z1+c3*cp1*cp2*y3*z1+c1*c3*cp1*cp2*y3*z1+c2*c3*cp1*cp2*y3*z1+c1*c2*c3*cp1*cp2*y3*z1+c1*c2*cp3*y3*z1+c2*c3*cp3*y3*z1+c2*cp1*cp3*y3*z1+c1*c2*c3*cp1*cp3*y3*z1+cp2*cp3*y3*z1+c1*c2*cp2*cp3*y3*z1+c3*cp2*cp3*y3*z1+c2*c3*cp2*cp3*y3*z1+c1*c2*cp1*cp2*cp3*y3*z1+c1*c3*cp1*cp2*cp3*y3*z1+c2*cp1*m1*y3*z1+cp1*cp2*m1*y3*z1+c2*cp1*cp2*m1*y3*z1+c3*cp1*cp2*m1*y3*z1+c2*c3*cp1*cp2*m1*y3*z1+c2*cp1*cp3*m1*y3*z1+c2*c3*cp1*cp3*m1*y3*z1+c3*cp1*cp2*cp3*m1*y3*z1+m2*y3*z1+c1*m2*y3*z1+c2*m2*y3*z1+c3*m2*y3*z1+c2*cp1*m2*y3*z1+c3*cp1*m2*y3*z1+c1*cp2*m2*y3*z1+c2*cp2*m2*y3*z1+c3*cp2*m2*y3*z1+cp1*cp2*m2*y3*z1+c2*cp1*cp2*m2*y3*z1+c3*cp1*cp2*m2*y3*z1+c1*c3*cp1*cp2*m2*y3*z1+c1*c2*c3*cp1*cp2*m2*y3*z1+cp3*m2*y3*z1+c1*cp3*m2*y3*z1+c2*cp3*m2*y3*z1+c3*cp3*m2*y3*z1+c2*cp1*cp3*m2*y3*z1+c1*c3*cp1*cp3*m2*y3*z1+c1*c2*c3*cp1*cp3*m2*y3*z1+cp2*cp3*m2*y3*z1+c1*cp2*cp3*m2*y3*z1+c2*cp2*cp3*m2*y3*z1+c3*cp2*cp3*m2*y3*z1+c1*cp1*cp2*cp3*m2*y3*z1+c2*cp1*cp2*cp3*m2*y3*z1+cp1*m1*m2*y3*z1+cp1*cp2*m1*m2*y3*z1+c3*cp1*cp2*m1*m2*y3*z1+c2*c3*cp1*cp2*m1*m2*y3*z1+cp1*cp3*m1*m2*y3*z1+c3*cp1*cp3*m1*m2*y3*z1+c2*c3*cp1*cp3*m1*m2*y3*z1+c1*c3*cp1*cp2*m3*y3*z1+c1*c2*c3*cp1*cp2*m3*y3*z1+c2*c3*cp1*cp3*m3*y3*z1+c1*c2*c3*cp1*cp3*m3*y3*z1+c1*c3*cp2*cp3*m3*y3*z1+c2*c3*cp2*cp3*m3*y3*z1+c3*cp1*cp2*m1*m3*y3*z1+c2*c3*cp1*cp2*m1*m3*y3*z1+c2*c3*cp1*cp3*m1*m3*y3*z1+c3*cp1*cp2*cp3*m1*m3*y3*z1+c1*c2*cp1*cp2*m2*m3*y3*z1+c1*c3*cp1*cp2*m2*m3*y3*z1+c3*cp1*cp3*m2*m3*y3*z1+c1*c3*cp1*cp3*m2*m3*y3*z1+c3*cp2*cp3*m2*m3*y3*z1+c1*c2*cp1*cp2*cp3*m2*m3*y3*z1+c2*cp1*cp2*m1*m2*m3*y3*z1+c3*cp1*cp2*m1*m2*m3*y3*z1+c3*cp1*cp3*m1*m2*m3*y3*z1+c2*cp1*cp2*cp3*m1*m2*m3*y3*z1+(1/2)*c2*c3*cp1*z1*(1+z1)+(1/2)*c2*c3*cp2*z1*(1+z1)+(1/2)*c3*cp1*cp2*z1*(1+z1)+(1/2)*c1*c2*cp3*z1*(1+z1)+(1/2)*c2*c3*cp3*z1*(1+z1)+(1/2)*c1*cp2*cp3*z1*(1+z1)+(1/2)*c2*cp2*cp3*z1*(1+z1)+(1/2)*c3*cp2*cp3*z1*(1+z1)+(1/2)*c2*cp3*m1*z1*(1+z1)+(1/2)*c2*cp1*cp3*m1*z1*(1+z1)+(1/2)*cp1*cp2*cp3*m1*z1*(1+z1)+(1/2)*c3*cp2*m2*z1*(1+z1)+(1/2)*c3*cp1*cp2*m2*z1*(1+z1)+(1/2)*cp3*m2*z1*(1+z1)+(1/2)*c1*cp3*m2*z1*(1+z1)+(1/2)*c2*cp3*m2*z1*(1+z1)+(1/2)*cp1*cp3*m2*z1*(1+z1)+(1/2)*c1*cp1*cp3*m2*z1*(1+z1)+(1/2)*c2*cp1*cp3*m2*z1*(1+z1)+(1/2)*c1*cp2*cp3*m2*z1*(1+z1)+(1/2)*c3*cp2*cp3*m2*z1*(1+z1)+(1/2)*cp3*m1*m2*z1*(1+z1)+(1/2)*cp1*cp3*m1*m2*z1*(1+z1)+(1/2)*cp2*cp3*m1*m2*z1*(1+z1)+(1/2)*cp1*cp2*cp3*m1*m2*z1*(1+z1)+(1/2)*c2*cp2*m3*z1*(1+z1)+(1/2)*c3*cp2*m3*z1*(1+z1)+(1/2)*c2*cp1*cp2*m3*z1*(1+z1)+(1/2)*c3*cp1*cp2*m3*z1*(1+z1)+(1/2)*c2*cp3*m3*z1*(1+z1)+(1/2)*c2*cp1*cp3*m3*z1*(1+z1)+(1/2)*c3*cp2*cp3*m3*z1*(1+z1)+(1/2)*m2*m3*z1*(1+z1)+(1/2)*cp3*m2*m3*z1*(1+z1)+(1/2)*cp1*cp3*m2*m3*z1*(1+z1)+(1/2)*cp2*cp3*m2*m3*z1*(1+z1)+(1/2)*cp1*cp2*cp3*m2*m3*z1*(1+z1)+c1*c2*c3*cp1*z2+c1*c2*c3*cp1*cp2*z2+c1*c3*cp1*cp2*cp3*z2+c1*c2*c3*cp1*cp2*cp3*z2+c1*c2*c3*cp1*m1*z2+c3*cp1*cp2*m1*z2+c1*c3*cp1*cp2*m1*z2+c2*c3*cp1*cp2*m1*z2+c1*c2*c3*cp1*cp2*m1*z2+c2*cp1*cp3*m1*z2+c2*c3*cp1*cp3*m1*z2+c1*c2*c3*cp1*cp3*m1*z2+c1*cp1*cp2*cp3*m1*z2+c2*cp1*cp2*cp3*m1*z2+c1*c2*cp1*cp2*cp3*m1*z2+c1*c3*cp1*cp2*cp3*m1*z2+c1*c2*c3*cp1*m2*z2+c1*c3*cp1*cp2*m2*z2+c1*c2*cp1*cp3*m2*z2+c3*cp2*m1*m2*z2+c2*c3*cp2*m1*m2*z2+c3*cp1*cp2*m1*m2*z2+c2*c3*cp1*cp2*m1*m2*z2+c2*c3*cp3*m1*m2*z2+c1*c2*cp1*cp3*m1*m2*z2+c3*cp1*cp3*m1*m2*z2+c2*c3*cp1*cp3*m1*m2*z2+cp2*cp3*m1*m2*z2+c2*cp2*cp3*m1*m2*z2+cp1*cp2*cp3*m1*m2*z2+c2*cp1*cp2*cp3*m1*m2*z2+c1*c3*cp1*cp2*cp3*m1*m2*z2+c1*c2*cp1*m3*z2+c1*c2*cp1*cp2*m3*z2+c1*c2*c3*cp1*cp2*m3*z2+c1*c2*cp1*cp3*m3*z2+c1*c2*c3*cp1*cp3*m3*z2+c1*c2*cp1*cp2*cp3*m3*z2+c2*cp1*cp2*m1*m3*z2+c1*c2*cp1*cp2*m1*m3*z2+c3*cp1*cp2*m1*m3*z2+c1*cp1*cp3*m1*m3*z2+c2*cp1*cp3*m1*m3*z2+c1*c2*cp1*cp3*m1*m3*z2+c3*cp1*cp3*m1*m3*z2+c2*c3*cp1*cp3*m1*m3*z2+c1*c2*c3*cp1*cp3*m1*m3*z2+c1*c2*c3*cp1*cp2*cp3*m1*m3*z2+c1*c2*cp1*m2*m3*z2+c1*c3*cp1*m2*m3*z2+c1*c3*cp1*cp2*m2*m3*z2+c1*c2*c3*cp1*cp2*m2*m3*z2+c1*cp1*cp3*m2*m3*z2+c1*c2*cp1*cp3*m2*m3*z2+c1*cp1*cp2*cp3*m2*m3*z2+c1*c2*cp1*cp2*cp3*m2*m3*z2+c1*c3*cp1*cp2*cp3*m2*m3*z2+c1*c2*c3*cp1*cp2*cp3*m2*m3*z2+c2*m1*m2*m3*z2+cp1*m1*m2*m3*z2+c1*cp1*m1*m2*m3*z2+c3*cp1*m1*m2*m3*z2+cp2*m1*m2*m3*z2+c3*cp2*m1*m2*m3*z2+cp1*cp2*m1*m2*m3*z2+c1*cp1*cp2*m1*m2*m3*z2+c1*c2*cp1*cp2*m1*m2*m3*z2+c1*c3*cp1*cp2*m1*m2*m3*z2+c2*c3*cp1*cp2*m1*m2*m3*z2+c1*c2*c3*cp1*cp2*m1*m2*m3*z2+c1*cp1*cp3*m1*m2*m3*z2+c2*cp1*cp3*m1*m2*m3*z2+c1*c3*cp1*cp3*m1*m2*m3*z2+c2*c3*cp1*cp3*m1*m2*m3*z2+c1*c2*c3*cp1*cp3*m1*m2*m3*z2+c3*cp2*cp3*m1*m2*m3*z2+cp1*cp2*cp3*m1*m2*m3*z2+c2*cp1*cp2*cp3*m1*m2*m3*z2+c1*c2*cp1*cp2*cp3*m1*m2*m3*z2+c3*cp1*cp2*cp3*m1*m2*m3*z2+c3*x1*z2+c1*c3*x1*z2+c3*cp1*x1*z2+c1*c3*cp1*x1*z2+c3*cp2*x1*z2+c2*c3*cp1*cp2*x1*z2+cp3*x1*z2+c1*cp3*x1*z2+c1*c3*cp3*x1*z2+c2*c3*cp3*x1*z2+c1*c3*cp1*cp3*x1*z2+c1*cp2*cp3*x1*z2+c2*cp2*cp3*x1*z2+c1*c2*cp2*cp3*x1*z2+c3*cp2*cp3*x1*z2+c1*c3*m1*x1*z2+c1*c3*cp1*m1*x1*z2+c3*cp2*m1*x1*z2+c1*c3*cp2*m1*x1*z2+c2*cp3*m1*x1*z2+c1*c2*cp3*m1*x1*z2+c1*c3*cp3*m1*x1*z2+c2*cp1*cp3*m1*x1*z2+c3*cp1*cp3*m1*x1*z2+cp2*cp3*m1*x1*z2+c2*cp2*cp3*m1*x1*z2+cp1*cp2*cp3*m1*x1*z2+c2*cp1*cp2*cp3*m1*x1*z2+c1*c3*m2*x1*z2+c1*c3*cp1*m2*x1*z2+c3*cp2*m2*x1*z2+c1*c3*cp2*m2*x1*z2+c3*cp1*cp2*m2*x1*z2+c2*cp3*m2*x1*z2+c1*c2*cp3*m2*x1*z2+c1*c3*cp3*m2*x1*z2+c2*cp1*cp3*m2*x1*z2+c3*cp1*cp3*m2*x1*z2+c2*cp2*cp3*m2*x1*z2+c3*cp2*cp3*m2*x1*z2+cp1*cp2*cp3*m2*x1*z2+c2*cp1*cp2*cp3*m2*x1*z2+c1*cp2*cp3*m1*m2*x1*z2+c1*c2*m3*x1*z2+c1*c3*m3*x1*z2+c1*c2*cp1*m3*x1*z2+c1*c3*cp1*m3*x1*z2+c1*cp2*m3*x1*z2+c2*cp2*m3*x1*z2+c1*c2*cp2*m3*x1*z2+c3*cp2*m3*x1*z2+c1*c3*cp2*m3*x1*z2+cp1*cp2*m3*x1*z2+c1*cp1*cp2*m3*x1*z2+c2*cp1*cp2*m3*x1*z2+c3*cp1*cp2*m3*x1*z2+c1*c2*cp3*m3*x1*z2+c3*cp3*m3*x1*z2+c1*c3*cp3*m3*x1*z2+c1*cp2*cp3*m3*x1*z2+c2*cp2*cp3*m3*x1*z2+c3*cp2*cp3*m3*x1*z2+cp1*cp2*cp3*m3*x1*z2+c1*cp1*cp2*cp3*m3*x1*z2+c2*cp1*cp2*cp3*m3*x1*z2+cp1*m1*m3*x1*z2+cp2*m1*m3*x1*z2+cp1*cp2*m1*m3*x1*z2+c1*cp1*cp2*m1*m3*x1*z2+c1*cp1*cp3*m1*m3*x1*z2+cp2*cp3*m1*m3*x1*z2+cp1*cp2*cp3*m1*m3*x1*z2+cp1*m2*m3*x1*z2+c1*cp1*cp3*m2*m3*x1*z2+c1*cp2*cp3*m2*m3*x1*z2+c3*cp1*cp2*x2*z2+cp1*cp3*x2*z2+c1*cp1*cp3*x2*z2+c1*c3*cp1*cp2*m1*x2*z2+cp1*cp3*m1*x2*z2+c1*cp1*cp3*m1*x2*z2+c1*c2*cp1*cp3*m1*x2*z2+c1*c3*cp1*cp3*m1*x2*z2+c1*c3*cp1*cp2*m2*x2*z2+cp1*cp3*m2*x2*z2+c1*cp1*cp3*m2*x2*z2+c2*cp1*cp3*m2*x2*z2+c1*c2*cp1*cp3*m2*x2*z2+c3*cp1*cp3*m2*x2*z2+c1*c3*cp1*cp3*m2*x2*z2+cp1*cp2*cp3*m2*x2*z2+c1*cp1*cp2*cp3*m2*x2*z2+c3*cp1*cp2*m1*m2*x2*z2+c1*c3*cp1*cp2*m1*m2*x2*z2+cp1*cp3*m1*m2*x2*z2+c1*cp1*cp3*m1*m2*x2*z2+c2*cp1*cp3*m1*m2*x2*z2+c1*c2*cp1*cp3*m1*m2*x2*z2+c3*cp1*cp3*m1*m2*x2*z2+c1*c3*cp1*cp3*m1*m2*x2*z2+cp1*cp2*cp3*m1*m2*x2*z2+c1*c2*cp1*cp2*m3*x2*z2+c1*c3*cp1*cp2*m3*x2*z2+c2*cp1*cp3*m3*x2*z2+c1*c2*cp1*cp3*m3*x2*z2+c3*cp1*cp3*m3*x2*z2+c1*c3*cp1*cp3*m3*x2*z2+c1*cp1*cp2*m1*m3*x2*z2+c2*cp1*cp2*m1*m3*x2*z2+c1*c2*cp1*cp2*m1*m3*x2*z2+c3*cp1*cp2*m1*m3*x2*z2+c1*c3*cp1*cp2*m1*m3*x2*z2+c1*cp1*cp3*m1*m3*x2*z2+c2*cp1*cp3*m1*m3*x2*z2+c1*c2*cp1*cp3*m1*m3*x2*z2+c3*cp1*cp3*m1*m3*x2*z2+c1*c3*cp1*cp3*m1*m3*x2*z2+cp1*cp3*m2*m3*x2*z2+c1*cp1*cp3*m2*m3*x2*z2+c1*cp1*cp2*cp3*m2*m3*x2*z2+cp1*cp3*m1*m2*m3*x2*z2+c1*cp1*cp3*m1*m2*m3*x2*z2+cp1*cp2*cp3*m1*m2*m3*x2*z2+c1*cp1*cp2*cp3*m1*m2*m3*x2*z2+c1*c2*cp1*cp2*x3*z2+c1*c2*c3*cp1*cp2*x3*z2+c1*c2*cp1*cp3*x3*z2+c1*c2*c3*cp1*cp3*x3*z2+c1*c2*cp1*cp2*cp3*x3*z2+c1*c3*cp1*cp2*cp3*x3*z2+c1*c2*cp1*cp2*m1*x3*z2+c1*c2*c3*cp1*cp2*m1*x3*z2+c1*c2*cp1*cp3*m1*x3*z2+c1*c2*c3*cp1*cp3*m1*x3*z2+cp1*cp2*cp3*m1*x3*z2+c1*cp1*cp2*cp3*m1*x3*z2+c1*c2*cp1*cp2*m2*x3*z2+c1*c2*c3*cp1*cp2*m2*x3*z2+c1*c2*cp1*cp3*m2*x3*z2+c1*c2*c3*cp1*cp3*m2*x3*z2+c1*cp1*cp2*cp3*m2*x3*z2+c1*cp1*cp2*m1*m2*x3*z2+c1*c3*cp1*cp2*m1*m2*x3*z2+cp1*cp2*cp3*m1*m2*x3*z2+c1*cp1*cp2*cp3*m1*m2*x3*z2+c1*c3*cp1*cp2*cp3*m1*m2*x3*z2+c1*c2*cp1*cp2*m3*x3*z2+c1*c2*c3*cp1*cp2*m3*x3*z2+c1*c2*cp1*cp3*m3*x3*z2+c1*c2*c3*cp1*cp3*m3*x3*z2+c1*c2*cp1*cp2*m1*m3*x3*z2+c1*cp1*cp3*m1*m3*x3*z2+c1*c3*cp1*cp3*m1*m3*x3*z2+cp1*cp2*cp3*m1*m3*x3*z2+c1*cp1*cp2*cp3*m1*m3*x3*z2+c1*c2*cp1*cp2*cp3*m1*m3*x3*z2+c1*c3*cp1*cp2*cp3*m1*m3*x3*z2+c1*c2*cp1*cp2*m2*m3*x3*z2+c1*c3*cp1*cp2*m2*m3*x3*z2+c1*cp1*cp3*m2*m3*x3*z2+c1*c3*cp1*cp3*m2*m3*x3*z2+c1*cp1*cp2*cp3*m2*m3*x3*z2+c1*c2*cp1*cp2*cp3*m2*m3*x3*z2+c1*cp1*cp2*m1*m2*m3*x3*z2+c1*cp1*cp2*cp3*m1*m2*m3*x3*z2+c3*y1*z2+c1*c3*y1*z2+c3*cp1*y1*z2+c1*c3*cp1*y1*z2+c2*c3*cp1*cp2*y1*z2+c2*cp3*y1*z2+c1*c3*cp3*y1*z2+c2*c3*cp3*y1*z2+cp1*cp3*y1*z2+c1*cp1*cp3*y1*z2+c2*cp1*cp3*y1*z2+c3*cp1*cp3*y1*z2+c1*c3*cp1*cp3*y1*z2+cp2*cp3*y1*z2+c1*cp2*cp3*y1*z2+c1*c2*cp2*cp3*y1*z2+c3*cp2*cp3*y1*z2+c1*c3*m1*y1*z2+c1*c3*cp1*m1*y1*z2+c3*cp2*m1*y1*z2+c1*c3*cp2*m1*y1*z2+c2*cp3*m1*y1*z2+c1*c2*cp3*m1*y1*z2+c1*c3*cp3*m1*y1*z2+c2*cp1*cp3*m1*y1*z2+c3*cp1*cp3*m1*y1*z2+cp2*cp3*m1*y1*z2+c2*cp2*cp3*m1*y1*z2+cp1*cp2*cp3*m1*y1*z2+c2*cp1*cp2*cp3*m1*y1*z2+c1*c3*m2*y1*z2+c1*c3*cp1*m2*y1*z2+c3*cp2*m2*y1*z2+c1*c3*cp2*m2*y1*z2+c3*cp1*cp2*m2*y1*z2+c2*cp3*m2*y1*z2+c1*c2*cp3*m2*y1*z2+c1*c3*cp3*m2*y1*z2+c2*cp1*cp3*m2*y1*z2+c3*cp1*cp3*m2*y1*z2+c2*cp2*cp3*m2*y1*z2+c3*cp2*cp3*m2*y1*z2+c2*cp1*cp2*cp3*m2*y1*z2+c1*cp2*cp3*m1*m2*y1*z2+c1*c2*m3*y1*z2+c1*c3*m3*y1*z2+c1*c2*cp1*m3*y1*z2+c1*c3*cp1*m3*y1*z2+cp2*m3*y1*z2+c1*cp2*m3*y1*z2+c2*cp2*m3*y1*z2+c1*c2*cp2*m3*y1*z2+c3*cp2*m3*y1*z2+c1*c3*cp2*m3*y1*z2+cp1*cp2*m3*y1*z2+c1*cp1*cp2*m3*y1*z2+c2*cp1*cp2*m3*y1*z2+c3*cp1*cp2*m3*y1*z2+c1*c2*cp3*m3*y1*z2+c3*cp3*m3*y1*z2+c1*c3*cp3*m3*y1*z2+cp1*cp3*m3*y1*z2+cp2*cp3*m3*y1*z2+c1*cp2*cp3*m3*y1*z2+c2*cp2*cp3*m3*y1*z2+c3*cp2*cp3*m3*y1*z2+c1*cp1*cp2*cp3*m3*y1*z2+c2*cp1*cp2*cp3*m3*y1*z2+cp1*m1*m3*y1*z2+cp2*m1*m3*y1*z2+cp1*cp2*m1*m3*y1*z2+c1*cp1*cp2*m1*m3*y1*z2+c1*cp1*cp3*m1*m3*y1*z2+cp2*cp3*m1*m3*y1*z2+cp1*cp2*cp3*m1*m3*y1*z2+cp1*m2*m3*y1*z2+c1*cp1*cp3*m2*m3*y1*z2+c1*cp2*cp3*m2*m3*y1*z2+c1*c3*cp1*cp2*y2*z2+c1*c2*cp1*cp3*y2*z2+c1*c3*cp1*cp3*y2*z2+c3*cp1*cp2*m1*y2*z2+c2*cp1*cp3*m1*y2*z2+c3*cp1*cp3*m1*y2*z2+c3*cp1*cp2*m2*y2*z2+c1*cp1*cp2*cp3*m2*y2*z2+c3*cp1*cp2*m1*m2*y2*z2+c1*c3*cp1*cp2*m1*m2*y2*z2+cp1*cp3*m1*m2*y2*z2+c1*cp1*cp3*m1*m2*y2*z2+c2*cp1*cp3*m1*m2*y2*z2+c1*c2*cp1*cp3*m1*m2*y2*z2+c3*cp1*cp3*m1*m2*y2*z2+c1*c3*cp1*cp3*m1*m2*y2*z2+c1*cp1*cp2*cp3*m1*m2*y2*z2+cp1*cp2*m3*y2*z2+c1*cp1*cp2*m3*y2*z2+c2*cp1*cp2*m3*y2*z2+c3*cp1*cp2*m3*y2*z2+c1*cp1*cp3*m3*y2*z2+cp1*cp2*cp3*m3*y2*z2+cp1*cp2*m1*m3*y2*z2+c2*cp1*cp2*m1*m3*y2*z2+c1*c2*cp1*cp2*m1*m3*y2*z2+c3*cp1*cp2*m1*m3*y2*z2+c1*c3*cp1*cp2*m1*m3*y2*z2+cp1*cp3*m1*m3*y2*z2+c2*cp1*cp3*m1*m3*y2*z2+c1*c2*cp1*cp3*m1*m3*y2*z2+c3*cp1*cp3*m1*m3*y2*z2+c1*c3*cp1*cp3*m1*m3*y2*z2+cp1*cp2*cp3*m2*m3*y2*z2+cp1*cp3*m1*m2*m3*y2*z2+c1*cp1*cp3*m1*m2*m3*y2*z2+cp1*cp2*cp3*m1*m2*m3*y2*z2+c1*cp1*cp2*cp3*m1*m2*m3*y2*z2+c1*c3*cp1*cp2*y3*z2+c1*c2*c3*cp1*cp2*y3*z2+c1*c2*c3*cp1*cp3*y3*z2+c1*c2*cp1*cp2*cp3*y3*z2+c1*c3*cp1*cp2*cp3*y3*z2+c1*c3*cp1*cp2*m1*y3*z2+c1*c2*c3*cp1*cp2*m1*y3*z2+c1*c3*cp1*cp3*m1*y3*z2+c1*c2*c3*cp1*cp3*m1*y3*z2+cp1*cp2*cp3*m1*y3*z2+c1*cp1*cp2*cp3*m1*y3*z2+c1*c3*cp1*cp2*m2*y3*z2+c1*c2*c3*cp1*cp2*m2*y3*z2+c1*c3*cp1*cp3*m2*y3*z2+c1*c2*c3*cp1*cp3*m2*y3*z2+c1*cp1*cp2*cp3*m2*y3*z2+c1*c3*cp1*cp2*m1*m2*y3*z2+cp1*cp2*cp3*m1*m2*y3*z2+c1*c3*cp1*cp2*cp3*m1*m2*y3*z2+c1*c3*cp1*cp2*m3*y3*z2+c1*c2*c3*cp1*cp2*m3*y3*z2+c1*c2*c3*cp1*cp3*m3*y3*z2+c1*cp1*cp2*m1*m3*y3*z2+c1*c2*cp1*cp2*m1*m3*y3*z2+c1*c3*cp1*cp3*m1*m3*y3*z2+cp1*cp2*cp3*m1*m3*y3*z2+c1*cp1*cp2*cp3*m1*m3*y3*z2+c1*c2*cp1*cp2*cp3*m1*m3*y3*z2+c1*c3*cp1*cp2*cp3*m1*m3*y3*z2+c1*c2*cp1*cp2*m2*m3*y3*z2+c1*c3*cp1*cp2*m2*m3*y3*z2+c1*c3*cp1*cp3*m2*m3*y3*z2+c1*c2*cp1*cp2*cp3*m2*m3*y3*z2+c1*cp1*cp2*m1*m2*m3*y3*z2+c1*cp1*cp2*cp3*m1*m2*m3*y3*z2+c1*c3*cp2*z1*z2+c2*c3*cp2*z1*z2+c2*c3*cp1*cp2*z1*z2+c2*c3*cp3*z1*z2+c1*c3*cp1*cp3*z1*z2+c1*cp2*cp3*z1*z2+c2*cp2*cp3*z1*z2+c1*c2*cp2*cp3*z1*z2+c3*cp2*cp3*z1*z2+c3*cp1*cp2*m1*z1*z2+cp3*m1*z1*z2+c1*cp3*m1*z1*z2+c2*cp3*m1*z1*z2+cp1*cp3*m1*z1*z2+c1*cp1*cp3*m1*z1*z2+c2*cp1*cp3*m1*z1*z2+c3*cp1*cp3*m1*z1*z2+cp1*cp2*cp3*m1*z1*z2+c2*cp1*cp2*cp3*m1*z1*z2+c3*cp2*m2*z1*z2+cp3*m2*z1*z2+c1*cp3*m2*z1*z2+c2*cp3*m2*z1*z2+cp1*cp3*m2*z1*z2+c1*cp1*cp3*m2*z1*z2+c2*cp1*cp3*m2*z1*z2+c3*cp1*cp3*m2*z1*z2+c1*cp2*cp3*m2*z1*z2+c3*cp2*cp3*m2*z1*z2+cp1*cp2*cp3*m2*z1*z2+c2*cp1*cp2*cp3*m2*z1*z2+cp2*cp3*m1*m2*z1*z2+c1*cp2*m3*z1*z2+c2*cp2*m3*z1*z2+c3*cp2*m3*z1*z2+c2*cp3*m3*z1*z2+c1*cp1*cp3*m3*z1*z2+c1*cp2*cp3*m3*z1*z2+c3*cp2*cp3*m3*z1*z2+c1*cp1*cp2*cp3*m3*z1*z2+c2*cp1*cp2*cp3*m3*z1*z2+m1*m3*z1*z2+cp1*m1*m3*z1*z2+cp2*m1*m3*z1*z2+cp3*m1*m3*z1*z2+m2*m3*z1*z2+cp1*m2*m3*z1*z2+cp3*m2*m3*z1*z2+cp2*cp3*m2*m3*z1*z2+cp1*cp2*cp3*m2*m3*z1*z2+(1/2)*c3*cp1*cp2*z2*(1+z2)+(1/2)*c1*c3*cp1*cp2*z2*(1+z2)+(1/2)*c1*c2*cp3*z2*(1+z2)+(1/2)*cp1*cp3*z2*(1+z2)+(1/2)*c1*cp1*cp3*z2*(1+z2)+(1/2)*c1*c2*cp1*cp3*z2*(1+z2)+(1/2)*c1*c3*cp1*cp3*z2*(1+z2)+(1/2)*c3*cp1*cp2*m1*z2*(1+z2)+(1/2)*c1*c3*cp1*cp2*m1*z2*(1+z2)+(1/2)*cp3*m1*z2*(1+z2)+(1/2)*c1*cp3*m1*z2*(1+z2)+(1/2)*c2*cp3*m1*z2*(1+z2)+(1/2)*c2*cp1*cp3*m1*z2*(1+z2)+(1/2)*c1*c2*cp1*cp3*m1*z2*(1+z2)+(1/2)*c3*cp1*cp3*m1*z2*(1+z2)+(1/2)*c1*c3*cp1*cp3*m1*z2*(1+z2)+(1/2)*c3*cp1*cp2*m2*z2*(1+z2)+(1/2)*c1*c3*cp1*cp2*m2*z2*(1+z2)+(1/2)*c1*cp3*m2*z2*(1+z2)+(1/2)*cp1*cp3*m2*z2*(1+z2)+(1/2)*c1*cp1*cp3*m2*z2*(1+z2)+(1/2)*c2*cp1*cp3*m2*z2*(1+z2)+(1/2)*c1*c2*cp1*cp3*m2*z2*(1+z2)+(1/2)*c3*cp1*cp3*m2*z2*(1+z2)+(1/2)*c1*c3*cp1*cp3*m2*z2*(1+z2)+(1/2)*c1*cp2*cp3*m2*z2*(1+z2)+(1/2)*cp1*cp2*cp3*m2*z2*(1+z2)+(1/2)*cp1*cp3*m1*m2*z2*(1+z2)+(1/2)*cp2*cp3*m1*m2*z2*(1+z2)+(1/2)*cp1*cp2*cp3*m1*m2*z2*(1+z2)+(1/2)*c1*cp1*cp2*cp3*m1*m2*z2*(1+z2)+(1/2)*cp1*cp2*m3*z2*(1+z2)+(1/2)*c1*cp1*cp2*m3*z2*(1+z2)+(1/2)*c2*cp1*cp2*m3*z2*(1+z2)+(1/2)*c1*c2*cp1*cp2*m3*z2*(1+z2)+(1/2)*c3*cp1*cp2*m3*z2*(1+z2)+(1/2)*c1*c3*cp1*cp2*m3*z2*(1+z2)+(1/2)*c1*cp1*cp3*m3*z2*(1+z2)+(1/2)*c2*cp1*cp3*m3*z2*(1+z2)+(1/2)*c1*c2*cp1*cp3*m3*z2*(1+z2)+(1/2)*c3*cp1*cp3*m3*z2*(1+z2)+(1/2)*c1*c3*cp1*cp3*m3*z2*(1+z2)+(1/2)*cp1*cp2*cp3*m3*z2*(1+z2)+(1/2)*m1*m3*z2*(1+z2)+(1/2)*cp1*m1*m3*z2*(1+z2)+(1/2)*cp2*m1*m3*z2*(1+z2)+(1/2)*c1*cp1*cp2*m1*m3*z2*(1+z2)+(1/2)*cp3*m1*m3*z2*(1+z2)+(1/2)*c1*cp1*cp3*m1*m3*z2*(1+z2)+(1/2)*cp1*cp3*m2*m3*z2*(1+z2)+(1/2)*c1*cp1*cp3*m2*m3*z2*(1+z2)+(1/2)*cp1*cp2*cp3*m2*m3*z2*(1+z2)+(1/2)*c1*cp1*cp2*cp3*m2*m3*z2*(1+z2)+c1*c2*cp2*cp3*z3+c1*c2*c3*cp2*cp3*z3+c1*c2*c3*cp1*cp2*cp3*z3+c1*c2*c3*cp2*m1*z3+c2*cp1*cp2*cp3*m1*z3+c1*c2*c3*m2*z3+c1*c2*cp1*cp2*m2*z3+c1*c2*c3*cp3*m2*z3+c2*cp1*cp2*cp3*m2*z3+c1*c2*cp1*cp2*cp3*m2*z3+c2*c3*cp1*cp2*cp3*m2*z3+c2*c3*cp1*m1*m2*z3+c1*c2*cp1*cp2*m1*m2*z3+c2*c3*cp1*cp2*m1*m2*z3+c1*c2*c3*cp1*cp2*m1*m2*z3+cp1*cp3*m1*m2*z3+c1*cp1*cp3*m1*m2*z3+c2*cp1*cp3*m1*m2*z3+c3*cp1*cp3*m1*m2*z3+c1*c3*cp1*cp3*m1*m2*z3+c1*cp2*cp3*m1*m2*z3+c2*cp2*cp3*m1*m2*z3+c1*c2*cp2*cp3*m1*m2*z3+c1*c3*cp2*cp3*m1*m2*z3+c2*c3*cp2*cp3*m1*m2*z3+cp1*cp2*cp3*m1*m2*z3+c2*cp1*cp2*cp3*m1*m2*z3+c1*c2*cp1*cp2*cp3*m1*m2*z3+c3*cp1*cp2*cp3*m1*m2*z3+c2*c3*cp1*cp2*cp3*m1*m2*z3+c1*c2*c3*cp1*cp2*cp3*m1*m2*z3+c1*c2*cp1*cp2*m3*z3+c1*c2*cp2*cp3*m3*z3+c2*c3*cp1*cp2*cp3*m3*z3+c1*c2*cp1*cp2*m1*m3*z3+c2*c3*cp1*cp2*m1*m3*z3+c1*c2*c3*cp1*cp2*m1*m3*z3+c2*cp1*cp2*cp3*m1*m3*z3+c1*c2*cp1*cp2*cp3*m1*m3*z3+c2*c3*cp1*cp2*cp3*m1*m3*z3+c1*c2*c3*cp1*cp2*cp3*m1*m3*z3+c1*c2*m2*m3*z3+c1*c3*cp1*m2*m3*z3+c1*c3*cp2*m2*m3*z3+cp1*cp2*m2*m3*z3+c3*cp1*cp2*m2*m3*z3+c1*c3*cp1*cp2*m2*m3*z3+c1*c2*cp3*m2*m3*z3+c2*cp1*cp3*m2*m3*z3+c3*cp1*cp3*m2*m3*z3+c2*c3*cp1*cp3*m2*m3*z3+c1*c3*cp2*cp3*m2*m3*z3+cp1*cp2*cp3*m2*m3*z3+c2*cp1*cp2*cp3*m2*m3*z3+cp1*m1*m2*m3*z3+c1*cp1*m1*m2*m3*z3+c3*cp1*m1*m2*m3*z3+c1*cp2*m1*m2*m3*z3+c2*cp2*m1*m2*m3*z3+cp1*cp2*m1*m2*m3*z3+c1*cp1*cp2*m1*m2*m3*z3+c2*cp1*cp2*m1*m2*m3*z3+c1*c3*cp1*cp2*m1*m2*m3*z3+c2*c3*cp1*cp2*m1*m2*m3*z3+c2*cp1*cp3*m1*m2*m3*z3+c3*cp1*cp3*m1*m2*m3*z3+c1*c3*cp2*cp3*m1*m2*m3*z3+c2*c3*cp2*cp3*m1*m2*m3*z3+c1*cp1*cp2*cp3*m1*m2*m3*z3+c2*cp1*cp2*cp3*m1*m2*m3*z3+c1*c2*x1*z3+c1*c2*cp1*x1*z3+c1*c3*cp2*x1*z3+c2*c3*cp2*x1*z3+c1*c2*c3*cp2*x1*z3+c1*c3*cp1*cp2*x1*z3+c2*c3*cp1*cp2*x1*z3+c1*c2*c3*cp1*cp2*x1*z3+c1*c2*c3*cp3*x1*z3+c1*c2*c3*cp1*cp3*x1*z3+c1*c3*cp2*cp3*x1*z3+c2*c3*cp2*cp3*x1*z3+c1*c2*cp1*cp2*cp3*x1*z3+c1*c3*cp1*cp2*cp3*x1*z3+c2*m1*x1*z3+c2*cp1*m1*x1*z3+c3*cp2*m1*x1*z3+c2*c3*cp2*m1*x1*z3+c3*cp1*cp2*m1*x1*z3+c2*c3*cp1*cp2*m1*x1*z3+c2*c3*cp3*m1*x1*z3+c2*c3*cp1*cp3*m1*x1*z3+c3*cp2*cp3*m1*x1*z3+c3*cp1*cp2*cp3*m1*x1*z3+c1*c2*cp2*m2*x1*z3+c1*c2*c3*cp2*m2*x1*z3+c1*c2*cp1*cp2*m2*x1*z3+c1*c2*c3*cp1*cp2*m2*x1*z3+c1*c2*cp3*m2*x1*z3+c1*c2*c3*cp3*m2*x1*z3+c1*c2*cp1*cp3*m2*x1*z3+c1*c2*c3*cp1*cp3*m2*x1*z3+c2*cp1*cp2*cp3*m2*x1*z3+c2*cp2*m1*m2*x1*z3+c2*c3*cp2*m1*m2*x1*z3+c2*cp1*cp2*m1*m2*x1*z3+c2*c3*cp1*cp2*m1*m2*x1*z3+c2*cp3*m1*m2*x1*z3+c2*c3*cp3*m1*m2*x1*z3+c2*cp1*cp3*m1*m2*x1*z3+c2*c3*cp1*cp3*m1*m2*x1*z3+c1*c2*cp2*m3*x1*z3+c1*c2*c3*cp2*m3*x1*z3+c1*c2*cp1*cp2*m3*x1*z3+c1*c2*c3*cp1*cp2*m3*x1*z3+c1*c2*cp3*m3*x1*z3+c1*c2*c3*cp3*m3*x1*z3+c1*c2*cp1*cp3*m3*x1*z3+c1*c2*c3*cp1*cp3*m3*x1*z3+c2*cp2*m1*m3*x1*z3+c2*c3*cp2*m1*m3*x1*z3+c2*cp1*cp2*m1*m3*x1*z3+c2*c3*cp1*cp2*m1*m3*x1*z3+c2*cp3*m1*m3*x1*z3+c2*c3*cp3*m1*m3*x1*z3+c2*cp1*cp3*m1*m3*x1*z3+c2*c3*cp1*cp3*m1*m3*x1*z3+c1*c2*cp3*m2*m3*x1*z3+c1*c2*cp1*cp3*m2*m3*x1*z3+c1*c2*cp2*cp3*m2*m3*x1*z3+c1*c2*cp1*cp2*cp3*m2*m3*x1*z3+c2*cp3*m1*m2*m3*x1*z3+c2*cp1*cp3*m1*m2*m3*x1*z3+c2*cp2*cp3*m1*m2*m3*x1*z3+c2*cp1*cp2*cp3*m1*m2*m3*x1*z3+c1*x2*z3+c1*c2*x2*z3+c1*c3*x2*z3+cp1*x2*z3+c1*cp1*x2*z3+c2*cp1*x2*z3+c1*c2*cp1*x2*z3+c3*cp1*x2*z3+c1*c3*cp1*x2*z3+c2*c3*cp1*x2*z3+c1*cp2*x2*z3+c1*c3*cp2*x2*z3+c1*cp1*cp2*x2*z3+c1*c2*c3*cp1*cp2*x2*z3+c1*cp3*x2*z3+c1*c2*cp3*x2*z3+c1*c3*cp3*x2*z3+c1*c3*cp1*cp3*x2*z3+c1*c2*c3*cp1*cp3*x2*z3+c1*cp1*cp2*cp3*x2*z3+c1*c2*cp1*cp2*cp3*x2*z3+c1*c3*cp1*cp2*cp3*x2*z3+m1*x2*z3+c1*m1*x2*z3+c2*m1*x2*z3+c1*c3*m1*x2*z3+c2*c3*m1*x2*z3+cp1*m1*x2*z3+c1*cp1*m1*x2*z3+c2*cp1*m1*x2*z3+c1*c3*cp1*m1*x2*z3+c2*c3*cp1*m1*x2*z3+cp2*m1*x2*z3+c1*c3*cp2*m1*x2*z3+c2*c3*cp2*m1*x2*z3+cp1*cp2*m1*x2*z3+c1*cp1*cp2*m1*x2*z3+c1*c2*cp1*cp2*m1*x2*z3+c3*cp1*cp2*m1*x2*z3+c1*c2*c3*cp1*cp2*m1*x2*z3+cp3*m1*x2*z3+c1*cp3*m1*x2*z3+c2*cp3*m1*x2*z3+c1*c3*cp3*m1*x2*z3+c2*c3*cp3*m1*x2*z3+c1*c2*cp1*cp3*m1*x2*z3+c1*c2*c3*cp1*cp3*m1*x2*z3+c1*cp2*cp3*m1*x2*z3+c2*cp2*cp3*m1*x2*z3+c3*cp2*cp3*m1*x2*z3+cp1*cp2*cp3*m1*x2*z3+c1*cp1*cp2*cp3*m1*x2*z3+c1*c3*m2*x2*z3+c1*c3*cp1*m2*x2*z3+c2*c3*cp1*m2*x2*z3+c1*c3*cp2*m2*x2*z3+c1*cp1*cp2*m2*x2*z3+c1*c2*cp1*cp2*m2*x2*z3+c2*c3*cp1*cp2*m2*x2*z3+c1*c2*c3*cp1*cp2*m2*x2*z3+c1*c3*cp3*m2*x2*z3+cp1*cp3*m2*x2*z3+c1*cp1*cp3*m2*x2*z3+c2*cp1*cp3*m2*x2*z3+c1*c2*cp1*cp3*m2*x2*z3+c2*c3*cp1*cp3*m2*x2*z3+c1*c2*c3*cp1*cp3*m2*x2*z3+c1*cp2*cp3*m2*x2*z3+c1*cp1*cp2*cp3*m2*x2*z3+c3*cp1*cp2*cp3*m2*x2*z3+cp2*m1*m2*x2*z3+c2*cp1*cp2*m1*m2*x2*z3+c3*cp1*cp2*m1*m2*x2*z3+c2*c3*cp1*cp2*m1*m2*x2*z3+cp1*cp3*m1*m2*x2*z3+c1*cp1*cp3*m1*m2*x2*z3+c2*cp1*cp3*m1*m2*x2*z3+c3*cp1*cp3*m1*m2*x2*z3+c1*c3*cp1*cp3*m1*m2*x2*z3+c2*c3*cp1*cp3*m1*m2*x2*z3+c3*cp2*cp3*m1*m2*x2*z3+c1*cp1*cp2*cp3*m1*m2*x2*z3+c3*cp1*cp2*cp3*m1*m2*x2*z3+c1*c3*cp1*cp2*cp3*m1*m2*x2*z3+c1*c3*m3*x2*z3+c1*c3*cp1*m3*x2*z3+c2*c3*cp1*m3*x2*z3+c1*c3*cp2*m3*x2*z3+c1*cp1*cp2*m3*x2*z3+c1*c2*cp1*cp2*m3*x2*z3+c2*c3*cp1*cp2*m3*x2*z3+c1*c2*c3*cp1*cp2*m3*x2*z3+c1*c3*cp3*m3*x2*z3+c1*c2*cp1*cp3*m3*x2*z3+c2*c3*cp1*cp3*m3*x2*z3+c1*c2*c3*cp1*cp3*m3*x2*z3+c1*cp2*cp3*m3*x2*z3+cp1*cp2*cp3*m3*x2*z3+c2*cp1*cp2*cp3*m3*x2*z3+c3*cp1*cp2*cp3*m3*x2*z3+cp2*m1*m3*x2*z3+c2*cp1*cp2*m1*m3*x2*z3+c3*cp1*cp2*m1*m3*x2*z3+c2*c3*cp1*cp2*m1*m3*x2*z3+c1*cp1*cp3*m1*m3*x2*z3+c2*cp1*cp3*m1*m3*x2*z3+c1*c2*cp1*cp3*m1*m3*x2*z3+c3*cp1*cp3*m1*m3*x2*z3+c1*c3*cp1*cp3*m1*m3*x2*z3+c2*c3*cp1*cp3*m1*m3*x2*z3+c1*cp2*cp3*m1*m3*x2*z3+c2*cp2*cp3*m1*m3*x2*z3+c3*cp2*cp3*m1*m3*x2*z3+cp1*cp2*cp3*m1*m3*x2*z3+c2*cp1*cp2*cp3*m1*m3*x2*z3+c1*c2*cp1*cp2*cp3*m1*m3*x2*z3+c3*cp1*cp2*cp3*m1*m3*x2*z3+c1*c3*cp1*cp2*cp3*m1*m3*x2*z3+c1*cp1*cp3*m2*m3*x2*z3+c1*c2*cp1*cp3*m2*m3*x2*z3+c1*cp2*cp3*m2*m3*x2*z3+cp1*cp2*cp3*m2*m3*x2*z3+c2*cp1*cp2*cp3*m2*m3*x2*z3+c1*c2*cp1*cp2*cp3*m2*m3*x2*z3+cp1*cp3*m1*m2*m3*x2*z3+c1*cp1*cp3*m1*m2*m3*x2*z3+c2*cp1*cp3*m1*m2*m3*x2*z3+cp2*cp3*m1*m2*m3*x2*z3+c1*cp1*cp2*cp3*m1*m2*m3*x2*z3+c2*cp1*cp2*cp3*m1*m2*m3*x2*z3+c2*c3*cp1*x3*z3+cp1*cp2*x3*z3+c1*cp1*cp2*x3*z3+c3*cp1*cp2*x3*z3+c2*cp1*cp3*x3*z3+c1*cp2*cp3*x3*z3+cp1*cp2*m1*x3*z3+c1*cp1*cp2*m1*x3*z3+c2*cp1*cp2*m1*x3*z3+c1*c3*cp1*cp2*m1*x3*z3+c2*c3*cp1*cp2*m1*x3*z3+cp2*cp3*m1*x3*z3+c1*cp2*cp3*m1*x3*z3+c2*cp2*cp3*m1*x3*z3+c3*cp2*cp3*m1*x3*z3+c1*c3*cp2*cp3*m1*x3*z3+c2*c3*cp2*cp3*m1*x3*z3+c3*cp1*cp2*cp3*m1*x3*z3+c2*c3*cp1*m2*x3*z3+cp1*cp2*m2*x3*z3+c1*cp1*cp2*m2*x3*z3+c3*cp1*cp2*m2*x3*z3+c1*c3*cp1*cp2*m2*x3*z3+c2*c3*cp1*cp2*m2*x3*z3+c2*cp1*cp3*m2*x3*z3+c1*cp2*cp3*m2*x3*z3+c1*c3*cp2*cp3*m2*x3*z3+c3*cp1*cp2*cp3*m2*x3*z3+cp1*cp2*m1*m2*x3*z3+c3*cp1*cp2*m1*m2*x3*z3+cp2*cp3*m1*m2*x3*z3+c3*cp2*cp3*m1*m2*x3*z3+c2*c3*cp1*m3*x3*z3+c1*c3*cp1*cp2*m3*x3*z3+c2*c3*cp1*cp3*m3*x3*z3+c1*c3*cp2*cp3*m3*x3*z3+c1*cp1*cp2*m1*m3*x3*z3+c2*cp1*cp2*m1*m3*x3*z3+c3*cp1*cp2*m1*m3*x3*z3+c1*c3*cp1*cp2*m1*m3*x3*z3+c2*c3*cp1*cp2*m1*m3*x3*z3+cp2*cp3*m1*m3*x3*z3+c1*cp2*cp3*m1*m3*x3*z3+c2*cp2*cp3*m1*m3*x3*z3+c3*cp2*cp3*m1*m3*x3*z3+c1*c3*cp2*cp3*m1*m3*x3*z3+c2*c3*cp2*cp3*m1*m3*x3*z3+cp1*cp2*cp3*m1*m3*x3*z3+c2*c3*cp1*m2*m3*x3*z3+c1*cp1*cp2*m2*m3*x3*z3+c1*c3*cp1*cp2*m2*m3*x3*z3+c2*c3*cp1*cp2*m2*m3*x3*z3+c2*cp1*cp3*m2*m3*x3*z3+c1*cp2*cp3*m2*m3*x3*z3+c1*c3*cp2*cp3*m2*m3*x3*z3+c3*cp1*cp2*cp3*m2*m3*x3*z3+cp1*cp2*m1*m2*m3*x3*z3+c3*cp1*cp2*m1*m2*m3*x3*z3+cp2*cp3*m1*m2*m3*x3*z3+c3*cp2*cp3*m1*m2*m3*x3*z3+c1*c2*y1*z3+c2*cp1*y1*z3+c1*c2*cp1*y1*z3+c1*c3*cp2*y1*z3+c2*c3*cp2*y1*z3+c1*c2*c3*cp2*y1*z3+c3*cp1*cp2*y1*z3+c1*c3*cp1*cp2*y1*z3+c1*c2*c3*cp1*cp2*y1*z3+c1*c2*c3*cp3*y1*z3+c2*c3*cp1*cp3*y1*z3+c1*c2*c3*cp1*cp3*y1*z3+c2*cp2*cp3*y1*z3+c1*c3*cp2*cp3*y1*z3+c2*c3*cp2*cp3*y1*z3+c2*cp1*cp2*cp3*y1*z3+c1*c2*cp1*cp2*cp3*y1*z3+c3*cp1*cp2*cp3*y1*z3+c1*c3*cp1*cp2*cp3*y1*z3+c2*m1*y1*z3+c2*cp1*m1*y1*z3+c3*cp2*m1*y1*z3+c2*c3*cp2*m1*y1*z3+c3*cp1*cp2*m1*y1*z3+c2*c3*cp1*cp2*m1*y1*z3+c2*c3*cp3*m1*y1*z3+c2*c3*cp1*cp3*m1*y1*z3+c3*cp2*cp3*m1*y1*z3+c3*cp1*cp2*cp3*m1*y1*z3+c1*c2*cp2*m2*y1*z3+c1*c2*c3*cp2*m2*y1*z3+c2*cp1*cp2*m2*y1*z3+c1*c2*cp1*cp2*m2*y1*z3+c2*c3*cp1*cp2*m2*y1*z3+c1*c2*c3*cp1*cp2*m2*y1*z3+c1*c2*cp3*m2*y1*z3+c1*c2*c3*cp3*m2*y1*z3+c2*cp1*cp3*m2*y1*z3+c1*c2*cp1*cp3*m2*y1*z3+c2*c3*cp1*cp3*m2*y1*z3+c1*c2*c3*cp1*cp3*m2*y1*z3+c2*cp1*cp2*cp3*m2*y1*z3+c2*cp2*m1*m2*y1*z3+c2*c3*cp2*m1*m2*y1*z3+c2*cp1*cp2*m1*m2*y1*z3+c2*c3*cp1*cp2*m1*m2*y1*z3+c2*cp3*m1*m2*y1*z3+c2*c3*cp3*m1*m2*y1*z3+c2*cp1*cp3*m1*m2*y1*z3+c2*c3*cp1*cp3*m1*m2*y1*z3+c1*c2*cp2*m3*y1*z3+c1*c2*c3*cp2*m3*y1*z3+c2*cp1*cp2*m3*y1*z3+c1*c2*cp1*cp2*m3*y1*z3+c2*c3*cp1*cp2*m3*y1*z3+c1*c2*c3*cp1*cp2*m3*y1*z3+c1*c2*cp3*m3*y1*z3+c1*c2*c3*cp3*m3*y1*z3+c2*cp1*cp3*m3*y1*z3+c1*c2*cp1*cp3*m3*y1*z3+c2*c3*cp1*cp3*m3*y1*z3+c1*c2*c3*cp1*cp3*m3*y1*z3+c2*cp2*m1*m3*y1*z3+c2*c3*cp2*m1*m3*y1*z3+c2*cp1*cp2*m1*m3*y1*z3+c2*c3*cp1*cp2*m1*m3*y1*z3+c2*cp3*m1*m3*y1*z3+c2*c3*cp3*m1*m3*y1*z3+c2*cp1*cp3*m1*m3*y1*z3+c2*c3*cp1*cp3*m1*m3*y1*z3+c1*c2*cp3*m2*m3*y1*z3+c2*cp1*cp3*m2*m3*y1*z3+c1*c2*cp1*cp3*m2*m3*y1*z3+c1*c2*cp2*cp3*m2*m3*y1*z3+c2*cp1*cp2*cp3*m2*m3*y1*z3+c1*c2*cp1*cp2*cp3*m2*m3*y1*z3+c2*cp3*m1*m2*m3*y1*z3+c2*cp1*cp3*m1*m2*m3*y1*z3+c2*cp2*cp3*m1*m2*m3*y1*z3+c2*cp1*cp2*cp3*m1*m2*m3*y1*z3+c1*c2*y2*z3+c1*c3*y2*z3+c1*c2*cp1*y2*z3+c3*cp1*y2*z3+c1*c3*cp1*y2*z3+c1*c3*cp2*y2*z3+cp1*cp2*y2*z3+c1*cp1*cp2*y2*z3+c3*cp1*cp2*y2*z3+c1*c3*cp1*cp2*y2*z3+c1*c2*c3*cp1*cp2*y2*z3+c1*c2*cp3*y2*z3+c1*c3*cp3*y2*z3+c2*cp1*cp3*y2*z3+c3*cp1*cp3*y2*z3+c1*c2*c3*cp1*cp3*y2*z3+c1*cp2*cp3*y2*z3+c1*c2*cp1*cp2*cp3*y2*z3+c1*c3*cp1*cp2*cp3*y2*z3+m1*y2*z3+c1*m1*y2*z3+c2*m1*y2*z3+c1*c3*m1*y2*z3+c2*c3*m1*y2*z3+cp1*m1*y2*z3+c1*cp1*m1*y2*z3+c2*cp1*m1*y2*z3+c1*c3*cp1*m1*y2*z3+c2*c3*cp1*m1*y2*z3+cp2*m1*y2*z3+c1*c3*cp2*m1*y2*z3+c2*c3*cp2*m1*y2*z3+c2*cp1*cp2*m1*y2*z3+c1*c2*cp1*cp2*m1*y2*z3+c1*c3*cp1*cp2*m1*y2*z3+c2*c3*cp1*cp2*m1*y2*z3+c1*c2*c3*cp1*cp2*m1*y2*z3+cp3*m1*y2*z3+c1*cp3*m1*y2*z3+c2*cp3*m1*y2*z3+c1*c3*cp3*m1*y2*z3+c2*c3*cp3*m1*y2*z3+cp1*cp3*m1*y2*z3+c1*cp1*cp3*m1*y2*z3+c2*cp1*cp3*m1*y2*z3+c1*c2*cp1*cp3*m1*y2*z3+c3*cp1*cp3*m1*y2*z3+c1*c3*cp1*cp3*m1*y2*z3+c2*c3*cp1*cp3*m1*y2*z3+c1*c2*c3*cp1*cp3*m1*y2*z3+c1*cp2*cp3*m1*y2*z3+c2*cp2*cp3*m1*y2*z3+c3*cp2*cp3*m1*y2*z3+cp1*cp2*cp3*m1*y2*z3+c1*cp1*cp2*cp3*m1*y2*z3+c1*c3*m2*y2*z3+c1*c3*cp1*m2*y2*z3+c1*c3*cp2*m2*y2*z3+c1*c2*cp1*cp2*m2*y2*z3+c1*c3*cp1*cp2*m2*y2*z3+c1*c2*c3*cp1*cp2*m2*y2*z3+c1*c3*cp3*m2*y2*z3+c2*cp1*cp3*m2*y2*z3+c1*c2*cp1*cp3*m2*y2*z3+c3*cp1*cp3*m2*y2*z3+c1*c3*cp1*cp3*m2*y2*z3+c1*c2*c3*cp1*cp3*m2*y2*z3+c1*cp2*cp3*m2*y2*z3+cp1*cp2*cp3*m2*y2*z3+c1*cp1*cp2*cp3*m2*y2*z3+cp2*m1*m2*y2*z3+cp1*cp2*m1*m2*y2*z3+c2*cp1*cp2*m1*m2*y2*z3+c2*c3*cp1*cp2*m1*m2*y2*z3+cp1*cp3*m1*m2*y2*z3+c1*cp1*cp3*m1*m2*y2*z3+c2*cp1*cp3*m1*m2*y2*z3+c3*cp1*cp3*m1*m2*y2*z3+c1*c3*cp1*cp3*m1*m2*y2*z3+c2*c3*cp1*cp3*m1*m2*y2*z3+c3*cp2*cp3*m1*m2*y2*z3+cp1*cp2*cp3*m1*m2*y2*z3+c1*cp1*cp2*cp3*m1*m2*y2*z3+c1*c3*cp1*cp2*cp3*m1*m2*y2*z3+c1*c3*m3*y2*z3+c1*c3*cp1*m3*y2*z3+c1*c3*cp2*m3*y2*z3+c1*c2*cp1*cp2*m3*y2*z3+c1*c3*cp1*cp2*m3*y2*z3+c1*c2*c3*cp1*cp2*m3*y2*z3+c1*c3*cp3*m3*y2*z3+cp1*cp3*m3*y2*z3+c1*cp1*cp3*m3*y2*z3+c2*cp1*cp3*m3*y2*z3+c1*c2*cp1*cp3*m3*y2*z3+c3*cp1*cp3*m3*y2*z3+c1*c3*cp1*cp3*m3*y2*z3+c1*c2*c3*cp1*cp3*m3*y2*z3+c1*cp2*cp3*m3*y2*z3+cp2*m1*m3*y2*z3+cp1*cp2*m1*m3*y2*z3+c2*cp1*cp2*m1*m3*y2*z3+c2*c3*cp1*cp2*m1*m3*y2*z3+cp1*cp3*m1*m3*y2*z3+c1*c2*cp1*cp3*m1*m3*y2*z3+c3*cp1*cp3*m1*m3*y2*z3+c1*c3*cp1*cp3*m1*m3*y2*z3+c2*c3*cp1*cp3*m1*m3*y2*z3+c1*cp2*cp3*m1*m3*y2*z3+c2*cp2*cp3*m1*m3*y2*z3+c3*cp2*cp3*m1*m3*y2*z3+cp1*cp2*cp3*m1*m3*y2*z3+c1*cp1*cp2*cp3*m1*m3*y2*z3+c1*c2*cp1*cp2*cp3*m1*m3*y2*z3+c1*c3*cp1*cp2*cp3*m1*m3*y2*z3+cp1*cp3*m2*m3*y2*z3+c1*c2*cp1*cp3*m2*m3*y2*z3+c1*cp2*cp3*m2*m3*y2*z3+c1*cp1*cp2*cp3*m2*m3*y2*z3+c1*c2*cp1*cp2*cp3*m2*m3*y2*z3+cp1*cp3*m1*m2*m3*y2*z3+c1*cp1*cp3*m1*m2*m3*y2*z3+c2*cp1*cp3*m1*m2*m3*y2*z3+cp2*cp3*m1*m2*m3*y2*z3+c1*cp1*cp2*cp3*m1*m2*m3*y2*z3+c2*cp1*cp2*cp3*m1*m2*m3*y2*z3+c1*cp1*cp2*y3*z3+c1*c3*cp1*cp2*y3*z3+c2*c3*cp1*cp3*y3*z3+c1*c3*cp2*cp3*y3*z3+c1*cp1*cp2*cp3*y3*z3+cp1*cp2*m1*y3*z3+c3*cp1*cp2*m1*y3*z3+cp1*cp2*cp3*m1*y3*z3+c3*cp1*cp2*cp3*m1*y3*z3+cp1*cp2*m2*y3*z3+c3*cp1*cp2*m2*y3*z3+cp1*cp2*cp3*m2*y3*z3+c1*cp1*cp2*m3*y3*z3+c2*c3*cp1*cp2*m3*y3*z3+c2*c3*cp1*cp3*m3*y3*z3+c1*cp2*cp3*m3*y3*z3+cp1*cp2*cp3*m3*y3*z3+c2*cp1*cp2*cp3*m3*y3*z3+c3*cp1*cp2*cp3*m3*y3*z3+cp1*cp2*m1*m3*y3*z3+c1*cp1*cp2*m1*m3*y3*z3+c2*cp1*cp2*m1*m3*y3*z3+c1*c3*cp1*cp2*m1*m3*y3*z3+c2*c3*cp1*cp2*m1*m3*y3*z3+c1*c3*cp2*cp3*m1*m3*y3*z3+c2*c3*cp2*cp3*m1*m3*y3*z3+cp1*cp2*cp3*m1*m3*y3*z3+c1*cp1*cp2*cp3*m1*m3*y3*z3+c2*cp1*cp2*cp3*m1*m3*y3*z3+c2*c3*cp1*m2*m3*y3*z3+c1*cp1*cp2*m2*m3*y3*z3+c1*c3*cp1*cp2*m2*m3*y3*z3+c2*c3*cp1*cp2*m2*m3*y3*z3+c1*c3*cp2*cp3*m2*m3*y3*z3+cp1*cp2*cp3*m2*m3*y3*z3+c1*cp1*cp2*cp3*m2*m3*y3*z3+c2*cp1*cp2*cp3*m2*m3*y3*z3+c3*cp1*cp2*cp3*m2*m3*y3*z3+cp1*cp2*m1*m2*m3*y3*z3+c3*cp1*cp2*m1*m2*m3*y3*z3+c3*cp2*cp3*m1*m2*m3*y3*z3+cp1*cp2*cp3*m1*m2*m3*y3*z3+c1*c2*cp1*z1*z3+c1*c3*cp1*cp2*z1*z3+c2*c3*cp1*cp2*z1*z3+c1*c2*c3*cp1*cp2*z1*z3+c1*c2*c3*cp1*cp3*z1*z3+c1*c2*cp2*cp3*z1*z3+c2*c3*cp2*cp3*z1*z3+c1*c2*cp1*cp2*cp3*z1*z3+c1*c3*cp1*cp2*cp3*z1*z3+c2*cp1*m1*z1*z3+c3*cp1*cp2*m1*z1*z3+c2*c3*cp1*cp2*m1*z1*z3+c2*c3*cp1*cp3*m1*z1*z3+c3*cp1*cp2*cp3*m1*z1*z3+c1*c2*cp1*cp2*m2*z1*z3+c1*c2*c3*cp1*cp2*m2*z1*z3+c1*c2*cp1*cp3*m2*z1*z3+c1*c2*c3*cp1*cp3*m2*z1*z3+c2*cp2*cp3*m2*z1*z3+c2*cp1*cp2*cp3*m2*z1*z3+c2*cp1*cp2*m1*m2*z1*z3+c2*c3*cp1*cp2*m1*m2*z1*z3+c2*cp1*cp3*m1*m2*z1*z3+c2*c3*cp1*cp3*m1*m2*z1*z3+c1*c2*cp1*cp2*m3*z1*z3+c1*c2*c3*cp1*cp2*m3*z1*z3+c1*c2*cp1*cp3*m3*z1*z3+c1*c2*c3*cp1*cp3*m3*z1*z3+c2*cp1*cp2*m1*m3*z1*z3+c2*c3*cp1*cp2*m1*m3*z1*z3+c2*cp1*cp3*m1*m3*z1*z3+c2*c3*cp1*cp3*m1*m3*z1*z3+c1*c2*cp1*cp3*m2*m3*z1*z3+c1*c2*cp1*cp2*cp3*m2*m3*z1*z3+c2*cp1*cp3*m1*m2*m3*z1*z3+c2*cp1*cp2*cp3*m1*m2*m3*z1*z3+c1*c2*cp1*z2*z3+c1*c3*cp1*cp2*z2*z3+c1*c2*c3*cp1*cp2*z2*z3+c1*c2*c3*cp1*cp3*z2*z3+c1*c2*cp1*cp2*cp3*z2*z3+c1*c3*cp1*cp2*cp3*z2*z3+cp1*m1*z2*z3+c1*cp1*m1*z2*z3+cp1*cp2*m1*z2*z3+c1*cp1*cp2*m1*z2*z3+c1*c2*cp1*cp2*m1*z2*z3+c1*c2*c3*cp1*cp2*m1*z2*z3+cp1*cp3*m1*z2*z3+c1*cp1*cp3*m1*z2*z3+c1*c2*cp1*cp3*m1*z2*z3+c1*c2*c3*cp1*cp3*m1*z2*z3+cp1*cp2*cp3*m1*z2*z3+c1*cp1*cp2*cp3*m1*z2*z3+c1*c2*cp1*cp2*m2*z2*z3+c1*c2*c3*cp1*cp2*m2*z2*z3+c1*c2*cp1*cp3*m2*z2*z3+c1*c2*c3*cp1*cp3*m2*z2*z3+cp1*m1*m2*z2*z3+cp1*cp2*m1*m2*z2*z3+c1*cp1*cp2*m1*m2*z2*z3+c1*c3*cp1*cp2*m1*m2*z2*z3+cp1*cp3*m1*m2*z2*z3+cp1*cp2*cp3*m1*m2*z2*z3+c1*cp1*cp2*cp3*m1*m2*z2*z3+c1*c3*cp1*cp2*cp3*m1*m2*z2*z3+c1*c2*cp1*cp2*m3*z2*z3+c1*c2*c3*cp1*cp2*m3*z2*z3+c1*c2*cp1*cp3*m3*z2*z3+c1*c2*c3*cp1*cp3*m3*z2*z3+cp1*m1*m3*z2*z3+cp1*cp2*m1*m3*z2*z3+c1*cp1*cp2*m1*m3*z2*z3+c1*c3*cp1*cp2*m1*m3*z2*z3+cp1*cp3*m1*m3*z2*z3+c1*c2*cp1*cp3*m1*m3*z2*z3+cp1*cp2*cp3*m1*m3*z2*z3+c1*cp1*cp2*cp3*m1*m3*z2*z3+c1*c2*cp1*cp2*cp3*m1*m3*z2*z3+c1*c3*cp1*cp2*cp3*m1*m3*z2*z3+c1*c2*cp1*cp3*m2*m3*z2*z3+c1*c2*cp1*cp2*cp3*m2*m3*z2*z3+(1/2)*c1*c2*z3*(1+z3)+(1/2)*c2*c3*cp1*z3*(1+z3)+(1/2)*cp1*cp2*z3*(1+z3)+(1/2)*c3*cp1*cp2*z3*(1+z3)+(1/2)*c1*c3*cp1*cp2*z3*(1+z3)+(1/2)*c1*c2*cp3*z3*(1+z3)+(1/2)*c2*cp1*cp3*z3*(1+z3)+(1/2)*c2*c3*cp1*cp3*z3*(1+z3)+(1/2)*c1*cp2*cp3*z3*(1+z3)+(1/2)*c1*c3*cp2*cp3*z3*(1+z3)+(1/2)*c1*cp1*cp2*cp3*z3*(1+z3)+(1/2)*c2*cp1*m1*z3*(1+z3)+(1/2)*c1*cp1*cp2*m1*z3*(1+z3)+(1/2)*c2*cp1*cp2*m1*z3*(1+z3)+(1/2)*c3*cp1*cp2*m1*z3*(1+z3)+(1/2)*c1*c3*cp1*cp2*m1*z3*(1+z3)+(1/2)*c2*c3*cp1*cp2*m1*z3*(1+z3)+(1/2)*c2*cp1*cp3*m1*z3*(1+z3)+(1/2)*cp2*cp3*m1*z3*(1+z3)+(1/2)*c1*cp2*cp3*m1*z3*(1+z3)+(1/2)*c2*cp2*cp3*m1*z3*(1+z3)+(1/2)*c3*cp2*cp3*m1*z3*(1+z3)+(1/2)*c1*c3*cp2*cp3*m1*z3*(1+z3)+(1/2)*c2*c3*cp2*cp3*m1*z3*(1+z3)+(1/2)*cp1*cp2*cp3*m1*z3*(1+z3)+(1/2)*cp1*m2*z3*(1+z3)+(1/2)*c1*cp1*m2*z3*(1+z3)+(1/2)*c2*cp1*m2*z3*(1+z3)+(1/2)*c2*c3*cp1*m2*z3*(1+z3)+(1/2)*c1*cp2*m2*z3*(1+z3)+(1/2)*c1*cp1*cp2*m2*z3*(1+z3)+(1/2)*c1*c3*cp1*cp2*m2*z3*(1+z3)+(1/2)*c2*c3*cp1*cp2*m2*z3*(1+z3)+(1/2)*cp1*cp3*m2*z3*(1+z3)+(1/2)*c1*cp1*cp3*m2*z3*(1+z3)+(1/2)*c1*c3*cp2*cp3*m2*z3*(1+z3)+(1/2)*cp1*cp2*cp3*m2*z3*(1+z3)+(1/2)*c3*cp1*cp2*cp3*m2*z3*(1+z3)+(1/2)*cp1*m1*m2*z3*(1+z3)+(1/2)*c3*cp1*cp2*m1*m2*z3*(1+z3)+(1/2)*cp1*cp3*m1*m2*z3*(1+z3)+(1/2)*cp2*cp3*m1*m2*z3*(1+z3)+(1/2)*c3*cp2*cp3*m1*m2*z3*(1+z3)+(1/2)*cp1*cp2*cp3*m1*m2*z3*(1+z3)+(1/2)*c2*c3*cp1*m3*z3*(1+z3)+(1/2)*c1*cp1*cp2*m3*z3*(1+z3)+(1/2)*c1*c3*cp1*cp2*m3*z3*(1+z3)+(1/2)*c2*c3*cp1*cp2*m3*z3*(1+z3)+(1/2)*c1*cp2*cp3*m3*z3*(1+z3)+(1/2)*c1*c3*cp2*cp3*m3*z3*(1+z3)+(1/2)*cp1*cp2*cp3*m3*z3*(1+z3)+(1/2)*c2*cp1*cp2*cp3*m3*z3*(1+z3)+(1/2)*c3*cp1*cp2*cp3*m3*z3*(1+z3)+(1/2)*cp1*cp2*m1*m3*z3*(1+z3)+(1/2)*c3*cp1*cp2*m1*m3*z3*(1+z3)+(1/2)*cp2*cp3*m1*m3*z3*(1+z3)+(1/2)*c1*cp2*cp3*m1*m3*z3*(1+z3)+(1/2)*c2*cp2*cp3*m1*m3*z3*(1+z3)+(1/2)*c3*cp2*cp3*m1*m3*z3*(1+z3)+(1/2)*c1*cp1*cp2*cp3*m1*m3*z3*(1+z3)+(1/2)*c2*cp1*cp2*cp3*m1*m3*z3*(1+z3)+(1/2)*cp1*m2*m3*z3*(1+z3)+(1/2)*cp1*cp3*m2*m3*z3*(1+z3)+(1/2)*c2*cp1*cp3*m2*m3*z3*(1+z3)+(1/2)*c1*cp2*cp3*m2*m3*z3*(1+z3)+(1/2)*cp1*cp2*cp3*m2*m3*z3*(1+z3)+(1/2)*c1*cp1*cp2*cp3*m2*m3*z3*(1+z3)+(1/2)*c2*cp1*cp2*cp3*m2*m3*z3*(1+z3)+(1/2)*cp2*cp3*m1*m2*m3*z3*(1+z3)+(1/2)*cp1*cp2*cp3*m1*m2*m3*z3*(1+z3);
end;
#####################################################################
#Space Group No. 110 (Subscript[I4,1]cd)
#####################################################################
Ampin110:=function(g1)
local x1, y1, z1, c1, mp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];mp1:=g1[5];m1:=g1[6];
return mp1;
end;
#####################################################################
Amin110:=function(g1)
local x1, y1, z1, c1, mp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];mp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Bdeltain110:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
CGAPin110:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c2*c3+c1*c2*c3*cp1+c1*c2*c3*cp2+c1*cp1*cp2*cp3+c1*c2*cp1*cp2*cp3+c1*c3*cp1*cp2*cp3+c1*c2*c3*cp1*cp2*cp3+c1*c2*c3*m1+c2*c3*cp1*m1+c1*c2*c3*cp1*m1+c3*cp1*cp2*m1+c2*c3*cp1*cp2*m1+c1*c2*c3*cp1*cp2*m1+c1*c2*c3*cp1*cp3*m1+c1*cp2*cp3*m1+c1*cp1*cp2*cp3*m1+c2*cp1*cp2*cp3*m1+c1*c3*cp1*cp2*cp3*m1+c1*c2*c3*cp1*cp2*cp3*m1+c1*c2*c3*cp1*m2+c1*c3*cp2*m2+c3*cp1*cp2*m2+c1*c2*c3*cp3*m2+c1*cp1*cp3*m2+c2*cp1*cp3*m2+c1*c2*cp1*cp3*m2+c1*c3*cp1*cp3*m2+c2*c3*cp1*cp3*m2+c1*c2*cp2*cp3*m2+c1*c2*c3*cp2*cp3*m2+cp1*cp2*cp3*m2+c1*cp1*cp2*cp3*m2+c2*cp1*cp2*cp3*m2+c3*cp1*cp2*cp3*m2+c1*c2*c3*cp1*cp2*cp3*m2+c1*c3*m1*m2+c2*c3*m1*m2+c1*c3*cp2*m1*m2+c2*c3*cp2*m1*m2+c3*cp1*cp2*m1*m2+c1*c3*cp1*cp2*m1*m2+c1*cp3*m1*m2+c1*c2*cp3*m1*m2+c1*c3*cp3*m1*m2+c2*c3*cp3*m1*m2+cp1*cp3*m1*m2+c1*c2*cp1*cp3*m1*m2+c1*c2*c3*cp1*cp3*m1*m2+c3*cp2*cp3*m1*m2+c1*c3*cp2*cp3*m1*m2+c1*c2*c3*cp2*cp3*m1*m2+cp1*cp2*cp3*m1*m2+c1*cp1*cp2*cp3*m1*m2+c2*cp1*cp2*cp3*m1*m2+c1*c2*cp1*cp2*cp3*m1*m2+c2*c3*cp1*cp2*cp3*m1*m2+c1*c2*c3*cp1*cp2*cp3*m1*m2+c1*c2*cp1*m3+c1*cp2*m3+c1*c3*cp2*m3+c1*c2*c3*cp2*m3+c2*cp1*cp2*m3+c3*cp1*cp2*m3+c1*c2*c3*cp1*cp2*m3+c1*c2*cp3*m3+c1*c2*cp2*cp3*m3+c2*cp1*cp2*cp3*m3+c1*c2*cp1*cp2*cp3*m3+c3*cp1*cp2*cp3*m3+c2*cp1*m1*m3+c2*c3*cp1*m1*m3+c1*c2*c3*cp2*m1*m3+cp1*cp2*m1*m3+c1*cp1*cp2*m1*m3+c2*cp1*cp2*m1*m3+c3*cp1*cp2*m1*m3+c2*c3*cp1*cp2*m1*m3+c1*c2*cp3*m1*m3+c2*cp1*cp3*m1*m3+c1*c2*c3*cp1*cp3*m1*m3+c1*cp2*cp3*m1*m3+c1*c3*cp2*cp3*m1*m3+c1*c2*c3*cp2*cp3*m1*m3+cp1*cp2*cp3*m1*m3+c2*cp1*cp2*cp3*m1*m3+c3*cp1*cp2*cp3*m1*m3+c2*c3*cp1*cp2*cp3*m1*m3+c1*c2*m2*m3+c2*cp1*m2*m3+c1*c2*cp1*m2*m3+c3*cp1*m2*m3+c1*cp2*m2*m3+c1*c3*cp2*m2*m3+cp1*cp2*m2*m3+c1*cp1*cp2*m2*m3+c1*c2*cp1*cp2*m2*m3+c3*cp1*cp2*m2*m3+c1*cp3*m2*m3+c1*c3*cp3*m2*m3+c1*cp1*cp3*m2*m3+c2*cp1*cp3*m2*m3+c3*cp1*cp3*m2*m3+c1*c3*cp1*cp3*m2*m3+c2*c3*cp1*cp3*m2*m3+c1*c2*c3*cp1*cp3*m2*m3+c1*cp2*cp3*m2*m3+c1*c2*cp2*cp3*m2*m3+c1*c3*cp2*cp3*m2*m3+cp1*cp2*cp3*m2*m3+c1*cp1*cp2*cp3*m2*m3+c2*m1*m2*m3+c1*c2*m1*m2*m3+c1*c3*m1*m2*m3+c2*c3*m1*m2*m3+cp1*m1*m2*m3+c2*c3*cp1*m1*m2*m3+c1*c2*c3*cp1*m1*m2*m3+cp2*m1*m2*m3+c1*cp2*m1*m2*m3+c3*cp2*m1*m2*m3+c1*c3*cp2*m1*m2*m3+cp1*cp2*m1*m2*m3+c1*cp1*cp2*m1*m2*m3+c3*cp1*cp2*m1*m2*m3+c1*c2*c3*cp1*cp2*m1*m2*m3+c1*cp3*m1*m2*m3+c2*cp3*m1*m2*m3+c3*cp3*m1*m2*m3+c1*c3*cp3*m1*m2*m3+c2*c3*cp3*m1*m2*m3+c1*cp1*cp3*m1*m2*m3+c1*c2*cp1*cp3*m1*m2*m3+c3*cp1*cp3*m1*m2*m3+c1*c3*cp1*cp3*m1*m2*m3+c1*c2*c3*cp1*cp3*m1*m2*m3+cp2*cp3*m1*m2*m3+c1*cp2*cp3*m1*m2*m3+c2*cp2*cp3*m1*m2*m3+c1*c2*cp2*cp3*m1*m2*m3+c1*c2*c3*cp2*cp3*m1*m2*m3+c2*cp1*cp2*cp3*m1*m2*m3+c1*c3*cp1*cp2*cp3*m1*m2*m3+c1*c2*c3*cp1*cp2*cp3*m1*m2*m3+c1*c2*c3*x1+c1*c2*c3*cp1*x1+c3*cp2*x1+c2*c3*cp2*x1+c3*cp1*cp2*x1+c2*cp3*x1+c2*c3*cp3*x1+c2*cp1*cp3*x1+c2*c3*cp1*cp3*x1+c1*c2*c3*cp1*cp3*x1+cp2*cp3*x1+c2*cp2*cp3*x1+c1*c2*cp2*cp3*x1+c3*cp2*cp3*x1+c1*c2*c3*cp2*cp3*x1+cp1*cp2*cp3*x1+c2*cp1*cp2*cp3*x1+c3*cp1*cp2*cp3*x1+c1*c2*c3*cp1*cp2*cp3*x1+c2*c3*cp2*m1*x1+c3*cp1*cp2*m1*x1+c2*c3*cp1*cp2*m1*x1+c1*c2*cp3*m1*x1+c2*c3*cp3*m1*x1+c1*c2*cp1*cp3*m1*x1+c2*c3*cp1*cp3*m1*x1+c3*cp2*cp3*m1*x1+c2*c3*cp2*cp3*m1*x1+c2*cp1*cp2*cp3*m1*x1+c2*c3*cp1*cp2*cp3*m1*x1+c2*c3*m2*x1+c1*c3*cp2*m2*x1+c1*c3*cp1*cp2*m2*x1+c2*c3*cp1*cp2*m2*x1+cp3*m2*x1+c1*c2*cp3*m2*x1+c1*c3*cp3*m2*x1+cp1*cp3*m2*x1+c1*c2*c3*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c2*cp2*cp3*m2*x1+c2*c3*cp2*cp3*m2*x1+c2*cp1*cp2*cp3*m2*x1+c1*c3*cp1*cp2*cp3*m2*x1+c2*c3*cp1*cp2*cp3*m2*x1+c1*c2*c3*cp1*cp2*cp3*m2*x1+c3*m1*m2*x1+c2*c3*m1*m2*x1+c3*cp1*m1*m2*x1+c1*c3*cp1*m1*m2*x1+c2*c3*cp1*m1*m2*x1+c3*cp2*m1*m2*x1+c1*c3*cp2*m1*m2*x1+c2*c3*cp2*m1*m2*x1+c1*c3*cp1*cp2*m1*m2*x1+cp3*m1*m2*x1+c1*cp3*m1*m2*x1+c2*cp3*m1*m2*x1+c1*c2*cp3*m1*m2*x1+c3*cp3*m1*m2*x1+c2*c3*cp3*m1*m2*x1+c1*cp1*cp3*m1*m2*x1+c1*c2*cp1*cp3*m1*m2*x1+c3*cp1*cp3*m1*m2*x1+c1*c3*cp1*cp3*m1*m2*x1+c1*cp2*cp3*m1*m2*x1+c1*cp1*cp2*cp3*m1*m2*x1+c2*cp1*cp2*cp3*m1*m2*x1+c2*m3*x1+c2*cp1*m3*x1+cp2*m3*x1+c1*cp2*m3*x1+c1*c2*cp2*m3*x1+c1*c3*cp2*m3*x1+c2*c3*cp2*m3*x1+c1*c2*c3*cp2*m3*x1+cp1*cp2*m3*x1+c1*cp1*cp2*m3*x1+c2*cp1*cp2*m3*x1+c1*c2*cp1*cp2*m3*x1+c2*cp3*m3*x1+c2*c3*cp3*m3*x1+c2*cp1*cp3*m3*x1+c2*c3*cp1*cp3*m3*x1+c1*c2*c3*cp1*cp3*m3*x1+cp2*cp3*m3*x1+c1*cp2*cp3*m3*x1+c3*cp2*cp3*m3*x1+cp1*cp2*cp3*m3*x1+c1*cp1*cp2*cp3*m3*x1+c2*cp1*cp2*cp3*m3*x1+c3*cp1*cp2*cp3*m3*x1+c2*c3*cp1*cp2*cp3*m3*x1+cp2*m1*m3*x1+c1*cp2*m1*m3*x1+c2*cp2*m1*m3*x1+c3*cp2*m1*m3*x1+c2*c3*cp2*m1*m3*x1+cp1*cp2*m1*m3*x1+c1*cp1*cp2*m1*m3*x1+c1*c2*cp1*cp2*m1*m3*x1+c3*cp1*cp2*m1*m3*x1+c1*c3*cp1*cp2*m1*m3*x1+c2*c3*cp1*cp2*m1*m3*x1+c2*cp3*m1*m3*x1+c2*c3*cp3*m1*m3*x1+c1*c2*c3*cp3*m1*m3*x1+c2*cp1*cp3*m1*m3*x1+c1*c2*cp1*cp3*m1*m3*x1+c2*c3*cp1*cp3*m1*m3*x1+cp2*cp3*m1*m3*x1+c1*cp2*cp3*m1*m3*x1+c3*cp2*cp3*m1*m3*x1+c1*c3*cp2*cp3*m1*m3*x1+c3*cp1*cp2*cp3*m1*m3*x1+c2*m2*m3*x1+c1*c2*m2*m3*x1+c2*c3*m2*m3*x1+c1*cp1*m2*m3*x1+c1*c2*cp1*m2*m3*x1+c1*c3*cp1*m2*m3*x1+c1*c3*cp2*m2*m3*x1+c1*c2*c3*cp2*m2*m3*x1+c1*c3*cp1*cp2*m2*m3*x1+c2*c3*cp1*cp2*m2*m3*x1+cp3*m2*m3*x1+c2*cp3*m2*m3*x1+c1*c3*cp3*m2*m3*x1+cp1*cp3*m2*m3*x1+c2*cp1*cp3*m2*m3*x1+c3*cp1*cp3*m2*m3*x1+c2*cp2*cp3*m2*m3*x1+c1*c2*cp2*cp3*m2*m3*x1+c1*c2*c3*cp2*cp3*m2*m3*x1+c2*cp1*cp2*cp3*m2*m3*x1+c1*c2*cp1*cp2*cp3*m2*m3*x1+c1*c3*cp1*cp2*cp3*m2*m3*x1+c2*c3*cp1*cp2*cp3*m2*m3*x1+c1*m1*m2*m3*x1+c1*cp1*m1*m2*m3*x1+c1*cp2*m1*m2*m3*x1+c2*cp2*m1*m2*m3*x1+c3*cp2*m1*m2*m3*x1+c2*c3*cp2*m1*m2*m3*x1+cp1*cp2*m1*m2*m3*x1+c3*cp1*cp2*m1*m2*m3*x1+c2*c3*cp1*cp2*m1*m2*m3*x1+cp3*m1*m2*m3*x1+c1*cp3*m1*m2*m3*x1+c2*cp3*m1*m2*m3*x1+c1*c2*cp3*m1*m2*m3*x1+c1*c2*c3*cp3*m1*m2*m3*x1+c2*cp1*cp3*m1*m2*m3*x1+c3*cp1*cp3*m1*m2*m3*x1+c1*c3*cp1*cp3*m1*m2*m3*x1+c2*c3*cp1*cp3*m1*m2*m3*x1+c1*cp2*cp3*m1*m2*m3*x1+c2*cp2*cp3*m1*m2*m3*x1+c3*cp2*cp3*m1*m2*m3*x1+c1*c3*cp2*cp3*m1*m2*m3*x1+c2*c3*cp2*cp3*m1*m2*m3*x1+cp1*cp2*cp3*m1*m2*m3*x1+c1*cp1*cp2*cp3*m1*m2*m3*x1+c2*cp1*cp2*cp3*m1*m2*m3*x1+c3*cp1*cp2*cp3*m1*m2*m3*x1+c2*c3*cp1*cp2*cp3*m1*m2*m3*x1+c1*c2*c3*cp1*x2+c1*cp3*x2+c1*c2*cp3*x2+c1*c3*cp3*x2+cp1*cp3*x2+c1*c2*cp1*cp3*x2+c3*cp1*cp3*x2+c2*c3*cp1*cp3*x2+c1*c2*c3*cp1*cp3*x2+c1*cp2*cp3*x2+c1*c3*cp2*cp3*x2+c1*cp1*cp2*cp3*x2+c1*c2*cp1*cp2*cp3*x2+c1*c3*cp1*cp2*cp3*x2+c1*c2*c3*cp1*cp2*cp3*x2+c2*c3*m1*x2+c2*c3*cp1*m1*x2+c1*c2*c3*cp1*m1*x2+c2*c3*cp2*m1*x2+c1*cp3*m1*x2+c2*cp3*m1*x2+c1*c2*cp3*m1*x2+c3*cp3*m1*x2+c2*c3*cp3*m1*x2+cp1*cp3*m1*x2+c1*cp1*cp3*m1*x2+c2*cp1*cp3*m1*x2+c1*c2*cp1*cp3*m1*x2+c3*cp1*cp3*m1*x2+c1*c3*cp1*cp3*m1*x2+c2*c3*cp1*cp3*m1*x2+c1*c2*c3*cp1*cp3*m1*x2+c1*cp2*cp3*m1*x2+c2*cp2*cp3*m1*x2+c1*c3*cp2*cp3*m1*x2+c2*c3*cp2*cp3*m1*x2+c2*cp1*cp2*cp3*m1*x2+c1*c2*cp1*cp2*cp3*m1*x2+c3*cp1*cp2*cp3*m1*x2+c1*c2*c3*cp1*cp2*cp3*m1*x2+c1*c3*m2*x2+c1*c3*cp1*m2*x2+c2*c3*cp1*m2*x2+c1*c2*c3*cp1*m2*x2+c1*c3*cp1*cp2*m2*x2+c2*c3*cp1*cp2*m2*x2+c1*c2*c3*cp1*cp2*m2*x2+c1*c3*cp3*m2*x2+cp1*cp3*m2*x2+c1*cp1*cp3*m2*x2+c1*c3*cp1*cp3*m2*x2+c1*cp2*cp3*m2*x2+c1*c3*cp2*cp3*m2*x2+c1*cp1*cp2*cp3*m2*x2+c2*cp1*cp2*cp3*m2*x2+c1*c2*cp1*cp2*cp3*m2*x2+c3*cp1*cp2*cp3*m2*x2+c1*c3*cp1*cp2*cp3*m2*x2+c1*c2*c3*cp1*cp2*cp3*m2*x2+c3*m1*m2*x2+c1*c3*m1*m2*x2+c2*c3*cp1*m1*m2*x2+c3*cp2*m1*m2*x2+c1*c3*cp2*m1*m2*x2+c1*c3*cp1*cp2*m1*m2*x2+c2*c3*cp1*cp2*m1*m2*x2+c1*c2*c3*cp1*cp2*m1*m2*x2+cp3*m1*m2*x2+c2*cp3*m1*m2*x2+c1*c2*cp3*m1*m2*x2+c3*cp3*m1*m2*x2+c1*c3*cp3*m1*m2*x2+c1*cp1*cp3*m1*m2*x2+c3*cp1*cp3*m1*m2*x2+c1*c2*c3*cp1*cp3*m1*m2*x2+cp2*cp3*m1*m2*x2+c1*cp1*cp2*cp3*m1*m2*x2+c2*cp1*cp2*cp3*m1*m2*x2+c3*cp1*cp2*cp3*m1*m2*x2+c2*c3*cp1*cp2*cp3*m1*m2*x2+cp1*m3*x2+c1*cp1*m3*x2+c2*cp1*m3*x2+c1*c2*cp1*m3*x2+c3*cp1*m3*x2+c2*c3*cp1*m3*x2+c1*c2*c3*cp1*m3*x2+c1*c2*cp2*m3*x2+cp1*cp2*m3*x2+c1*cp1*cp2*m3*x2+c2*cp1*cp2*m3*x2+c1*c2*cp1*cp2*m3*x2+c3*cp1*cp2*m3*x2+c2*c3*cp1*cp2*m3*x2+c1*c2*c3*cp1*cp2*m3*x2+c1*c2*cp3*m3*x2+c1*c3*cp3*m3*x2+c1*c2*c3*cp3*m3*x2+c1*cp1*cp3*m3*x2+c2*cp1*cp3*m3*x2+c3*cp1*cp3*m3*x2+c1*c2*c3*cp1*cp3*m3*x2+c1*c3*cp2*cp3*m3*x2+c1*cp1*cp2*cp3*m3*x2+c1*c2*cp1*cp2*cp3*m3*x2+c3*cp1*cp2*cp3*m3*x2+m1*m3*x2+c2*m1*m3*x2+c1*c2*m1*m3*x2+c3*m1*m3*x2+c1*c3*m1*m3*x2+c1*c3*cp1*m1*m3*x2+c1*c2*c3*cp1*m1*m3*x2+c1*cp2*m1*m3*x2+c1*c3*cp2*m1*m3*x2+c2*c3*cp2*m1*m3*x2+c1*c2*c3*cp2*m1*m3*x2+c3*cp1*cp2*m1*m3*x2+c2*c3*cp1*cp2*m1*m3*x2+c2*cp3*m1*m3*x2+c3*cp3*m1*m3*x2+c1*c3*cp3*m1*m3*x2+c2*c3*cp3*m1*m3*x2+cp1*cp3*m1*m3*x2+c1*cp1*cp3*m1*m3*x2+c3*cp1*cp3*m1*m3*x2+c1*c3*cp1*cp3*m1*m3*x2+c2*c3*cp1*cp3*m1*m3*x2+c1*c2*c3*cp1*cp3*m1*m3*x2+c1*cp2*cp3*m1*m3*x2+c2*cp2*cp3*m1*m3*x2+c1*c2*cp2*cp3*m1*m3*x2+cp1*cp2*cp3*m1*m3*x2+c2*cp1*cp2*cp3*m1*m3*x2+c3*cp1*cp2*cp3*m1*m3*x2+c1*c3*cp1*cp2*cp3*m1*m3*x2+c1*m2*m3*x2+c1*cp1*m2*m3*x2+c3*cp1*m2*m3*x2+c1*c2*cp2*m2*m3*x2+c1*c3*cp2*m2*m3*x2+cp1*cp2*m2*m3*x2+c2*cp1*cp2*m2*m3*x2+c1*c2*cp1*cp2*m2*m3*x2+c1*cp3*m2*m3*x2+c1*c2*cp3*m2*m3*x2+c1*c2*c3*cp3*m2*m3*x2+cp1*cp3*m2*m3*x2+c2*cp1*cp3*m2*m3*x2+c1*c2*cp1*cp3*m2*m3*x2+c3*cp1*cp3*m2*m3*x2+c1*c3*cp1*cp3*m2*m3*x2+c1*c2*c3*cp1*cp3*m2*m3*x2+c1*cp2*cp3*m2*m3*x2+c1*c2*cp2*cp3*m2*m3*x2+c1*c3*cp2*cp3*m2*m3*x2+cp1*cp2*cp3*m2*m3*x2+c1*cp1*cp2*cp3*m2*m3*x2+c3*cp1*cp2*cp3*m2*m3*x2+c1*c3*cp1*cp2*cp3*m2*m3*x2+c1*cp1*m1*m2*m3*x2+c2*cp1*m1*m2*m3*x2+c1*c2*cp1*m1*m2*m3*x2+c3*cp1*m1*m2*m3*x2+c1*c3*cp1*m1*m2*m3*x2+c2*c3*cp1*m1*m2*m3*x2+c1*c2*c3*cp1*m1*m2*m3*x2+cp2*m1*m2*m3*x2+c2*cp2*m1*m2*m3*x2+c1*c3*cp2*m1*m2*m3*x2+c2*c3*cp2*m1*m2*m3*x2+c1*c2*c3*cp2*m1*m2*m3*x2+cp1*cp2*m1*m2*m3*x2+c1*cp1*cp2*m1*m2*m3*x2+c1*c2*cp1*cp2*m1*m2*m3*x2+cp3*m1*m2*m3*x2+c1*cp3*m1*m2*m3*x2+c2*cp3*m1*m2*m3*x2+c1*c2*cp3*m1*m2*m3*x2+c3*cp3*m1*m2*m3*x2+c1*cp1*cp3*m1*m2*m3*x2+c2*cp1*cp3*m1*m2*m3*x2+c1*c2*cp1*cp3*m1*m2*m3*x2+c1*c3*cp1*cp3*m1*m2*m3*x2+cp2*cp3*m1*m2*m3*x2+c1*cp2*cp3*m1*m2*m3*x2+c2*cp2*cp3*m1*m2*m3*x2+c3*cp2*cp3*m1*m2*m3*x2+cp1*cp2*cp3*m1*m2*m3*x2+c1*cp1*cp2*cp3*m1*m2*m3*x2+c3*cp1*cp2*cp3*m1*m2*m3*x2+c1*c3*cp1*cp2*cp3*m1*m2*m3*x2+c3*cp1*x1*x2+c1*c3*cp2*x1*x2+c1*c3*cp1*cp2*x1*x2+c1*cp3*x1*x2+c1*cp1*cp3*x1*x2+c2*cp1*cp3*x1*x2+c1*c2*cp1*cp3*x1*x2+c3*cp1*cp3*x1*x2+c1*c3*cp1*cp3*x1*x2+c1*cp2*cp3*x1*x2+c3*cp2*m1*x1*x2+cp3*m1*x1*x2+cp1*cp3*m1*x1*x2+c1*cp1*cp3*m1*x1*x2+c2*cp1*cp3*m1*x1*x2+c3*cp1*cp3*m1*x1*x2+cp2*cp3*m1*x1*x2+cp1*cp2*cp3*m1*x1*x2+c1*c3*m2*x1*x2+c1*c3*cp1*m2*x1*x2+c3*cp1*cp2*m2*x1*x2+c1*c3*cp1*cp2*m2*x1*x2+c1*cp1*cp3*m2*x1*x2+c1*c2*cp1*cp3*m2*x1*x2+c1*c3*cp1*cp3*m2*x1*x2+c3*m1*m2*x1*x2+c3*cp1*m1*m2*x1*x2+cp1*cp2*cp3*m1*m2*x1*x2+c1*c2*m3*x1*x2+c1*c3*m3*x1*x2+c1*cp1*m3*x1*x2+c2*cp1*m3*x1*x2+c1*c2*cp1*m3*x1*x2+c3*cp1*m3*x1*x2+c1*c3*cp1*m3*x1*x2+c2*cp1*cp2*m3*x1*x2+c1*c2*cp1*cp2*m3*x1*x2+c3*cp1*cp2*m3*x1*x2+c1*c3*cp1*cp2*m3*x1*x2+c1*c2*cp3*m3*x1*x2+c1*c3*cp3*m3*x1*x2+c1*c2*c3*cp3*m3*x1*x2+c1*cp1*cp3*m3*x1*x2+c1*c2*cp1*cp3*m3*x1*x2+c1*c3*cp2*cp3*m3*x1*x2+cp1*cp2*cp3*m3*x1*x2+c2*m1*m3*x1*x2+c3*m1*m3*x1*x2+c2*cp1*m1*m3*x1*x2+c3*cp1*m1*m3*x1*x2+cp1*cp2*m1*m3*x1*x2+c2*cp3*m1*m3*x1*x2+c3*cp3*m1*m3*x1*x2+c2*c3*cp3*m1*m3*x1*x2+cp1*cp3*m1*m3*x1*x2+c2*cp1*cp3*m1*m3*x1*x2+c3*cp1*cp3*m1*m3*x1*x2+c2*c3*cp1*cp3*m1*m3*x1*x2+c3*cp2*cp3*m1*m3*x1*x2+c3*cp1*cp2*cp3*m1*m3*x1*x2+c1*c3*cp3*m2*m3*x1*x2+cp1*cp3*m2*m3*x1*x2+c2*cp1*cp3*m2*m3*x1*x2+c3*cp1*cp3*m2*m3*x1*x2+c2*c3*cp1*cp3*m2*m3*x1*x2+c1*cp2*cp3*m2*m3*x1*x2+c1*c3*cp2*cp3*m2*m3*x1*x2+cp1*cp2*cp3*m2*m3*x1*x2+c1*cp1*cp2*cp3*m2*m3*x1*x2+c3*cp3*m1*m2*m3*x1*x2+c3*cp1*cp3*m1*m2*m3*x1*x2+cp2*cp3*m1*m2*m3*x1*x2+c3*cp2*cp3*m1*m2*m3*x1*x2+cp1*cp2*cp3*m1*m2*m3*x1*x2+c3*cp1*cp2*cp3*m1*m2*m3*x1*x2+c2*cp1*x3+c2*c3*cp1*x3+c1*c2*c3*cp1*x3+c1*cp2*x3+c1*c2*c3*cp2*x3+cp1*cp2*x3+c1*cp1*cp2*x3+c1*c3*cp1*cp2*x3+c2*c3*cp1*cp2*x3+c1*c2*c3*cp1*cp2*x3+c1*c2*c3*cp3*x3+c2*c3*cp1*cp3*x3+c1*cp2*cp3*x3+c1*c2*cp2*cp3*x3+c1*c3*cp2*cp3*x3+c1*c2*c3*cp2*cp3*x3+cp1*cp2*cp3*x3+c1*cp1*cp2*cp3*x3+c1*c2*cp1*cp2*cp3*x3+c3*cp1*cp2*cp3*x3+c2*c3*cp1*cp2*cp3*x3+c1*c2*c3*cp1*cp2*cp3*x3+c2*c3*cp1*m1*x3+c1*c2*c3*cp1*m1*x3+cp2*m1*x3+c1*cp2*m1*x3+c2*cp2*m1*x3+c3*cp2*m1*x3+c2*c3*cp2*m1*x3+c1*c2*c3*cp2*m1*x3+cp1*cp2*m1*x3+c1*cp1*cp2*m1*x3+c2*cp1*cp2*m1*x3+c2*c3*cp1*cp2*m1*x3+c1*c2*cp3*m1*x3+c2*c3*cp3*m1*x3+c2*cp1*cp3*m1*x3+c1*c2*c3*cp1*cp3*m1*x3+cp2*cp3*m1*x3+c1*cp2*cp3*m1*x3+c2*cp2*cp3*m1*x3+c3*cp2*cp3*m1*x3+cp1*cp2*cp3*m1*x3+c1*c2*cp1*cp2*cp3*m1*x3+c1*c3*cp1*cp2*cp3*m1*x3+c1*c2*c3*cp1*cp2*cp3*m1*x3+c1*m2*x3+c1*c2*m2*x3+c1*c3*m2*x3+c2*cp1*m2*x3+c1*c3*cp1*m2*x3+c2*c3*cp1*m2*x3+c1*c2*c3*cp1*m2*x3+c1*c2*cp2*m2*x3+c1*c2*c3*cp2*m2*x3+cp1*cp2*m2*x3+c1*cp1*cp2*m2*x3+c3*cp1*cp2*m2*x3+c1*c3*cp1*cp2*m2*x3+c2*c3*cp1*cp2*m2*x3+c1*cp3*m2*x3+c1*c2*cp3*m2*x3+c1*c3*cp3*m2*x3+c1*c2*c3*cp3*m2*x3+c2*c3*cp1*cp3*m2*x3+c1*c2*cp2*cp3*m2*x3+c1*cp1*cp2*cp3*m2*x3+c1*c2*cp1*cp2*cp3*m2*x3+c1*c3*cp1*cp2*cp3*m2*x3+c2*c3*cp1*cp2*cp3*m2*x3+c1*m1*m2*x3+c1*c2*m1*m2*x3+c3*m1*m2*x3+c2*c3*m1*m2*x3+c1*c2*c3*m1*m2*x3+cp1*m1*m2*x3+c1*cp1*m1*m2*x3+c2*cp1*m1*m2*x3+c1*c2*cp1*m1*m2*x3+c1*c2*c3*cp1*m1*m2*x3+cp2*m1*m2*x3+c2*cp2*m1*m2*x3+c1*c2*cp2*m1*m2*x3+c3*cp2*m1*m2*x3+c1*cp1*cp2*m1*m2*x3+c1*c3*cp1*cp2*m1*m2*x3+c2*c3*cp1*cp2*m1*m2*x3+cp3*m1*m2*x3+c2*cp1*cp3*m1*m2*x3+c1*c2*cp1*cp3*m1*m2*x3+c3*cp1*cp3*m1*m2*x3+c1*c3*cp1*cp3*m1*m2*x3+c2*c3*cp1*cp3*m1*m2*x3+cp2*cp3*m1*m2*x3+c1*cp2*cp3*m1*m2*x3+c3*cp2*cp3*m1*m2*x3+c2*c3*cp2*cp3*m1*m2*x3+cp1*cp2*cp3*m1*m2*x3+c1*cp1*cp2*cp3*m1*m2*x3+c3*cp1*cp2*cp3*m1*m2*x3+c2*c3*cp1*cp2*cp3*m1*m2*x3+c1*c2*m3*x3+c1*c2*c3*cp1*m3*x3+c1*cp2*m3*x3+c1*cp1*cp2*m3*x3+c3*cp1*cp2*m3*x3+c1*c3*cp1*cp2*m3*x3+c2*c3*cp1*cp2*m3*x3+c1*c2*cp3*m3*x3+c1*c2*cp1*cp3*m3*x3+c1*cp2*cp3*m3*x3+c1*c3*cp2*cp3*m3*x3+c1*c2*c3*cp2*cp3*m3*x3+c1*cp1*cp2*cp3*m3*x3+c2*c3*cp1*cp2*cp3*m3*x3+c1*c2*m1*m3*x3+cp2*m1*m3*x3+c2*c3*cp2*m1*m3*x3+c1*c2*c3*cp2*m1*m3*x3+cp1*cp2*m1*m3*x3+c1*cp1*cp2*m1*m3*x3+c3*cp1*cp2*m1*m3*x3+c1*c3*cp1*cp2*m1*m3*x3+c2*c3*cp1*cp2*m1*m3*x3+c1*c2*cp3*m1*m3*x3+c2*c3*cp3*m1*m3*x3+c2*cp1*cp3*m1*m3*x3+c1*c2*cp1*cp3*m1*m3*x3+c2*c3*cp1*cp3*m1*m3*x3+cp2*cp3*m1*m3*x3+cp1*cp2*cp3*m1*m3*x3+c1*cp1*cp2*cp3*m1*m3*x3+c2*cp1*cp2*cp3*m1*m3*x3+c1*c2*cp1*cp2*cp3*m1*m3*x3+c3*cp1*cp2*cp3*m1*m3*x3+c1*m2*m3*x3+c1*c3*m2*m3*x3+cp1*m2*m3*x3+c1*c3*cp1*m2*m3*x3+c1*c2*cp2*m2*m3*x3+c1*cp1*cp2*m2*m3*x3+c2*cp1*cp2*m2*m3*x3+c3*cp1*cp2*m2*m3*x3+c1*c2*c3*cp1*cp2*m2*m3*x3+c1*cp3*m2*m3*x3+cp1*cp3*m2*m3*x3+c2*cp1*cp3*m2*m3*x3+c1*c2*cp1*cp3*m2*m3*x3+c1*c3*cp1*cp3*m2*m3*x3+c1*c2*c3*cp1*cp3*m2*m3*x3+c1*cp2*cp3*m2*m3*x3+c1*c2*cp2*cp3*m2*m3*x3+cp1*cp2*cp3*m2*m3*x3+c2*cp1*cp2*cp3*m2*m3*x3+c1*c3*cp1*cp2*cp3*m2*m3*x3+c1*c2*m1*m2*m3*x3+c3*m1*m2*m3*x3+c1*c3*m1*m2*m3*x3+c2*c3*m1*m2*m3*x3+c1*cp1*m1*m2*m3*x3+c2*cp1*m1*m2*m3*x3+c1*c2*cp1*m1*m2*m3*x3+c3*cp1*m1*m2*m3*x3+c1*c2*c3*cp1*m1*m2*m3*x3+cp2*m1*m2*m3*x3+c2*cp2*m1*m2*m3*x3+c1*c3*cp2*m1*m2*m3*x3+c2*c3*cp2*m1*m2*m3*x3+c1*c2*c3*cp2*m1*m2*m3*x3+cp1*cp2*m1*m2*m3*x3+c2*cp1*cp2*m1*m2*m3*x3+cp3*m1*m2*m3*x3+c1*cp3*m1*m2*m3*x3+c2*cp3*m1*m2*m3*x3+c1*c3*cp3*m1*m2*m3*x3+c1*c2*c3*cp3*m1*m2*m3*x3+cp1*cp3*m1*m2*m3*x3+c1*cp1*cp3*m1*m2*m3*x3+c2*cp1*cp3*m1*m2*m3*x3+c3*cp1*cp3*m1*m2*m3*x3+c2*c3*cp1*cp3*m1*m2*m3*x3+c1*cp2*cp3*m1*m2*m3*x3+c1*c2*cp2*cp3*m1*m2*m3*x3+c3*cp2*cp3*m1*m2*m3*x3+c2*c3*cp2*cp3*m1*m2*m3*x3+c1*cp1*cp2*cp3*m1*m2*m3*x3+c2*cp1*cp2*cp3*m1*m2*m3*x3+c3*cp1*cp2*cp3*m1*m2*m3*x3+c1*c2*x1*x3+c1*c2*cp1*x1*x3+c1*c2*c3*cp2*x1*x3+c1*c2*c3*cp1*cp2*x1*x3+c2*cp3*x1*x3+c1*c2*cp3*x1*x3+c2*c3*cp3*x1*x3+c1*c2*c3*cp3*x1*x3+c2*cp1*cp3*x1*x3+c1*c2*cp1*cp3*x1*x3+c2*c3*cp1*cp3*x1*x3+c1*c2*c3*cp1*cp3*x1*x3+c2*cp2*cp3*x1*x3+c1*c2*cp2*cp3*x1*x3+c2*c3*cp2*cp3*x1*x3+c1*cp1*cp2*cp3*x1*x3+c1*c2*cp1*cp2*cp3*x1*x3+c1*c3*cp1*cp2*cp3*x1*x3+c2*m1*x1*x3+c2*cp1*m1*x1*x3+c2*c3*cp2*m1*x1*x3+c2*c3*cp1*cp2*m1*x1*x3+c2*cp3*m1*x1*x3+c2*c3*cp3*m1*x1*x3+c2*cp1*cp3*m1*x1*x3+c2*c3*cp1*cp3*m1*x1*x3+c2*cp2*cp3*m1*x1*x3+c2*cp1*cp2*cp3*m1*x1*x3+m2*x1*x3+c2*m2*x1*x3+c1*c2*m2*x1*x3+c3*m2*x1*x3+c1*c3*m2*x1*x3+c2*c3*m2*x1*x3+cp1*m2*x1*x3+c2*cp1*m2*x1*x3+c1*c2*cp1*m2*x1*x3+c3*cp1*m2*x1*x3+c1*c3*cp1*m2*x1*x3+c2*c3*cp1*m2*x1*x3+cp2*m2*x1*x3+c2*cp2*m2*x1*x3+c3*cp2*m2*x1*x3+c2*c3*cp2*m2*x1*x3+cp1*cp2*m2*x1*x3+c2*cp1*cp2*m2*x1*x3+c3*cp1*cp2*m2*x1*x3+c2*c3*cp1*cp2*m2*x1*x3+c1*cp3*m2*x1*x3+c2*cp3*m2*x1*x3+c1*c3*cp3*m2*x1*x3+c2*c3*cp3*m2*x1*x3+c2*cp1*cp3*m2*x1*x3+c1*c2*cp1*cp3*m2*x1*x3+c2*c3*cp1*cp3*m2*x1*x3+c1*cp2*cp3*m2*x1*x3+c2*cp2*cp3*m2*x1*x3+c3*cp2*cp3*m2*x1*x3+c1*c3*cp2*cp3*m2*x1*x3+cp1*cp2*cp3*m2*x1*x3+c2*cp1*cp2*cp3*m2*x1*x3+c1*c2*cp1*cp2*cp3*m2*x1*x3+c2*m1*m2*x1*x3+c3*m1*m2*x1*x3+c2*cp1*m1*m2*x1*x3+c3*cp1*m1*m2*x1*x3+cp3*m1*m2*x1*x3+c3*cp3*m1*m2*x1*x3+cp1*cp3*m1*m2*x1*x3+c3*cp1*cp3*m1*m2*x1*x3+cp2*cp3*m1*m2*x1*x3+c3*cp2*cp3*m1*m2*x1*x3+cp1*cp2*cp3*m1*m2*x1*x3+c3*cp1*cp2*cp3*m1*m2*x1*x3+c2*m3*x1*x3+c1*c2*m3*x1*x3+c2*cp1*m3*x1*x3+c1*c2*cp1*m3*x1*x3+c2*cp2*m3*x1*x3+c1*c2*cp2*m3*x1*x3+c1*cp1*cp2*m3*x1*x3+c1*c2*cp1*cp2*m3*x1*x3+c1*c3*cp1*cp2*m3*x1*x3+c2*c3*cp1*cp2*m3*x1*x3+c2*cp3*m3*x1*x3+c2*c3*cp3*m3*x1*x3+c2*cp1*cp3*m3*x1*x3+c1*c2*cp1*cp3*m3*x1*x3+c2*cp2*cp3*m3*x1*x3+c1*c2*cp2*cp3*m3*x1*x3+c2*c3*cp2*cp3*m3*x1*x3+c1*cp1*cp2*cp3*m3*x1*x3+c2*m1*m3*x1*x3+c2*cp1*m1*m3*x1*x3+c2*cp2*m1*m3*x1*x3+c2*cp1*cp2*m1*m3*x1*x3+c2*cp2*cp3*m1*m3*x1*x3+c2*cp1*cp2*cp3*m1*m3*x1*x3+c2*m2*m3*x1*x3+c2*cp1*m2*m3*x1*x3+c2*cp2*m2*m3*x1*x3+cp1*cp2*m2*m3*x1*x3+c2*cp1*cp2*m2*m3*x1*x3+c3*cp1*cp2*m2*m3*x1*x3+c1*cp3*m2*m3*x1*x3+c2*cp3*m2*m3*x1*x3+c3*cp3*m2*m3*x1*x3+c2*cp1*cp3*m2*m3*x1*x3+c3*cp1*cp3*m2*m3*x1*x3+c2*cp2*cp3*m2*m3*x1*x3+cp1*cp2*cp3*m2*m3*x1*x3+c1*cp1*cp2*cp3*m2*m3*x1*x3+c2*cp1*cp2*cp3*m2*m3*x1*x3+cp3*m1*m2*m3*x1*x3+cp1*cp3*m1*m2*m3*x1*x3+c2*c3*cp1*x2*x3+c1*c2*cp2*x2*x3+cp1*cp2*x2*x3+c2*cp1*cp2*x2*x3+c1*c2*cp1*cp2*x2*x3+c3*cp1*cp2*x2*x3+c1*c3*cp1*cp2*x2*x3+c1*c2*c3*cp1*cp2*x2*x3+c1*cp3*x2*x3+c1*c2*cp3*x2*x3+c1*c3*cp3*x2*x3+c1*cp1*cp3*x2*x3+c1*c3*cp1*cp3*x2*x3+c1*c2*c3*cp1*cp3*x2*x3+c1*cp2*cp3*x2*x3+c1*cp1*cp2*cp3*x2*x3+c1*c2*cp1*cp2*cp3*x2*x3+c1*c3*cp1*cp2*cp3*x2*x3+c1*c2*cp2*m1*x2*x3+c3*cp2*m1*x2*x3+c1*c3*cp2*m1*x2*x3+c1*cp1*cp2*m1*x2*x3+c2*c3*cp1*cp2*m1*x2*x3+cp3*m1*x2*x3+c1*c2*cp3*m1*x2*x3+c1*c3*cp3*m1*x2*x3+cp1*cp3*m1*x2*x3+c2*cp1*cp3*m1*x2*x3+c1*c2*cp1*cp3*m1*x2*x3+c1*c3*cp1*cp3*m1*x2*x3+c2*c3*cp1*cp3*m1*x2*x3+c1*cp2*cp3*m1*x2*x3+c2*cp2*cp3*m1*x2*x3+c3*cp2*cp3*m1*x2*x3+c1*c2*cp1*cp2*cp3*m1*x2*x3+c1*c3*cp1*cp2*cp3*m1*x2*x3+c3*cp1*m2*x2*x3+c1*c2*cp2*m2*x2*x3+c1*c3*cp2*m2*x2*x3+cp1*cp2*m2*x2*x3+c1*cp1*cp2*m2*x2*x3+c2*cp1*cp2*m2*x2*x3+c1*c2*cp3*m2*x2*x3+c1*c3*cp3*m2*x2*x3+c1*cp1*cp3*m2*x2*x3+c1*c2*cp1*cp3*m2*x2*x3+c1*cp2*cp3*m2*x2*x3+cp1*cp2*cp3*m2*x2*x3+c1*cp1*cp2*cp3*m2*x2*x3+c1*c2*cp1*cp2*cp3*m2*x2*x3+c2*cp2*m1*m2*x2*x3+c3*cp2*m1*m2*x2*x3+cp1*cp2*m1*m2*x2*x3+cp3*m1*m2*x2*x3+c1*cp3*m1*m2*x2*x3+c2*cp3*m1*m2*x2*x3+c3*cp3*m1*m2*x2*x3+c1*cp1*cp3*m1*m2*x2*x3+c2*cp1*cp3*m1*m2*x2*x3+c1*cp2*cp3*m1*m2*x2*x3+c1*cp1*cp2*cp3*m1*m2*x2*x3+c2*cp1*cp2*cp3*m1*m2*x2*x3+c1*m3*x2*x3+c1*c3*m3*x2*x3+c1*cp1*m3*x2*x3+c2*cp1*m3*x2*x3+c1*c3*cp1*m3*x2*x3+c1*cp2*m3*x2*x3+c1*c2*cp2*m3*x2*x3+c1*c3*cp2*m3*x2*x3+c2*cp1*cp2*m3*x2*x3+c1*c2*cp1*cp2*m3*x2*x3+c1*c3*cp1*cp2*m3*x2*x3+c1*cp3*m3*x2*x3+c1*c2*cp3*m3*x2*x3+c1*cp1*cp3*m3*x2*x3+c2*cp1*cp3*m3*x2*x3+c1*c2*cp1*cp3*m3*x2*x3+c1*cp1*cp2*cp3*m3*x2*x3+m1*m3*x2*x3+c3*m1*m3*x2*x3+cp1*m1*m3*x2*x3+c3*cp1*m1*m3*x2*x3+cp2*m1*m3*x2*x3+c2*cp2*m1*m3*x2*x3+c3*cp2*m1*m3*x2*x3+c2*cp1*cp2*m1*m3*x2*x3+c3*cp1*cp2*m1*m3*x2*x3+cp3*m1*m3*x2*x3+c2*cp3*m1*m3*x2*x3+cp1*cp3*m1*m3*x2*x3+c2*cp1*cp3*m1*m3*x2*x3+cp2*cp3*m1*m3*x2*x3+cp1*m2*m3*x2*x3+cp1*cp2*m2*m3*x2*x3+c1*cp3*m2*m3*x2*x3+cp1*cp3*m2*m3*x2*x3+c1*cp1*cp3*m2*m3*x2*x3+c1*cp2*cp3*m2*m3*x2*x3+c1*cp1*cp2*cp3*m2*m3*x2*x3+cp3*m1*m2*m3*x2*x3+cp1*cp3*m1*m2*m3*x2*x3+cp2*cp3*m1*m2*m3*x2*x3+cp1*cp2*cp3*m1*m2*m3*x2*x3+c1*c2*c3*y1+c3*cp2*y1+c1*c3*cp2*y1+c2*c3*cp2*y1+c1*c2*c3*cp2*y1+c3*cp1*cp2*y1+c2*c3*cp1*cp2*y1+c2*cp3*y1+c1*c2*c3*cp3*y1+c1*c2*cp1*cp3*y1+c2*c3*cp1*cp3*y1+c1*c2*c3*cp1*cp3*y1+c1*cp2*cp3*y1+c1*c2*cp2*cp3*y1+c3*cp2*cp3*y1+c1*c2*c3*cp2*cp3*y1+cp1*cp2*cp3*y1+c1*cp1*cp2*cp3*y1+c2*c3*cp1*cp2*cp3*y1+c1*c2*c3*cp1*cp2*cp3*y1+c1*c2*c3*cp1*m1*y1+c3*cp2*m1*y1+c1*c2*c3*cp2*m1*y1+c3*cp1*cp2*m1*y1+c1*c2*cp3*m1*y1+c1*c2*c3*cp3*m1*y1+c3*cp2*cp3*m1*y1+c2*c3*cp2*cp3*m1*y1+cp1*cp2*cp3*m1*y1+c1*cp1*cp2*cp3*m1*y1+c3*cp1*cp2*cp3*m1*y1+c2*c3*cp1*cp2*cp3*m1*y1+c3*m2*y1+c2*c3*m2*y1+c1*c2*c3*cp1*m2*y1+c3*cp2*m2*y1+c2*c3*cp2*m2*y1+c1*c2*c3*cp2*m2*y1+c3*cp1*cp2*m2*y1+c2*cp3*m2*y1+c3*cp3*m2*y1+c1*c2*c3*cp3*m2*y1+cp1*cp3*m2*y1+c2*cp1*cp3*m2*y1+c1*c3*cp1*cp3*m2*y1+c1*c2*c3*cp1*cp3*m2*y1+c1*cp2*cp3*m2*y1+c3*cp2*cp3*m2*y1+cp1*cp2*cp3*m2*y1+c1*c3*cp1*cp2*cp3*m2*y1+c1*c2*c3*cp1*cp2*cp3*m2*y1+c2*c3*m1*m2*y1+cp3*m1*m2*y1+c1*cp3*m1*m2*y1+c1*c2*cp3*m1*m2*y1+c1*c3*cp3*m1*m2*y1+cp1*cp3*m1*m2*y1+c2*cp1*cp3*m1*m2*y1+c1*cp2*cp3*m1*m2*y1+c2*cp2*cp3*m1*m2*y1+c1*c2*cp2*cp3*m1*m2*y1+c3*cp2*cp3*m1*m2*y1+c2*m3*y1+c1*c2*cp1*m3*y1+c1*c2*c3*cp1*m3*y1+cp2*m3*y1+c2*c3*cp2*m3*y1+c1*cp1*cp2*m3*y1+c1*c2*cp1*cp2*m3*y1+c1*c3*cp1*cp2*m3*y1+c2*c3*cp1*cp2*m3*y1+c1*c2*cp3*m3*y1+c2*c3*cp3*m3*y1+c1*c2*c3*cp3*m3*y1+c1*c2*c3*cp1*cp3*m3*y1+c1*cp2*cp3*m3*y1+c1*c3*cp2*cp3*m3*y1+c3*cp1*cp2*cp3*m3*y1+c2*c3*cp1*cp2*cp3*m3*y1+c2*cp2*m1*m3*y1+c1*c2*cp2*m1*m3*y1+c2*c3*cp2*m1*m3*y1+cp1*cp2*m1*m3*y1+c1*cp1*cp2*m1*m3*y1+c1*c2*cp1*cp2*m1*m3*y1+c2*c3*cp1*cp2*m1*m3*y1+c2*cp3*m1*m3*y1+c1*c2*cp3*m1*m3*y1+c2*c3*cp3*m1*m3*y1+c1*c2*c3*cp3*m1*m3*y1+c1*c2*cp1*cp3*m1*m3*y1+c2*c3*cp1*cp3*m1*m3*y1+cp2*cp3*m1*m3*y1+c2*cp2*cp3*m1*m3*y1+c3*cp2*cp3*m1*m3*y1+c1*c3*cp2*cp3*m1*m3*y1+cp1*cp2*cp3*m1*m3*y1+c3*cp1*cp2*cp3*m1*m3*y1+m2*m3*y1+c2*m2*m3*y1+c1*c2*m2*m3*y1+c3*m2*m3*y1+c2*c3*m2*m3*y1+cp1*m2*m3*y1+c1*cp1*m2*m3*y1+c2*cp1*m2*m3*y1+c1*c2*cp1*m2*m3*y1+c3*cp1*m2*m3*y1+c1*c3*cp1*m2*m3*y1+c1*c3*cp2*m2*m3*y1+c2*c3*cp2*m2*m3*y1+c1*c2*c3*cp2*m2*m3*y1+c3*cp1*cp2*m2*m3*y1+c1*c3*cp1*cp2*m2*m3*y1+c2*c3*cp1*cp2*m2*m3*y1+cp3*m2*m3*y1+c1*cp3*m2*m3*y1+c2*cp3*m2*m3*y1+c1*c2*cp3*m2*m3*y1+c1*c3*cp3*m2*m3*y1+c2*c3*cp3*m2*m3*y1+c1*c2*cp1*cp3*m2*m3*y1+c1*c3*cp1*cp3*m2*m3*y1+c1*c3*cp2*cp3*m2*m3*y1+c2*c3*cp2*cp3*m2*m3*y1+c1*c2*c3*cp2*cp3*m2*m3*y1+cp1*cp2*cp3*m2*m3*y1+c1*cp1*cp2*cp3*m2*m3*y1+c2*cp1*cp2*cp3*m2*m3*y1+c1*c2*cp1*cp2*cp3*m2*m3*y1+c3*cp1*cp2*cp3*m2*m3*y1+c1*c3*cp1*cp2*cp3*m2*m3*y1+c2*c3*cp1*cp2*cp3*m2*m3*y1+c1*m1*m2*m3*y1+cp1*m1*m2*m3*y1+c2*cp1*m1*m2*m3*y1+c3*cp1*m1*m2*m3*y1+c1*c3*cp1*m1*m2*m3*y1+c2*c3*cp1*m1*m2*m3*y1+c3*cp2*m1*m2*m3*y1+c1*c3*cp2*m1*m2*m3*y1+c2*c3*cp1*cp2*m1*m2*m3*y1+c2*cp3*m1*m2*m3*y1+c1*c2*cp3*m1*m2*m3*y1+c3*cp3*m1*m2*m3*y1+c2*c3*cp3*m1*m2*m3*y1+c1*c2*c3*cp3*m1*m2*m3*y1+cp1*cp3*m1*m2*m3*y1+c1*c3*cp1*cp3*m1*m2*m3*y1+c2*c3*cp1*cp3*m1*m2*m3*y1+c3*cp2*cp3*m1*m2*m3*y1+c1*c3*cp2*cp3*m1*m2*m3*y1+c2*c3*cp2*cp3*m1*m2*m3*y1+cp1*cp2*cp3*m1*m2*m3*y1+c2*cp1*cp2*cp3*m1*m2*m3*y1+c3*cp1*cp2*cp3*m1*m2*m3*y1+c2*c3*cp1*cp2*cp3*m1*m2*m3*y1+c3*cp2*x1*y1+cp2*cp3*x1*y1+c1*c3*cp2*m2*x1*y1+c3*cp1*cp2*m2*x1*y1+c1*c2*cp3*m2*x1*y1+c1*c3*cp3*m2*x1*y1+c2*cp1*cp3*m2*x1*y1+c3*cp1*cp3*m2*x1*y1+c1*cp2*cp3*m2*x1*y1+cp1*cp2*cp3*m2*x1*y1+c3*cp2*m1*m2*x1*y1+c3*cp1*cp2*m1*m2*x1*y1+c2*cp3*m1*m2*x1*y1+c3*cp3*m1*m2*x1*y1+c2*cp1*cp3*m1*m2*x1*y1+c3*cp1*cp3*m1*m2*x1*y1+cp2*cp3*m1*m2*x1*y1+cp1*cp2*cp3*m1*m2*x1*y1+cp2*m3*x1*y1+c1*cp2*m3*x1*y1+c1*c2*cp2*m3*x1*y1+c1*c3*cp2*m3*x1*y1+c2*cp1*cp2*m3*x1*y1+c3*cp1*cp2*m3*x1*y1+c2*cp3*m3*x1*y1+c1*c2*cp3*m3*x1*y1+c2*c3*cp3*m3*x1*y1+c2*cp1*cp3*m3*x1*y1+c3*cp2*cp3*m3*x1*y1+cp2*m1*m3*x1*y1+c2*cp2*m1*m3*x1*y1+c3*cp2*m1*m3*x1*y1+cp1*cp2*m1*m3*x1*y1+c2*cp1*cp2*m1*m3*x1*y1+c3*cp1*cp2*m1*m3*x1*y1+c2*cp3*m1*m3*x1*y1+c2*cp1*cp3*m1*m3*x1*y1+cp3*m2*m3*x1*y1+c1*cp3*m2*m3*x1*y1+c3*cp3*m2*m3*x1*y1+c3*cp1*cp3*m2*m3*x1*y1+cp2*cp3*m2*m3*x1*y1+c1*cp2*cp3*m2*m3*x1*y1+c3*cp2*cp3*m2*m3*x1*y1+cp1*cp2*cp3*m2*m3*x1*y1+cp3*m1*m2*m3*x1*y1+cp1*cp3*m1*m2*m3*x1*y1+cp2*cp3*m1*m2*m3*x1*y1+cp1*cp2*cp3*m1*m2*m3*x1*y1+c3*cp1*x2*y1+c1*c3*cp1*x2*y1+c3*cp2*x2*y1+c1*c3*cp1*cp2*x2*y1+c1*cp3*x2*y1+c1*c2*cp3*x2*y1+c1*c3*cp3*x2*y1+cp1*cp3*x2*y1+c2*cp1*cp3*x2*y1+c1*c2*cp1*cp3*x2*y1+c3*cp1*cp3*x2*y1+c1*c3*cp1*cp3*x2*y1+cp2*cp3*x2*y1+c1*cp2*cp3*x2*y1+c3*cp1*m1*x2*y1+c1*c3*cp1*m1*x2*y1+c3*cp2*m1*x2*y1+c1*c3*cp2*m1*x2*y1+c3*cp1*cp2*m1*x2*y1+cp3*m1*x2*y1+c1*c2*cp3*m1*x2*y1+c1*c3*cp3*m1*x2*y1+cp2*cp3*m1*x2*y1+cp1*cp2*cp3*m1*x2*y1+c1*c3*m2*x2*y1+c3*cp2*m2*x2*y1+c1*c3*cp2*m2*x2*y1+c3*cp1*cp2*m2*x2*y1+c1*c3*cp1*cp2*m2*x2*y1+cp3*m2*x2*y1+c2*cp3*m2*x2*y1+c1*c2*cp3*m2*x2*y1+c3*cp3*m2*x2*y1+c1*c3*cp3*m2*x2*y1+cp1*cp3*m2*x2*y1+c1*c2*cp1*cp3*m2*x2*y1+c1*c3*cp1*cp3*m2*x2*y1+cp2*cp3*m2*x2*y1+c3*m1*m2*x2*y1+c3*cp2*m1*m2*x2*y1+cp3*m1*m2*x2*y1+c1*cp3*m1*m2*x2*y1+c2*cp3*m1*m2*x2*y1+c3*cp3*m1*m2*x2*y1+cp2*cp3*m1*m2*x2*y1+c1*cp2*cp3*m1*m2*x2*y1+m3*x2*y1+c1*c2*m3*x2*y1+c1*c3*m3*x2*y1+cp1*m3*x2*y1+c2*cp1*m3*x2*y1+c3*cp1*m3*x2*y1+cp2*m3*x2*y1+c2*cp2*m3*x2*y1+c1*c2*cp2*m3*x2*y1+c3*cp2*m3*x2*y1+c1*c3*cp2*m3*x2*y1+cp1*cp2*m3*x2*y1+c1*cp1*cp2*m3*x2*y1+c2*cp1*cp2*m3*x2*y1+c1*c2*cp1*cp2*m3*x2*y1+c3*cp1*cp2*m3*x2*y1+c1*c3*cp1*cp2*m3*x2*y1+c1*cp3*m3*x2*y1+c3*cp3*m3*x2*y1+c1*c3*cp3*m3*x2*y1+c2*c3*cp3*m3*x2*y1+c1*c2*c3*cp3*m3*x2*y1+cp1*cp3*m3*x2*y1+c1*c2*cp1*cp3*m3*x2*y1+c3*cp2*cp3*m3*x2*y1+c1*c3*cp2*cp3*m3*x2*y1+cp1*cp2*cp3*m3*x2*y1+c2*m1*m3*x2*y1+c3*m1*m3*x2*y1+cp1*m1*m3*x2*y1+c1*cp1*m1*m3*x2*y1+c2*cp2*m1*m3*x2*y1+c3*cp2*m1*m3*x2*y1+c1*cp1*cp2*m1*m3*x2*y1+cp3*m1*m3*x2*y1+c3*cp3*m1*m3*x2*y1+c2*c3*cp3*m1*m3*x2*y1+c1*cp1*cp3*m1*m3*x2*y1+c2*cp1*cp3*m1*m3*x2*y1+c3*cp1*cp3*m1*m3*x2*y1+c2*c3*cp1*cp3*m1*m3*x2*y1+c3*cp2*cp3*m1*m3*x2*y1+c3*cp1*cp2*cp3*m1*m3*x2*y1+c1*cp3*m2*m3*x2*y1+c3*cp3*m2*m3*x2*y1+c1*c3*cp3*m2*m3*x2*y1+cp1*cp3*m2*m3*x2*y1+c1*cp1*cp3*m2*m3*x2*y1+c2*cp1*cp3*m2*m3*x2*y1+c3*cp1*cp3*m2*m3*x2*y1+c2*c3*cp1*cp3*m2*m3*x2*y1+c3*cp2*cp3*m2*m3*x2*y1+c1*c3*cp2*cp3*m2*m3*x2*y1+cp1*cp2*cp3*m2*m3*x2*y1+c1*cp1*cp2*cp3*m2*m3*x2*y1+cp3*m1*m2*m3*x2*y1+c3*cp3*m1*m2*m3*x2*y1+cp1*cp3*m1*m2*m3*x2*y1+c3*cp1*cp3*m1*m2*m3*x2*y1+c3*cp2*cp3*m1*m2*m3*x2*y1+cp1*cp2*cp3*m1*m2*m3*x2*y1+c3*cp1*cp2*cp3*m1*m2*m3*x2*y1+c1*c2*x3*y1+c2*cp1*x3*y1+c1*c2*cp1*x3*y1+c1*c2*c3*cp2*x3*y1+c2*c3*cp1*cp2*x3*y1+c1*c2*c3*cp1*cp2*x3*y1+c2*cp3*x3*y1+c1*c2*cp3*x3*y1+c2*c3*cp3*x3*y1+c1*c2*c3*cp3*x3*y1+c1*c2*cp1*cp3*x3*y1+c1*c2*c3*cp1*cp3*x3*y1+cp2*cp3*x3*y1+c2*cp2*cp3*x3*y1+c1*c2*cp2*cp3*x3*y1+c3*cp2*cp3*x3*y1+c2*c3*cp2*cp3*x3*y1+cp1*cp2*cp3*x3*y1+c1*cp1*cp2*cp3*x3*y1+c2*cp1*cp2*cp3*x3*y1+c1*c2*cp1*cp2*cp3*x3*y1+c3*cp1*cp2*cp3*x3*y1+c1*c3*cp1*cp2*cp3*x3*y1+c2*m1*x3*y1+c2*cp1*m1*x3*y1+c2*c3*cp2*m1*x3*y1+c2*c3*cp1*cp2*m1*x3*y1+c2*cp3*m1*x3*y1+c2*c3*cp3*m1*x3*y1+c2*cp1*cp3*m1*x3*y1+c2*c3*cp1*cp3*m1*x3*y1+c2*cp2*cp3*m1*x3*y1+c2*cp1*cp2*cp3*m1*x3*y1+m2*x3*y1+c2*m2*x3*y1+c1*c2*m2*x3*y1+c3*m2*x3*y1+c1*c3*m2*x3*y1+c2*c3*m2*x3*y1+cp1*m2*x3*y1+c1*c2*cp1*m2*x3*y1+c1*c3*cp1*m2*x3*y1+c2*c3*cp1*m2*x3*y1+cp2*m2*x3*y1+c2*cp2*m2*x3*y1+c3*cp2*m2*x3*y1+c2*c3*cp2*m2*x3*y1+cp1*cp2*m2*x3*y1+c2*cp1*cp2*m2*x3*y1+c3*cp1*cp2*m2*x3*y1+c2*c3*cp1*cp2*m2*x3*y1+cp3*m2*x3*y1+c1*cp3*m2*x3*y1+c3*cp3*m2*x3*y1+c1*c3*cp3*m2*x3*y1+c2*c3*cp3*m2*x3*y1+c1*c2*cp1*cp3*m2*x3*y1+c2*c3*cp1*cp3*m2*x3*y1+cp2*cp3*m2*x3*y1+c1*cp2*cp3*m2*x3*y1+c1*c3*cp2*cp3*m2*x3*y1+cp1*cp2*cp3*m2*x3*y1+c1*c2*cp1*cp2*cp3*m2*x3*y1+c2*m1*m2*x3*y1+c3*m1*m2*x3*y1+c2*cp1*m1*m2*x3*y1+c3*cp1*m1*m2*x3*y1+cp3*m1*m2*x3*y1+c3*cp3*m1*m2*x3*y1+cp1*cp3*m1*m2*x3*y1+c3*cp1*cp3*m1*m2*x3*y1+cp2*cp3*m1*m2*x3*y1+c3*cp2*cp3*m1*m2*x3*y1+cp1*cp2*cp3*m1*m2*x3*y1+c3*cp1*cp2*cp3*m1*m2*x3*y1+c2*m3*x3*y1+c1*c2*m3*x3*y1+c1*c2*cp1*m3*x3*y1+cp2*m3*x3*y1+c2*cp2*m3*x3*y1+c1*c2*cp2*m3*x3*y1+c3*cp2*m3*x3*y1+cp1*cp2*m3*x3*y1+c1*cp1*cp2*m3*x3*y1+c2*cp1*cp2*m3*x3*y1+c1*c2*cp1*cp2*m3*x3*y1+c3*cp1*cp2*m3*x3*y1+c1*c3*cp1*cp2*m3*x3*y1+c2*c3*cp1*cp2*m3*x3*y1+c2*c3*cp3*m3*x3*y1+c1*c2*cp1*cp3*m3*x3*y1+cp2*cp3*m3*x3*y1+c1*c2*cp2*cp3*m3*x3*y1+c2*c3*cp2*cp3*m3*x3*y1+cp1*cp2*cp3*m3*x3*y1+c1*cp1*cp2*cp3*m3*x3*y1+c2*m1*m3*x3*y1+c2*cp1*m1*m3*x3*y1+c2*cp2*m1*m3*x3*y1+c2*cp1*cp2*m1*m3*x3*y1+c2*cp2*cp3*m1*m3*x3*y1+c2*cp1*cp2*cp3*m1*m3*x3*y1+c2*m2*m3*x3*y1+c2*cp1*m2*m3*x3*y1+c2*cp2*m2*m3*x3*y1+cp1*cp2*m2*m3*x3*y1+c2*cp1*cp2*m2*m3*x3*y1+c3*cp1*cp2*m2*m3*x3*y1+cp3*m2*m3*x3*y1+c1*cp3*m2*m3*x3*y1+c2*cp3*m2*m3*x3*y1+c3*cp3*m2*m3*x3*y1+c2*cp1*cp3*m2*m3*x3*y1+c3*cp1*cp3*m2*m3*x3*y1+cp2*cp3*m2*m3*x3*y1+c2*cp2*cp3*m2*m3*x3*y1+c1*cp1*cp2*cp3*m2*m3*x3*y1+c2*cp1*cp2*cp3*m2*m3*x3*y1+cp3*m1*m2*m3*x3*y1+cp1*cp3*m1*m2*m3*x3*y1+c1*c3*cp1*y2+c2*c3*cp1*y2+c1*c2*c3*cp1*y2+c1*c3*cp2*y2+c1*cp3*y2+c2*cp1*cp3*y2+c1*c2*cp1*cp3*y2+c3*cp1*cp3*y2+c1*c3*cp1*cp3*y2+c1*c2*c3*cp1*cp3*y2+cp1*cp2*cp3*y2+c1*cp1*cp2*cp3*y2+c1*c2*cp1*cp2*cp3*y2+c1*c3*cp1*cp2*cp3*y2+c1*c2*c3*cp1*cp2*cp3*y2+c2*c3*m1*y2+c3*cp1*m1*y2+c1*c2*c3*cp1*m1*y2+c3*cp2*m1*y2+c1*c3*cp2*m1*y2+c1*c3*cp1*cp2*m1*y2+c2*c3*cp1*cp2*m1*y2+c2*cp3*m1*y2+c1*c2*cp3*m1*y2+c3*cp3*m1*y2+c2*c3*cp3*m1*y2+cp1*cp3*m1*y2+c1*c2*cp1*cp3*m1*y2+c1*c2*c3*cp1*cp3*m1*y2+c1*cp2*cp3*m1*y2+c2*cp2*cp3*m1*y2+c2*cp1*cp2*cp3*m1*y2+c1*c2*cp1*cp2*cp3*m1*y2+c1*c3*cp1*cp2*cp3*m1*y2+c2*c3*cp1*cp2*cp3*m1*y2+c1*c2*c3*cp1*cp2*cp3*m1*y2+c1*c3*m2*y2+c1*c2*c3*cp1*m2*y2+c3*cp1*cp2*m2*y2+c2*c3*cp1*cp2*m2*y2+c1*c2*c3*cp1*cp2*m2*y2+c1*c2*cp3*m2*y2+c1*cp1*cp3*m2*y2+c3*cp1*cp3*m2*y2+c2*c3*cp1*cp3*m2*y2+c1*cp2*cp3*m2*y2+cp1*cp2*cp3*m2*y2+c1*cp1*cp2*cp3*m2*y2+c3*cp1*cp2*cp3*m2*y2+c1*c2*c3*cp1*cp2*cp3*m2*y2+c3*cp1*m1*m2*y2+c3*cp2*m1*m2*y2+c2*c3*cp1*cp2*m1*m2*y2+c1*c2*c3*cp1*cp2*m1*m2*y2+cp3*m1*m2*y2+c1*cp3*m1*m2*y2+c1*c2*cp3*m1*m2*y2+c2*c3*cp3*m1*m2*y2+cp1*cp3*m1*m2*y2+c3*cp1*cp3*m1*m2*y2+c1*c3*cp1*cp3*m1*m2*y2+c2*c3*cp1*cp3*m1*m2*y2+c1*c2*c3*cp1*cp3*m1*m2*y2+cp2*cp3*m1*m2*y2+c2*cp2*cp3*m1*m2*y2+c1*c2*cp2*cp3*m1*m2*y2+c2*c3*cp2*cp3*m1*m2*y2+cp1*cp2*cp3*m1*m2*y2+c1*cp1*cp2*cp3*m1*m2*y2+c2*c3*cp1*cp2*cp3*m1*m2*y2+c1*cp1*m3*y2+c1*c2*cp1*m3*y2+c3*cp1*m3*y2+c1*c3*cp1*m3*y2+c1*c2*c3*cp1*m3*y2+cp1*cp2*m3*y2+c3*cp1*cp2*m3*y2+c1*c3*cp1*cp2*m3*y2+c2*c3*cp1*cp2*m3*y2+c1*c2*c3*cp1*cp2*m3*y2+c1*cp3*m3*y2+c1*c3*cp3*m3*y2+c1*c2*c3*cp3*m3*y2+cp1*cp3*m3*y2+c1*c2*cp1*cp3*m3*y2+c1*c3*cp1*cp3*m3*y2+c2*c3*cp1*cp3*m3*y2+c1*c2*c3*cp1*cp3*m3*y2+c1*c3*cp2*cp3*m3*y2+c1*cp1*cp2*cp3*m3*y2+c1*c2*cp1*cp2*cp3*m3*y2+c2*m1*m3*y2+c3*m1*m3*y2+cp1*m1*m3*y2+c1*cp1*m1*m3*y2+c1*c2*cp1*m1*m3*y2+c1*c2*c3*cp1*m1*m3*y2+cp2*m1*m3*y2+c1*c2*cp2*m1*m3*y2+c1*c3*cp2*m1*m3*y2+c1*c2*c3*cp2*m1*m3*y2+cp1*cp2*m1*m3*y2+c1*cp1*cp2*m1*m3*y2+c1*c2*cp1*cp2*m1*m3*y2+c3*cp1*cp2*m1*m3*y2+c2*cp3*m1*m3*y2+c1*c2*cp3*m1*m3*y2+c3*cp3*m1*m3*y2+c1*c3*cp3*m1*m3*y2+cp1*cp3*m1*m3*y2+c2*cp1*cp3*m1*m3*y2+c1*c2*cp1*cp3*m1*m3*y2+c1*c2*c3*cp1*cp3*m1*m3*y2+c1*c2*cp2*cp3*m1*m3*y2+c3*cp2*cp3*m1*m3*y2+c2*cp1*cp2*cp3*m1*m3*y2+c1*c3*cp1*cp2*cp3*m1*m3*y2+c1*m2*m3*y2+c2*cp1*m2*m3*y2+c1*c2*cp1*m2*m3*y2+c1*c3*cp1*m2*m3*y2+c1*cp2*m2*m3*y2+c1*c3*cp1*cp2*m2*m3*y2+c1*c2*cp3*m2*m3*y2+c1*c3*cp3*m2*m3*y2+c1*c2*c3*cp3*m2*m3*y2+cp1*cp3*m2*m3*y2+c2*cp1*cp3*m2*m3*y2+c1*c2*cp1*cp3*m2*m3*y2+c1*c3*cp1*cp3*m2*m3*y2+c2*c3*cp1*cp3*m2*m3*y2+c1*c2*c3*cp1*cp3*m2*m3*y2+cp1*cp2*cp3*m2*m3*y2+c1*cp1*cp2*cp3*m2*m3*y2+c3*cp1*cp2*cp3*m2*m3*y2+c1*c3*cp1*cp2*cp3*m2*m3*y2+c1*cp1*m1*m2*m3*y2+c2*cp1*m1*m2*m3*y2+c3*cp1*m1*m2*m3*y2+c1*c3*cp1*m1*m2*m3*y2+c1*c2*c3*cp1*m1*m2*m3*y2+c2*cp2*m1*m2*m3*y2+c1*c2*cp2*m1*m2*m3*y2+c3*cp2*m1*m2*m3*y2+c1*c3*cp2*m1*m2*m3*y2+c1*c2*c3*cp2*m1*m2*m3*y2+c1*cp1*cp2*m1*m2*m3*y2+c2*cp1*cp2*m1*m2*m3*y2+c1*c2*cp1*cp2*m1*m2*m3*y2+c1*cp3*m1*m2*m3*y2+c3*cp3*m1*m2*m3*y2+c1*c3*cp3*m1*m2*m3*y2+c2*c3*cp3*m1*m2*m3*y2+cp1*cp3*m1*m2*m3*y2+c2*cp1*cp3*m1*m2*m3*y2+c1*c2*cp1*cp3*m1*m2*m3*y2+c1*c3*cp1*cp3*m1*m2*m3*y2+c1*cp2*cp3*m1*m2*m3*y2+c3*cp2*cp3*m1*m2*m3*y2+c1*cp1*cp2*cp3*m1*m2*m3*y2+c3*cp1*cp2*cp3*m1*m2*m3*y2+c1*c3*cp1*cp2*cp3*m1*m2*m3*y2+c3*cp1*x1*y2+cp3*x1*y2+c1*cp3*x1*y2+c2*cp3*x1*y2+c1*c2*cp3*x1*y2+c3*cp3*x1*y2+c1*c3*cp3*x1*y2+cp1*cp3*x1*y2+c2*cp1*cp3*x1*y2+c3*cp1*cp3*x1*y2+cp2*cp3*x1*y2+c1*cp2*cp3*x1*y2+c3*cp1*cp2*m1*x1*y2+cp3*m1*x1*y2+c2*cp3*m1*x1*y2+c3*cp3*m1*x1*y2+cp1*cp3*m1*x1*y2+c1*cp1*cp3*m1*x1*y2+cp2*cp3*m1*x1*y2+cp1*cp2*cp3*m1*x1*y2+c3*m2*x1*y2+c1*c3*m2*x1*y2+c3*cp1*m2*x1*y2+c1*c3*cp1*m2*x1*y2+c3*cp2*m2*x1*y2+c1*c3*cp1*cp2*m2*x1*y2+c1*cp3*m2*x1*y2+c2*cp3*m2*x1*y2+c3*cp3*m2*x1*y2+c2*cp1*cp3*m2*x1*y2+c1*c2*cp1*cp3*m2*x1*y2+c3*cp1*cp3*m2*x1*y2+c1*c3*cp1*cp3*m2*x1*y2+c1*cp2*cp3*m2*x1*y2+cp1*cp2*cp3*m2*x1*y2+c1*cp1*cp2*cp3*m2*x1*y2+c3*m1*m2*x1*y2+c3*cp1*m1*m2*x1*y2+cp3*m1*m2*x1*y2+cp1*cp3*m1*m2*x1*y2+cp2*cp3*m1*m2*x1*y2+c2*m3*x1*y2+c1*c2*m3*x1*y2+c3*m3*x1*y2+c1*c3*m3*x1*y2+c1*cp1*m3*x1*y2+c1*c2*cp1*m3*x1*y2+c1*c3*cp1*m3*x1*y2+c2*cp2*m3*x1*y2+c3*cp2*m3*x1*y2+cp1*cp2*m3*x1*y2+c1*c2*cp1*cp2*m3*x1*y2+c1*c3*cp1*cp2*m3*x1*y2+cp3*m3*x1*y2+c1*cp3*m3*x1*y2+c1*c2*cp3*m3*x1*y2+c3*cp3*m3*x1*y2+c2*c3*cp3*m3*x1*y2+c1*c2*c3*cp3*m3*x1*y2+cp1*cp3*m3*x1*y2+c1*cp1*cp3*m3*x1*y2+c2*cp1*cp3*m3*x1*y2+c1*c2*cp1*cp3*m3*x1*y2+c3*cp2*cp3*m3*x1*y2+c1*c3*cp2*cp3*m3*x1*y2+cp1*cp2*cp3*m3*x1*y2+c2*m1*m3*x1*y2+c3*m1*m3*x1*y2+c2*cp1*m1*m3*x1*y2+c3*cp1*m1*m3*x1*y2+cp1*cp2*m1*m3*x1*y2+cp3*m1*m3*x1*y2+c2*cp3*m1*m3*x1*y2+c2*c3*cp3*m1*m3*x1*y2+c2*cp1*cp3*m1*m3*x1*y2+c2*c3*cp1*cp3*m1*m3*x1*y2+c3*cp2*cp3*m1*m3*x1*y2+c3*cp1*cp2*cp3*m1*m3*x1*y2+cp3*m2*m3*x1*y2+c3*cp3*m2*m3*x1*y2+c1*c3*cp3*m2*m3*x1*y2+c2*cp1*cp3*m2*m3*x1*y2+c2*c3*cp1*cp3*m2*m3*x1*y2+c1*cp2*cp3*m2*m3*x1*y2+c3*cp2*cp3*m2*m3*x1*y2+c1*c3*cp2*cp3*m2*m3*x1*y2+c1*cp1*cp2*cp3*m2*m3*x1*y2+c3*cp3*m1*m2*m3*x1*y2+c3*cp1*cp3*m1*m2*m3*x1*y2+cp2*cp3*m1*m2*m3*x1*y2+c3*cp2*cp3*m1*m2*m3*x1*y2+cp1*cp2*cp3*m1*m2*m3*x1*y2+c3*cp1*cp2*cp3*m1*m2*m3*x1*y2+c1*c3*cp1*x2*y2+c1*c3*cp2*x2*y2+c3*cp1*cp2*x2*y2+c1*c3*cp1*cp2*x2*y2+c1*c2*cp3*x2*y2+c1*c3*cp3*x2*y2+c2*cp1*cp3*x2*y2+c1*c2*cp1*cp3*x2*y2+c3*cp1*cp3*x2*y2+c1*c3*cp1*cp3*x2*y2+c1*c3*cp1*m1*x2*y2+c1*c3*cp2*m1*x2*y2+c3*cp1*cp2*m1*x2*y2+c1*c2*cp3*m1*x2*y2+c1*c3*cp3*m1*x2*y2+c2*cp1*cp3*m1*x2*y2+c3*cp1*cp3*m1*x2*y2+c1*c3*cp1*m2*x2*y2+c1*c3*cp2*m2*x2*y2+c1*c2*cp3*m2*x2*y2+c1*c3*cp3*m2*x2*y2+cp1*cp3*m2*x2*y2+c1*cp1*cp3*m2*x2*y2+cp1*cp2*cp3*m2*x2*y2+c1*cp1*cp2*cp3*m2*x2*y2+c3*cp1*m1*m2*x2*y2+c3*cp2*m1*m2*x2*y2+cp3*m1*m2*x2*y2+c1*cp3*m1*m2*x2*y2+c2*cp3*m1*m2*x2*y2+c3*cp3*m1*m2*x2*y2+cp1*cp3*m1*m2*x2*y2+cp2*cp3*m1*m2*x2*y2+c1*cp2*cp3*m1*m2*x2*y2+cp1*cp2*cp3*m1*m2*x2*y2+c1*c2*cp1*m3*x2*y2+c1*c3*cp1*m3*x2*y2+c1*c2*cp2*m3*x2*y2+c1*c3*cp2*m3*x2*y2+c1*cp3*m3*x2*y2+c1*c2*cp3*m3*x2*y2+cp1*m1*m3*x2*y2+c1*cp1*m1*m3*x2*y2+c2*cp1*m1*m3*x2*y2+c3*cp1*m1*m3*x2*y2+c2*cp2*m1*m3*x2*y2+c3*cp2*m1*m3*x2*y2+cp1*cp2*m1*m3*x2*y2+c1*cp1*cp2*m1*m3*x2*y2+cp3*m1*m3*x2*y2+c2*cp3*m1*m3*x2*y2+cp1*cp3*m1*m3*x2*y2+c1*cp1*cp3*m1*m3*x2*y2+c1*cp3*m2*m3*x2*y2+c1*cp1*cp3*m2*m3*x2*y2+c1*cp2*cp3*m2*m3*x2*y2+cp3*m1*m2*m3*x2*y2+cp1*cp3*m1*m2*m3*x2*y2+cp2*cp3*m1*m2*m3*x2*y2+cp1*x3*y2+c1*cp1*x3*y2+c2*cp1*x3*y2+c1*c2*cp1*x3*y2+c1*cp2*x3*y2+c1*c2*c3*cp1*cp2*x3*y2+c1*cp3*x3*y2+c1*c3*cp3*x3*y2+cp1*cp3*x3*y2+c1*c2*cp1*cp3*x3*y2+c3*cp1*cp3*x3*y2+c1*c2*c3*cp1*cp3*x3*y2+c1*cp1*cp2*cp3*x3*y2+c1*c2*cp1*cp2*cp3*x3*y2+c1*c3*cp1*cp2*cp3*x3*y2+cp1*m1*x3*y2+c1*cp1*m1*x3*y2+c2*cp1*m1*x3*y2+c1*c2*cp1*m1*x3*y2+c3*cp1*m1*x3*y2+c2*c3*cp1*m1*x3*y2+cp2*m1*x3*y2+c1*cp2*m1*x3*y2+c2*cp2*m1*x3*y2+c1*c3*cp2*m1*x3*y2+c2*c3*cp2*m1*x3*y2+c2*c3*cp1*cp2*m1*x3*y2+cp3*m1*x3*y2+c1*c3*cp3*m1*x3*y2+c2*c3*cp3*m1*x3*y2+c1*cp1*cp3*m1*x3*y2+c2*cp1*cp3*m1*x3*y2+c1*c2*cp1*cp3*m1*x3*y2+c1*c3*cp1*cp3*m1*x3*y2+c2*c3*cp1*cp3*m1*x3*y2+cp2*cp3*m1*x3*y2+c1*cp1*cp2*cp3*m1*x3*y2+c2*cp1*cp2*cp3*m1*x3*y2+c1*c2*cp1*cp2*cp3*m1*x3*y2+c3*cp1*cp2*cp3*m1*x3*y2+c1*c3*cp1*cp2*cp3*m1*x3*y2+cp1*m2*x3*y2+c1*cp1*m2*x3*y2+c2*cp1*m2*x3*y2+c1*c2*cp1*m2*x3*y2+c2*c3*cp1*m2*x3*y2+c1*cp2*m2*x3*y2+c1*c3*cp2*m2*x3*y2+c1*cp1*cp2*m2*x3*y2+c2*cp1*cp2*m2*x3*y2+c1*c3*cp3*m2*x3*y2+c1*cp1*cp3*m2*x3*y2+c2*cp1*cp3*m2*x3*y2+c1*c2*cp1*cp3*m2*x3*y2+c3*cp1*cp3*m2*x3*y2+cp1*cp2*cp3*m2*x3*y2+c1*c2*cp1*cp2*cp3*m2*x3*y2+cp1*m1*m2*x3*y2+c1*cp1*m1*m2*x3*y2+c2*cp1*m1*m2*x3*y2+c3*cp1*m1*m2*x3*y2+cp2*m1*m2*x3*y2+c1*cp2*m1*m2*x3*y2+c2*cp2*m1*m2*x3*y2+cp1*cp2*m1*m2*x3*y2+c2*cp1*cp2*m1*m2*x3*y2+cp1*cp3*m1*m2*x3*y2+c1*cp1*cp3*m1*m2*x3*y2+c2*cp1*cp3*m1*m2*x3*y2+c1*cp2*cp3*m1*m2*x3*y2+c2*cp2*cp3*m1*m2*x3*y2+c1*cp1*cp2*cp3*m1*m2*x3*y2+c2*cp1*cp2*cp3*m1*m2*x3*y2+c1*m3*x3*y2+c1*c3*m3*x3*y2+cp1*m3*x3*y2+c1*c2*cp1*m3*x3*y2+c1*c3*cp1*m3*x3*y2+c2*c3*cp1*m3*x3*y2+c1*c3*cp2*m3*x3*y2+cp1*cp2*m3*x3*y2+c2*cp1*cp2*m3*x3*y2+c1*c2*cp1*cp2*m3*x3*y2+c1*c3*cp1*cp2*m3*x3*y2+c1*cp3*m3*x3*y2+cp1*cp3*m3*x3*y2+c1*c2*cp1*cp3*m3*x3*y2+c1*cp2*cp3*m3*x3*y2+cp1*cp2*cp3*m3*x3*y2+c1*cp1*cp2*cp3*m3*x3*y2+m1*m3*x3*y2+c3*m1*m3*x3*y2+cp1*m1*m3*x3*y2+c3*cp1*m1*m3*x3*y2+c3*cp2*m1*m3*x3*y2+cp1*cp2*m1*m3*x3*y2+c3*cp1*cp2*m1*m3*x3*y2+cp3*m1*m3*x3*y2+cp1*cp3*m1*m3*x3*y2+cp1*cp2*cp3*m1*m3*x3*y2+c1*cp1*m2*m3*x3*y2+c2*cp1*m2*m3*x3*y2+c3*cp1*m2*m3*x3*y2+c1*cp2*m2*m3*x3*y2+cp1*cp2*m2*m3*x3*y2+c1*cp1*cp3*m2*m3*x3*y2+c2*cp1*cp3*m2*m3*x3*y2+c1*cp2*cp3*m2*m3*x3*y2+c1*cp1*cp2*cp3*m2*m3*x3*y2+cp2*m1*m2*m3*x3*y2+cp1*cp2*m1*m2*m3*x3*y2+cp2*cp3*m1*m2*m3*x3*y2+cp1*cp2*cp3*m1*m2*m3*x3*y2+c1*c3*cp1*y1*y2+c1*c3*cp2*y1*y2+c3*cp1*cp2*y1*y2+cp1*cp3*y1*y2+c1*cp1*cp3*y1*y2+c1*cp2*cp3*y1*y2+c1*c3*cp1*m1*y1*y2+c3*cp2*m1*y1*y2+c1*c3*cp2*m1*y1*y2+c1*cp3*m1*y1*y2+c1*c2*cp3*m1*y1*y2+c1*c3*cp3*m1*y1*y2+c2*cp1*cp3*m1*y1*y2+c3*cp1*cp3*m1*y1*y2+cp2*cp3*m1*y1*y2+cp1*cp2*cp3*m1*y1*y2+c3*m2*y1*y2+c1*c3*m2*y1*y2+c3*cp2*m2*y1*y2+c1*c3*cp2*m2*y1*y2+c1*c3*cp1*cp2*m2*y1*y2+c2*cp3*m2*y1*y2+c1*c2*cp3*m2*y1*y2+c3*cp3*m2*y1*y2+c1*c3*cp3*m2*y1*y2+c1*cp1*cp3*m2*y1*y2+c2*cp1*cp3*m2*y1*y2+c1*c2*cp1*cp3*m2*y1*y2+c3*cp1*cp3*m2*y1*y2+c1*c3*cp1*cp3*m2*y1*y2+cp2*cp3*m2*y1*y2+c1*cp2*cp3*m2*y1*y2+c1*cp1*cp2*cp3*m2*y1*y2+c3*m1*m2*y1*y2+c3*cp2*m1*m2*y1*y2+c1*cp3*m1*m2*y1*y2+c2*cp3*m1*m2*y1*y2+c3*cp3*m1*m2*y1*y2+cp1*cp3*m1*m2*y1*y2+cp2*cp3*m1*m2*y1*y2+c1*cp2*cp3*m1*m2*y1*y2+cp1*cp2*cp3*m1*m2*y1*y2+m3*y1*y2+c2*m3*y1*y2+c1*c2*m3*y1*y2+c3*m3*y1*y2+c1*c3*m3*y1*y2+c1*cp1*m3*y1*y2+c2*cp1*m3*y1*y2+c3*cp1*m3*y1*y2+c1*cp2*m3*y1*y2+c2*cp2*m3*y1*y2+c1*c2*cp2*m3*y1*y2+c3*cp2*m3*y1*y2+c1*c3*cp2*m3*y1*y2+c1*cp1*cp2*m3*y1*y2+c1*c2*cp1*cp2*m3*y1*y2+c1*c3*cp1*cp2*m3*y1*y2+c1*cp3*m3*y1*y2+c2*cp3*m3*y1*y2+c3*cp3*m3*y1*y2+c1*c2*c3*cp3*m3*y1*y2+c2*cp1*cp3*m3*y1*y2+c1*c2*cp1*cp3*m3*y1*y2+c1*c3*cp2*cp3*m3*y1*y2+cp1*cp2*cp3*m3*y1*y2+c2*m1*m3*y1*y2+c3*m1*m3*y1*y2+cp1*m1*m3*y1*y2+c1*cp1*m1*m3*y1*y2+cp2*m1*m3*y1*y2+c2*cp2*m1*m3*y1*y2+c3*cp2*m1*m3*y1*y2+cp1*cp2*m1*m3*y1*y2+c1*cp1*cp2*m1*m3*y1*y2+cp3*m1*m3*y1*y2+c2*c3*cp3*m1*m3*y1*y2+c1*cp1*cp3*m1*m3*y1*y2+c2*cp1*cp3*m1*m3*y1*y2+c2*c3*cp1*cp3*m1*m3*y1*y2+c3*cp2*cp3*m1*m3*y1*y2+c3*cp1*cp2*cp3*m1*m3*y1*y2+c1*cp3*m2*m3*y1*y2+c1*c3*cp3*m2*m3*y1*y2+cp1*cp3*m2*m3*y1*y2+c1*cp1*cp3*m2*m3*y1*y2+c2*cp1*cp3*m2*m3*y1*y2+c2*c3*cp1*cp3*m2*m3*y1*y2+cp2*cp3*m2*m3*y1*y2+c1*c3*cp2*cp3*m2*m3*y1*y2+c1*cp1*cp2*cp3*m2*m3*y1*y2+cp3*m1*m2*m3*y1*y2+c3*cp3*m1*m2*m3*y1*y2+cp1*cp3*m1*m2*m3*y1*y2+c3*cp1*cp3*m1*m2*m3*y1*y2+c3*cp2*cp3*m1*m2*m3*y1*y2+cp1*cp2*cp3*m1*m2*m3*y1*y2+c3*cp1*cp2*cp3*m1*m2*m3*y1*y2+c2*cp1*y3+c1*c2*cp1*y3+c1*c2*cp2*y3+cp1*cp2*y3+c1*c2*cp1*cp2*y3+c1*c3*cp1*cp2*y3+c1*c2*c3*cp1*cp2*y3+c1*c2*cp1*cp3*y3+c2*c3*cp1*cp3*y3+c1*c3*cp2*cp3*y3+cp1*cp2*cp3*y3+c2*cp1*cp2*cp3*y3+c1*c2*cp1*cp2*cp3*y3+c2*c3*cp1*cp2*cp3*y3+c1*c2*c3*cp1*cp2*cp3*y3+c1*c2*m1*y3+c1*c2*cp1*m1*y3+c2*c3*cp1*m1*y3+c1*cp2*m1*y3+c2*cp2*m1*y3+c1*c3*cp2*m1*y3+c2*c3*cp2*m1*y3+c1*cp1*cp2*m1*y3+c2*cp1*cp2*m1*y3+c1*c3*cp1*cp2*m1*y3+c1*c2*c3*cp1*cp3*m1*y3+c1*cp2*cp3*m1*y3+c2*cp2*cp3*m1*y3+cp1*cp2*cp3*m1*y3+c1*cp1*cp2*cp3*m1*y3+c1*c2*cp1*cp2*cp3*m1*y3+c3*cp1*cp2*cp3*m1*y3+c1*c3*cp1*cp2*cp3*m1*y3+c2*c3*cp1*cp2*cp3*m1*y3+c1*c2*c3*cp1*cp2*cp3*m1*y3+c1*m2*y3+c1*c2*m2*y3+c1*c3*m2*y3+c2*cp1*m2*y3+c1*c2*cp1*m2*y3+c3*cp1*m2*y3+c1*c2*cp2*m2*y3+c1*c2*cp1*cp2*m2*y3+c2*c3*cp1*cp2*m2*y3+c1*c2*cp3*m2*y3+cp1*cp3*m2*y3+c1*cp1*cp3*m2*y3+c1*cp2*cp3*m2*y3+c1*c2*cp2*cp3*m2*y3+cp1*cp2*cp3*m2*y3+c2*cp1*cp2*cp3*m2*y3+c3*cp1*cp2*cp3*m2*y3+c2*c3*cp1*cp2*cp3*m2*y3+c1*m1*m2*y3+c1*c3*m1*m2*y3+c2*c3*m1*m2*y3+c1*c2*c3*m1*m2*y3+cp1*m1*m2*y3+c1*c2*cp1*m1*m2*y3+c1*c3*cp1*m1*m2*y3+c2*c3*cp1*m1*m2*y3+c1*c2*c3*cp1*m1*m2*y3+cp2*m1*m2*y3+cp1*cp2*m1*m2*y3+c1*cp1*cp2*m1*m2*y3+c2*c3*cp1*cp2*m1*m2*y3+c1*c2*cp3*m1*m2*y3+c1*cp1*cp3*m1*m2*y3+c1*c2*cp1*cp3*m1*m2*y3+c3*cp1*cp3*m1*m2*y3+c1*c3*cp1*cp3*m1*m2*y3+c2*c3*cp1*cp3*m1*m2*y3+cp2*cp3*m1*m2*y3+c3*cp2*cp3*m1*m2*y3+c1*c3*cp2*cp3*m1*m2*y3+c2*c3*cp2*cp3*m1*m2*y3+c1*cp1*cp2*cp3*m1*m2*y3+c2*cp1*cp2*cp3*m1*m2*y3+c3*cp1*cp2*cp3*m1*m2*y3+c2*c3*cp1*cp2*cp3*m1*m2*y3+c1*c2*m3*y3+c1*c2*cp1*m3*y3+c2*c3*cp1*m3*y3+c1*cp2*m3*y3+c1*c3*cp2*m3*y3+c1*c2*c3*cp2*m3*y3+cp1*cp2*m3*y3+c1*c2*cp1*cp2*m3*y3+c3*cp1*cp2*m3*y3+c2*c3*cp1*cp2*m3*y3+c1*c2*cp3*m3*y3+c1*c2*c3*cp3*m3*y3+c1*c2*c3*cp2*cp3*m3*y3+c2*cp1*cp2*cp3*m3*y3+c2*c3*cp1*cp2*cp3*m3*y3+c1*cp2*m1*m3*y3+c1*c2*cp2*m1*m3*y3+c1*c3*cp2*m1*m3*y3+c1*c2*c3*cp2*m1*m3*y3+cp1*cp2*m1*m3*y3+c1*cp1*cp2*m1*m3*y3+c3*cp1*cp2*m1*m3*y3+c1*c3*cp1*cp2*m1*m3*y3+c2*cp1*cp3*m1*m3*y3+c1*c2*cp1*cp3*m1*m3*y3+cp1*cp2*cp3*m1*m3*y3+c1*cp1*cp2*cp3*m1*m3*y3+c2*cp1*cp2*cp3*m1*m3*y3+c1*c2*cp1*cp2*cp3*m1*m3*y3+c3*cp1*cp2*cp3*m1*m3*y3+c1*m2*m3*y3+c1*c2*cp1*m2*m3*y3+c3*cp1*m2*m3*y3+c1*c3*cp1*m2*m3*y3+c2*c3*cp1*m2*m3*y3+cp1*cp2*m2*m3*y3+c1*cp1*cp2*m2*m3*y3+c1*c2*cp1*cp2*m2*m3*y3+c3*cp1*cp2*m2*m3*y3+c1*c3*cp1*cp2*m2*m3*y3+c1*c2*c3*cp1*cp2*m2*m3*y3+c1*c2*cp3*m2*m3*y3+c1*c3*cp3*m2*m3*y3+cp1*cp3*m2*m3*y3+c1*cp1*cp3*m2*m3*y3+c2*cp1*cp3*m2*m3*y3+c2*c3*cp1*cp3*m2*m3*y3+c1*c2*c3*cp1*cp3*m2*m3*y3+c1*cp2*cp3*m2*m3*y3+c1*c2*cp2*cp3*m2*m3*y3+c2*cp1*cp2*cp3*m2*m3*y3+c1*c3*cp1*cp2*cp3*m2*m3*y3+c1*c2*m1*m2*m3*y3+c3*m1*m2*m3*y3+c1*c3*m1*m2*m3*y3+c2*c3*m1*m2*m3*y3+cp1*m1*m2*m3*y3+c1*c3*cp1*m1*m2*m3*y3+c1*c2*c3*cp1*m1*m2*m3*y3+cp2*m1*m2*m3*y3+c1*cp2*m1*m2*m3*y3+c1*c2*cp2*m1*m2*m3*y3+c3*cp2*m1*m2*m3*y3+c2*c3*cp2*m1*m2*m3*y3+c1*c2*c3*cp2*m1*m2*m3*y3+c1*cp3*m1*m2*m3*y3+c1*c2*cp3*m1*m2*m3*y3+c1*c2*c3*cp3*m1*m2*m3*y3+cp1*cp3*m1*m2*m3*y3+c3*cp1*cp3*m1*m2*m3*y3+c2*c3*cp1*cp3*m1*m2*m3*y3+cp2*cp3*m1*m2*m3*y3+c1*cp2*cp3*m1*m2*m3*y3+c1*c2*cp2*cp3*m1*m2*m3*y3+c2*c3*cp2*cp3*m1*m2*m3*y3+c1*cp1*cp2*cp3*m1*m2*m3*y3+c2*cp1*cp2*cp3*m1*m2*m3*y3+c3*cp1*cp2*cp3*m1*m2*m3*y3+c2*x1*y3+c1*c2*x1*y3+c2*cp1*x1*y3+c1*c2*cp1*x1*y3+c2*cp2*x1*y3+c1*c2*cp2*x1*y3+c1*c3*cp2*x1*y3+c1*c2*c3*cp2*x1*y3+c1*cp1*cp2*x1*y3+c1*c2*cp1*cp2*x1*y3+c1*c3*cp1*cp2*x1*y3+c1*c2*c3*cp1*cp2*x1*y3+c1*c2*c3*cp3*x1*y3+c1*c2*c3*cp1*cp3*x1*y3+c1*cp2*cp3*x1*y3+c1*c2*cp2*cp3*x1*y3+c1*c3*cp2*cp3*x1*y3+c1*cp1*cp2*cp3*x1*y3+c1*c2*cp1*cp2*cp3*x1*y3+c1*c3*cp1*cp2*cp3*x1*y3+c2*m1*x1*y3+c2*cp1*m1*x1*y3+c2*cp2*m1*x1*y3+c3*cp2*m1*x1*y3+c2*c3*cp2*m1*x1*y3+c2*cp1*cp2*m1*x1*y3+c3*cp1*cp2*m1*x1*y3+c2*c3*cp1*cp2*m1*x1*y3+c2*c3*cp3*m1*x1*y3+c2*c3*cp1*cp3*m1*x1*y3+cp2*cp3*m1*x1*y3+c2*cp2*cp3*m1*x1*y3+c3*cp2*cp3*m1*x1*y3+cp1*cp2*cp3*m1*x1*y3+c2*cp1*cp2*cp3*m1*x1*y3+c3*cp1*cp2*cp3*m1*x1*y3+m2*x1*y3+c1*c2*m2*x1*y3+c1*c3*m2*x1*y3+c2*c3*m2*x1*y3+cp1*m2*x1*y3+c1*c2*cp1*m2*x1*y3+c1*c3*cp1*m2*x1*y3+c2*c3*cp1*m2*x1*y3+cp2*m2*x1*y3+c2*c3*cp2*m2*x1*y3+c2*c3*cp1*cp2*m2*x1*y3+c1*c3*cp3*m2*x1*y3+c2*c3*cp3*m2*x1*y3+c1*cp1*cp3*m2*x1*y3+c1*c2*cp1*cp3*m2*x1*y3+c2*c3*cp1*cp3*m2*x1*y3+c2*cp2*cp3*m2*x1*y3+c1*c3*cp2*cp3*m2*x1*y3+c1*cp1*cp2*cp3*m2*x1*y3+c2*cp1*cp2*cp3*m2*x1*y3+c1*c2*cp1*cp2*cp3*m2*x1*y3+c2*m1*m2*x1*y3+c3*m1*m2*x1*y3+c2*cp1*m1*m2*x1*y3+c3*cp1*m1*m2*x1*y3+c3*cp3*m1*m2*x1*y3+c3*cp1*cp3*m1*m2*x1*y3+c3*cp2*cp3*m1*m2*x1*y3+c3*cp1*cp2*cp3*m1*m2*x1*y3+c1*c2*m3*x1*y3+c1*c2*cp1*m3*x1*y3+c1*c2*cp2*m3*x1*y3+cp1*cp2*m3*x1*y3+c1*cp1*cp2*m3*x1*y3+c2*cp1*cp2*m3*x1*y3+c1*c2*cp1*cp2*m3*x1*y3+c3*cp1*cp2*m3*x1*y3+c1*c3*cp1*cp2*m3*x1*y3+c2*c3*cp1*cp2*m3*x1*y3+c2*c3*cp3*m3*x1*y3+c1*c2*cp1*cp3*m3*x1*y3+cp2*cp3*m3*x1*y3+c2*cp2*cp3*m3*x1*y3+c1*c2*cp2*cp3*m3*x1*y3+c3*cp2*cp3*m3*x1*y3+c2*c3*cp2*cp3*m3*x1*y3+c1*cp1*cp2*cp3*m3*x1*y3+c2*m1*m3*x1*y3+c2*cp1*m1*m3*x1*y3+c2*cp2*m1*m3*x1*y3+c2*cp1*cp2*m1*m3*x1*y3+c2*cp2*cp3*m1*m3*x1*y3+c2*cp1*cp2*cp3*m1*m3*x1*y3+c2*m2*m3*x1*y3+c2*cp1*m2*m3*x1*y3+c2*cp2*m2*m3*x1*y3+cp1*cp2*m2*m3*x1*y3+c2*cp1*cp2*m2*m3*x1*y3+c3*cp1*cp2*m2*m3*x1*y3+c1*cp3*m2*m3*x1*y3+c2*cp3*m2*m3*x1*y3+c3*cp3*m2*m3*x1*y3+c2*cp1*cp3*m2*m3*x1*y3+c3*cp1*cp3*m2*m3*x1*y3+cp2*cp3*m2*m3*x1*y3+c2*cp2*cp3*m2*m3*x1*y3+c1*cp1*cp2*cp3*m2*m3*x1*y3+c2*cp1*cp2*cp3*m2*m3*x1*y3+cp3*m1*m2*m3*x1*y3+cp1*cp3*m1*m2*m3*x1*y3+c1*x2*y3+cp1*x2*y3+c1*cp1*x2*y3+c2*cp1*x2*y3+c3*cp1*x2*y3+c2*c3*cp1*x2*y3+c1*cp2*x2*y3+c1*c2*cp2*x2*y3+cp1*cp2*x2*y3+c1*cp1*cp2*x2*y3+c2*cp1*cp2*x2*y3+c3*cp1*cp2*x2*y3+c1*c2*c3*cp1*cp2*x2*y3+c1*cp3*x2*y3+c1*c2*cp3*x2*y3+c1*cp1*cp3*x2*y3+c1*c2*cp1*cp3*x2*y3+c1*c3*cp1*cp3*x2*y3+c1*c2*c3*cp1*cp3*x2*y3+c1*cp2*cp3*x2*y3+c1*cp1*cp2*cp3*x2*y3+c1*c2*cp1*cp2*cp3*x2*y3+c1*c3*cp1*cp2*cp3*x2*y3+m1*x2*y3+cp1*m1*x2*y3+cp2*m1*x2*y3+c1*c2*cp2*m1*x2*y3+c3*cp2*m1*x2*y3+c1*c3*cp2*m1*x2*y3+cp1*cp2*m1*x2*y3+c1*cp1*cp2*m1*x2*y3+c2*cp1*cp2*m1*x2*y3+c3*cp1*cp2*m1*x2*y3+c2*c3*cp1*cp2*m1*x2*y3+cp3*m1*x2*y3+c1*c2*cp3*m1*x2*y3+c3*cp3*m1*x2*y3+c1*c3*cp3*m1*x2*y3+cp1*cp3*m1*x2*y3+c1*c2*cp1*cp3*m1*x2*y3+c1*c3*cp1*cp3*m1*x2*y3+c2*c3*cp1*cp3*m1*x2*y3+c1*cp2*cp3*m1*x2*y3+c2*cp2*cp3*m1*x2*y3+c3*cp2*cp3*m1*x2*y3+c1*c2*cp1*cp2*cp3*m1*x2*y3+c1*c3*cp1*cp2*cp3*m1*x2*y3+cp1*m2*x2*y3+c3*cp1*m2*x2*y3+c1*c2*cp2*m2*x2*y3+c1*c3*cp2*m2*x2*y3+c1*cp1*cp2*m2*x2*y3+c2*cp1*cp2*m2*x2*y3+c1*c2*cp3*m2*x2*y3+c1*c3*cp3*m2*x2*y3+c1*c2*cp1*cp3*m2*x2*y3+c1*cp2*cp3*m2*x2*y3+cp1*cp2*cp3*m2*x2*y3+c1*c2*cp1*cp2*cp3*m2*x2*y3+c2*cp2*m1*m2*x2*y3+c3*cp2*m1*m2*x2*y3+cp1*cp2*m1*m2*x2*y3+cp3*m1*m2*x2*y3+c1*cp3*m1*m2*x2*y3+c2*cp3*m1*m2*x2*y3+c3*cp3*m1*m2*x2*y3+cp1*cp3*m1*m2*x2*y3+c1*cp1*cp3*m1*m2*x2*y3+c2*cp1*cp3*m1*m2*x2*y3+c1*cp2*cp3*m1*m2*x2*y3+cp1*cp2*cp3*m1*m2*x2*y3+c1*cp1*cp2*cp3*m1*m2*x2*y3+c2*cp1*cp2*cp3*m1*m2*x2*y3+c1*m3*x2*y3+c1*c3*m3*x2*y3+cp1*m3*x2*y3+c1*cp1*m3*x2*y3+c2*cp1*m3*x2*y3+c1*c3*cp1*m3*x2*y3+c1*cp2*m3*x2*y3+c1*c2*cp2*m3*x2*y3+c1*c3*cp2*m3*x2*y3+cp1*cp2*m3*x2*y3+c2*cp1*cp2*m3*x2*y3+c1*c2*cp1*cp2*m3*x2*y3+c1*c3*cp1*cp2*m3*x2*y3+c1*cp3*m3*x2*y3+c1*c2*cp3*m3*x2*y3+cp1*cp3*m3*x2*y3+c1*cp1*cp3*m3*x2*y3+c2*cp1*cp3*m3*x2*y3+c1*c2*cp1*cp3*m3*x2*y3+c1*cp1*cp2*cp3*m3*x2*y3+m1*m3*x2*y3+c3*m1*m3*x2*y3+cp1*m1*m3*x2*y3+c3*cp1*m1*m3*x2*y3+cp2*m1*m3*x2*y3+c2*cp2*m1*m3*x2*y3+c3*cp2*m1*m3*x2*y3+c2*cp1*cp2*m1*m3*x2*y3+c3*cp1*cp2*m1*m3*x2*y3+cp3*m1*m3*x2*y3+c2*cp3*m1*m3*x2*y3+cp1*cp3*m1*m3*x2*y3+c2*cp1*cp3*m1*m3*x2*y3+cp2*cp3*m1*m3*x2*y3+cp1*m2*m3*x2*y3+cp1*cp2*m2*m3*x2*y3+c1*cp3*m2*m3*x2*y3+cp1*cp3*m2*m3*x2*y3+c1*cp1*cp3*m2*m3*x2*y3+c1*cp2*cp3*m2*m3*x2*y3+c1*cp1*cp2*cp3*m2*m3*x2*y3+cp3*m1*m2*m3*x2*y3+cp1*cp3*m1*m2*m3*x2*y3+cp2*cp3*m1*m2*m3*x2*y3+cp1*cp2*cp3*m1*m2*m3*x2*y3+c1*c2*cp1*x3*y3+c2*c3*cp1*x3*y3+c1*c2*cp2*x3*y3+cp1*cp2*x3*y3+c2*cp1*cp2*x3*y3+c1*c2*cp1*cp2*x3*y3+c3*cp1*cp2*x3*y3+c1*c3*cp1*cp2*x3*y3+c1*c2*cp3*x3*y3+c2*cp1*cp3*x3*y3+c1*c2*cp1*cp3*x3*y3+c2*c3*cp1*cp3*x3*y3+c1*c3*cp2*cp3*x3*y3+c1*c2*cp1*m1*x3*y3+c2*c3*cp1*m1*x3*y3+c1*c2*cp2*m1*x3*y3+c2*c3*cp2*m1*x3*y3+c1*cp1*cp2*m1*x3*y3+c1*c2*cp3*m1*x3*y3+c2*c3*cp3*m1*x3*y3+c2*cp1*cp3*m1*x3*y3+c1*cp1*cp2*cp3*m1*x3*y3+c2*cp1*cp2*cp3*m1*x3*y3+c1*c2*cp1*m2*x3*y3+c2*c3*cp1*m2*x3*y3+c1*c2*cp2*m2*x3*y3+cp1*cp2*m2*x3*y3+c1*c2*cp3*m2*x3*y3+cp1*cp3*m2*x3*y3+c1*cp1*cp3*m2*x3*y3+c3*cp1*cp3*m2*x3*y3+c1*cp1*cp2*cp3*m2*x3*y3+cp1*m1*m2*x3*y3+c1*cp1*m1*m2*x3*y3+c2*cp1*m1*m2*x3*y3+c3*cp1*m1*m2*x3*y3+c1*cp2*m1*m2*x3*y3+c3*cp2*m1*m2*x3*y3+cp1*cp2*m1*m2*x3*y3+c2*cp1*cp2*m1*m2*x3*y3+cp3*m1*m2*x3*y3+c1*cp3*m1*m2*x3*y3+c2*cp3*m1*m2*x3*y3+c3*cp3*m1*m2*x3*y3+cp1*cp3*m1*m2*x3*y3+cp2*cp3*m1*m2*x3*y3+c2*cp2*cp3*m1*m2*x3*y3+cp1*cp2*cp3*m1*m2*x3*y3+c1*c2*cp1*m3*x3*y3+c2*c3*cp1*m3*x3*y3+c1*c2*cp2*m3*x3*y3+cp1*cp2*m3*x3*y3+c1*c2*cp3*m3*x3*y3+cp1*cp2*cp3*m3*x3*y3+c2*cp2*m1*m3*x3*y3+c2*cp1*cp2*m1*m3*x3*y3+c2*cp3*m1*m3*x3*y3+c2*cp1*cp3*m1*m3*x3*y3+cp1*m2*m3*x3*y3+c1*cp1*m2*m3*x3*y3+c2*cp1*m2*m3*x3*y3+c3*cp1*m2*m3*x3*y3+c1*cp2*m2*m3*x3*y3+c1*cp3*m2*m3*x3*y3+cp1*cp3*m2*m3*x3*y3+c2*cp1*cp3*m2*m3*x3*y3+cp2*m1*m2*m3*x3*y3+cp1*cp2*m1*m2*m3*x3*y3+cp3*m1*m2*m3*x3*y3+cp1*cp3*m1*m2*m3*x3*y3+c2*y1*y3+c1*c2*y1*y3+c1*c2*cp1*y1*y3+cp2*y1*y3+c2*cp2*y1*y3+c1*c2*cp2*y1*y3+c1*c3*cp2*y1*y3+c1*c2*c3*cp2*y1*y3+cp1*cp2*y1*y3+c1*cp1*cp2*y1*y3+c2*cp1*cp2*y1*y3+c1*c2*cp1*cp2*y1*y3+c3*cp1*cp2*y1*y3+c1*c3*cp1*cp2*y1*y3+c2*c3*cp1*cp2*y1*y3+c1*c2*c3*cp1*cp2*y1*y3+c1*c2*c3*cp3*y1*y3+c2*c3*cp1*cp3*y1*y3+c1*c2*c3*cp1*cp3*y1*y3+c1*cp2*cp3*y1*y3+c1*c2*cp2*cp3*y1*y3+c1*c3*cp2*cp3*y1*y3+cp1*cp2*cp3*y1*y3+c1*cp1*cp2*cp3*y1*y3+c2*cp1*cp2*cp3*y1*y3+c1*c2*cp1*cp2*cp3*y1*y3+c3*cp1*cp2*cp3*y1*y3+c1*c3*cp1*cp2*cp3*y1*y3+c2*m1*y1*y3+c2*cp1*m1*y1*y3+c2*cp2*m1*y1*y3+c3*cp2*m1*y1*y3+c2*c3*cp2*m1*y1*y3+c2*cp1*cp2*m1*y1*y3+c3*cp1*cp2*m1*y1*y3+c2*c3*cp1*cp2*m1*y1*y3+c2*c3*cp3*m1*y1*y3+c2*c3*cp1*cp3*m1*y1*y3+cp2*cp3*m1*y1*y3+c2*cp2*cp3*m1*y1*y3+c3*cp2*cp3*m1*y1*y3+cp1*cp2*cp3*m1*y1*y3+c2*cp1*cp2*cp3*m1*y1*y3+c3*cp1*cp2*cp3*m1*y1*y3+m2*y1*y3+c1*c2*m2*y1*y3+c1*c3*m2*y1*y3+c2*c3*m2*y1*y3+cp1*m2*y1*y3+c2*cp1*m2*y1*y3+c1*c2*cp1*m2*y1*y3+c3*cp1*m2*y1*y3+c1*c3*cp1*m2*y1*y3+c2*c3*cp1*m2*y1*y3+cp2*m2*y1*y3+c2*c3*cp2*m2*y1*y3+c2*c3*cp1*cp2*m2*y1*y3+cp3*m2*y1*y3+c2*cp3*m2*y1*y3+c3*cp3*m2*y1*y3+c1*c3*cp3*m2*y1*y3+c2*c3*cp3*m2*y1*y3+cp1*cp3*m2*y1*y3+c1*cp1*cp3*m2*y1*y3+c2*cp1*cp3*m2*y1*y3+c1*c2*cp1*cp3*m2*y1*y3+c2*c3*cp1*cp3*m2*y1*y3+cp2*cp3*m2*y1*y3+c3*cp2*cp3*m2*y1*y3+c1*c3*cp2*cp3*m2*y1*y3+cp1*cp2*cp3*m2*y1*y3+c1*cp1*cp2*cp3*m2*y1*y3+c1*c2*cp1*cp2*cp3*m2*y1*y3+c2*m1*m2*y1*y3+c3*m1*m2*y1*y3+c2*cp1*m1*m2*y1*y3+c3*cp1*m1*m2*y1*y3+c3*cp3*m1*m2*y1*y3+c3*cp1*cp3*m1*m2*y1*y3+c3*cp2*cp3*m1*m2*y1*y3+c3*cp1*cp2*cp3*m1*m2*y1*y3+c1*c2*m3*y1*y3+c2*cp1*m3*y1*y3+c1*c2*cp1*m3*y1*y3+cp2*m3*y1*y3+c1*c2*cp2*m3*y1*y3+c3*cp2*m3*y1*y3+c1*cp1*cp2*m3*y1*y3+c1*c2*cp1*cp2*m3*y1*y3+c1*c3*cp1*cp2*m3*y1*y3+c2*c3*cp1*cp2*m3*y1*y3+c2*cp3*m3*y1*y3+c2*c3*cp3*m3*y1*y3+c2*cp1*cp3*m3*y1*y3+c1*c2*cp1*cp3*m3*y1*y3+c1*c2*cp2*cp3*m3*y1*y3+c3*cp2*cp3*m3*y1*y3+c2*c3*cp2*cp3*m3*y1*y3+cp1*cp2*cp3*m3*y1*y3+c1*cp1*cp2*cp3*m3*y1*y3+c2*m1*m3*y1*y3+c2*cp1*m1*m3*y1*y3+c2*cp2*m1*m3*y1*y3+c2*cp1*cp2*m1*m3*y1*y3+c2*cp2*cp3*m1*m3*y1*y3+c2*cp1*cp2*cp3*m1*m3*y1*y3+c2*m2*m3*y1*y3+c2*cp1*m2*m3*y1*y3+c2*cp2*m2*m3*y1*y3+cp1*cp2*m2*m3*y1*y3+c2*cp1*cp2*m2*m3*y1*y3+c3*cp1*cp2*m2*m3*y1*y3+cp3*m2*m3*y1*y3+c1*cp3*m2*m3*y1*y3+c2*cp3*m2*m3*y1*y3+c3*cp3*m2*m3*y1*y3+c2*cp1*cp3*m2*m3*y1*y3+c3*cp1*cp3*m2*m3*y1*y3+c2*cp2*cp3*m2*m3*y1*y3+cp1*cp2*cp3*m2*m3*y1*y3+c1*cp1*cp2*cp3*m2*m3*y1*y3+c2*cp1*cp2*cp3*m2*m3*y1*y3+cp3*m1*m2*m3*y1*y3+cp1*cp3*m1*m2*m3*y1*y3+c1*y2*y3+cp1*y2*y3+c1*cp1*y2*y3+c2*cp1*y2*y3+c1*c2*cp1*y2*y3+c1*cp2*y2*y3+c1*cp1*cp2*y2*y3+c1*c2*cp1*cp2*y2*y3+c1*c3*cp1*cp2*y2*y3+c1*c2*c3*cp1*cp2*y2*y3+c1*c2*c3*cp1*cp3*y2*y3+c1*cp1*cp2*cp3*y2*y3+c1*c2*cp1*cp2*cp3*y2*y3+c1*c3*cp1*cp2*cp3*y2*y3+m1*y2*y3+cp1*m1*y2*y3+c1*c2*cp1*m1*y2*y3+c2*c3*cp1*m1*y2*y3+cp2*m1*y2*y3+c3*cp2*m1*y2*y3+c1*c3*cp2*m1*y2*y3+c2*c3*cp2*m1*y2*y3+cp1*cp2*m1*y2*y3+c2*cp1*cp2*m1*y2*y3+c3*cp1*cp2*m1*y2*y3+c2*c3*cp1*cp2*m1*y2*y3+c1*cp3*m1*y2*y3+c2*cp3*m1*y2*y3+c1*c3*cp3*m1*y2*y3+c2*c3*cp3*m1*y2*y3+c1*cp1*cp3*m1*y2*y3+c1*c2*cp1*cp3*m1*y2*y3+c1*c3*cp1*cp3*m1*y2*y3+c2*c3*cp1*cp3*m1*y2*y3+cp2*cp3*m1*y2*y3+c1*cp1*cp2*cp3*m1*y2*y3+c2*cp1*cp2*cp3*m1*y2*y3+c1*c2*cp1*cp2*cp3*m1*y2*y3+c3*cp1*cp2*cp3*m1*y2*y3+c1*c3*cp1*cp2*cp3*m1*y2*y3+cp1*m2*y2*y3+c1*c2*cp1*m2*y2*y3+c3*cp1*m2*y2*y3+c2*c3*cp1*m2*y2*y3+c1*c3*cp2*m2*y2*y3+cp1*cp2*m2*y2*y3+c1*cp1*cp2*m2*y2*y3+c2*cp1*cp2*m2*y2*y3+c1*cp3*m2*y2*y3+c1*c3*cp3*m2*y2*y3+c2*cp1*cp3*m2*y2*y3+c1*c2*cp1*cp3*m2*y2*y3+c3*cp1*cp3*m2*y2*y3+cp1*cp2*cp3*m2*y2*y3+c1*cp1*cp2*cp3*m2*y2*y3+c1*c2*cp1*cp2*cp3*m2*y2*y3+cp1*m1*m2*y2*y3+c1*cp1*m1*m2*y2*y3+c2*cp1*m1*m2*y2*y3+c3*cp1*m1*m2*y2*y3+c1*cp2*m1*m2*y2*y3+c2*cp2*m1*m2*y2*y3+c2*cp1*cp2*m1*m2*y2*y3+c1*cp1*cp3*m1*m2*y2*y3+c2*cp1*cp3*m1*m2*y2*y3+cp2*cp3*m1*m2*y2*y3+c1*cp2*cp3*m1*m2*y2*y3+c2*cp2*cp3*m1*m2*y2*y3+cp1*cp2*cp3*m1*m2*y2*y3+c1*cp1*cp2*cp3*m1*m2*y2*y3+c2*cp1*cp2*cp3*m1*m2*y2*y3+c1*m3*y2*y3+c1*c3*m3*y2*y3+cp1*m3*y2*y3+c1*cp1*m3*y2*y3+c2*cp1*m3*y2*y3+c1*c2*cp1*m3*y2*y3+c3*cp1*m3*y2*y3+c1*c3*cp1*m3*y2*y3+c2*c3*cp1*m3*y2*y3+c1*cp2*m3*y2*y3+c1*c3*cp2*m3*y2*y3+c2*cp1*cp2*m3*y2*y3+c1*c2*cp1*cp2*m3*y2*y3+c1*c3*cp1*cp2*m3*y2*y3+c1*c2*cp1*cp3*m3*y2*y3+c1*cp2*cp3*m3*y2*y3+cp1*cp2*cp3*m3*y2*y3+c1*cp1*cp2*cp3*m3*y2*y3+m1*m3*y2*y3+c3*m1*m3*y2*y3+cp1*m1*m3*y2*y3+c3*cp1*m1*m3*y2*y3+cp2*m1*m3*y2*y3+c3*cp2*m1*m3*y2*y3+c3*cp1*cp2*m1*m3*y2*y3+cp1*cp2*cp3*m1*m3*y2*y3+c1*cp1*m2*m3*y2*y3+c2*cp1*m2*m3*y2*y3+c3*cp1*m2*m3*y2*y3+c1*cp2*m2*m3*y2*y3+cp1*cp2*m2*m3*y2*y3+cp1*cp3*m2*m3*y2*y3+c1*cp1*cp3*m2*m3*y2*y3+c2*cp1*cp3*m2*m3*y2*y3+c1*cp2*cp3*m2*m3*y2*y3+c1*cp1*cp2*cp3*m2*m3*y2*y3+cp2*m1*m2*m3*y2*y3+cp1*cp2*m1*m2*m3*y2*y3+cp2*cp3*m1*m2*m3*y2*y3+cp1*cp2*cp3*m1*m2*m3*y2*y3+c2*c3*cp1*z1+c1*c3*cp2*z1+c2*c3*cp2*z1+c1*c2*c3*cp2*z1+c2*c3*cp1*cp2*z1+c1*c2*cp1*cp3*z1+c1*c2*c3*cp1*cp3*z1+c1*c2*cp2*cp3*z1+c1*cp1*cp2*cp3*z1+c1*c2*c3*cp1*cp2*cp3*z1+c1*c3*cp2*m1*z1+c2*c3*cp1*cp2*m1*z1+c2*cp1*cp3*m1*z1+c2*c3*cp1*cp3*m1*z1+c2*cp1*cp2*cp3*m1*z1+c2*c3*cp1*cp2*cp3*m1*z1+c1*c3*m2*z1+c2*c3*m2*z1+c1*c3*cp2*m2*z1+c2*c3*cp2*m2*z1+c2*c3*cp1*cp2*m2*z1+c1*cp3*m2*z1+c1*c2*cp3*m2*z1+c1*c3*cp3*m2*z1+c1*c2*c3*cp3*m2*z1+cp1*cp3*m2*z1+c2*cp1*cp3*m2*z1+c1*c3*cp1*cp3*m2*z1+c1*c2*c3*cp1*cp3*m2*z1+cp2*cp3*m2*z1+c1*cp2*cp3*m2*z1+c1*c2*cp2*cp3*m2*z1+c1*c3*cp2*cp3*m2*z1+c1*c2*c3*cp2*cp3*m2*z1+c1*cp1*cp2*cp3*m2*z1+c1*c3*cp1*cp2*cp3*m2*z1+c2*c3*cp1*cp2*cp3*m2*z1+c1*c2*c3*cp1*cp2*cp3*m2*z1+c1*c3*m1*m2*z1+c3*cp1*m1*m2*z1+c1*c3*cp2*m1*m2*z1+c1*c3*cp1*cp2*m1*m2*z1+cp3*m1*m2*z1+c2*cp3*m1*m2*z1+c3*cp3*m1*m2*z1+c1*c2*cp1*cp3*m1*m2*z1+c3*cp1*cp3*m1*m2*z1+c1*c3*cp1*cp3*m1*m2*z1+c1*cp2*cp3*m1*m2*z1+cp1*cp2*cp3*m1*m2*z1+c1*cp1*cp2*cp3*m1*m2*z1+c2*cp1*cp2*cp3*m1*m2*z1+c2*cp1*m3*z1+c1*c2*cp1*m3*z1+c1*cp2*m3*z1+c2*cp2*m3*z1+c2*c3*cp2*m3*z1+c1*c2*c3*cp2*m3*z1+c1*cp1*cp2*m3*z1+c2*cp1*cp2*m3*z1+c1*c3*cp1*cp2*m3*z1+c1*c2*cp3*m3*z1+c1*c2*c3*cp3*m3*z1+c2*cp1*cp3*m3*z1+c1*c2*cp1*cp3*m3*z1+c1*c2*c3*cp1*cp3*m3*z1+c1*cp2*cp3*m3*z1+c2*cp2*cp3*m3*z1+c2*c3*cp2*cp3*m3*z1+c1*cp1*cp2*cp3*m3*z1+c2*cp1*cp2*cp3*m3*z1+c2*c3*cp1*cp2*cp3*m3*z1+c2*cp1*m1*m3*z1+c1*c2*cp2*m1*m3*z1+c1*c3*cp2*m1*m3*z1+c1*cp1*cp2*m1*m3*z1+c2*cp1*cp2*m1*m3*z1+c1*c2*cp1*cp2*m1*m3*z1+c1*c3*cp1*cp2*m1*m3*z1+c2*c3*cp1*cp2*m1*m3*z1+c1*c2*cp1*cp3*m1*m3*z1+c2*c3*cp1*cp3*m1*m3*z1+c1*cp2*cp3*m1*m3*z1+c3*cp1*cp2*cp3*m1*m3*z1+c1*m2*m3*z1+c2*m2*m3*z1+c1*c3*m2*m3*z1+c2*c3*m2*m3*z1+c1*cp1*m2*m3*z1+c1*c2*cp1*m2*m3*z1+c1*c3*cp1*m2*m3*z1+c2*c3*cp2*m2*m3*z1+c1*c2*c3*cp2*m2*m3*z1+c1*c3*cp1*cp2*m2*m3*z1+c2*c3*cp1*cp2*m2*m3*z1+c1*cp3*m2*m3*z1+c1*c2*cp3*m2*m3*z1+c3*cp3*m2*m3*z1+c1*c3*cp3*m2*m3*z1+c1*c2*c3*cp3*m2*m3*z1+c1*cp1*cp3*m2*m3*z1+c2*cp1*cp3*m2*m3*z1+c1*cp2*cp3*m2*m3*z1+c1*c3*cp2*cp3*m2*m3*z1+c2*c3*cp2*cp3*m2*m3*z1+c1*c2*c3*cp2*cp3*m2*m3*z1+cp1*cp2*cp3*m2*m3*z1+c1*cp1*cp2*cp3*m2*m3*z1+c2*cp1*cp2*cp3*m2*m3*z1+c1*c2*cp1*cp2*cp3*m2*m3*z1+c3*cp1*cp2*cp3*m2*m3*z1+c1*c3*cp1*cp2*cp3*m2*m3*z1+c2*c3*cp1*cp2*cp3*m2*m3*z1+cp1*m1*m2*m3*z1+c2*cp1*m1*m2*m3*z1+cp2*m1*m2*m3*z1+c3*cp1*cp2*m1*m2*m3*z1+c2*c3*cp1*cp2*m1*m2*m3*z1+c2*cp3*m1*m2*m3*z1+c1*c2*cp3*m1*m2*m3*z1+c3*cp3*m1*m2*m3*z1+c1*c3*cp3*m1*m2*m3*z1+c2*c3*cp3*m1*m2*m3*z1+c1*c2*c3*cp3*m1*m2*m3*z1+c2*cp1*cp3*m1*m2*m3*z1+c3*cp1*cp3*m1*m2*m3*z1+c1*c3*cp1*cp3*m1*m2*m3*z1+c2*c3*cp1*cp3*m1*m2*m3*z1+cp2*cp3*m1*m2*m3*z1+c1*cp2*cp3*m1*m2*m3*z1+c1*cp1*cp2*cp3*m1*m2*m3*z1+c2*cp1*cp2*cp3*m1*m2*m3*z1+c3*cp1*cp2*cp3*m1*m2*m3*z1+c2*c3*cp1*cp2*cp3*m1*m2*m3*z1+c3*cp2*x1*z1+c3*cp2*m1*x1*z1+cp2*cp3*m1*x1*z1+c3*m2*x1*z1+c3*cp2*m2*x1*z1+cp3*m2*x1*z1+cp2*cp3*m2*x1*z1+c3*cp2*m1*m2*x1*z1+c1*c3*cp2*m1*m2*x1*z1+c2*cp3*m1*m2*x1*z1+c1*c2*cp3*m1*m2*x1*z1+c3*cp3*m1*m2*x1*z1+c1*c3*cp3*m1*m2*x1*z1+cp2*cp3*m1*m2*x1*z1+c1*cp2*cp3*m1*m2*x1*z1+cp2*m3*x1*z1+c1*cp2*m3*x1*z1+c2*cp2*m3*x1*z1+c3*cp2*m3*x1*z1+cp1*cp2*m3*x1*z1+cp2*cp3*m3*x1*z1+cp2*m1*m3*x1*z1+c1*cp2*m1*m3*x1*z1+c2*cp2*m1*m3*x1*z1+c1*c2*cp2*m1*m3*x1*z1+c3*cp2*m1*m3*x1*z1+c1*c3*cp2*m1*m3*x1*z1+c1*c2*cp3*m1*m3*x1*z1+c2*c3*cp3*m1*m3*x1*z1+c3*cp2*cp3*m1*m3*x1*z1+c1*cp3*m2*m3*x1*z1+c2*cp3*m2*m3*x1*z1+c3*cp3*m2*m3*x1*z1+c1*c3*cp3*m2*m3*x1*z1+c2*c3*cp3*m2*m3*x1*z1+cp2*cp3*m2*m3*x1*z1+cp3*m1*m2*m3*x1*z1+c1*cp3*m1*m2*m3*x1*z1+c1*cp2*cp3*m1*m2*m3*x1*z1+c3*cp2*cp3*m1*m2*m3*x1*z1+c3*x2*z1+c3*cp1*x2*z1+c1*c3*cp1*x2*z1+c3*cp2*x2*z1+c1*c3*cp2*x2*z1+c3*cp1*cp2*x2*z1+c1*c3*cp1*cp2*x2*z1+c1*c2*cp1*cp3*x2*z1+c1*c3*cp1*cp3*x2*z1+c1*cp2*cp3*x2*z1+c3*cp1*m1*x2*z1+c2*cp1*cp3*m1*x2*z1+c3*cp1*cp3*m1*x2*z1+cp1*cp2*cp3*m1*x2*z1+c1*c3*cp1*m2*x2*z1+c3*cp2*m2*x2*z1+c1*c3*cp2*m2*x2*z1+c3*cp1*cp2*m2*x2*z1+c1*c3*cp1*cp2*m2*x2*z1+c1*cp3*m2*x2*z1+c1*c2*cp3*m2*x2*z1+c1*c3*cp3*m2*x2*z1+c1*c2*cp1*cp3*m2*x2*z1+c1*c3*cp1*cp3*m2*x2*z1+cp2*cp3*m2*x2*z1+c1*cp2*cp3*m2*x2*z1+cp1*cp2*cp3*m2*x2*z1+c3*cp1*m1*m2*x2*z1+cp1*cp3*m1*m2*x2*z1+cp1*cp2*cp3*m1*m2*x2*z1+c1*m3*x2*z1+c2*m3*x2*z1+c3*m3*x2*z1+c2*cp1*m3*x2*z1+c1*c2*cp1*m3*x2*z1+c3*cp1*m3*x2*z1+c1*c3*cp1*m3*x2*z1+c1*cp2*m3*x2*z1+c2*cp2*m3*x2*z1+c1*c2*cp2*m3*x2*z1+c3*cp2*m3*x2*z1+c1*c3*cp2*m3*x2*z1+c2*cp1*cp2*m3*x2*z1+c1*c2*cp1*cp2*m3*x2*z1+c3*cp1*cp2*m3*x2*z1+c1*c3*cp1*cp2*m3*x2*z1+cp3*m3*x2*z1+c1*c3*cp3*m3*x2*z1+c1*c2*c3*cp3*m3*x2*z1+cp1*cp3*m3*x2*z1+c1*cp1*cp3*m3*x2*z1+c1*c2*cp1*cp3*m3*x2*z1+cp2*cp3*m3*x2*z1+c1*c3*cp2*cp3*m3*x2*z1+cp1*cp2*cp3*m3*x2*z1+cp1*m1*m3*x2*z1+c2*cp1*m1*m3*x2*z1+c3*cp1*m1*m3*x2*z1+cp1*cp2*m1*m3*x2*z1+cp1*cp3*m1*m3*x2*z1+c2*cp1*cp3*m1*m3*x2*z1+c3*cp1*cp3*m1*m3*x2*z1+c2*c3*cp1*cp3*m1*m3*x2*z1+c3*cp1*cp2*cp3*m1*m3*x2*z1+cp3*m2*m3*x2*z1+c2*cp3*m2*m3*x2*z1+c3*cp3*m2*m3*x2*z1+c1*c3*cp3*m2*m3*x2*z1+c2*c3*cp3*m2*m3*x2*z1+cp1*cp3*m2*m3*x2*z1+c2*cp1*cp3*m2*m3*x2*z1+c3*cp1*cp3*m2*m3*x2*z1+c2*c3*cp1*cp3*m2*m3*x2*z1+cp2*cp3*m2*m3*x2*z1+c1*c3*cp2*cp3*m2*m3*x2*z1+cp1*cp2*cp3*m2*m3*x2*z1+c1*cp1*cp2*cp3*m2*m3*x2*z1+c3*cp1*cp3*m1*m2*m3*x2*z1+cp1*cp2*cp3*m1*m2*m3*x2*z1+c3*cp1*cp2*cp3*m1*m2*m3*x2*z1+c1*c2*cp1*x3*z1+c1*c2*c3*cp1*cp2*x3*z1+c2*cp1*cp3*x3*z1+c1*c2*cp1*cp3*x3*z1+c2*c3*cp1*cp3*x3*z1+c1*c2*c3*cp1*cp3*x3*z1+c1*cp2*cp3*x3*z1+c2*cp2*cp3*x3*z1+c1*c3*cp2*cp3*x3*z1+c2*c3*cp2*cp3*x3*z1+c1*cp1*cp2*cp3*x3*z1+c1*c2*cp1*cp2*cp3*x3*z1+c1*c3*cp1*cp2*cp3*x3*z1+c2*cp1*m1*x3*z1+c2*c3*cp1*cp2*m1*x3*z1+c2*cp1*cp3*m1*x3*z1+c2*c3*cp1*cp3*m1*x3*z1+c2*cp1*cp2*cp3*m1*x3*z1+cp1*m2*x3*z1+c2*cp1*m2*x3*z1+c1*c2*cp1*m2*x3*z1+c3*cp1*m2*x3*z1+c1*c3*cp1*m2*x3*z1+c2*c3*cp1*m2*x3*z1+cp1*cp2*m2*x3*z1+c2*cp1*cp2*m2*x3*z1+c3*cp1*cp2*m2*x3*z1+c2*c3*cp1*cp2*m2*x3*z1+c1*cp3*m2*x3*z1+c1*c2*cp3*m2*x3*z1+c1*c3*cp3*m2*x3*z1+c2*cp1*cp3*m2*x3*z1+c1*c2*cp1*cp3*m2*x3*z1+c2*c3*cp1*cp3*m2*x3*z1+cp2*cp3*m2*x3*z1+c1*cp2*cp3*m2*x3*z1+c1*c2*cp2*cp3*m2*x3*z1+c3*cp2*cp3*m2*x3*z1+c1*c3*cp2*cp3*m2*x3*z1+cp1*cp2*cp3*m2*x3*z1+c2*cp1*cp2*cp3*m2*x3*z1+c1*c2*cp1*cp2*cp3*m2*x3*z1+c2*cp1*m1*m2*x3*z1+c3*cp1*m1*m2*x3*z1+cp1*cp3*m1*m2*x3*z1+c3*cp1*cp3*m1*m2*x3*z1+cp1*cp2*cp3*m1*m2*x3*z1+c3*cp1*cp2*cp3*m1*m2*x3*z1+c2*cp1*m3*x3*z1+c1*c2*cp1*m3*x3*z1+c1*cp2*m3*x3*z1+c2*cp2*m3*x3*z1+c1*c3*cp2*m3*x3*z1+c2*c3*cp2*m3*x3*z1+c1*cp1*cp2*m3*x3*z1+c1*c2*cp1*cp2*m3*x3*z1+c1*c3*cp1*cp2*m3*x3*z1+c2*c3*cp1*cp2*m3*x3*z1+c1*c2*cp3*m3*x3*z1+c2*c3*cp3*m3*x3*z1+c2*cp1*cp3*m3*x3*z1+c1*c2*cp1*cp3*m3*x3*z1+c1*cp2*cp3*m3*x3*z1+c2*cp2*cp3*m3*x3*z1+c1*c2*cp2*cp3*m3*x3*z1+c2*c3*cp2*cp3*m3*x3*z1+c1*cp1*cp2*cp3*m3*x3*z1+c2*cp1*m1*m3*x3*z1+c2*cp1*cp2*m1*m3*x3*z1+c2*cp1*cp2*cp3*m1*m3*x3*z1+c2*cp1*m2*m3*x3*z1+cp2*m2*m3*x3*z1+c3*cp2*m2*m3*x3*z1+cp1*cp2*m2*m3*x3*z1+c2*cp1*cp2*m2*m3*x3*z1+c3*cp1*cp2*m2*m3*x3*z1+c1*cp3*m2*m3*x3*z1+c2*cp1*cp3*m2*m3*x3*z1+c3*cp1*cp3*m2*m3*x3*z1+cp2*cp3*m2*m3*x3*z1+c1*cp2*cp3*m2*m3*x3*z1+cp1*cp2*cp3*m2*m3*x3*z1+c1*cp1*cp2*cp3*m2*m3*x3*z1+c2*cp1*cp2*cp3*m2*m3*x3*z1+cp1*cp3*m1*m2*m3*x3*z1+cp2*cp3*y1*z1+c3*cp2*m1*y1*z1+cp2*cp3*m1*y1*z1+c3*m2*y1*z1+c1*c3*cp2*m2*y1*z1+c3*cp1*cp2*m2*y1*z1+cp3*m2*y1*z1+c2*cp3*m2*y1*z1+c1*c2*cp3*m2*y1*z1+c3*cp3*m2*y1*z1+c1*c3*cp3*m2*y1*z1+c2*cp1*cp3*m2*y1*z1+c3*cp1*cp3*m2*y1*z1+c1*cp2*cp3*m2*y1*z1+cp1*cp2*cp3*m2*y1*z1+c3*cp2*m1*m2*y1*z1+c1*c3*cp2*m1*m2*y1*z1+c3*cp1*cp2*m1*m2*y1*z1+c2*cp3*m1*m2*y1*z1+c1*c2*cp3*m1*m2*y1*z1+c3*cp3*m1*m2*y1*z1+c1*c3*cp3*m1*m2*y1*z1+c2*cp1*cp3*m1*m2*y1*z1+c3*cp1*cp3*m1*m2*y1*z1+cp2*cp3*m1*m2*y1*z1+c1*cp2*cp3*m1*m2*y1*z1+cp1*cp2*cp3*m1*m2*y1*z1+c1*c2*cp2*m3*y1*z1+c1*c3*cp2*m3*y1*z1+cp1*cp2*m3*y1*z1+c2*cp1*cp2*m3*y1*z1+c3*cp1*cp2*m3*y1*z1+c1*c2*cp3*m3*y1*z1+c2*c3*cp3*m3*y1*z1+c2*cp1*cp3*m3*y1*z1+cp2*cp3*m3*y1*z1+c3*cp2*cp3*m3*y1*z1+cp2*m1*m3*y1*z1+c1*cp2*m1*m3*y1*z1+c2*cp2*m1*m3*y1*z1+c1*c2*cp2*m1*m3*y1*z1+c3*cp2*m1*m3*y1*z1+c1*c3*cp2*m1*m3*y1*z1+cp1*cp2*m1*m3*y1*z1+c2*cp1*cp2*m1*m3*y1*z1+c3*cp1*cp2*m1*m3*y1*z1+c1*c2*cp3*m1*m3*y1*z1+c2*c3*cp3*m1*m3*y1*z1+c2*cp1*cp3*m1*m3*y1*z1+c3*cp2*cp3*m1*m3*y1*z1+cp3*m2*m3*y1*z1+c2*cp3*m2*m3*y1*z1+c3*cp3*m2*m3*y1*z1+c1*c3*cp3*m2*m3*y1*z1+c2*c3*cp3*m2*m3*y1*z1+c3*cp1*cp3*m2*m3*y1*z1+cp2*cp3*m2*m3*y1*z1+c1*cp2*cp3*m2*m3*y1*z1+c3*cp2*cp3*m2*m3*y1*z1+cp1*cp2*cp3*m2*m3*y1*z1+cp3*m1*m2*m3*y1*z1+c1*cp3*m1*m2*m3*y1*z1+cp1*cp3*m1*m2*m3*y1*z1+c1*cp2*cp3*m1*m2*m3*y1*z1+c3*cp2*cp3*m1*m2*m3*y1*z1+cp1*cp2*cp3*m1*m2*m3*y1*z1+c3*y2*z1+c1*c3*cp1*y2*z1+c1*c3*cp2*y2*z1+c3*cp1*cp2*y2*z1+cp1*cp3*y2*z1+c1*cp1*cp3*y2*z1+cp2*cp3*y2*z1+c1*cp2*cp3*y2*z1+c3*cp1*m1*y2*z1+c3*cp1*cp2*m1*y2*z1+cp1*cp3*m1*y2*z1+cp1*cp2*cp3*m1*y2*z1+c3*cp1*m2*y2*z1+c1*c3*cp1*m2*y2*z1+c3*cp2*m2*y2*z1+c1*c3*cp2*m2*y2*z1+c1*c3*cp1*cp2*m2*y2*z1+c1*cp3*m2*y2*z1+c1*c2*cp3*m2*y2*z1+c1*c3*cp3*m2*y2*z1+cp1*cp3*m2*y2*z1+c1*cp1*cp3*m2*y2*z1+c2*cp1*cp3*m2*y2*z1+c1*c2*cp1*cp3*m2*y2*z1+c3*cp1*cp3*m2*y2*z1+c1*c3*cp1*cp3*m2*y2*z1+cp2*cp3*m2*y2*z1+c1*cp2*cp3*m2*y2*z1+c1*cp1*cp2*cp3*m2*y2*z1+c3*cp1*m1*m2*y2*z1+c1*m3*y2*z1+c2*m3*y2*z1+c3*m3*y2*z1+cp1*m3*y2*z1+c1*c2*cp1*m3*y2*z1+c1*c3*cp1*m3*y2*z1+c1*cp2*m3*y2*z1+c2*cp2*m3*y2*z1+c1*c2*cp2*m3*y2*z1+c3*cp2*m3*y2*z1+c1*c3*cp2*m3*y2*z1+cp1*cp2*m3*y2*z1+c1*c2*cp1*cp2*m3*y2*z1+c1*c3*cp1*cp2*m3*y2*z1+c1*cp3*m3*y2*z1+c2*cp3*m3*y2*z1+c3*cp3*m3*y2*z1+c2*c3*cp3*m3*y2*z1+c1*c2*c3*cp3*m3*y2*z1+c1*cp1*cp3*m3*y2*z1+c2*cp1*cp3*m3*y2*z1+c1*c2*cp1*cp3*m3*y2*z1+cp2*cp3*m3*y2*z1+c3*cp2*cp3*m3*y2*z1+c1*c3*cp2*cp3*m3*y2*z1+cp1*cp2*cp3*m3*y2*z1+cp1*m1*m3*y2*z1+c2*cp1*m1*m3*y2*z1+c3*cp1*m1*m3*y2*z1+cp1*cp2*m1*m3*y2*z1+c2*cp1*cp3*m1*m3*y2*z1+c2*c3*cp1*cp3*m1*m3*y2*z1+c3*cp1*cp2*cp3*m1*m3*y2*z1+cp3*m2*m3*y2*z1+c2*cp3*m2*m3*y2*z1+c3*cp3*m2*m3*y2*z1+c1*c3*cp3*m2*m3*y2*z1+c2*c3*cp3*m2*m3*y2*z1+c2*cp1*cp3*m2*m3*y2*z1+c2*c3*cp1*cp3*m2*m3*y2*z1+c3*cp2*cp3*m2*m3*y2*z1+c1*c3*cp2*cp3*m2*m3*y2*z1+c1*cp1*cp2*cp3*m2*m3*y2*z1+c3*cp1*cp3*m1*m2*m3*y2*z1+cp1*cp2*cp3*m1*m2*m3*y2*z1+c3*cp1*cp2*cp3*m1*m2*m3*y2*z1+c2*cp1*y3*z1+c1*c2*cp1*y3*z1+c1*cp2*y3*z1+c2*cp2*y3*z1+c1*cp1*cp2*y3*z1+c1*c2*cp1*cp2*y3*z1+c1*c3*cp1*cp2*y3*z1+c1*c2*c3*cp1*cp2*y3*z1+c1*c2*c3*cp1*cp3*y3*z1+c1*cp1*cp2*cp3*y3*z1+c1*c2*cp1*cp2*cp3*y3*z1+c1*c3*cp1*cp2*cp3*y3*z1+c2*cp1*m1*y3*z1+c2*cp1*cp2*m1*y3*z1+c3*cp1*cp2*m1*y3*z1+c2*c3*cp1*cp2*m1*y3*z1+c2*c3*cp1*cp3*m1*y3*z1+cp1*cp2*cp3*m1*y3*z1+c2*cp1*cp2*cp3*m1*y3*z1+c3*cp1*cp2*cp3*m1*y3*z1+cp1*m2*y3*z1+c1*c2*cp1*m2*y3*z1+c1*c3*cp1*m2*y3*z1+c2*c3*cp1*m2*y3*z1+cp2*m2*y3*z1+c2*c3*cp1*cp2*m2*y3*z1+c1*cp3*m2*y3*z1+c1*c2*cp3*m2*y3*z1+c1*c3*cp3*m2*y3*z1+c1*cp1*cp3*m2*y3*z1+c1*c2*cp1*cp3*m2*y3*z1+c2*c3*cp1*cp3*m2*y3*z1+c1*cp2*cp3*m2*y3*z1+c1*c2*cp2*cp3*m2*y3*z1+c1*c3*cp2*cp3*m2*y3*z1+c1*cp1*cp2*cp3*m2*y3*z1+c2*cp1*cp2*cp3*m2*y3*z1+c1*c2*cp1*cp2*cp3*m2*y3*z1+c2*cp1*m1*m2*y3*z1+c3*cp1*m1*m2*y3*z1+c3*cp1*cp3*m1*m2*y3*z1+c3*cp1*cp2*cp3*m1*m2*y3*z1+c1*c2*cp1*m3*y3*z1+cp2*m3*y3*z1+c1*cp2*m3*y3*z1+c2*cp2*m3*y3*z1+c3*cp2*m3*y3*z1+c1*c3*cp2*m3*y3*z1+c2*c3*cp2*m3*y3*z1+cp1*cp2*m3*y3*z1+c1*cp1*cp2*m3*y3*z1+c2*cp1*cp2*m3*y3*z1+c1*c2*cp1*cp2*m3*y3*z1+c3*cp1*cp2*m3*y3*z1+c1*c3*cp1*cp2*m3*y3*z1+c2*c3*cp1*cp2*m3*y3*z1+c1*c2*cp3*m3*y3*z1+c2*c3*cp3*m3*y3*z1+c1*c2*cp1*cp3*m3*y3*z1+cp2*cp3*m3*y3*z1+c1*cp2*cp3*m3*y3*z1+c2*cp2*cp3*m3*y3*z1+c1*c2*cp2*cp3*m3*y3*z1+c3*cp2*cp3*m3*y3*z1+c2*c3*cp2*cp3*m3*y3*z1+c1*cp1*cp2*cp3*m3*y3*z1+c2*cp1*m1*m3*y3*z1+c2*cp1*cp2*m1*m3*y3*z1+c2*cp1*cp2*cp3*m1*m3*y3*z1+c2*cp1*m2*m3*y3*z1+cp2*m2*m3*y3*z1+c3*cp2*m2*m3*y3*z1+cp1*cp2*m2*m3*y3*z1+c2*cp1*cp2*m2*m3*y3*z1+c3*cp1*cp2*m2*m3*y3*z1+c1*cp3*m2*m3*y3*z1+c2*cp1*cp3*m2*m3*y3*z1+c3*cp1*cp3*m2*m3*y3*z1+cp2*cp3*m2*m3*y3*z1+c1*cp2*cp3*m2*m3*y3*z1+c1*cp1*cp2*cp3*m2*m3*y3*z1+c2*cp1*cp2*cp3*m2*m3*y3*z1+cp1*cp3*m1*m2*m3*y3*z1+c1*c2*c3*cp1*z2+c1*c3*cp1*cp2*z2+c1*c2*c3*cp1*cp3*z2+c1*cp1*cp2*cp3*z2+c1*c2*cp1*cp2*cp3*z2+c1*c3*cp1*cp2*cp3*z2+c1*c2*c3*cp1*cp2*cp3*z2+c1*c2*c3*cp1*m1*z2+c3*cp1*cp2*m1*z2+c1*c2*c3*cp1*cp2*m1*z2+c1*cp1*cp3*m1*z2+c1*c2*cp1*cp3*m1*z2+c2*cp1*cp2*cp3*m1*z2+c1*c2*cp1*cp2*cp3*m1*z2+c3*cp1*cp2*cp3*m1*z2+c1*c2*c3*cp1*cp2*cp3*m1*z2+c1*c3*cp1*m2*z2+c1*c2*c3*cp1*m2*z2+c1*c2*c3*cp1*cp2*m2*z2+c1*cp1*cp3*m2*z2+c1*cp1*cp2*cp3*m2*z2+c1*c2*c3*cp1*cp2*cp3*m2*z2+c3*cp1*m1*m2*z2+c1*c2*c3*cp1*m1*m2*z2+c1*c3*cp2*m1*m2*z2+c1*c2*c3*cp2*m1*m2*z2+c3*cp1*cp2*m1*m2*z2+c1*c3*cp1*cp2*m1*m2*z2+c2*c3*cp1*cp2*m1*m2*z2+c1*c2*c3*cp1*cp2*m1*m2*z2+cp3*m1*m2*z2+c1*cp3*m1*m2*z2+c2*cp3*m1*m2*z2+c1*c2*cp3*m1*m2*z2+c3*cp3*m1*m2*z2+c1*c2*c3*cp3*m1*m2*z2+c1*cp1*cp3*m1*m2*z2+c3*cp1*cp3*m1*m2*z2+c2*c3*cp1*cp3*m1*m2*z2+c1*c2*c3*cp1*cp3*m1*m2*z2+c1*cp2*cp3*m1*m2*z2+c1*c3*cp2*cp3*m1*m2*z2+c1*cp1*cp2*cp3*m1*m2*z2+c2*cp1*cp2*cp3*m1*m2*z2+c1*c2*cp1*cp2*cp3*m1*m2*z2+c1*c3*cp1*cp2*cp3*m1*m2*z2+c1*c2*c3*cp1*m3*z2+c1*c3*cp1*cp2*m3*z2+c1*c2*c3*cp1*cp2*m3*z2+c1*c2*cp1*cp3*m3*z2+c1*c2*c3*cp1*cp3*m3*z2+c1*cp1*cp2*cp3*m3*z2+c1*c2*cp1*cp2*cp3*m3*z2+c1*cp1*m1*m3*z2+c2*cp1*m1*m3*z2+c3*cp1*m1*m3*z2+c1*cp2*m1*m3*z2+cp1*cp2*m1*m3*z2+c1*cp1*cp2*m1*m3*z2+c2*cp1*cp2*m1*m3*z2+c1*c2*cp1*cp2*m1*m3*z2+c1*c3*cp1*cp2*m1*m3*z2+c1*c2*cp3*m1*m3*z2+c1*c3*cp3*m1*m3*z2+cp1*cp3*m1*m3*z2+c1*c2*cp1*cp3*m1*m3*z2+c1*c2*c3*cp1*cp3*m1*m3*z2+c1*c2*cp2*cp3*m1*m3*z2+cp1*cp2*cp3*m1*m3*z2+c1*cp1*cp2*cp3*m1*m3*z2+c1*c3*cp1*cp2*cp3*m1*m3*z2+c1*cp1*m2*m3*z2+c1*c2*cp1*m2*m3*z2+c1*c3*cp1*m2*m3*z2+c1*c3*cp1*cp2*m2*m3*z2+c1*c2*cp1*cp3*m2*m3*z2+c1*c3*cp1*cp3*m2*m3*z2+c1*c2*c3*cp1*cp3*m2*m3*z2+c1*c3*cp1*cp2*cp3*m2*m3*z2+c1*c3*cp1*m1*m2*m3*z2+c1*c2*c3*cp1*m1*m2*m3*z2+cp2*m1*m2*m3*z2+c1*cp2*m1*m2*m3*z2+c1*c2*cp2*m1*m2*m3*z2+c1*c3*cp2*m1*m2*m3*z2+c1*c2*c3*cp2*m1*m2*m3*z2+c1*cp1*cp2*m1*m2*m3*z2+c2*cp1*cp2*m1*m2*m3*z2+c1*c2*cp1*cp2*m1*m2*m3*z2+c2*cp3*m1*m2*m3*z2+c1*c2*cp3*m1*m2*m3*z2+c3*cp3*m1*m2*m3*z2+c2*c3*cp3*m1*m2*m3*z2+c2*cp1*cp3*m1*m2*m3*z2+cp2*cp3*m1*m2*m3*z2+c1*c2*cp2*cp3*m1*m2*m3*z2+c1*c3*cp1*cp2*cp3*m1*m2*m3*z2+c3*x1*z2+c3*cp1*x1*z2+c1*cp3*x1*z2+c2*cp3*x1*z2+c1*c2*cp3*x1*z2+c3*cp3*x1*z2+c1*c3*cp3*x1*z2+c2*cp1*cp3*x1*z2+c3*cp1*cp3*x1*z2+c1*cp2*cp3*x1*z2+c3*m1*x1*z2+c3*cp1*m1*x1*z2+c3*cp2*m1*x1*z2+c3*cp1*cp2*m1*x1*z2+c1*cp3*m1*x1*z2+c1*cp1*cp3*m1*x1*z2+cp2*cp3*m1*x1*z2+cp1*cp2*cp3*m1*x1*z2+c3*m2*x1*z2+c1*c3*m2*x1*z2+c3*cp1*m2*x1*z2+c1*c3*cp1*m2*x1*z2+c3*cp2*m2*x1*z2+c1*c3*cp2*m2*x1*z2+c3*cp1*cp2*m2*x1*z2+c1*c3*cp1*cp2*m2*x1*z2+c1*cp3*m2*x1*z2+c1*c2*cp3*m2*x1*z2+c1*c3*cp3*m2*x1*z2+c1*cp1*cp3*m2*x1*z2+c1*c2*cp1*cp3*m2*x1*z2+c1*c3*cp1*cp3*m2*x1*z2+c1*cp1*cp2*cp3*m2*x1*z2+c3*m1*m2*x1*z2+c3*cp1*m1*m2*x1*z2+c3*cp2*m1*m2*x1*z2+c3*cp1*cp2*m1*m2*x1*z2+c2*cp3*m1*m2*x1*z2+c3*cp3*m1*m2*x1*z2+c2*cp1*cp3*m1*m2*x1*z2+c3*cp1*cp3*m1*m2*x1*z2+cp2*cp3*m1*m2*x1*z2+cp1*cp2*cp3*m1*m2*x1*z2+c1*m3*x1*z2+c1*c2*m3*x1*z2+c1*c3*m3*x1*z2+c1*cp1*m3*x1*z2+c1*c2*cp1*m3*x1*z2+c1*c3*cp1*m3*x1*z2+c2*cp2*m3*x1*z2+c1*c2*cp2*m3*x1*z2+c3*cp2*m3*x1*z2+c1*c3*cp2*m3*x1*z2+c1*cp1*cp2*m3*x1*z2+c2*cp1*cp2*m3*x1*z2+c1*c2*cp1*cp2*m3*x1*z2+c3*cp1*cp2*m3*x1*z2+c1*c3*cp1*cp2*m3*x1*z2+cp3*m3*x1*z2+c1*cp3*m3*x1*z2+c1*c2*c3*cp3*m3*x1*z2+cp1*cp3*m3*x1*z2+c1*c2*cp1*cp3*m3*x1*z2+cp2*cp3*m3*x1*z2+c1*c3*cp2*cp3*m3*x1*z2+cp1*cp2*cp3*m3*x1*z2+c2*m1*m3*x1*z2+c3*m1*m3*x1*z2+c2*cp1*m1*m3*x1*z2+c3*cp1*m1*m3*x1*z2+cp2*m1*m3*x1*z2+c2*cp2*m1*m3*x1*z2+c3*cp2*m1*m3*x1*z2+cp1*cp2*m1*m3*x1*z2+c2*cp1*cp2*m1*m3*x1*z2+c3*cp1*cp2*m1*m3*x1*z2+c2*c3*cp3*m1*m3*x1*z2+c2*c3*cp1*cp3*m1*m3*x1*z2+c3*cp2*cp3*m1*m3*x1*z2+c3*cp1*cp2*cp3*m1*m3*x1*z2+c2*cp3*m2*m3*x1*z2+c3*cp3*m2*m3*x1*z2+c2*c3*cp3*m2*m3*x1*z2+c2*cp1*cp3*m2*m3*x1*z2+c3*cp1*cp3*m2*m3*x1*z2+c2*c3*cp1*cp3*m2*m3*x1*z2+cp2*cp3*m2*m3*x1*z2+c1*c3*cp2*cp3*m2*m3*x1*z2+cp1*cp2*cp3*m2*m3*x1*z2+c1*cp1*cp2*cp3*m2*m3*x1*z2+c3*cp2*cp3*m1*m2*m3*x1*z2+c3*cp1*cp2*cp3*m1*m2*m3*x1*z2+c1*c3*cp1*x2*z2+c1*c3*cp2*x2*z2+c3*cp1*cp2*x2*z2+c1*c3*cp1*cp2*x2*z2+c1*c2*cp3*x2*z2+c1*c3*cp3*x2*z2+c2*cp1*cp3*x2*z2+c1*c2*cp1*cp3*x2*z2+c3*cp1*cp3*x2*z2+c1*c3*cp1*cp3*x2*z2+c1*c3*cp1*m1*x2*z2+c1*c3*cp2*m1*x2*z2+c3*cp1*cp2*m1*x2*z2+c1*c3*cp1*cp2*m1*x2*z2+c1*c2*cp3*m1*x2*z2+c1*c3*cp3*m1*x2*z2+c1*cp1*cp3*m1*x2*z2+c2*cp1*cp3*m1*x2*z2+c1*c2*cp1*cp3*m1*x2*z2+c3*cp1*cp3*m1*x2*z2+c1*c3*cp1*cp3*m1*x2*z2+c1*c3*cp1*m2*x2*z2+c1*c3*cp2*m2*x2*z2+c1*c2*cp3*m2*x2*z2+c1*c3*cp3*m2*x2*z2+cp1*cp2*cp3*m2*x2*z2+c1*cp1*cp2*cp3*m2*x2*z2+c1*c3*cp1*m1*m2*x2*z2+c1*c3*cp2*m1*m2*x2*z2+c1*c2*cp3*m1*m2*x2*z2+c1*c3*cp3*m1*m2*x2*z2+c1*cp1*cp3*m1*m2*x2*z2+cp1*cp2*cp3*m1*m2*x2*z2+c1*cp1*cp2*cp3*m1*m2*x2*z2+c1*c2*cp1*m3*x2*z2+c1*c3*cp1*m3*x2*z2+c1*c2*cp2*m3*x2*z2+c1*c3*cp2*m3*x2*z2+c1*cp1*cp2*m3*x2*z2+c1*cp3*m3*x2*z2+c1*c2*cp3*m3*x2*z2+cp1*cp3*m3*x2*z2+c1*cp1*cp3*m3*x2*z2+c1*c2*cp1*m1*m3*x2*z2+c1*c3*cp1*m1*m3*x2*z2+c1*c2*cp2*m1*m3*x2*z2+c1*c3*cp2*m1*m3*x2*z2+cp1*cp2*m1*m3*x2*z2+c1*cp3*m1*m3*x2*z2+c1*c2*cp3*m1*m3*x2*z2+cp1*cp3*m1*m3*x2*z2+c1*cp3*m2*m3*x2*z2+c1*cp1*cp3*m2*m3*x2*z2+c1*cp2*cp3*m2*m3*x2*z2+c1*cp3*m1*m2*m3*x2*z2+c1*cp1*cp3*m1*m2*m3*x2*z2+c1*cp2*cp3*m1*m2*m3*x2*z2+c1*c2*cp1*x3*z2+c1*c2*c3*cp1*cp2*x3*z2+c1*c2*cp1*cp3*x3*z2+c1*c2*c3*cp1*cp3*x3*z2+c1*cp1*cp2*cp3*x3*z2+c1*c2*cp1*cp2*cp3*x3*z2+c1*c3*cp1*cp2*cp3*x3*z2+c1*c2*cp1*m1*x3*z2+c1*c3*cp1*m1*x3*z2+c1*c3*cp1*cp2*m1*x3*z2+c1*c2*cp1*cp3*m1*x3*z2+c1*c2*cp1*cp2*cp3*m1*x3*z2+c1*c3*cp1*cp2*cp3*m1*x3*z2+c1*c2*cp1*m2*x3*z2+c1*c3*cp1*m2*x3*z2+c1*c2*cp1*cp3*m2*x3*z2+c1*c2*cp1*cp2*cp3*m2*x3*z2+c1*cp1*cp2*m1*m2*x3*z2+c1*c2*cp1*m3*x3*z2+c1*cp1*cp2*m3*x3*z2+c1*c2*cp1*cp2*m3*x3*z2+c1*c3*cp1*cp2*m3*x3*z2+c1*c2*cp1*cp3*m3*x3*z2+c1*cp1*cp2*cp3*m3*x3*z2+c1*cp1*cp2*cp3*m2*m3*x3*z2+c3*y1*z2+c1*c3*cp1*y1*z2+c1*c3*cp2*y1*z2+c3*cp1*cp2*y1*z2+cp3*y1*z2+c1*cp1*cp3*y1*z2+cp2*cp3*y1*z2+c1*cp2*cp3*y1*z2+c3*m1*y1*z2+c3*cp1*m1*y1*z2+c1*c3*cp1*m1*y1*z2+c1*c3*cp2*m1*y1*z2+cp3*m1*y1*z2+c2*cp3*m1*y1*z2+c1*c2*cp3*m1*y1*z2+c3*cp3*m1*y1*z2+c1*c3*cp3*m1*y1*z2+cp1*cp3*m1*y1*z2+c2*cp1*cp3*m1*y1*z2+c3*cp1*cp3*m1*y1*z2+cp2*cp3*m1*y1*z2+cp1*cp2*cp3*m1*y1*z2+c3*m2*y1*z2+c1*c3*m2*y1*z2+c3*cp1*cp2*m2*y1*z2+c1*c3*cp1*cp2*m2*y1*z2+cp3*m2*y1*z2+c2*cp3*m2*y1*z2+c3*cp3*m2*y1*z2+cp1*cp3*m2*y1*z2+c1*c2*cp1*cp3*m2*y1*z2+c1*c3*cp1*cp3*m2*y1*z2+cp1*cp2*cp3*m2*y1*z2+c1*cp1*cp2*cp3*m2*y1*z2+c3*m1*m2*y1*z2+c3*cp1*m1*m2*y1*z2+c3*cp2*m1*m2*y1*z2+c3*cp1*cp2*m1*m2*y1*z2+c2*cp3*m1*m2*y1*z2+c3*cp3*m1*m2*y1*z2+c2*cp1*cp3*m1*m2*y1*z2+c3*cp1*cp3*m1*m2*y1*z2+c1*cp2*cp3*m1*m2*y1*z2+c1*m3*y1*z2+c1*c2*m3*y1*z2+c1*c3*m3*y1*z2+c1*cp1*m3*y1*z2+c2*cp1*m3*y1*z2+c3*cp1*m3*y1*z2+cp2*m3*y1*z2+c1*cp2*m3*y1*z2+c2*cp1*cp2*m3*y1*z2+c1*c2*cp1*cp2*m3*y1*z2+c3*cp1*cp2*m3*y1*z2+c1*c3*cp1*cp2*m3*y1*z2+cp3*m3*y1*z2+c1*cp3*m3*y1*z2+c1*c2*cp3*m3*y1*z2+c2*c3*cp3*m3*y1*z2+c1*c2*c3*cp3*m3*y1*z2+cp1*cp3*m3*y1*z2+c1*cp1*cp3*m3*y1*z2+c1*c2*cp1*cp3*m3*y1*z2+cp2*cp3*m3*y1*z2+c3*cp2*cp3*m3*y1*z2+c1*c3*cp2*cp3*m3*y1*z2+cp1*cp2*cp3*m3*y1*z2+c2*m1*m3*y1*z2+c3*m1*m3*y1*z2+c2*cp1*m1*m3*y1*z2+c3*cp1*m1*m3*y1*z2+c1*cp2*m1*m3*y1*z2+c2*cp2*m1*m3*y1*z2+c3*cp2*m1*m3*y1*z2+c1*cp1*cp2*m1*m3*y1*z2+c2*cp1*cp2*m1*m3*y1*z2+c3*cp1*cp2*m1*m3*y1*z2+cp3*m1*m3*y1*z2+c1*cp3*m1*m3*y1*z2+c2*c3*cp3*m1*m3*y1*z2+cp1*cp3*m1*m3*y1*z2+c1*cp1*cp3*m1*m3*y1*z2+c2*c3*cp1*cp3*m1*m3*y1*z2+c3*cp2*cp3*m1*m3*y1*z2+c3*cp1*cp2*cp3*m1*m3*y1*z2+cp3*m2*m3*y1*z2+c1*cp3*m2*m3*y1*z2+c2*cp3*m2*m3*y1*z2+c3*cp3*m2*m3*y1*z2+c2*c3*cp3*m2*m3*y1*z2+cp1*cp3*m2*m3*y1*z2+c1*cp1*cp3*m2*m3*y1*z2+c2*cp1*cp3*m2*m3*y1*z2+c3*cp1*cp3*m2*m3*y1*z2+c2*c3*cp1*cp3*m2*m3*y1*z2+cp2*cp3*m2*m3*y1*z2+c1*cp2*cp3*m2*m3*y1*z2+c3*cp2*cp3*m2*m3*y1*z2+c1*c3*cp2*cp3*m2*m3*y1*z2+cp1*cp2*cp3*m2*m3*y1*z2+c1*cp1*cp2*cp3*m2*m3*y1*z2+c3*cp2*cp3*m1*m2*m3*y1*z2+c3*cp1*cp2*cp3*m1*m2*m3*y1*z2+c3*cp1*cp2*m1*y2*z2+c1*c3*cp1*cp2*m1*y2*z2+c2*cp1*cp3*m1*y2*z2+c1*c2*cp1*cp3*m1*y2*z2+c3*cp1*cp3*m1*y2*z2+c1*c3*cp1*cp3*m1*y2*z2+c1*cp1*cp3*m2*y2*z2+c1*c3*cp1*m1*m2*y2*z2+c1*c3*cp2*m1*m2*y2*z2+c1*c2*cp3*m1*m2*y2*z2+c1*c3*cp3*m1*m2*y2*z2+c1*cp1*cp3*m1*m2*y2*z2+c1*cp2*cp3*m1*m2*y2*z2+cp1*cp2*cp3*m1*m2*y2*z2+c1*cp1*cp2*cp3*m1*m2*y2*z2+cp1*cp2*m3*y2*z2+c1*cp1*cp2*m3*y2*z2+c1*cp1*cp3*m3*y2*z2+c1*c2*cp1*m1*m3*y2*z2+c1*c3*cp1*m1*m3*y2*z2+c1*cp2*m1*m3*y2*z2+c1*c2*cp2*m1*m3*y2*z2+c1*c3*cp2*m1*m3*y2*z2+cp1*cp2*m1*m3*y2*z2+c1*cp1*cp2*m1*m3*y2*z2+c1*c2*cp3*m1*m3*y2*z2+cp1*cp3*m1*m3*y2*z2+c1*cp1*cp3*m1*m3*y2*z2+c1*cp3*m1*m2*m3*y2*z2+c1*cp1*cp3*m1*m2*m3*y2*z2+c1*cp2*cp3*m1*m2*m3*y2*z2+c1*c2*cp1*y3*z2+c1*cp1*cp2*y3*z2+c1*c2*cp1*cp2*y3*z2+c1*c3*cp1*cp2*y3*z2+c1*c2*c3*cp1*cp2*y3*z2+c1*c2*c3*cp1*cp3*y3*z2+c1*cp1*cp2*cp3*y3*z2+c1*c2*cp1*cp2*cp3*y3*z2+c1*c3*cp1*cp2*cp3*y3*z2+c1*c2*cp1*m1*y3*z2+c1*c3*cp1*m1*y3*z2+c1*cp1*cp2*m1*y3*z2+c1*c3*cp1*cp2*m1*y3*z2+c1*cp1*cp3*m1*y3*z2+c1*c2*cp1*cp3*m1*y3*z2+c1*c2*cp1*cp2*cp3*m1*y3*z2+c1*c3*cp1*cp2*cp3*m1*y3*z2+c1*c2*cp1*m2*y3*z2+c1*c3*cp1*m2*y3*z2+c1*cp1*cp3*m2*y3*z2+c1*c2*cp1*cp3*m2*y3*z2+c1*cp1*cp2*cp3*m2*y3*z2+c1*c2*cp1*cp2*cp3*m2*y3*z2+c1*cp1*cp2*m1*m2*y3*z2+c1*c2*cp1*m3*y3*z2+c1*cp1*cp2*m3*y3*z2+c1*c2*cp1*cp2*m3*y3*z2+c1*c3*cp1*cp2*m3*y3*z2+c1*c2*cp1*cp3*m3*y3*z2+c1*cp1*cp2*cp3*m3*y3*z2+c1*cp1*cp2*cp3*m2*m3*y3*z2+c1*c3*cp1*z1*z2+c1*c3*cp2*z1*z2+c3*cp1*cp2*z1*z2+c1*cp1*cp3*z1*z2+c1*cp2*cp3*z1*z2+c3*cp1*m1*z1*z2+c3*cp1*cp2*m1*z1*z2+cp1*cp3*m1*z1*z2+cp1*cp2*cp3*m1*z1*z2+c3*cp1*m2*z1*z2+c1*c3*cp1*m2*z1*z2+c3*cp1*cp2*m2*z1*z2+c1*c3*cp1*cp2*m2*z1*z2+cp1*cp3*m2*z1*z2+c1*c2*cp1*cp3*m2*z1*z2+c1*c3*cp1*cp3*m2*z1*z2+cp1*cp2*cp3*m2*z1*z2+c1*cp1*cp2*cp3*m2*z1*z2+c3*cp1*m1*m2*z1*z2+c3*cp1*cp2*m1*m2*z1*z2+c2*cp1*cp3*m1*m2*z1*z2+c3*cp1*cp3*m1*m2*z1*z2+cp1*cp2*cp3*m1*m2*z1*z2+c1*c2*cp1*m3*z1*z2+c1*c3*cp1*m3*z1*z2+c1*cp1*cp2*m3*z1*z2+c2*cp1*cp2*m3*z1*z2+c1*c2*cp1*cp2*m3*z1*z2+c3*cp1*cp2*m3*z1*z2+c1*c3*cp1*cp2*m3*z1*z2+c1*c2*cp3*m3*z1*z2+c1*c2*c3*cp3*m3*z1*z2+c1*c2*cp1*cp3*m3*z1*z2+c1*c3*cp2*cp3*m3*z1*z2+cp1*cp2*cp3*m3*z1*z2+c2*cp1*m1*m3*z1*z2+c3*cp1*m1*m3*z1*z2+cp1*cp2*m1*m3*z1*z2+c2*cp1*cp2*m1*m3*z1*z2+c3*cp1*cp2*m1*m3*z1*z2+c2*c3*cp1*cp3*m1*m3*z1*z2+c3*cp1*cp2*cp3*m1*m3*z1*z2+c2*cp1*cp3*m2*m3*z1*z2+c3*cp1*cp3*m2*m3*z1*z2+c2*c3*cp1*cp3*m2*m3*z1*z2+c1*cp2*cp3*m2*m3*z1*z2+c1*c3*cp2*cp3*m2*m3*z1*z2+cp1*cp2*cp3*m2*m3*z1*z2+c1*cp1*cp2*cp3*m2*m3*z1*z2+c3*cp1*cp2*cp3*m1*m2*m3*z1*z2+c1*c2*c3*cp1*cp2*z3+c2*cp1*cp2*cp3*z3+c1*c2*cp1*cp2*cp3*z3+c2*c3*cp1*cp2*cp3*z3+c1*c2*c3*cp1*cp2*cp3*z3+c2*cp1*cp2*m1*z3+c2*c3*cp1*cp2*m1*z3+c1*c2*c3*cp1*cp2*m1*z3+c2*cp1*cp2*cp3*m1*z3+c1*c2*cp1*cp2*cp3*m1*z3+c1*c2*c3*cp1*cp2*cp3*m1*z3+c1*c3*cp1*m2*z3+c1*c3*cp2*m2*z3+c1*c2*cp1*cp2*m2*z3+c1*c3*cp1*cp2*m2*z3+c2*c3*cp1*cp2*m2*z3+c1*c2*cp1*cp3*m2*z3+c1*c2*cp2*cp3*m2*z3+c2*cp1*cp2*cp3*m2*z3+c1*c2*cp1*cp2*cp3*m2*z3+c1*c3*cp1*cp2*cp3*m2*z3+c2*c3*cp1*cp2*cp3*m2*z3+c1*c2*c3*m1*m2*z3+c1*c3*cp1*m1*m2*z3+c2*c3*cp1*m1*m2*z3+c1*c3*cp2*m1*m2*z3+c2*c3*cp2*m1*m2*z3+c1*c2*c3*cp2*m1*m2*z3+c2*cp1*cp2*m1*m2*z3+c1*c2*cp1*cp2*m1*m2*z3+c3*cp1*cp2*m1*m2*z3+c1*c3*cp1*cp2*m1*m2*z3+c1*c2*cp3*m1*m2*z3+c1*c3*cp3*m1*m2*z3+c1*c2*c3*cp3*m1*m2*z3+c2*cp1*cp3*m1*m2*z3+c1*c2*cp1*cp3*m1*m2*z3+c2*c3*cp1*cp3*m1*m2*z3+c1*c3*cp2*cp3*m1*m2*z3+c1*c2*cp1*cp2*cp3*m1*m2*z3+c2*c3*cp1*cp2*cp3*m1*m2*z3+c1*c2*c3*cp2*m3*z3+c1*c2*cp1*cp2*m3*z3+c1*c2*cp2*cp3*m3*z3+c1*c2*c3*cp2*cp3*m3*z3+c2*cp1*cp2*cp3*m3*z3+c2*c3*cp1*cp2*cp3*m3*z3+c1*c2*c3*cp2*m1*m3*z3+c2*cp1*cp2*m1*m3*z3+c1*c2*cp1*cp2*m1*m3*z3+c2*cp1*cp2*cp3*m1*m3*z3+c1*c2*cp1*cp2*cp3*m1*m3*z3+c1*c2*cp1*m2*m3*z3+c3*cp1*m2*m3*z3+c1*c3*cp1*m2*m3*z3+c1*c2*c3*cp1*m2*m3*z3+c1*c2*cp2*m2*m3*z3+c1*c3*cp2*m2*m3*z3+c1*c2*c3*cp2*m2*m3*z3+cp1*cp2*m2*m3*z3+c2*cp1*cp2*m2*m3*z3+c1*c2*cp1*cp2*m2*m3*z3+c3*cp1*cp2*m2*m3*z3+c1*c3*cp1*cp2*m2*m3*z3+c1*c2*c3*cp1*cp2*m2*m3*z3+c1*c3*cp3*m2*m3*z3+c1*c2*c3*cp3*m2*m3*z3+cp1*cp3*m2*m3*z3+c1*c3*cp1*cp3*m2*m3*z3+c1*c2*c3*cp1*cp3*m2*m3*z3+c1*c2*cp2*cp3*m2*m3*z3+c1*c3*cp2*cp3*m2*m3*z3+cp1*cp2*cp3*m2*m3*z3+c1*c3*cp1*cp2*cp3*m2*m3*z3+c2*c3*m1*m2*m3*z3+c1*c2*cp1*m1*m2*m3*z3+c3*cp1*m1*m2*m3*z3+c1*c2*c3*cp1*m1*m2*m3*z3+c1*c2*cp2*m1*m2*m3*z3+c1*c2*c3*cp2*m1*m2*m3*z3+c2*cp1*cp2*m1*m2*m3*z3+c3*cp1*cp2*m1*m2*m3*z3+c2*c3*cp1*cp2*m1*m2*m3*z3+c1*c2*cp3*m1*m2*m3*z3+c3*cp3*m1*m2*m3*z3+c1*c2*c3*cp3*m1*m2*m3*z3+c1*cp1*cp3*m1*m2*m3*z3+cp2*cp3*m1*m2*m3*z3+c1*cp2*cp3*m1*m2*m3*z3+c2*cp2*cp3*m1*m2*m3*z3+c1*c2*cp2*cp3*m1*m2*m3*z3+c2*c3*cp2*cp3*m1*m2*m3*z3+cp1*cp2*cp3*m1*m2*m3*z3+c2*cp1*cp2*cp3*m1*m2*m3*z3+c3*cp1*cp2*cp3*m1*m2*m3*z3+c1*c2*x1*z3+c1*c2*cp1*x1*z3+c1*cp2*x1*z3+c1*c2*cp2*x1*z3+c1*c3*cp2*x1*z3+c1*c2*c3*cp2*x1*z3+c1*cp1*cp2*x1*z3+c1*c2*cp1*cp2*x1*z3+c1*c3*cp1*cp2*x1*z3+c1*c2*c3*cp1*cp2*x1*z3+c1*c2*c3*cp3*x1*z3+c1*c2*c3*cp1*cp3*x1*z3+c1*cp2*cp3*x1*z3+c1*c2*cp2*cp3*x1*z3+c1*c3*cp2*cp3*x1*z3+c1*cp1*cp2*cp3*x1*z3+c1*c2*cp1*cp2*cp3*x1*z3+c1*c3*cp1*cp2*cp3*x1*z3+c2*m1*x1*z3+c2*cp1*m1*x1*z3+cp2*m1*x1*z3+c2*cp2*m1*x1*z3+c3*cp2*m1*x1*z3+c2*c3*cp2*m1*x1*z3+cp1*cp2*m1*x1*z3+c2*cp1*cp2*m1*x1*z3+c3*cp1*cp2*m1*x1*z3+c2*c3*cp1*cp2*m1*x1*z3+c2*c3*cp3*m1*x1*z3+c2*c3*cp1*cp3*m1*x1*z3+cp2*cp3*m1*x1*z3+c2*cp2*cp3*m1*x1*z3+c3*cp2*cp3*m1*x1*z3+cp1*cp2*cp3*m1*x1*z3+c2*cp1*cp2*cp3*m1*x1*z3+c3*cp1*cp2*cp3*m1*x1*z3+c1*c2*m2*x1*z3+c1*c3*m2*x1*z3+c2*c3*m2*x1*z3+c1*c2*cp1*m2*x1*z3+c1*c3*cp1*m2*x1*z3+c2*c3*cp1*m2*x1*z3+c2*c3*cp2*m2*x1*z3+c1*c2*cp1*cp2*m2*x1*z3+c1*c3*cp1*cp2*m2*x1*z3+c2*c3*cp1*cp2*m2*x1*z3+c1*c3*cp3*m2*x1*z3+c2*c3*cp3*m2*x1*z3+c1*c3*cp1*cp3*m2*x1*z3+c2*c3*cp1*cp3*m2*x1*z3+c2*cp2*cp3*m2*x1*z3+c1*c3*cp2*cp3*m2*x1*z3+c2*cp1*cp2*cp3*m2*x1*z3+c1*c2*cp1*cp2*cp3*m2*x1*z3+c2*m1*m2*x1*z3+c3*m1*m2*x1*z3+c2*cp1*m1*m2*x1*z3+c3*cp1*m1*m2*x1*z3+c3*cp3*m1*m2*x1*z3+c3*cp1*cp3*m1*m2*x1*z3+c3*cp2*cp3*m1*m2*x1*z3+c3*cp1*cp2*cp3*m1*m2*x1*z3+c1*c2*m3*x1*z3+c1*c2*cp1*m3*x1*z3+c1*c3*cp2*m3*x1*z3+c1*c2*cp1*cp2*m3*x1*z3+c1*c3*cp1*cp2*m3*x1*z3+c2*c3*cp1*cp2*m3*x1*z3+c1*c2*cp3*m3*x1*z3+c1*c2*cp1*cp3*m3*x1*z3+c1*cp2*cp3*m3*x1*z3+c1*c2*cp2*cp3*m3*x1*z3+c2*c3*cp2*cp3*m3*x1*z3+c1*cp1*cp2*cp3*m3*x1*z3+c2*m1*m3*x1*z3+c2*cp1*m1*m3*x1*z3+c3*cp2*m1*m3*x1*z3+c3*cp1*cp2*m1*m3*x1*z3+c2*cp3*m1*m3*x1*z3+c2*cp1*cp3*m1*m3*x1*z3+cp2*cp3*m1*m3*x1*z3+c2*cp2*cp3*m1*m3*x1*z3+cp1*cp2*cp3*m1*m3*x1*z3+c2*cp1*cp2*cp3*m1*m3*x1*z3+c3*m2*m3*x1*z3+c3*cp1*m2*m3*x1*z3+c3*cp2*m2*m3*x1*z3+c3*cp3*m2*m3*x1*z3+c3*cp1*cp3*m2*m3*x1*z3+c1*cp2*cp3*m2*m3*x1*z3+c2*cp2*cp3*m2*m3*x1*z3+c3*cp2*cp3*m2*m3*x1*z3+c1*cp1*cp2*cp3*m2*m3*x1*z3+c2*cp1*cp2*cp3*m2*m3*x1*z3+cp2*cp3*m1*m2*m3*x1*z3+cp1*cp2*cp3*m1*m2*m3*x1*z3+c1*x2*z3+cp1*x2*z3+c1*cp1*x2*z3+c2*cp1*x2*z3+c3*cp1*x2*z3+c2*c3*cp1*x2*z3+c1*cp2*x2*z3+c1*c2*cp2*x2*z3+cp1*cp2*x2*z3+c1*cp1*cp2*x2*z3+c2*cp1*cp2*x2*z3+c3*cp1*cp2*x2*z3+c1*c2*c3*cp1*cp2*x2*z3+c1*cp3*x2*z3+c1*c2*cp3*x2*z3+c1*cp1*cp3*x2*z3+c1*c2*cp1*cp3*x2*z3+c1*c3*cp1*cp3*x2*z3+c1*c2*c3*cp1*cp3*x2*z3+c1*cp2*cp3*x2*z3+c1*cp1*cp2*cp3*x2*z3+c1*c2*cp1*cp2*cp3*x2*z3+c1*c3*cp1*cp2*cp3*x2*z3+c1*m1*x2*z3+c2*m1*x2*z3+c3*m1*x2*z3+c1*cp1*m1*x2*z3+c2*cp1*m1*x2*z3+c3*cp1*m1*x2*z3+c1*cp2*m1*x2*z3+c2*cp2*m1*x2*z3+c1*c2*cp2*m1*x2*z3+c1*c3*cp2*m1*x2*z3+c1*cp1*cp2*m1*x2*z3+c1*c2*cp1*cp2*m1*x2*z3+c1*c3*cp1*cp2*m1*x2*z3+c2*c3*cp1*cp2*m1*x2*z3+c1*cp3*m1*x2*z3+c2*cp3*m1*x2*z3+c1*c2*cp3*m1*x2*z3+c1*c3*cp3*m1*x2*z3+c2*cp1*cp3*m1*x2*z3+c3*cp1*cp3*m1*x2*z3+c2*c3*cp1*cp3*m1*x2*z3+c1*cp2*cp3*m1*x2*z3+c2*cp2*cp3*m1*x2*z3+c3*cp2*cp3*m1*x2*z3+c1*c2*cp1*cp2*cp3*m1*x2*z3+c1*c3*cp1*cp2*cp3*m1*x2*z3+c1*m2*x2*z3+c1*cp1*m2*x2*z3+c2*cp1*m2*x2*z3+c1*cp2*m2*x2*z3+c1*c2*cp2*m2*x2*z3+c1*c3*cp2*m2*x2*z3+c1*cp1*cp2*m2*x2*z3+c2*cp1*cp2*m2*x2*z3+c1*c2*cp1*cp2*m2*x2*z3+c1*c3*cp1*cp2*m2*x2*z3+c1*cp3*m2*x2*z3+c1*c2*cp3*m2*x2*z3+c1*c3*cp3*m2*x2*z3+cp1*cp3*m2*x2*z3+c1*cp1*cp3*m2*x2*z3+c1*c3*cp1*cp3*m2*x2*z3+c1*cp2*cp3*m2*x2*z3+cp1*cp2*cp3*m2*x2*z3+c1*cp1*cp2*cp3*m2*x2*z3+c1*c2*cp1*cp2*cp3*m2*x2*z3+c2*cp2*m1*m2*x2*z3+c3*cp2*m1*m2*x2*z3+c2*cp1*cp2*m1*m2*x2*z3+c3*cp1*cp2*m1*m2*x2*z3+cp3*m1*m2*x2*z3+c1*cp3*m1*m2*x2*z3+c2*cp3*m1*m2*x2*z3+c3*cp3*m1*m2*x2*z3+cp1*cp3*m1*m2*x2*z3+c3*cp1*cp3*m1*m2*x2*z3+cp2*cp3*m1*m2*x2*z3+c1*cp2*cp3*m1*m2*x2*z3+cp1*cp2*cp3*m1*m2*x2*z3+c2*cp1*cp2*cp3*m1*m2*x2*z3+c1*m3*x2*z3+c1*c3*m3*x2*z3+c1*cp1*m3*x2*z3+c2*cp1*m3*x2*z3+c1*c3*cp1*m3*x2*z3+c1*cp2*m3*x2*z3+c1*c2*cp2*m3*x2*z3+c1*c3*cp2*m3*x2*z3+c1*cp1*cp2*m3*x2*z3+c2*cp1*cp2*m3*x2*z3+c1*c2*cp1*cp2*m3*x2*z3+c1*c3*cp1*cp2*m3*x2*z3+c1*c2*cp3*m3*x2*z3+c1*cp1*cp3*m3*x2*z3+c2*cp1*cp3*m3*x2*z3+c1*c2*cp1*cp3*m3*x2*z3+c1*cp1*cp2*cp3*m3*x2*z3+c3*m1*m3*x2*z3+c3*cp1*m1*m3*x2*z3+c2*cp2*m1*m3*x2*z3+c3*cp2*m1*m3*x2*z3+c2*cp1*cp2*m1*m3*x2*z3+c3*cp1*cp2*m1*m3*x2*z3+cp3*m1*m3*x2*z3+c2*cp3*m1*m3*x2*z3+c2*cp1*cp3*m1*m3*x2*z3+cp2*cp3*m1*m3*x2*z3+c1*cp3*m2*m3*x2*z3+c1*cp1*cp3*m2*m3*x2*z3+c1*cp2*cp3*m2*m3*x2*z3+c1*cp1*cp2*cp3*m2*m3*x2*z3+cp3*m1*m2*m3*x2*z3+cp1*cp3*m1*m2*m3*x2*z3+cp2*cp3*m1*m2*m3*x2*z3+cp1*cp2*cp3*m1*m2*m3*x2*z3+c1*c2*cp1*x3*z3+c2*c3*cp1*x3*z3+c1*c2*cp2*x3*z3+cp1*cp2*x3*z3+c2*cp1*cp2*x3*z3+c1*c2*cp1*cp2*x3*z3+c3*cp1*cp2*x3*z3+c1*c3*cp1*cp2*x3*z3+c1*c2*cp3*x3*z3+c2*cp1*cp3*x3*z3+c1*c2*cp1*cp3*x3*z3+c2*c3*cp1*cp3*x3*z3+c1*c3*cp2*cp3*x3*z3+c1*c2*cp1*m1*x3*z3+c2*c3*cp1*m1*x3*z3+c1*c2*cp2*m1*x3*z3+c2*c3*cp2*m1*x3*z3+c1*cp1*cp2*m1*x3*z3+c3*cp1*cp2*m1*x3*z3+c1*c3*cp1*cp2*m1*x3*z3+c2*c3*cp1*cp2*m1*x3*z3+c1*c2*cp3*m1*x3*z3+c2*c3*cp3*m1*x3*z3+c2*cp1*cp3*m1*x3*z3+cp2*cp3*m1*x3*z3+c1*cp2*cp3*m1*x3*z3+c2*cp2*cp3*m1*x3*z3+c3*cp2*cp3*m1*x3*z3+c1*c3*cp2*cp3*m1*x3*z3+c2*c3*cp2*cp3*m1*x3*z3+cp1*cp2*cp3*m1*x3*z3+c1*c2*cp1*m2*x3*z3+c2*c3*cp1*m2*x3*z3+c1*c2*cp2*m2*x3*z3+cp1*cp2*m2*x3*z3+c1*cp1*cp2*m2*x3*z3+c1*c2*cp1*cp2*m2*x3*z3+c3*cp1*cp2*m2*x3*z3+c1*c3*cp1*cp2*m2*x3*z3+c1*c2*cp3*m2*x3*z3+c2*cp1*cp3*m2*x3*z3+c1*c2*cp1*cp3*m2*x3*z3+c2*c3*cp1*cp3*m2*x3*z3+c1*cp2*cp3*m2*x3*z3+c1*c3*cp2*cp3*m2*x3*z3+cp1*cp2*cp3*m2*x3*z3+c1*c2*cp1*m1*m2*x3*z3+c2*c3*cp1*m1*m2*x3*z3+c1*c2*cp2*m1*m2*x3*z3+c2*c3*cp2*m1*m2*x3*z3+cp1*cp2*m1*m2*x3*z3+c2*cp1*cp2*m1*m2*x3*z3+c3*cp1*cp2*m1*m2*x3*z3+c1*c2*cp3*m1*m2*x3*z3+c2*c3*cp3*m1*m2*x3*z3+c2*cp1*cp3*m1*m2*x3*z3+cp2*cp3*m1*m2*x3*z3+c3*cp2*cp3*m1*m2*x3*z3+c1*c2*cp1*m3*x3*z3+c2*c3*cp1*m3*x3*z3+c1*c2*cp2*m3*x3*z3+c1*cp1*cp2*m3*x3*z3+c2*cp1*cp2*m3*x3*z3+c1*c2*cp3*m3*x3*z3+c1*cp2*cp3*m3*x3*z3+c2*cp2*m1*m3*x3*z3+cp1*cp2*m1*m3*x3*z3+c2*cp1*cp2*m1*m3*x3*z3+c2*cp3*m1*m3*x3*z3+c2*cp1*cp3*m1*m3*x3*z3+cp1*cp2*cp3*m1*m3*x3*z3+c1*c2*cp1*m2*m3*x3*z3+c2*c3*cp1*m2*m3*x3*z3+c1*c2*cp2*m2*m3*x3*z3+c1*c2*cp3*m2*m3*x3*z3+cp1*cp2*cp3*m2*m3*x3*z3+c2*cp2*m1*m2*m3*x3*z3+c2*cp1*cp2*m1*m2*m3*x3*z3+c2*cp3*m1*m2*m3*x3*z3+c2*cp1*cp3*m1*m2*m3*x3*z3+c1*c2*y1*z3+c2*cp1*y1*z3+c1*c2*cp1*y1*z3+c1*cp2*y1*z3+c1*c2*cp2*y1*z3+c1*c3*cp2*y1*z3+c1*c2*c3*cp2*y1*z3+cp1*cp2*y1*z3+c1*cp1*cp2*y1*z3+c2*cp1*cp2*y1*z3+c1*c2*cp1*cp2*y1*z3+c3*cp1*cp2*y1*z3+c1*c3*cp1*cp2*y1*z3+c2*c3*cp1*cp2*y1*z3+c1*c2*c3*cp1*cp2*y1*z3+c1*c2*c3*cp3*y1*z3+c2*c3*cp1*cp3*y1*z3+c1*c2*c3*cp1*cp3*y1*z3+c1*cp2*cp3*y1*z3+c1*c2*cp2*cp3*y1*z3+c1*c3*cp2*cp3*y1*z3+cp1*cp2*cp3*y1*z3+c1*cp1*cp2*cp3*y1*z3+c2*cp1*cp2*cp3*y1*z3+c1*c2*cp1*cp2*cp3*y1*z3+c3*cp1*cp2*cp3*y1*z3+c1*c3*cp1*cp2*cp3*y1*z3+c2*m1*y1*z3+c2*cp1*m1*y1*z3+cp2*m1*y1*z3+c2*cp2*m1*y1*z3+c3*cp2*m1*y1*z3+c2*c3*cp2*m1*y1*z3+cp1*cp2*m1*y1*z3+c2*cp1*cp2*m1*y1*z3+c3*cp1*cp2*m1*y1*z3+c2*c3*cp1*cp2*m1*y1*z3+c2*c3*cp3*m1*y1*z3+c2*c3*cp1*cp3*m1*y1*z3+cp2*cp3*m1*y1*z3+c2*cp2*cp3*m1*y1*z3+c3*cp2*cp3*m1*y1*z3+cp1*cp2*cp3*m1*y1*z3+c2*cp1*cp2*cp3*m1*y1*z3+c3*cp1*cp2*cp3*m1*y1*z3+c1*c2*m2*y1*z3+c1*c3*m2*y1*z3+c2*c3*m2*y1*z3+c2*cp1*m2*y1*z3+c1*c2*cp1*m2*y1*z3+c3*cp1*m2*y1*z3+c1*c3*cp1*m2*y1*z3+c2*c3*cp1*m2*y1*z3+c2*cp2*m2*y1*z3+c3*cp2*m2*y1*z3+c2*c3*cp2*m2*y1*z3+c2*cp1*cp2*m2*y1*z3+c1*c2*cp1*cp2*m2*y1*z3+c3*cp1*cp2*m2*y1*z3+c1*c3*cp1*cp2*m2*y1*z3+c2*c3*cp1*cp2*m2*y1*z3+c1*c3*cp3*m2*y1*z3+c2*c3*cp3*m2*y1*z3+c3*cp1*cp3*m2*y1*z3+c1*c3*cp1*cp3*m2*y1*z3+c2*c3*cp1*cp3*m2*y1*z3+c3*cp2*cp3*m2*y1*z3+c1*c3*cp2*cp3*m2*y1*z3+c1*c2*cp1*cp2*cp3*m2*y1*z3+c2*m1*m2*y1*z3+c3*m1*m2*y1*z3+c2*cp1*m1*m2*y1*z3+c3*cp1*m1*m2*y1*z3+c3*cp3*m1*m2*y1*z3+c3*cp1*cp3*m1*m2*y1*z3+c3*cp2*cp3*m1*m2*y1*z3+c3*cp1*cp2*cp3*m1*m2*y1*z3+c1*c2*m3*y1*z3+c2*cp1*m3*y1*z3+c1*c2*cp1*m3*y1*z3+c2*cp2*m3*y1*z3+c1*c3*cp2*m3*y1*z3+c2*cp1*cp2*m3*y1*z3+c1*c2*cp1*cp2*m3*y1*z3+c3*cp1*cp2*m3*y1*z3+c1*c3*cp1*cp2*m3*y1*z3+c2*c3*cp1*cp2*m3*y1*z3+c1*c2*cp3*m3*y1*z3+c2*cp1*cp3*m3*y1*z3+c1*c2*cp1*cp3*m3*y1*z3+c1*cp2*cp3*m3*y1*z3+c2*cp2*cp3*m3*y1*z3+c1*c2*cp2*cp3*m3*y1*z3+c2*c3*cp2*cp3*m3*y1*z3+cp1*cp2*cp3*m3*y1*z3+c1*cp1*cp2*cp3*m3*y1*z3+c2*m1*m3*y1*z3+c2*cp1*m1*m3*y1*z3+c3*cp2*m1*m3*y1*z3+c3*cp1*cp2*m1*m3*y1*z3+c2*cp3*m1*m3*y1*z3+c2*cp1*cp3*m1*m3*y1*z3+cp2*cp3*m1*m3*y1*z3+c2*cp2*cp3*m1*m3*y1*z3+cp1*cp2*cp3*m1*m3*y1*z3+c2*cp1*cp2*cp3*m1*m3*y1*z3+c3*m2*m3*y1*z3+c3*cp1*m2*m3*y1*z3+c3*cp2*m2*m3*y1*z3+c3*cp3*m2*m3*y1*z3+c3*cp1*cp3*m2*m3*y1*z3+c1*cp2*cp3*m2*m3*y1*z3+c2*cp2*cp3*m2*m3*y1*z3+c3*cp2*cp3*m2*m3*y1*z3+cp1*cp2*cp3*m2*m3*y1*z3+c1*cp1*cp2*cp3*m2*m3*y1*z3+c2*cp1*cp2*cp3*m2*m3*y1*z3+cp2*cp3*m1*m2*m3*y1*z3+cp1*cp2*cp3*m1*m2*m3*y1*z3+c1*y2*z3+cp1*y2*z3+c1*cp1*y2*z3+c2*cp1*y2*z3+c1*c2*cp1*y2*z3+c1*cp2*y2*z3+c1*cp1*cp2*y2*z3+c1*c2*cp1*cp2*y2*z3+c1*c3*cp1*cp2*y2*z3+c1*c2*c3*cp1*cp2*y2*z3+c1*c2*c3*cp1*cp3*y2*z3+c1*cp1*cp2*cp3*y2*z3+c1*c2*cp1*cp2*cp3*y2*z3+c1*c3*cp1*cp2*cp3*y2*z3+c1*m1*y2*z3+c2*m1*y2*z3+c3*m1*y2*z3+c1*cp1*m1*y2*z3+c2*cp1*m1*y2*z3+c1*c2*cp1*m1*y2*z3+c3*cp1*m1*y2*z3+c2*c3*cp1*m1*y2*z3+c1*cp2*m1*y2*z3+c2*cp2*m1*y2*z3+c1*c3*cp2*m1*y2*z3+c2*c3*cp2*m1*y2*z3+c1*cp1*cp2*m1*y2*z3+c2*cp1*cp2*m1*y2*z3+c1*c2*cp1*cp2*m1*y2*z3+c3*cp1*cp2*m1*y2*z3+c1*c3*cp1*cp2*m1*y2*z3+c2*c3*cp1*cp2*m1*y2*z3+cp3*m1*y2*z3+c3*cp3*m1*y2*z3+c1*c3*cp3*m1*y2*z3+c2*c3*cp3*m1*y2*z3+cp1*cp3*m1*y2*z3+c2*c3*cp1*cp3*m1*y2*z3+cp2*cp3*m1*y2*z3+c1*cp1*cp2*cp3*m1*y2*z3+c2*cp1*cp2*cp3*m1*y2*z3+c1*c2*cp1*cp2*cp3*m1*y2*z3+c3*cp1*cp2*cp3*m1*y2*z3+c1*c3*cp1*cp2*cp3*m1*y2*z3+c1*m2*y2*z3+c1*cp1*m2*y2*z3+c2*cp1*m2*y2*z3+c1*c2*cp1*m2*y2*z3+c2*c3*cp1*m2*y2*z3+c1*cp2*m2*y2*z3+c1*c3*cp2*m2*y2*z3+c1*cp1*cp2*m2*y2*z3+c2*cp1*cp2*m2*y2*z3+c1*c2*cp1*cp2*m2*y2*z3+c1*c3*cp1*cp2*m2*y2*z3+c1*c3*cp3*m2*y2*z3+c1*cp1*cp3*m2*y2*z3+c2*cp1*cp3*m2*y2*z3+c3*cp1*cp3*m2*y2*z3+c1*c3*cp1*cp3*m2*y2*z3+cp1*cp2*cp3*m2*y2*z3+c1*c2*cp1*cp2*cp3*m2*y2*z3+c3*cp2*m1*m2*y2*z3+c3*cp1*cp2*m1*m2*y2*z3+cp3*m1*m2*y2*z3+c1*cp3*m1*m2*y2*z3+c2*cp3*m1*m2*y2*z3+c3*cp3*m1*m2*y2*z3+cp1*cp3*m1*m2*y2*z3+c3*cp1*cp3*m1*m2*y2*z3+cp2*cp3*m1*m2*y2*z3+c1*cp2*cp3*m1*m2*y2*z3+c2*cp2*cp3*m1*m2*y2*z3+c2*cp1*cp2*cp3*m1*m2*y2*z3+c1*m3*y2*z3+c1*c3*m3*y2*z3+c1*cp1*m3*y2*z3+c2*cp1*m3*y2*z3+c1*c2*cp1*m3*y2*z3+c3*cp1*m3*y2*z3+c1*c3*cp1*m3*y2*z3+c2*c3*cp1*m3*y2*z3+c1*cp2*m3*y2*z3+c1*c3*cp2*m3*y2*z3+c1*cp1*cp2*m3*y2*z3+c2*cp1*cp2*m3*y2*z3+c1*c2*cp1*cp2*m3*y2*z3+c1*c3*cp1*cp2*m3*y2*z3+c1*cp3*m3*y2*z3+cp1*cp3*m3*y2*z3+c1*c2*cp1*cp3*m3*y2*z3+c1*cp2*cp3*m3*y2*z3+cp1*cp2*cp3*m3*y2*z3+c1*cp1*cp2*cp3*m3*y2*z3+c3*m1*m3*y2*z3+c3*cp1*m1*m3*y2*z3+c3*cp2*m1*m3*y2*z3+c3*cp1*cp2*m1*m3*y2*z3+cp1*cp3*m1*m3*y2*z3+cp1*cp2*cp3*m1*m3*y2*z3+c1*cp3*m2*m3*y2*z3+cp1*cp3*m2*m3*y2*z3+c1*cp1*cp3*m2*m3*y2*z3+c2*cp1*cp3*m2*m3*y2*z3+c1*cp2*cp3*m2*m3*y2*z3+c1*cp1*cp2*cp3*m2*m3*y2*z3+cp3*m1*m2*m3*y2*z3+cp1*cp3*m1*m2*m3*y2*z3+cp2*cp3*m1*m2*m3*y2*z3+cp1*cp2*cp3*m1*m2*m3*y2*z3+c1*cp1*cp2*m1*y3*z3+c2*cp1*cp2*m1*y3*z3+c1*c3*cp1*cp2*m1*y3*z3+c2*c3*cp1*cp2*m1*y3*z3+c1*c3*cp2*cp3*m1*y3*z3+c2*c3*cp2*cp3*m1*y3*z3+c1*cp1*cp2*cp3*m1*y3*z3+c2*cp1*cp2*cp3*m1*y3*z3+cp1*cp2*m2*y3*z3+c1*cp1*cp2*m2*y3*z3+c1*c2*cp1*cp2*m2*y3*z3+c3*cp1*cp2*m2*y3*z3+c1*c3*cp1*cp2*m2*y3*z3+c1*c2*cp1*cp3*m2*y3*z3+c2*c3*cp1*cp3*m2*y3*z3+c1*c3*cp2*cp3*m2*y3*z3+cp1*cp2*cp3*m2*y3*z3+c1*cp1*cp2*cp3*m2*y3*z3+c1*c2*cp1*m1*m2*y3*z3+c2*c3*cp1*m1*m2*y3*z3+c2*cp2*m1*m2*y3*z3+c1*c2*cp2*m1*m2*y3*z3+c2*c3*cp2*m1*m2*y3*z3+cp1*cp2*m1*m2*y3*z3+c3*cp1*cp2*m1*m2*y3*z3+c1*c2*cp3*m1*m2*y3*z3+c2*c3*cp3*m1*m2*y3*z3+c2*cp1*cp3*m1*m2*y3*z3+c2*cp2*cp3*m1*m2*y3*z3+c3*cp2*cp3*m1*m2*y3*z3+cp1*cp2*cp3*m1*m2*y3*z3+c1*cp1*cp2*m3*y3*z3+c2*cp1*cp2*m3*y3*z3+c1*cp2*cp3*m3*y3*z3+cp1*cp2*cp3*m3*y3*z3+cp1*cp2*m1*m3*y3*z3+cp1*cp2*cp3*m1*m3*y3*z3+c1*c2*cp1*m2*m3*y3*z3+c2*c3*cp1*m2*m3*y3*z3+c1*c2*cp2*m2*m3*y3*z3+c1*c2*cp3*m2*m3*y3*z3+c2*cp1*cp3*m2*m3*y3*z3+cp1*cp2*cp3*m2*m3*y3*z3+c2*cp2*m1*m2*m3*y3*z3+c2*cp1*cp2*m1*m2*m3*y3*z3+c2*cp3*m1*m2*m3*y3*z3+c2*cp1*cp3*m1*m2*m3*y3*z3+c1*c2*cp1*z1*z3+c1*cp1*cp2*z1*z3+c1*c2*cp1*cp2*z1*z3+c1*c3*cp1*cp2*z1*z3+c1*c2*c3*cp1*cp2*z1*z3+c1*c2*c3*cp1*cp3*z1*z3+c1*cp1*cp2*cp3*z1*z3+c1*c2*cp1*cp2*cp3*z1*z3+c1*c3*cp1*cp2*cp3*z1*z3+c2*cp1*m1*z1*z3+cp1*cp2*m1*z1*z3+c2*cp1*cp2*m1*z1*z3+c3*cp1*cp2*m1*z1*z3+c2*c3*cp1*cp2*m1*z1*z3+c2*c3*cp1*cp3*m1*z1*z3+cp1*cp2*cp3*m1*z1*z3+c2*cp1*cp2*cp3*m1*z1*z3+c3*cp1*cp2*cp3*m1*z1*z3+c1*c2*cp1*m2*z1*z3+c1*c3*cp1*m2*z1*z3+c2*c3*cp1*m2*z1*z3+c1*c2*cp2*m2*z1*z3+c1*c3*cp2*m2*z1*z3+c1*c2*cp1*cp2*m2*z1*z3+c1*c3*cp1*cp2*m2*z1*z3+c2*c3*cp1*cp2*m2*z1*z3+c1*c3*cp1*cp3*m2*z1*z3+c2*c3*cp1*cp3*m2*z1*z3+c1*c2*cp2*cp3*m2*z1*z3+c1*c3*cp2*cp3*m2*z1*z3+c2*cp1*cp2*cp3*m2*z1*z3+c1*c2*cp1*cp2*cp3*m2*z1*z3+c2*cp1*m1*m2*z1*z3+c3*cp1*m1*m2*z1*z3+c3*cp1*cp3*m1*m2*z1*z3+c3*cp1*cp2*cp3*m1*m2*z1*z3+c1*c2*cp1*m3*z1*z3+c1*c2*cp2*m3*z1*z3+c2*c3*cp2*m3*z1*z3+c1*c2*cp1*cp2*m3*z1*z3+c1*c3*cp1*cp2*m3*z1*z3+c2*c3*cp1*cp2*m3*z1*z3+c1*c2*cp1*cp3*m3*z1*z3+c1*c2*cp2*cp3*m3*z1*z3+c2*c3*cp2*cp3*m3*z1*z3+c1*cp1*cp2*cp3*m3*z1*z3+c2*cp1*m1*m3*z1*z3+c3*cp1*cp2*m1*m3*z1*z3+c2*cp1*cp3*m1*m3*z1*z3+cp1*cp2*cp3*m1*m3*z1*z3+c2*cp1*cp2*cp3*m1*m3*z1*z3+c3*cp1*m2*m3*z1*z3+c3*cp2*m2*m3*z1*z3+c3*cp1*cp3*m2*m3*z1*z3+c3*cp2*cp3*m2*m3*z1*z3+c1*cp1*cp2*cp3*m2*m3*z1*z3+c2*cp1*cp2*cp3*m2*m3*z1*z3+cp1*cp2*cp3*m1*m2*m3*z1*z3+c1*c2*cp1*z2*z3+c1*cp1*cp2*z2*z3+c1*c2*cp1*cp2*z2*z3+c1*c3*cp1*cp2*z2*z3+c1*c2*c3*cp1*cp2*z2*z3+c1*c2*c3*cp1*cp3*z2*z3+c1*cp1*cp2*cp3*z2*z3+c1*c2*cp1*cp2*cp3*z2*z3+c1*c3*cp1*cp2*cp3*z2*z3+c1*c2*cp1*m1*z2*z3+c1*c3*cp1*m1*z2*z3+c1*c2*cp1*cp2*m1*z2*z3+c1*c3*cp1*cp3*m1*z2*z3+c1*c2*cp1*cp2*cp3*m1*z2*z3+c1*c3*cp1*cp2*cp3*m1*z2*z3+c1*c2*cp1*m2*z2*z3+c1*c3*cp1*m2*z2*z3+c1*c2*cp1*cp2*m2*z2*z3+c1*c3*cp1*cp2*m2*z2*z3+c1*c3*cp1*cp3*m2*z2*z3+c1*c2*cp1*cp2*cp3*m2*z2*z3+c1*cp1*cp2*cp3*m1*m2*z2*z3+c1*c2*cp1*m3*z2*z3+c1*c2*cp1*cp2*m3*z2*z3+c1*c3*cp1*cp2*m3*z2*z3+c1*c2*cp1*cp3*m3*z2*z3+c1*cp1*cp2*cp3*m3*z2*z3+c1*cp1*cp2*cp3*m2*m3*z2*z3;
end;
#####################################################################
#Space Group No. 111 (P-42m)*(maximally-reducible from 123)
#####################################################################
Acpin111:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return cp1;
end;
#####################################################################
Amin111:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Axyin111:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return x1+y1;
end;
#####################################################################
Azin111:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain111:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bxyin111:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return (1-m1)*y1*x2+m1*y2*(x2+y1);
end;
#####################################################################
#Space Group No. 112 (P-42c)*(maximally-reducible from 131)
#####################################################################
Acpin112:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return cp1;
end;
#####################################################################
Amin112:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Axyin112:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return x1+y1;
end;
#####################################################################
Bdeltain112:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bxyin112:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return (1-m1)*y1*x2+m1*y2*(x2+y1);
end;
#####################################################################
Bczin112:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*cp2+c2*m1+cp2*z1;
end;
#####################################################################
Bzxyin112:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return (1+m1)*m2*x1+m1*m2*y1+c2*(x1+y1)+x1*z2+y1*z2;
end;
#####################################################################
#Space Group No. 113 (P-4Subscript[2,1]m)*(maximally-reducible from 127)
#####################################################################
Acpin113:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return cp1;
end;
#####################################################################
Amin113:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Azin113:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain113:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bcxyin113:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c2*cp1+c1*cp2+c2*cp1*cp2+c2*m1+c1*cp2*m1+c2*x1+cp2*x1+cp2*m1*x1+c2*y1+cp2*m1*y1;
end;
#####################################################################
Cin113:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c2*c3*cp1+c1*c2*c3*cp2+c1*c3*cp1*cp2+c1*c2*c3*cp1*cp2+c1*c2*cp1*cp3+c1*c3*cp2*cp3+c3*cp1*cp2*cp3+c1*c3*cp1*cp2*cp3+c2*c3*cp1*cp2*cp3+c1*c2*c3*cp1*cp2*cp3+c1*c2*c3*m1+c1*c3*cp2*m1+c1*c2*c3*cp2*m1+c3*cp1*cp2*m1+c1*c3*cp1*cp2*m1+c1*c2*cp3*m1+c1*c2*cp1*cp3*m1+c2*c3*cp1*cp3*m1+c1*cp2*cp3*m1+c1*c3*cp2*cp3*m1+c1*c2*c3*cp2*cp3*m1+cp1*cp2*cp3*m1+c2*c3*cp1*cp2*cp3*m1+c1*c2*c3*m2+c1*c3*cp1*m2+c1*c3*cp1*cp2*m2+c2*c3*cp1*cp2*m2+c1*c2*cp3*m2+c1*cp1*cp3*m2+c1*c3*cp1*cp3*m2+c2*c3*cp1*cp3*m2+c1*c2*c3*cp1*cp3*m2+c1*c2*cp2*cp3*m2+cp1*cp2*cp3*m2+c1*cp1*cp2*cp3*m2+c2*cp1*cp2*cp3*m2+c2*c3*cp1*cp2*cp3*m2+c2*c3*m1*m2+c1*c3*cp2*m1*m2+c3*cp1*cp2*m1*m2+c1*c3*cp1*cp2*m1*m2+c1*cp3*m1*m2+c2*cp3*m1*m2+c1*c2*cp3*m1*m2+c1*c3*cp3*m1*m2+c1*c2*c3*cp3*m1*m2+c1*c2*cp1*cp3*m1*m2+c1*c3*cp1*cp3*m1*m2+cp2*cp3*m1*m2+c1*cp2*cp3*m1*m2+c3*cp2*cp3*m1*m2+c1*c3*cp2*cp3*m1*m2+c2*c3*cp2*cp3*m1*m2+c1*cp1*cp2*cp3*m1*m2+c2*cp1*cp2*cp3*m1*m2+c3*cp1*cp2*cp3*m1*m2+c2*c3*cp1*cp2*cp3*m1*m2+c1*c2*cp1*m3+c1*c2*c3*cp1*m3+c1*cp2*m3+c1*c2*c3*cp2*m3+c3*cp1*cp2*m3+c1*c3*cp1*cp2*m3+c2*c3*cp1*cp2*m3+c1*c2*cp1*cp3*m3+c2*cp1*cp2*cp3*m3+c1*c3*cp1*cp2*cp3*m3+c1*c2*m1*m3+c1*c2*c3*m1*m3+c2*cp1*m1*m3+c1*c3*cp2*m1*m3+cp1*cp2*m1*m3+c2*cp1*cp2*m1*m3+c1*c3*cp1*cp2*m1*m3+c2*c3*cp1*cp2*m1*m3+c1*c2*cp3*m1*m3+c2*cp1*cp3*m1*m3+c1*c3*cp2*cp3*m1*m3+c2*cp1*cp2*cp3*m1*m3+c3*cp1*cp2*cp3*m1*m3+c1*c2*c3*m2*m3+c1*cp1*m2*m3+c2*cp1*m2*m3+c1*cp2*m2*m3+c1*c2*cp2*m2*m3+c1*c3*cp2*m2*m3+cp1*cp2*m2*m3+c1*cp1*cp2*m2*m3+c2*cp1*cp2*m2*m3+c1*c2*cp1*cp2*m2*m3+c1*c3*cp1*cp2*m2*m3+c1*c2*cp3*m2*m3+c1*cp1*cp3*m2*m3+c2*cp1*cp3*m2*m3+c1*c2*cp1*cp3*m2*m3+c1*cp2*cp3*m2*m3+c1*c3*cp2*cp3*m2*m3+cp1*cp2*cp3*m2*m3+c2*cp1*cp2*cp3*m2*m3+c1*c2*m1*m2*m3+c2*c3*m1*m2*m3+c1*cp1*m1*m2*m3+c1*c2*cp1*m1*m2*m3+c2*cp2*m1*m2*m3+c1*c2*cp2*m1*m2*m3+c3*cp2*m1*m2*m3+c1*c3*cp2*m1*m2*m3+cp1*cp2*m1*m2*m3+c3*cp1*cp2*m1*m2*m3+c1*cp3*m1*m2*m3+c2*cp3*m1*m2*m3+c1*c2*cp3*m1*m2*m3+c1*cp1*cp3*m1*m2*m3+c1*cp2*cp3*m1*m2*m3+c2*cp2*cp3*m1*m2*m3+c3*cp2*cp3*m1*m2*m3+cp1*cp2*cp3*m1*m2*m3+c2*cp1*cp2*cp3*m1*m2*m3+c2*c3*cp1*x1+c1*c2*c3*cp1*x1+c3*cp2*x1+c1*c3*cp2*x1+c2*c3*cp2*x1+c1*c2*c3*cp2*x1+c3*cp1*cp2*x1+c1*c3*cp1*cp2*x1+c2*c3*cp1*cp2*x1+c2*cp3*x1+c2*cp1*cp3*x1+c1*c2*cp1*cp3*x1+c1*c2*cp2*cp3*x1+c1*cp1*cp2*cp3*x1+c3*cp1*cp2*cp3*x1+c2*c3*m1*x1+c1*c2*c3*m1*x1+c2*c3*cp1*m1*x1+c3*cp2*m1*x1+c3*cp1*cp2*m1*x1+c2*cp3*m1*x1+c1*c2*cp3*m1*x1+c2*cp1*cp3*m1*x1+c1*cp2*cp3*m1*x1+c2*cp2*cp3*m1*x1+c1*c2*cp2*cp3*m1*x1+c1*c3*cp2*cp3*m1*x1+c2*c3*cp2*cp3*m1*x1+cp1*cp2*cp3*m1*x1+c1*cp1*cp2*cp3*m1*x1+c1*c2*c3*m2*x1+c2*c3*cp1*m2*x1+c1*c3*cp2*m2*x1+c1*cp3*m2*x1+c1*c3*cp3*m2*x1+c2*c3*cp3*m2*x1+c1*cp1*cp3*m2*x1+c2*cp1*cp3*m2*x1+c1*c2*cp1*cp3*m2*x1+c1*c3*cp1*cp3*m2*x1+c1*cp2*cp3*m2*x1+c2*cp2*cp3*m2*x1+c1*c2*cp2*cp3*m2*x1+c1*c3*cp2*cp3*m2*x1+c2*c3*cp2*cp3*m2*x1+cp1*cp2*cp3*m2*x1+c1*cp1*cp2*cp3*m2*x1+c2*c3*m1*m2*x1+c1*c3*cp2*m1*m2*x1+c3*cp1*cp2*m1*m2*x1+c2*cp3*m1*m2*x1+c2*c3*cp3*m1*m2*x1+c2*cp2*cp3*m1*m2*x1+cp1*cp2*cp3*m1*m2*x1+c1*c2*m3*x1+c2*c3*m3*x1+cp2*m3*x1+c3*cp2*m3*x1+c1*cp1*cp2*m3*x1+c2*cp1*cp2*m3*x1+c3*cp1*cp2*m3*x1+c1*cp2*cp3*m3*x1+c2*cp2*cp3*m3*x1+c2*cp1*cp2*cp3*m3*x1+c3*cp1*cp2*cp3*m3*x1+c1*c2*m1*m3*x1+c2*c3*m1*m3*x1+cp2*m1*m3*x1+c3*cp2*m1*m3*x1+c1*cp1*cp2*m1*m3*x1+c3*cp1*cp2*m1*m3*x1+c2*cp3*m1*m3*x1+c1*cp2*cp3*m1*m3*x1+c3*cp2*cp3*m1*m3*x1+c1*c2*m2*m3*x1+c2*c3*m2*m3*x1+cp1*m2*m3*x1+cp2*m2*m3*x1+c1*cp2*m2*m3*x1+c3*cp2*m2*m3*x1+c2*cp1*cp2*m2*m3*x1+c3*cp1*cp2*m2*m3*x1+c1*cp3*m2*m3*x1+c1*cp1*cp3*m2*m3*x1+c1*cp2*cp3*m2*m3*x1+c2*cp2*cp3*m2*m3*x1+c3*cp2*cp3*m2*m3*x1+cp1*cp2*cp3*m2*m3*x1+cp1*m1*m2*m3*x1+c2*cp1*m1*m2*m3*x1+cp2*m1*m2*m3*x1+c1*cp2*m1*m2*m3*x1+c2*cp2*m1*m2*m3*x1+c3*cp2*m1*m2*m3*x1+c2*cp3*m1*m2*m3*x1+c3*cp1*x2+c1*c3*cp1*x2+c2*c3*cp1*x2+c1*c2*c3*cp1*x2+c1*c2*c3*cp2*x2+c1*c3*cp1*cp2*x2+c2*c3*cp1*cp2*x2+c1*cp3*x2+c1*c2*cp3*x2+c1*c3*cp3*x2+cp1*cp3*x2+c2*cp1*cp3*x2+c1*c3*cp1*cp3*x2+c1*c2*cp2*cp3*x2+cp1*cp2*cp3*x2+c3*cp1*cp2*cp3*x2+c3*m1*x2+c2*c3*m1*x2+c1*c2*c3*m1*x2+c3*cp1*m1*x2+c2*c3*cp1*m1*x2+c3*cp2*m1*x2+c3*cp1*cp2*m1*x2+c2*c3*cp1*cp2*m1*x2+c1*cp3*m1*x2+c3*cp3*m1*x2+c1*c3*cp3*m1*x2+cp1*cp3*m1*x2+c2*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c2*cp1*cp2*cp3*m1*x2+c1*c2*c3*m2*x2+c3*cp1*m2*x2+c1*c3*cp1*m2*x2+c2*c3*cp1*m2*x2+c1*c3*cp2*m2*x2+c3*cp1*cp2*m2*x2+c1*cp3*m2*x2+c1*c3*cp3*m2*x2+cp1*cp3*m2*x2+c2*cp1*cp3*m2*x2+c1*c2*cp1*cp3*m2*x2+c1*c3*cp1*cp3*m2*x2+c1*c2*cp2*cp3*m2*x2+c1*c3*cp2*cp3*m2*x2+c1*cp1*cp2*cp3*m2*x2+c3*m1*m2*x2+c3*cp1*m1*m2*x2+c2*c3*cp1*m1*m2*x2+c3*cp1*cp2*m1*m2*x2+c1*cp3*m1*m2*x2+c2*cp3*m1*m2*x2+c1*c2*cp3*m1*m2*x2+c3*cp3*m1*m2*x2+c1*c3*cp3*m1*m2*x2+cp1*cp3*m1*m2*x2+c2*cp1*cp3*m1*m2*x2+c1*cp2*cp3*m1*m2*x2+cp1*cp2*cp3*m1*m2*x2+c2*cp1*cp2*cp3*m1*m2*x2+c3*cp1*cp2*cp3*m1*m2*x2+c1*c2*m3*x2+c1*cp1*m3*x2+c2*cp1*m3*x2+c3*cp1*m3*x2+c1*cp2*m3*x2+cp1*cp2*m3*x2+c2*cp1*cp2*m3*x2+c1*cp3*m3*x2+cp1*cp3*m3*x2+c1*cp1*cp3*m3*x2+c1*cp2*cp3*m3*x2+cp1*cp2*cp3*m3*x2+c2*cp1*cp2*cp3*m3*x2+c3*cp1*cp2*cp3*m3*x2+m1*m3*x2+cp1*m1*m3*x2+c2*cp1*m1*m3*x2+c1*cp1*cp2*m1*m3*x2+cp3*m1*m3*x2+c1*cp3*m1*m3*x2+cp2*cp3*m1*m3*x2+c1*cp2*cp3*m1*m3*x2+cp1*cp2*cp3*m1*m3*x2+c1*c2*m2*m3*x2+c1*cp1*m2*m3*x2+c3*cp1*m2*m3*x2+c1*cp2*m2*m3*x2+c2*cp1*cp2*m2*m3*x2+c3*cp1*cp2*m2*m3*x2+c1*cp3*m2*m3*x2+cp1*cp3*m2*m3*x2+c1*cp1*cp3*m2*m3*x2+c1*cp2*cp3*m2*m3*x2+m1*m2*m3*x2+c1*cp1*m1*m2*m3*x2+c2*cp1*m1*m2*m3*x2+cp2*m1*m2*m3*x2+c1*cp2*m1*m2*m3*x2+cp1*cp2*m1*m2*m3*x2+cp3*m1*m2*m3*x2+c1*cp3*m1*m2*m3*x2+cp1*cp2*cp3*m1*m2*m3*x2+c2*c3*m1*x1*x2+cp3*m1*x1*x2+c3*cp3*m1*x1*x2+cp3*m1*m2*x1*x2+c2*cp3*m1*m2*x1*x2+c3*cp3*m1*m2*x1*x2+cp2*cp3*m1*m2*x1*x2+cp1*cp2*m1*m3*x1*x2+cp3*m1*m3*x1*x2+cp2*cp3*m1*m3*x1*x2+cp1*m1*m2*m3*x1*x2+cp2*m1*m2*m3*x1*x2+cp3*m1*m2*m3*x1*x2+c1*c2*x3+c2*cp1*x3+c1*c2*cp1*x3+c1*c2*c3*cp1*x3+c1*c2*cp2*x3+c1*c3*cp2*x3+c1*c2*c3*cp2*x3+cp1*cp2*x3+c1*c3*cp1*cp2*x3+c2*c3*cp1*cp2*x3+c1*c2*cp3*x3+c1*c2*cp2*cp3*x3+c1*c3*cp2*cp3*x3+c2*c3*m1*x3+c1*c2*c3*m1*x3+c1*c2*cp1*m1*x3+c2*c3*cp1*m1*x3+c3*cp2*m1*x3+cp1*cp2*m1*x3+c2*cp1*cp2*m1*x3+c2*c3*cp1*cp2*m1*x3+c2*cp1*cp3*m1*x3+cp2*cp3*m1*x3+c2*cp1*cp2*cp3*m1*x3+c3*cp1*cp2*cp3*m1*x3+c1*c2*m2*x3+c1*c2*c3*m2*x3+c2*cp1*m2*x3+c1*c2*cp1*m2*x3+c1*c3*cp1*m2*x3+c2*c3*cp1*m2*x3+c1*c2*cp2*m2*x3+cp1*cp2*m2*x3+c3*cp1*cp2*m2*x3+c2*c3*cp1*cp2*m2*x3+c1*cp1*cp3*m2*x3+c2*cp1*cp3*m2*x3+c1*cp1*cp2*cp3*m2*x3+c2*cp1*cp2*cp3*m2*x3+c3*cp1*cp2*cp3*m2*x3+c1*c2*m1*m2*x3+c3*m1*m2*x3+c2*c3*m1*m2*x3+c2*cp1*m1*m2*x3+c3*cp1*m1*m2*x3+c1*cp2*m1*m2*x3+c3*cp2*m1*m2*x3+c1*c3*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+c1*cp1*cp2*m1*m2*x3+c2*cp1*cp2*m1*m2*x3+c3*cp1*cp2*m1*m2*x3+cp3*m1*m2*x3+cp1*cp3*m1*m2*x3+cp2*cp3*m1*m2*x3+cp1*cp2*cp3*m1*m2*x3+c1*c2*m3*x3+cp1*cp2*m3*x3+c2*cp1*cp2*m3*x3+c2*cp1*cp2*cp3*m3*x3+c3*cp1*cp2*cp3*m3*x3+c2*cp1*m1*m3*x3+cp1*cp2*m1*m3*x3+c1*cp1*cp2*m1*m3*x3+cp2*cp3*m1*m3*x3+c1*cp2*cp3*m1*m3*x3+cp1*m2*m3*x3+c1*cp1*m2*m3*x3+c2*cp1*m2*m3*x3+c3*cp1*m2*m3*x3+c1*cp2*m2*m3*x3+cp1*cp2*m2*m3*x3+c1*cp1*cp2*m2*m3*x3+c2*cp1*cp2*m2*m3*x3+c3*cp1*cp2*m2*m3*x3+cp1*cp3*m2*m3*x3+c1*cp2*cp3*m2*m3*x3+m1*m2*m3*x3+cp1*m1*m2*m3*x3+cp2*cp3*m1*m2*m3*x3+c1*c2*m1*x1*x3+c2*c3*m1*x1*x3+c2*cp1*m1*x1*x3+c1*c2*m2*x1*x3+c2*c3*m2*x1*x3+c2*cp1*m2*x1*x3+c1*cp2*m2*x1*x3+c3*cp2*m2*x1*x3+cp1*cp2*m2*x1*x3+c1*cp2*m1*m2*x1*x3+c3*cp2*m1*m2*x1*x3+cp1*cp2*m1*m2*x1*x3+cp1*cp2*m1*m3*x1*x3+cp2*cp3*m1*m3*x1*x3+cp1*cp2*m2*m3*x1*x3+cp2*cp3*m2*m3*x1*x3+c1*c2*m2*x2*x3+c1*cp1*m2*x2*x3+c2*cp1*m2*x2*x3+c1*cp2*m2*x2*x3+cp1*cp2*m2*x2*x3+m1*m2*x2*x3+cp1*m1*m2*x2*x3+c2*cp1*m1*m2*x2*x3+cp1*cp2*m1*m2*x2*x3+cp1*m2*m3*x2*x3+cp1*cp2*m2*m3*x2*x3+c2*c3*y1+c1*c2*c3*cp1*y1+c2*c3*cp2*y1+c1*c2*c3*cp2*y1+c1*c3*cp1*cp2*y1+c1*c2*cp1*cp3*y1+c1*cp2*cp3*y1+c2*cp2*cp3*y1+c1*c3*cp2*cp3*y1+c2*c3*cp2*cp3*y1+c1*c2*c3*m1*y1+c3*cp1*cp2*m1*y1+c1*c2*cp3*m1*y1+c1*cp2*cp3*m1*y1+c2*cp2*cp3*m1*y1+c1*c2*cp2*cp3*m1*y1+c1*c3*cp2*cp3*m1*y1+c2*c3*cp2*cp3*m1*y1+cp1*cp2*cp3*m1*y1+c1*cp1*cp2*cp3*m1*y1+c2*cp1*cp2*cp3*m1*y1+c3*cp1*cp2*cp3*m1*y1+c2*c3*m2*y1+c1*c2*c3*m2*y1+c3*cp1*cp2*m2*y1+c2*cp3*m2*y1+c1*c2*cp3*m2*y1+c1*cp1*cp3*m2*y1+c1*c2*cp1*cp3*m2*y1+c1*c3*cp1*cp3*m2*y1+c1*cp2*cp3*m2*y1+c1*c2*cp2*cp3*m2*y1+c1*c3*cp2*cp3*m2*y1+c2*c3*cp2*cp3*m2*y1+c1*cp1*cp2*cp3*m2*y1+c2*cp1*cp2*cp3*m2*y1+c3*cp1*cp2*cp3*m2*y1+c2*c3*m1*m2*y1+c1*c3*cp2*m1*m2*y1+cp3*m1*m2*y1+c3*cp3*m1*m2*y1+c2*c3*cp3*m1*m2*y1+c2*cp2*cp3*m1*m2*y1+cp1*cp2*cp3*m1*m2*y1+c1*cp2*m3*y1+c1*cp1*cp2*m3*y1+c2*cp1*cp2*m3*y1+c2*cp3*m3*y1+c1*cp2*cp3*m3*y1+c2*cp2*cp3*m3*y1+c3*cp2*cp3*m3*y1+c2*cp1*cp2*cp3*m3*y1+c3*cp1*cp2*cp3*m3*y1+c1*c2*m1*m3*y1+c2*c3*m1*m3*y1+c2*cp1*m1*m3*y1+c3*cp2*m1*m3*y1+c1*cp1*cp2*m1*m3*y1+c3*cp1*cp2*m1*m3*y1+c2*cp3*m1*m3*y1+cp2*cp3*m1*m3*y1+c1*cp2*cp3*m1*m3*y1+c3*cp2*cp3*m1*m3*y1+cp1*cp2*cp3*m1*m3*y1+c1*c2*m2*m3*y1+c2*c3*m2*m3*y1+c1*cp1*m2*m3*y1+c1*cp2*m2*m3*y1+c2*cp2*m2*m3*y1+c2*cp1*cp2*m2*m3*y1+c3*cp1*cp2*m2*m3*y1+c2*cp3*m2*m3*y1+c1*cp1*cp3*m2*m3*y1+c1*cp2*cp3*m2*m3*y1+c2*cp2*cp3*m2*m3*y1+c3*cp2*cp3*m2*m3*y1+c2*cp1*m1*m2*m3*y1+c1*cp2*m1*m2*m3*y1+c2*cp2*m1*m2*m3*y1+c3*cp2*m1*m2*m3*y1+cp1*cp2*m1*m2*m3*y1+cp3*m1*m2*m3*y1+c2*cp3*m1*m2*m3*y1+c2*c3*x1*y1+c3*cp2*x1*y1+c2*cp3*x1*y1+cp3*m2*x1*y1+c2*cp3*m2*x1*y1+c3*cp3*m2*x1*y1+cp2*m3*x1*y1+cp1*cp2*m3*x1*y1+cp2*cp3*m3*x1*y1+cp1*m2*m3*x1*y1+cp2*m2*m3*x1*y1+cp3*m2*m3*x1*y1+c2*c3*x2*y1+cp3*x2*y1+c3*cp3*x2*y1+c2*c3*m1*x2*y1+cp3*m1*x2*y1+c3*cp3*m1*x2*y1+cp3*m2*x2*y1+c2*cp3*m2*x2*y1+c3*cp3*m2*x2*y1+cp2*cp3*m2*x2*y1+cp3*m1*m2*x2*y1+c2*cp3*m1*m2*x2*y1+c3*cp3*m1*m2*x2*y1+cp2*cp3*m1*m2*x2*y1+cp1*cp2*m3*x2*y1+cp3*m3*x2*y1+cp2*cp3*m3*x2*y1+cp1*cp2*m1*m3*x2*y1+cp3*m1*m3*x2*y1+cp2*cp3*m1*m3*x2*y1+cp1*m2*m3*x2*y1+cp2*m2*m3*x2*y1+cp3*m2*m3*x2*y1+cp1*m1*m2*m3*x2*y1+cp2*m1*m2*m3*x2*y1+cp3*m1*m2*m3*x2*y1+c1*c2*x3*y1+c2*c3*x3*y1+c1*c2*m1*x3*y1+c2*c3*m1*x3*y1+c1*c2*m2*x3*y1+c2*c3*m2*x3*y1+c1*cp2*m1*m2*x3*y1+c3*cp2*m1*m2*x3*y1+cp1*cp2*m3*x3*y1+cp2*cp3*m3*x3*y1+cp1*cp2*m1*m3*x3*y1+cp2*cp3*m1*m3*x3*y1+cp1*cp2*m2*m3*x3*y1+cp2*cp3*m2*m3*x3*y1+c1*c2*c3*cp1*y2+c1*c2*c3*cp2*y2+c1*c3*cp1*cp2*y2+c1*c2*cp1*cp3*y2+c1*cp2*cp3*y2+c1*c3*cp2*cp3*y2+c1*c2*c3*m1*y2+c1*c3*cp2*m1*y2+c2*c3*cp1*cp2*m1*y2+c1*c2*cp3*m1*y2+cp1*cp2*cp3*m1*y2+c3*cp1*cp2*cp3*m1*y2+c1*c2*c3*m2*y2+c3*cp1*cp2*m2*y2+c1*c2*cp3*m2*y2+c1*cp1*cp3*m2*y2+c1*c2*cp1*cp3*m2*y2+c1*c3*cp1*cp3*m2*y2+c1*cp2*cp3*m2*y2+c1*c2*cp2*cp3*m2*y2+c1*c3*cp2*cp3*m2*y2+c1*cp1*cp2*cp3*m2*y2+c2*cp1*cp2*cp3*m2*y2+c3*cp1*cp2*cp3*m2*y2+c2*c3*cp1*m1*m2*y2+c1*cp3*m1*m2*y2+c1*c2*cp3*m1*m2*y2+c1*c3*cp3*m1*m2*y2+c2*cp1*cp3*m1*m2*y2+c2*cp1*cp2*cp3*m1*m2*y2+c3*cp1*cp2*cp3*m1*m2*y2+c1*cp1*m3*y2+c1*cp2*m3*y2+c1*cp1*cp2*m3*y2+c2*cp1*cp2*m3*y2+c1*cp2*cp3*m3*y2+c2*cp1*cp2*cp3*m3*y2+c3*cp1*cp2*cp3*m3*y2+c1*cp1*m1*m3*y2+c1*cp2*m1*m3*y2+c1*cp1*cp2*m1*m3*y2+c1*cp2*cp3*m1*m3*y2+c1*c2*m2*m3*y2+c1*cp1*m2*m3*y2+c1*cp2*m2*m3*y2+c2*cp1*cp2*m2*m3*y2+c3*cp1*cp2*m2*m3*y2+c1*cp1*cp3*m2*m3*y2+c1*cp2*cp3*m2*m3*y2+c1*cp1*m1*m2*m3*y2+c2*cp1*m1*m2*m3*y2+c1*cp2*m1*m2*m3*y2+c1*cp3*m1*m2*m3*y2+cp1*cp2*cp3*m1*m2*m3*y2+c2*c3*x1*y2+c3*cp2*x1*y2+c2*cp3*x1*y2+c2*c3*m1*x1*y2+c3*cp2*m1*x1*y2+c2*cp3*m1*x1*y2+cp3*m2*x1*y2+c2*cp3*m2*x1*y2+c3*cp3*m2*x1*y2+cp3*m1*m2*x1*y2+c2*cp3*m1*m2*x1*y2+c3*cp3*m1*m2*x1*y2+cp1*m3*x1*y2+cp2*m3*x1*y2+cp1*cp2*m3*x1*y2+cp2*cp3*m3*x1*y2+cp1*m1*m3*x1*y2+cp2*m1*m3*x1*y2+cp1*cp2*m1*m3*x1*y2+cp2*cp3*m1*m3*x1*y2+cp1*m2*m3*x1*y2+cp2*m2*m3*x1*y2+cp3*m2*m3*x1*y2+cp1*m1*m2*m3*x1*y2+cp2*m1*m2*m3*x1*y2+cp3*m1*m2*m3*x1*y2+cp1*cp2*m3*x2*y2+cp1*m2*m3*x2*y2+c1*c2*x3*y2+c2*cp1*m1*x3*y2+c1*c2*m2*x3*y2+c2*cp1*m1*m2*x3*y2+cp1*cp2*m3*x3*y2+cp1*cp2*m2*m3*x3*y2+c2*c3*m1*y1*y2+c3*cp2*m1*y1*y2+c2*cp3*m1*y1*y2+cp3*m1*m2*y1*y2+c2*cp3*m1*m2*y1*y2+c3*cp3*m1*m2*y1*y2+cp1*m1*m3*y1*y2+cp2*m1*m3*y1*y2+cp1*cp2*m1*m3*y1*y2+cp2*cp3*m1*m3*y1*y2+cp1*m1*m2*m3*y1*y2+cp2*m1*m2*m3*y1*y2+cp3*m1*m2*m3*y1*y2+c1*c2*c3*cp1*y3+c1*c2*c3*cp2*y3+c1*cp1*cp2*y3+c1*c3*cp1*cp2*y3+c1*c2*cp1*cp3*y3+c1*cp2*cp3*y3+c1*c3*cp2*cp3*y3+c1*c2*m1*y3+c1*c2*c3*m1*y3+c2*cp1*m1*y3+c1*c2*cp1*m1*y3+c1*cp2*m1*y3+c1*c3*cp2*m1*y3+c2*c3*cp1*cp2*m1*y3+c1*c2*cp3*m1*y3+cp1*cp2*cp3*m1*y3+c3*cp1*cp2*cp3*m1*y3+c1*c2*c3*m2*y3+c2*cp1*m2*y3+c1*c2*cp1*m2*y3+c1*c2*cp2*m2*y3+c1*c3*cp2*m2*y3+c1*cp1*cp2*m2*y3+c2*cp1*cp2*m2*y3+c3*cp1*cp2*m2*y3+c2*c3*cp1*cp2*m2*y3+c1*c2*cp3*m2*y3+c1*cp2*cp3*m2*y3+cp1*cp2*cp3*m2*y3+c1*cp1*cp2*cp3*m2*y3+c3*cp1*cp2*cp3*m2*y3+c1*c2*m1*m2*y3+c2*c3*m1*m2*y3+c1*cp2*m1*m2*y3+c3*cp2*m1*m2*y3+c1*c3*cp2*m1*m2*y3+c1*cp1*cp2*m1*m2*y3+c2*cp1*cp2*m1*m2*y3+c2*cp3*m1*m2*y3+cp2*cp3*m1*m2*y3+c1*cp2*cp3*m1*m2*y3+c1*cp1*cp2*m3*y3+c1*cp2*cp3*m3*y3+c2*cp1*cp2*cp3*m3*y3+c3*cp1*cp2*cp3*m3*y3+c1*cp1*cp2*m1*m3*y3+c1*cp2*cp3*m1*m3*y3+cp1*cp2*m2*m3*y3+c1*cp1*cp2*m2*m3*y3+c2*cp1*cp2*m2*m3*y3+c3*cp1*cp2*m2*m3*y3+c1*cp2*cp3*m2*m3*y3+cp1*cp2*cp3*m2*m3*y3+cp1*cp2*m1*m2*m3*y3+cp2*cp3*m1*m2*m3*y3+c1*c2*x1*y3+c2*c3*x1*y3+c2*cp1*x1*y3+c1*cp2*x1*y3+c3*cp2*x1*y3+c2*cp3*x1*y3+c1*c2*m1*x1*y3+c2*c3*m1*x1*y3+c2*cp1*m1*x1*y3+c1*cp2*m1*x1*y3+c3*cp2*m1*x1*y3+c2*cp3*m1*x1*y3+c1*c2*m2*x1*y3+c2*c3*m2*x1*y3+c2*cp1*m2*x1*y3+c1*cp2*m2*x1*y3+c3*cp2*m2*x1*y3+c2*cp3*m2*x1*y3+c1*cp2*m1*m2*x1*y3+c3*cp2*m1*m2*x1*y3+cp1*cp2*m1*m2*x1*y3+cp2*cp3*m1*m2*x1*y3+cp1*cp2*m3*x1*y3+cp2*cp3*m3*x1*y3+cp1*cp2*m1*m3*x1*y3+cp2*cp3*m1*m3*x1*y3+cp1*cp2*m2*m3*x1*y3+cp2*cp3*m2*m3*x1*y3+c1*c2*x2*y3+cp1*x2*y3+c1*cp1*x2*y3+c2*cp1*x2*y3+c1*cp2*x2*y3+m1*x2*y3+cp1*m1*x2*y3+c2*cp1*m1*x2*y3+cp1*cp2*m1*x2*y3+c1*c2*m2*x2*y3+cp1*m2*x2*y3+c1*cp1*m2*x2*y3+c2*cp1*m2*x2*y3+c1*cp2*m2*x2*y3+m1*m2*x2*y3+cp1*m1*m2*x2*y3+c2*cp1*m1*m2*x2*y3+cp1*cp2*m1*m2*x2*y3+cp1*m3*x2*y3+cp1*cp2*m3*x2*y3+cp1*m2*m3*x2*y3+cp1*cp2*m2*m3*x2*y3+c1*c2*x3*y3+c2*cp1*m1*x3*y3+c1*cp1*m2*x3*y3+c2*cp1*m2*x3*y3+c1*cp2*m2*x3*y3+cp1*cp2*m2*x3*y3+m1*m2*x3*y3+cp1*m1*m2*x3*y3+cp1*cp2*m1*m2*x3*y3+cp1*cp2*m3*x3*y3+cp1*m2*m3*x3*y3+c1*c2*m1*y1*y3+c2*c3*m1*y1*y3+c1*cp2*m1*y1*y3+c3*cp2*m1*y1*y3+cp1*cp2*m1*y1*y3+c2*cp3*m1*y1*y3+c1*c2*m2*y1*y3+c2*c3*m2*y1*y3+cp1*cp2*m2*y1*y3+c2*cp3*m2*y1*y3+cp2*cp3*m2*y1*y3+c1*cp2*m1*m2*y1*y3+c3*cp2*m1*m2*y1*y3+cp2*cp3*m1*m2*y1*y3+cp1*cp2*m1*m3*y1*y3+cp2*cp3*m1*m3*y1*y3+cp1*cp2*m2*m3*y1*y3+cp2*cp3*m2*m3*y1*y3+c1*c2*m2*y2*y3+cp1*cp2*m2*y2*y3+c2*cp1*m1*m2*y2*y3+cp1*cp2*m2*m3*y2*y3;
end;
#####################################################################
#Space Group No. 114 (P-4Subscript[2,1]c)*(maximally-reducible from 128)
#####################################################################
Acpin114:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return cp1;
end;
#####################################################################
Amin114:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Bdeltain114:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bcxyin114:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c2*cp1+c1*cp2+c2*cp1*cp2+c2*m1+c1*cp2*m1+c2*x1+cp2*x1+cp2*m1*x1+c2*y1+cp2*m1*y1;
end;
#####################################################################
Bcxyzin114:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c2*cp1+c1*cp2+c2*cp1*cp2+c2*m1+c2*cp2*m1+c2*x1+cp2*x1+cp2*m1*x1+c2*y1+cp2*m1*y1+cp2*z1;
end;
#####################################################################
C1in114:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c3*cp1*cp2+c1*c2*cp1*cp3+c1*cp2*cp3+c1*c3*cp2*m1+c3*cp1*cp2*m1+c1*c2*cp3*m1+c2*cp1*cp3*m1+c1*cp2*cp3*m1+c2*cp2*cp3*m1+c3*cp1*cp2*m2+c1*cp3*m2+c1*c2*cp3*m2+c1*cp1*cp3*m2+c2*cp1*cp3*m2+c3*cp1*cp3*m2+c1*cp2*cp3*m2+c1*c2*cp2*cp3*m2+c3*cp1*m1*m2+c3*cp2*m1*m2+c3*cp3*m1*m2+c1*cp1*cp3*m1*m2+c2*cp1*cp3*m1*m2+cp2*cp3*m1*m2+c1*cp2*cp3*m1*m2+c2*cp2*cp3*m1*m2+c3*cp2*cp3*m1*m2+c2*cp1*m3+c1*cp1*cp2*m3+c2*cp1*cp2*m3+c3*cp1*cp2*m3+c1*cp2*cp3*m3+c3*cp2*x1+c2*cp3*x1+c3*cp2*m1*x1+c3*cp1*cp2*m1*x1+c2*cp3*m1*x1+c2*cp1*cp3*m1*x1+c3*cp2*cp3*m1*x1+c3*cp1*m2*x1+c3*cp2*m2*x1+cp3*m2*x1+c1*cp3*m2*x1+c2*cp3*m2*x1+cp1*cp3*m2*x1+c3*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c3*cp2*cp3*m2*x1+cp3*m1*m2*x1+cp1*cp3*m1*m2*x1+cp2*cp3*m1*m2*x1+cp1*cp2*m3*x1+cp2*cp3*m3*x1+c1*c3*x2+c1*c2*cp3*x2+c1*c3*cp3*x2+c1*c3*cp2*cp3*x2+c3*m1*x2+c3*cp1*m1*x2+c3*cp2*m1*x2+c3*cp1*cp3*m1*x2+c3*cp2*cp3*m1*x2+c3*cp1*m2*x2+c1*c3*cp2*m2*x2+c1*c3*cp3*m2*x2+cp1*cp3*m2*x2+c3*cp1*cp3*m2*x2+c3*m1*m2*x2+cp1*cp3*m1*m2*x2+cp1*cp2*m3*x2+cp1*cp3*m1*x1*x2+c1*cp2*x3+c1*c2*cp2*x3+c1*c2*cp3*x3+c1*c3*cp2*cp3*x3+c3*cp2*m1*x3+cp1*cp2*m1*x3+cp2*cp3*m1*x3+c1*cp2*cp3*m1*x3+c2*cp2*cp3*m1*x3+c3*cp2*cp3*m1*x3+cp1*m2*x3+c1*cp1*m2*x3+c1*c3*cp2*m2*x3+cp1*cp2*m2*x3+c1*cp3*m2*x3+c1*c3*cp3*m2*x3+c1*cp2*cp3*m2*x3+m1*m2*x3+c2*m1*m2*x3+c3*m1*m2*x3+cp1*m1*m2*x3+cp2*m1*m2*x3+c3*cp2*m1*m2*x3+c1*cp3*m1*m2*x3+c2*cp3*m1*m2*x3+cp1*cp2*m3*x3+cp1*cp2*m1*x1*x3+cp2*cp3*m1*x1*x3+m2*x1*x3+cp1*cp3*m2*x1*x3+cp2*cp3*m2*x1*x3+m1*x2*x3+cp1*cp3*m1*x2*x3+cp2*cp3*m1*x2*x3+c1*cp2*m2*x2*x3+c1*cp3*m2*x2*x3+cp1*cp3*m2*x2*x3+c3*cp2*m1*y1+c3*cp1*cp2*m1*y1+c2*cp3*m1*y1+c2*cp1*cp3*m1*y1+c3*cp2*cp3*m1*y1+c3*cp1*m2*y1+c3*cp2*m2*y1+c1*cp3*m2*y1+c2*cp3*m2*y1+c3*cp1*cp3*m2*y1+cp2*cp3*m2*y1+c3*cp2*cp3*m2*y1+cp1*cp3*m1*m2*y1+cp2*cp3*m1*m2*y1+cp1*cp2*m3*y1+cp2*cp3*m3*y1+cp1*cp3*m1*x2*y1+cp1*cp2*m1*x3*y1+cp2*cp3*m1*x3*y1+cp1*cp3*m2*x3*y1+cp2*cp3*m2*x3*y1+c1*c3*y2+c1*c2*cp3*y2+c1*c3*cp3*y2+c1*c3*cp2*cp3*y2+c3*cp1*m1*y2+cp1*cp3*m1*y2+c3*cp1*cp3*m1*y2+c3*cp2*cp3*m1*y2+c3*cp1*m2*y2+c1*c3*cp2*m2*y2+c1*cp3*m2*y2+c1*c3*cp3*m2*y2+c3*cp1*cp3*m2*y2+c1*cp2*cp3*m2*y2+cp1*cp3*m1*m2*y2+cp2*cp3*m1*m2*y2+cp1*cp2*m3*y2+cp1*cp3*m1*x1*y2+c1*cp3*x2*y2+c1*cp2*x3*y2+c1*cp3*x3*y2+cp1*cp3*m1*x3*y2+cp2*cp3*m1*x3*y2+c1*cp2*m2*x3*y2+c1*cp3*m2*x3*y2+cp1*cp3*m2*x3*y2+m1*m2*x3*y2+cp1*cp3*m1*y1*y2+c1*c2*cp2*y3+c1*c2*cp3*y3+c1*c3*cp2*cp3*y3+cp1*cp2*m1*y3+c1*cp2*cp3*m1*y3+c2*cp2*cp3*m1*y3+c3*cp2*cp3*m1*y3+c1*cp1*m2*y3+c1*c3*cp2*m2*y3+cp1*cp2*m2*y3+c1*c3*cp3*m2*y3+c2*m1*m2*y3+cp1*m1*m2*y3+c3*cp2*m1*m2*y3+c1*cp3*m1*m2*y3+c2*cp3*m1*m2*y3+cp2*cp3*m1*m2*y3+cp1*cp2*m3*y3+cp1*cp2*m1*x1*y3+cp2*cp3*m1*x1*y3+m2*x1*y3+cp1*cp3*m2*x1*y3+cp2*cp3*m2*x1*y3+c1*cp2*x2*y3+c1*cp3*x2*y3+cp1*cp3*m1*x2*y3+cp2*cp3*m1*x2*y3+c1*cp2*m2*x2*y3+c1*cp3*m2*x2*y3+cp1*cp3*m2*x2*y3+c1*cp2*x3*y3+cp2*cp3*m1*x3*y3+m1*m2*x3*y3+cp1*cp2*m1*y1*y3+cp2*cp3*m1*y1*y3+cp1*cp3*m2*y1*y3+cp2*cp3*m2*y1*y3+cp1*cp3*m1*y2*y3+cp2*cp3*m1*y2*y3+c1*cp2*m2*y2*y3+c1*cp3*m2*y2*y3+cp1*cp3*m2*y2*y3+m1*m2*y2*y3+c3*cp1*cp2*m1*z1+c2*cp1*cp3*m1*z1+c3*cp2*cp3*m1*z1+c3*cp1*m2*z1+c3*cp2*m2*z1+c1*cp3*m2*z1+c3*cp1*cp3*m2*z1+c1*cp2*cp3*m2*z1+c3*cp2*cp3*m2*z1+c3*m1*m2*z1+cp1*cp3*m1*m2*z1+cp2*cp3*m1*m2*z1+c1*cp3*x2*z1+cp1*cp3*m1*x2*z1+c1*cp2*x3*z1+c2*cp3*x3*z1+cp1*cp2*m1*x3*z1+m2*x3*z1+cp1*cp3*m2*x3*z1+cp2*cp3*m2*x3*z1+m1*m2*x3*z1+c1*cp3*y2*z1+cp1*cp3*m1*y2*z1+c1*cp2*y3*z1+c2*cp3*y3*z1+cp1*cp2*m1*y3*z1+cp1*cp3*m2*y3*z1+cp2*cp3*m2*y3*z1+m1*m2*y3*z1+c3*cp1*m1*z2+c3*cp1*cp3*m1*z2+c3*cp2*cp3*m1*z2+c3*cp1*m2*z2+c1*cp3*m2*z2+c3*cp1*cp3*m2*z2+c1*cp2*cp3*m2*z2+c3*m1*m2*z2+cp2*cp3*m1*m2*z2+cp1*m3*z2+c1*cp3*x2*z2+c1*cp2*x3*z2+cp1*cp3*m1*x3*z2+cp1*cp3*m2*x3*z2+m1*m2*x3*z2+c1*cp3*y2*z2+c1*cp2*y3*z2+cp1*cp3*m1*y3*z2+cp1*cp3*m2*y3*z2+m1*m2*y3*z2+c3*cp2*m1*z3+c1*cp3*m2*z3+c1*cp2*cp3*m2*z3+c3*m1*m2*z3+cp2*m1*m2*z3+cp2*cp3*m1*m2*z3+c1*cp2*x2*z3+c1*cp3*x2*z3+m1*x2*z3+c1*cp2*x3*z3+cp2*cp3*m1*x3*z3+m1*m2*x3*z3+c1*cp2*y2*z3+c1*cp3*y2*z3+c1*cp2*y3*z3+cp2*cp3*m1*y3*z3+m1*m2*y3*z3+m2*z1*z3;
end;
#####################################################################
C2in114:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c3*cp1*cp2+c2*cp1*cp3+c1*c2*cp1*cp3+c1*c3*cp2*cp3+c1*c3*cp1*cp2*m1+c1*c2*cp3*m1+c2*cp1*cp3*m1+c1*cp2*cp3*m1+c1*c3*cp1*cp2*m2+c1*cp1*cp3*m2+c2*cp1*cp3*m2+c1*c3*cp2*cp3*m2+c3*m1*m2+c1*c3*m1*m2+c1*c3*cp1*m1*m2+c1*cp3*m1*m2+c3*cp3*m1*m2+cp1*cp3*m1*m2+c3*cp1*cp3*m1*m2+cp2*cp3*m1*m2+c3*cp2*cp3*m1*m2+c1*cp1*cp2*m3+c2*cp1*cp2*m3+c3*cp1*cp2*m3+c1*cp2*cp3*m3+c3*cp2*x1+c3*cp1*cp2*x1+c2*cp3*x1+cp2*cp3*x1+c1*cp2*cp3*x1+cp2*cp3*m1*x1+c1*cp2*cp3*m1*x1+c3*m2*x1+c3*cp2*m2*x1+cp3*m2*x1+c1*cp3*m2*x1+c3*cp3*m2*x1+c1*cp1*cp3*m2*x1+c1*cp2*cp3*m2*x1+c2*cp2*cp3*m2*x1+c3*m1*m2*x1+c3*cp2*m1*m2*x1+cp3*m1*m2*x1+cp1*cp2*m3*x1+cp2*cp3*m3*x1+c3*cp1*x2+c1*c3*cp1*x2+c1*c3*cp2*x2+c3*cp1*cp2*x2+c1*cp2*cp3*x2+c1*c3*cp2*cp3*x2+c1*c3*m1*x2+c3*cp1*m1*x2+c1*c3*cp2*m1*x2+c3*cp1*cp2*m1*x2+c1*cp3*m1*x2+c2*cp3*m1*x2+c1*cp1*cp3*m1*x2+c3*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c1*cp2*cp3*m1*x2+c3*cp2*cp3*m1*x2+c1*c3*cp2*m2*x2+c1*c3*cp3*m2*x2+cp1*cp3*m2*x2+c1*c3*m1*m2*x2+c3*cp2*m1*m2*x2+c1*cp3*m1*m2*x2+c3*cp3*m1*m2*x2+c1*cp2*cp3*m1*m2*x2+cp1*cp2*m3*x2+c3*m1*x1*x2+c1*c2*cp1*x3+c1*cp2*x3+c1*cp1*cp2*x3+c1*cp2*cp3*x3+c1*c3*cp2*cp3*x3+c2*m1*x3+c1*c2*m1*x3+c2*cp1*m1*x3+c1*c3*cp2*m1*x3+cp1*cp2*m1*x3+c1*cp1*cp2*m1*x3+c2*cp1*cp2*m1*x3+c2*cp1*cp3*m1*x3+cp2*cp3*m1*x3+c1*cp2*cp3*m1*x3+c1*m2*x3+c1*c3*m2*x3+cp1*m2*x3+c2*cp1*m2*x3+c3*cp1*m2*x3+c1*cp2*m2*x3+c1*c3*cp2*m2*x3+cp1*cp2*m2*x3+c1*cp1*cp2*m2*x3+c1*cp3*m2*x3+c1*c3*cp3*m2*x3+c1*cp1*cp3*m2*x3+c3*cp1*cp3*m2*x3+c1*cp2*cp3*m2*x3+c1*m1*m2*x3+c3*m1*m2*x3+c1*c3*m1*m2*x3+cp1*m1*m2*x3+c1*cp1*m1*m2*x3+cp2*m1*m2*x3+c3*cp2*m1*m2*x3+c3*cp3*m1*m2*x3+cp1*cp3*m1*m2*x3+cp1*cp2*m3*x3+c2*x1*x3+cp2*x1*x3+c2*m1*x1*x3+cp2*m1*x1*x3+c3*m2*x1*x3+cp2*m2*x1*x3+cp3*m2*x1*x3+cp2*m1*m2*x1*x3+cp1*m1*x2*x3+cp2*m1*x2*x3+c1*cp2*m2*x2*x3+c1*cp3*m2*x2*x3+c1*m1*m2*x2*x3+cp2*m1*m2*x2*x3+c3*cp2*y1+c2*cp3*y1+c2*cp1*cp3*y1+c3*cp2*cp3*y1+c2*cp3*m1*y1+c1*cp2*cp3*m1*y1+c3*cp1*m2*y1+c3*cp2*m2*y1+c1*cp1*cp3*m2*y1+cp2*cp3*m2*y1+c1*cp2*cp3*m2*y1+c2*cp2*cp3*m2*y1+c3*m1*m2*y1+c3*cp2*m1*m2*y1+cp3*m1*m2*y1+cp2*cp3*m1*m2*y1+cp1*cp2*m3*y1+cp2*cp3*m3*y1+cp3*m2*x1*y1+c3*x2*y1+c3*m1*x2*y1+c2*m1*x3*y1+c3*m2*x3*y1+cp1*m2*x3*y1+cp2*m2*x3*y1+cp3*m2*x3*y1+cp2*m1*m2*x3*y1+c1*c3*cp1*y2+c1*c3*cp2*y2+c2*cp1*cp3*y2+c1*c3*cp2*cp3*y2+c1*c3*m1*y2+c3*cp1*m1*y2+c1*c3*cp2*m1*y2+c3*cp1*cp2*m1*y2+cp1*cp3*m1*y2+c1*cp1*cp3*m1*y2+c3*cp1*cp3*m1*y2+c3*cp2*cp3*m1*y2+c3*cp1*m2*y2+c1*c3*cp2*m2*y2+c1*c3*cp3*m2*y2+c1*cp2*cp3*m2*y2+c1*c3*m1*m2*y2+c3*cp2*m1*m2*y2+c3*cp3*m1*m2*y2+cp2*cp3*m1*m2*y2+c1*cp2*cp3*m1*m2*y2+cp1*cp2*m3*y2+c3*m1*x1*y2+cp3*m2*x1*y2+c1*cp3*x2*y2+c1*cp2*x3*y2+c1*cp3*x3*y2+c1*m1*x3*y2+cp1*m1*x3*y2+cp1*m2*x3*y2+c1*cp2*m2*x3*y2+c1*cp3*m2*x3*y2+c1*m1*m2*x3*y2+cp2*m1*m2*x3*y2+c3*y1*y2+c3*m1*y1*y2+cp3*m2*y1*y2+c1*c2*cp1*y3+c2*cp1*cp2*y3+c3*cp1*cp2*y3+c2*cp1*cp3*y3+c1*c3*cp2*cp3*y3+c1*c2*m1*y3+c2*cp1*m1*y3+c1*cp2*m1*y3+c1*c3*cp2*m1*y3+cp1*cp2*m1*y3+c1*cp1*cp2*m1*y3+c2*cp1*cp2*m1*y3+c2*cp1*cp3*m1*y3+c1*c3*m2*y3+c1*cp1*m2*y3+c1*c3*cp2*m2*y3+cp1*cp2*m2*y3+c1*cp1*cp2*m2*y3+c1*c3*cp3*m2*y3+c1*cp1*cp3*m2*y3+c3*cp1*cp3*m2*y3+c1*m1*m2*y3+c3*m1*m2*y3+c1*c3*m1*m2*y3+cp1*m1*m2*y3+c1*cp1*m1*m2*y3+cp2*m1*m2*y3+c3*cp2*m1*m2*y3+cp1*cp2*m1*m2*y3+c1*cp3*m1*m2*y3+c3*cp3*m1*m2*y3+cp1*cp3*m1*m2*y3+cp1*cp2*m3*y3+c2*x1*y3+c2*m1*x1*y3+c3*m2*x1*y3+cp2*m2*x1*y3+cp2*m1*m2*x1*y3+c1*cp2*x2*y3+c1*cp3*x2*y3+c1*m1*x2*y3+cp2*m1*x2*y3+c1*cp2*m2*x2*y3+c1*cp3*m2*x2*y3+c1*m1*m2*x2*y3+cp2*m1*m2*x2*y3+c1*cp2*x3*y3+c2*m1*x3*y3+cp2*cp3*m1*x3*y3+c1*m2*x3*y3+cp1*m2*x3*y3+cp2*m1*m2*x3*y3+c2*m1*y1*y3+cp2*m1*y1*y3+c3*m2*y1*y3+cp1*m2*y1*y3+cp2*m2*y1*y3+cp2*m1*m2*y1*y3+cp1*m2*y2*y3+c1*cp2*m2*y2*y3+c1*cp3*m2*y2*y3+c1*m1*m2*y2*y3+cp2*m1*m2*y2*y3+c2*cp1*cp3*z1+c1*cp2*cp3*z1+c2*cp2*cp3*z1+c3*cp1*cp2*m1*z1+c2*cp1*cp3*m1*z1+c3*cp2*cp3*m1*z1+c3*m2*z1+c3*cp1*m2*z1+c3*cp2*m2*z1+c2*cp3*m2*z1+c3*cp3*m2*z1+c3*cp1*cp3*m2*z1+c1*cp2*cp3*m2*z1+c3*cp2*cp3*m2*z1+c1*cp3*x2*z1+cp1*cp3*m1*x2*z1+c1*cp2*x3*z1+c2*cp3*x3*z1+cp2*m1*x3*z1+cp1*cp2*m1*x3*z1+cp1*m2*x3*z1+cp2*m2*x3*z1+cp1*cp3*m2*x3*z1+cp2*cp3*m2*x3*z1+c1*cp3*y2*z1+cp1*cp3*m1*y2*z1+c1*cp2*y3*z1+c2*cp3*y3*z1+cp2*m1*y3*z1+cp1*cp2*m1*y3*z1+cp1*m2*y3*z1+cp2*m2*y3*z1+cp1*cp3*m2*y3*z1+cp2*cp3*m2*y3*z1+c1*c3*z2+c2*cp1*cp3*z2+c1*cp2*cp3*z2+c3*cp1*cp3*m1*z2+c1*cp2*cp3*m1*z2+c3*cp2*cp3*m1*z2+c3*cp1*m2*z2+c1*cp3*m2*z2+c3*cp1*cp3*m2*z2+c1*cp2*cp3*m2*z2+c1*cp3*m1*m2*z2+c3*x1*z2+cp3*m2*x1*z2+c1*cp3*x2*z2+c1*cp2*x3*z2+c1*m1*x3*z2+cp2*m1*x3*z2+cp1*cp3*m1*x3*z2+cp1*m2*x3*z2+cp1*cp3*m2*x3*z2+c3*y1*z2+cp3*m2*y1*z2+c1*cp3*y2*z2+c1*cp2*y3*z2+c1*m1*y3*z2+cp2*m1*y3*z2+cp1*cp3*m1*y3*z2+cp1*m2*y3*z2+cp1*cp3*m2*y3*z2+c1*cp1*cp2*z3+c2*cp1*cp2*z3+c3*cp1*cp2*z3+c2*cp1*cp3*z3+c1*cp2*cp3*z3+c1*cp2*m1*z3+c1*cp2*cp3*m1*z3+c1*cp1*m2*z3+c2*cp1*m2*z3+c3*cp1*m2*z3+c1*cp2*m2*z3+c1*cp3*m2*z3+c1*cp2*cp3*m2*z3+cp2*m1*m2*z3+cp1*cp2*m1*m2*z3+c1*cp3*m1*m2*z3+cp2*x1*z3+cp2*m1*x1*z3+cp3*m2*x1*z3+c1*cp2*x2*z3+c1*cp3*x2*z3+c1*m1*x2*z3+cp1*m1*x2*z3+c1*cp2*x3*z3+c2*m1*x3*z3+cp2*cp3*m1*x3*z3+c1*m2*x3*z3+cp1*m2*x3*z3+cp2*m1*m2*x3*z3+cp2*m1*y1*z3+cp3*m2*y1*z3+c1*cp2*y2*z3+c1*cp3*y2*z3+c1*m1*y2*z3+cp1*m1*y2*z3+c1*cp2*y3*z3+c2*m1*y3*z3+cp2*cp3*m1*y3*z3+c1*m2*y3*z3+cp1*m2*y3*z3+cp2*m1*m2*y3*z3;
end;
#####################################################################
#Space Group No. 115 (P-4m2)*(maximally-reducible from 123)
#####################################################################
Acpin115:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return cp1;
end;
#####################################################################
Amin115:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Axyin115:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return x1+y1;
end;
#####################################################################
Azin115:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain115:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bxyin115:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return x2*y1+cp1*x2*y1+cp1*x2*y2+cp1*y1*y2;
end;
#####################################################################
#Space Group No. 116 (P-4c2)(maximally-reducible from 132)*
#####################################################################
Acpin116:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return cp1;
end;
#####################################################################
Amin116:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Axyin116:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return x1+y1;
end;
#####################################################################
Bdeltain116:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bxyin116:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return x2*y1+cp1*x2*y1+cp1*x2*y2+cp1*y1*y2;
end;
#####################################################################
Bcpzin116:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return cp1*z2+c1*cp2+cp1*cp2*m1+c1*m2+cp1*m1*m2;
end;
#####################################################################
#Space Group No. 117 (P-4b2)*(maximally-reducible from 127)
#####################################################################
Acpin117:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return cp1;
end;
#####################################################################
Amin117:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Azin117:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return z1;
end;
#####################################################################
Bdeltain117:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
B2in117:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+c1*m2+c1*m1*m2+c2*m1*m2+cp2*m1*m2+m2*x1+c1*x2+m1*x2+m2*y1+c1*y2;
end;
#####################################################################
CGAPin117:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c2*c3*cp2+c1*c3*cp1*cp2+c1*c2*c3*cp1*cp2+c1*cp2*cp3+c1*c2*cp2*cp3+c1*c3*cp2*cp3+c1*c2*cp1*cp2*cp3+c3*cp1*cp2*cp3+c1*c2*c3*cp1*cp2*cp3+c1*c2*c3*cp2*m1+c3*cp1*cp2*m1+c1*c2*cp3*m1+c2*cp1*cp3*m1+c2*c3*cp1*cp3*m1+c1*c3*cp2*cp3*m1+c1*c2*c3*cp2*cp3*m1+c1*cp1*cp2*cp3*m1+c1*c2*cp1*cp2*cp3*m1+c1*c3*cp1*m2+c1*c2*c3*cp1*m2+c1*c3*cp2*m2+c1*c2*c3*cp2*m2+c3*cp1*cp2*m2+c1*c3*cp1*cp2*m2+c1*cp1*cp3*m2+c2*cp1*cp3*m2+c1*c3*cp1*cp3*m2+c2*c3*cp1*cp3*m2+c1*c2*c3*cp1*cp3*m2+c1*cp2*cp3*m2+c1*c3*cp2*cp3*m2+c1*cp1*cp2*cp3*m2+c2*cp1*cp2*cp3*m2+c1*c2*cp1*cp2*cp3*m2+c3*cp1*cp2*cp3*m2+c1*c3*cp1*cp2*cp3*m2+c1*c3*m1*m2+c1*c2*c3*m1*m2+c3*cp1*m1*m2+c1*c3*cp1*m1*m2+c1*c3*cp2*m1*m2+c3*cp1*cp2*m1*m2+c1*c3*cp1*cp2*m1*m2+c2*c3*cp3*m1*m2+c1*c2*c3*cp3*m1*m2+cp1*cp3*m1*m2+c2*cp1*cp3*m1*m2+c1*c2*cp1*cp3*m1*m2+c1*c3*cp1*cp3*m1*m2+cp2*cp3*m1*m2+c1*cp2*cp3*m1*m2+c2*cp2*cp3*m1*m2+c1*c2*cp2*cp3*m1*m2+cp1*cp2*cp3*m1*m2+c1*c3*cp1*cp2*cp3*m1*m2+c1*c2*cp1*m3+c1*c2*c3*cp1*m3+c1*cp2*m3+c1*c2*cp2*m3+c1*c3*cp2*m3+c1*c2*c3*cp2*m3+c2*cp1*cp2*m3+c1*c2*cp1*cp2*m3+c3*cp1*cp2*m3+c2*c3*cp1*cp2*m3+c1*c2*cp3*m3+c1*c2*cp1*cp3*m3+c1*c2*cp2*cp3*m3+cp1*cp2*cp3*m3+c3*cp1*cp2*cp3*m3+c1*c2*c3*m1*m3+c1*c2*cp1*m1*m3+c1*cp2*m1*m3+c1*c3*cp2*m1*m3+c1*cp1*cp2*m1*m3+c1*c2*cp1*cp2*m1*m3+c3*cp1*cp2*m1*m3+c2*cp1*cp3*m1*m3+c1*c2*cp1*cp3*m1*m3+cp1*cp2*cp3*m1*m3+c3*cp1*cp2*cp3*m1*m3+c1*m2*m3+c1*c2*m2*m3+c1*c3*m2*m3+c1*c2*c3*m2*m3+c1*c2*cp1*m2*m3+c1*c2*cp2*m2*m3+c1*c3*cp2*m2*m3+c1*cp1*cp2*m2*m3+c2*cp1*cp2*m2*m3+c1*c2*cp1*cp2*m2*m3+c1*c3*cp1*cp2*m2*m3+c1*cp3*m2*m3+c1*c3*cp3*m2*m3+c1*c2*cp1*cp3*m2*m3+c1*c3*cp1*cp3*m2*m3+c2*c3*cp1*cp3*m2*m3+c1*cp2*cp3*m2*m3+c1*c2*cp2*cp3*m2*m3+c1*c3*cp2*cp3*m2*m3+c1*c3*cp1*cp2*cp3*m2*m3+c2*c3*cp1*cp2*cp3*m2*m3+c1*m1*m2*m3+c2*m1*m2*m3+c1*c2*m1*m2*m3+c1*c3*m1*m2*m3+c2*c3*m1*m2*m3+c1*c2*cp1*m1*m2*m3+c3*cp1*m1*m2*m3+c1*c3*cp1*m1*m2*m3+cp2*m1*m2*m3+c1*c2*cp2*m1*m2*m3+c1*c3*cp2*m1*m2*m3+cp1*cp2*m1*m2*m3+c1*cp1*cp2*m1*m2*m3+c2*cp1*cp2*m1*m2*m3+c3*cp1*cp2*m1*m2*m3+cp3*m1*m2*m3+c1*c2*cp3*m1*m2*m3+cp1*cp3*m1*m2*m3+c1*cp1*cp3*m1*m2*m3+c3*cp1*cp3*m1*m2*m3+cp2*cp3*m1*m2*m3+c1*cp2*cp3*m1*m2*m3+c3*cp2*cp3*m1*m2*m3+c1*cp1*cp2*cp3*m1*m2*m3+c3*cp1*cp2*cp3*m1*m2*m3+c2*c3*cp1*x1+c2*c3*cp2*x1+c1*c2*c3*cp2*x1+c1*c3*cp1*cp2*x1+c2*c3*cp1*cp2*x1+c1*c2*cp1*cp3*x1+c1*c2*cp2*cp3*x1+c3*cp2*cp3*x1+c2*c3*cp2*cp3*x1+c1*cp1*cp2*cp3*x1+c1*c2*cp1*cp2*cp3*x1+c3*cp1*cp2*cp3*x1+c2*c3*cp1*cp2*cp3*x1+c2*c3*m1*x1+c2*c3*cp1*m1*x1+c3*cp2*m1*x1+c1*c3*cp1*cp2*m1*x1+c1*c2*cp3*m1*x1+cp2*cp3*m1*x1+c1*cp2*cp3*m1*x1+c1*c2*cp2*cp3*m1*x1+c1*c3*cp2*cp3*m1*x1+c2*c3*cp2*cp3*m1*x1+cp1*cp2*cp3*m1*x1+c1*cp1*cp2*cp3*m1*x1+c2*cp1*cp2*cp3*m1*x1+c3*cp1*cp2*cp3*m1*x1+c3*m2*x1+c2*c3*m2*x1+c1*c2*c3*m2*x1+c3*cp1*m2*x1+c1*c3*cp1*m2*x1+c3*cp2*m2*x1+c1*c3*cp2*m2*x1+c2*c3*cp2*m2*x1+cp3*m2*x1+c2*cp3*m2*x1+c1*c3*cp3*m2*x1+cp1*cp3*m2*x1+c1*c3*cp1*cp3*m2*x1+c2*c3*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c1*cp2*cp3*m2*x1+c2*cp2*cp3*m2*x1+c3*cp2*cp3*m2*x1+c2*c3*cp2*cp3*m2*x1+c1*cp1*cp2*cp3*m2*x1+c3*m1*m2*x1+c3*cp2*m1*m2*x1+c2*c3*cp2*m1*m2*x1+c3*cp1*cp2*m1*m2*x1+cp3*m1*m2*x1+c1*cp3*m1*m2*x1+c2*cp3*m1*m2*x1+c3*cp3*m1*m2*x1+c2*c3*cp3*m1*m2*x1+cp1*cp3*m1*m2*x1+c1*cp1*cp3*m1*m2*x1+c2*cp1*cp3*m1*m2*x1+cp2*cp3*m1*m2*x1+c2*cp2*cp3*m1*m2*x1+c1*cp1*cp2*cp3*m1*m2*x1+c3*cp1*cp2*cp3*m1*m2*x1+c1*c2*m3*x1+c2*c3*m3*x1+c1*c2*cp1*m3*x1+c2*c3*cp1*m3*x1+cp2*m3*x1+c2*cp2*m3*x1+c1*c2*cp2*m3*x1+c3*cp2*m3*x1+cp1*cp2*m3*x1+c2*cp1*cp2*m3*x1+c3*cp1*cp2*m3*x1+c2*cp3*m3*x1+c1*c2*cp3*m3*x1+c2*c3*cp3*m3*x1+c2*cp1*cp3*m3*x1+c2*cp2*cp3*m3*x1+c2*m1*m3*x1+c2*cp1*m1*m3*x1+c2*cp2*m1*m3*x1+c2*cp1*cp2*m1*m3*x1+c2*cp3*m1*m3*x1+c2*cp1*cp3*m1*m3*x1+m2*m3*x1+c3*m2*m3*x1+c2*c3*m2*m3*x1+cp1*m2*m3*x1+c1*cp1*m2*m3*x1+c2*cp1*m2*m3*x1+c1*cp2*m2*m3*x1+c2*cp2*m2*m3*x1+c1*c2*cp2*m2*m3*x1+c1*c3*cp2*m2*m3*x1+cp1*cp2*m2*m3*x1+c1*c2*cp3*m2*m3*x1+c1*c3*cp3*m2*m3*x1+cp1*cp3*m2*m3*x1+c1*cp1*cp3*m2*m3*x1+c3*cp1*cp3*m2*m3*x1+cp2*cp3*m2*m3*x1+c2*cp2*cp3*m2*m3*x1+c3*cp2*cp3*m2*m3*x1+cp1*cp2*cp3*m2*m3*x1+cp2*m1*m2*m3*x1+c2*cp2*m1*m2*m3*x1+c3*cp2*m1*m2*m3*x1+cp1*cp2*m1*m2*m3*x1+c2*cp3*m1*m2*m3*x1+c3*cp3*m1*m2*m3*x1+cp1*cp3*m1*m2*m3*x1+cp1*cp2*cp3*m1*m2*m3*x1+c1*c3*cp1*x2+c2*c3*cp1*x2+c1*c3*cp2*x2+c3*cp1*cp2*x2+c1*c3*cp1*cp2*x2+c1*cp1*cp3*x2+c2*cp1*cp3*x2+c1*c3*cp1*cp3*x2+c1*cp2*cp3*x2+cp1*cp2*cp3*x2+c1*cp1*cp2*cp3*x2+c1*c2*cp1*cp2*cp3*x2+c1*c3*cp1*cp2*cp3*x2+c3*m1*x2+c1*c3*m1*x2+c2*c3*m1*x2+c2*c3*cp1*m1*x2+c1*c3*cp2*m1*x2+c2*c3*cp2*m1*x2+c2*c3*cp1*cp2*m1*x2+c1*c3*cp3*m1*x2+c1*cp1*cp3*m1*x2+c2*cp1*cp3*m1*x2+c3*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c1*cp2*cp3*m1*x2+c1*c2*cp2*cp3*m1*x2+c3*cp2*cp3*m1*x2+c1*c3*cp2*cp3*m1*x2+c3*cp1*cp2*cp3*m1*x2+c1*c3*cp1*m2*x2+c2*c3*cp1*m2*x2+c1*cp3*m2*x2+c1*c2*cp3*m2*x2+cp1*cp3*m2*x2+c1*cp2*cp3*m2*x2+c1*c3*cp2*cp3*m2*x2+cp1*cp2*cp3*m2*x2+c1*cp1*cp2*cp3*m2*x2+c2*cp1*cp2*cp3*m2*x2+c3*cp1*cp2*cp3*m2*x2+c3*m1*m2*x2+c3*cp1*m1*m2*x2+c3*cp2*m1*m2*x2+c3*cp1*cp2*m1*m2*x2+cp3*m1*m2*x2+c1*cp3*m1*m2*x2+c2*cp3*m1*m2*x2+c3*cp3*m1*m2*x2+cp1*cp3*m1*m2*x2+c2*cp1*cp3*m1*m2*x2+c3*cp1*cp3*m1*m2*x2+cp2*cp3*m1*m2*x2+c1*cp2*cp3*m1*m2*x2+c2*cp1*cp2*cp3*m1*m2*x2+c1*c2*m3*x2+c1*c2*cp2*m3*x2+c1*c2*cp3*m3*x2+c1*m1*m3*x2+c2*m1*m3*x2+cp1*m1*m3*x2+c1*cp1*m1*m3*x2+c2*cp1*m1*m3*x2+c3*cp1*m1*m3*x2+cp2*m1*m3*x2+c3*cp2*m1*m3*x2+cp3*m1*m3*x2+c3*cp3*m1*m3*x2+c1*cp2*m2*m3*x2+cp1*cp2*m2*m3*x2+c1*cp1*cp2*m2*m3*x2+c2*cp1*cp2*m2*m3*x2+c3*cp1*cp2*m2*m3*x2+c1*cp3*m2*m3*x2+c1*cp1*cp3*m2*m3*x2+c2*cp1*cp3*m2*m3*x2+c3*cp1*cp3*m2*m3*x2+c1*cp2*cp3*m2*m3*x2+cp1*cp2*cp3*m2*m3*x2+cp2*m1*m2*m3*x2+cp1*cp2*m1*m2*m3*x2+c3*cp1*cp2*x1*x2+c3*cp1*cp3*x1*x2+c1*cp1*cp2*cp3*x1*x2+c2*cp1*cp2*cp3*x1*x2+c3*cp1*cp2*cp3*x1*x2+cp1*cp2*cp3*m1*x1*x2+c3*m2*x1*x2+c3*cp2*m2*x1*x2+cp3*m2*x1*x2+c2*cp3*m2*x1*x2+c3*cp3*m2*x1*x2+cp2*cp3*m2*x1*x2+m3*x1*x2+c2*m3*x1*x2+c3*m3*x1*x2+cp2*m3*x1*x2+c2*cp2*m3*x1*x2+c3*cp2*m3*x1*x2+cp3*m3*x1*x2+c2*cp3*m3*x1*x2+c3*cp3*m3*x1*x2+cp2*cp3*m2*m3*x1*x2+c1*c2*x3+c1*c2*cp2*x3+c1*c3*cp2*x3+cp1*cp2*x3+c1*c2*cp1*cp2*x3+c2*c3*cp1*cp2*x3+c1*cp2*cp3*x3+c1*c3*cp2*cp3*x3+c1*cp1*cp2*cp3*x3+c2*cp1*cp2*cp3*x3+c3*cp1*cp2*cp3*x3+c1*c2*cp1*m1*x3+c2*c3*cp1*m1*x3+c2*cp2*m1*x3+c1*c2*cp2*m1*x3+c3*cp2*m1*x3+c2*c3*cp2*m1*x3+c2*cp1*cp2*m1*x3+c3*cp1*cp2*m1*x3+c2*cp2*cp3*m1*x3+c3*cp2*cp3*m1*x3+c3*cp1*cp2*cp3*m1*x3+c1*m2*x3+c1*c2*m2*x3+c1*c3*m2*x3+c1*c3*cp1*m2*x3+c2*c3*cp1*m2*x3+c1*c3*cp2*m2*x3+c1*c3*cp1*cp2*m2*x3+c2*c3*cp1*cp2*m2*x3+c1*cp3*m2*x3+c1*c2*cp3*m2*x3+c1*c3*cp3*m2*x3+cp1*cp3*m2*x3+c1*cp1*cp3*m2*x3+c2*cp1*cp3*m2*x3+c3*cp1*cp3*m2*x3+c1*c3*cp2*cp3*m2*x3+cp1*cp2*cp3*m2*x3+c1*cp1*cp2*cp3*m2*x3+m1*m2*x3+c1*m1*m2*x3+c2*m1*m2*x3+c3*m1*m2*x3+cp1*m1*m2*x3+c1*cp1*m1*m2*x3+c2*cp1*m1*m2*x3+c3*cp1*m1*m2*x3+cp2*m1*m2*x3+c1*cp2*m1*m2*x3+c2*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+cp3*m1*m2*x3+c1*cp3*m1*m2*x3+c2*cp3*m1*m2*x3+c3*cp3*m1*m2*x3+cp1*cp3*m1*m2*x3+c2*cp1*cp3*m1*m2*x3+c3*cp1*cp3*m1*m2*x3+cp2*cp3*m1*m2*x3+c2*cp2*cp3*m1*m2*x3+c3*cp2*cp3*m1*m2*x3+cp1*cp2*cp3*m1*m2*x3+c3*cp1*cp2*cp3*m1*m2*x3+c1*c2*m3*x3+c1*c2*cp3*m3*x3+c1*m2*m3*x3+cp1*m2*m3*x3+c1*cp1*m2*m3*x3+c2*cp1*m2*m3*x3+c3*cp1*m2*m3*x3+c1*cp2*m2*m3*x3+c1*cp3*m2*m3*x3+c1*cp1*cp3*m2*m3*x3+c2*cp1*cp3*m2*m3*x3+c3*cp1*cp3*m2*m3*x3+c1*cp1*cp2*cp3*m2*m3*x3+c2*cp1*cp2*cp3*m2*m3*x3+c3*cp1*cp2*cp3*m2*m3*x3+m1*m2*m3*x3+c3*m1*m2*m3*x3+cp1*cp2*m1*m2*m3*x3+cp3*m1*m2*m3*x3+c3*cp3*m1*m2*m3*x3+cp1*cp2*cp3*m1*m2*m3*x3+cp2*x1*x3+c1*c2*cp2*x1*x3+c1*c3*cp2*x1*x3+cp1*cp2*x1*x3+cp2*cp3*x1*x3+cp1*cp2*cp3*x1*x3+c2*cp2*m1*x1*x3+c3*cp2*m1*x1*x3+c2*cp2*cp3*m1*x1*x3+c3*cp2*cp3*m1*x1*x3+m2*x1*x3+c2*m2*x1*x3+c3*m2*x1*x3+cp3*m2*x1*x3+c2*cp3*m2*x1*x3+c3*cp3*m2*x1*x3+c1*cp2*cp3*m2*x1*x3+c2*m3*x1*x3+c2*cp3*m3*x1*x3+cp1*cp2*x2*x3+c1*cp1*cp2*x2*x3+c2*cp1*cp2*x2*x3+c3*cp1*cp2*x2*x3+c1*cp2*cp3*x2*x3+cp1*cp2*m1*x2*x3+cp1*cp2*cp3*m1*x2*x3+cp1*cp2*cp3*m2*x2*x3+c2*c3*y1+c2*cp1*cp3*y1+c1*c2*cp1*cp3*y1+c2*cp1*cp2*cp3*y1+c1*c2*cp1*cp2*cp3*y1+c3*cp1*cp2*cp3*y1+c2*c3*cp1*cp2*cp3*y1+c3*cp2*m1*y1+c1*c3*cp2*m1*y1+c2*c3*cp2*m1*y1+c1*c3*cp1*cp2*m1*y1+c1*c2*cp3*m1*y1+c1*cp2*cp3*m1*y1+c1*c2*cp2*cp3*m1*y1+c3*cp2*cp3*m1*y1+c1*c3*cp2*cp3*m1*y1+c2*c3*cp2*cp3*m1*y1+cp1*cp2*cp3*m1*y1+c3*cp1*cp2*cp3*m1*y1+c2*c3*m2*y1+c3*cp1*m2*y1+c1*c3*cp1*m2*y1+c3*cp2*m2*y1+c1*c3*cp2*m2*y1+c2*c3*cp2*m2*y1+c3*cp1*cp2*m2*y1+c2*cp3*m2*y1+c1*c2*cp3*m2*y1+c2*c3*cp3*m2*y1+cp1*cp3*m2*y1+c2*cp1*cp3*m2*y1+c3*cp1*cp3*m2*y1+c1*c3*cp1*cp3*m2*y1+c2*c3*cp1*cp3*m2*y1+cp2*cp3*m2*y1+c2*cp2*cp3*m2*y1+c3*cp2*cp3*m2*y1+c1*c3*cp2*cp3*m2*y1+c2*c3*cp2*cp3*m2*y1+cp1*cp2*cp3*m2*y1+c2*cp1*cp2*cp3*m2*y1+c3*m1*m2*y1+c2*c3*cp2*m1*m2*y1+c3*cp1*cp2*m1*m2*y1+c3*cp3*m1*m2*y1+c2*c3*cp3*m1*m2*y1+cp1*cp3*m1*m2*y1+c1*cp1*cp3*m1*m2*y1+cp2*cp3*m1*m2*y1+c1*cp2*cp3*m1*m2*y1+c3*cp2*cp3*m1*m2*y1+c1*cp1*cp2*cp3*m1*m2*y1+c3*cp1*cp2*cp3*m1*m2*y1+c1*c2*cp1*m3*y1+c2*c3*cp1*m3*y1+c1*c2*cp2*m3*y1+cp1*cp2*m3*y1+c2*cp1*cp2*m3*y1+c3*cp1*cp2*m3*y1+c1*c2*cp3*m3*y1+c2*c3*cp3*m3*y1+c2*cp1*cp3*m3*y1+c2*cp2*cp3*m3*y1+c2*cp1*m1*m3*y1+c2*cp1*cp2*m1*m3*y1+c2*cp1*cp3*m1*m3*y1+c1*m2*m3*y1+c2*m2*m3*y1+c3*m2*m3*y1+c2*c3*m2*m3*y1+cp1*m2*m3*y1+c1*cp1*m2*m3*y1+c2*cp1*m2*m3*y1+cp2*m2*m3*y1+c1*cp2*m2*m3*y1+c2*cp2*m2*m3*y1+cp3*m2*m3*y1+c3*cp3*m2*m3*y1+c1*cp1*cp3*m2*m3*y1+c3*cp1*cp3*m2*m3*y1+c1*cp2*cp3*m2*m3*y1+c2*cp2*cp3*m2*m3*y1+c3*cp2*cp3*m2*m3*y1+cp1*cp2*cp3*m2*m3*y1+c2*cp2*m1*m2*m3*y1+c3*cp2*m1*m2*m3*y1+cp1*cp2*m1*m2*m3*y1+cp3*m1*m2*m3*y1+c2*cp3*m1*m2*m3*y1+c3*cp3*m1*m2*m3*y1+cp1*cp3*m1*m2*m3*y1+cp2*cp3*m1*m2*m3*y1+cp1*cp2*cp3*m1*m2*m3*y1+c3*cp2*x1*y1+c3*cp1*cp2*x1*y1+c2*cp3*x1*y1+c1*cp2*cp3*x1*y1+c2*cp2*cp3*x1*y1+c3*cp2*cp3*x1*y1+cp1*cp2*cp3*m1*x1*y1+cp3*m2*x1*y1+cp1*cp2*cp3*m2*x1*y1+c3*cp3*x2*y1+c3*cp1*cp3*x2*y1+c1*cp2*cp3*x2*y1+c2*cp2*cp3*x2*y1+c3*cp2*cp3*x2*y1+c1*cp1*cp2*cp3*x2*y1+c2*cp1*cp2*cp3*x2*y1+c3*cp1*cp2*cp3*x2*y1+c3*m2*x2*y1+c3*cp2*m2*x2*y1+cp3*m2*x2*y1+c2*cp3*m2*x2*y1+c3*cp3*m2*x2*y1+cp1*cp2*cp3*m2*x2*y1+m3*x2*y1+c2*m3*x2*y1+c3*m3*x2*y1+cp2*m3*x2*y1+c2*cp2*m3*x2*y1+c3*cp2*m3*x2*y1+cp3*m3*x2*y1+c2*cp3*m3*x2*y1+c3*cp3*m3*x2*y1+cp2*cp3*m2*m3*x2*y1+c2*cp2*m1*x3*y1+c3*cp2*m1*x3*y1+c2*cp2*cp3*m1*x3*y1+c3*cp2*cp3*m1*x3*y1+m2*x3*y1+c2*m2*x3*y1+c3*m2*x3*y1+cp3*m2*x3*y1+c2*cp3*m2*x3*y1+c3*cp3*m2*x3*y1+c2*m3*x3*y1+c2*cp3*m3*x3*y1+c1*c3*cp1*y2+c1*cp1*cp3*y2+c1*c2*cp1*cp3*y2+c1*cp1*cp2*cp3*y2+c1*c2*cp1*cp2*cp3*y2+c1*c3*cp1*cp2*cp3*y2+c1*c3*cp2*m1*y2+c2*c3*cp1*cp2*m1*y2+c1*c2*cp3*m1*y2+c1*cp2*cp3*m1*y2+c1*c2*cp2*cp3*m1*y2+c1*c3*cp2*cp3*m1*y2+c1*cp1*cp2*cp3*m1*y2+c2*cp1*cp2*cp3*m1*y2+c1*c3*cp2*m2*y2+c1*c2*cp3*m2*y2+c1*c3*cp2*cp3*m2*y2+c1*cp1*cp2*cp3*m2*y2+c3*m1*m2*y2+c3*cp1*m1*m2*y2+c3*cp2*m1*m2*y2+cp3*m1*m2*y2+c2*cp3*m1*m2*y2+cp1*cp3*m1*m2*y2+c1*cp2*cp3*m1*m2*y2+c2*cp2*cp3*m1*m2*y2+c3*cp2*cp3*m1*m2*y2+c2*cp1*cp2*cp3*m1*m2*y2+c1*c2*cp2*m3*y2+c1*c2*cp3*m3*y2+c1*cp1*m1*m3*y2+c2*cp1*m1*m3*y2+c3*cp1*m1*m3*y2+c1*m2*m3*y2+c1*cp2*m2*m3*y2+c1*cp2*cp3*m2*m3*y2+cp1*cp3*m1*m2*m3*y2+c3*x1*y2+c1*c3*x1*y2+c3*cp1*x1*y2+c3*cp2*x1*y2+c3*cp1*cp2*x1*y2+cp3*x1*y2+c1*cp3*x1*y2+c2*cp3*x1*y2+cp1*cp3*x1*y2+c1*cp1*cp3*x1*y2+c2*cp1*cp3*x1*y2+c1*cp2*cp3*x1*y2+c2*cp2*cp3*x1*y2+c3*cp2*cp3*x1*y2+c1*cp1*cp2*cp3*x1*y2+c2*cp1*cp2*cp3*x1*y2+c3*cp1*cp2*cp3*x1*y2+c3*cp2*m1*x1*y2+c2*cp3*m1*x1*y2+c3*cp3*m1*x1*y2+c3*cp2*m2*x1*y2+c1*cp3*m2*x1*y2+c2*cp3*m2*x1*y2+c3*cp3*m2*x1*y2+cp2*cp3*m2*x1*y2+cp3*m1*m2*x1*y2+cp2*cp3*m1*m2*x1*y2+cp2*m3*x1*y2+c2*cp2*m3*x1*y2+c3*cp2*m3*x1*y2+cp3*m3*x1*y2+c2*cp3*m3*x1*y2+c3*cp3*m3*x1*y2+cp3*m2*m3*x1*y2+cp2*cp3*m2*m3*x1*y2+c3*cp1*cp2*x2*y2+c1*cp2*cp3*x2*y2+cp1*cp2*cp3*m1*x2*y2+cp1*cp2*cp3*m2*x2*y2+c1*cp1*cp3*y1*y2+c2*cp1*cp3*y1*y2+c1*cp1*cp2*cp3*y1*y2+c2*cp1*cp2*cp3*y1*y2+c3*cp1*cp2*cp3*y1*y2+c3*cp2*m1*y1*y2+c2*cp3*m1*y1*y2+c3*cp3*m1*y1*y2+cp1*cp3*m1*y1*y2+cp1*cp2*cp3*m1*y1*y2+c3*cp2*m2*y1*y2+c2*cp3*m2*y1*y2+c3*cp3*m2*y1*y2+cp1*cp3*m2*y1*y2+cp2*cp3*m2*y1*y2+cp1*cp2*cp3*m2*y1*y2+cp3*m1*m2*y1*y2+cp2*cp3*m1*m2*y1*y2+cp2*m3*y1*y2+c2*cp2*m3*y1*y2+c3*cp2*m3*y1*y2+cp3*m3*y1*y2+c2*cp3*m3*y1*y2+c3*cp3*m3*y1*y2+cp3*m2*m3*y1*y2+cp2*cp3*m2*m3*y1*y2+c1*c2*cp1*y3+c1*c2*c3*cp1*y3+c1*c2*cp2*y3+c1*c2*cp1*cp2*y3+c2*c3*cp1*cp2*y3+c2*cp1*cp2*cp3*y3+c1*c2*m1*y3+c1*c2*c3*m1*y3+c2*cp1*m1*y3+c1*c2*cp1*m1*y3+c2*c3*cp1*m1*y3+c1*c2*cp2*m1*y3+c2*cp1*cp2*m1*y3+c2*c3*cp1*cp2*m1*y3+c2*cp1*cp3*m1*y3+c1*cp1*m2*y3+c2*cp1*m2*y3+c1*cp2*m2*y3+c1*c3*cp1*cp2*m2*y3+c2*c3*cp1*cp2*m2*y3+c1*c2*cp3*m2*y3+c2*cp1*cp3*m2*y3+c1*c3*cp2*cp3*m2*y3+c1*cp1*cp2*cp3*m2*y3+c3*cp1*cp2*cp3*m2*y3+c1*c3*m1*m2*y3+c2*c3*m1*m2*y3+cp1*m1*m2*y3+c1*c3*cp1*m1*m2*y3+c2*c3*cp1*m1*m2*y3+c1*c3*cp2*m1*m2*y3+c2*c3*cp2*m1*m2*y3+cp1*cp2*m1*m2*y3+c1*cp3*m1*m2*y3+c2*cp1*cp3*m1*m2*y3+c2*cp2*cp3*m1*m2*y3+cp1*cp2*cp3*m1*m2*y3+c3*cp1*cp2*cp3*m1*m2*y3+c1*c2*cp3*m3*y3+c1*m2*m3*y3+c1*cp1*m2*m3*y3+c2*cp1*m2*m3*y3+c3*cp1*m2*m3*y3+c1*cp2*m2*m3*y3+cp1*cp2*m2*m3*y3+c1*cp1*cp2*m2*m3*y3+c2*cp1*cp2*m2*m3*y3+c3*cp1*cp2*m2*m3*y3+cp1*cp2*cp3*m2*m3*y3+c1*cp1*cp2*cp3*m2*m3*y3+c2*cp1*cp2*cp3*m2*m3*y3+c3*cp1*cp2*cp3*m2*m3*y3+cp3*m1*m2*m3*y3+c3*cp3*m1*m2*m3*y3+cp1*cp3*m1*m2*m3*y3+cp1*cp2*cp3*m1*m2*m3*y3+c1*c2*x1*y3+c2*c3*x1*y3+c1*c2*cp2*x1*y3+c1*c3*cp2*x1*y3+cp1*cp2*cp3*x1*y3+c3*cp2*m1*x1*y3+c2*cp3*m1*x1*y3+c2*cp2*cp3*m1*x1*y3+c3*cp2*cp3*m1*x1*y3+c1*cp3*m2*x1*y3+c2*cp3*m2*x1*y3+c1*cp2*cp3*m2*x1*y3+cp3*m1*m2*x1*y3+cp2*cp3*m1*m2*x1*y3+c2*cp3*m3*x1*y3+cp3*m2*m3*x1*y3+c1*x2*y3+c1*c3*x2*y3+cp1*x2*y3+c1*cp1*x2*y3+c2*cp1*x2*y3+c3*cp1*x2*y3+c1*c3*cp1*x2*y3+c2*c3*cp1*x2*y3+c1*cp2*x2*y3+cp1*cp2*x2*y3+c1*cp1*cp2*x2*y3+c2*cp1*cp2*x2*y3+c3*cp1*cp2*x2*y3+c1*cp3*x2*y3+cp1*cp3*x2*y3+c1*cp2*cp3*x2*y3+cp1*cp2*cp3*x2*y3+c3*cp2*m1*x2*y3+c3*cp1*cp2*m1*x2*y3+c3*cp3*m1*x2*y3+cp1*cp3*m1*x2*y3+cp1*cp2*cp3*m1*x2*y3+cp1*cp3*m2*x2*y3+cp1*cp2*cp3*m2*x2*y3+cp1*cp2*x3*y3+c1*cp1*cp2*x3*y3+c2*cp1*cp2*x3*y3+c3*cp1*cp2*x3*y3+c1*cp2*cp3*x3*y3+cp1*cp2*m1*x3*y3+cp1*cp2*cp3*m1*x3*y3+cp1*cp2*cp3*m2*x3*y3+c2*cp3*m1*y1*y3+c2*cp2*cp3*m1*y1*y3+c3*cp2*cp3*m1*y1*y3+c2*cp3*m2*y1*y3+cp3*m1*m2*y1*y3+cp2*cp3*m1*m2*y1*y3+c2*cp3*m3*y1*y3+cp3*m2*m3*y1*y3+c1*c3*cp1*y2*y3+c2*c3*cp1*y2*y3+cp1*cp2*cp3*y2*y3+c3*cp1*cp2*m1*y2*y3+c3*cp3*m1*y2*y3;
end;
#####################################################################
#Space Group No. 118 (P-4n2)
#####################################################################
Acpin118:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return cp1;
end;
#####################################################################
Amin118:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Axyzin118:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return x1+y1+z1;
end;
#####################################################################
Bdeltain118:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
CGAPin118:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c1*c2*c3*cp2+c1*c3*cp1*cp2+c1*c2*c3*cp1*cp2+c1*cp2*cp3+c1*c2*cp2*cp3+c1*c3*cp2*cp3+c1*c2*cp1*cp2*cp3+c3*cp1*cp2*cp3+c1*c2*c3*cp1*cp2*cp3+c1*c2*c3*cp2*m1+c3*cp1*cp2*m1+c1*c2*cp3*m1+c1*c2*cp1*cp3*m1+c1*c3*cp2*cp3*m1+c1*c2*c3*cp2*cp3*m1+c1*c2*cp1*cp2*cp3*m1+c1*c3*cp1*m2+c1*c2*c3*cp1*m2+c1*c3*cp2*m2+c1*c2*c3*cp2*m2+c3*cp1*cp2*m2+c1*c2*cp1*cp3*m2+c1*c3*cp1*cp3*m2+c1*c2*c3*cp1*cp3*m2+c2*cp1*cp2*cp3*m2+c1*c2*cp1*cp2*cp3*m2+c3*cp1*cp2*cp3*m2+c1*c3*cp1*cp2*cp3*m2+c1*c3*m1*m2+c1*c2*c3*m1*m2+c3*cp1*m1*m2+c1*c3*cp1*m1*m2+c1*c3*cp1*cp2*m1*m2+c1*c2*cp3*m1*m2+c1*c3*cp3*m1*m2+c2*c3*cp3*m1*m2+c1*c2*c3*cp3*m1*m2+cp1*cp3*m1*m2+c1*cp1*cp3*m1*m2+c2*cp1*cp3*m1*m2+c3*cp1*cp3*m1*m2+cp2*cp3*m1*m2+c1*cp2*cp3*m1*m2+c1*c2*cp2*cp3*m1*m2+c1*c3*cp2*cp3*m1*m2+c2*c3*cp2*cp3*m1*m2+c1*cp1*cp2*cp3*m1*m2+c3*cp1*cp2*cp3*m1*m2+c1*c3*cp1*cp2*cp3*m1*m2+c1*c2*cp1*m3+c1*c2*c3*cp1*m3+c1*cp2*m3+c1*c2*cp2*m3+c1*c3*cp2*m3+c1*c2*c3*cp2*m3+c1*cp1*cp2*m3+c2*cp1*cp2*m3+c3*cp1*cp2*m3+c1*c3*cp1*cp2*m3+c2*c3*cp1*cp2*m3+c1*c2*cp3*m3+c1*cp2*cp3*m3+c1*c2*cp2*cp3*m3+c1*c3*cp2*cp3*m3+c1*c2*c3*m1*m3+c2*cp1*m1*m3+c1*c2*cp1*m1*m3+c1*c2*cp2*m1*m3+cp1*cp2*m1*m3+c3*cp1*cp2*m1*m3+c1*c2*cp3*m1*m3+c2*c3*cp1*cp3*m1*m3+c1*cp1*cp2*cp3*m1*m3+c1*m2*m3+c1*c2*m2*m3+c1*c3*m2*m3+c1*c2*c3*m2*m3+c1*c2*cp1*m2*m3+c3*cp1*m2*m3+c1*c2*cp2*m2*m3+c1*c3*cp2*m2*m3+c1*cp1*cp2*m2*m3+c2*cp1*cp2*m2*m3+c1*c2*cp1*cp2*m2*m3+c1*c3*cp1*cp2*m2*m3+cp1*cp3*m2*m3+c2*cp1*cp3*m2*m3+c1*c2*cp1*cp3*m2*m3+c1*c2*cp2*cp3*m2*m3+c1*cp1*cp2*cp3*m2*m3+c1*c3*cp1*cp2*cp3*m2*m3+c2*c3*cp1*cp2*cp3*m2*m3+c1*c2*m1*m2*m3+cp1*m1*m2*m3+c1*cp1*m1*m2*m3+c1*c2*cp1*m1*m2*m3+c3*cp1*m1*m2*m3+c1*cp2*m1*m2*m3+c2*cp2*m1*m2*m3+c1*c2*cp2*m1*m2*m3+c3*cp2*m1*m2*m3+c2*c3*cp2*m1*m2*m3+c1*cp1*cp2*m1*m2*m3+c2*cp1*cp2*m1*m2*m3+c3*cp1*cp2*m1*m2*m3+cp3*m1*m2*m3+c2*cp3*m1*m2*m3+c1*c2*cp3*m1*m2*m3+c3*cp3*m1*m2*m3+c1*c3*cp3*m1*m2*m3+c2*c3*cp3*m1*m2*m3+cp1*cp3*m1*m2*m3+c1*cp1*cp3*m1*m2*m3+c3*cp1*cp3*m1*m2*m3+cp2*cp3*m1*m2*m3+c3*cp2*cp3*m1*m2*m3+cp1*cp2*cp3*m1*m2*m3+c1*cp1*cp2*cp3*m1*m2*m3+c2*c3*cp1*x1+c2*c3*cp2*x1+c1*c2*c3*cp2*x1+c1*c3*cp1*cp2*x1+c2*c3*cp1*cp2*x1+c1*c2*cp1*cp3*x1+c1*c2*cp2*cp3*x1+c3*cp2*cp3*x1+c2*c3*cp2*cp3*x1+c1*cp1*cp2*cp3*x1+c1*c2*cp1*cp2*cp3*x1+c3*cp1*cp2*cp3*x1+c2*c3*cp1*cp2*cp3*x1+c2*c3*m1*x1+c2*c3*cp1*m1*x1+c2*c3*cp2*m1*x1+c1*c3*cp1*cp2*m1*x1+c1*c2*cp3*m1*x1+cp2*cp3*m1*x1+c1*cp2*cp3*m1*x1+c1*c2*cp2*cp3*m1*x1+c3*cp2*cp3*m1*x1+c1*c3*cp2*cp3*m1*x1+cp1*cp2*cp3*m1*x1+c1*cp1*cp2*cp3*m1*x1+c2*cp1*cp2*cp3*m1*x1+c3*cp1*cp2*cp3*m1*x1+c3*m2*x1+c1*c2*c3*m2*x1+c3*cp1*m2*x1+c1*c3*cp1*m2*x1+c1*c3*cp2*m2*x1+c3*cp1*cp2*m2*x1+cp3*m2*x1+c2*cp3*m2*x1+c3*cp3*m2*x1+c1*c3*cp3*m2*x1+cp1*cp3*m2*x1+c2*cp1*cp3*m2*x1+c3*cp1*cp3*m2*x1+c1*c3*cp1*cp3*m2*x1+c2*c3*cp1*cp3*m2*x1+c1*cp2*cp3*m2*x1+c2*cp2*cp3*m2*x1+c2*c3*cp2*cp3*m2*x1+cp1*cp2*cp3*m2*x1+c1*cp1*cp2*cp3*m2*x1+c3*m1*m2*x1+c3*cp1*cp2*m1*m2*x1+c1*cp3*m1*m2*x1+cp1*cp3*m1*m2*x1+c1*cp1*cp3*m1*m2*x1+c2*cp1*cp3*m1*m2*x1+c1*cp1*cp2*cp3*m1*m2*x1+c3*cp1*cp2*cp3*m1*m2*x1+c1*c2*m3*x1+c2*c3*m3*x1+c1*c2*cp1*m3*x1+c2*c3*cp1*m3*x1+c1*c2*cp2*m3*x1+c2*c3*cp2*m3*x1+c1*c2*cp3*m3*x1+c2*c3*cp3*m3*x1+c2*m1*m3*x1+c2*cp1*m1*m3*x1+c2*cp2*m1*m3*x1+c2*cp1*cp2*m1*m3*x1+c2*cp3*m1*m3*x1+c2*cp1*cp3*m1*m3*x1+m2*m3*x1+c3*m2*m3*x1+cp1*m2*m3*x1+c1*cp1*m2*m3*x1+c2*cp1*m2*m3*x1+c1*cp2*m2*m3*x1+c2*cp2*m2*m3*x1+c1*c2*cp2*m2*m3*x1+c1*c3*cp2*m2*m3*x1+cp1*cp2*m2*m3*x1+cp3*m2*m3*x1+c2*cp3*m2*m3*x1+c1*c2*cp3*m2*m3*x1+c1*c3*cp3*m2*m3*x1+c1*cp1*cp3*m2*m3*x1+c3*cp1*cp3*m2*m3*x1+cp2*cp3*m2*m3*x1+c3*cp2*cp3*m2*m3*x1+cp2*m1*m2*m3*x1+cp1*cp2*m1*m2*m3*x1+cp3*m1*m2*m3*x1+cp1*cp3*m1*m2*m3*x1+cp2*cp3*m1*m2*m3*x1+cp1*cp2*cp3*m1*m2*m3*x1+c1*c3*cp1*x2+c2*c3*cp1*x2+c1*c3*cp2*x2+c3*cp1*cp2*x2+c1*c3*cp1*cp2*x2+c1*cp1*cp3*x2+c2*cp1*cp3*x2+c1*c3*cp1*cp3*x2+c1*cp2*cp3*x2+cp1*cp2*cp3*x2+c1*cp1*cp2*cp3*x2+c1*c2*cp1*cp2*cp3*x2+c1*c3*cp1*cp2*cp3*x2+c1*c3*m1*x2+c2*c3*m1*x2+c2*c3*cp1*m1*x2+c3*cp2*m1*x2+c1*c3*cp2*m1*x2+c2*c3*cp2*m1*x2+c2*c3*cp1*cp2*m1*x2+cp3*m1*x2+c1*cp3*m1*x2+c2*cp3*m1*x2+c3*cp3*m1*x2+c1*c3*cp3*m1*x2+cp1*cp3*m1*x2+c2*cp1*cp3*m1*x2+c3*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c1*cp2*cp3*m1*x2+c1*c2*cp2*cp3*m1*x2+c3*cp2*cp3*m1*x2+c1*c3*cp2*cp3*m1*x2+c3*cp1*cp2*cp3*m1*x2+c1*c3*cp1*m2*x2+c2*c3*cp1*m2*x2+c1*cp3*m2*x2+c1*c2*cp3*m2*x2+cp1*cp3*m2*x2+c1*cp2*cp3*m2*x2+c1*c3*cp2*cp3*m2*x2+cp1*cp2*cp3*m2*x2+c1*cp1*cp2*cp3*m2*x2+c2*cp1*cp2*cp3*m2*x2+c3*cp1*cp2*cp3*m2*x2+c3*cp1*m1*m2*x2+c3*cp1*cp2*m1*m2*x2+cp1*cp3*m1*m2*x2+c1*cp1*cp3*m1*m2*x2+c2*cp1*cp3*m1*m2*x2+c3*cp1*cp3*m1*m2*x2+cp2*cp3*m1*m2*x2+c1*cp2*cp3*m1*m2*x2+c2*cp1*cp2*cp3*m1*m2*x2+c1*c2*m3*x2+c1*c2*cp2*m3*x2+c1*c2*cp3*m3*x2+m1*m3*x2+c3*m1*m3*x2+cp1*m1*m3*x2+c2*cp1*m1*m3*x2+c3*cp1*m1*m3*x2+c1*cp2*m1*m3*x2+c2*cp2*m1*m3*x2+c1*cp1*cp2*m1*m3*x2+c1*cp3*m1*m3*x2+c2*cp3*m1*m3*x2+c1*cp1*cp3*m1*m3*x2+c1*cp2*m2*m3*x2+cp1*cp2*m2*m3*x2+c1*cp1*cp2*m2*m3*x2+c2*cp1*cp2*m2*m3*x2+c3*cp1*cp2*m2*m3*x2+c1*cp3*m2*m3*x2+c1*cp1*cp3*m2*m3*x2+c2*cp1*cp3*m2*m3*x2+c3*cp1*cp3*m2*m3*x2+c1*cp2*cp3*m2*m3*x2+cp1*cp2*cp3*m2*m3*x2+cp2*m1*m2*m3*x2+cp1*cp2*m1*m2*m3*x2+cp2*cp3*m1*m2*m3*x2+c3*cp1*cp2*x1*x2+c3*cp1*cp3*x1*x2+c1*cp1*cp2*cp3*x1*x2+c2*cp1*cp2*cp3*x1*x2+c3*cp1*cp2*cp3*x1*x2+cp1*cp2*cp3*m1*x1*x2+c1*c2*x3+c1*c2*cp2*x3+c1*c3*cp2*x3+cp1*cp2*x3+c1*c2*cp1*cp2*x3+c2*c3*cp1*cp2*x3+c1*cp2*cp3*x3+c1*c3*cp2*cp3*x3+c1*cp1*cp2*cp3*x3+c2*cp1*cp2*cp3*x3+c3*cp1*cp2*cp3*x3+c2*cp1*m1*x3+c1*c2*cp1*m1*x3+c2*c3*cp1*m1*x3+c2*cp2*m1*x3+c1*c2*cp2*m1*x3+c2*c3*cp2*m1*x3+c2*cp1*cp2*m1*x3+c3*cp1*cp2*m1*x3+c2*cp1*cp3*m1*x3+c2*cp2*cp3*m1*x3+c3*cp1*cp2*cp3*m1*x3+c1*c2*m2*x3+c1*c3*m2*x3+cp1*m2*x3+c1*cp1*m2*x3+c2*cp1*m2*x3+c1*c3*cp1*m2*x3+c2*c3*cp1*m2*x3+c1*cp2*m2*x3+c1*c3*cp2*m2*x3+c1*c3*cp1*cp2*m2*x3+c2*c3*cp1*cp2*m2*x3+c1*c2*cp3*m2*x3+c1*c3*cp3*m2*x3+c3*cp1*cp3*m2*x3+c1*cp2*cp3*m2*x3+c1*c3*cp2*cp3*m2*x3+cp1*cp2*cp3*m2*x3+c1*cp1*cp2*cp3*m2*x3+cp1*m1*m2*x3+c2*cp1*m1*m2*x3+c3*cp1*m1*m2*x3+c3*cp2*m1*m2*x3+cp1*cp3*m1*m2*x3+c1*cp1*cp3*m1*m2*x3+c2*cp1*cp3*m1*m2*x3+c3*cp1*cp3*m1*m2*x3+c1*cp2*cp3*m1*m2*x3+c3*cp1*cp2*cp3*m1*m2*x3+c1*c2*m3*x3+c1*c2*cp3*m3*x3+c2*cp1*m1*m3*x3+cp2*m1*m3*x3+cp1*cp2*m1*m3*x3+c2*cp1*cp3*m1*m3*x3+cp2*cp3*m1*m3*x3+cp1*cp2*cp3*m1*m3*x3+cp1*m2*m3*x3+c3*cp1*m2*m3*x3+c3*cp1*cp3*m2*m3*x3+c1*cp2*cp3*m2*m3*x3+c1*cp1*cp2*cp3*m2*m3*x3+c2*cp1*cp2*cp3*m2*m3*x3+c3*cp1*cp2*cp3*m2*m3*x3+m1*m2*m3*x3+cp3*m1*m2*m3*x3+cp2*x1*x3+c1*c2*cp2*x1*x3+c1*c3*cp2*x1*x3+cp1*cp2*x1*x3+cp2*cp3*x1*x3+cp1*cp2*cp3*x1*x3+c1*cp2*cp3*m2*x1*x3+cp1*cp2*x2*x3+c1*cp1*cp2*x2*x3+c2*cp1*cp2*x2*x3+c3*cp1*cp2*x2*x3+c1*cp2*cp3*x2*x3+cp1*cp2*m1*x2*x3+cp1*cp2*cp3*m1*x2*x3+cp1*cp2*cp3*m2*x2*x3+c2*c3*y1+c2*cp1*cp3*y1+c1*c2*cp1*cp3*y1+c2*cp1*cp2*cp3*y1+c1*c2*cp1*cp2*cp3*y1+c3*cp1*cp2*cp3*y1+c2*c3*cp1*cp2*cp3*y1+c1*c3*cp2*m1*y1+c1*c3*cp1*cp2*m1*y1+c1*c2*cp3*m1*y1+c1*cp2*cp3*m1*y1+c1*c2*cp2*cp3*m1*y1+c1*c3*cp2*cp3*m1*y1+cp1*cp2*cp3*m1*y1+c3*cp1*cp2*cp3*m1*y1+c3*cp1*m2*y1+c1*c3*cp1*m2*y1+c3*cp2*m2*y1+c1*c3*cp2*m2*y1+c1*c2*cp3*m2*y1+c2*c3*cp3*m2*y1+cp1*cp3*m2*y1+c1*c3*cp1*cp3*m2*y1+c2*c3*cp1*cp3*m2*y1+cp2*cp3*m2*y1+c2*cp2*cp3*m2*y1+c1*c3*cp2*cp3*m2*y1+c2*c3*cp2*cp3*m2*y1+c2*cp1*cp2*cp3*m2*y1+c3*m1*m2*y1+c3*cp2*m1*m2*y1+c3*cp1*cp2*m1*m2*y1+cp3*m1*m2*y1+c2*cp3*m1*m2*y1+cp1*cp3*m1*m2*y1+c1*cp1*cp3*m1*m2*y1+c1*cp2*cp3*m1*m2*y1+c2*cp2*cp3*m1*m2*y1+c3*cp2*cp3*m1*m2*y1+c1*cp1*cp2*cp3*m1*m2*y1+c3*cp1*cp2*cp3*m1*m2*y1+c1*c2*cp1*m3*y1+c2*c3*cp1*m3*y1+c1*c2*cp2*m3*y1+c2*c3*cp2*m3*y1+c1*c2*cp3*m3*y1+c2*c3*cp3*m3*y1+c2*cp1*m1*m3*y1+c2*cp1*cp2*m1*m3*y1+c2*cp1*cp3*m1*m3*y1+c1*m2*m3*y1+c2*m2*m3*y1+c3*m2*m3*y1+cp1*m2*m3*y1+c1*cp1*m2*m3*y1+c2*cp1*m2*m3*y1+cp2*m2*m3*y1+c1*cp2*m2*m3*y1+c2*cp2*m2*m3*y1+cp3*m2*m3*y1+c2*cp3*m2*m3*y1+c3*cp3*m2*m3*y1+cp1*cp3*m2*m3*y1+c1*cp1*cp3*m2*m3*y1+c3*cp1*cp3*m2*m3*y1+cp2*cp3*m2*m3*y1+c1*cp2*cp3*m2*m3*y1+c3*cp2*cp3*m2*m3*y1+cp1*cp2*m1*m2*m3*y1+cp1*cp3*m1*m2*m3*y1+cp1*cp2*cp3*m1*m2*m3*y1+c3*cp2*x1*y1+c3*cp1*cp2*x1*y1+c2*cp3*x1*y1+c1*cp2*cp3*x1*y1+c2*cp2*cp3*x1*y1+c3*cp2*cp3*x1*y1+cp1*cp2*cp3*m1*x1*y1+cp3*m2*x1*y1+cp1*cp2*cp3*m2*x1*y1+c3*cp3*x2*y1+c3*cp1*cp3*x2*y1+c1*cp2*cp3*x2*y1+c2*cp2*cp3*x2*y1+c3*cp2*cp3*x2*y1+c1*cp1*cp2*cp3*x2*y1+c2*cp1*cp2*cp3*x2*y1+c3*cp1*cp2*cp3*x2*y1+cp2*cp3*m2*x2*y1+cp1*cp2*cp3*m2*x2*y1+c1*c3*cp1*y2+c1*cp1*cp3*y2+c1*c2*cp1*cp3*y2+c1*cp1*cp2*cp3*y2+c1*c2*cp1*cp2*cp3*y2+c1*c3*cp1*cp2*cp3*y2+c1*c3*cp2*m1*y2+c2*c3*cp1*cp2*m1*y2+c1*c2*cp3*m1*y2+c1*cp1*cp3*m1*y2+c1*cp2*cp3*m1*y2+c1*c2*cp2*cp3*m1*y2+c1*c3*cp2*cp3*m1*y2+c1*cp1*cp2*cp3*m1*y2+c2*cp1*cp2*cp3*m1*y2+c1*c3*cp2*m2*y2+c1*c2*cp3*m2*y2+c1*c3*cp2*cp3*m2*y2+c1*cp1*cp2*cp3*m2*y2+c3*m1*m2*y2+c3*cp1*m1*m2*y2+c3*cp2*m1*m2*y2+cp3*m1*m2*y2+c2*cp3*m1*m2*y2+cp1*cp3*m1*m2*y2+c1*cp1*cp3*m1*m2*y2+c1*cp2*cp3*m1*m2*y2+c2*cp2*cp3*m1*m2*y2+c3*cp2*cp3*m1*m2*y2+c2*cp1*cp2*cp3*m1*m2*y2+c1*c2*cp2*m3*y2+c1*c2*cp3*m3*y2+c1*cp1*m1*m3*y2+c2*cp1*m1*m3*y2+c3*cp1*m1*m3*y2+c1*cp1*cp2*m1*m3*y2+c1*cp1*cp3*m1*m3*y2+c1*m2*m3*y2+c1*cp2*m2*m3*y2+c1*cp2*cp3*m2*m3*y2+cp1*cp3*m1*m2*m3*y2+c3*x1*y2+c1*c3*x1*y2+c3*cp1*x1*y2+c3*cp2*x1*y2+c3*cp1*cp2*x1*y2+cp3*x1*y2+c1*cp3*x1*y2+c2*cp3*x1*y2+cp1*cp3*x1*y2+c1*cp1*cp3*x1*y2+c2*cp1*cp3*x1*y2+c1*cp2*cp3*x1*y2+c2*cp2*cp3*x1*y2+c3*cp2*cp3*x1*y2+c1*cp1*cp2*cp3*x1*y2+c2*cp1*cp2*cp3*x1*y2+c3*cp1*cp2*cp3*x1*y2+c1*cp3*m2*x1*y2+c3*cp1*cp2*x2*y2+c1*cp2*cp3*x2*y2+cp1*cp2*cp3*m1*x2*y2+cp1*cp2*cp3*m2*x2*y2+c1*cp1*cp3*y1*y2+c2*cp1*cp3*y1*y2+c1*cp1*cp2*cp3*y1*y2+c2*cp1*cp2*cp3*y1*y2+c3*cp1*cp2*cp3*y1*y2+cp1*cp3*m1*y1*y2+cp1*cp2*cp3*m1*y1*y2+cp1*cp3*m2*y1*y2+cp1*cp2*cp3*m2*y1*y2+c1*c2*cp1*y3+c1*c2*c3*cp1*y3+c1*c2*cp2*y3+c1*c2*cp1*cp2*y3+c2*c3*cp1*cp2*y3+c2*cp1*cp2*cp3*y3+c1*c2*m1*y3+c1*c2*c3*m1*y3+c2*cp1*m1*y3+c1*c2*cp1*m1*y3+c2*c3*cp1*m1*y3+c1*c2*cp2*m1*y3+c2*cp1*cp2*m1*y3+c2*c3*cp1*cp2*m1*y3+c1*cp1*m2*y3+c2*cp1*m2*y3+c1*cp2*m2*y3+c1*c3*cp1*cp2*m2*y3+c2*c3*cp1*cp2*m2*y3+c1*c2*cp3*m2*y3+c1*cp1*cp3*m2*y3+c1*cp2*cp3*m2*y3+c1*c3*cp2*cp3*m2*y3+c1*cp1*cp2*cp3*m2*y3+c3*cp1*cp2*cp3*m2*y3+c1*c3*m1*m2*y3+c2*c3*m1*m2*y3+cp1*m1*m2*y3+c1*c3*cp1*m1*m2*y3+c2*c3*cp1*m1*m2*y3+c1*c3*cp2*m1*m2*y3+c2*c3*cp2*m1*m2*y3+cp1*cp2*m1*m2*y3+c1*cp3*m1*m2*y3+c1*cp1*cp3*m1*m2*y3+c2*cp1*cp3*m1*m2*y3+c1*cp2*cp3*m1*m2*y3+c3*cp1*cp2*cp3*m1*m2*y3+c1*c2*cp3*m3*y3+c2*cp1*cp3*m1*m3*y3+c1*m2*m3*y3+c1*cp1*m2*m3*y3+c2*cp1*m2*m3*y3+c3*cp1*m2*m3*y3+c1*cp2*m2*m3*y3+cp1*cp2*m2*m3*y3+c1*cp1*cp2*m2*m3*y3+c2*cp1*cp2*m2*m3*y3+c3*cp1*cp2*m2*m3*y3+c1*cp1*cp3*m2*m3*y3+c2*cp1*cp3*m2*m3*y3+c1*cp2*cp3*m2*m3*y3+cp1*cp2*cp3*m2*m3*y3+c1*cp1*cp2*cp3*m2*m3*y3+c2*cp1*cp2*cp3*m2*m3*y3+c3*cp1*cp2*cp3*m2*m3*y3+cp2*cp3*m1*m2*m3*y3+c1*c2*x1*y3+c2*c3*x1*y3+c1*c2*cp2*x1*y3+c1*c3*cp2*x1*y3+cp1*cp2*cp3*x1*y3+c3*cp2*m1*x1*y3+c1*cp3*m2*x1*y3+c1*cp2*cp3*m2*x1*y3+c1*x2*y3+c1*c3*x2*y3+cp1*x2*y3+c1*cp1*x2*y3+c2*cp1*x2*y3+c3*cp1*x2*y3+c1*c3*cp1*x2*y3+c2*c3*cp1*x2*y3+c1*cp2*x2*y3+cp1*cp2*x2*y3+c1*cp1*cp2*x2*y3+c2*cp1*cp2*x2*y3+c3*cp1*cp2*x2*y3+c1*cp3*x2*y3+cp1*cp3*x2*y3+c1*cp2*cp3*x2*y3+cp1*cp2*cp3*x2*y3+c3*cp2*m1*x2*y3+c3*cp1*cp2*m1*x2*y3+cp1*cp3*m1*x2*y3+cp1*cp2*cp3*m1*x2*y3+cp1*cp3*m2*x2*y3+cp1*cp2*cp3*m2*x2*y3+cp1*cp2*x3*y3+c1*cp1*cp2*x3*y3+c2*cp1*cp2*x3*y3+c3*cp1*cp2*x3*y3+c1*cp2*cp3*x3*y3+cp1*cp2*m1*x3*y3+cp1*cp2*cp3*m1*x3*y3+cp1*cp2*cp3*m2*x3*y3+c1*c3*cp1*y2*y3+c2*c3*cp1*y2*y3+cp1*cp2*cp3*y2*y3+c3*cp1*cp2*m1*y2*y3+c2*cp3*m2*z1+cp1*cp3*m2*z1+c3*cp1*cp3*m2*z1+c3*cp2*cp3*m2*z1+cp1*cp2*cp3*m2*z1+c3*cp1*cp2*cp3*m2*z1+c2*m3*z1+c2*cp2*m3*z1+c3*cp2*m3*z1+c3*cp1*cp2*m3*z1+c2*cp3*m3*z1+cp2*cp3*m3*z1+c3*cp2*cp3*m3*z1+c3*cp1*cp2*cp3*m3*z1+c3*m2*m3*z1+c3*cp2*m2*m3*z1+c3*cp1*cp2*m2*m3*z1+c3*cp3*m2*m3*z1+cp1*cp3*m2*m3*z1+c3*cp1*cp3*m2*m3*z1+cp2*cp3*m2*m3*z1+cp1*cp2*cp3*m2*m3*z1+cp3*m2*x2*z1+m3*x2*z1+cp2*m3*x2*z1+cp3*m3*x2*z1+m2*x3*z1+cp2*m2*x3*z1+cp1*cp2*m2*x3*z1+cp3*m2*x3*z1+cp2*cp3*m2*x3*z1+cp1*cp2*cp3*m2*x3*z1+cp2*m3*x3*z1+cp1*cp2*m3*x3*z1+cp2*cp3*m3*x3*z1+cp1*cp2*cp3*m3*x3*z1+cp1*cp3*m2*y2*z1+cp1*cp2*m3*y2*z1+cp1*cp3*m3*y2*z1+cp1*cp3*m2*y3*z1+cp2*cp3*m2*y3*z1+cp1*cp2*cp3*m2*y3*z1+cp1*cp2*cp3*m3*y3*z1+cp1*cp3*m3*y3*z2;
end;
#####################################################################
#Space Group No. 119 (I-4m2)
#####################################################################
Acpin119:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return cp1;
end;
#####################################################################
Amin119:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Axyzin119:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return x1+y1+z1;
end;
#####################################################################
Bdeltain119:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
B2in119:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return cp2*(x1+y1+z1)+c1*(x2+cp1*x2+y2+cp1*y2+cp1*z2)+cp1*(y2+m1*z2);
end;
#####################################################################
B3in119:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return x2*z1+cp1*x2*z1+y2*z1+cp1*y2*z1+cp1*x2*z2+cp1*y2*z2+cp1*z1*z2;
end;
#####################################################################
C1in119:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return c2*c3*cp1*x1+c1*c3*cp2*x1+c2*c3*cp2*x1+c2*c3*m1*x1+c3*cp1*cp2*m1*x1+c2*cp3*m1*x1+c1*c3*m2*x1+c2*c3*m2*x1+c1*cp3*m2*x1+c2*cp3*m2*x1+cp1*cp3*m2*x1+c1*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c3*cp2*m1*m2*x1+c1*cp3*m1*m2*x1+cp2*cp3*m1*m2*x1+(1/2)*c2*c3*x1*(1+x1)+(1/2)*c3*m2*x1*(1+x1)+(1/2)*c3*cp1*m2*x1*(1+x1)+(1/2)*c3*cp2*m2*x1*(1+x1)+(1/2)*cp3*m2*x1*(1+x1)+(1/2)*c1*cp3*m2*x1*(1+x1)+(1/2)*cp3*m1*m2*x1*(1+x1)+(1/2)*cp1*cp3*m1*m2*x1*(1+x1)+c3*cp1*x2+c1*c3*cp1*x2+c1*c3*cp2*x2+c3*cp1*cp2*x2+c1*cp3*x2+c1*c2*cp3*x2+c1*c3*cp3*x2+c3*cp1*cp3*x2+c1*c3*m1*x2+c3*cp1*m1*x2+c1*c3*cp2*m1*x2+c3*cp1*cp2*m1*x2+cp3*m1*x2+c1*cp3*m1*x2+c2*cp3*m1*x2+c1*c2*cp3*m1*x2+c1*c3*cp3*m1*x2+c1*cp1*cp3*m1*x2+c3*cp1*cp3*m1*x2+c1*c3*m2*x2+c1*c3*cp1*m2*x2+c1*cp3*m2*x2+cp1*cp3*m2*x2+c1*cp2*cp3*m2*x2+c3*m1*m2*x2+cp1*cp3*m1*m2*x2+c1*cp1*cp3*m1*m2*x2+cp2*cp3*m1*m2*x2+c1*cp2*cp3*m1*m2*x2+c3*x1*x2+c1*c3*x1*x2+c2*c3*x1*x2+c3*cp1*x1*x2+c3*cp2*x1*x2+c3*cp1*cp2*x1*x2+c2*cp3*x1*x2+c3*cp3*x1*x2+c1*c3*cp3*x1*x2+c2*cp1*cp3*x1*x2+c3*cp1*cp3*x1*x2+c1*c3*m1*x1*x2+c3*cp1*m1*x1*x2+c1*c3*cp1*m1*x1*x2+c3*cp2*m1*x1*x2+c1*c3*cp2*m1*x1*x2+cp3*m1*x1*x2+c2*cp3*m1*x1*x2+c1*c2*cp3*m1*x1*x2+c3*cp3*m1*x1*x2+c1*c3*cp3*m1*x1*x2+c3*cp1*cp3*m1*x1*x2+c3*m2*x1*x2+c1*c3*m2*x1*x2+c1*c3*cp1*m2*x1*x2+c3*cp2*m2*x1*x2+c3*cp1*cp2*m2*x1*x2+cp3*m2*x1*x2+c1*cp3*m2*x1*x2+c2*cp1*cp3*m2*x1*x2+cp2*cp3*m2*x1*x2+c1*cp3*m1*m2*x1*x2+cp2*cp3*m1*m2*x1*x2+c1*cp2*cp3*m1*m2*x1*x2+(1/2)*c3*cp1*x2*(1+x2)+(1/2)*c1*c3*cp1*x2*(1+x2)+(1/2)*c1*c3*cp2*x2*(1+x2)+(1/2)*c3*cp1*cp2*x2*(1+x2)+(1/2)*c1*cp3*x2*(1+x2)+(1/2)*c1*c2*cp3*x2*(1+x2)+(1/2)*c1*c3*cp3*x2*(1+x2)+(1/2)*c3*cp1*cp3*x2*(1+x2)+(1/2)*cp3*m1*x2*(1+x2)+(1/2)*cp1*cp3*m1*x2*(1+x2)+(1/2)*c1*cp1*cp3*m1*x2*(1+x2)+(1/2)*cp1*cp3*m2*x2*(1+x2)+(1/2)*c1*cp1*cp3*m2*x2*(1+x2)+(1/2)*c1*cp2*cp3*m2*x2*(1+x2)+(1/2)*cp3*m1*m2*x2*(1+x2)+c1*c2*cp1*x3+c1*c2*cp2*x3+cp1*cp2*x3+c1*cp1*cp2*x3+c1*c2*cp3*x3+c2*m1*x3+c2*c3*m1*x3+cp2*m1*x3+c3*cp2*m1*x3+c2*c3*cp2*m1*x3+c2*cp1*cp2*m1*x3+c2*cp3*m1*x3+c2*c3*cp3*m1*x3+c1*cp2*cp3*m1*x3+c2*cp2*cp3*m1*x3+c3*cp2*cp3*m1*x3+c2*c3*cp2*cp3*m1*x3+c1*m2*x3+cp1*m2*x3+c1*cp1*m2*x3+c2*cp1*m2*x3+c1*c2*cp1*m2*x3+c1*cp2*m2*x3+c1*c2*cp2*m2*x3+cp1*cp2*m2*x3+c1*cp1*cp2*m2*x3+c1*cp3*m2*x3+c1*c2*cp3*m2*x3+m1*m2*x3+c2*m1*m2*x3+c3*m1*m2*x3+c1*cp1*m1*m2*x3+c1*cp2*m1*m2*x3+c2*cp2*m1*m2*x3+c3*cp2*m1*m2*x3+c2*cp3*m1*m2*x3+cp2*cp3*m1*m2*x3+c1*cp2*cp3*m1*m2*x3+c2*cp2*cp3*m1*m2*x3+c3*cp2*cp3*m1*m2*x3+c2*x1*x3+c2*c3*x1*x3+c2*cp1*x1*x3+c1*c2*cp1*x1*x3+c2*cp2*x1*x3+c1*c2*cp2*x1*x3+c1*c3*cp2*x1*x3+c1*cp1*cp2*x1*x3+c2*c3*m1*x1*x3+c2*cp1*m1*x1*x3+c2*c3*cp1*m1*x1*x3+c2*cp2*m1*x1*x3+cp1*cp2*m1*x1*x3+m2*x1*x3+c1*m2*x1*x3+c2*m2*x1*x3+c3*m2*x1*x3+cp1*m2*x1*x3+c1*cp1*m2*x1*x3+c2*cp1*m2*x1*x3+c3*cp1*m2*x1*x3+cp2*m2*x1*x3+c1*cp2*m2*x1*x3+c2*cp2*m2*x1*x3+c3*cp2*m2*x1*x3+c1*cp3*m2*x1*x3+c3*cp3*m2*x1*x3+c1*c3*cp3*m2*x1*x3+c2*c3*cp3*m2*x1*x3+c3*cp1*cp3*m2*x1*x3+c1*cp2*cp3*m2*x1*x3+c3*cp2*cp3*m2*x1*x3+cp1*cp2*m1*m2*x1*x3+c1*cp3*m1*m2*x1*x3+c2*cp1*cp3*m1*m2*x1*x3+c3*cp2*cp3*m1*m2*x1*x3+cp1*x2*x3+c2*cp1*x2*x3+c1*cp2*x2*x3+c1*cp3*x2*x3+c1*c2*cp3*x2*x3+c1*cp1*cp3*x2*x3+c1*c2*cp2*cp3*x2*x3+c1*m1*x2*x3+c2*m1*x2*x3+c1*c3*m1*x2*x3+c2*c3*m1*x2*x3+cp2*m1*x2*x3+c2*cp2*m1*x2*x3+c3*cp2*m1*x2*x3+c1*c3*cp2*m1*x2*x3+c2*c3*cp2*m1*x2*x3+cp1*cp2*m1*x2*x3+c1*cp1*cp2*m1*x2*x3+c1*c3*cp1*cp2*m1*x2*x3+c2*cp3*m1*x2*x3+c3*cp3*m1*x2*x3+c2*c3*cp3*m1*x2*x3+cp2*cp3*m1*x2*x3+c1*cp2*cp3*m1*x2*x3+c2*cp2*cp3*m1*x2*x3+c1*c2*cp2*cp3*m1*x2*x3+c1*m2*x2*x3+c1*c3*m2*x2*x3+c1*cp1*m2*x2*x3+c1*c3*cp2*m2*x2*x3+c1*c2*cp1*cp3*m2*x2*x3+c1*c2*cp2*cp3*m2*x2*x3+cp3*m1*m2*x2*x3+c2*cp3*m1*m2*x2*x3+cp2*cp3*m1*m2*x2*x3+c1*cp2*cp3*m1*m2*x2*x3+c2*cp2*cp3*m1*m2*x2*x3+c3*cp2*cp3*m1*m2*x2*x3+c2*c3*x1*x2*x3+cp1*x1*x2*x3+c1*cp1*x1*x2*x3+c2*cp1*x1*x2*x3+c1*c2*cp1*x1*x2*x3+c3*cp1*x1*x2*x3+cp2*x1*x2*x3+c3*cp2*x1*x2*x3+cp1*cp2*x1*x2*x3+c3*cp1*cp2*x1*x2*x3+c2*cp3*x1*x2*x3+cp1*cp3*x1*x2*x3+c1*cp1*cp3*x1*x2*x3+c2*cp1*cp3*x1*x2*x3+cp2*cp3*x1*x2*x3+c2*cp2*cp3*x1*x2*x3+c3*cp2*cp3*x1*x2*x3+c2*cp1*m1*x1*x2*x3+c1*c2*cp1*m1*x1*x2*x3+cp2*m1*x1*x2*x3+c1*cp2*m1*x1*x2*x3+c2*cp2*m1*x1*x2*x3+c1*c2*cp2*m1*x1*x2*x3+cp1*cp2*m1*x1*x2*x3+c2*cp3*m1*x1*x2*x3+c1*c2*cp3*m1*x1*x2*x3+c1*cp1*cp3*m1*x1*x2*x3+cp2*cp3*m1*x1*x2*x3+c1*cp2*cp3*m1*x1*x2*x3+c2*c3*cp1*m2*x1*x2*x3+c1*c3*cp2*m2*x1*x2*x3+cp1*cp2*m2*x1*x2*x3+c2*cp3*m2*x1*x2*x3+c1*c2*cp3*m2*x1*x2*x3+c1*cp1*cp3*m2*x1*x2*x3+c2*cp1*cp3*m2*x1*x2*x3+cp2*cp3*m2*x1*x2*x3+c3*cp1*cp2*m1*m2*x1*x2*x3+c2*cp1*cp3*m1*m2*x1*x2*x3+cp1*m3*x1*x2*x3+cp1*cp2*m3*x1*x2*x3+cp2*cp3*m3*x1*x2*x3+(1/2)*c1*c2*cp1*x3*(1+x3)+(1/2)*c1*c2*cp2*x3*(1+x3)+(1/2)*cp1*cp2*x3*(1+x3)+(1/2)*c1*cp1*cp2*x3*(1+x3)+(1/2)*c1*c2*cp3*x3*(1+x3)+(1/2)*c2*m1*x3*(1+x3)+(1/2)*c2*cp1*m1*x3*(1+x3)+(1/2)*cp2*m1*x3*(1+x3)+(1/2)*c3*cp2*m1*x3*(1+x3)+(1/2)*c2*cp3*m1*x3*(1+x3)+(1/2)*c1*cp2*cp3*m1*x3*(1+x3)+(1/2)*c2*cp2*cp3*m1*x3*(1+x3)+(1/2)*c3*cp2*cp3*m1*x3*(1+x3)+(1/2)*c1*cp1*m2*x3*(1+x3)+(1/2)*c2*cp1*m2*x3*(1+x3)+(1/2)*c1*cp2*m2*x3*(1+x3)+(1/2)*cp2*m1*m2*x3*(1+x3)+(1/2)*cp1*cp2*m1*m2*x3*(1+x3)+(1/2)*cp3*m1*m2*x3*(1+x3)+c2*c3*cp1*y1+c3*cp2*y1+c1*c3*cp2*y1+c2*c3*cp2*y1+c2*c3*m1*y1+c3*cp1*cp2*m1*y1+c2*cp3*m1*y1+c1*c3*m2*y1+c2*c3*m2*y1+cp3*m2*y1+c1*cp3*m2*y1+c2*cp3*m2*y1+c1*cp1*cp3*m2*y1+cp2*cp3*m2*y1+c3*cp2*m1*m2*y1+c1*cp3*m1*m2*y1+cp2*cp3*m1*m2*y1+c2*c3*x1*y1+c3*cp2*x1*y1+c2*cp3*x1*y1+c3*cp1*m2*x1*y1+c3*cp2*m2*x1*y1+cp3*m2*x1*y1+c1*cp3*m2*x1*y1+cp2*cp3*m2*x1*y1+cp1*cp3*m1*m2*x1*y1+c1*c3*x2*y1+c2*c3*x2*y1+c3*cp1*x2*y1+cp3*x2*y1+c1*cp3*x2*y1+c3*cp3*x2*y1+c1*c3*cp3*x2*y1+cp1*cp3*x2*y1+c2*cp1*cp3*x2*y1+c1*c3*m1*x2*y1+c3*cp1*m1*x2*y1+c1*c3*cp1*m1*x2*y1+c1*c3*cp2*m1*x2*y1+cp3*m1*x2*y1+c1*c2*cp3*m1*x2*y1+c1*c3*cp3*m1*x2*y1+c1*cp1*cp3*m1*x2*y1+c3*cp1*cp3*m1*x2*y1+c1*c3*m2*x2*y1+c3*cp1*m2*x2*y1+c1*c3*cp1*m2*x2*y1+c3*cp2*m2*x2*y1+c3*cp1*cp2*m2*x2*y1+c1*cp3*m2*x2*y1+cp1*cp3*m2*x2*y1+c2*cp1*cp3*m2*x2*y1+c1*cp3*m1*m2*x2*y1+cp1*cp3*m1*m2*x2*y1+c1*cp2*cp3*m1*m2*x2*y1+cp3*m1*x1*x2*y1+c1*cp3*m1*x1*x2*y1+cp1*cp3*m1*x1*x2*y1+c3*cp1*m2*x1*x2*y1+cp1*cp3*m2*x1*x2*y1+cp1*cp3*m1*m2*x1*x2*y1+c2*c3*x3*y1+c1*c2*cp1*x3*y1+cp2*x3*y1+c1*cp2*x3*y1+c1*c2*cp2*x3*y1+c3*cp2*x3*y1+c1*c3*cp2*x3*y1+cp1*cp2*x3*y1+c2*cp3*x3*y1+c2*cp1*cp3*x3*y1+c1*cp2*cp3*x3*y1+c2*cp2*cp3*x3*y1+c2*c3*m1*x3*y1+c2*cp1*m1*x3*y1+cp2*m1*x3*y1+c2*cp2*m1*x3*y1+c3*cp2*m1*x3*y1+c1*cp1*cp2*m1*x3*y1+c2*cp1*cp2*m1*x3*y1+c3*cp1*cp2*m1*x3*y1+c2*cp1*cp3*m1*x3*y1+c1*cp2*cp3*m1*x3*y1+c2*cp2*cp3*m1*x3*y1+m2*x3*y1+c1*m2*x3*y1+c2*m2*x3*y1+c1*cp1*m2*x3*y1+c2*cp1*m2*x3*y1+c1*cp2*m2*x3*y1+c2*cp2*m2*x3*y1+cp3*m2*x3*y1+c1*cp3*m2*x3*y1+c1*c3*cp3*m2*x3*y1+c2*c3*cp3*m2*x3*y1+cp1*cp3*m2*x3*y1+c1*cp1*cp3*m2*x3*y1+c2*cp1*cp3*m2*x3*y1+c3*cp1*cp3*m2*x3*y1+c2*cp2*cp3*m2*x3*y1+c3*cp2*cp3*m2*x3*y1+cp1*cp2*m1*m2*x3*y1+c1*cp3*m1*m2*x3*y1+cp1*cp3*m1*m2*x3*y1+cp2*cp3*m1*m2*x3*y1+c3*cp2*cp3*m1*m2*x3*y1+c2*x1*x3*y1+c1*cp2*x1*x3*y1+c2*cp2*x1*x3*y1+c2*cp3*x1*x3*y1+cp2*cp3*x1*x3*y1+cp1*cp2*m1*x1*x3*y1+c3*cp1*m2*x1*x3*y1+c3*cp2*m2*x1*x3*y1+cp3*m2*x1*x3*y1+c1*cp3*m2*x1*x3*y1+c2*cp3*m2*x1*x3*y1+cp1*cp3*m1*m2*x1*x3*y1+c2*x2*x3*y1+c2*c3*x2*x3*y1+c2*cp1*x2*x3*y1+c1*c2*cp1*x2*x3*y1+c3*cp1*x2*x3*y1+c1*cp2*x2*x3*y1+c2*cp2*x2*x3*y1+c3*cp2*x2*x3*y1+c3*cp1*cp2*x2*x3*y1+cp1*cp3*x2*x3*y1+c1*cp1*cp3*x2*x3*y1+c1*cp2*cp3*x2*x3*y1+c2*cp2*cp3*x2*x3*y1+c3*cp2*cp3*x2*x3*y1+c2*m1*x2*x3*y1+c1*c2*cp1*m1*x2*x3*y1+cp2*m1*x2*x3*y1+c1*cp2*m1*x2*x3*y1+c1*c2*cp2*m1*x2*x3*y1+cp1*cp2*m1*x2*x3*y1+c2*cp1*cp2*m1*x2*x3*y1+cp3*m1*x2*x3*y1+c1*cp3*m1*x2*x3*y1+c1*c2*cp3*m1*x2*x3*y1+c1*cp1*cp3*m1*x2*x3*y1+c2*cp1*cp3*m1*x2*x3*y1+cp2*cp3*m1*x2*x3*y1+c1*cp2*cp3*m1*x2*x3*y1+c2*c3*cp1*m2*x2*x3*y1+c3*cp2*m2*x2*x3*y1+c1*c3*cp2*m2*x2*x3*y1+cp1*cp2*m2*x2*x3*y1+cp3*m2*x2*x3*y1+c1*cp3*m2*x2*x3*y1+c1*c2*cp3*m2*x2*x3*y1+c1*cp1*cp3*m2*x2*x3*y1+c2*cp1*cp3*m2*x2*x3*y1+cp2*cp3*m2*x2*x3*y1+c3*cp1*cp2*m1*m2*x2*x3*y1+c2*cp1*cp3*m1*m2*x2*x3*y1+cp1*m3*x2*x3*y1+cp1*cp2*m3*x2*x3*y1+cp2*cp3*m3*x2*x3*y1+(1/2)*c2*c3*y1*(1+y1)+(1/2)*c3*m2*y1*(1+y1)+(1/2)*c3*cp1*m2*y1*(1+y1)+(1/2)*c3*cp2*m2*y1*(1+y1)+(1/2)*cp3*m2*y1*(1+y1)+(1/2)*c1*cp3*m2*y1*(1+y1)+(1/2)*cp3*m1*m2*y1*(1+y1)+(1/2)*cp1*cp3*m1*m2*y1*(1+y1)+c1*c3*cp1*y2+c1*c3*cp2*y2+c3*cp1*cp2*y2+c1*cp3*y2+c1*c2*cp3*y2+c1*c3*cp3*y2+c3*cp1*cp3*y2+c1*c3*m1*y2+c3*cp1*m1*y2+c1*c3*cp2*m1*y2+c3*cp1*cp2*m1*y2+c2*cp3*m1*y2+c1*c2*cp3*m1*y2+c1*c3*cp3*m1*y2+cp1*cp3*m1*y2+c1*cp1*cp3*m1*y2+c3*cp1*cp3*m1*y2+c1*c3*m2*y2+c3*cp1*m2*y2+c1*c3*cp1*m2*y2+c1*cp3*m2*y2+cp1*cp3*m2*y2+c1*cp2*cp3*m2*y2+c3*m1*m2*y2+c1*cp1*cp3*m1*m2*y2+cp2*cp3*m1*m2*y2+c1*cp2*cp3*m1*m2*y2+c1*c3*x1*y2+c2*c3*x1*y2+c3*cp1*x1*y2+c3*cp2*x1*y2+c3*cp1*cp2*x1*y2+cp3*x1*y2+c2*cp3*x1*y2+c1*c3*cp3*x1*y2+cp1*cp3*x1*y2+c2*cp1*cp3*x1*y2+c3*cp1*cp3*x1*y2+c1*c3*m1*x1*y2+c3*cp1*m1*x1*y2+c1*c3*cp1*m1*x1*y2+c1*c3*cp2*m1*x1*y2+cp3*m1*x1*y2+c1*cp3*m1*x1*y2+c1*c2*cp3*m1*x1*y2+c1*c3*cp3*m1*x1*y2+c3*cp1*cp3*m1*x1*y2+c1*c3*m2*x1*y2+c3*cp1*m2*x1*y2+c1*c3*cp1*m2*x1*y2+c3*cp2*m2*x1*y2+c3*cp1*cp2*m2*x1*y2+cp3*m2*x1*y2+c1*cp3*m2*x1*y2+cp1*cp3*m2*x1*y2+c2*cp1*cp3*m2*x1*y2+cp2*cp3*m2*x1*y2+c1*cp3*m1*m2*x1*y2+cp1*cp3*m1*m2*x1*y2+c1*cp2*cp3*m1*m2*x1*y2+c1*c3*cp1*x2*y2+c1*c3*cp2*x2*y2+c1*c2*cp3*x2*y2+c1*c3*cp3*x2*y2+c1*cp1*cp3*m2*x2*y2+c1*cp2*cp3*m2*x2*y2+c3*x1*x2*y2+cp3*x1*x2*y2+cp3*m1*x1*x2*y2+c3*cp1*m2*x1*x2*y2+cp3*m2*x1*x2*y2+cp1*cp3*m2*x1*x2*y2+cp1*cp3*m1*m2*x1*x2*y2+cp1*x3*y2+c1*cp1*x3*y2+c3*cp1*x3*y2+c2*c3*cp1*x3*y2+cp1*cp2*x3*y2+c1*cp1*cp2*x3*y2+c2*cp1*cp2*x3*y2+c1*cp3*x3*y2+c1*c2*cp3*x3*y2+cp1*cp3*x3*y2+c1*cp1*cp3*x3*y2+c1*cp2*cp3*x3*y2+c1*c2*cp2*cp3*x3*y2+c1*m1*x3*y2+c1*c3*m1*x3*y2+c2*c3*m1*x3*y2+cp1*m1*x3*y2+c1*c3*cp2*m1*x3*y2+c2*c3*cp2*m1*x3*y2+cp1*cp2*m1*x3*y2+c1*cp1*cp2*m1*x3*y2+c3*cp1*cp2*m1*x3*y2+c1*c3*cp1*cp2*m1*x3*y2+cp3*m1*x3*y2+c2*c3*cp3*m1*x3*y2+c2*cp2*cp3*m1*x3*y2+c1*c2*cp2*cp3*m1*x3*y2+c3*cp2*cp3*m1*x3*y2+c1*m2*x3*y2+c1*c3*m2*x3*y2+cp1*m2*x3*y2+c1*cp1*m2*x3*y2+c1*c3*cp2*m2*x3*y2+c1*cp1*cp3*m2*x3*y2+c1*c2*cp1*cp3*m2*x3*y2+c1*cp2*cp3*m2*x3*y2+c1*c2*cp2*cp3*m2*x3*y2+c2*cp3*m1*m2*x3*y2+cp2*cp3*m1*m2*x3*y2+c1*cp2*cp3*m1*m2*x3*y2+c2*cp2*cp3*m1*m2*x3*y2+c3*cp2*cp3*m1*m2*x3*y2+x1*x3*y2+c2*x1*x3*y2+c3*x1*x3*y2+c2*c3*x1*x3*y2+cp1*x1*x3*y2+c2*cp1*x1*x3*y2+c1*c2*cp1*x1*x3*y2+c3*cp1*x1*x3*y2+c3*cp2*x1*x3*y2+c3*cp1*cp2*x1*x3*y2+cp3*x1*x3*y2+c2*cp3*x1*x3*y2+cp1*cp3*x1*x3*y2+c1*cp1*cp3*x1*x3*y2+c2*cp1*cp3*x1*x3*y2+c2*cp2*cp3*x1*x3*y2+c3*cp2*cp3*x1*x3*y2+c1*cp1*m1*x1*x3*y2+c1*c2*cp1*m1*x1*x3*y2+c1*c2*cp2*m1*x1*x3*y2+cp1*cp2*m1*x1*x3*y2+c1*cp3*m1*x1*x3*y2+c1*c2*cp3*m1*x1*x3*y2+cp1*cp3*m1*x1*x3*y2+c1*cp1*cp3*m1*x1*x3*y2+c1*cp2*cp3*m1*x1*x3*y2+c3*cp1*m2*x1*x3*y2+c2*c3*cp1*m2*x1*x3*y2+c3*cp2*m2*x1*x3*y2+c1*c3*cp2*m2*x1*x3*y2+cp1*cp2*m2*x1*x3*y2+c1*cp3*m2*x1*x3*y2+c1*c2*cp3*m2*x1*x3*y2+c1*cp1*cp3*m2*x1*x3*y2+c2*cp1*cp3*m2*x1*x3*y2+cp2*cp3*m2*x1*x3*y2+c3*cp1*cp2*m1*m2*x1*x3*y2+cp1*cp3*m1*m2*x1*x3*y2+c2*cp1*cp3*m1*m2*x1*x3*y2+cp1*m3*x1*x3*y2+cp1*cp2*m3*x1*x3*y2+cp2*cp3*m3*x1*x3*y2+cp1*x2*x3*y2+c1*cp1*x2*x3*y2+c2*cp1*x2*x3*y2+c1*cp2*x2*x3*y2+c2*cp1*cp2*x2*x3*y2+c1*cp2*cp3*x2*x3*y2+cp2*m1*x2*x3*y2+c2*cp2*m1*x2*x3*y2+cp3*m1*x2*x3*y2+c1*cp3*m1*x2*x3*y2+c2*cp3*m1*x2*x3*y2+c1*cp3*m2*x2*x3*y2+c3*y1*y2+c1*c3*y1*y2+c2*c3*y1*y2+c3*cp1*y1*y2+cp3*y1*y2+c1*cp3*y1*y2+c1*c3*cp3*y1*y2+cp1*cp3*y1*y2+c2*cp1*cp3*y1*y2+c1*c3*m1*y1*y2+c1*c3*cp1*m1*y1*y2+c3*cp2*m1*y1*y2+c1*c3*cp2*m1*y1*y2+c1*cp3*m1*y1*y2+c2*cp3*m1*y1*y2+c1*c2*cp3*m1*y1*y2+c3*cp3*m1*y1*y2+c1*c3*cp3*m1*y1*y2+c1*cp1*cp3*m1*y1*y2+c3*cp1*cp3*m1*y1*y2+c3*m2*y1*y2+c1*c3*m2*y1*y2+c1*c3*cp1*m2*y1*y2+c3*cp2*m2*y1*y2+c3*cp1*cp2*m2*y1*y2+c1*cp3*m2*y1*y2+c2*cp1*cp3*m2*y1*y2+c1*cp3*m1*m2*y1*y2+cp1*cp3*m1*m2*y1*y2+cp2*cp3*m1*m2*y1*y2+c1*cp2*cp3*m1*m2*y1*y2+cp3*x1*y1*y2+c1*cp3*m1*x1*y1*y2+cp1*cp3*m1*x1*y1*y2+c3*cp1*m2*x1*y1*y2+cp1*cp3*m2*x1*y1*y2+cp1*cp3*m1*m2*x1*y1*y2+c3*x2*y1*y2+cp1*cp3*x2*y1*y2+cp3*m1*x2*y1*y2+cp1*cp3*m1*x2*y1*y2+c3*cp1*m2*x2*y1*y2+cp3*m2*x2*y1*y2+cp1*cp3*m2*x2*y1*y2+cp1*cp3*m1*m2*x2*y1*y2+c3*x3*y1*y2+c2*c3*x3*y1*y2+cp1*x3*y1*y2+c1*cp1*x3*y1*y2+c2*cp1*x3*y1*y2+c1*c2*cp1*x3*y1*y2+c3*cp1*x3*y1*y2+cp2*x3*y1*y2+c1*cp2*x3*y1*y2+c2*cp2*x3*y1*y2+c3*cp2*x3*y1*y2+cp1*cp2*x3*y1*y2+c3*cp1*cp2*x3*y1*y2+c1*cp1*cp3*x3*y1*y2+c1*cp2*cp3*x3*y1*y2+c2*cp2*cp3*x3*y1*y2+c3*cp2*cp3*x3*y1*y2+m1*x3*y1*y2+c2*m1*x3*y1*y2+cp1*m1*x3*y1*y2+c1*cp1*m1*x3*y1*y2+c2*cp1*m1*x3*y1*y2+c1*c2*cp1*m1*x3*y1*y2+cp2*m1*x3*y1*y2+c2*cp2*m1*x3*y1*y2+c1*c2*cp2*m1*x3*y1*y2+c2*cp1*cp2*m1*x3*y1*y2+cp3*m1*x3*y1*y2+c2*cp3*m1*x3*y1*y2+c1*c2*cp3*m1*x3*y1*y2+c1*cp1*cp3*m1*x3*y1*y2+c2*cp1*cp3*m1*x3*y1*y2+c1*cp2*cp3*m1*x3*y1*y2+c3*cp1*m2*x3*y1*y2+c2*c3*cp1*m2*x3*y1*y2+c1*c3*cp2*m2*x3*y1*y2+cp1*cp2*m2*x3*y1*y2+cp3*m2*x3*y1*y2+c2*cp3*m2*x3*y1*y2+c1*c2*cp3*m2*x3*y1*y2+c1*cp1*cp3*m2*x3*y1*y2+c2*cp1*cp3*m2*x3*y1*y2+cp2*cp3*m2*x3*y1*y2+c3*cp1*cp2*m1*m2*x3*y1*y2+cp1*cp3*m1*m2*x3*y1*y2+c2*cp1*cp3*m1*m2*x3*y1*y2+cp1*m3*x3*y1*y2+cp1*cp2*m3*x3*y1*y2+cp2*cp3*m3*x3*y1*y2+(1/2)*c1*c3*cp1*y2*(1+y2)+(1/2)*c1*c3*cp2*y2*(1+y2)+(1/2)*c3*cp1*cp2*y2*(1+y2)+(1/2)*c1*cp3*y2*(1+y2)+(1/2)*c1*c2*cp3*y2*(1+y2)+(1/2)*c1*c3*cp3*y2*(1+y2)+(1/2)*c3*cp1*cp3*y2*(1+y2)+(1/2)*c1*cp1*cp3*m1*y2*(1+y2)+(1/2)*c1*cp1*cp3*m2*y2*(1+y2)+(1/2)*c1*cp2*cp3*m2*y2*(1+y2)+(1/2)*cp3*m1*m2*y2*(1+y2)+c2*cp1*y3+c1*c2*cp1*y3+c1*c2*cp2*y3+cp1*cp2*y3+c1*cp1*cp2*y3+c1*c2*cp3*y3+c2*c3*m1*y3+c2*cp2*m1*y3+c2*c3*cp2*m1*y3+c2*cp1*cp2*m1*y3+c2*c3*cp3*m1*y3+c1*cp2*cp3*m1*y3+c2*c3*cp2*cp3*m1*y3+c1*m2*y3+c2*cp1*m2*y3+c1*c2*cp1*m2*y3+c1*c2*cp2*m2*y3+cp1*cp2*m2*y3+c1*cp1*cp2*m2*y3+c1*c2*cp3*m2*y3+m1*m2*y3+c2*m1*m2*y3+c3*m1*m2*y3+c1*cp1*m1*m2*y3+c1*cp2*m1*m2*y3+c2*cp2*m1*m2*y3+c3*cp2*m1*m2*y3+cp3*m1*m2*y3+c2*cp3*m1*m2*y3+cp2*cp3*m1*m2*y3+c1*cp2*cp3*m1*m2*y3+c2*cp2*cp3*m1*m2*y3+c3*cp2*cp3*m1*m2*y3+c2*c3*x1*y3+c1*c2*cp1*x1*y3+c1*cp2*x1*y3+c1*c2*cp2*x1*y3+c1*c3*cp2*x1*y3+c1*cp1*cp2*x1*y3+c2*m1*x1*y3+c2*c3*m1*x1*y3+c2*c3*cp1*m1*x1*y3+c2*cp2*m1*x1*y3+c3*cp2*m1*x1*y3+c1*m2*x1*y3+c2*m2*x1*y3+cp1*m2*x1*y3+c1*cp1*m2*x1*y3+c2*cp1*m2*x1*y3+cp2*m2*x1*y3+c1*cp2*m2*x1*y3+c2*cp2*m2*x1*y3+c2*cp3*m2*x1*y3+c1*c3*cp3*m2*x1*y3+c2*c3*cp3*m2*x1*y3+cp1*cp3*m2*x1*y3+c3*cp1*cp3*m2*x1*y3+cp2*cp3*m2*x1*y3+c1*cp2*cp3*m2*x1*y3+c3*cp2*cp3*m2*x1*y3+cp1*cp2*m1*m2*x1*y3+c1*cp3*m1*m2*x1*y3+cp1*cp3*m1*m2*x1*y3+c2*cp1*cp3*m1*m2*x1*y3+cp2*cp3*m1*m2*x1*y3+c3*cp2*cp3*m1*m2*x1*y3+c1*x2*y3+c1*cp1*x2*y3+c2*cp1*x2*y3+c1*cp2*x2*y3+c1*cp3*x2*y3+c1*c2*cp3*x2*y3+c1*cp1*cp3*x2*y3+c1*c2*cp2*cp3*x2*y3+m1*x2*y3+c1*c3*m1*x2*y3+c2*c3*m1*x2*y3+c1*cp1*m1*x2*y3+c1*c3*cp1*m1*x2*y3+cp2*m1*x2*y3+c3*cp2*m1*x2*y3+c2*c3*cp2*m1*x2*y3+cp1*cp2*m1*x2*y3+c1*c3*cp1*cp2*m1*x2*y3+cp3*m1*x2*y3+c2*c3*cp3*m1*x2*y3+c1*cp1*cp3*m1*x2*y3+c1*cp2*cp3*m1*x2*y3+c2*cp2*cp3*m1*x2*y3+c1*c2*cp2*cp3*m1*x2*y3+c1*c3*m2*x2*y3+c1*c3*cp1*m2*x2*y3+c1*c2*cp1*cp3*m2*x2*y3+c1*c2*cp2*cp3*m2*x2*y3+c2*cp3*m1*m2*x2*y3+cp2*cp3*m1*m2*x2*y3+c1*cp2*cp3*m1*m2*x2*y3+c2*cp2*cp3*m1*m2*x2*y3+c3*cp2*cp3*m1*m2*x2*y3+x1*x2*y3+c1*x1*x2*y3+c2*x1*x2*y3+c3*x1*x2*y3+c2*c3*x1*x2*y3+cp1*x1*x2*y3+c2*cp1*x1*x2*y3+c1*c2*cp1*x1*x2*y3+c3*cp1*x1*x2*y3+c3*cp2*x1*x2*y3+c3*cp1*cp2*x1*x2*y3+cp3*x1*x2*y3+c1*cp3*x1*x2*y3+c2*cp3*x1*x2*y3+cp1*cp3*x1*x2*y3+c1*cp1*cp3*x1*x2*y3+c2*cp1*cp3*x1*x2*y3+cp2*cp3*x1*x2*y3+c2*cp2*cp3*x1*x2*y3+c3*cp2*cp3*x1*x2*y3+c1*cp1*m1*x1*x2*y3+c2*cp1*m1*x1*x2*y3+c1*c2*cp1*m1*x1*x2*y3+c2*cp2*m1*x1*x2*y3+c1*c2*cp2*m1*x1*x2*y3+cp1*cp2*m1*x1*x2*y3+cp3*m1*x1*x2*y3+c1*cp3*m1*x1*x2*y3+c2*cp3*m1*x1*x2*y3+c1*c2*cp3*m1*x1*x2*y3+cp1*cp3*m1*x1*x2*y3+c1*cp1*cp3*m1*x1*x2*y3+cp2*cp3*m1*x1*x2*y3+c1*cp2*cp3*m1*x1*x2*y3+c2*cp1*m2*x1*x2*y3+c3*cp1*m2*x1*x2*y3+c2*c3*cp1*m2*x1*x2*y3+c1*cp2*m2*x1*x2*y3+c1*c3*cp2*m2*x1*x2*y3+cp1*cp2*m2*x1*x2*y3+cp3*m2*x1*x2*y3+c1*cp3*m2*x1*x2*y3+c2*cp3*m2*x1*x2*y3+c1*c2*cp3*m2*x1*x2*y3+c1*cp1*cp3*m2*x1*x2*y3+c2*cp1*cp3*m2*x1*x2*y3+cp2*cp3*m2*x1*x2*y3+cp1*cp2*m1*m2*x1*x2*y3+c3*cp1*cp2*m1*m2*x1*x2*y3+cp1*cp3*m1*m2*x1*x2*y3+c2*cp1*cp3*m1*m2*x1*x2*y3+cp1*m3*x1*x2*y3+cp1*cp2*m3*x1*x2*y3+cp2*cp3*m3*x1*x2*y3+c1*c2*cp1*x3*y3+c2*c3*cp1*x3*y3+c1*c2*cp2*x3*y3+c1*c2*cp3*x3*y3+c2*cp1*m1*x3*y3+c3*cp1*cp2*m1*x3*y3+c2*cp2*cp3*m1*x3*y3+c1*cp1*m2*x3*y3+c2*cp1*m2*x3*y3+c1*cp2*m2*x3*y3+c1*cp1*cp3*m2*x3*y3+c1*cp2*cp3*m2*x3*y3+cp2*m1*m2*x3*y3+cp1*cp2*m1*m2*x3*y3+cp2*cp3*m1*m2*x3*y3+c2*x1*x3*y3+c2*cp1*x1*x3*y3+cp2*x1*x3*y3+c1*cp2*x1*x3*y3+c2*cp2*x1*x3*y3+cp1*cp2*x1*x3*y3+cp2*cp3*x1*x3*y3+cp2*m1*x1*x3*y3+cp2*cp3*m1*x1*x3*y3+c1*cp1*m2*x1*x3*y3+c2*cp1*m2*x1*x3*y3+c3*cp1*m2*x1*x3*y3+c1*cp2*m2*x1*x3*y3+c2*cp2*m2*x1*x3*y3+c3*cp2*m2*x1*x3*y3+cp1*cp3*m2*x1*x3*y3+cp2*cp3*m2*x1*x3*y3+cp2*m1*m2*x1*x3*y3+cp1*cp2*m1*m2*x1*x3*y3+cp1*cp3*m1*m2*x1*x3*y3+cp2*cp3*m1*m2*x1*x3*y3+c1*x2*x3*y3+c1*cp1*x2*x3*y3+c1*cp2*x2*x3*y3+c1*cp1*cp2*x2*x3*y3+c1*cp3*x2*x3*y3+c1*cp1*cp3*x2*x3*y3+c1*m1*x2*x3*y3+c1*cp1*m1*x2*x3*y3+cp2*m1*x2*x3*y3+cp3*m1*x2*x3*y3+c1*cp1*cp3*m1*x2*x3*y3+c1*cp2*cp3*m1*x2*x3*y3+c1*m2*x2*x3*y3+c1*cp1*m2*x2*x3*y3+c1*cp1*cp3*m2*x2*x3*y3+c1*cp2*cp3*m2*x2*x3*y3+cp2*m1*m2*x2*x3*y3+cp2*cp3*m1*m2*x2*x3*y3+c2*y1*y3+c2*c3*y1*y3+c2*cp1*y1*y3+c1*c2*cp1*y1*y3+c2*cp2*y1*y3+c1*c2*cp2*y1*y3+c3*cp2*y1*y3+c1*c3*cp2*y1*y3+cp1*cp2*y1*y3+c2*cp3*y1*y3+c2*cp1*cp3*y1*y3+c1*cp2*cp3*y1*y3+c2*cp2*cp3*y1*y3+c2*m1*y1*y3+c2*c3*m1*y1*y3+c2*cp1*m1*y1*y3+cp2*m1*y1*y3+c2*cp2*m1*y1*y3+c3*cp2*m1*y1*y3+cp1*cp2*m1*y1*y3+c1*cp1*cp2*m1*y1*y3+c2*cp1*cp2*m1*y1*y3+c3*cp1*cp2*m1*y1*y3+c2*cp1*cp3*m1*y1*y3+c1*cp2*cp3*m1*y1*y3+c2*cp2*cp3*m1*y1*y3+m2*y1*y3+c1*m2*y1*y3+c2*m2*y1*y3+c3*m2*y1*y3+c1*cp1*m2*y1*y3+c2*cp1*m2*y1*y3+c1*cp2*m2*y1*y3+c2*cp2*m2*y1*y3+c2*cp3*m2*y1*y3+c3*cp3*m2*y1*y3+c1*c3*cp3*m2*y1*y3+c2*c3*cp3*m2*y1*y3+c1*cp1*cp3*m2*y1*y3+c2*cp1*cp3*m2*y1*y3+c3*cp1*cp3*m2*y1*y3+cp2*cp3*m2*y1*y3+c2*cp2*cp3*m2*y1*y3+c3*cp2*cp3*m2*y1*y3+cp1*cp2*m1*m2*y1*y3+c1*cp3*m1*m2*y1*y3+cp1*cp3*m1*m2*y1*y3+c3*cp2*cp3*m1*m2*y1*y3+c2*x1*y1*y3+cp2*x1*y1*y3+c1*cp2*x1*y1*y3+c2*cp2*x1*y1*y3+c2*cp3*x1*y1*y3+cp2*cp3*x1*y1*y3+cp1*cp2*m1*x1*y1*y3+cp1*m2*x1*y1*y3+c3*cp1*m2*x1*y1*y3+cp2*m2*x1*y1*y3+c3*cp2*m2*x1*y1*y3+c1*cp3*m2*x1*y1*y3+c2*cp3*m2*x1*y1*y3+cp1*cp3*m1*m2*x1*y1*y3+x2*y1*y3+c1*x2*y1*y3+c3*x2*y1*y3+c2*c3*x2*y1*y3+c1*cp1*x2*y1*y3+c2*cp1*x2*y1*y3+c1*c2*cp1*x2*y1*y3+c3*cp1*x2*y1*y3+c1*cp2*x2*y1*y3+c2*cp2*x2*y1*y3+c3*cp2*x2*y1*y3+cp1*cp2*x2*y1*y3+c3*cp1*cp2*x2*y1*y3+cp3*x2*y1*y3+c1*cp3*x2*y1*y3+cp1*cp3*x2*y1*y3+c1*cp1*cp3*x2*y1*y3+c1*cp2*cp3*x2*y1*y3+c2*cp2*cp3*x2*y1*y3+c3*cp2*cp3*x2*y1*y3+m1*x2*y1*y3+c2*m1*x2*y1*y3+cp1*m1*x2*y1*y3+c1*cp1*m1*x2*y1*y3+c1*c2*cp1*m1*x2*y1*y3+cp2*m1*x2*y1*y3+c1*c2*cp2*m1*x2*y1*y3+c2*cp1*cp2*m1*x2*y1*y3+cp3*m1*x2*y1*y3+c1*c2*cp3*m1*x2*y1*y3+c1*cp1*cp3*m1*x2*y1*y3+c2*cp1*cp3*m1*x2*y1*y3+cp2*cp3*m1*x2*y1*y3+c1*cp2*cp3*m1*x2*y1*y3+c2*cp1*m2*x2*y1*y3+c3*cp1*m2*x2*y1*y3+c2*c3*cp1*m2*x2*y1*y3+cp2*m2*x2*y1*y3+c1*cp2*m2*x2*y1*y3+c3*cp2*m2*x2*y1*y3+c1*c3*cp2*m2*x2*y1*y3+cp1*cp2*m2*x2*y1*y3+cp3*m2*x2*y1*y3+c1*c2*cp3*m2*x2*y1*y3+c1*cp1*cp3*m2*x2*y1*y3+c2*cp1*cp3*m2*x2*y1*y3+cp2*cp3*m2*x2*y1*y3+cp1*cp2*m1*m2*x2*y1*y3+c3*cp1*cp2*m1*m2*x2*y1*y3+cp1*cp3*m1*m2*x2*y1*y3+c2*cp1*cp3*m1*m2*x2*y1*y3+cp1*m3*x2*y1*y3+cp1*cp2*m3*x2*y1*y3+cp2*cp3*m3*x2*y1*y3+c2*x3*y1*y3+c2*cp1*x3*y1*y3+c1*cp2*x3*y1*y3+c2*cp2*x3*y1*y3+cp1*cp2*x3*y1*y3+cp2*cp3*x3*y1*y3+cp2*m1*x3*y1*y3+cp1*cp2*m1*x3*y1*y3+m2*x3*y1*y3+cp1*m2*x3*y1*y3+c1*cp1*m2*x3*y1*y3+c2*cp1*m2*x3*y1*y3+c3*cp1*m2*x3*y1*y3+cp2*m2*x3*y1*y3+c1*cp2*m2*x3*y1*y3+c2*cp2*m2*x3*y1*y3+c3*cp2*m2*x3*y1*y3+cp2*m1*m2*x3*y1*y3+cp1*cp2*m1*m2*x3*y1*y3+cp1*cp3*m1*m2*x3*y1*y3+cp2*cp3*m1*m2*x3*y1*y3+c1*y2*y3+c2*cp1*y2*y3+c2*c3*cp1*y2*y3+c1*cp1*cp2*y2*y3+c2*cp1*cp2*y2*y3+c1*cp3*y2*y3+c1*c2*cp3*y2*y3+cp1*cp3*y2*y3+c1*cp1*cp3*y2*y3+c1*cp2*cp3*y2*y3+c1*c2*cp2*cp3*y2*y3+c2*m1*y2*y3+c1*c3*m1*y2*y3+c2*c3*m1*y2*y3+c1*cp1*m1*y2*y3+c3*cp1*m1*y2*y3+c1*c3*cp1*m1*y2*y3+cp2*m1*y2*y3+c2*cp2*m1*y2*y3+c3*cp2*m1*y2*y3+c2*c3*cp2*m1*y2*y3+c3*cp1*cp2*m1*y2*y3+c1*c3*cp1*cp2*m1*y2*y3+c2*cp3*m1*y2*y3+c3*cp3*m1*y2*y3+c2*c3*cp3*m1*y2*y3+cp1*cp3*m1*y2*y3+c1*cp1*cp3*m1*y2*y3+cp2*cp3*m1*y2*y3+c2*cp2*cp3*m1*y2*y3+c1*c2*cp2*cp3*m1*y2*y3+c3*cp2*cp3*m1*y2*y3+c1*c3*m2*y2*y3+c3*cp1*m2*y2*y3+c1*c3*cp1*m2*y2*y3+cp1*cp3*m2*y2*y3+c1*cp1*cp3*m2*y2*y3+c1*c2*cp1*cp3*m2*y2*y3+c1*cp2*cp3*m2*y2*y3+c1*c2*cp2*cp3*m2*y2*y3+cp3*m1*m2*y2*y3+c2*cp3*m1*m2*y2*y3+cp2*cp3*m1*m2*y2*y3+c1*cp2*cp3*m1*m2*y2*y3+c2*cp2*cp3*m1*m2*y2*y3+c3*cp2*cp3*m1*m2*y2*y3+x1*y2*y3+c1*x1*y2*y3+c2*c3*x1*y2*y3+cp1*x1*y2*y3+c1*cp1*x1*y2*y3+c2*cp1*x1*y2*y3+c1*c2*cp1*x1*y2*y3+c3*cp1*x1*y2*y3+cp2*x1*y2*y3+c3*cp2*x1*y2*y3+cp1*cp2*x1*y2*y3+c3*cp1*cp2*x1*y2*y3+cp3*x1*y2*y3+c1*cp3*x1*y2*y3+c2*cp3*x1*y2*y3+cp1*cp3*x1*y2*y3+c1*cp1*cp3*x1*y2*y3+c2*cp1*cp3*x1*y2*y3+c2*cp2*cp3*x1*y2*y3+c3*cp2*cp3*x1*y2*y3+cp1*m1*x1*y2*y3+c1*c2*cp1*m1*x1*y2*y3+c1*cp2*m1*x1*y2*y3+c1*c2*cp2*m1*x1*y2*y3+cp1*cp2*m1*x1*y2*y3+c1*c2*cp3*m1*x1*y2*y3+c1*cp1*cp3*m1*x1*y2*y3+c1*cp2*cp3*m1*x1*y2*y3+cp1*m2*x1*y2*y3+c2*cp1*m2*x1*y2*y3+c2*c3*cp1*m2*x1*y2*y3+cp2*m2*x1*y2*y3+c1*cp2*m2*x1*y2*y3+c3*cp2*m2*x1*y2*y3+c1*c3*cp2*m2*x1*y2*y3+cp1*cp2*m2*x1*y2*y3+c1*c2*cp3*m2*x1*y2*y3+c1*cp1*cp3*m2*x1*y2*y3+c2*cp1*cp3*m2*x1*y2*y3+cp2*cp3*m2*x1*y2*y3+cp1*cp2*m1*m2*x1*y2*y3+c3*cp1*cp2*m1*m2*x1*y2*y3+c2*cp1*cp3*m1*m2*x1*y2*y3+cp1*m3*x1*y2*y3+cp1*cp2*m3*x1*y2*y3+cp2*cp3*m3*x1*y2*y3+c1*cp1*x2*y2*y3+c2*cp1*x2*y2*y3+c1*cp2*x2*y2*y3+cp1*cp2*x2*y2*y3+c2*cp1*cp2*x2*y2*y3+cp1*cp3*x2*y2*y3+c1*cp2*cp3*x2*y2*y3+c2*cp2*m1*x2*y2*y3+c1*cp3*m1*x2*y2*y3+c2*cp3*m1*x2*y2*y3+c1*cp3*m2*x2*y2*y3+c1*x3*y2*y3+cp1*x3*y2*y3+c1*cp1*x3*y2*y3+c1*cp2*x3*y2*y3+c1*cp1*cp2*x3*y2*y3+c1*cp3*x3*y2*y3+cp1*cp3*x3*y2*y3+c1*cp1*cp3*x3*y2*y3+m1*x3*y2*y3+c1*m1*x3*y2*y3+cp1*m1*x3*y2*y3+c1*cp1*m1*x3*y2*y3+cp3*m1*x3*y2*y3+cp1*cp3*m1*x3*y2*y3+c1*cp1*cp3*m1*x3*y2*y3+cp2*cp3*m1*x3*y2*y3+c1*cp2*cp3*m1*x3*y2*y3+c1*m2*x3*y2*y3+cp1*m2*x3*y2*y3+c1*cp1*m2*x3*y2*y3+cp1*cp3*m2*x3*y2*y3+c1*cp1*cp3*m2*x3*y2*y3+c1*cp2*cp3*m2*x3*y2*y3+cp2*m1*m2*x3*y2*y3+cp2*cp3*m1*m2*x3*y2*y3+c1*y1*y2*y3+c2*y1*y2*y3+c2*c3*y1*y2*y3+cp1*y1*y2*y3+c2*cp1*y1*y2*y3+c1*c2*cp1*y1*y2*y3+c3*cp1*y1*y2*y3+cp2*y1*y2*y3+c1*cp2*y1*y2*y3+c2*cp2*y1*y2*y3+c3*cp2*y1*y2*y3+c3*cp1*cp2*y1*y2*y3+c1*cp3*y1*y2*y3+c1*cp1*cp3*y1*y2*y3+c1*cp2*cp3*y1*y2*y3+c2*cp2*cp3*y1*y2*y3+c3*cp2*cp3*y1*y2*y3+c2*m1*y1*y2*y3+cp1*m1*y1*y2*y3+c2*cp1*m1*y1*y2*y3+c1*c2*cp1*m1*y1*y2*y3+c1*cp2*m1*y1*y2*y3+c2*cp2*m1*y1*y2*y3+c1*c2*cp2*m1*y1*y2*y3+cp1*cp2*m1*y1*y2*y3+c2*cp1*cp2*m1*y1*y2*y3+c1*cp3*m1*y1*y2*y3+c2*cp3*m1*y1*y2*y3+c1*c2*cp3*m1*y1*y2*y3+c1*cp1*cp3*m1*y1*y2*y3+c2*cp1*cp3*m1*y1*y2*y3+c1*cp2*cp3*m1*y1*y2*y3+cp1*m2*y1*y2*y3+c2*cp1*m2*y1*y2*y3+c2*c3*cp1*m2*y1*y2*y3+c1*cp2*m2*y1*y2*y3+c1*c3*cp2*m2*y1*y2*y3+cp1*cp2*m2*y1*y2*y3+c1*cp3*m2*y1*y2*y3+c2*cp3*m2*y1*y2*y3+c1*c2*cp3*m2*y1*y2*y3+c1*cp1*cp3*m2*y1*y2*y3+c2*cp1*cp3*m2*y1*y2*y3+cp2*cp3*m2*y1*y2*y3+cp1*cp2*m1*m2*y1*y2*y3+c3*cp1*cp2*m1*m2*y1*y2*y3+c2*cp1*cp3*m1*m2*y1*y2*y3+cp1*m3*y1*y2*y3+cp1*cp2*m3*y1*y2*y3+cp2*cp3*m3*y1*y2*y3+(1/2)*c2*cp1*y3*(1+y3)+(1/2)*c1*c2*cp1*y3*(1+y3)+(1/2)*c1*c2*cp2*y3*(1+y3)+(1/2)*cp1*cp2*y3*(1+y3)+(1/2)*c1*cp1*cp2*y3*(1+y3)+(1/2)*c1*c2*cp3*y3*(1+y3)+(1/2)*c2*m1*y3*(1+y3)+(1/2)*c2*cp1*m1*y3*(1+y3)+(1/2)*c3*cp2*m1*y3*(1+y3)+(1/2)*cp1*cp2*m1*y3*(1+y3)+(1/2)*c2*cp3*m1*y3*(1+y3)+(1/2)*cp2*cp3*m1*y3*(1+y3)+(1/2)*c1*cp2*cp3*m1*y3*(1+y3)+(1/2)*c2*cp2*cp3*m1*y3*(1+y3)+(1/2)*c3*cp2*cp3*m1*y3*(1+y3)+(1/2)*c1*cp1*m2*y3*(1+y3)+(1/2)*c2*cp1*m2*y3*(1+y3)+(1/2)*c1*cp2*m2*y3*(1+y3)+(1/2)*cp2*m1*m2*y3*(1+y3)+(1/2)*cp1*cp2*m1*m2*y3*(1+y3)+(1/2)*cp3*m1*m2*y3*(1+y3)+c2*c3*cp1*z1+c1*c3*cp2*z1+c2*c3*cp2*z1+c2*c3*m1*z1+c3*cp2*m1*z1+c3*cp1*cp2*m1*z1+c2*cp3*m1*z1+c1*c3*m2*z1+c2*c3*m2*z1+c3*cp1*m2*z1+c3*cp2*m2*z1+c1*cp3*m2*z1+c2*cp3*m2*z1+cp1*cp3*m2*z1+c1*cp1*cp3*m2*z1+cp2*cp3*m2*z1+c3*cp2*m1*m2*z1+c1*cp3*m1*m2*z1+cp1*cp3*m1*m2*z1+cp2*cp3*m1*m2*z1+c2*c3*x1*z1+c3*cp2*m1*x1*z1+c2*cp3*m1*x1*z1+c3*m2*x1*z1+c2*cp3*m2*x1*z1+cp1*cp3*m2*x1*z1+cp2*cp3*m2*x1*z1+cp3*m1*m2*x1*z1+cp2*cp3*m1*m2*x1*z1+c1*c3*x2*z1+c2*c3*x2*z1+c1*c3*cp1*x2*z1+c1*c3*cp2*x2*z1+c2*cp1*cp3*x2*z1+c3*m1*x2*z1+c3*cp1*m1*x2*z1+c1*c3*cp1*m1*x2*z1+c3*cp2*m1*x2*z1+c1*c3*cp2*m1*x2*z1+c1*cp3*m1*x2*z1+c2*cp3*m1*x2*z1+c1*c2*cp3*m1*x2*z1+c1*c3*cp3*m1*x2*z1+c3*cp1*cp3*m1*x2*z1+c3*m2*x2*z1+c1*c3*cp1*m2*x2*z1+c3*cp1*cp2*m2*x2*z1+c2*cp3*m2*x2*z1+c2*cp1*cp3*m2*x2*z1+cp2*cp3*m2*x2*z1+c1*cp3*m1*m2*x2*z1+cp2*cp3*m1*m2*x2*z1+c1*cp2*cp3*m1*m2*x2*z1+c3*x1*x2*z1+c1*cp3*x1*x2*z1+cp1*cp3*x1*x2*z1+cp3*m1*x1*x2*z1+cp1*cp3*m1*x1*x2*z1+c1*c3*m2*x1*x2*z1+cp3*m2*x1*x2*z1+c1*cp3*m2*x1*x2*z1+c1*cp3*m1*m2*x1*x2*z1+m3*x1*x2*z1+c1*c2*x3*z1+c2*c3*x3*z1+c2*cp1*x3*z1+c1*c2*cp1*x3*z1+c1*cp2*x3*z1+c2*cp2*x3*z1+c1*c2*cp2*x3*z1+c1*c3*cp2*x3*z1+c1*cp1*cp2*x3*z1+c2*m1*x3*z1+c2*cp1*m1*x3*z1+c2*c3*cp1*m1*x3*z1+cp2*m1*x3*z1+c2*cp2*m1*x3*z1+cp1*cp2*m1*x3*z1+cp1*m2*x3*z1+c1*cp1*m2*x3*z1+c2*cp1*m2*x3*z1+c3*cp1*m2*x3*z1+cp2*m2*x3*z1+c1*cp2*m2*x3*z1+c2*cp2*m2*x3*z1+c3*cp2*m2*x3*z1+c1*cp3*m2*x3*z1+c1*c3*cp3*m2*x3*z1+c2*c3*cp3*m2*x3*z1+c3*cp1*cp3*m2*x3*z1+c1*cp2*cp3*m2*x3*z1+c3*cp2*cp3*m2*x3*z1+cp2*m1*m2*x3*z1+cp1*cp2*m1*m2*x3*z1+c1*cp3*m1*m2*x3*z1+c2*cp3*m1*m2*x3*z1+c2*cp1*cp3*m1*m2*x3*z1+c3*cp2*cp3*m1*m2*x3*z1+c1*cp2*x1*x3*z1+c3*cp2*x1*x3*z1+c2*cp3*x1*x3*z1+c2*m1*x1*x3*z1+cp2*m1*x1*x3*z1+c1*cp2*m1*x1*x3*z1+c2*cp2*m1*x1*x3*z1+cp1*cp2*m1*x1*x3*z1+c2*cp3*m1*x1*x3*z1+m2*x1*x3*z1+c1*c3*m2*x1*x3*z1+c2*c3*m2*x1*x3*z1+cp2*m2*x1*x3*z1+c1*cp3*m2*x1*x3*z1+c2*cp3*m2*x1*x3*z1+cp1*cp3*m2*x1*x3*z1+c3*cp2*m1*m2*x1*x3*z1+c1*cp3*m1*m2*x1*x3*z1+c2*cp3*m1*m2*x1*x3*z1+cp2*m3*x1*x3*z1+c2*x2*x3*z1+c1*c2*x2*x3*z1+c3*x2*x3*z1+c2*c3*x2*x3*z1+c2*cp1*x2*x3*z1+c3*cp1*x2*x3*z1+c1*cp2*x2*x3*z1+c1*c2*cp2*x2*x3*z1+cp1*cp2*x2*x3*z1+c3*cp1*cp2*x2*x3*z1+c1*cp3*x2*x3*z1+c1*cp1*cp3*x2*x3*z1+c2*cp1*cp3*x2*x3*z1+cp2*cp3*x2*x3*z1+c2*cp2*cp3*x2*x3*z1+c3*cp2*cp3*x2*x3*z1+c2*m1*x2*x3*z1+c1*c2*m1*x2*x3*z1+c2*cp1*m1*x2*x3*z1+c1*c2*cp1*m1*x2*x3*z1+c2*cp2*m1*x2*x3*z1+c1*c2*cp2*m1*x2*x3*z1+cp1*cp2*m1*x2*x3*z1+c1*cp1*cp2*m1*x2*x3*z1+cp3*m1*x2*x3*z1+c1*cp3*m1*x2*x3*z1+c2*cp3*m1*x2*x3*z1+c1*c2*cp3*m1*x2*x3*z1+cp1*cp3*m1*x2*x3*z1+c1*cp1*cp3*m1*x2*x3*z1+cp2*cp3*m1*x2*x3*z1+c1*cp2*cp3*m1*x2*x3*z1+c2*c3*m2*x2*x3*z1+c2*c3*cp1*m2*x2*x3*z1+cp2*m2*x2*x3*z1+c1*c3*cp2*m2*x2*x3*z1+cp1*cp2*m2*x2*x3*z1+cp3*m2*x2*x3*z1+c1*cp3*m2*x2*x3*z1+c1*c2*cp3*m2*x2*x3*z1+cp1*cp3*m2*x2*x3*z1+c1*cp1*cp3*m2*x2*x3*z1+c2*cp1*cp3*m2*x2*x3*z1+cp2*cp3*m2*x2*x3*z1+c3*cp2*m1*m2*x2*x3*z1+c3*cp1*cp2*m1*m2*x2*x3*z1+c2*cp3*m1*m2*x2*x3*z1+c2*cp1*cp3*m1*m2*x2*x3*z1+m3*x2*x3*z1+cp1*m3*x2*x3*z1+cp2*m3*x2*x3*z1+cp1*cp2*m3*x2*x3*z1+cp2*cp3*m3*x2*x3*z1+c2*c3*y1*z1+c3*cp2*y1*z1+c3*cp2*m1*y1*z1+c2*cp3*m1*y1*z1+c3*m2*y1*z1+cp3*m2*y1*z1+c2*cp3*m2*y1*z1+cp2*cp3*m2*y1*z1+cp3*m1*m2*y1*z1+cp2*cp3*m1*m2*y1*z1+c3*m2*x1*y1*z1+cp3*m2*x1*y1*z1+cp3*m1*m2*x1*y1*z1+c3*x2*y1*z1+c1*cp3*x2*y1*z1+cp1*cp3*x2*y1*z1+cp3*m1*x2*y1*z1+c1*cp3*m1*x2*y1*z1+c3*m2*x2*y1*z1+c1*c3*m2*x2*y1*z1+c3*cp1*m2*x2*y1*z1+c1*cp3*m2*x2*y1*z1+cp1*cp3*m2*x2*y1*z1+cp3*m1*m2*x2*y1*z1+c1*cp3*m1*m2*x2*y1*z1+cp1*cp3*m1*m2*x2*y1*z1+m3*x2*y1*z1+c2*x3*y1*z1+c1*cp2*x3*y1*z1+c2*cp2*x3*y1*z1+c3*cp2*x3*y1*z1+cp1*cp2*x3*y1*z1+c2*cp3*x3*y1*z1+c2*m1*x3*y1*z1+c1*cp2*m1*x3*y1*z1+c2*cp2*m1*x3*y1*z1+c2*cp3*m1*x3*y1*z1+cp2*cp3*m1*x3*y1*z1+m2*x3*y1*z1+c3*m2*x3*y1*z1+c1*c3*m2*x3*y1*z1+c2*c3*m2*x3*y1*z1+c3*cp1*m2*x3*y1*z1+cp2*m2*x3*y1*z1+c3*cp2*m2*x3*y1*z1+cp3*m2*x3*y1*z1+cp1*cp3*m2*x3*y1*z1+c3*cp2*m1*m2*x3*y1*z1+cp3*m1*m2*x3*y1*z1+c1*cp3*m1*m2*x3*y1*z1+c2*cp3*m1*m2*x3*y1*z1+cp1*cp3*m1*m2*x3*y1*z1+cp2*m3*x3*y1*z1+c3*y2*z1+c1*c3*y2*z1+c2*c3*y2*z1+c3*cp1*y2*z1+c1*c3*cp1*y2*z1+c3*cp2*y2*z1+c1*c3*cp2*y2*z1+cp1*cp3*y2*z1+c2*cp1*cp3*y2*z1+c3*m1*y2*z1+c3*cp1*m1*y2*z1+c1*c3*cp1*m1*y2*z1+c1*c3*cp2*m1*y2*z1+cp3*m1*y2*z1+c1*c2*cp3*m1*y2*z1+c3*cp3*m1*y2*z1+c1*c3*cp3*m1*y2*z1+c3*cp1*cp3*m1*y2*z1+c3*m2*y2*z1+c3*cp1*m2*y2*z1+c1*c3*cp1*m2*y2*z1+c3*cp1*cp2*m2*y2*z1+c2*cp3*m2*y2*z1+cp1*cp3*m2*y2*z1+c2*cp1*cp3*m2*y2*z1+cp2*cp3*m2*y2*z1+cp3*m1*m2*y2*z1+c1*cp3*m1*m2*y2*z1+cp1*cp3*m1*m2*y2*z1+c1*cp2*cp3*m1*m2*y2*z1+c3*x1*y2*z1+c1*cp3*x1*y2*z1+cp1*cp3*x1*y2*z1+cp1*cp3*m1*x1*y2*z1+c3*m2*x1*y2*z1+c1*c3*m2*x1*y2*z1+c1*cp3*m2*x1*y2*z1+cp3*m1*m2*x1*y2*z1+c1*cp3*m1*m2*x1*y2*z1+m3*x1*y2*z1+c3*x2*y2*z1+cp3*x2*y2*z1+cp3*m1*x2*y2*z1+c3*m2*x2*y2*z1+c3*cp1*m2*x2*y2*z1+cp1*cp3*m2*x2*y2*z1+cp3*m1*m2*x2*y2*z1+cp1*cp3*m1*m2*x2*y2*z1+c1*x3*y2*z1+c1*c2*x3*y2*z1+c2*c3*x3*y2*z1+c3*cp1*x3*y2*z1+c2*cp2*x3*y2*z1+c1*c2*cp2*x3*y2*z1+c3*cp1*cp2*x3*y2*z1+cp3*x3*y2*z1+c1*cp3*x3*y2*z1+c1*cp1*cp3*x3*y2*z1+c2*cp1*cp3*x3*y2*z1+c2*cp2*cp3*x3*y2*z1+c3*cp2*cp3*x3*y2*z1+c1*m1*x3*y2*z1+c1*c2*m1*x3*y2*z1+c1*cp1*m1*x3*y2*z1+c1*c2*cp1*m1*x3*y2*z1+c1*cp2*m1*x3*y2*z1+c1*c2*cp2*m1*x3*y2*z1+c1*cp1*cp2*m1*x3*y2*z1+c1*c2*cp3*m1*x3*y2*z1+c1*cp1*cp3*m1*x3*y2*z1+c1*cp2*cp3*m1*x3*y2*z1+c3*m2*x3*y2*z1+c2*c3*m2*x3*y2*z1+c3*cp1*m2*x3*y2*z1+c2*c3*cp1*m2*x3*y2*z1+cp2*m2*x3*y2*z1+c3*cp2*m2*x3*y2*z1+c1*c3*cp2*m2*x3*y2*z1+cp1*cp2*m2*x3*y2*z1+cp3*m2*x3*y2*z1+c2*cp3*m2*x3*y2*z1+c1*c2*cp3*m2*x3*y2*z1+cp1*cp3*m2*x3*y2*z1+c1*cp1*cp3*m2*x3*y2*z1+c2*cp1*cp3*m2*x3*y2*z1+cp2*cp3*m2*x3*y2*z1+c3*cp2*m1*m2*x3*y2*z1+c3*cp1*cp2*m1*m2*x3*y2*z1+cp3*m1*m2*x3*y2*z1+c2*cp3*m1*m2*x3*y2*z1+cp1*cp3*m1*m2*x3*y2*z1+c2*cp1*cp3*m1*m2*x3*y2*z1+m3*x3*y2*z1+cp1*m3*x3*y2*z1+cp2*m3*x3*y2*z1+cp1*cp2*m3*x3*y2*z1+cp2*cp3*m3*x3*y2*z1+c3*y1*y2*z1+c1*cp3*y1*y2*z1+cp1*cp3*y1*y2*z1+cp3*m1*y1*y2*z1+c1*cp3*m1*y1*y2*z1+c1*c3*m2*y1*y2*z1+c3*cp1*m2*y1*y2*z1+cp3*m2*y1*y2*z1+c1*cp3*m2*y1*y2*z1+cp1*cp3*m2*y1*y2*z1+c1*cp3*m1*m2*y1*y2*z1+cp1*cp3*m1*m2*y1*y2*z1+m3*y1*y2*z1+c1*c2*y3*z1+c2*c3*y3*z1+c1*c2*cp1*y3*z1+c1*c2*cp2*y3*z1+c1*c3*cp2*y3*z1+c1*cp1*cp2*y3*z1+c2*m1*y3*z1+c2*c3*cp1*m1*y3*z1+c2*cp2*m1*y3*z1+c3*cp2*m1*y3*z1+m2*y3*z1+cp1*m2*y3*z1+c1*cp1*m2*y3*z1+c2*cp1*m2*y3*z1+cp2*m2*y3*z1+c1*cp2*m2*y3*z1+c2*cp2*m2*y3*z1+cp3*m2*y3*z1+c2*cp3*m2*y3*z1+c3*cp3*m2*y3*z1+c1*c3*cp3*m2*y3*z1+c2*c3*cp3*m2*y3*z1+cp1*cp3*m2*y3*z1+c3*cp1*cp3*m2*y3*z1+cp2*cp3*m2*y3*z1+c1*cp2*cp3*m2*y3*z1+c3*cp2*cp3*m2*y3*z1+cp2*m1*m2*y3*z1+cp1*cp2*m1*m2*y3*z1+cp3*m1*m2*y3*z1+c1*cp3*m1*m2*y3*z1+c2*cp3*m1*m2*y3*z1+cp1*cp3*m1*m2*y3*z1+c2*cp1*cp3*m1*m2*y3*z1+cp2*cp3*m1*m2*y3*z1+c3*cp2*cp3*m1*m2*y3*z1+cp2*x1*y3*z1+c1*cp2*x1*y3*z1+c3*cp2*x1*y3*z1+c2*cp3*x1*y3*z1+c2*m1*x1*y3*z1+c1*cp2*m1*x1*y3*z1+c2*cp2*m1*x1*y3*z1+cp1*cp2*m1*x1*y3*z1+c2*cp3*m1*x1*y3*z1+m2*x1*y3*z1+c1*m2*x1*y3*z1+c2*m2*x1*y3*z1+c3*m2*x1*y3*z1+c1*c3*m2*x1*y3*z1+c2*c3*m2*x1*y3*z1+cp2*m2*x1*y3*z1+c1*cp3*m2*x1*y3*z1+c2*cp3*m2*x1*y3*z1+cp1*cp3*m2*x1*y3*z1+cp2*m1*m2*x1*y3*z1+c3*cp2*m1*m2*x1*y3*z1+cp3*m1*m2*x1*y3*z1+c1*cp3*m1*m2*x1*y3*z1+c2*cp3*m1*m2*x1*y3*z1+cp2*m3*x1*y3*z1+x2*y3*z1+c1*c2*x2*y3*z1+c2*c3*x2*y3*z1+c2*cp1*x2*y3*z1+c3*cp1*x2*y3*z1+c1*c2*cp2*x2*y3*z1+c3*cp1*cp2*x2*y3*z1+cp3*x2*y3*z1+c1*cp3*x2*y3*z1+c1*cp1*cp3*x2*y3*z1+c2*cp1*cp3*x2*y3*z1+cp2*cp3*x2*y3*z1+c2*cp2*cp3*x2*y3*z1+c3*cp2*cp3*x2*y3*z1+c1*m1*x2*y3*z1+c2*m1*x2*y3*z1+c1*c2*m1*x2*y3*z1+c1*cp1*m1*x2*y3*z1+c2*cp1*m1*x2*y3*z1+c1*c2*cp1*m1*x2*y3*z1+cp2*m1*x2*y3*z1+c1*cp2*m1*x2*y3*z1+c2*cp2*m1*x2*y3*z1+c1*c2*cp2*m1*x2*y3*z1+cp1*cp2*m1*x2*y3*z1+c1*cp1*cp2*m1*x2*y3*z1+cp3*m1*x2*y3*z1+c2*cp3*m1*x2*y3*z1+c1*c2*cp3*m1*x2*y3*z1+c1*cp1*cp3*m1*x2*y3*z1+cp2*cp3*m1*x2*y3*z1+c1*cp2*cp3*m1*x2*y3*z1+c2*m2*x2*y3*z1+c3*m2*x2*y3*z1+c2*c3*m2*x2*y3*z1+c2*cp1*m2*x2*y3*z1+c3*cp1*m2*x2*y3*z1+c2*c3*cp1*m2*x2*y3*z1+cp2*m2*x2*y3*z1+c1*cp2*m2*x2*y3*z1+c1*c3*cp2*m2*x2*y3*z1+cp1*cp2*m2*x2*y3*z1+c1*c2*cp3*m2*x2*y3*z1+cp1*cp3*m2*x2*y3*z1+c1*cp1*cp3*m2*x2*y3*z1+c2*cp1*cp3*m2*x2*y3*z1+cp2*cp3*m2*x2*y3*z1+cp2*m1*m2*x2*y3*z1+c3*cp2*m1*m2*x2*y3*z1+cp1*cp2*m1*m2*x2*y3*z1+c3*cp1*cp2*m1*m2*x2*y3*z1+cp3*m1*m2*x2*y3*z1+c2*cp3*m1*m2*x2*y3*z1+cp1*cp3*m1*m2*x2*y3*z1+c2*cp1*cp3*m1*m2*x2*y3*z1+m3*x2*y3*z1+cp1*m3*x2*y3*z1+cp2*m3*x2*y3*z1+cp1*cp2*m3*x2*y3*z1+cp2*cp3*m3*x2*y3*z1+c2*cp1*x3*y3*z1+c1*cp2*x3*y3*z1+c2*cp2*x3*y3*z1+cp1*cp2*x3*y3*z1+cp2*cp3*x3*y3*z1+cp2*m1*x3*y3*z1+cp2*cp3*m1*x3*y3*z1+c1*m2*x3*y3*z1+c2*m2*x3*y3*z1+c3*m2*x3*y3*z1+c1*cp1*m2*x3*y3*z1+c2*cp1*m2*x3*y3*z1+c3*cp1*m2*x3*y3*z1+c1*cp2*m2*x3*y3*z1+c2*cp2*m2*x3*y3*z1+c3*cp2*m2*x3*y3*z1+cp3*m2*x3*y3*z1+cp1*cp3*m2*x3*y3*z1+cp2*cp3*m2*x3*y3*z1+cp1*cp2*m1*m2*x3*y3*z1+cp3*m1*m2*x3*y3*z1+cp1*cp3*m1*m2*x3*y3*z1+cp2*cp3*m1*m2*x3*y3*z1+c2*y1*y3*z1+c1*cp2*y1*y3*z1+c2*cp2*y1*y3*z1+c3*cp2*y1*y3*z1+cp1*cp2*y1*y3*z1+c2*cp3*y1*y3*z1+c2*m1*y1*y3*z1+cp2*m1*y1*y3*z1+c1*cp2*m1*y1*y3*z1+c2*cp2*m1*y1*y3*z1+c2*cp3*m1*y1*y3*z1+cp2*cp3*m1*y1*y3*z1+c1*m2*y1*y3*z1+c2*m2*y1*y3*z1+c1*c3*m2*y1*y3*z1+c2*c3*m2*y1*y3*z1+cp1*m2*y1*y3*z1+c3*cp1*m2*y1*y3*z1+c3*cp2*m2*y1*y3*z1+cp1*cp3*m2*y1*y3*z1+cp2*m1*m2*y1*y3*z1+c3*cp2*m1*m2*y1*y3*z1+c1*cp3*m1*m2*y1*y3*z1+c2*cp3*m1*m2*y1*y3*z1+cp1*cp3*m1*m2*y1*y3*z1+cp2*m3*y1*y3*z1+c1*y2*y3*z1+c2*y2*y3*z1+c1*c2*y2*y3*z1+c3*y2*y3*z1+c2*c3*y2*y3*z1+cp1*y2*y3*z1+c3*cp1*y2*y3*z1+cp2*y2*y3*z1+c1*cp2*y2*y3*z1+c2*cp2*y2*y3*z1+c1*c2*cp2*y2*y3*z1+cp1*cp2*y2*y3*z1+c3*cp1*cp2*y2*y3*z1+c1*cp3*y2*y3*z1+c1*cp1*cp3*y2*y3*z1+c2*cp1*cp3*y2*y3*z1+c2*cp2*cp3*y2*y3*z1+c3*cp2*cp3*y2*y3*z1+m1*y2*y3*z1+c1*c2*m1*y2*y3*z1+cp1*m1*y2*y3*z1+c1*c2*cp1*m1*y2*y3*z1+c1*c2*cp2*m1*y2*y3*z1+c1*cp1*cp2*m1*y2*y3*z1+cp3*m1*y2*y3*z1+c1*cp3*m1*y2*y3*z1+c1*c2*cp3*m1*y2*y3*z1+cp1*cp3*m1*y2*y3*z1+c1*cp1*cp3*m1*y2*y3*z1+c1*cp2*cp3*m1*y2*y3*z1+m2*y2*y3*z1+c2*m2*y2*y3*z1+c2*c3*m2*y2*y3*z1+cp1*m2*y2*y3*z1+c2*cp1*m2*y2*y3*z1+c2*c3*cp1*m2*y2*y3*z1+c1*cp2*m2*y2*y3*z1+c3*cp2*m2*y2*y3*z1+c1*c3*cp2*m2*y2*y3*z1+cp1*cp2*m2*y2*y3*z1+cp3*m2*y2*y3*z1+c1*cp3*m2*y2*y3*z1+c2*cp3*m2*y2*y3*z1+c1*c2*cp3*m2*y2*y3*z1+cp1*cp3*m2*y2*y3*z1+c1*cp1*cp3*m2*y2*y3*z1+c2*cp1*cp3*m2*y2*y3*z1+cp2*cp3*m2*y2*y3*z1+cp2*m1*m2*y2*y3*z1+c3*cp2*m1*m2*y2*y3*z1+cp1*cp2*m1*m2*y2*y3*z1+c3*cp1*cp2*m1*m2*y2*y3*z1+c2*cp3*m1*m2*y2*y3*z1+c2*cp1*cp3*m1*m2*y2*y3*z1+m3*y2*y3*z1+cp1*m3*y2*y3*z1+cp2*m3*y2*y3*z1+cp1*cp2*m3*y2*y3*z1+cp2*cp3*m3*y2*y3*z1+(1/2)*c2*c3*z1*(1+z1)+(1/2)*c2*cp3*z1*(1+z1)+(1/2)*c3*cp1*m2*z1*(1+z1)+(1/2)*c3*cp2*m2*z1*(1+z1)+(1/2)*cp3*m2*z1*(1+z1)+(1/2)*c1*cp3*m2*z1*(1+z1)+(1/2)*cp1*cp3*m2*z1*(1+z1)+(1/2)*cp2*cp3*m2*z1*(1+z1)+(1/2)*cp1*cp3*m1*m2*z1*(1+z1)+c1*c3*cp2*m1*z2+c3*cp1*cp2*m1*z2+c1*cp3*m1*z2+c1*c2*cp3*m1*z2+c1*c3*cp3*m1*z2+cp1*cp3*m1*z2+c3*cp1*cp3*m1*z2+c1*c3*cp1*m2*z2+c1*cp1*cp3*m2*z2+c3*m1*m2*z2+c3*cp1*m1*m2*z2+cp3*m1*m2*z2+cp1*cp3*m1*m2*z2+c1*cp1*cp3*m1*m2*z2+c1*cp2*cp3*m1*m2*z2+c2*c3*x1*z2+c3*cp1*cp2*x1*z2+c1*c3*cp3*x1*z2+c2*cp1*cp3*x1*z2+c3*cp1*cp3*x1*z2+c1*c3*m1*x1*z2+c1*c3*cp1*m1*x1*z2+c1*c3*cp2*m1*x1*z2+cp3*m1*x1*z2+c1*c2*cp3*m1*x1*z2+c1*c3*cp3*m1*x1*z2+c3*cp1*cp3*m1*x1*z2+c3*m2*x1*z2+c3*cp1*m2*x1*z2+c1*c3*cp1*m2*x1*z2+c3*cp1*cp2*m2*x1*z2+c2*cp3*m2*x1*z2+c2*cp1*cp3*m2*x1*z2+cp2*cp3*m2*x1*z2+c3*cp1*m1*m2*x1*z2+c1*cp2*cp3*m1*m2*x1*z2+c1*c2*cp3*x2*z2+c3*cp1*m1*x2*z2+c1*c3*cp1*m1*x2*z2+c3*cp2*m1*x2*z2+c3*cp1*cp2*m1*x2*z2+c2*cp3*m1*x2*z2+c3*cp3*m1*x2*z2+c3*cp1*cp3*m1*x2*z2+cp1*cp3*m2*x2*z2+c1*cp1*cp3*m2*x2*z2+c1*cp2*cp3*m2*x2*z2+cp3*m1*m2*x2*z2+cp1*cp3*m1*m2*x2*z2+c1*cp1*cp3*m1*m2*x2*z2+cp2*cp3*m1*m2*x2*z2+c3*cp1*x1*x2*z2+c3*cp2*x1*x2*z2+cp3*x1*x2*z2+c2*cp3*x1*x2*z2+c3*cp3*x1*x2*z2+cp1*cp3*x1*x2*z2+cp3*m1*x1*x2*z2+c1*cp3*m1*x1*x2*z2+c1*c3*m2*x1*x2*z2+c1*cp3*m2*x1*x2*z2+cp1*cp3*m2*x1*x2*z2+cp2*cp3*m2*x1*x2*z2+c3*cp1*m1*m2*x1*x2*z2+c1*cp3*m1*m2*x1*x2*z2+m3*x1*x2*z2+cp1*m3*x1*x2*z2+cp2*m3*x1*x2*z2+cp3*m3*x1*x2*z2+c1*c2*cp1*x3*z2+c1*cp1*cp2*x3*z2+c1*cp1*cp3*x3*z2+c1*c2*cp2*cp3*x3*z2+cp1*m1*x3*z2+c1*cp1*m1*x3*z2+c3*cp1*m1*x3*z2+c1*c3*cp1*m1*x3*z2+c2*c3*cp1*m1*x3*z2+c1*cp2*m1*x3*z2+c1*c3*cp2*m1*x3*z2+cp1*cp2*m1*x3*z2+c1*cp1*cp2*m1*x3*z2+c2*cp1*cp2*m1*x3*z2+c3*cp1*cp2*m1*x3*z2+c1*c3*cp1*cp2*m1*x3*z2+c1*cp3*m1*x3*z2+cp1*cp3*m1*x3*z2+c1*c2*cp2*cp3*m1*x3*z2+c1*cp1*m2*x3*z2+c1*c3*cp2*m2*x3*z2+c1*c2*cp1*cp3*m2*x3*z2+c1*c2*cp2*cp3*m2*x3*z2+cp1*m1*m2*x3*z2+c3*cp2*m1*m2*x3*z2+c2*cp3*m1*m2*x3*z2+c3*cp3*m1*m2*x3*z2+cp2*cp3*m1*m2*x3*z2+c2*cp2*cp3*m1*m2*x3*z2+c3*cp2*cp3*m1*m2*x3*z2+x1*x3*z2+c2*x1*x3*z2+c3*x1*x3*z2+c2*c3*x1*x3*z2+cp1*x1*x3*z2+c1*cp1*x1*x3*z2+c1*c2*cp1*x1*x3*z2+c1*cp2*x1*x3*z2+c2*cp2*x1*x3*z2+c3*cp1*cp2*x1*x3*z2+cp3*x1*x3*z2+c1*cp3*x1*x3*z2+c3*cp3*x1*x3*z2+cp1*cp3*x1*x3*z2+c1*cp1*cp3*x1*x3*z2+c2*cp1*cp3*x1*x3*z2+c2*cp2*cp3*x1*x3*z2+c3*cp2*cp3*x1*x3*z2+c1*m1*x1*x3*z2+c2*m1*x1*x3*z2+c2*cp1*m1*x1*x3*z2+c1*c2*cp1*m1*x1*x3*z2+cp2*m1*x1*x3*z2+c1*cp2*m1*x1*x3*z2+c2*cp2*m1*x1*x3*z2+c1*c2*cp2*m1*x1*x3*z2+cp1*cp2*m1*x1*x3*z2+cp3*m1*x1*x3*z2+c2*cp3*m1*x1*x3*z2+c1*c2*cp3*m1*x1*x3*z2+c1*cp1*cp3*m1*x1*x3*z2+cp2*cp3*m1*x1*x3*z2+c1*cp2*cp3*m1*x1*x3*z2+m2*x1*x3*z2+c1*c3*m2*x1*x3*z2+c2*c3*m2*x1*x3*z2+cp1*m2*x1*x3*z2+c2*c3*cp1*m2*x1*x3*z2+cp2*m2*x1*x3*z2+c1*c3*cp2*m2*x1*x3*z2+cp1*cp2*m2*x1*x3*z2+cp3*m2*x1*x3*z2+c1*cp3*m2*x1*x3*z2+c1*c2*cp3*m2*x1*x3*z2+c1*cp1*cp3*m2*x1*x3*z2+c2*cp1*cp3*m2*x1*x3*z2+cp2*cp3*m2*x1*x3*z2+c3*cp1*m1*m2*x1*x3*z2+c3*cp1*cp2*m1*m2*x1*x3*z2+cp3*m1*m2*x1*x3*z2+cp1*cp3*m1*m2*x1*x3*z2+c2*cp1*cp3*m1*m2*x1*x3*z2+cp2*m3*x1*x3*z2+cp1*cp2*m3*x1*x3*z2+cp3*m3*x1*x3*z2+cp2*cp3*m3*x1*x3*z2+cp1*x2*x3*z2+c1*cp1*x2*x3*z2+c1*cp2*x2*x3*z2+c1*cp3*x2*x3*z2+c1*c2*cp3*x2*x3*z2+cp1*cp3*x2*x3*z2+c2*m1*x2*x3*z2+cp1*m1*x2*x3*z2+c1*cp1*m1*x2*x3*z2+c2*cp1*m1*x2*x3*z2+cp2*m1*x2*x3*z2+c1*cp2*m1*x2*x3*z2+c2*cp2*m1*x2*x3*z2+c2*cp1*cp2*m1*x2*x3*z2+c2*cp3*m1*x2*x3*z2+cp1*cp3*m1*x2*x3*z2+c1*cp3*m2*x2*x3*z2+cp1*cp3*m2*x2*x3*z2+cp3*m1*m2*x2*x3*z2+c1*cp3*m1*m2*x2*x3*z2+c2*c3*y1*z2+c3*cp1*y1*z2+c2*cp3*y1*z2+c3*cp3*y1*z2+c1*c3*cp3*y1*z2+cp1*cp3*y1*z2+c2*cp1*cp3*y1*z2+c1*c3*m1*y1*z2+c3*cp1*m1*y1*z2+c1*c3*cp1*m1*y1*z2+c3*cp2*m1*y1*z2+c1*c3*cp2*m1*y1*z2+cp3*m1*y1*z2+c2*cp3*m1*y1*z2+c1*c2*cp3*m1*y1*z2+c3*cp3*m1*y1*z2+c1*c3*cp3*m1*y1*z2+cp1*cp3*m1*y1*z2+c1*cp1*cp3*m1*y1*z2+c3*cp1*cp3*m1*y1*z2+c3*m2*y1*z2+c1*c3*cp1*m2*y1*z2+c3*cp1*cp2*m2*y1*z2+c2*cp3*m2*y1*z2+cp1*cp3*m2*y1*z2+c2*cp1*cp3*m2*y1*z2+c3*cp1*m1*m2*y1*z2+cp3*m1*m2*y1*z2+cp2*cp3*m1*m2*y1*z2+c1*cp2*cp3*m1*m2*y1*z2+cp3*x1*y1*z2+cp3*m1*x1*y1*z2+c1*cp3*m1*x1*y1*z2+cp1*cp3*m1*x1*y1*z2+c3*m2*x1*y1*z2+c3*cp1*m2*x1*y1*z2+cp3*m2*x1*y1*z2+cp1*cp3*m2*x1*y1*z2+cp3*m1*m2*x1*y1*z2+cp1*cp3*m1*m2*x1*y1*z2+c3*cp1*x2*y1*z2+c3*cp2*x2*y1*z2+c1*cp3*x2*y1*z2+c2*cp3*x2*y1*z2+c3*cp3*x2*y1*z2+cp1*cp3*x2*y1*z2+cp3*m1*x2*y1*z2+c1*cp3*m1*x2*y1*z2+c3*m2*x2*y1*z2+c1*c3*m2*x2*y1*z2+cp3*m2*x2*y1*z2+c1*cp3*m2*x2*y1*z2+cp1*cp3*m2*x2*y1*z2+cp2*cp3*m2*x2*y1*z2+c3*cp1*m1*m2*x2*y1*z2+cp3*m1*m2*x2*y1*z2+c1*cp3*m1*m2*x2*y1*z2+m3*x2*y1*z2+cp1*m3*x2*y1*z2+cp2*m3*x2*y1*z2+cp3*m3*x2*y1*z2+x3*y1*z2+c3*x3*y1*z2+c2*c3*x3*y1*z2+cp1*x3*y1*z2+c1*c2*cp1*x3*y1*z2+cp2*x3*y1*z2+cp1*cp2*x3*y1*z2+c3*cp1*cp2*x3*y1*z2+c3*cp3*x3*y1*z2+cp1*cp3*x3*y1*z2+c1*cp1*cp3*x3*y1*z2+cp2*cp3*x3*y1*z2+c1*cp2*cp3*x3*y1*z2+c2*cp2*cp3*x3*y1*z2+c3*cp2*cp3*x3*y1*z2+m1*x3*y1*z2+c1*m1*x3*y1*z2+c1*c2*cp1*m1*x3*y1*z2+cp2*m1*x3*y1*z2+c1*cp2*m1*x3*y1*z2+c1*c2*cp2*m1*x3*y1*z2+c2*cp1*cp2*m1*x3*y1*z2+cp3*m1*x3*y1*z2+c1*cp3*m1*x3*y1*z2+c1*c2*cp3*m1*x3*y1*z2+c1*cp1*cp3*m1*x3*y1*z2+c2*cp1*cp3*m1*x3*y1*z2+cp2*cp3*m1*x3*y1*z2+c1*cp2*cp3*m1*x3*y1*z2+m2*x3*y1*z2+c3*m2*x3*y1*z2+c1*c3*m2*x3*y1*z2+c2*c3*m2*x3*y1*z2+cp1*m2*x3*y1*z2+c2*c3*cp1*m2*x3*y1*z2+cp2*m2*x3*y1*z2+c3*cp2*m2*x3*y1*z2+c1*c3*cp2*m2*x3*y1*z2+cp1*cp2*m2*x3*y1*z2+c2*cp3*m2*x3*y1*z2+c1*c2*cp3*m2*x3*y1*z2+c1*cp1*cp3*m2*x3*y1*z2+c2*cp1*cp3*m2*x3*y1*z2+cp2*cp3*m2*x3*y1*z2+c3*cp1*m1*m2*x3*y1*z2+c3*cp1*cp2*m1*m2*x3*y1*z2+cp1*cp3*m1*m2*x3*y1*z2+c2*cp1*cp3*m1*m2*x3*y1*z2+cp2*m3*x3*y1*z2+cp1*cp2*m3*x3*y1*z2+cp3*m3*x3*y1*z2+cp2*cp3*m3*x3*y1*z2+c3*cp1*cp2*y2*z2+c1*c2*cp3*y2*z2+c3*cp1*cp3*y2*z2+c1*c3*cp1*m1*y2*z2+c3*cp1*cp2*m1*y2*z2+c1*cp1*cp3*m1*y2*z2+c3*cp1*cp3*m1*y2*z2+c1*cp1*cp3*m2*y2*z2+c1*cp2*cp3*m2*y2*z2+c1*cp1*cp3*m1*m2*y2*z2+c3*x1*y2*z2+c3*cp1*x1*y2*z2+c3*cp2*x1*y2*z2+cp3*x1*y2*z2+c2*cp3*x1*y2*z2+c3*cp3*x1*y2*z2+cp1*cp3*x1*y2*z2+cp3*m1*x1*y2*z2+c1*cp3*m1*x1*y2*z2+c3*m2*x1*y2*z2+c1*c3*m2*x1*y2*z2+c3*cp1*m2*x1*y2*z2+c1*cp3*m2*x1*y2*z2+cp2*cp3*m2*x1*y2*z2+c3*cp1*m1*m2*x1*y2*z2+cp3*m1*m2*x1*y2*z2+c1*cp3*m1*m2*x1*y2*z2+cp1*cp3*m1*m2*x1*y2*z2+m3*x1*y2*z2+cp1*m3*x1*y2*z2+cp2*m3*x1*y2*z2+cp3*m3*x1*y2*z2+c1*cp3*x2*y2*z2+cp3*m1*m2*x2*y2*z2+c2*cp1*cp2*x3*y2*z2+c1*c2*cp3*x3*y2*z2+cp1*cp3*x3*y2*z2+c1*cp2*cp3*x3*y2*z2+cp1*m1*x3*y2*z2+c1*cp1*m1*x3*y2*z2+c2*cp1*m1*x3*y2*z2+c1*cp2*m1*x3*y2*z2+cp1*cp2*m1*x3*y2*z2+c2*cp1*cp2*m1*x3*y2*z2+c1*cp3*m1*x3*y2*z2+cp1*cp3*m1*x3*y2*z2+cp1*cp3*m2*x3*y2*z2+c1*cp3*m1*m2*x3*y2*z2+c3*y1*y2*z2+c3*cp1*y1*y2*z2+c3*cp2*y1*y2*z2+c1*cp3*y1*y2*z2+c2*cp3*y1*y2*z2+c3*cp3*y1*y2*z2+cp3*m1*y1*y2*z2+c1*cp3*m1*y1*y2*z2+cp1*cp3*m1*y1*y2*z2+c1*c3*m2*y1*y2*z2+c3*cp1*m2*y1*y2*z2+cp3*m2*y1*y2*z2+c1*cp3*m2*y1*y2*z2+cp2*cp3*m2*y1*y2*z2+c3*cp1*m1*m2*y1*y2*z2+c1*cp3*m1*m2*y1*y2*z2+cp1*cp3*m1*m2*y1*y2*z2+m3*y1*y2*z2+cp1*m3*y1*y2*z2+cp2*m3*y1*y2*z2+cp3*m3*y1*y2*z2+c1*c2*cp1*y3*z2+c1*cp1*cp2*y3*z2+c1*cp1*cp3*y3*z2+c1*c2*cp2*cp3*y3*z2+cp1*m1*y3*z2+c1*cp1*m1*y3*z2+c2*cp1*m1*y3*z2+c3*cp1*m1*y3*z2+c2*c3*cp1*m1*y3*z2+c1*cp2*m1*y3*z2+cp1*cp2*m1*y3*z2+c2*cp1*cp2*m1*y3*z2+c3*cp1*cp2*m1*y3*z2+c1*c3*cp1*cp2*m1*y3*z2+c1*cp3*m1*y3*z2+c1*cp1*cp3*m1*y3*z2+c1*c2*cp2*cp3*m1*y3*z2+c1*c3*cp1*m2*y3*z2+c1*c2*cp1*cp3*m2*y3*z2+c1*c2*cp2*cp3*m2*y3*z2+c3*cp1*m1*m2*y3*z2+c2*cp3*m1*m2*y3*z2+c3*cp3*m1*m2*y3*z2+cp1*cp3*m1*m2*y3*z2+c2*cp2*cp3*m1*m2*y3*z2+c3*cp2*cp3*m1*m2*y3*z2+c1*x1*y3*z2+c2*c3*x1*y3*z2+cp1*x1*y3*z2+c1*c2*cp1*x1*y3*z2+cp2*x1*y3*z2+c1*cp2*x1*y3*z2+c2*cp2*x1*y3*z2+cp1*cp2*x1*y3*z2+c3*cp1*cp2*x1*y3*z2+cp3*x1*y3*z2+c3*cp3*x1*y3*z2+cp1*cp3*x1*y3*z2+c1*cp1*cp3*x1*y3*z2+c2*cp1*cp3*x1*y3*z2+c2*cp2*cp3*x1*y3*z2+c3*cp2*cp3*x1*y3*z2+m1*x1*y3*z2+c1*m1*x1*y3*z2+c2*m1*x1*y3*z2+c1*cp1*m1*x1*y3*z2+c2*cp1*m1*x1*y3*z2+c1*c2*cp1*m1*x1*y3*z2+c2*cp2*m1*x1*y3*z2+c1*c2*cp2*m1*x1*y3*z2+cp1*cp2*m1*x1*y3*z2+c1*cp3*m1*x1*y3*z2+c2*cp3*m1*x1*y3*z2+c1*c2*cp3*m1*x1*y3*z2+cp1*cp3*m1*x1*y3*z2+c1*cp1*cp3*m1*x1*y3*z2+cp2*cp3*m1*x1*y3*z2+c1*cp2*cp3*m1*x1*y3*z2+m2*x1*y3*z2+c1*m2*x1*y3*z2+c2*m2*x1*y3*z2+c3*m2*x1*y3*z2+c1*c3*m2*x1*y3*z2+c2*c3*m2*x1*y3*z2+cp1*m2*x1*y3*z2+c2*cp1*m2*x1*y3*z2+c3*cp1*m2*x1*y3*z2+c2*c3*cp1*m2*x1*y3*z2+cp2*m2*x1*y3*z2+c1*cp2*m2*x1*y3*z2+c1*c3*cp2*m2*x1*y3*z2+cp1*cp2*m2*x1*y3*z2+c1*c2*cp3*m2*x1*y3*z2+c1*cp1*cp3*m2*x1*y3*z2+c2*cp1*cp3*m2*x1*y3*z2+cp2*cp3*m2*x1*y3*z2+cp1*m1*m2*x1*y3*z2+c3*cp1*m1*m2*x1*y3*z2+cp1*cp2*m1*m2*x1*y3*z2+c3*cp1*cp2*m1*m2*x1*y3*z2+cp3*m1*m2*x1*y3*z2+c2*cp1*cp3*m1*m2*x1*y3*z2+cp2*m3*x1*y3*z2+cp1*cp2*m3*x1*y3*z2+cp3*m3*x1*y3*z2+cp2*cp3*m3*x1*y3*z2+cp1*x2*y3*z2+c1*cp1*x2*y3*z2+c1*cp2*x2*y3*z2+c1*cp3*x2*y3*z2+c1*c2*cp3*x2*y3*z2+cp1*cp3*x2*y3*z2+m1*x2*y3*z2+c2*m1*x2*y3*z2+c1*cp1*m1*x2*y3*z2+c2*cp1*m1*x2*y3*z2+c1*cp2*m1*x2*y3*z2+c2*cp2*m1*x2*y3*z2+cp1*cp2*m1*x2*y3*z2+c2*cp1*cp2*m1*x2*y3*z2+cp3*m1*x2*y3*z2+c2*cp3*m1*x2*y3*z2+c1*cp3*m2*x2*y3*z2+cp1*cp3*m2*x2*y3*z2+cp3*m1*m2*x2*y3*z2+c1*cp3*m1*m2*x2*y3*z2+c1*cp1*cp2*x3*y3*z2+c1*cp1*cp3*x3*y3*z2+c1*cp1*m1*x3*y3*z2+c1*cp1*cp3*m1*x3*y3*z2+c1*cp2*cp3*m1*x3*y3*z2+c1*cp1*m2*x3*y3*z2+c1*cp1*cp3*m2*x3*y3*z2+c1*cp2*cp3*m2*x3*y3*z2+m1*m2*x3*y3*z2+cp1*m1*m2*x3*y3*z2+cp2*m1*m2*x3*y3*z2+cp3*m1*m2*x3*y3*z2+cp1*cp3*m1*m2*x3*y3*z2+c1*y1*y3*z2+c2*y1*y3*z2+c2*c3*y1*y3*z2+cp1*y1*y3*z2+c1*cp1*y1*y3*z2+c1*c2*cp1*y1*y3*z2+cp2*y1*y3*z2+c3*cp1*cp2*y1*y3*z2+c1*cp3*y1*y3*z2+c3*cp3*y1*y3*z2+cp1*cp3*y1*y3*z2+c1*cp1*cp3*y1*y3*z2+cp2*cp3*y1*y3*z2+c1*cp2*cp3*y1*y3*z2+c2*cp2*cp3*y1*y3*z2+c3*cp2*cp3*y1*y3*z2+m1*y1*y3*z2+c1*m1*y1*y3*z2+cp1*m1*y1*y3*z2+c1*cp1*m1*y1*y3*z2+c1*c2*cp1*m1*y1*y3*z2+cp2*m1*y1*y3*z2+c1*c2*cp2*m1*y1*y3*z2+cp1*cp2*m1*y1*y3*z2+c2*cp1*cp2*m1*y1*y3*z2+cp3*m1*y1*y3*z2+c1*c2*cp3*m1*y1*y3*z2+c1*cp1*cp3*m1*y1*y3*z2+c2*cp1*cp3*m1*y1*y3*z2+cp2*cp3*m1*y1*y3*z2+c1*cp2*cp3*m1*y1*y3*z2+c1*m2*y1*y3*z2+c2*m2*y1*y3*z2+c1*c3*m2*y1*y3*z2+c2*c3*m2*y1*y3*z2+cp1*m2*y1*y3*z2+c2*cp1*m2*y1*y3*z2+c3*cp1*m2*y1*y3*z2+c2*c3*cp1*m2*y1*y3*z2+c1*cp2*m2*y1*y3*z2+c3*cp2*m2*y1*y3*z2+c1*c3*cp2*m2*y1*y3*z2+cp1*cp2*m2*y1*y3*z2+c1*cp3*m2*y1*y3*z2+c2*cp3*m2*y1*y3*z2+c1*c2*cp3*m2*y1*y3*z2+c1*cp1*cp3*m2*y1*y3*z2+c2*cp1*cp3*m2*y1*y3*z2+cp2*cp3*m2*y1*y3*z2+cp1*m1*m2*y1*y3*z2+c3*cp1*m1*m2*y1*y3*z2+cp1*cp2*m1*m2*y1*y3*z2+c3*cp1*cp2*m1*m2*y1*y3*z2+c2*cp1*cp3*m1*m2*y1*y3*z2+cp2*m3*y1*y3*z2+cp1*cp2*m3*y1*y3*z2+cp3*m3*y1*y3*z2+cp2*cp3*m3*y1*y3*z2+cp1*cp2*y2*y3*z2+c2*cp1*cp2*y2*y3*z2+c1*c2*cp3*y2*y3*z2+c1*cp2*cp3*y2*y3*z2+c1*cp1*m1*y2*y3*z2+c2*cp1*m1*y2*y3*z2+c1*cp2*m1*y2*y3*z2+c2*cp1*cp2*m1*y2*y3*z2+c1*cp3*m1*y2*y3*z2+cp1*cp3*m2*y2*y3*z2+c1*cp3*m1*m2*y2*y3*z2+c2*c3*z1*z2+c1*c3*cp1*z1*z2+c1*c3*cp2*z1*z2+c2*cp3*z1*z2+c2*cp1*cp3*z1*z2+c3*cp1*m1*z1*z2+c1*c3*cp1*m1*z1*z2+c3*cp2*m1*z1*z2+c1*c3*cp2*m1*z1*z2+cp3*m1*z1*z2+c1*cp3*m1*z1*z2+c1*c2*cp3*m1*z1*z2+c1*c3*cp3*m1*z1*z2+c3*cp1*cp3*m1*z1*z2+c1*c3*m2*z1*z2+c3*cp1*m2*z1*z2+c1*c3*cp1*m2*z1*z2+c3*cp2*m2*z1*z2+c3*cp1*cp2*m2*z1*z2+cp3*m2*z1*z2+c1*cp3*m2*z1*z2+c2*cp1*cp3*m2*z1*z2+cp2*cp3*m2*z1*z2+c3*m1*m2*z1*z2+c3*cp1*m1*m2*z1*z2+cp3*m1*m2*z1*z2+c1*cp2*cp3*m1*m2*z1*z2+cp3*x1*z1*z2+c1*cp3*x1*z1*z2+cp1*cp3*x1*z1*z2+cp3*m1*x1*z1*z2+cp1*cp3*m1*x1*z1*z2+c1*c3*m2*x1*z1*z2+c1*cp3*m2*x1*z1*z2+c3*m1*m2*x1*z1*z2+c1*cp3*m1*m2*x1*z1*z2+c3*x2*z1*z2+c3*cp1*x2*z1*z2+c3*cp2*x2*z1*z2+c2*cp3*x2*z1*z2+c3*cp3*x2*z1*z2+cp1*cp3*x2*z1*z2+cp3*m1*x2*z1*z2+c1*cp3*m1*x2*z1*z2+c1*c3*m2*x2*z1*z2+cp3*m2*x2*z1*z2+c1*cp3*m2*x2*z1*z2+cp1*cp3*m2*x2*z1*z2+cp2*cp3*m2*x2*z1*z2+c3*m1*m2*x2*z1*z2+c3*cp1*m1*m2*x2*z1*z2+c1*cp3*m1*m2*x2*z1*z2+cp1*m3*x2*z1*z2+cp2*m3*x2*z1*z2+cp3*m3*x2*z1*z2+c2*x3*z1*z2+c1*c2*x3*z1*z2+c3*x3*z1*z2+c2*c3*x3*z1*z2+c2*cp2*x3*z1*z2+c1*c2*cp2*x3*z1*z2+c3*cp2*x3*z1*z2+c3*cp1*cp2*x3*z1*z2+c2*cp3*x3*z1*z2+c3*cp3*x3*z1*z2+c1*cp1*cp3*x3*z1*z2+c2*cp1*cp3*x3*z1*z2+c2*cp2*cp3*x3*z1*z2+c3*cp2*cp3*x3*z1*z2+m1*x3*z1*z2+c1*m1*x3*z1*z2+c1*c2*m1*x3*z1*z2+c1*cp1*m1*x3*z1*z2+c1*c2*cp1*m1*x3*z1*z2+cp2*m1*x3*z1*z2+c1*cp2*m1*x3*z1*z2+c1*c2*cp2*m1*x3*z1*z2+c1*cp1*cp2*m1*x3*z1*z2+cp3*m1*x3*z1*z2+c1*cp3*m1*x3*z1*z2+c2*cp3*m1*x3*z1*z2+c1*c2*cp3*m1*x3*z1*z2+cp1*cp3*m1*x3*z1*z2+c1*cp1*cp3*m1*x3*z1*z2+cp2*cp3*m1*x3*z1*z2+c1*cp2*cp3*m1*x3*z1*z2+c1*c3*m2*x3*z1*z2+cp1*m2*x3*z1*z2+c2*c3*cp1*m2*x3*z1*z2+c1*c3*cp2*m2*x3*z1*z2+cp1*cp2*m2*x3*z1*z2+cp3*m2*x3*z1*z2+c2*cp3*m2*x3*z1*z2+c1*c2*cp3*m2*x3*z1*z2+cp1*cp3*m2*x3*z1*z2+c1*cp1*cp3*m2*x3*z1*z2+c2*cp1*cp3*m2*x3*z1*z2+cp2*cp3*m2*x3*z1*z2+c3*m1*m2*x3*z1*z2+c3*cp1*m1*m2*x3*z1*z2+c3*cp2*m1*m2*x3*z1*z2+c3*cp1*cp2*m1*m2*x3*z1*z2+c2*cp3*m1*m2*x3*z1*z2+cp1*cp3*m1*m2*x3*z1*z2+c2*cp1*cp3*m1*m2*x3*z1*z2+cp1*cp2*m3*x3*z1*z2+cp3*m3*x3*z1*z2+cp2*cp3*m3*x3*z1*z2+cp3*y1*z1*z2+c1*cp3*y1*z1*z2+cp1*cp3*y1*z1*z2+c1*cp3*m1*y1*z1*z2+c1*c3*m2*y1*z1*z2+c3*cp1*m2*y1*z1*z2+c1*cp3*m2*y1*z1*z2+cp1*cp3*m2*y1*z1*z2+c3*m1*m2*y1*z1*z2+c1*cp3*m1*m2*y1*z1*z2+cp1*cp3*m1*m2*y1*z1*z2+c3*cp1*y2*z1*z2+c3*cp2*y2*z1*z2+c2*cp3*y2*z1*z2+c3*cp3*y2*z1*z2+cp1*cp3*y2*z1*z2+cp3*m1*y2*z1*z2+c1*cp3*m1*y2*z1*z2+c1*c3*m2*y2*z1*z2+c3*cp1*m2*y2*z1*z2+c1*cp3*m2*y2*z1*z2+cp2*cp3*m2*y2*z1*z2+c3*m1*m2*y2*z1*z2+c3*cp1*m1*m2*y2*z1*z2+c1*cp3*m1*m2*y2*z1*z2+cp1*cp3*m1*m2*y2*z1*z2+cp1*m3*y2*z1*z2+cp2*m3*y2*z1*z2+cp3*m3*y2*z1*z2+y3*z1*z2+c1*c2*y3*z1*z2+c2*c3*y3*z1*z2+c1*cp2*y3*z1*z2+c2*cp2*y3*z1*z2+c1*c2*cp2*y3*z1*z2+c3*cp2*y3*z1*z2+cp1*cp2*y3*z1*z2+c3*cp1*cp2*y3*z1*z2+c2*cp3*y3*z1*z2+c3*cp3*y3*z1*z2+c1*cp1*cp3*y3*z1*z2+c2*cp1*cp3*y3*z1*z2+c2*cp2*cp3*y3*z1*z2+c3*cp2*cp3*y3*z1*z2+c1*c2*m1*y3*z1*z2+cp1*m1*y3*z1*z2+c1*c2*cp1*m1*y3*z1*z2+cp2*m1*y3*z1*z2+c1*c2*cp2*m1*y3*z1*z2+c1*cp1*cp2*m1*y3*z1*z2+c2*cp3*m1*y3*z1*z2+c1*c2*cp3*m1*y3*z1*z2+c1*cp1*cp3*m1*y3*z1*z2+cp2*cp3*m1*y3*z1*z2+c1*cp2*cp3*m1*y3*z1*z2+c1*m2*y3*z1*z2+c1*c3*m2*y3*z1*z2+cp1*m2*y3*z1*z2+c2*cp1*m2*y3*z1*z2+c3*cp1*m2*y3*z1*z2+c2*c3*cp1*m2*y3*z1*z2+c1*cp2*m2*y3*z1*z2+c1*c3*cp2*m2*y3*z1*z2+cp1*cp2*m2*y3*z1*z2+c1*cp3*m2*y3*z1*z2+c2*cp3*m2*y3*z1*z2+c1*c2*cp3*m2*y3*z1*z2+cp1*cp3*m2*y3*z1*z2+c1*cp1*cp3*m2*y3*z1*z2+c2*cp1*cp3*m2*y3*z1*z2+cp2*cp3*m2*y3*z1*z2+m1*m2*y3*z1*z2+c3*m1*m2*y3*z1*z2+cp1*m1*m2*y3*z1*z2+c3*cp1*m1*m2*y3*z1*z2+cp2*m1*m2*y3*z1*z2+c3*cp2*m1*m2*y3*z1*z2+cp1*cp2*m1*m2*y3*z1*z2+c3*cp1*cp2*m1*m2*y3*z1*z2+cp3*m1*m2*y3*z1*z2+c2*cp3*m1*m2*y3*z1*z2+c2*cp1*cp3*m1*m2*y3*z1*z2+cp1*cp2*m3*y3*z1*z2+cp3*m3*y3*z1*z2+cp2*cp3*m3*y3*z1*z2+(1/2)*c1*c3*cp1*z2*(1+z2)+(1/2)*c1*c3*cp2*z2*(1+z2)+(1/2)*c3*cp1*cp2*z2*(1+z2)+(1/2)*c1*cp3*z2*(1+z2)+(1/2)*c1*c2*cp3*z2*(1+z2)+(1/2)*c1*c3*cp3*z2*(1+z2)+(1/2)*c3*cp1*cp3*z2*(1+z2)+(1/2)*c3*cp1*m1*z2*(1+z2)+(1/2)*c1*cp1*cp3*m1*z2*(1+z2)+(1/2)*cp1*cp3*m2*z2*(1+z2)+(1/2)*c1*cp1*cp3*m2*z2*(1+z2)+(1/2)*c1*cp2*cp3*m2*z2*(1+z2)+(1/2)*cp1*cp3*m1*m2*z2*(1+z2)+c2*cp1*cp2*m1*z3+c2*c3*cp2*cp3*m1*z3+c1*c2*cp1*m2*z3+c1*cp2*m2*z3+c1*c2*cp2*m2*z3+cp1*cp2*m2*z3+c1*cp1*cp2*m2*z3+c1*c2*cp3*m2*z3+c3*m1*m2*z3+cp1*m1*m2*z3+c1*cp1*m1*m2*z3+c1*cp3*m1*m2*z3+c3*cp3*m1*m2*z3+c1*cp2*cp3*m1*m2*z3+c2*cp2*cp3*m1*m2*z3+c1*c2*x1*z3+c1*c2*cp1*x1*z3+c1*cp2*x1*z3+c1*c2*cp2*x1*z3+c1*c3*cp2*x1*z3+c1*cp1*cp2*x1*z3+c2*m1*x1*z3+c2*c3*m1*x1*z3+c2*cp1*m1*x1*z3+c2*c3*cp1*m1*x1*z3+c2*cp2*m1*x1*z3+c3*cp2*m1*x1*z3+c1*m2*x1*z3+c1*c3*m2*x1*z3+c2*c3*m2*x1*z3+c2*cp1*m2*x1*z3+c1*cp2*m2*x1*z3+c2*cp2*m2*x1*z3+c3*cp3*m2*x1*z3+c1*c3*cp3*m2*x1*z3+c2*c3*cp3*m2*x1*z3+c3*cp1*cp3*m2*x1*z3+c1*cp2*cp3*m2*x1*z3+c3*cp2*cp3*m2*x1*z3+m1*m2*x1*z3+c1*m1*m2*x1*z3+cp1*m1*m2*x1*z3+c2*cp1*m1*m2*x1*z3+c3*cp1*m1*m2*x1*z3+cp2*m1*m2*x1*z3+c3*cp2*m1*m2*x1*z3+cp1*cp2*m1*m2*x1*z3+c1*cp3*m1*m2*x1*z3+c3*cp3*m1*m2*x1*z3+cp1*cp3*m1*m2*x1*z3+c2*cp1*cp3*m1*m2*x1*z3+c3*cp2*cp3*m1*m2*x1*z3+c1*x2*z3+cp1*x2*z3+c2*cp1*x2*z3+c1*cp1*cp2*x2*z3+c1*c2*cp3*x2*z3+c1*c2*cp2*cp3*x2*z3+c1*c3*m1*x2*z3+c2*c3*m1*x2*z3+cp1*m1*x2*z3+c1*cp1*m1*x2*z3+c1*c2*cp1*m1*x2*z3+c2*c3*cp2*m1*x2*z3+cp1*cp2*m1*x2*z3+c1*c3*cp1*cp2*m1*x2*z3+cp3*m1*x2*z3+c3*cp3*m1*x2*z3+c2*c3*cp3*m1*x2*z3+c1*cp1*cp3*m1*x2*z3+cp2*cp3*m1*x2*z3+c1*cp2*cp3*m1*x2*z3+c2*cp2*cp3*m1*x2*z3+c1*c2*cp2*cp3*m1*x2*z3+c1*c3*m2*x2*z3+cp1*m2*x2*z3+c1*c3*cp1*m2*x2*z3+c1*c2*cp1*cp3*m2*x2*z3+c1*c2*cp2*cp3*m2*x2*z3+c2*cp2*m1*m2*x2*z3+c1*cp1*cp2*m1*m2*x2*z3+cp2*cp3*m1*m2*x2*z3+c1*cp2*cp3*m1*m2*x2*z3+c2*cp2*cp3*m1*m2*x2*z3+c3*cp2*cp3*m1*m2*x2*z3+c1*c2*x1*x2*z3+c2*c3*x1*x2*z3+cp1*x1*x2*z3+c1*cp1*x1*x2*z3+c2*cp1*x1*x2*z3+c1*c2*cp1*x1*x2*z3+c3*cp1*x1*x2*z3+c2*cp2*x1*x2*z3+cp1*cp2*x1*x2*z3+c3*cp1*cp2*x1*x2*z3+cp3*x1*x2*z3+c1*cp3*x1*x2*z3+c3*cp3*x1*x2*z3+cp1*cp3*x1*x2*z3+c1*cp1*cp3*x1*x2*z3+c2*cp1*cp3*x1*x2*z3+cp2*cp3*x1*x2*z3+c2*cp2*cp3*x1*x2*z3+c3*cp2*cp3*x1*x2*z3+cp1*m1*x1*x2*z3+c1*cp1*m1*x1*x2*z3+c1*c2*cp1*m1*x1*x2*z3+c2*cp2*m1*x1*x2*z3+c1*c2*cp2*m1*x1*x2*z3+cp3*m1*x1*x2*z3+c1*cp3*m1*x1*x2*z3+c2*cp3*m1*x1*x2*z3+c1*c2*cp3*m1*x1*x2*z3+c1*cp1*cp3*m1*x1*x2*z3+cp2*cp3*m1*x1*x2*z3+c1*cp2*cp3*m1*x1*x2*z3+c1*m2*x1*x2*z3+c2*m2*x1*x2*z3+c1*c2*m2*x1*x2*z3+c3*m2*x1*x2*z3+c1*c3*m2*x1*x2*z3+c3*cp1*m2*x1*x2*z3+c2*c3*cp1*m2*x1*x2*z3+c1*cp2*m2*x1*x2*z3+c1*c3*cp2*m2*x1*x2*z3+c1*cp3*m2*x1*x2*z3+c2*cp3*m2*x1*x2*z3+c1*c2*cp3*m2*x1*x2*z3+c1*cp1*cp3*m2*x1*x2*z3+c2*cp1*cp3*m2*x1*x2*z3+c1*cp1*m1*m2*x1*x2*z3+c2*cp1*m1*m2*x1*x2*z3+c3*cp1*m1*m2*x1*x2*z3+cp2*m1*m2*x1*x2*z3+c1*cp2*m1*m2*x1*x2*z3+cp1*cp2*m1*m2*x1*x2*z3+c3*cp1*cp2*m1*m2*x1*x2*z3+cp3*m1*m2*x1*x2*z3+c1*cp3*m1*m2*x1*x2*z3+cp1*cp3*m1*m2*x1*x2*z3+c2*cp1*cp3*m1*m2*x1*x2*z3+m3*x1*x2*z3+cp1*m3*x1*x2*z3+cp2*m3*x1*x2*z3+cp1*cp2*m3*x1*x2*z3+cp3*m3*x1*x2*z3+cp2*cp3*m3*x1*x2*z3+c1*cp2*x3*z3+c1*c2*cp2*x3*z3+cp1*cp2*x3*z3+c1*c2*cp3*x3*z3+cp2*m1*x3*z3+c3*cp2*m1*x3*z3+c1*c3*cp2*m1*x3*z3+cp1*cp2*m1*x3*z3+c2*c3*cp3*m1*x3*z3+c3*cp2*cp3*m1*x3*z3+c1*cp1*m2*x3*z3+c1*c3*cp1*m2*x3*z3+c1*cp2*m2*x3*z3+c1*c3*cp2*m2*x3*z3+cp1*cp2*m2*x3*z3+c1*cp1*cp2*m2*x3*z3+c1*cp1*cp3*m2*x3*z3+c1*cp2*cp3*m2*x3*z3+c3*cp2*cp3*m1*m2*x3*z3+c2*x1*x3*z3+c2*cp1*x1*x3*z3+cp2*x1*x3*z3+c1*cp2*x1*x3*z3+c2*cp2*x1*x3*z3+cp1*cp2*x1*x3*z3+cp2*cp3*x1*x3*z3+cp2*m1*x1*x3*z3+cp2*cp3*m1*x1*x3*z3+c1*m2*x1*x3*z3+c3*m2*x1*x3*z3+c1*c3*m2*x1*x3*z3+c2*c3*m2*x1*x3*z3+cp1*m2*x1*x3*z3+c1*cp1*m2*x1*x3*z3+c3*cp1*m2*x1*x3*z3+c3*cp2*m2*x1*x3*z3+cp1*cp2*m2*x1*x3*z3+cp3*m2*x1*x3*z3+cp2*cp3*m2*x1*x3*z3+c1*cp1*m1*m2*x1*x3*z3+c2*cp1*m1*m2*x1*x3*z3+c3*cp1*m1*m2*x1*x3*z3+c1*cp2*m1*m2*x1*x3*z3+c2*cp2*m1*m2*x1*x3*z3+cp3*m1*m2*x1*x3*z3+c1*cp3*m1*m2*x1*x3*z3+c2*cp3*m1*m2*x1*x3*z3+cp1*cp3*m1*m2*x1*x3*z3+cp2*cp3*m1*m2*x1*x3*z3+c1*cp2*m1*x2*x3*z3+c2*cp2*m1*x2*x3*z3+c1*cp1*cp2*m1*x2*x3*z3+cp3*m1*x2*x3*z3+c1*cp3*m1*x2*x3*z3+c2*cp3*m1*x2*x3*z3+cp2*cp3*m1*x2*x3*z3+c1*cp2*cp3*m1*x2*x3*z3+c1*cp2*m2*x2*x3*z3+c1*cp1*cp2*m2*x2*x3*z3+c1*cp3*m2*x2*x3*z3+c1*cp2*cp3*m2*x2*x3*z3+c2*cp2*m1*m2*x2*x3*z3+c2*cp3*m1*m2*x2*x3*z3+c1*c2*y1*z3+c2*cp1*y1*z3+c1*c2*cp1*y1*z3+c2*cp2*y1*z3+c1*c2*cp2*y1*z3+c3*cp2*y1*z3+c1*c3*cp2*y1*z3+cp1*cp2*y1*z3+c2*cp3*y1*z3+c2*cp1*cp3*y1*z3+c1*cp2*cp3*y1*z3+c2*cp2*cp3*y1*z3+c2*m1*y1*z3+c2*c3*m1*y1*z3+cp2*m1*y1*z3+c2*cp2*m1*y1*z3+c3*cp2*m1*y1*z3+cp1*cp2*m1*y1*z3+c1*cp1*cp2*m1*y1*z3+c2*cp1*cp2*m1*y1*z3+c3*cp1*cp2*m1*y1*z3+c2*cp1*cp3*m1*y1*z3+c1*cp2*cp3*m1*y1*z3+c2*cp2*cp3*m1*y1*z3+c1*m2*y1*z3+c1*c3*m2*y1*z3+c2*c3*m2*y1*z3+c2*cp1*m2*y1*z3+cp2*m2*y1*z3+c1*cp2*m2*y1*z3+c2*cp2*m2*y1*z3+c1*c3*cp3*m2*y1*z3+c2*c3*cp3*m2*y1*z3+cp1*cp3*m2*y1*z3+c1*cp1*cp3*m2*y1*z3+c2*cp1*cp3*m2*y1*z3+c3*cp1*cp3*m2*y1*z3+c2*cp2*cp3*m2*y1*z3+c3*cp2*cp3*m2*y1*z3+m1*m2*y1*z3+c1*m1*m2*y1*z3+cp1*m1*m2*y1*z3+cp2*m1*m2*y1*z3+c3*cp2*m1*m2*y1*z3+cp1*cp2*m1*m2*y1*z3+c1*cp3*m1*m2*y1*z3+c3*cp3*m1*m2*y1*z3+cp2*cp3*m1*m2*y1*z3+c3*cp2*cp3*m1*m2*y1*z3+cp2*x1*y1*z3+c1*cp2*x1*y1*z3+c2*cp2*x1*y1*z3+c2*cp3*x1*y1*z3+cp2*cp3*x1*y1*z3+cp1*cp2*m1*x1*y1*z3+m2*x1*y1*z3+c1*m2*x1*y1*z3+c2*m2*x1*y1*z3+c3*m2*x1*y1*z3+cp1*m2*x1*y1*z3+c3*cp1*m2*x1*y1*z3+c3*cp2*m2*x1*y1*z3+cp3*m2*x1*y1*z3+c1*cp3*m2*x1*y1*z3+c2*cp3*m2*x1*y1*z3+cp1*m1*m2*x1*y1*z3+cp1*cp3*m1*m2*x1*y1*z3+x2*y1*z3+c1*x2*y1*z3+c1*c2*x2*y1*z3+c2*c3*x2*y1*z3+cp1*x2*y1*z3+c1*cp1*x2*y1*z3+c2*cp1*x2*y1*z3+c1*c2*cp1*x2*y1*z3+c3*cp1*x2*y1*z3+cp1*cp2*x2*y1*z3+c3*cp1*cp2*x2*y1*z3+cp3*x2*y1*z3+c2*cp3*x2*y1*z3+c3*cp3*x2*y1*z3+c1*cp1*cp3*x2*y1*z3+c1*cp2*cp3*x2*y1*z3+c2*cp2*cp3*x2*y1*z3+c3*cp2*cp3*x2*y1*z3+m1*x2*y1*z3+c1*m1*x2*y1*z3+c2*m1*x2*y1*z3+c1*cp1*m1*x2*y1*z3+c2*cp1*m1*x2*y1*z3+c1*c2*cp1*m1*x2*y1*z3+c1*c2*cp2*m1*x2*y1*z3+cp1*cp2*m1*x2*y1*z3+c2*cp1*cp2*m1*x2*y1*z3+c1*c2*cp3*m1*x2*y1*z3+cp1*cp3*m1*x2*y1*z3+c1*cp1*cp3*m1*x2*y1*z3+c2*cp1*cp3*m1*x2*y1*z3+cp2*cp3*m1*x2*y1*z3+c1*cp2*cp3*m1*x2*y1*z3+m2*x2*y1*z3+c1*c2*m2*x2*y1*z3+c1*c3*m2*x2*y1*z3+c3*cp1*m2*x2*y1*z3+c2*c3*cp1*m2*x2*y1*z3+c1*cp2*m2*x2*y1*z3+c3*cp2*m2*x2*y1*z3+c1*c3*cp2*m2*x2*y1*z3+cp3*m2*x2*y1*z3+c1*c2*cp3*m2*x2*y1*z3+c1*cp1*cp3*m2*x2*y1*z3+c2*cp1*cp3*m2*x2*y1*z3+m1*m2*x2*y1*z3+cp1*m1*m2*x2*y1*z3+c1*cp1*m1*m2*x2*y1*z3+c2*cp1*m1*m2*x2*y1*z3+c3*cp1*m1*m2*x2*y1*z3+c1*cp2*m1*m2*x2*y1*z3+c3*cp1*cp2*m1*m2*x2*y1*z3+c1*cp3*m1*m2*x2*y1*z3+c2*cp1*cp3*m1*m2*x2*y1*z3+m3*x2*y1*z3+cp1*m3*x2*y1*z3+cp2*m3*x2*y1*z3+cp1*cp2*m3*x2*y1*z3+cp3*m3*x2*y1*z3+cp2*cp3*m3*x2*y1*z3+c2*x3*y1*z3+c2*cp1*x3*y1*z3+c1*cp2*x3*y1*z3+c2*cp2*x3*y1*z3+cp1*cp2*x3*y1*z3+cp2*cp3*x3*y1*z3+cp2*m1*x3*y1*z3+cp1*cp2*m1*x3*y1*z3+c1*m2*x3*y1*z3+c1*c3*m2*x3*y1*z3+c2*c3*m2*x3*y1*z3+c1*cp1*m2*x3*y1*z3+c3*cp1*m2*x3*y1*z3+c3*cp2*m2*x3*y1*z3+cp1*cp2*m2*x3*y1*z3+cp3*m2*x3*y1*z3+cp1*cp3*m2*x3*y1*z3+m1*m2*x3*y1*z3+cp1*m1*m2*x3*y1*z3+c1*cp1*m1*m2*x3*y1*z3+c2*cp1*m1*m2*x3*y1*z3+c3*cp1*m1*m2*x3*y1*z3+cp2*m1*m2*x3*y1*z3+c1*cp2*m1*m2*x3*y1*z3+c2*cp2*m1*m2*x3*y1*z3+cp1*cp2*m1*m2*x3*y1*z3+c1*cp3*m1*m2*x3*y1*z3+c2*cp3*m1*m2*x3*y1*z3+cp2*cp3*m1*m2*x3*y1*z3+c1*y2*z3+c2*cp1*y2*z3+c3*cp1*y2*z3+c2*c3*cp1*y2*z3+c1*cp2*y2*z3+c2*cp1*cp2*y2*z3+c1*c2*cp3*y2*z3+c1*cp2*cp3*y2*z3+c1*c2*cp2*cp3*y2*z3+c1*c3*m1*y2*z3+c2*c3*m1*y2*z3+cp1*m1*y2*z3+c2*cp1*m1*y2*z3+c1*c2*cp1*m1*y2*z3+c3*cp2*m1*y2*z3+c2*c3*cp2*m1*y2*z3+c3*cp1*cp2*m1*y2*z3+c1*c3*cp1*cp2*m1*y2*z3+cp3*m1*y2*z3+c3*cp3*m1*y2*z3+c2*c3*cp3*m1*y2*z3+cp1*cp3*m1*y2*z3+c1*cp1*cp3*m1*y2*z3+c2*cp2*cp3*m1*y2*z3+c1*c2*cp2*cp3*m1*y2*z3+c3*cp2*cp3*m1*y2*z3+c1*c3*m2*y2*z3+cp1*m2*y2*z3+c2*cp1*m2*y2*z3+c1*c3*cp1*m2*y2*z3+cp1*cp2*m2*y2*z3+cp1*cp3*m2*y2*z3+c1*cp1*cp3*m2*y2*z3+c1*c2*cp1*cp3*m2*y2*z3+c1*cp2*cp3*m2*y2*z3+c1*c2*cp2*cp3*m2*y2*z3+cp2*m1*m2*y2*z3+c2*cp2*m1*m2*y2*z3+cp1*cp2*m1*m2*y2*z3+c1*cp1*cp2*m1*m2*y2*z3+c1*cp2*cp3*m1*m2*y2*z3+c2*cp2*cp3*m1*m2*y2*z3+c3*cp2*cp3*m1*m2*y2*z3+x1*y2*z3+c1*x1*y2*z3+c1*c2*x1*y2*z3+c3*x1*y2*z3+c2*c3*x1*y2*z3+c2*cp1*x1*y2*z3+c1*c2*cp1*x1*y2*z3+c3*cp1*x1*y2*z3+c2*cp2*x1*y2*z3+c3*cp1*cp2*x1*y2*z3+c1*cp3*x1*y2*z3+c3*cp3*x1*y2*z3+cp1*cp3*x1*y2*z3+c1*cp1*cp3*x1*y2*z3+c2*cp1*cp3*x1*y2*z3+c2*cp2*cp3*x1*y2*z3+c3*cp2*cp3*x1*y2*z3+cp1*m1*x1*y2*z3+c2*cp1*m1*x1*y2*z3+c1*c2*cp1*m1*x1*y2*z3+c1*cp2*m1*x1*y2*z3+c1*c2*cp2*m1*x1*y2*z3+c1*c2*cp3*m1*x1*y2*z3+cp1*cp3*m1*x1*y2*z3+c1*cp1*cp3*m1*x1*y2*z3+c1*cp2*cp3*m1*x1*y2*z3+c1*c2*m2*x1*y2*z3+c1*c3*m2*x1*y2*z3+cp1*m2*x1*y2*z3+c2*c3*cp1*m2*x1*y2*z3+cp2*m2*x1*y2*z3+c1*cp2*m2*x1*y2*z3+c3*cp2*m2*x1*y2*z3+c1*c3*cp2*m2*x1*y2*z3+cp3*m2*x1*y2*z3+c1*c2*cp3*m2*x1*y2*z3+c1*cp1*cp3*m2*x1*y2*z3+c2*cp1*cp3*m2*x1*y2*z3+c1*cp1*m1*m2*x1*y2*z3+c2*cp1*m1*m2*x1*y2*z3+c3*cp1*m1*m2*x1*y2*z3+c1*cp2*m1*m2*x1*y2*z3+cp1*cp2*m1*m2*x1*y2*z3+c3*cp1*cp2*m1*m2*x1*y2*z3+c1*cp3*m1*m2*x1*y2*z3+c2*cp1*cp3*m1*m2*x1*y2*z3+m3*x1*y2*z3+cp1*m3*x1*y2*z3+cp2*m3*x1*y2*z3+cp1*cp2*m3*x1*y2*z3+cp3*m3*x1*y2*z3+cp2*cp3*m3*x1*y2*z3+c1*x2*y2*z3+cp1*x2*y2*z3+c2*cp1*x2*y2*z3+cp1*cp2*x2*y2*z3+c2*cp1*cp2*x2*y2*z3+c1*cp3*x2*y2*z3+cp1*cp3*x2*y2*z3+c1*cp2*cp3*x2*y2*z3+c1*m1*x2*y2*z3+cp1*m1*x2*y2*z3+cp2*m1*x2*y2*z3+c2*cp2*m1*x2*y2*z3+cp1*cp2*m1*x2*y2*z3+cp3*m1*x2*y2*z3+c1*cp3*m1*x2*y2*z3+c2*cp3*m1*x2*y2*z3+cp1*cp3*m1*x2*y2*z3+c1*m2*x2*y2*z3+cp1*m2*x2*y2*z3+cp1*cp2*m2*x2*y2*z3+c1*cp3*m2*x2*y2*z3+cp1*cp3*m2*x2*y2*z3+cp2*m1*m2*x2*y2*z3+cp3*m1*m2*x2*y2*z3+cp1*x3*y2*z3+c2*cp1*x3*y2*z3+m1*x3*y2*z3+c2*m1*x3*y2*z3+c1*cp2*m1*x3*y2*z3+c2*cp2*m1*x3*y2*z3+cp1*cp2*m1*x3*y2*z3+c1*cp1*cp2*m1*x3*y2*z3+cp3*m1*x3*y2*z3+c1*cp3*m1*x3*y2*z3+c2*cp3*m1*x3*y2*z3+c1*cp2*cp3*m1*x3*y2*z3+c1*cp2*m2*x3*y2*z3+c1*cp1*cp2*m2*x3*y2*z3+c1*cp3*m2*x3*y2*z3+c1*cp2*cp3*m2*x3*y2*z3+c2*cp2*m1*m2*x3*y2*z3+cp3*m1*m2*x3*y2*z3+c2*cp3*m1*m2*x3*y2*z3+y1*y2*z3+c1*c2*y1*y2*z3+c3*y1*y2*z3+c2*c3*y1*y2*z3+c2*cp1*y1*y2*z3+c1*c2*cp1*y1*y2*z3+c3*cp1*y1*y2*z3+cp2*y1*y2*z3+c3*cp1*cp2*y1*y2*z3+c2*cp3*y1*y2*z3+c3*cp3*y1*y2*z3+cp1*cp3*y1*y2*z3+c1*cp1*cp3*y1*y2*z3+c1*cp2*cp3*y1*y2*z3+c2*cp2*cp3*y1*y2*z3+c3*cp2*cp3*y1*y2*z3+m1*y1*y2*z3+c1*m1*y1*y2*z3+c2*m1*y1*y2*z3+cp1*m1*y1*y2*z3+c1*c2*cp1*m1*y1*y2*z3+cp2*m1*y1*y2*z3+c1*cp2*m1*y1*y2*z3+c2*cp2*m1*y1*y2*z3+c1*c2*cp2*m1*y1*y2*z3+c2*cp1*cp2*m1*y1*y2*z3+cp3*m1*y1*y2*z3+c1*cp3*m1*y1*y2*z3+c2*cp3*m1*y1*y2*z3+c1*c2*cp3*m1*y1*y2*z3+cp1*cp3*m1*y1*y2*z3+c1*cp1*cp3*m1*y1*y2*z3+c2*cp1*cp3*m1*y1*y2*z3+c1*cp2*cp3*m1*y1*y2*z3+m2*y1*y2*z3+c1*m2*y1*y2*z3+c2*m2*y1*y2*z3+c1*c2*m2*y1*y2*z3+c3*m2*y1*y2*z3+c1*c3*m2*y1*y2*z3+cp1*m2*y1*y2*z3+c2*c3*cp1*m2*y1*y2*z3+cp2*m2*y1*y2*z3+c1*cp2*m2*y1*y2*z3+c1*c3*cp2*m2*y1*y2*z3+c1*cp3*m2*y1*y2*z3+c2*cp3*m2*y1*y2*z3+c1*c2*cp3*m2*y1*y2*z3+c1*cp1*cp3*m2*y1*y2*z3+c2*cp1*cp3*m2*y1*y2*z3+m1*m2*y1*y2*z3+cp1*m1*m2*y1*y2*z3+c1*cp1*m1*m2*y1*y2*z3+c2*cp1*m1*m2*y1*y2*z3+c3*cp1*m1*m2*y1*y2*z3+cp2*m1*m2*y1*y2*z3+c1*cp2*m1*m2*y1*y2*z3+c3*cp1*cp2*m1*m2*y1*y2*z3+cp3*m1*m2*y1*y2*z3+c1*cp3*m1*m2*y1*y2*z3+cp1*cp3*m1*m2*y1*y2*z3+c2*cp1*cp3*m1*m2*y1*y2*z3+m3*y1*y2*z3+cp1*m3*y1*y2*z3+cp2*m3*y1*y2*z3+cp1*cp2*m3*y1*y2*z3+cp3*m3*y1*y2*z3+cp2*cp3*m3*y1*y2*z3+c2*c3*cp1*y3*z3+c1*c2*cp2*y3*z3+c1*cp1*cp2*y3*z3+c1*c2*cp3*y3*z3+c1*cp2*m1*y3*z3+c1*c3*cp2*m1*y3*z3+cp1*cp2*m1*y3*z3+c3*cp1*cp2*m1*y3*z3+c2*c3*cp3*m1*y3*z3+c1*cp2*cp3*m1*y3*z3+c1*c3*cp1*m2*y3*z3+c1*c3*cp2*m2*y3*z3+cp1*cp2*m2*y3*z3+c1*cp1*cp2*m2*y3*z3+c3*cp2*cp3*m1*m2*y3*z3+c2*m2*x1*y3*z3+c1*c3*m2*x1*y3*z3+c2*c3*m2*x1*y3*z3+c2*cp1*m2*x1*y3*z3+cp2*m2*x1*y3*z3+c1*cp2*m2*x1*y3*z3+c2*cp2*m2*x1*y3*z3+cp1*cp2*m2*x1*y3*z3+cp3*m2*x1*y3*z3+cp1*cp3*m2*x1*y3*z3+c1*cp1*m1*m2*x1*y3*z3+c2*cp1*m1*m2*x1*y3*z3+c3*cp1*m1*m2*x1*y3*z3+c1*cp2*m1*m2*x1*y3*z3+c2*cp2*m1*m2*x1*y3*z3+cp1*cp2*m1*m2*x1*y3*z3+c1*cp3*m1*m2*x1*y3*z3+c2*cp3*m1*m2*x1*y3*z3+c1*x2*y3*z3+c1*cp1*x2*y3*z3+c1*cp2*x2*y3*z3+c1*cp1*cp2*x2*y3*z3+c1*cp3*x2*y3*z3+c1*cp1*cp3*x2*y3*z3+c1*m1*x2*y3*z3+c1*cp1*m1*x2*y3*z3+c1*cp2*m1*x2*y3*z3+c2*cp2*m1*x2*y3*z3+c1*cp1*cp2*m1*x2*y3*z3+cp3*m1*x2*y3*z3+c1*cp3*m1*x2*y3*z3+c2*cp3*m1*x2*y3*z3+c1*cp1*cp3*m1*x2*y3*z3+cp2*cp3*m1*x2*y3*z3+c1*m2*x2*y3*z3+c1*cp1*m2*x2*y3*z3+c1*cp2*m2*x2*y3*z3+c1*cp1*cp2*m2*x2*y3*z3+c1*cp3*m2*x2*y3*z3+c1*cp1*cp3*m2*x2*y3*z3+c2*cp2*m1*m2*x2*y3*z3+cp3*m1*m2*x2*y3*z3+c2*cp3*m1*m2*x2*y3*z3+cp2*cp3*m1*m2*x2*y3*z3+c2*cp1*x3*y3*z3+c2*m1*x3*y3*z3+cp1*cp2*m1*x3*y3*z3+cp2*cp3*m1*x3*y3*z3+cp3*m1*m2*x3*y3*z3+c2*m2*y1*y3*z3+c3*m2*y1*y3*z3+c1*c3*m2*y1*y3*z3+c2*c3*m2*y1*y3*z3+c2*cp1*m2*y1*y3*z3+c1*cp2*m2*y1*y3*z3+c2*cp2*m2*y1*y3*z3+cp1*cp2*m2*y1*y3*z3+cp3*m2*y1*y3*z3+cp1*cp3*m2*y1*y3*z3+m1*m2*y1*y3*z3+cp1*m1*m2*y1*y3*z3+c1*cp1*m1*m2*y1*y3*z3+c2*cp1*m1*m2*y1*y3*z3+c3*cp1*m1*m2*y1*y3*z3+cp2*m1*m2*y1*y3*z3+c1*cp2*m1*m2*y1*y3*z3+c2*cp2*m1*m2*y1*y3*z3+cp3*m1*m2*y1*y3*z3+c1*cp3*m1*m2*y1*y3*z3+c2*cp3*m1*m2*y1*y3*z3+cp1*cp3*m1*m2*y1*y3*z3+c1*y2*y3*z3+cp1*y2*y3*z3+c1*cp1*y2*y3*z3+c2*cp1*y2*y3*z3+c1*cp2*y2*y3*z3+c1*cp1*cp2*y2*y3*z3+c1*cp3*y2*y3*z3+cp1*cp3*y2*y3*z3+c1*cp1*cp3*y2*y3*z3+m1*y2*y3*z3+c1*m1*y2*y3*z3+c2*m1*y2*y3*z3+cp1*m1*y2*y3*z3+c1*cp1*m1*y2*y3*z3+cp2*m1*y2*y3*z3+c1*cp2*m1*y2*y3*z3+c2*cp2*m1*y2*y3*z3+cp1*cp2*m1*y2*y3*z3+c1*cp1*cp2*m1*y2*y3*z3+cp3*m1*y2*y3*z3+c1*cp3*m1*y2*y3*z3+c2*cp3*m1*y2*y3*z3+cp1*cp3*m1*y2*y3*z3+c1*cp1*cp3*m1*y2*y3*z3+cp2*cp3*m1*y2*y3*z3+c1*m2*y2*y3*z3+cp1*m2*y2*y3*z3+c1*cp1*m2*y2*y3*z3+c1*cp2*m2*y2*y3*z3+c1*cp1*cp2*m2*y2*y3*z3+c1*cp3*m2*y2*y3*z3+cp1*cp3*m2*y2*y3*z3+c1*cp1*cp3*m2*y2*y3*z3+c2*cp2*m1*m2*y2*y3*z3+c2*cp3*m1*m2*y2*y3*z3+cp2*cp3*m1*m2*y2*y3*z3+c1*c2*cp1*z1*z3+c1*c2*cp2*z1*z3+c1*c3*cp2*z1*z3+c1*cp1*cp2*z1*z3+c2*cp1*m1*z1*z3+c2*c3*cp1*m1*z1*z3+c2*cp2*m1*z1*z3+c3*cp2*m1*z1*z3+c1*m2*z1*z3+c2*m2*z1*z3+c1*c3*m2*z1*z3+c2*c3*m2*z1*z3+c2*cp1*m2*z1*z3+c1*cp2*m2*z1*z3+c2*cp2*m2*z1*z3+c1*c3*cp3*m2*z1*z3+c2*c3*cp3*m2*z1*z3+c3*cp1*cp3*m2*z1*z3+c1*cp2*cp3*m2*z1*z3+c3*cp2*cp3*m2*z1*z3+c1*m1*m2*z1*z3+c2*m1*m2*z1*z3+c3*m1*m2*z1*z3+cp1*m1*m2*z1*z3+c2*cp1*m1*m2*z1*z3+c3*cp1*m1*m2*z1*z3+c3*cp2*m1*m2*z1*z3+cp1*cp2*m1*m2*z1*z3+cp3*m1*m2*z1*z3+c1*cp3*m1*m2*z1*z3+c2*cp3*m1*m2*z1*z3+c3*cp3*m1*m2*z1*z3+cp1*cp3*m1*m2*z1*z3+c2*cp1*cp3*m1*m2*z1*z3+c3*cp2*cp3*m1*m2*z1*z3+c1*cp2*x1*z1*z3+c3*cp2*x1*z1*z3+c2*cp3*x1*z1*z3+c1*cp2*m1*x1*z1*z3+c2*cp2*m1*x1*z1*z3+cp1*cp2*m1*x1*z1*z3+c2*cp3*m1*x1*z1*z3+m2*x1*z1*z3+c3*m2*x1*z1*z3+c1*c3*m2*x1*z1*z3+c2*c3*m2*x1*z1*z3+c1*cp3*m2*x1*z1*z3+c2*cp3*m2*x1*z1*z3+cp1*cp3*m2*x1*z1*z3+c1*m1*m2*x1*z1*z3+c2*m1*m2*x1*z1*z3+c3*m1*m2*x1*z1*z3+c3*cp2*m1*m2*x1*z1*z3+c1*cp3*m1*m2*x1*z1*z3+c2*cp3*m1*m2*x1*z1*z3+cp2*m3*x1*z1*z3+x2*z1*z3+c1*x2*z1*z3+c2*x2*z1*z3+c3*x2*z1*z3+c2*c3*x2*z1*z3+cp1*x2*z1*z3+c1*cp1*x2*z1*z3+c2*cp1*x2*z1*z3+c3*cp1*x2*z1*z3+cp2*x2*z1*z3+c2*cp2*x2*z1*z3+c1*c2*cp2*x2*z1*z3+c3*cp2*x2*z1*z3+cp1*cp2*x2*z1*z3+c3*cp1*cp2*x2*z1*z3+cp3*x2*z1*z3+c1*cp3*x2*z1*z3+c2*cp3*x2*z1*z3+c3*cp3*x2*z1*z3+c1*cp1*cp3*x2*z1*z3+c2*cp1*cp3*x2*z1*z3+cp2*cp3*x2*z1*z3+c2*cp2*cp3*x2*z1*z3+c3*cp2*cp3*x2*z1*z3+m1*x2*z1*z3+c1*m1*x2*z1*z3+c1*c2*m1*x2*z1*z3+cp1*m1*x2*z1*z3+c1*c2*cp1*m1*x2*z1*z3+c2*cp2*m1*x2*z1*z3+c1*c2*cp2*m1*x2*z1*z3+c1*cp1*cp2*m1*x2*z1*z3+c1*cp3*m1*x2*z1*z3+c2*cp3*m1*x2*z1*z3+c1*c2*cp3*m1*x2*z1*z3+cp1*cp3*m1*x2*z1*z3+c1*cp1*cp3*m1*x2*z1*z3+cp2*cp3*m1*x2*z1*z3+c1*cp2*cp3*m1*x2*z1*z3+c1*m2*x2*z1*z3+c2*m2*x2*z1*z3+c1*c2*m2*x2*z1*z3+c1*c3*m2*x2*z1*z3+c2*c3*m2*x2*z1*z3+c1*cp1*m2*x2*z1*z3+c3*cp1*m2*x2*z1*z3+c2*c3*cp1*m2*x2*z1*z3+c1*c3*cp2*m2*x2*z1*z3+cp3*m2*x2*z1*z3+c1*cp3*m2*x2*z1*z3+c1*c2*cp3*m2*x2*z1*z3+cp1*cp3*m2*x2*z1*z3+c1*cp1*cp3*m2*x2*z1*z3+c2*cp1*cp3*m2*x2*z1*z3+c1*m1*m2*x2*z1*z3+c2*m1*m2*x2*z1*z3+c3*m1*m2*x2*z1*z3+c1*cp1*m1*m2*x2*z1*z3+c2*cp1*m1*m2*x2*z1*z3+c3*cp1*m1*m2*x2*z1*z3+c1*cp2*m1*m2*x2*z1*z3+c3*cp2*m1*m2*x2*z1*z3+cp1*cp2*m1*m2*x2*z1*z3+c3*cp1*cp2*m1*m2*x2*z1*z3+c1*cp3*m1*m2*x2*z1*z3+c2*cp3*m1*m2*x2*z1*z3+cp1*cp3*m1*m2*x2*z1*z3+c2*cp1*cp3*m1*m2*x2*z1*z3+cp1*m3*x2*z1*z3+cp1*cp2*m3*x2*z1*z3+cp3*m3*x2*z1*z3+cp2*cp3*m3*x2*z1*z3+c2*cp1*x3*z1*z3+c1*cp2*x3*z1*z3+c2*cp2*x3*z1*z3+cp1*cp2*x3*z1*z3+cp2*cp3*x3*z1*z3+cp2*m1*x3*z1*z3+cp2*cp3*m1*x3*z1*z3+m2*x3*z1*z3+c1*c3*m2*x3*z1*z3+c2*c3*m2*x3*z1*z3+cp1*m2*x3*z1*z3+c1*cp1*m2*x3*z1*z3+c3*cp1*m2*x3*z1*z3+cp2*m2*x3*z1*z3+c3*cp2*m2*x3*z1*z3+cp1*cp2*m2*x3*z1*z3+cp3*m2*x3*z1*z3+cp2*cp3*m2*x3*z1*z3+c1*m1*m2*x3*z1*z3+c2*m1*m2*x3*z1*z3+c3*m1*m2*x3*z1*z3+c1*cp1*m1*m2*x3*z1*z3+c2*cp1*m1*m2*x3*z1*z3+c3*cp1*m1*m2*x3*z1*z3+c1*cp2*m1*m2*x3*z1*z3+c2*cp2*m1*m2*x3*z1*z3+c1*cp3*m1*m2*x3*z1*z3+c2*cp3*m1*m2*x3*z1*z3+cp1*cp3*m1*m2*x3*z1*z3+cp2*cp3*m1*m2*x3*z1*z3+cp2*y1*z1*z3+c1*cp2*y1*z1*z3+c2*cp2*y1*z1*z3+c3*cp2*y1*z1*z3+cp1*cp2*y1*z1*z3+c2*cp3*y1*z1*z3+cp2*m1*y1*z1*z3+c1*cp2*m1*y1*z1*z3+c2*cp2*m1*y1*z1*z3+c2*cp3*m1*y1*z1*z3+cp2*cp3*m1*y1*z1*z3+m2*y1*z1*z3+c1*m2*y1*z1*z3+c2*m2*y1*z1*z3+c3*m2*y1*z1*z3+c1*c3*m2*y1*z1*z3+c2*c3*m2*y1*z1*z3+cp1*m2*y1*z1*z3+c3*cp1*m2*y1*z1*z3+c3*cp2*m2*y1*z1*z3+cp3*m2*y1*z1*z3+cp1*cp3*m2*y1*z1*z3+m1*m2*y1*z1*z3+c1*m1*m2*y1*z1*z3+c2*m1*m2*y1*z1*z3+c3*m1*m2*y1*z1*z3+cp1*m1*m2*y1*z1*z3+c3*cp2*m1*m2*y1*z1*z3+cp3*m1*m2*y1*z1*z3+c1*cp3*m1*m2*y1*z1*z3+c2*cp3*m1*m2*y1*z1*z3+cp1*cp3*m1*m2*y1*z1*z3+cp2*m3*y1*z1*z3+y2*z1*z3+c1*y2*z1*z3+c2*y2*z1*z3+c2*c3*y2*z1*z3+cp1*y2*z1*z3+c1*cp1*y2*z1*z3+c3*cp1*y2*z1*z3+cp2*y2*z1*z3+c1*cp2*y2*z1*z3+c1*c2*cp2*y2*z1*z3+c3*cp2*y2*z1*z3+c3*cp1*cp2*y2*z1*z3+cp3*y2*z1*z3+c1*cp3*y2*z1*z3+c2*cp3*y2*z1*z3+c3*cp3*y2*z1*z3+c1*cp1*cp3*y2*z1*z3+c2*cp1*cp3*y2*z1*z3+c2*cp2*cp3*y2*z1*z3+c3*cp2*cp3*y2*z1*z3+m1*y2*z1*z3+c2*m1*y2*z1*z3+c1*c2*m1*y2*z1*z3+c1*cp1*m1*y2*z1*z3+c2*cp1*m1*y2*z1*z3+c1*c2*cp1*m1*y2*z1*z3+c1*cp2*m1*y2*z1*z3+c1*c2*cp2*m1*y2*z1*z3+cp1*cp2*m1*y2*z1*z3+c1*cp1*cp2*m1*y2*z1*z3+cp3*m1*y2*z1*z3+c1*c2*cp3*m1*y2*z1*z3+c1*cp1*cp3*m1*y2*z1*z3+c1*cp2*cp3*m1*y2*z1*z3+m2*y2*z1*z3+c1*c2*m2*y2*z1*z3+c1*c3*m2*y2*z1*z3+c2*c3*m2*y2*z1*z3+c1*cp1*m2*y2*z1*z3+c2*c3*cp1*m2*y2*z1*z3+c3*cp2*m2*y2*z1*z3+c1*c3*cp2*m2*y2*z1*z3+cp3*m2*y2*z1*z3+c2*cp3*m2*y2*z1*z3+c1*c2*cp3*m2*y2*z1*z3+cp1*cp3*m2*y2*z1*z3+c1*cp1*cp3*m2*y2*z1*z3+c2*cp1*cp3*m2*y2*z1*z3+c1*m1*m2*y2*z1*z3+c2*m1*m2*y2*z1*z3+c3*m1*m2*y2*z1*z3+c1*cp1*m1*m2*y2*z1*z3+c2*cp1*m1*m2*y2*z1*z3+c3*cp1*m1*m2*y2*z1*z3+cp2*m1*m2*y2*z1*z3+c1*cp2*m1*m2*y2*z1*z3+c3*cp2*m1*m2*y2*z1*z3+cp1*cp2*m1*m2*y2*z1*z3+c3*cp1*cp2*m1*m2*y2*z1*z3+c1*cp3*m1*m2*y2*z1*z3+c2*cp3*m1*m2*y2*z1*z3+c2*cp1*cp3*m1*m2*y2*z1*z3+cp1*m3*y2*z1*z3+cp1*cp2*m3*y2*z1*z3+cp3*m3*y2*z1*z3+cp2*cp3*m3*y2*z1*z3+c1*c3*m2*y3*z1*z3+c2*c3*m2*y3*z1*z3+c2*cp1*m2*y3*z1*z3+c1*cp2*m2*y3*z1*z3+c2*cp2*m2*y3*z1*z3+cp1*cp2*m2*y3*z1*z3+cp1*cp3*m2*y3*z1*z3+c1*m1*m2*y3*z1*z3+c2*m1*m2*y3*z1*z3+c3*m1*m2*y3*z1*z3+c1*cp1*m1*m2*y3*z1*z3+c2*cp1*m1*m2*y3*z1*z3+c3*cp1*m1*m2*y3*z1*z3+cp2*m1*m2*y3*z1*z3+c1*cp2*m1*m2*y3*z1*z3+c2*cp2*m1*m2*y3*z1*z3+cp1*cp2*m1*m2*y3*z1*z3+c1*cp3*m1*m2*y3*z1*z3+c2*cp3*m1*m2*y3*z1*z3+c1*c2*cp1*z2*z3+c1*c2*cp2*cp3*z2*z3+c1*cp1*m1*z2*z3+c1*c2*cp1*m1*z2*z3+c3*cp1*m1*z2*z3+c1*c3*cp1*m1*z2*z3+c2*c3*cp1*m1*z2*z3+c1*cp2*m1*z2*z3+cp1*cp2*m1*z2*z3+c2*cp1*cp2*m1*z2*z3+c3*cp1*cp2*m1*z2*z3+c1*c3*cp1*cp2*m1*z2*z3+c1*cp3*m1*z2*z3+cp1*cp3*m1*z2*z3+c1*cp1*cp3*m1*z2*z3+c1*c2*cp2*cp3*m1*z2*z3+c1*cp1*m2*z2*z3+c1*c3*cp1*m2*z2*z3+c1*c2*cp1*cp3*m2*z2*z3+c1*c2*cp2*cp3*m2*z2*z3+c2*m1*m2*z2*z3+cp1*m1*m2*z2*z3+c1*cp1*m1*m2*z2*z3+c2*cp1*m1*m2*z2*z3+cp2*m1*m2*z2*z3+c3*cp2*m1*m2*z2*z3+c1*cp1*cp2*m1*m2*z2*z3+c2*cp3*m1*m2*z2*z3+cp1*cp3*m1*m2*z2*z3+cp2*cp3*m1*m2*z2*z3+c2*cp2*cp3*m1*m2*z2*z3+c3*cp2*cp3*m1*m2*z2*z3+c1*x1*z2*z3+c1*c2*x1*z2*z3+c2*c3*x1*z2*z3+c1*cp1*x1*z2*z3+c1*c2*cp1*x1*z2*z3+c1*cp2*x1*z2*z3+c3*cp2*x1*z2*z3+c3*cp1*cp2*x1*z2*z3+cp3*x1*z2*z3+c2*cp3*x1*z2*z3+cp1*cp3*x1*z2*z3+c1*cp1*cp3*x1*z2*z3+c2*cp1*cp3*x1*z2*z3+c2*cp2*cp3*x1*z2*z3+c3*cp2*cp3*x1*z2*z3+m1*x1*z2*z3+c1*m1*x1*z2*z3+c2*m1*x1*z2*z3+cp1*m1*x1*z2*z3+c1*cp1*m1*x1*z2*z3+c1*c2*cp1*m1*x1*z2*z3+cp2*m1*x1*z2*z3+c2*cp2*m1*x1*z2*z3+c1*c2*cp2*m1*x1*z2*z3+cp3*m1*x1*z2*z3+c1*cp3*m1*x1*z2*z3+c2*cp3*m1*x1*z2*z3+c1*c2*cp3*m1*x1*z2*z3+c1*cp1*cp3*m1*x1*z2*z3+cp2*cp3*m1*x1*z2*z3+c1*cp2*cp3*m1*x1*z2*z3+c1*m2*x1*z2*z3+c2*m2*x1*z2*z3+c1*c2*m2*x1*z2*z3+c2*c3*m2*x1*z2*z3+cp1*m2*x1*z2*z3+c3*cp1*m2*x1*z2*z3+c2*c3*cp1*m2*x1*z2*z3+cp2*m2*x1*z2*z3+c1*cp2*m2*x1*z2*z3+c1*c3*cp2*m2*x1*z2*z3+cp3*m2*x1*z2*z3+c1*c2*cp3*m2*x1*z2*z3+c1*cp1*cp3*m2*x1*z2*z3+c2*cp1*cp3*m2*x1*z2*z3+c1*cp1*m1*m2*x1*z2*z3+c2*cp1*m1*m2*x1*z2*z3+cp2*m1*m2*x1*z2*z3+c1*cp2*m1*m2*x1*z2*z3+cp1*cp2*m1*m2*x1*z2*z3+c3*cp1*cp2*m1*m2*x1*z2*z3+c1*cp3*m1*m2*x1*z2*z3+c2*cp1*cp3*m1*m2*x1*z2*z3+cp1*cp2*m3*x1*z2*z3+cp2*cp3*m3*x1*z2*z3+c1*x2*z2*z3+c1*c2*cp3*x2*z2*z3+cp1*cp3*x2*z2*z3+m1*x2*z2*z3+c1*m1*x2*z2*z3+c2*m1*x2*z2*z3+c2*cp1*m1*x2*z2*z3+c2*cp2*m1*x2*z2*z3+c2*cp1*cp2*m1*x2*z2*z3+cp3*m1*x2*z2*z3+c1*cp3*m1*x2*z2*z3+c2*cp3*m1*x2*z2*z3+cp1*cp3*m1*x2*z2*z3+c1*m2*x2*z2*z3+c1*cp3*m2*x2*z2*z3+cp1*cp3*m2*x2*z2*z3+c1*m1*m2*x2*z2*z3+cp1*m1*m2*x2*z2*z3+cp2*m1*m2*x2*z2*z3+cp1*cp2*m1*m2*x2*z2*z3+c1*cp3*m1*m2*x2*z2*z3+cp1*cp3*m1*m2*x2*z2*z3+cp1*m1*x3*z2*z3+c1*cp1*m1*x3*z2*z3+c2*cp1*m1*x3*z2*z3+cp1*cp2*m1*x3*z2*z3+c1*cp1*cp2*m1*x3*z2*z3+c1*cp2*cp3*m1*x3*z2*z3+c1*cp1*m2*x3*z2*z3+c1*cp1*cp2*m2*x3*z2*z3+c1*cp2*cp3*m2*x3*z2*z3+m1*m2*x3*z2*z3+c2*m1*m2*x3*z2*z3+cp2*m1*m2*x3*z2*z3+c2*cp2*m1*m2*x3*z2*z3+cp3*m1*m2*x3*z2*z3+c2*cp3*m1*m2*x3*z2*z3+y1*z2*z3+c1*c2*y1*z2*z3+c2*c3*y1*z2*z3+c1*cp1*y1*z2*z3+c1*c2*cp1*y1*z2*z3+cp2*y1*z2*z3+c1*cp2*y1*z2*z3+c2*cp2*y1*z2*z3+c3*cp2*y1*z2*z3+c3*cp1*cp2*y1*z2*z3+cp3*y1*z2*z3+c2*cp3*y1*z2*z3+c1*cp1*cp3*y1*z2*z3+cp2*cp3*y1*z2*z3+c1*cp2*cp3*y1*z2*z3+c2*cp2*cp3*y1*z2*z3+c3*cp2*cp3*y1*z2*z3+cp1*m1*y1*z2*z3+c1*cp1*m1*y1*z2*z3+c2*cp1*m1*y1*z2*z3+c1*c2*cp1*m1*y1*z2*z3+c1*c2*cp2*m1*y1*z2*z3+c2*cp1*cp2*m1*y1*z2*z3+c1*c2*cp3*m1*y1*z2*z3+cp1*cp3*m1*y1*z2*z3+c1*cp1*cp3*m1*y1*z2*z3+c2*cp1*cp3*m1*y1*z2*z3+cp2*cp3*m1*y1*z2*z3+c1*cp2*cp3*m1*y1*z2*z3+c1*c2*m2*y1*z2*z3+c2*c3*m2*y1*z2*z3+cp1*m2*y1*z2*z3+c3*cp1*m2*y1*z2*z3+c2*c3*cp1*m2*y1*z2*z3+cp2*m2*y1*z2*z3+c1*cp2*m2*y1*z2*z3+c3*cp2*m2*y1*z2*z3+c1*c3*cp2*m2*y1*z2*z3+c1*cp3*m2*y1*z2*z3+c2*cp3*m2*y1*z2*z3+c1*c2*cp3*m2*y1*z2*z3+c1*cp1*cp3*m2*y1*z2*z3+c2*cp1*cp3*m2*y1*z2*z3+cp1*m1*m2*y1*z2*z3+c1*cp1*m1*m2*y1*z2*z3+c2*cp1*m1*m2*y1*z2*z3+c1*cp2*m1*m2*y1*z2*z3+c3*cp1*cp2*m1*m2*y1*z2*z3+c1*cp3*m1*m2*y1*z2*z3+cp1*cp3*m1*m2*y1*z2*z3+c2*cp1*cp3*m1*m2*y1*z2*z3+cp1*cp2*m3*y1*z2*z3+cp2*cp3*m3*y1*z2*z3+cp1*cp2*y2*z2*z3+c2*cp1*cp2*y2*z2*z3+c1*c2*cp3*y2*z2*z3+c1*cp2*cp3*y2*z2*z3+c2*cp1*m1*y2*z2*z3+c2*cp1*cp2*m1*y2*z2*z3+cp1*cp2*m2*y2*z2*z3+c1*m1*m2*y2*z2*z3+cp1*m1*m2*y2*z2*z3+cp1*cp2*m1*m2*y2*z2*z3+c1*cp3*m1*m2*y2*z2*z3+cp1*cp3*m1*m2*y2*z2*z3+c1*cp1*cp2*y3*z2*z3+c1*cp1*cp3*y3*z2*z3+c2*cp1*m1*y3*z2*z3+cp1*cp2*m1*y3*z2*z3+c1*cp1*cp2*m1*y3*z2*z3+c1*cp1*cp3*m1*y3*z2*z3+c1*cp1*cp2*m2*y3*z2*z3+c1*cp1*cp3*m2*y3*z2*z3+m1*m2*y3*z2*z3+c2*m1*m2*y3*z2*z3+cp1*m1*m2*y3*z2*z3+cp2*m1*m2*y3*z2*z3+c2*cp2*m1*m2*y3*z2*z3+cp3*m1*m2*y3*z2*z3+c2*cp3*m1*m2*y3*z2*z3+cp1*cp3*m1*m2*y3*z2*z3+c2*c3*z1*z2*z3+c1*cp1*z1*z2*z3+c1*cp2*z1*z2*z3+c1*c2*cp2*z1*z2*z3+c3*cp1*cp2*z1*z2*z3+c1*cp1*cp3*z1*z2*z3+c2*cp1*cp3*z1*z2*z3+c2*cp2*cp3*z1*z2*z3+c3*cp2*cp3*z1*z2*z3+c2*m1*z1*z2*z3+c1*c2*m1*z1*z2*z3+cp1*m1*z1*z2*z3+c1*cp1*m1*z1*z2*z3+c2*cp1*m1*z1*z2*z3+c1*c2*cp1*m1*z1*z2*z3+c1*cp2*m1*z1*z2*z3+c1*c2*cp2*m1*z1*z2*z3+cp1*cp2*m1*z1*z2*z3+c1*cp1*cp2*m1*z1*z2*z3+cp3*m1*z1*z2*z3+c1*cp3*m1*z1*z2*z3+c2*cp3*m1*z1*z2*z3+c1*c2*cp3*m1*z1*z2*z3+cp1*cp3*m1*z1*z2*z3+c1*cp1*cp3*m1*z1*z2*z3+cp2*cp3*m1*z1*z2*z3+c1*cp2*cp3*m1*z1*z2*z3+m2*z1*z2*z3+c1*m2*z1*z2*z3+c2*m2*z1*z2*z3+c1*c2*m2*z1*z2*z3+c3*m2*z1*z2*z3+cp1*m2*z1*z2*z3+c1*cp1*m2*z1*z2*z3+c3*cp1*m2*z1*z2*z3+c2*c3*cp1*m2*z1*z2*z3+cp2*m2*z1*z2*z3+c1*c3*cp2*m2*z1*z2*z3+cp3*m2*z1*z2*z3+c2*cp3*m2*z1*z2*z3+c1*c2*cp3*m2*z1*z2*z3+cp1*cp3*m2*z1*z2*z3+c1*cp1*cp3*m2*z1*z2*z3+c2*cp1*cp3*m2*z1*z2*z3+c1*m1*m2*z1*z2*z3+c2*m1*m2*z1*z2*z3+cp1*m1*m2*z1*z2*z3+c1*cp1*m1*m2*z1*z2*z3+c2*cp1*m1*m2*z1*z2*z3+cp2*m1*m2*z1*z2*z3+c1*cp2*m1*m2*z1*z2*z3+c3*cp2*m1*m2*z1*z2*z3+cp1*cp2*m1*m2*z1*z2*z3+c3*cp1*cp2*m1*m2*z1*z2*z3+cp3*m1*m2*z1*z2*z3+c1*cp3*m1*m2*z1*z2*z3+c2*cp3*m1*m2*z1*z2*z3+c2*cp1*cp3*m1*m2*z1*z2*z3+cp2*m3*z1*z2*z3+cp1*cp2*m3*z1*z2*z3+cp2*cp3*m3*z1*z2*z3+(1/2)*c2*cp1*z3*(1+z3)+(1/2)*c1*c2*cp1*z3*(1+z3)+(1/2)*c1*cp2*z3*(1+z3)+(1/2)*c1*c2*cp2*z3*(1+z3)+(1/2)*cp1*cp2*z3*(1+z3)+(1/2)*c1*cp1*cp2*z3*(1+z3)+(1/2)*c1*c2*cp3*z3*(1+z3)+(1/2)*c2*cp1*m1*z3*(1+z3)+(1/2)*cp2*m1*z3*(1+z3)+(1/2)*c1*cp2*m1*z3*(1+z3)+(1/2)*c2*cp2*m1*z3*(1+z3)+(1/2)*cp1*cp2*m1*z3*(1+z3)+(1/2)*c2*cp3*m1*z3*(1+z3)+(1/2)*cp2*cp3*m1*z3*(1+z3)+(1/2)*c1*cp2*cp3*m1*z3*(1+z3)+(1/2)*c2*cp2*cp3*m1*z3*(1+z3)+(1/2)*c3*cp2*cp3*m1*z3*(1+z3)+(1/2)*cp1*m2*z3*(1+z3)+(1/2)*c2*cp1*m2*z3*(1+z3)+(1/2)*m1*m2*z3*(1+z3)+(1/2)*cp2*m1*m2*z3*(1+z3)+(1/2)*cp1*cp2*m1*m2*z3*(1+z3)+(1/2)*cp3*m1*m2*z3*(1+z3);
end;
#####################################################################
C1plusC2in119:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return
c2*c3*x1+c2*c3*cp1*x1+c1*c3*cp2*x1+c2*c3*cp2*x1+c2*cp3*x1+c3*cp2*m1*x1+c3*cp1*cp2*m1*x1+c3*m2*x1+cp3*m2*x1+c2*cp3*m2*x1+c3*cp3*m2*x1+c1*cp1*cp3*m2*x1+(1/2)*c2*cp3*x1*(1+x1)+(1/2)*cp2*cp3*m1*x1*(1+x1)+(1/2)*cp2*cp3*m1*x1^2*(1+x1)+(1/2)*cp1*cp3*m2*x1^2*(1+x1)+(1/2)*cp2*cp3*m2*x1^2*(1+x1)+c3*m1*x2+c3*cp3*m1*x2+c1*c3*x1*x2+c1*c3*cp2*x1*x2+c1*cp3*x1*x2+c2*cp3*x1*x2+c1*c2*cp3*x1*x2+cp1*cp3*x1*x2+c1*cp1*cp3*x1*x2+c2*cp1*cp3*x1*x2+c1*cp2*cp3*x1*x2+c3*m1*x1*x2+c3*cp1*m1*x1*x2+c3*cp2*m1*x1*x2+c3*cp1*cp2*m1*x1*x2+cp3*m1*x1*x2+c1*cp3*m1*x1*x2+c2*cp3*m1*x1*x2+c1*c2*cp3*m1*x1*x2+c3*cp3*m1*x1*x2+cp1*cp3*m1*x1*x2+c1*cp1*cp3*m1*x1*x2+c1*cp2*cp3*m1*x1*x2+c3*cp1*m2*x1*x2+cp1*cp3*m2*x1*x2+c2*cp1*cp3*m2*x1*x2+c3*cp1*cp3*m2*x1*x2+(1/2)*c1*cp3*x1*(1+x1)*x2+(1/2)*c1*c2*cp3*x1*(1+x1)*x2+(1/2)*cp1*cp3*x1*(1+x1)*x2+(1/2)*c1*cp1*cp3*x1*(1+x1)*x2+(1/2)*c1*cp2*cp3*x1*(1+x1)*x2+(1/2)*cp2*cp3*m1*x1*(1+x1)*x2+(1/2)*c1*cp2*cp3*m1*x1*(1+x1)*x2+(1/2)*cp2*cp3*m2*x1*(1+x1)*x2+(1/2)*cp2*cp3*m1*x2*(1+x2)+(1/2)*c1*cp3*x1*x2*(1+x2)+(1/2)*c1*c2*cp3*x1*x2*(1+x2)+(1/2)*cp1*cp3*x1*x2*(1+x2)+(1/2)*c1*cp1*cp3*x1*x2*(1+x2)+(1/2)*c1*cp2*cp3*x1*x2*(1+x2)+(1/2)*cp2*cp3*m1*x1*x2*(1+x2)+(1/2)*c1*cp2*cp3*m1*x1*x2*(1+x2)+(1/2)*cp1*cp3*m2*x1*x2*(1+x2)+(1/2)*cp2*cp3*m2*x1*x2*(1+x2)+(1/2)*cp2*cp3*m1*x2^2*(1+x2)+c2*c3*x1*x3+c2*cp1*x1*x3+c1*c2*cp2*x1*x3+c2*cp1*cp2*x1*x3+c2*cp3*x1*x3+c2*c3*cp3*x1*x3+c2*cp2*cp3*x1*x3+cp1*cp2*m1*x1*x3+cp2*cp3*m1*x1*x3+m2*x1*x3+c3*m2*x1*x3+cp1*m2*x1*x3+c1*cp1*m2*x1*x3+c2*cp1*m2*x1*x3+cp2*m2*x1*x3+c1*cp2*m2*x1*x3+c2*cp2*m2*x1*x3+cp3*m2*x1*x3+c3*cp3*m2*x1*x3+c3*cp1*cp3*m2*x1*x3+c3*cp2*cp3*m2*x1*x3+(1/2)*cp1*m2*x1*(1+x1)*x3+(1/2)*cp2*m2*x1*(1+x1)*x3+m1*x2*x3+c3*m1*x2*x3+cp3*m1*x2*x3+c3*cp3*m1*x2*x3+c2*cp1*x1*x2*x3+c2*cp2*x1*x2*x3+c2*c3*cp2*x1*x2*x3+cp1*cp2*x1*x2*x3+c2*cp3*x1*x2*x3+c2*c3*cp3*x1*x2*x3+cp2*cp3*x1*x2*x3+c2*cp2*cp3*x1*x2*x3+c3*cp2*cp3*x1*x2*x3+cp2*m2*x1*x2*x3+cp1*cp2*m2*x1*x2*x3+c2*cp3*m2*x1*x2*x3+cp1*cp3*m2*x1*x2*x3+cp2*cp3*m2*x1*x2*x3+c2*cp2*cp3*m2*x1*x2*x3+(1/2)*cp2*m1*x1*x3*(1+x3)+(1/2)*cp1*cp2*m1*x1*x3*(1+x3)+(1/2)*cp1*cp3*m2*x1*x3*(1+x3)+(1/2)*cp2*cp3*m2*x1*x3*(1+x3)+(1/2)*c1*c2*x2*x3*(1+x3)+(1/2)*c1*c3*x2*x3*(1+x3)+(1/2)*c1*cp2*m1*x2*x3*(1+x3)+c2*c3*y1+c2*c3*cp1*y1+c3*cp2*y1+c1*c3*cp2*y1+c2*c3*cp2*y1+c2*cp3*y1+c3*cp2*m1*y1+c3*cp1*cp2*m1*y1+c3*m2*y1+cp3*m2*y1+c2*cp3*m2*y1+c3*cp3*m2*y1+cp1*cp3*m2*y1+c1*cp1*cp3*m2*y1+c3*cp2*x1*y1+cp2*cp3*x1*y1+cp3*m2*x1*y1+cp1*cp3*m2*x1*y1+(1/2)*c2*cp3*x1*(1+x1)*y1+(1/2)*cp2*cp3*x1*(1+x1)*y1+(1/2)*cp1*cp3*m2*x1*(1+x1)*y1+(1/2)*cp2*cp3*m2*x1*(1+x1)*y1+c3*x2*y1+c1*c3*x2*y1+c3*cp2*x2*y1+c1*c3*cp2*x2*y1+cp3*x2*y1+c1*cp3*x2*y1+c1*c2*cp3*x2*y1+c1*cp1*cp3*x2*y1+c2*cp1*cp3*x2*y1+cp2*cp3*x2*y1+c1*cp2*cp3*x2*y1+c3*m1*x2*y1+c3*cp1*m1*x2*y1+c3*cp2*m1*x2*y1+c3*cp1*cp2*m1*x2*y1+c1*cp3*m1*x2*y1+c1*c2*cp3*m1*x2*y1+c3*cp3*m1*x2*y1+c1*cp1*cp3*m1*x2*y1+cp2*cp3*m1*x2*y1+c1*cp2*cp3*m1*x2*y1+c3*cp1*m2*x2*y1+cp1*cp3*m2*x2*y1+c2*cp1*cp3*m2*x2*y1+c3*cp1*cp3*m2*x2*y1+cp3*x1*x2*y1+c2*cp3*x1*x2*y1+cp2*cp3*x1*x2*y1+cp2*cp3*m2*x1*x2*y1+(1/2)*c3*x2*(1+x2)*y1+(1/2)*cp3*x2*(1+x2)*y1+(1/2)*c1*cp3*x2*(1+x2)*y1+(1/2)*c2*cp3*x2*(1+x2)*y1+(1/2)*c1*c2*cp3*x2*(1+x2)*y1+(1/2)*c1*cp1*cp3*x2*(1+x2)*y1+(1/2)*cp2*cp3*x2*(1+x2)*y1+(1/2)*c1*cp2*cp3*x2*(1+x2)*y1+(1/2)*c1*cp2*cp3*m1*x2*(1+x2)*y1+(1/2)*cp3*m2*x2*(1+x2)*y1+(1/2)*cp1*cp3*m2*x2*(1+x2)*y1+(1/2)*cp2*cp3*m2*x2*(1+x2)*y1+c2*c3*x3*y1+c2*cp1*x3*y1+cp2*x3*y1+c1*cp2*x3*y1+c3*cp2*x3*y1+c2*c3*cp2*x3*y1+c2*cp1*cp2*x3*y1+c2*cp3*x3*y1+c2*c3*cp3*x3*y1+c2*cp2*cp3*x3*y1+cp1*cp2*m1*x3*y1+cp2*cp3*m1*x3*y1+c1*m2*x3*y1+c2*m2*x3*y1+c1*cp1*m2*x3*y1+c2*cp1*m2*x3*y1+c1*cp2*m2*x3*y1+c2*cp2*m2*x3*y1+c3*cp3*m2*x3*y1+c3*cp1*cp3*m2*x3*y1+cp2*cp3*m2*x3*y1+c2*cp2*cp3*m2*x3*y1+c3*cp2*cp3*m2*x3*y1+cp1*m2*x1*x3*y1+cp2*m2*x1*x3*y1+x2*x3*y1+c1*x2*x3*y1+c2*x2*x3*y1+c1*c2*x2*x3*y1+c3*x2*x3*y1+c2*c3*x2*x3*y1+c2*cp1*x2*x3*y1+cp2*x2*x3*y1+c1*cp2*x2*x3*y1+c3*cp2*x2*x3*y1+c2*c3*cp2*x2*x3*y1+cp1*cp2*x2*x3*y1+c2*cp3*x2*x3*y1+c2*c3*cp3*x2*x3*y1+cp2*cp3*x2*x3*y1+c2*cp2*cp3*x2*x3*y1+c3*cp2*cp3*x2*x3*y1+cp2*m2*x2*x3*y1+cp1*cp2*m2*x2*x3*y1+cp3*m2*x2*x3*y1+cp1*cp3*m2*x2*x3*y1+c2*cp2*cp3*m2*x2*x3*y1+(1/2)*cp1*cp2*m1*x3*(1+x3)*y1+(1/2)*cp3*m2*x3*(1+x3)*y1+(1/2)*cp1*cp3*m2*x3*(1+x3)*y1+(1/2)*cp2*cp3*m2*x3*(1+x3)*y1+(1/2)*c2*cp3*y1*(1+y1)+(1/2)*cp2*cp3*m1*y1*(1+y1)+(1/2)*c2*cp3*x1*y1*(1+y1)+(1/2)*cp2*cp3*x1*y1*(1+y1)+(1/2)*cp1*cp3*m2*x1*y1*(1+y1)+(1/2)*cp2*cp3*m2*x1*y1*(1+y1)+(1/2)*cp3*x2*y1*(1+y1)+(1/2)*c1*cp3*x2*y1*(1+y1)+(1/2)*c2*cp3*x2*y1*(1+y1)+(1/2)*c1*c2*cp3*x2*y1*(1+y1)+(1/2)*c1*cp1*cp3*x2*y1*(1+y1)+(1/2)*cp2*cp3*x2*y1*(1+y1)+(1/2)*c1*cp2*cp3*x2*y1*(1+y1)+(1/2)*c1*cp2*cp3*m1*x2*y1*(1+y1)+(1/2)*cp2*cp3*m2*x2*y1*(1+y1)+(1/2)*cp1*m2*x3*y1*(1+y1)+(1/2)*cp2*m2*x3*y1*(1+y1)+(1/2)*cp2*cp3*m1*y1^2*(1+y1)+(1/2)*cp1*cp3*m2*y1^2*(1+y1)+(1/2)*cp2*cp3*m2*y1^2*(1+y1)+c3*m1*y2+c3*cp3*m1*y2+c1*c3*x1*y2+c1*c3*cp2*x1*y2+cp3*x1*y2+c2*cp3*x1*y2+c1*c2*cp3*x1*y2+c3*cp3*x1*y2+cp1*cp3*x1*y2+c1*cp1*cp3*x1*y2+c2*cp1*cp3*x1*y2+cp2*cp3*x1*y2+c1*cp2*cp3*x1*y2+c3*m1*x1*y2+c3*cp1*m1*x1*y2+c3*cp2*m1*x1*y2+c3*cp1*cp2*m1*x1*y2+c1*c2*cp3*m1*x1*y2+c3*cp3*m1*x1*y2+c1*cp1*cp3*m1*x1*y2+cp2*cp3*m1*x1*y2+c1*cp2*cp3*m1*x1*y2+c3*cp1*m2*x1*y2+c2*cp1*cp3*m2*x1*y2+c3*cp1*cp3*m2*x1*y2+cp2*cp3*m2*x1*y2+(1/2)*c2*cp3*x1*(1+x1)*y2+(1/2)*c1*c2*cp3*x1*(1+x1)*y2+(1/2)*c1*cp1*cp3*x1*(1+x1)*y2+(1/2)*cp2*cp3*x1*(1+x1)*y2+(1/2)*c1*cp2*cp3*x1*(1+x1)*y2+(1/2)*c1*cp2*cp3*m1*x1*(1+x1)*y2+(1/2)*cp2*cp3*m2*x1*(1+x1)*y2+c3*cp2*x1*x2*y2+c3*cp3*x1*x2*y2+cp2*cp3*x1*x2*y2+cp3*m2*x1*x2*y2+cp1*cp3*m2*x1*x2*y2+(1/2)*cp1*cp3*x2*(1+x2)*y2+m1*x3*y2+c3*m1*x3*y2+cp3*m1*x3*y2+c3*cp3*m1*x3*y2+x1*x3*y2+c2*x1*x3*y2+c2*cp2*x1*x3*y2+c3*cp2*x1*x3*y2+c2*c3*cp2*x1*x3*y2+cp3*x1*x3*y2+c2*cp3*x1*x3*y2+c3*cp3*x1*x3*y2+c2*c3*cp3*x1*x3*y2+c2*cp2*cp3*x1*x3*y2+c3*cp2*cp3*x1*x3*y2+cp2*m2*x1*x3*y2+cp1*cp2*m2*x1*x3*y2+cp3*m2*x1*x3*y2+c2*cp3*m2*x1*x3*y2+cp1*cp3*m2*x1*x3*y2+c2*cp2*cp3*m2*x1*x3*y2+(1/2)*c1*x3*(1+x3)*y2+(1/2)*c1*c2*x3*(1+x3)*y2+(1/2)*c1*c3*x3*(1+x3)*y2+(1/2)*cp2*m1*x3*(1+x3)*y2+(1/2)*c1*cp2*m1*x3*(1+x3)*y2+c3*y1*y2+c1*c3*y1*y2+c3*cp2*y1*y2+c1*c3*cp2*y1*y2+cp3*y1*y2+c1*c2*cp3*y1*y2+c3*cp3*y1*y2+c1*cp1*cp3*y1*y2+c2*cp1*cp3*y1*y2+c1*cp2*cp3*y1*y2+c3*m1*y1*y2+c3*cp1*m1*y1*y2+c3*cp2*m1*y1*y2+c3*cp1*cp2*m1*y1*y2+c2*cp3*m1*y1*y2+c1*c2*cp3*m1*y1*y2+c3*cp3*m1*y1*y2+cp1*cp3*m1*y1*y2+c1*cp1*cp3*m1*y1*y2+c1*cp2*cp3*m1*y1*y2+c3*cp1*m2*y1*y2+c2*cp1*cp3*m2*y1*y2+c3*cp1*cp3*m2*y1*y2+cp2*cp3*m2*y1*y2+c2*cp3*x1*y1*y2+cp2*cp3*x1*y1*y2+cp2*cp3*m2*x1*y1*y2+c3*cp2*x2*y1*y2+c3*cp3*x2*y1*y2+cp2*cp3*x2*y1*y2+cp3*m2*x2*y1*y2+cp1*cp3*m2*x2*y1*y2+x3*y1*y2+c2*x3*y1*y2+c1*c2*x3*y1*y2+c2*c3*x3*y1*y2+c2*cp2*x3*y1*y2+c3*cp2*x3*y1*y2+c2*c3*cp2*x3*y1*y2+cp3*x3*y1*y2+c2*cp3*x3*y1*y2+c3*cp3*x3*y1*y2+c2*c3*cp3*x3*y1*y2+c2*cp2*cp3*x3*y1*y2+c3*cp2*cp3*x3*y1*y2+cp2*m2*x3*y1*y2+cp1*cp2*m2*x3*y1*y2+cp3*m2*x3*y1*y2+cp1*cp3*m2*x3*y1*y2+c2*cp2*cp3*m2*x3*y1*y2+(1/2)*c1*c2*cp3*y1*(1+y1)*y2+(1/2)*cp1*cp3*y1*(1+y1)*y2+(1/2)*c1*cp1*cp3*y1*(1+y1)*y2+(1/2)*c1*cp2*cp3*y1*(1+y1)*y2+(1/2)*cp2*cp3*m1*y1*(1+y1)*y2+(1/2)*c1*cp2*cp3*m1*y1*(1+y1)*y2+(1/2)*cp2*cp3*m2*y1*(1+y1)*y2+(1/2)*cp2*cp3*m1*y2*(1+y2)+(1/2)*c2*cp3*x1*y2*(1+y2)+(1/2)*c1*c2*cp3*x1*y2*(1+y2)+(1/2)*c1*cp1*cp3*x1*y2*(1+y2)+(1/2)*cp2*cp3*x1*y2*(1+y2)+(1/2)*c1*cp2*cp3*x1*y2*(1+y2)+(1/2)*c1*cp2*cp3*m1*x1*y2*(1+y2)+(1/2)*cp1*cp3*m2*x1*y2*(1+y2)+(1/2)*cp2*cp3*m2*x1*y2*(1+y2)+(1/2)*cp1*cp3*x2*y2*(1+y2)+(1/2)*c3*y1*y2*(1+y2)+(1/2)*c1*c2*cp3*y1*y2*(1+y2)+(1/2)*cp1*cp3*y1*y2*(1+y2)+(1/2)*c1*cp1*cp3*y1*y2*(1+y2)+(1/2)*c1*cp2*cp3*y1*y2*(1+y2)+(1/2)*cp2*cp3*m1*y1*y2*(1+y2)+(1/2)*c1*cp2*cp3*m1*y1*y2*(1+y2)+(1/2)*cp3*m2*y1*y2*(1+y2)+(1/2)*cp1*cp3*m2*y1*y2*(1+y2)+(1/2)*cp2*cp3*m2*y1*y2*(1+y2)+(1/2)*cp2*cp3*m1*y2^2*(1+y2)+c2*x1*y3+c2*c3*x1*y3+c2*cp1*x1*y3+cp2*x1*y3+c1*cp2*x1*y3+c1*c2*cp2*x1*y3+cp1*cp2*x1*y3+c2*cp1*cp2*x1*y3+c2*c3*cp3*x1*y3+cp2*cp3*x1*y3+c2*cp2*cp3*x1*y3+cp1*cp2*m1*x1*y3+cp2*cp3*m1*x1*y3+c3*m2*x1*y3+c1*cp1*m2*x1*y3+c2*cp1*m2*x1*y3+c1*cp2*m2*x1*y3+c2*cp2*m2*x1*y3+c3*cp3*m2*x1*y3+cp1*cp3*m2*x1*y3+c3*cp1*cp3*m2*x1*y3+cp2*cp3*m2*x1*y3+c3*cp2*cp3*m2*x1*y3+(1/2)*cp1*m2*x1*(1+x1)*y3+(1/2)*cp2*m2*x1*(1+x1)*y3+c3*m1*x2*y3+c3*cp3*m1*x2*y3+cp1*x1*x2*y3+c2*cp1*x1*x2*y3+c3*cp2*x1*x2*y3+c2*c3*cp2*x1*x2*y3+cp1*cp2*x1*x2*y3+c3*cp3*x1*x2*y3+c2*c3*cp3*x1*x2*y3+cp2*cp3*x1*x2*y3+c2*cp2*cp3*x1*x2*y3+c3*cp2*cp3*x1*x2*y3+cp2*m2*x1*x2*y3+cp1*cp2*m2*x1*x2*y3+cp3*m2*x1*x2*y3+c2*cp3*m2*x1*x2*y3+cp1*cp3*m2*x1*x2*y3+c2*cp2*cp3*m2*x1*x2*y3+c2*x1*x3*y3+c2*cp1*x1*x3*y3+c3*cp2*x1*x3*y3+cp1*cp2*x1*x3*y3+cp2*cp3*x1*x3*y3+cp2*m1*x1*x3*y3+cp1*cp2*m1*x1*x3*y3+cp3*m2*x1*x3*y3+cp1*cp3*m2*x1*x3*y3+c2*y1*y3+c2*c3*y1*y3+c2*cp1*y1*y3+c1*cp2*y1*y3+c2*cp2*y1*y3+c2*c3*cp2*y1*y3+cp1*cp2*y1*y3+c2*cp1*cp2*y1*y3+c2*c3*cp3*y1*y3+cp2*cp3*y1*y3+c2*cp2*cp3*y1*y3+cp1*cp2*m1*y1*y3+cp2*cp3*m1*y1*y3+m2*y1*y3+c1*m2*y1*y3+c2*m2*y1*y3+cp1*m2*y1*y3+c1*cp1*m2*y1*y3+c2*cp1*m2*y1*y3+cp2*m2*y1*y3+c1*cp2*m2*y1*y3+c2*cp2*m2*y1*y3+cp3*m2*y1*y3+c3*cp3*m2*y1*y3+cp1*cp3*m2*y1*y3+c3*cp1*cp3*m2*y1*y3+cp2*cp3*m2*y1*y3+c2*cp2*cp3*m2*y1*y3+c3*cp2*cp3*m2*y1*y3+cp1*m2*x1*y1*y3+cp2*m2*x1*y1*y3+c1*c2*x2*y1*y3+c2*c3*x2*y1*y3+cp1*x2*y1*y3+c2*cp1*x2*y1*y3+cp2*x2*y1*y3+c1*cp2*x2*y1*y3+c2*cp2*x2*y1*y3+c2*c3*cp2*x2*y1*y3+cp1*cp2*x2*y1*y3+c3*cp3*x2*y1*y3+c2*c3*cp3*x2*y1*y3+cp2*cp3*x2*y1*y3+c2*cp2*cp3*x2*y1*y3+c3*cp2*cp3*x2*y1*y3+cp2*m2*x2*y1*y3+cp1*cp2*m2*x2*y1*y3+cp3*m2*x2*y1*y3+cp1*cp3*m2*x2*y1*y3+cp2*cp3*m2*x2*y1*y3+c2*cp2*cp3*m2*x2*y1*y3+c2*x3*y1*y3+c2*cp1*x3*y1*y3+cp2*x3*y1*y3+c1*cp2*x3*y1*y3+c2*cp2*x3*y1*y3+cp1*cp2*x3*y1*y3+cp2*cp3*x3*y1*y3+cp2*m1*x3*y1*y3+cp1*cp2*m1*x3*y1*y3+cp3*m2*x3*y1*y3+cp1*cp3*m2*x3*y1*y3+cp2*cp3*m2*x3*y1*y3+(1/2)*cp1*m2*y1*(1+y1)*y3+(1/2)*cp2*m2*y1*(1+y1)*y3+c3*m1*y2*y3+c3*cp3*m1*y2*y3+c2*x1*y2*y3+cp2*x1*y2*y3+c2*c3*cp2*x1*y2*y3+c2*c3*cp3*x1*y2*y3+c2*cp2*cp3*x1*y2*y3+c3*cp2*cp3*x1*y2*y3+cp2*m2*x1*y2*y3+cp1*cp2*m2*x1*y2*y3+c2*cp3*m2*x1*y2*y3+cp1*cp3*m2*x1*y2*y3+cp2*cp3*m2*x1*y2*y3+c2*cp2*cp3*m2*x1*y2*y3+y1*y2*y3+c1*y1*y2*y3+c1*c2*y1*y2*y3+c3*y1*y2*y3+c2*c3*y1*y2*y3+cp2*y1*y2*y3+c2*c3*cp2*y1*y2*y3+c2*c3*cp3*y1*y2*y3+c2*cp2*cp3*y1*y2*y3+c3*cp2*cp3*y1*y2*y3+cp2*m2*y1*y2*y3+cp1*cp2*m2*y1*y2*y3+cp3*m2*y1*y2*y3+cp1*cp3*m2*y1*y2*y3+cp2*cp3*m2*y1*y2*y3+c2*cp2*cp3*m2*y1*y2*y3+(1/2)*cp2*m1*x1*y3*(1+y3)+(1/2)*cp1*cp2*m1*x1*y3*(1+y3)+(1/2)*cp1*cp3*m2*x1*y3*(1+y3)+(1/2)*cp2*cp3*m2*x1*y3*(1+y3)+(1/2)*c1*c2*x2*y3*(1+y3)+(1/2)*c1*c3*x2*y3*(1+y3)+(1/2)*cp1*cp3*x2*y3*(1+y3)+(1/2)*c3*cp1*cp3*x2*y3*(1+y3)+(1/2)*c1*cp2*m1*x2*y3*(1+y3)+(1/2)*cp1*cp2*m1*y1*y3*(1+y3)+(1/2)*cp3*m2*y1*y3*(1+y3)+(1/2)*cp1*cp3*m2*y1*y3*(1+y3)+(1/2)*cp2*cp3*m2*y1*y3*(1+y3)+(1/2)*c1*y2*y3*(1+y3)+(1/2)*c1*c2*y2*y3*(1+y3)+(1/2)*c1*c3*y2*y3*(1+y3)+(1/2)*cp1*cp3*y2*y3*(1+y3)+(1/2)*c3*cp1*cp3*y2*y3*(1+y3)+(1/2)*cp2*m1*y2*y3*(1+y3)+(1/2)*c1*cp2*m1*y2*y3*(1+y3)+c2*c3*cp1*z1+c1*c3*cp2*z1+c2*c3*cp2*z1+c3*cp1*cp2*m1*z1+c3*m2*z1+c1*cp3*m2*z1+c2*cp3*m2*z1+c3*cp3*m2*z1+cp1*cp3*m2*z1+c1*cp1*cp3*m2*z1+cp2*cp3*m2*z1+c3*cp2*m1*x1*z1+c3*m2*x1*z1+cp3*m2*x1*z1+c1*cp3*m2*x1*z1+c2*cp3*m2*x1*z1+c3*cp3*m2*x1*z1+cp1*cp3*m2*x1*z1+cp2*cp3*m2*x1*z1+(1/2)*cp2*cp3*m1*x1*(1+x1)*z1+(1/2)*cp3*m2*x1*(1+x1)*z1+(1/2)*cp1*cp3*m2*x1*(1+x1)*z1+(1/2)*cp2*cp3*m2*x1*(1+x1)*z1+c1*c3*x2*z1+c1*c3*cp2*x2*z1+c1*cp1*cp3*x2*z1+c2*cp1*cp3*x2*z1+c3*cp1*m1*x2*z1+c3*cp1*cp2*m1*x2*z1+cp3*m1*x2*z1+c1*cp3*m1*x2*z1+c2*cp3*m1*x2*z1+c1*c2*cp3*m1*x2*z1+c3*cp3*m1*x2*z1+c1*cp1*cp3*m1*x2*z1+cp2*cp3*m1*x2*z1+c3*m2*x2*z1+c3*cp1*m2*x2*z1+cp3*m2*x2*z1+c2*cp3*m2*x2*z1+c3*cp3*m2*x2*z1+cp1*cp3*m2*x2*z1+c2*cp1*cp3*m2*x2*z1+c3*cp1*cp3*m2*x2*z1+cp2*cp3*m2*x2*z1+c1*cp3*x1*x2*z1+c1*c2*cp3*x1*x2*z1+cp1*cp3*x1*x2*z1+c1*cp1*cp3*x1*x2*z1+c1*cp2*cp3*x1*x2*z1+cp2*cp3*m1*x1*x2*z1+c1*cp2*cp3*m1*x1*x2*z1+cp3*m2*x1*x2*z1+cp2*cp3*m2*x1*x2*z1+(1/2)*c1*cp3*x2*(1+x2)*z1+(1/2)*c1*c2*cp3*x2*(1+x2)*z1+(1/2)*c1*cp1*cp3*x2*(1+x2)*z1+(1/2)*c1*cp2*cp3*x2*(1+x2)*z1+(1/2)*cp2*cp3*m1*x2*(1+x2)*z1+(1/2)*c1*cp2*cp3*m1*x2*(1+x2)*z1+(1/2)*cp3*m2*x2*(1+x2)*z1+(1/2)*cp1*cp3*m2*x2*(1+x2)*z1+(1/2)*cp2*cp3*m2*x2*(1+x2)*z1+c2*x3*z1+c2*c3*x3*z1+c2*cp1*x3*z1+c2*cp2*x3*z1+c1*c2*cp2*x3*z1+c2*cp1*cp2*x3*z1+c2*cp3*x3*z1+c2*c3*cp3*x3*z1+c2*cp2*cp3*x3*z1+cp2*m1*x3*z1+cp1*cp2*m1*x3*z1+cp2*cp3*m1*x3*z1+m2*x3*z1+c1*m2*x3*z1+c2*m2*x3*z1+c3*m2*x3*z1+c1*cp1*m2*x3*z1+c2*cp1*m2*x3*z1+c1*cp2*m2*x3*z1+c2*cp2*m2*x3*z1+c2*c3*cp2*m2*x3*z1+cp3*m2*x3*z1+c2*cp3*m2*x3*z1+c2*c3*cp3*m2*x3*z1+c3*cp1*cp3*m2*x3*z1+c2*cp2*cp3*m2*x3*z1+c3*cp2*cp3*m2*x3*z1+cp3*m2*x1*x3*z1+c2*x2*x3*z1+c2*cp1*x2*x3*z1+cp2*x2*x3*z1+c2*cp2*x2*x3*z1+c2*c3*cp2*x2*x3*z1+cp1*cp2*x2*x3*z1+c2*cp3*x2*x3*z1+c2*c3*cp3*x2*x3*z1+cp2*cp3*x2*x3*z1+c2*cp2*cp3*x2*x3*z1+c3*cp2*cp3*x2*x3*z1+cp1*cp2*m2*x2*x3*z1+cp3*m2*x2*x3*z1+c2*cp3*m2*x2*x3*z1+cp1*cp3*m2*x2*x3*z1+cp2*cp3*m2*x2*x3*z1+c2*cp2*cp3*m2*x2*x3*z1+(1/2)*c2*c3*cp2*x3*(1+x3)*z1+(1/2)*c2*c3*cp3*x3*(1+x3)*z1+(1/2)*cp1*cp2*m1*x3*(1+x3)*z1+(1/2)*cp3*m2*x3*(1+x3)*z1+(1/2)*c2*cp3*m2*x3*(1+x3)*z1+(1/2)*cp1*cp3*m2*x3*(1+x3)*z1+(1/2)*cp2*cp3*m2*x3*(1+x3)*z1+(1/2)*c2*cp2*cp3*m2*x3*(1+x3)*z1+c3*cp2*y1*z1+c3*cp2*m1*y1*z1+c3*m2*y1*z1+cp3*m2*y1*z1+c1*cp3*m2*y1*z1+c2*cp3*m2*y1*z1+c3*cp3*m2*y1*z1+cp2*cp3*m2*y1*z1+c2*cp3*x1*y1*z1+cp2*cp3*x1*y1*z1+cp3*m2*x1*y1*z1+cp1*cp3*m2*x1*y1*z1+cp2*cp3*m2*x1*y1*z1+cp3*x2*y1*z1+c2*cp3*x2*y1*z1+cp2*cp3*x2*y1*z1+cp3*m2*x2*y1*z1+cp2*cp3*m2*x2*y1*z1+cp3*m2*x3*y1*z1+(1/2)*c2*cp3*y1*(1+y1)*z1+(1/2)*cp2*cp3*y1*(1+y1)*z1+(1/2)*cp3*m2*y1*(1+y1)*z1+(1/2)*cp1*cp3*m2*y1*(1+y1)*z1+(1/2)*cp2*cp3*m2*y1*(1+y1)*z1+c1*c3*y2*z1+c1*c3*cp2*y2*z1+c2*cp3*y2*z1+c3*cp3*y2*z1+c1*cp1*cp3*y2*z1+c2*cp1*cp3*y2*z1+c3*cp1*m1*y2*z1+c3*cp1*cp2*m1*y2*z1+c1*c2*cp3*m1*y2*z1+c3*cp3*m1*y2*z1+cp1*cp3*m1*y2*z1+c1*cp1*cp3*m1*y2*z1+cp2*cp3*m1*y2*z1+c3*m2*y2*z1+c3*cp1*m2*y2*z1+c2*cp3*m2*y2*z1+c3*cp3*m2*y2*z1+c2*cp1*cp3*m2*y2*z1+c3*cp1*cp3*m2*y2*z1+c2*cp3*x1*y2*z1+c1*c2*cp3*x1*y2*z1+c1*cp1*cp3*x1*y2*z1+cp2*cp3*x1*y2*z1+c1*cp2*cp3*x1*y2*z1+c1*cp2*cp3*m1*x1*y2*z1+cp3*m2*x1*y2*z1+cp2*cp3*m2*x1*y2*z1+c3*cp2*x2*y2*z1+c3*cp3*x2*y2*z1+cp1*cp3*x2*y2*z1+cp2*cp3*x2*y2*z1+cp1*cp3*m2*x2*y2*z1+x3*y2*z1+c2*x3*y2*z1+c2*cp2*x3*y2*z1+c3*cp2*x3*y2*z1+cp3*x3*y2*z1+c2*cp3*x3*y2*z1+c3*cp3*x3*y2*z1+c2*cp2*cp3*x3*y2*z1+c3*cp2*cp3*x3*y2*z1+cp1*cp2*m2*x3*y2*z1+cp1*cp3*m2*x3*y2*z1+c2*cp3*y1*y2*z1+cp2*cp3*y1*y2*z1+cp3*m2*y1*y2*z1+cp2*cp3*m2*y1*y2*z1+(1/2)*c3*cp2*y2*(1+y2)*z1+(1/2)*cp3*y2*(1+y2)*z1+(1/2)*c1*c2*cp3*y2*(1+y2)*z1+(1/2)*c3*cp3*y2*(1+y2)*z1+(1/2)*cp1*cp3*y2*(1+y2)*z1+(1/2)*c1*cp1*cp3*y2*(1+y2)*z1+(1/2)*cp2*cp3*y2*(1+y2)*z1+(1/2)*c1*cp2*cp3*y2*(1+y2)*z1+(1/2)*c1*cp2*cp3*m1*y2*(1+y2)*z1+(1/2)*cp1*cp3*m2*y2*(1+y2)*z1+c2*c3*y3*z1+c2*cp1*y3*z1+c1*cp2*y3*z1+c2*cp2*y3*z1+c1*c2*cp2*y3*z1+cp1*cp2*y3*z1+c2*cp1*cp2*y3*z1+c2*c3*cp3*y3*z1+cp2*cp3*y3*z1+c2*cp2*cp3*y3*z1+cp2*m1*y3*z1+cp1*cp2*m1*y3*z1+cp2*cp3*m1*y3*z1+m2*y3*z1+c1*m2*y3*z1+c2*m2*y3*z1+c3*m2*y3*z1+cp1*m2*y3*z1+c1*cp1*m2*y3*z1+c2*cp1*m2*y3*z1+c1*cp2*m2*y3*z1+c3*cp2*m2*y3*z1+c2*c3*cp2*m2*y3*z1+cp3*m2*y3*z1+c3*cp3*m2*y3*z1+c2*c3*cp3*m2*y3*z1+cp1*cp3*m2*y3*z1+c3*cp1*cp3*m2*y3*z1+c2*cp2*cp3*m2*y3*z1+c3*cp2*cp3*m2*y3*z1+cp3*m2*x1*y3*z1+x2*y3*z1+c2*x2*y3*z1+cp1*x2*y3*z1+c2*cp1*x2*y3*z1+cp2*x2*y3*z1+c3*cp2*x2*y3*z1+c2*c3*cp2*x2*y3*z1+cp1*cp2*x2*y3*z1+c3*cp3*x2*y3*z1+c2*c3*cp3*x2*y3*z1+cp2*cp3*x2*y3*z1+c2*cp2*cp3*x2*y3*z1+c3*cp2*cp3*x2*y3*z1+cp1*cp2*m2*x2*y3*z1+c2*cp3*m2*x2*y3*z1+cp1*cp3*m2*x2*y3*z1+c2*cp2*cp3*m2*x2*y3*z1+c2*cp1*x3*y3*z1+cp2*x3*y3*z1+c3*cp2*x3*y3*z1+cp1*cp2*x3*y3*z1+cp2*cp3*x3*y3*z1+cp1*cp2*m1*x3*y3*z1+cp1*cp3*m2*x3*y3*z1+cp3*m2*y1*y3*z1+c2*y2*y3*z1+c2*cp2*y2*y3*z1+c3*cp2*y2*y3*z1+cp3*y2*y3*z1+c2*cp3*y2*y3*z1+c3*cp3*y2*y3*z1+c2*cp2*cp3*y2*y3*z1+c3*cp2*cp3*y2*y3*z1+cp1*cp2*m2*y2*y3*z1+cp1*cp3*m2*y2*y3*z1+(1/2)*cp2*y3*(1+y3)*z1+(1/2)*c2*cp2*y3*(1+y3)*z1+(1/2)*c3*cp2*y3*(1+y3)*z1+(1/2)*c2*c3*cp2*y3*(1+y3)*z1+(1/2)*c2*cp3*y3*(1+y3)*z1+(1/2)*c2*c3*cp3*y3*(1+y3)*z1+(1/2)*cp1*cp2*m1*y3*(1+y3)*z1+(1/2)*c2*cp3*m2*y3*(1+y3)*z1+(1/2)*cp1*cp3*m2*y3*(1+y3)*z1+(1/2)*c2*cp2*cp3*m2*y3*(1+y3)*z1+(1/2)*c2*cp3*z1*(1+z1)+(1/2)*cp2*cp3*m1*z1*(1+z1)+(1/2)*cp2*cp3*m1*x1*z1*(1+z1)+(1/2)*cp1*cp3*m2*x1*z1*(1+z1)+(1/2)*cp2*cp3*m2*x1*z1*(1+z1)+(1/2)*c1*cp3*x2*z1*(1+z1)+(1/2)*c1*c2*cp3*x2*z1*(1+z1)+(1/2)*c1*cp1*cp3*x2*z1*(1+z1)+(1/2)*c1*cp2*cp3*x2*z1*(1+z1)+(1/2)*cp2*cp3*m1*x2*z1*(1+z1)+(1/2)*c1*cp2*cp3*m1*x2*z1*(1+z1)+(1/2)*cp2*cp3*m2*x2*z1*(1+z1)+(1/2)*m2*x3*z1*(1+z1)+(1/2)*cp1*m2*x3*z1*(1+z1)+(1/2)*cp2*m2*x3*z1*(1+z1)+(1/2)*c2*cp3*y1*z1*(1+z1)+(1/2)*cp2*cp3*y1*z1*(1+z1)+(1/2)*cp1*cp3*m2*y1*z1*(1+z1)+(1/2)*cp2*cp3*m2*y1*z1*(1+z1)+(1/2)*c2*cp3*y2*z1*(1+z1)+(1/2)*c1*c2*cp3*y2*z1*(1+z1)+(1/2)*cp1*cp3*y2*z1*(1+z1)+(1/2)*c1*cp1*cp3*y2*z1*(1+z1)+(1/2)*cp2*cp3*y2*z1*(1+z1)+(1/2)*c1*cp2*cp3*y2*z1*(1+z1)+(1/2)*c1*cp2*cp3*m1*y2*z1*(1+z1)+(1/2)*cp2*cp3*m2*y2*z1*(1+z1)+(1/2)*m2*y3*z1*(1+z1)+(1/2)*cp1*m2*y3*z1*(1+z1)+(1/2)*cp2*m2*y3*z1*(1+z1)+(1/2)*cp2*cp3*m1*z1^2*(1+z1)+(1/2)*cp3*m2*z1^2*(1+z1)+(1/2)*cp1*cp3*m2*z1^2*(1+z1)+(1/2)*cp2*cp3*m2*z1^2*(1+z1)+c3*m1*z2+c3*cp3*m1*z2+c1*c3*cp2*x1*z2+c2*cp1*cp3*x1*z2+c3*cp2*m1*x1*z2+c3*cp1*cp2*m1*x1*z2+c1*c2*cp3*m1*x1*z2+c3*cp3*m1*x1*z2+c1*cp1*cp3*m1*x1*z2+cp2*cp3*m1*x1*z2+c3*m2*x1*z2+c3*cp1*m2*x1*z2+cp3*m2*x1*z2+c2*cp3*m2*x1*z2+c3*cp3*m2*x1*z2+c2*cp1*cp3*m2*x1*z2+c3*cp1*cp3*m2*x1*z2+cp2*cp3*m2*x1*z2+(1/2)*cp3*x1*(1+x1)*z2+(1/2)*c1*cp3*x1*(1+x1)*z2+(1/2)*c1*c2*cp3*x1*(1+x1)*z2+(1/2)*cp1*cp3*x1*(1+x1)*z2+(1/2)*c1*cp1*cp3*x1*(1+x1)*z2+(1/2)*c1*cp2*cp3*x1*(1+x1)*z2+(1/2)*cp3*m1*x1*(1+x1)*z2+(1/2)*c1*cp3*m1*x1*(1+x1)*z2+(1/2)*c2*cp3*m1*x1*(1+x1)*z2+(1/2)*cp1*cp3*m1*x1*(1+x1)*z2+(1/2)*cp2*cp3*m1*x1*(1+x1)*z2+(1/2)*c1*cp2*cp3*m1*x1*(1+x1)*z2+(1/2)*cp3*m2*x1*(1+x1)*z2+(1/2)*cp2*cp3*m2*x1*(1+x1)*z2+c3*x1*x2*z2+c3*cp2*x1*x2*z2+c1*cp3*x1*x2*z2+c2*cp3*x1*x2*z2+c1*c2*cp3*x1*x2*z2+c3*cp3*x1*x2*z2+cp1*cp3*x1*x2*z2+c1*cp1*cp3*x1*x2*z2+c1*cp2*cp3*x1*x2*z2+cp3*m1*x1*x2*z2+c1*cp3*m1*x1*x2*z2+c2*cp3*m1*x1*x2*z2+c1*c2*cp3*m1*x1*x2*z2+cp1*cp3*m1*x1*x2*z2+c1*cp1*cp3*m1*x1*x2*z2+cp2*cp3*m1*x1*x2*z2+c1*cp2*cp3*m1*x1*x2*z2+cp3*m2*x1*x2*z2+cp1*cp3*m2*x1*x2*z2+(1/2)*cp1*cp3*x2*(1+x2)*z2+(1/2)*cp3*m1*x2*(1+x2)*z2+(1/2)*c2*cp3*m1*x2*(1+x2)*z2+(1/2)*cp1*cp3*m1*x2*(1+x2)*z2+(1/2)*cp2*cp3*m1*x2*(1+x2)*z2+m1*x3*z2+c3*m1*x3*z2+cp3*m1*x3*z2+c3*cp3*m1*x3*z2+c2*x1*x3*z2+c3*x1*x3*z2+c2*cp2*x1*x3*z2+c3*cp2*x1*x3*z2+c2*c3*cp2*x1*x3*z2+c2*cp3*x1*x3*z2+c3*cp3*x1*x3*z2+c2*c3*cp3*x1*x3*z2+c2*cp2*cp3*x1*x3*z2+c3*cp2*cp3*x1*x3*z2+cp2*m1*x1*x3*z2+cp1*cp2*m1*x1*x3*z2+cp1*m2*x1*x3*z2+cp1*cp2*m2*x1*x3*z2+cp3*m2*x1*x3*z2+c2*cp3*m2*x1*x3*z2+cp1*cp3*m2*x1*x3*z2+c2*cp2*cp3*m2*x1*x3*z2+(1/2)*c1*c2*x3*(1+x3)*z2+(1/2)*c1*c3*x3*(1+x3)*z2+(1/2)*m1*x3*(1+x3)*z2+(1/2)*c1*m1*x3*(1+x3)*z2+(1/2)*c2*m1*x3*(1+x3)*z2+(1/2)*c3*m1*x3*(1+x3)*z2+(1/2)*cp2*m1*x3*(1+x3)*z2+(1/2)*c1*cp2*m1*x3*(1+x3)*z2+c3*cp2*y1*z2+c1*c3*cp2*y1*z2+c2*cp1*cp3*y1*z2+c3*cp2*m1*y1*z2+c3*cp1*cp2*m1*y1*z2+c2*cp3*m1*y1*z2+c1*c2*cp3*m1*y1*z2+c3*cp3*m1*y1*z2+cp1*cp3*m1*y1*z2+c1*cp1*cp3*m1*y1*z2+cp2*cp3*m1*y1*z2+c3*m2*y1*z2+c3*cp1*m2*y1*z2+cp3*m2*y1*z2+c2*cp3*m2*y1*z2+c3*cp3*m2*y1*z2+c2*cp1*cp3*m2*y1*z2+c3*cp1*cp3*m2*y1*z2+cp2*cp3*m2*y1*z2+c2*cp3*x1*y1*z2+cp2*cp3*x1*y1*z2+cp3*m2*x1*y1*z2+cp2*cp3*m2*x1*y1*z2+c3*x2*y1*z2+c3*cp2*x2*y1*z2+cp3*x2*y1*z2+c1*cp3*x2*y1*z2+c1*c2*cp3*x2*y1*z2+c3*cp3*x2*y1*z2+c1*cp1*cp3*x2*y1*z2+cp2*cp3*x2*y1*z2+c1*cp2*cp3*x2*y1*z2+c1*cp3*m1*x2*y1*z2+c1*c2*cp3*m1*x2*y1*z2+c1*cp1*cp3*m1*x2*y1*z2+c1*cp2*cp3*m1*x2*y1*z2+cp3*m2*x2*y1*z2+cp1*cp3*m2*x2*y1*z2+c2*x3*y1*z2+c3*x3*y1*z2+cp2*x3*y1*z2+c1*cp2*x3*y1*z2+c2*c3*cp2*x3*y1*z2+c2*cp3*x3*y1*z2+c3*cp3*x3*y1*z2+c2*c3*cp3*x3*y1*z2+c2*cp2*cp3*x3*y1*z2+c3*cp2*cp3*x3*y1*z2+cp2*m1*x3*y1*z2+cp1*cp2*m1*x3*y1*z2+cp1*m2*x3*y1*z2+cp1*cp2*m2*x3*y1*z2+cp3*m2*x3*y1*z2+c2*cp3*m2*x3*y1*z2+cp1*cp3*m2*x3*y1*z2+cp2*cp3*m2*x3*y1*z2+c2*cp2*cp3*m2*x3*y1*z2+(1/2)*c1*cp3*y1*(1+y1)*z2+(1/2)*c2*cp3*y1*(1+y1)*z2+(1/2)*c1*c2*cp3*y1*(1+y1)*z2+(1/2)*c1*cp1*cp3*y1*(1+y1)*z2+(1/2)*cp2*cp3*y1*(1+y1)*z2+(1/2)*c1*cp2*cp3*y1*(1+y1)*z2+(1/2)*c1*cp3*m1*y1*(1+y1)*z2+(1/2)*c2*cp3*m1*y1*(1+y1)*z2+(1/2)*cp1*cp3*m1*y1*(1+y1)*z2+(1/2)*c1*cp2*cp3*m1*y1*(1+y1)*z2+(1/2)*cp3*m2*y1*(1+y1)*z2+(1/2)*cp2*cp3*m2*y1*(1+y1)*z2+c3*x1*y2*z2+cp3*x1*y2*z2+c2*cp3*x1*y2*z2+cp2*cp3*x1*y2*z2+c1*c2*cp3*m1*x1*y2*z2+c1*cp1*cp3*m1*x1*y2*z2+cp1*cp3*m2*x1*y2*z2+cp2*cp3*m2*x1*y2*z2+c3*y1*y2*z2+cp3*y1*y2*z2+c2*cp3*y1*y2*z2+cp2*cp3*y1*y2*z2+c2*cp3*m1*y1*y2*z2+c1*c2*cp3*m1*y1*y2*z2+cp1*cp3*m1*y1*y2*z2+c1*cp1*cp3*m1*y1*y2*z2+cp1*cp3*m2*y1*y2*z2+cp2*cp3*m2*y1*y2*z2+(1/2)*c2*cp3*m1*y2*(1+y2)*z2+(1/2)*cp1*cp3*m1*y2*(1+y2)*z2+c3*m1*y3*z2+c3*cp3*m1*y3*z2+c2*x1*y3*z2+c3*x1*y3*z2+cp2*x1*y3*z2+c2*c3*cp2*x1*y3*z2+cp3*x1*y3*z2+c2*c3*cp3*x1*y3*z2+c2*cp2*cp3*x1*y3*z2+c3*cp2*cp3*x1*y3*z2+cp2*m1*x1*y3*z2+cp1*cp2*m1*x1*y3*z2+cp1*m2*x1*y3*z2+cp1*cp2*m2*x1*y3*z2+c2*cp3*m2*x1*y3*z2+cp1*cp3*m2*x1*y3*z2+cp2*cp3*m2*x1*y3*z2+c2*cp2*cp3*m2*x1*y3*z2+c2*y1*y3*z2+c3*y1*y3*z2+c1*cp2*y1*y3*z2+c2*cp2*y1*y3*z2+c3*cp2*y1*y3*z2+c2*c3*cp2*y1*y3*z2+cp3*y1*y3*z2+c2*c3*cp3*y1*y3*z2+c2*cp2*cp3*y1*y3*z2+c3*cp2*cp3*y1*y3*z2+cp2*m1*y1*y3*z2+cp1*cp2*m1*y1*y3*z2+cp1*m2*y1*y3*z2+cp1*cp2*m2*y1*y3*z2+c2*cp3*m2*y1*y3*z2+cp1*cp3*m2*y1*y3*z2+c2*cp2*cp3*m2*y1*y3*z2+(1/2)*c1*c2*y3*(1+y3)*z2+(1/2)*c1*c3*y3*(1+y3)*z2+(1/2)*cp1*cp3*y3*(1+y3)*z2+(1/2)*c3*cp1*cp3*y3*(1+y3)*z2+(1/2)*m1*y3*(1+y3)*z2+(1/2)*c1*m1*y3*(1+y3)*z2+(1/2)*c2*m1*y3*(1+y3)*z2+(1/2)*c3*m1*y3*(1+y3)*z2+(1/2)*cp2*m1*y3*(1+y3)*z2+(1/2)*c1*cp2*m1*y3*(1+y3)*z2+c1*c3*cp2*z1*z2+c2*cp3*z1*z2+c1*c2*cp3*z1*z2+c2*cp1*cp3*z1*z2+c1*cp2*cp3*z1*z2+c3*cp1*cp2*m1*z1*z2+cp3*m1*z1*z2+c1*cp3*m1*z1*z2+c2*cp3*m1*z1*z2+c1*c2*cp3*m1*z1*z2+c3*cp3*m1*z1*z2+cp1*cp3*m1*z1*z2+c1*cp1*cp3*m1*z1*z2+c1*cp2*cp3*m1*z1*z2+c3*cp1*m2*z1*z2+c2*cp1*cp3*m2*z1*z2+c3*cp1*cp3*m2*z1*z2+cp3*x1*z1*z2+c1*cp3*x1*z1*z2+c1*c2*cp3*x1*z1*z2+cp1*cp3*x1*z1*z2+c1*cp1*cp3*x1*z1*z2+c1*cp2*cp3*x1*z1*z2+cp3*m1*x1*z1*z2+c1*cp3*m1*x1*z1*z2+c2*cp3*m1*x1*z1*z2+cp1*cp3*m1*x1*z1*z2+cp2*cp3*m1*x1*z1*z2+c1*cp2*cp3*m1*x1*z1*z2+cp2*cp3*m2*x1*z1*z2+c3*x2*z1*z2+c3*cp2*x2*z1*z2+c1*cp3*x2*z1*z2+c2*cp3*x2*z1*z2+c1*c2*cp3*x2*z1*z2+c3*cp3*x2*z1*z2+cp1*cp3*x2*z1*z2+c1*cp1*cp3*x2*z1*z2+c1*cp2*cp3*x2*z1*z2+cp3*m1*x2*z1*z2+c1*cp3*m1*x2*z1*z2+c2*cp3*m1*x2*z1*z2+c1*c2*cp3*m1*x2*z1*z2+cp1*cp3*m1*x2*z1*z2+c1*cp1*cp3*m1*x2*z1*z2+cp2*cp3*m1*x2*z1*z2+c1*cp2*cp3*m1*x2*z1*z2+cp1*cp3*m2*x2*z1*z2+c2*x3*z1*z2+c3*x3*z1*z2+c2*cp2*x3*z1*z2+c3*cp2*x3*z1*z2+c2*c3*cp2*x3*z1*z2+c2*cp3*x3*z1*z2+c3*cp3*x3*z1*z2+c2*c3*cp3*x3*z1*z2+c2*cp2*cp3*x3*z1*z2+c3*cp2*cp3*x3*z1*z2+cp1*cp2*m1*x3*z1*z2+m2*x3*z1*z2+cp1*m2*x3*z1*z2+cp2*m2*x3*z1*z2+cp1*cp2*m2*x3*z1*z2+c2*cp3*m2*x3*z1*z2+cp1*cp3*m2*x3*z1*z2+c2*cp2*cp3*m2*x3*z1*z2+c2*cp3*y1*z1*z2+cp2*cp3*y1*z1*z2+cp2*cp3*m2*y1*z1*z2+c3*y2*z1*z2+cp3*y2*z1*z2+c2*cp3*y2*z1*z2+cp2*cp3*y2*z1*z2+c1*c2*cp3*m1*y2*z1*z2+c1*cp1*cp3*m1*y2*z1*z2+cp3*m2*y2*z1*z2+cp1*cp3*m2*y2*z1*z2+cp2*cp3*m2*y2*z1*z2+c2*y3*z1*z2+c3*y3*z1*z2+cp2*y3*z1*z2+c2*c3*cp2*y3*z1*z2+cp3*y3*z1*z2+c2*c3*cp3*y3*z1*z2+c2*cp2*cp3*y3*z1*z2+c3*cp2*cp3*y3*z1*z2+cp1*cp2*m1*y3*z1*z2+m2*y3*z1*z2+cp1*m2*y3*z1*z2+cp2*m2*y3*z1*z2+cp1*cp2*m2*y3*z1*z2+cp3*m2*y3*z1*z2+c2*cp3*m2*y3*z1*z2+cp1*cp3*m2*y3*z1*z2+cp2*cp3*m2*y3*z1*z2+c2*cp2*cp3*m2*y3*z1*z2+(1/2)*c1*cp3*z1*(1+z1)*z2+(1/2)*c1*c2*cp3*z1*(1+z1)*z2+(1/2)*c1*cp1*cp3*z1*(1+z1)*z2+(1/2)*c1*cp2*cp3*z1*(1+z1)*z2+(1/2)*cp3*m1*z1*(1+z1)*z2+(1/2)*c1*cp3*m1*z1*(1+z1)*z2+(1/2)*c2*cp3*m1*z1*(1+z1)*z2+(1/2)*cp1*cp3*m1*z1*(1+z1)*z2+(1/2)*cp2*cp3*m1*z1*(1+z1)*z2+(1/2)*c1*cp2*cp3*m1*z1*(1+z1)*z2+(1/2)*cp3*m2*z1*(1+z1)*z2+(1/2)*cp2*cp3*m2*z1*(1+z1)*z2+(1/2)*cp3*m1*z2*(1+z2)+(1/2)*cp2*cp3*m1*z2*(1+z2)+(1/2)*cp3*x1*z2*(1+z2)+(1/2)*c1*cp3*x1*z2*(1+z2)+(1/2)*c1*c2*cp3*x1*z2*(1+z2)+(1/2)*cp1*cp3*x1*z2*(1+z2)+(1/2)*c1*cp1*cp3*x1*z2*(1+z2)+(1/2)*c1*cp2*cp3*x1*z2*(1+z2)+(1/2)*cp3*m1*x1*z2*(1+z2)+(1/2)*c1*cp3*m1*x1*z2*(1+z2)+(1/2)*c2*cp3*m1*x1*z2*(1+z2)+(1/2)*cp1*cp3*m1*x1*z2*(1+z2)+(1/2)*cp2*cp3*m1*x1*z2*(1+z2)+(1/2)*c1*cp2*cp3*m1*x1*z2*(1+z2)+(1/2)*cp1*cp3*m2*x1*z2*(1+z2)+(1/2)*cp2*cp3*m2*x1*z2*(1+z2)+(1/2)*cp1*cp3*x2*z2*(1+z2)+(1/2)*cp3*m1*x2*z2*(1+z2)+(1/2)*c2*cp3*m1*x2*z2*(1+z2)+(1/2)*cp1*cp3*m1*x2*z2*(1+z2)+(1/2)*cp2*cp3*m1*x2*z2*(1+z2)+(1/2)*c3*y1*z2*(1+z2)+(1/2)*c1*cp3*y1*z2*(1+z2)+(1/2)*c2*cp3*y1*z2*(1+z2)+(1/2)*c1*c2*cp3*y1*z2*(1+z2)+(1/2)*c1*cp1*cp3*y1*z2*(1+z2)+(1/2)*cp2*cp3*y1*z2*(1+z2)+(1/2)*c1*cp2*cp3*y1*z2*(1+z2)+(1/2)*c1*cp3*m1*y1*z2*(1+z2)+(1/2)*c2*cp3*m1*y1*z2*(1+z2)+(1/2)*cp1*cp3*m1*y1*z2*(1+z2)+(1/2)*c1*cp2*cp3*m1*y1*z2*(1+z2)+(1/2)*cp3*m2*y1*z2*(1+z2)+(1/2)*cp1*cp3*m2*y1*z2*(1+z2)+(1/2)*cp2*cp3*m2*y1*z2*(1+z2)+(1/2)*c2*cp3*m1*y2*z2*(1+z2)+(1/2)*cp1*cp3*m1*y2*z2*(1+z2)+(1/2)*c1*cp3*z1*z2*(1+z2)+(1/2)*c1*c2*cp3*z1*z2*(1+z2)+(1/2)*c1*cp1*cp3*z1*z2*(1+z2)+(1/2)*c1*cp2*cp3*z1*z2*(1+z2)+(1/2)*cp3*m1*z1*z2*(1+z2)+(1/2)*c1*cp3*m1*z1*z2*(1+z2)+(1/2)*c2*cp3*m1*z1*z2*(1+z2)+(1/2)*cp1*cp3*m1*z1*z2*(1+z2)+(1/2)*cp2*cp3*m1*z1*z2*(1+z2)+(1/2)*c1*cp2*cp3*m1*z1*z2*(1+z2)+(1/2)*cp3*m2*z1*z2*(1+z2)+(1/2)*cp1*cp3*m2*z1*z2*(1+z2)+(1/2)*cp2*cp3*m2*z1*z2*(1+z2)+(1/2)*cp3*m1*z2^2*(1+z2)+(1/2)*cp2*cp3*m1*z2^2*(1+z2)+c1*c2*x1*z3+c2*cp2*x1*z3+c1*c2*cp2*x1*z3+c2*cp1*cp2*x1*z3+c2*c3*cp3*x1*z3+c2*cp2*cp3*x1*z3+cp2*cp3*m1*x1*z3+m2*x1*z3+c2*m2*x1*z3+c3*m2*x1*z3+cp1*m2*x1*z3+c1*cp1*m2*x1*z3+c2*cp1*m2*x1*z3+c3*cp1*m2*x1*z3+c2*cp2*m2*x1*z3+c3*cp2*m2*x1*z3+cp1*cp2*m2*x1*z3+cp3*m2*x1*z3+c3*cp3*m2*x1*z3+cp1*cp3*m2*x1*z3+c3*cp1*cp3*m2*x1*z3+c3*cp2*cp3*m2*x1*z3+(1/2)*m2*x1*(1+x1)*z3+(1/2)*cp1*m2*x1*(1+x1)*z3+(1/2)*cp2*m2*x1*(1+x1)*z3+c3*cp3*m1*x2*z3+x1*x2*z3+c2*x1*x2*z3+c3*x1*x2*z3+cp1*x1*x2*z3+c2*cp1*x1*x2*z3+cp2*x1*x2*z3+c3*cp2*x1*x2*z3+c2*c3*cp2*x1*x2*z3+cp1*cp2*x1*x2*z3+cp3*x1*x2*z3+c3*cp3*x1*x2*z3+c2*c3*cp3*x1*x2*z3+cp2*cp3*x1*x2*z3+c2*cp2*cp3*x1*x2*z3+c3*cp2*cp3*x1*x2*z3+m2*x1*x2*z3+cp1*m2*x1*x2*z3+cp2*m2*x1*x2*z3+c2*cp2*m2*x1*x2*z3+c3*cp2*m2*x1*x2*z3+cp1*cp2*m2*x1*x2*z3+cp3*m2*x1*x2*z3+c3*cp3*m2*x1*x2*z3+cp1*cp3*m2*x1*x2*z3+cp2*cp3*m2*x1*x2*z3+c2*cp2*cp3*m2*x1*x2*z3+c2*x1*x3*z3+c2*cp1*x1*x3*z3+c3*cp2*x1*x3*z3+cp1*cp2*x1*x3*z3+cp2*cp3*x1*x3*z3+m2*x1*x3*z3+c2*m2*x1*x3*z3+cp1*m2*x1*x3*z3+c2*cp1*m2*x1*x3*z3+cp2*m2*x1*x3*z3+c3*cp2*m2*x1*x3*z3+cp1*cp2*m2*x1*x3*z3+cp3*m2*x1*x3*z3+c3*cp3*m2*x1*x3*z3+cp1*cp3*m2*x1*x3*z3+c2*y1*z3+c2*c3*y1*z3+cp2*y1*z3+c1*cp2*y1*z3+c2*cp2*y1*z3+c3*cp2*y1*z3+c2*c3*cp2*y1*z3+c2*cp1*cp2*y1*z3+c2*c3*cp3*y1*z3+c2*cp2*cp3*y1*z3+cp2*cp3*m1*y1*z3+m2*y1*z3+c2*m2*y1*z3+c3*m2*y1*z3+c1*cp1*m2*y1*z3+c2*cp1*m2*y1*z3+c3*cp1*m2*y1*z3+cp2*m2*y1*z3+c1*cp2*m2*y1*z3+cp1*cp2*m2*y1*z3+cp3*m2*y1*z3+c2*cp3*m2*y1*z3+c3*cp3*m2*y1*z3+cp1*cp3*m2*y1*z3+c3*cp1*cp3*m2*y1*z3+c2*cp2*cp3*m2*y1*z3+c3*cp2*cp3*m2*y1*z3+m2*x1*y1*z3+cp1*m2*x1*y1*z3+cp2*m2*x1*y1*z3+x2*y1*z3+c2*x2*y1*z3+c1*c2*x2*y1*z3+c3*x2*y1*z3+c2*c3*x2*y1*z3+cp1*x2*y1*z3+c2*cp1*x2*y1*z3+c1*cp2*x2*y1*z3+c2*cp2*x2*y1*z3+c2*c3*cp2*x2*y1*z3+cp1*cp2*x2*y1*z3+cp3*x2*y1*z3+c3*cp3*x2*y1*z3+c2*c3*cp3*x2*y1*z3+cp2*cp3*x2*y1*z3+c2*cp2*cp3*x2*y1*z3+c3*cp2*cp3*x2*y1*z3+c1*m2*x2*y1*z3+c2*m2*x2*y1*z3+c3*m2*x2*y1*z3+cp1*m2*x2*y1*z3+cp2*m2*x2*y1*z3+c2*cp2*m2*x2*y1*z3+c3*cp2*m2*x2*y1*z3+cp1*cp2*m2*x2*y1*z3+c2*cp3*m2*x2*y1*z3+c3*cp3*m2*x2*y1*z3+cp1*cp3*m2*x2*y1*z3+c2*cp2*cp3*m2*x2*y1*z3+c2*x3*y1*z3+c1*c2*x3*y1*z3+c2*c3*x3*y1*z3+c2*cp1*x3*y1*z3+c3*cp2*x3*y1*z3+cp1*cp2*x3*y1*z3+cp2*cp3*x3*y1*z3+c1*m2*x3*y1*z3+c3*m2*x3*y1*z3+cp1*m2*x3*y1*z3+c2*cp1*m2*x3*y1*z3+c1*cp2*m2*x3*y1*z3+c2*cp2*m2*x3*y1*z3+cp1*cp2*m2*x3*y1*z3+c2*cp3*m2*x3*y1*z3+c3*cp3*m2*x3*y1*z3+cp1*cp3*m2*x3*y1*z3+cp2*cp3*m2*x3*y1*z3+(1/2)*m2*y1*(1+y1)*z3+(1/2)*cp1*m2*y1*(1+y1)*z3+(1/2)*cp2*m2*y1*(1+y1)*z3+c3*cp3*m1*y2*z3+c3*x1*y2*z3+c2*c3*cp2*x1*y2*z3+cp3*x1*y2*z3+c2*c3*cp3*x1*y2*z3+c2*cp2*cp3*x1*y2*z3+c3*cp2*cp3*x1*y2*z3+c2*cp2*m2*x1*y2*z3+c3*cp2*m2*x1*y2*z3+cp1*cp2*m2*x1*y2*z3+cp3*m2*x1*y2*z3+c3*cp3*m2*x1*y2*z3+cp1*cp3*m2*x1*y2*z3+c2*cp2*cp3*m2*x1*y2*z3+c1*c2*y1*y2*z3+c3*y1*y2*z3+c2*c3*y1*y2*z3+c2*c3*cp2*y1*y2*z3+cp3*y1*y2*z3+c2*c3*cp3*y1*y2*z3+c2*cp2*cp3*y1*y2*z3+c3*cp2*cp3*y1*y2*z3+m2*y1*y2*z3+c1*m2*y1*y2*z3+c2*m2*y1*y2*z3+c3*m2*y1*y2*z3+c2*cp2*m2*y1*y2*z3+c3*cp2*m2*y1*y2*z3+cp1*cp2*m2*y1*y2*z3+c2*cp3*m2*y1*y2*z3+c3*cp3*m2*y1*y2*z3+cp1*cp3*m2*y1*y2*z3+c2*cp2*cp3*m2*y1*y2*z3+c2*m2*x1*y3*z3+c2*cp1*m2*x1*y3*z3+c3*cp2*m2*x1*y3*z3+cp1*cp2*m2*x1*y3*z3+cp3*m2*x1*y3*z3+c3*cp3*m2*x1*y3*z3+cp1*cp3*m2*x1*y3*z3+cp2*cp3*m2*x1*y3*z3+c1*c2*y1*y3*z3+c2*c3*y1*y3*z3+cp2*y1*y3*z3+c1*cp2*y1*y3*z3+c2*cp2*y1*y3*z3+c3*cp2*y1*y3*z3+m2*y1*y3*z3+c1*m2*y1*y3*z3+c3*m2*y1*y3*z3+c2*cp1*m2*y1*y3*z3+cp2*m2*y1*y3*z3+c1*cp2*m2*y1*y3*z3+c2*cp2*m2*y1*y3*z3+cp1*cp2*m2*y1*y3*z3+c2*cp3*m2*y1*y3*z3+c3*cp3*m2*y1*y3*z3+cp1*cp3*m2*y1*y3*z3+cp2*cp3*m2*y1*y3*z3+c1*c2*z1*z3+c1*c2*cp2*z1*z3+c2*c3*cp2*z1*z3+c2*cp1*cp2*z1*z3+c2*cp2*cp3*z1*z3+cp2*cp3*m1*z1*z3+c1*m2*z1*z3+c1*cp1*m2*z1*z3+c2*cp1*m2*z1*z3+c3*cp1*m2*z1*z3+c2*cp2*m2*z1*z3+c3*cp2*m2*z1*z3+c2*c3*cp2*m2*z1*z3+cp1*cp2*m2*z1*z3+c2*c3*cp3*m2*z1*z3+cp1*cp3*m2*z1*z3+c3*cp1*cp3*m2*z1*z3+c3*cp2*cp3*m2*z1*z3+m2*x1*z1*z3+cp3*m2*x1*z1*z3+c3*x2*z1*z3+cp1*x2*z1*z3+c2*cp1*x2*z1*z3+c3*cp2*x2*z1*z3+c2*c3*cp2*x2*z1*z3+cp1*cp2*x2*z1*z3+cp3*x2*z1*z3+c3*cp3*x2*z1*z3+c2*c3*cp3*x2*z1*z3+cp2*cp3*x2*z1*z3+c2*cp2*cp3*x2*z1*z3+c3*cp2*cp3*x2*z1*z3+cp1*m2*x2*z1*z3+c2*cp2*m2*x2*z1*z3+c3*cp2*m2*x2*z1*z3+cp1*cp2*m2*x2*z1*z3+c3*cp3*m2*x2*z1*z3+cp1*cp3*m2*x2*z1*z3+cp2*cp3*m2*x2*z1*z3+c2*cp2*cp3*m2*x2*z1*z3+c2*cp1*x3*z1*z3+cp2*x3*z1*z3+c3*cp2*x3*z1*z3+c2*c3*cp2*x3*z1*z3+cp1*cp2*x3*z1*z3+c2*c3*cp3*x3*z1*z3+cp2*cp3*x3*z1*z3+cp1*m2*x3*z1*z3+c2*cp1*m2*x3*z1*z3+c3*cp2*m2*x3*z1*z3+c2*c3*cp2*m2*x3*z1*z3+cp1*cp2*m2*x3*z1*z3+c3*cp3*m2*x3*z1*z3+c2*c3*cp3*m2*x3*z1*z3+cp1*cp3*m2*x3*z1*z3+m2*y1*z1*z3+cp3*m2*y1*z1*z3+c3*y2*z1*z3+cp3*y2*z1*z3+c2*cp2*cp3*y2*z1*z3+c3*cp2*cp3*y2*z1*z3+cp1*cp2*m2*y2*z1*z3+cp1*cp3*m2*y2*z1*z3+cp2*cp3*m2*y2*z1*z3+c2*cp1*m2*y3*z1*z3+c2*cp2*m2*y3*z1*z3+c2*c3*cp2*m2*y3*z1*z3+cp1*cp2*m2*y3*z1*z3+c2*c3*cp3*m2*y3*z1*z3+cp1*cp3*m2*y3*z1*z3+c2*cp2*cp3*m2*y3*z1*z3+(1/2)*cp1*m2*z1*(1+z1)*z3+(1/2)*cp2*m2*z1*(1+z1)*z3+c3*cp3*m1*z2*z3+c2*c3*cp2*x1*z2*z3+c2*c3*cp3*x1*z2*z3+c2*cp2*cp3*x1*z2*z3+c3*cp2*cp3*x1*z2*z3+m1*x1*z2*z3+cp1*m1*x1*z2*z3+cp2*m1*x1*z2*z3+cp1*cp2*m1*x1*z2*z3+m2*x1*z2*z3+cp1*m2*x1*z2*z3+cp2*m2*x1*z2*z3+c2*cp2*m2*x1*z2*z3+c3*cp2*m2*x1*z2*z3+cp1*cp2*m2*x1*z2*z3+cp3*m2*x1*z2*z3+c3*cp3*m2*x1*z2*z3+cp1*cp3*m2*x1*z2*z3+c2*cp2*cp3*m2*x1*z2*z3+y1*z2*z3+c1*y1*z2*z3+c2*y1*z2*z3+c3*y1*z2*z3+cp2*y1*z2*z3+c1*cp2*y1*z2*z3+c2*cp2*y1*z2*z3+c3*cp2*y1*z2*z3+c2*c3*cp2*y1*z2*z3+c2*c3*cp3*y1*z2*z3+c2*cp2*cp3*y1*z2*z3+c3*cp2*cp3*y1*z2*z3+m1*y1*z2*z3+cp1*m1*y1*z2*z3+cp2*m1*y1*z2*z3+cp1*cp2*m1*y1*z2*z3+m2*y1*z2*z3+cp1*m2*y1*z2*z3+cp2*m2*y1*z2*z3+c2*cp2*m2*y1*z2*z3+c3*cp2*m2*y1*z2*z3+cp1*cp2*m2*y1*z2*z3+c3*cp3*m2*y1*z2*z3+cp1*cp3*m2*y1*z2*z3+cp2*cp3*m2*y1*z2*z3+c2*cp2*cp3*m2*y1*z2*z3+c2*c3*cp2*z1*z2*z3+c2*c3*cp3*z1*z2*z3+c2*cp2*cp3*z1*z2*z3+c3*cp2*cp3*z1*z2*z3+cp1*m1*z1*z2*z3+cp1*cp2*m1*z1*z2*z3+cp1*m2*z1*z2*z3+c2*cp2*m2*z1*z2*z3+c3*cp2*m2*z1*z2*z3+cp1*cp2*m2*z1*z2*z3+c3*cp3*m2*z1*z2*z3+cp1*cp3*m2*z1*z2*z3+c2*cp2*cp3*m2*z1*z2*z3+(1/2)*cp1*cp2*m1*x1*z3*(1+z3)+(1/2)*cp3*m2*x1*z3*(1+z3)+(1/2)*cp1*cp3*m2*x1*z3*(1+z3)+(1/2)*cp2*cp3*m2*x1*z3*(1+z3)+(1/2)*c1*c2*x2*z3*(1+z3)+(1/2)*c1*c3*x2*z3*(1+z3)+(1/2)*m1*x2*z3*(1+z3)+(1/2)*cp2*m1*x2*z3*(1+z3)+(1/2)*c1*cp2*m1*x2*z3*(1+z3)+(1/2)*cp2*m1*y1*z3*(1+z3)+(1/2)*cp1*cp2*m1*y1*z3*(1+z3)+(1/2)*cp1*cp3*m2*y1*z3*(1+z3)+(1/2)*cp2*cp3*m2*y1*z3*(1+z3)+(1/2)*c1*y2*z3*(1+z3)+(1/2)*c1*c2*y2*z3*(1+z3)+(1/2)*c1*c3*y2*z3*(1+z3)+(1/2)*m1*y2*z3*(1+z3)+(1/2)*c1*cp2*m1*y2*z3*(1+z3)+(1/2)*c2*c3*cp2*z1*z3*(1+z3)+(1/2)*c2*c3*cp3*z1*z3*(1+z3)+(1/2)*cp2*m1*z1*z3*(1+z3)+(1/2)*cp1*cp2*m1*z1*z3*(1+z3)+(1/2)*cp2*m2*z1*z3*(1+z3)+(1/2)*c2*cp2*m2*z1*z3*(1+z3)+(1/2)*c3*cp2*m2*z1*z3*(1+z3)+(1/2)*c3*cp3*m2*z1*z3*(1+z3)+(1/2)*cp1*cp3*m2*z1*z3*(1+z3)+(1/2)*c2*cp2*cp3*m2*z1*z3*(1+z3)+(1/2)*c1*c2*z2*z3*(1+z3)+(1/2)*c1*c3*z2*z3*(1+z3)+(1/2)*m1*z2*z3*(1+z3)+(1/2)*c1*m1*z2*z3*(1+z3)+(1/2)*c2*m1*z2*z3*(1+z3)+(1/2)*c3*m1*z2*z3*(1+z3)+(1/2)*c1*cp2*m1*z2*z3*(1+z3);
end;
#####################################################################
C2in119:=function(g1,g2,g3)
return C1plusC2in119(g1,g2,g3)+C1in119(g1,g2,g3);
end;
#####################################################################
#Space Group No. 120 (I-4c2)
#####################################################################
Acpin120:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return cp1;
end;
#####################################################################
Amin120:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Axyzin120:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return x1+y1+z1;
end;
#####################################################################
Bdeltain120:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
B2in120:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return x2*z1+m1*x2*z1+y2*z1+m1*y2*z1+m1*x2*z2+m1*y2*z2+m1*z1*z2;
end;
#####################################################################
#Space Group No. 121 (I-42m)(maximally-reducible from 139)
#####################################################################
Acpin121:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return cp1;
end;
#####################################################################
Amin121:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return m1;
end;
#####################################################################
Axyzin121:=function(g1)
local x1, y1, z1, c1, cp1, m1;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
return x1+y1+z1;
end;
#####################################################################
Bdeltain121:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bphiin121:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return (c2+c2*cp1+c1*cp2+c2*cp2+cp1*cp2*m1)*(x1+y1+z1)+(c2+cp2*m1)*(x1+y1)+cp2*y1;
end;
#####################################################################
Bxyzin121:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
return (x1+y1)*z2+cp1*((x1+y1)*(x2+y2)+(x1+x2+y1+y2)*z2);
end;
#####################################################################
CGAPin121:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, x2, y2, z2, c2, cp2, m2, x3, y3, z3, c3, cp3, m3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];
return (1/2)*c2*c3*x1*(1+x1)+(1/2)*c2*cp3*x1*(1+x1)+(1/2)*c3*m2*x1*(1+x1)+(1/2)*c2*cp3*m2*x1*(1+x1)+(1/2)*c3*cp3*m2*x1*(1+x1)+c2*c3*x1*x2+c2*cp3*x1*x2+c3*m2*x1*x2+c2*cp3*m2*x1*x2+c3*cp3*m2*x1*x2+c2*cp2*x1*x3+cp2*m2*x1*x3+c3*cp3*m2*x1*x3+(1/2)*c2*x1*(1+x1)*x3+(1/2)*c2*cp3*x1*(1+x1)*x3+(1/2)*m2*x1*(1+x1)*x3+(1/2)*cp3*m2*x1*(1+x1)*x3+c2*cp2*x1*x2*x3+cp2*m3*x1*x2*x3+c2*c3*x1*y1+c2*cp3*x1*y1+c3*m2*x1*y1+c2*cp3*m2*x1*y1+c3*cp3*m2*x1*y1+c2*c3*x2*y1+c2*cp3*x2*y1+c3*m2*x2*y1+c2*cp3*m2*x2*y1+c3*cp3*m2*x2*y1+c2*cp2*x3*y1+cp2*m2*x3*y1+c3*cp3*m2*x3*y1+c2*x1*x3*y1+c2*cp3*x1*x3*y1+m2*x1*x3*y1+cp3*m2*x1*x3*y1+c2*cp2*x2*x3*y1+cp2*m3*x2*x3*y1+(1/2)*c2*c3*y1*(1+y1)+(1/2)*c2*cp3*y1*(1+y1)+(1/2)*c3*m2*y1*(1+y1)+(1/2)*c2*cp3*m2*y1*(1+y1)+(1/2)*c3*cp3*m2*y1*(1+y1)+(1/2)*c2*x3*y1*(1+y1)+(1/2)*c2*cp3*x3*y1*(1+y1)+(1/2)*m2*x3*y1*(1+y1)+(1/2)*cp3*m2*x3*y1*(1+y1)+c3*x1*y2+c2*c3*x1*y2+cp3*x1*y2+c2*cp3*x1*y2+c3*m2*x1*y2+cp3*m2*x1*y2+c2*cp3*m2*x1*y2+c3*cp3*m2*x1*y2+(1/2)*cp3*x1*(1+x1)*y2+x1*x3*y2+c2*x1*x3*y2+c2*cp2*x1*x3*y2+m2*x1*x3*y2+cp2*m3*x1*x3*y2+c3*y1*y2+c2*c3*y1*y2+cp3*y1*y2+c2*cp3*y1*y2+c3*m2*y1*y2+cp3*m2*y1*y2+c2*cp3*m2*y1*y2+c3*cp3*m2*y1*y2+cp3*x1*y1*y2+x3*y1*y2+c2*x3*y1*y2+c2*cp2*x3*y1*y2+m2*x3*y1*y2+cp2*m3*x3*y1*y2+(1/2)*cp3*y1*(1+y1)*y2+cp2*x1*y3+c2*cp2*x1*y3+cp2*m2*x1*y3+cp3*m2*x1*y3+c3*cp3*m2*x1*y3+(1/2)*c2*x1*(1+x1)*y3+(1/2)*c2*cp3*x1*(1+x1)*y3+(1/2)*m2*x1*(1+x1)*y3+(1/2)*cp3*m2*x1*(1+x1)*y3+x1*x2*y3+cp2*x1*x2*y3+c2*cp2*x1*x2*y3+cp3*x1*x2*y3+cp2*m3*x1*x2*y3+c2*x1*x3*y3+m2*x1*x3*y3+cp2*y1*y3+c2*cp2*y1*y3+cp2*m2*y1*y3+cp3*m2*y1*y3+c3*cp3*m2*y1*y3+c2*x1*y1*y3+c2*cp3*x1*y1*y3+m2*x1*y1*y3+cp3*m2*x1*y1*y3+x2*y1*y3+cp2*x2*y1*y3+c2*cp2*x2*y1*y3+cp3*x2*y1*y3+cp2*m3*x2*y1*y3+c2*x3*y1*y3+m2*x3*y1*y3+(1/2)*c2*y1*(1+y1)*y3+(1/2)*c2*cp3*y1*(1+y1)*y3+(1/2)*m2*y1*(1+y1)*y3+(1/2)*cp3*m2*y1*(1+y1)*y3+x1*y2*y3+c2*x1*y2*y3+cp2*x1*y2*y3+c2*cp2*x1*y2*y3+cp3*x1*y2*y3+m2*x1*y2*y3+cp2*m3*x1*y2*y3+y1*y2*y3+c2*y1*y2*y3+cp2*y1*y2*y3+c2*cp2*y1*y2*y3+cp3*y1*y2*y3+m2*y1*y2*y3+cp2*m3*y1*y2*y3+(1/2)*cp1*x2*y3*(1+y3)+(1/2)*cp1*y2*y3*(1+y3)+c2*c3*x1*z1+c2*cp3*x1*z1+c3*m2*x1*z1+c2*cp3*m2*x1*z1+c3*cp3*m2*x1*z1+c2*c3*x2*z1+c2*cp3*x2*z1+c3*m2*x2*z1+c2*cp3*m2*x2*z1+c3*cp3*m2*x2*z1+c3*cp3*m2*x3*z1+c2*x1*x3*z1+c2*cp3*x1*x3*z1+m2*x1*x3*z1+cp3*m2*x1*x3*z1+c2*cp2*x2*x3*z1+cp2*m3*x2*x3*z1+(1/2)*c2*x3*(1+x3)*z1+(1/2)*m2*x3*(1+x3)*z1+c2*c3*y1*z1+c2*cp3*y1*z1+c3*m2*y1*z1+c2*cp3*m2*y1*z1+c3*cp3*m2*y1*z1+c2*x3*y1*z1+c2*cp3*x3*y1*z1+m2*x3*y1*z1+cp3*m2*x3*y1*z1+c3*y2*z1+c2*c3*y2*z1+cp3*y2*z1+c2*cp3*y2*z1+c3*m2*y2*z1+cp3*m2*y2*z1+c2*cp3*m2*y2*z1+c3*cp3*m2*y2*z1+cp3*x1*y2*z1+x3*y2*z1+c2*cp2*x3*y2*z1+cp2*m3*x3*y2*z1+cp3*y1*y2*z1+cp3*m2*y3*z1+c3*cp3*m2*y3*z1+c2*x1*y3*z1+c2*cp3*x1*y3*z1+m2*x1*y3*z1+cp3*m2*x1*y3*z1+x2*y3*z1+cp2*x2*y3*z1+c2*cp2*x2*y3*z1+cp3*x2*y3*z1+cp2*m3*x2*y3*z1+c2*x3*y3*z1+m2*x3*y3*z1+c2*y1*y3*z1+c2*cp3*y1*y3*z1+m2*y1*y3*z1+cp3*m2*y1*y3*z1+cp2*y2*y3*z1+c2*cp2*y2*y3*z1+cp3*y2*y3*z1+cp2*m3*y2*y3*z1+(1/2)*c2*y3*(1+y3)*z1+(1/2)*m2*y3*(1+y3)*z1+(1/2)*c2*c3*z1*(1+z1)+(1/2)*c2*cp3*z1*(1+z1)+(1/2)*c3*m2*z1*(1+z1)+(1/2)*c2*cp3*m2*z1*(1+z1)+(1/2)*c3*cp3*m2*z1*(1+z1)+(1/2)*c2*x3*z1*(1+z1)+(1/2)*c2*cp3*x3*z1*(1+z1)+(1/2)*m2*x3*z1*(1+z1)+(1/2)*cp3*m2*x3*z1*(1+z1)+(1/2)*cp3*y2*z1*(1+z1)+(1/2)*c2*y3*z1*(1+z1)+(1/2)*c2*cp3*y3*z1*(1+z1)+(1/2)*m2*y3*z1*(1+z1)+(1/2)*cp3*m2*y3*z1*(1+z1)+c2*c3*x1*z2+c2*cp3*x1*z2+c3*m2*x1*z2+c2*cp3*m2*x1*z2+c3*cp3*m2*x1*z2+m3*x1*x2*z2+c2*x1*x3*z2+c2*cp2*x1*x3*z2+m3*x1*x3*z2+cp2*m3*x1*x3*z2+c2*c3*y1*z2+c2*cp3*y1*z2+c3*m2*y1*z2+c2*cp3*m2*y1*z2+c3*cp3*m2*y1*z2+m3*x2*y1*z2+c2*x3*y1*z2+c2*cp2*x3*y1*z2+m3*x3*y1*z2+cp2*m3*x3*y1*z2+m3*x1*y2*z2+m3*y1*y2*z2+c2*x1*y3*z2+cp2*x1*y3*z2+c2*cp2*x1*y3*z2+cp3*x1*y3*z2+m3*x1*y3*z2+cp2*m3*x1*y3*z2+c2*y1*y3*z2+cp2*y1*y3*z2+c2*cp2*y1*y3*z2+cp3*y1*y3*z2+m3*y1*y3*z2+cp2*m3*y1*y3*z2+(1/2)*cp1*y3*(1+y3)*z2+c2*c3*z1*z2+c2*cp3*z1*z2+c3*m2*z1*z2+c2*cp3*m2*z1*z2+c3*cp3*m2*z1*z2+m3*x2*z1*z2+c2*x3*z1*z2+c2*cp2*x3*z1*z2+m3*x3*z1*z2+cp2*m3*x3*z1*z2+m3*y2*z1*z2+c2*y3*z1*z2+cp2*y3*z1*z2+c2*cp2*y3*z1*z2+cp3*y3*z1*z2+m3*y3*z1*z2+cp2*m3*y3*z1*z2+c2*x1*z3+c2*cp2*x1*z3+c3*m2*x1*z3+c3*cp3*m2*x1*z3+(1/2)*c2*cp3*x1*(1+x1)*z3+c2*x1*x2*z3+c2*cp2*x1*x2*z3+m2*x1*x2*z3+cp2*m2*x1*x2*z3+m3*x1*x2*z3+cp2*m3*x1*x2*z3+c2*x1*x3*z3+c2*m2*x1*x3*z3+c2*y1*z3+c2*cp2*y1*z3+c3*m2*y1*z3+c3*cp3*m2*y1*z3+c2*cp3*x1*y1*z3+c2*x2*y1*z3+c2*cp2*x2*y1*z3+m2*x2*y1*z3+cp2*m2*x2*y1*z3+m3*x2*y1*z3+cp2*m3*x2*y1*z3+c2*x3*y1*z3+c2*m2*x3*y1*z3+(1/2)*c2*cp3*y1*(1+y1)*z3+x1*y2*z3+c2*cp2*x1*y2*z3+m2*x1*y2*z3+cp2*m2*x1*y2*z3+m3*x1*y2*z3+cp2*m3*x1*y2*z3+y1*y2*z3+c2*cp2*y1*y2*z3+m2*y1*y2*z3+cp2*m2*y1*y2*z3+m3*y1*y2*z3+cp2*m3*y1*y2*z3+c2*m2*x1*y3*z3+c2*m2*y1*y3*z3+c3*m2*z1*z3+c3*cp3*m2*z1*z3+c2*cp3*x1*z1*z3+c2*x2*z1*z3+c2*cp2*x2*z1*z3+m2*x2*z1*z3+cp2*m2*x2*z1*z3+m3*x2*z1*z3+cp2*m3*x2*z1*z3+c2*cp3*y1*z1*z3+y2*z1*z3+c2*y2*z1*z3+c2*cp2*y2*z1*z3+m2*y2*z1*z3+cp2*m2*y2*z1*z3+m3*y2*z1*z3+cp2*m3*y2*z1*z3+(1/2)*c2*cp3*z1*(1+z1)*z3+c2*cp2*x1*z2*z3+cp2*m2*x1*z2*z3+cp2*m3*x1*z2*z3+c2*cp2*y1*z2*z3+cp2*m2*y1*z2*z3+cp2*m3*y1*z2*z3+c2*cp2*z1*z2*z3+cp2*m2*z1*z2*z3+cp2*m3*z1*z2*z3+(1/2)*c2*z1*z3*(1+z3);
end;
#####################################################################
#Space Group No. 123 (P4/mmm)
#####################################################################
Aiin123:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin123:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin123:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Axyin123:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return x1+y1;
end;
#####################################################################
Azin123:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return z1;
end;
#####################################################################
Bdeltain123:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bxyin123:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return (1-m1)*y1*x2+m1*y2*(x2+y1);
end;
#####################################################################
#Space Group No. 124 (P4/mcc)
#####################################################################
Aiin124:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin124:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin124:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Axyin124:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return x1+y1;
end;
#####################################################################
Bdeltain124:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bxyin124:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return (1-m1)*y1*x2+m1*y2*(x2+y1);
end;
#####################################################################
#Space Group No. 125 (P4/nbm)
#####################################################################
Aiin125:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin125:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin125:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Azin125:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return z1;
end;
#####################################################################
Bdeltain125:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bcxyin125:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return (c2+cp2*m1)*(x1+y1)+cp2*y1+c2*cp2*(m1+p1)+p1*p2;
end;
#####################################################################
#Space Group No. 127 (P4/mbm)
#####################################################################
Aiin127:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin127:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin127:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Azin127:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return z1;
end;
#####################################################################
Bdeltain127:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bcxyin127:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c2*cp1+c1*cp2+c2*cp1*cp2+c2*m1+c1*cp2*m1+c2*p1+cp1*cp2*p1+c1*p2+cp1*cp2*p2+c2*x1+cp2*x1+cp2*m1*x1+p2*x1+c2*y1+cp2*m1*y1+p2*y1;
end;
#####################################################################
CGAPin127:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2, x3, y3, z3, c3, cp3, m3, p3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];p3:=g3[7];
return p1*p2*m3+c1*c2*c3*cp1+c1*c3*cp2+c2*c3*cp1*cp2+c1*c2*c3*cp1*cp2+c2*cp1*cp3+c1*c2*cp1*cp3+c1*cp2*cp3+c1*c3*cp2*cp3+c1*c2*c3*cp2*cp3+c3*cp1*cp2*cp3+c1*c3*cp1*cp2*cp3+c2*c3*cp1*cp2*cp3+c1*c2*c3*cp1*cp2*cp3+c1*c2*c3*m1+c2*c3*cp1*m1+c3*cp2*m1+c2*c3*cp2*m1+c1*c2*c3*cp2*m1+c3*cp1*cp2*m1+c1*c3*cp1*cp2*m1+c2*cp1*cp3*m1+c1*c2*cp1*cp3*m1+c2*cp2*cp3*m1+c3*cp2*cp3*m1+c1*c3*cp2*cp3*m1+c1*c2*c3*cp2*cp3*m1+c1*cp1*cp2*cp3*m1+c2*cp1*cp2*cp3*m1+c3*cp1*cp2*cp3*m1+c2*c3*cp1*cp2*cp3*m1+c1*c3*m2+c1*c2*c3*m2+c3*cp1*m2+c2*c3*cp1*m2+c1*c3*cp2*m2+c1*c2*c3*cp2*m2+c3*cp1*cp2*m2+c2*c3*cp1*cp2*m2+c1*c2*c3*cp1*cp2*m2+c1*cp3*m2+c1*cp1*cp3*m2+c2*cp1*cp3*m2+c1*c2*cp1*cp3*m2+c1*c3*cp1*cp3*m2+c1*c2*c3*cp1*cp3*m2+c1*c3*cp2*cp3*m2+c1*c2*c3*cp2*cp3*m2+cp1*cp2*cp3*m2+c1*cp1*cp2*cp3*m2+c2*cp1*cp2*cp3*m2+c3*cp1*cp2*cp3*m2+c1*c3*cp1*cp2*cp3*m2+c2*c3*m1*m2+c2*c3*cp2*m1*m2+c1*c2*c3*cp2*m1*m2+c3*cp1*cp2*m1*m2+c1*c3*cp1*cp2*m1*m2+c2*c3*cp1*cp2*m1*m2+cp3*m1*m2+c1*c2*c3*cp3*m1*m2+cp1*cp3*m1*m2+c1*cp1*cp3*m1*m2+c2*cp1*cp3*m1*m2+c1*c2*cp1*cp3*m1*m2+c3*cp1*cp3*m1*m2+c1*c3*cp1*cp3*m1*m2+c2*c3*cp1*cp3*m1*m2+cp2*cp3*m1*m2+c3*cp2*cp3*m1*m2+c1*c3*cp2*cp3*m1*m2+c2*c3*cp2*cp3*m1*m2+cp1*cp2*cp3*m1*m2+c3*cp1*cp2*cp3*m1*m2+c1*c2*cp1*m3+c1*c2*c3*cp2*m3+cp1*cp2*m3+c1*cp1*cp2*m3+c1*c2*cp1*cp2*m3+c3*cp1*cp2*m3+c1*c3*cp1*cp2*m3+c2*c3*cp1*cp2*m3+c2*cp1*cp3*m3+c1*c2*cp1*cp3*m3+c2*c3*cp1*cp3*m3+c1*c2*c3*cp1*cp3*m3+c1*cp2*cp3*m3+c1*c2*c3*cp2*cp3*m3+c1*cp1*cp2*cp3*m3+c2*cp1*cp2*cp3*m3+c3*cp1*cp2*cp3*m3+c2*m1*m3+c1*c2*m1*m3+c2*cp1*m1*m3+c1*c2*cp1*m1*m3+c2*c3*cp1*m1*m3+cp2*m1*m3+c1*cp2*m1*m3+c2*cp2*m1*m3+c3*cp2*m1*m3+c1*c2*cp1*cp2*m1*m3+c1*c3*cp1*cp2*m1*m3+c2*c3*cp3*m1*m3+c1*c2*c3*cp3*m1*m3+c1*c2*cp1*cp3*m1*m3+cp2*cp3*m1*m3+c1*cp2*cp3*m1*m3+c1*c3*cp2*cp3*m1*m3+c2*c3*cp2*cp3*m1*m3+cp1*cp2*cp3*m1*m3+c1*cp1*cp2*cp3*m1*m3+c2*c3*cp1*cp2*cp3*m1*m3+c1*m2*m3+c1*c2*m2*m3+c1*c3*m2*m3+c1*cp1*m2*m3+c2*cp1*m2*m3+c1*c2*cp1*m2*m3+c3*cp1*m2*m3+c1*c2*cp2*m2*m3+c1*c2*c3*cp2*m2*m3+cp1*cp2*m2*m3+c1*cp1*cp2*m2*m3+c1*c2*cp1*cp2*m2*m3+c3*cp1*cp2*m2*m3+c1*c3*cp1*cp2*m2*m3+c1*cp3*m2*m3+c1*c2*c3*cp3*m2*m3+c3*cp1*cp3*m2*m3+c1*c3*cp1*cp3*m2*m3+c2*c3*cp1*cp3*m2*m3+c1*cp2*cp3*m2*m3+c1*c2*cp2*cp3*m2*m3+c1*c3*cp2*cp3*m2*m3+c1*cp1*cp2*cp3*m2*m3+c2*cp1*cp2*cp3*m2*m3+c1*c2*cp1*cp2*cp3*m2*m3+c3*cp1*cp2*cp3*m2*m3+c1*c3*cp1*cp2*cp3*m2*m3+m1*m2*m3+c1*m1*m2*m3+c1*c2*m1*m2*m3+c3*m1*m2*m3+c3*cp1*m1*m2*m3+cp2*m1*m2*m3+c2*cp2*m1*m2*m3+c1*c2*cp2*m1*m2*m3+c1*c3*cp2*m1*m2*m3+c2*c3*cp2*m1*m2*m3+c2*cp3*m1*m2*m3+c3*cp3*m1*m2*m3+c1*c3*cp3*m1*m2*m3+c3*cp1*cp3*m1*m2*m3+cp2*cp3*m1*m2*m3+c1*cp2*cp3*m1*m2*m3+c2*cp2*cp3*m1*m2*m3+c1*c2*cp2*cp3*m1*m2*m3+c3*cp2*cp3*m1*m2*m3+c1*c3*cp2*cp3*m1*m2*m3+c1*cp1*cp2*cp3*m1*m2*m3+c2*cp1*cp2*cp3*m1*m2*m3+c2*c3*p1+c2*c3*cp1*p1+c2*cp1*cp3*p1+c1*cp1*cp2*cp3*p1+c3*cp1*cp2*cp3*p1+c2*c3*m1*p1+c3*cp2*m1*p1+c3*cp1*cp2*m1*p1+c2*cp1*cp3*m1*p1+cp2*cp3*m1*p1+c1*cp2*cp3*m1*p1+c3*cp2*cp3*m1*p1+cp1*cp2*cp3*m1*p1+c3*m2*p1+c3*cp2*m2*p1+c3*cp1*cp2*m2*p1+c1*c3*cp1*cp2*m2*p1+cp1*cp3*m2*p1+c1*cp1*cp3*m2*p1+c2*cp1*cp3*m2*p1+c1*c2*cp1*cp3*m2*p1+c3*cp1*cp3*m2*p1+c1*c3*cp1*cp3*m2*p1+cp1*cp2*cp3*m2*p1+c1*cp1*cp2*cp3*m2*p1+c2*cp1*cp2*cp3*m2*p1+c3*cp1*cp2*cp3*m2*p1+c3*m1*m2*p1+c1*c3*cp2*m1*m2*p1+c3*cp1*cp2*m1*m2*p1+cp3*m1*m2*p1+c1*cp3*m1*m2*p1+c1*c2*cp3*m1*m2*p1+c1*c3*cp3*m1*m2*p1+c2*cp1*cp3*m1*m2*p1+c3*cp1*cp3*m1*m2*p1+c1*cp2*cp3*m1*m2*p1+c2*cp2*cp3*m1*m2*p1+c3*cp2*cp3*m1*m2*p1+cp1*cp2*cp3*m1*m2*p1+c2*m3*p1+c2*cp1*m3*p1+c1*cp2*m3*p1+cp1*cp2*m3*p1+c2*cp1*cp2*m3*p1+c1*c2*cp1*cp2*m3*p1+c3*cp1*cp2*m3*p1+c1*c3*cp1*cp2*m3*p1+c2*cp3*m3*p1+c1*c2*cp1*cp3*m3*p1+c2*c3*cp1*cp3*m3*p1+c3*cp2*cp3*m3*p1+c2*m1*m3*p1+c1*c2*cp2*m1*m3*p1+c1*c3*cp2*m1*m3*p1+c2*cp1*cp2*m1*m3*p1+c3*cp1*cp2*m1*m3*p1+c2*cp3*m1*m3*p1+c1*c2*cp3*m1*m3*p1+c2*c3*cp3*m1*m3*p1+c2*cp1*cp3*m1*m3*p1+cp2*cp3*m1*m3*p1+c3*cp2*cp3*m1*m3*p1+cp1*cp2*cp3*m1*m3*p1+c3*cp1*cp2*cp3*m1*m3*p1+m2*m3*p1+c1*cp1*m2*m3*p1+cp1*cp2*m2*m3*p1+cp3*m2*m3*p1+c3*cp3*m2*m3*p1+c1*cp1*cp3*m2*m3*p1+c2*cp1*cp3*m2*m3*p1+c3*cp1*cp3*m2*m3*p1+cp2*cp3*m2*m3*p1+cp1*cp2*cp3*m2*m3*p1+c1*cp1*cp2*cp3*m2*m3*p1+c2*cp1*cp2*cp3*m2*m3*p1+c3*cp1*cp2*cp3*m2*m3*p1+c1*m1*m2*m3*p1+c1*cp3*m1*m2*m3*p1+c2*cp3*m1*m2*m3*p1+c3*cp3*m1*m2*m3*p1+cp1*cp3*m1*m2*m3*p1+c1*cp2*cp3*m1*m2*m3*p1+c2*cp2*cp3*m1*m2*m3*p1+c3*cp2*cp3*m1*m2*m3*p1+cp1*cp2*cp3*m1*m2*m3*p1+c1*c3*cp1*p2+c2*c3*cp1*p2+c1*c3*cp2*p2+c1*cp1*cp3*p2+c2*cp1*cp3*p2+c1*c2*cp1*cp3*p2+c1*c3*cp1*cp3*p2+c1*cp2*cp3*p2+c1*c2*cp2*cp3*p2+c1*c3*cp2*cp3*p2+c1*cp1*cp2*cp3*p2+c2*cp1*cp2*cp3*p2+c1*c2*cp1*cp2*cp3*p2+c3*cp1*cp2*cp3*p2+c1*c3*cp1*cp2*cp3*p2+c3*m1*p2+c1*c3*m1*p2+c2*c3*m1*p2+c3*cp2*m1*p2+c3*cp1*cp2*m1*p2+c2*cp3*m1*p2+c1*c2*cp3*m1*p2+c3*cp3*m1*p2+c1*c3*cp3*m1*p2+c3*cp1*cp3*m1*p2+cp2*cp3*m1*p2+c2*cp2*cp3*m1*p2+c1*c2*cp2*cp3*m1*p2+c1*c3*cp2*cp3*m1*p2+c2*cp1*cp2*cp3*m1*p2+c3*cp1*cp2*cp3*m1*p2+c1*c3*cp2*m2*p2+c3*cp1*cp2*m2*p2+c1*cp1*cp3*m2*p2+c3*cp1*cp3*m2*p2+c1*cp2*cp3*m2*p2+c1*c2*cp2*cp3*m2*p2+c1*c3*cp2*cp3*m2*p2+c2*cp1*cp2*cp3*m2*p2+c3*cp1*cp2*cp3*m2*p2+c3*m1*m2*p2+c3*cp2*m1*m2*p2+c3*cp1*cp2*m1*m2*p2+c1*cp3*m1*m2*p2+cp2*cp3*m1*m2*p2+c1*cp1*cp2*cp3*m1*m2*p2+c2*cp1*cp2*cp3*m1*m2*p2+c3*cp1*cp2*cp3*m1*m2*p2+c1*cp1*m3*p2+c2*cp1*m3*p2+c1*cp2*m3*p2+c1*c2*cp2*m3*p2+c1*c3*cp2*m3*p2+cp1*cp2*m3*p2+c1*c2*cp1*cp2*m3*p2+c1*c3*cp1*cp2*m3*p2+c1*c2*cp1*cp3*m3*p2+c2*c3*cp1*cp3*m3*p2+c1*c2*cp2*cp3*m3*p2+cp1*cp2*cp3*m3*p2+c2*m1*m3*p2+cp1*m1*m3*p2+c1*cp1*m1*m3*p2+c2*cp2*m1*m3*p2+c1*c2*cp2*m1*m3*p2+c3*cp2*m1*m3*p2+c1*c3*cp2*m1*m3*p2+c1*cp1*cp2*m1*m3*p2+cp3*m1*m3*p2+c1*cp3*m1*m3*p2+c2*cp3*m1*m3*p2+c1*c2*cp3*m1*m3*p2+c2*c3*cp3*m1*m3*p2+c1*cp1*cp3*m1*m3*p2+c3*cp1*cp3*m1*m3*p2+cp2*cp3*m1*m3*p2+c2*cp2*cp3*m1*m3*p2+cp1*cp2*cp3*m1*m3*p2+c3*cp1*cp2*cp3*m1*m3*p2+c1*m2*m3*p2+c1*cp1*m2*m3*p2+c2*cp1*m2*m3*p2+c3*cp1*m2*m3*p2+c1*cp2*m2*m3*p2+c1*c2*cp2*m2*m3*p2+c1*c3*cp2*m2*m3*p2+cp1*cp2*m2*m3*p2+c1*cp3*m2*m3*p2+c1*c2*cp3*m2*m3*p2+cp1*cp3*m2*m3*p2+c2*cp1*cp3*m2*m3*p2+c1*cp2*cp3*m2*m3*p2+cp1*cp2*cp3*m2*m3*p2+c2*cp1*cp2*cp3*m2*m3*p2+cp1*m1*m2*m3*p2+cp2*m1*m2*m3*p2+c2*cp2*m1*m2*m3*p2+c3*cp2*m1*m2*m3*p2+cp1*cp2*m1*m2*m3*p2+cp1*cp3*m1*m2*m3*p2+c2*cp2*cp3*m1*m2*m3*p2+c3*cp2*cp3*m1*m2*m3*p2+cp1*cp2*cp3*m1*m2*m3*p2+c1*cp2*p3+c1*cp1*cp2*p3+c2*cp1*cp2*p3+c1*cp2*cp3*p3+c1*cp1*cp2*cp3*p3+c2*cp1*cp2*cp3*p3+cp2*m1*p3+c3*cp2*m1*p3+cp1*cp2*m1*p3+c3*cp2*cp3*m1*p3+c1*cp1*cp2*cp3*m1*p3+c2*cp1*cp2*cp3*m1*p3+c3*cp1*cp2*cp3*m1*p3+c1*c2*m2*p3+c1*c3*m2*p3+c1*cp2*m2*p3+c1*c2*cp2*m2*p3+c1*c3*cp2*m2*p3+cp1*cp2*m2*p3+c1*cp1*cp2*m2*p3+c2*cp1*cp2*m2*p3+c3*cp1*cp2*m2*p3+c1*cp3*m2*p3+c1*c2*cp3*m2*p3+c1*c3*cp3*m2*p3+c1*cp2*cp3*m2*p3+cp1*cp2*cp3*m2*p3+c1*cp1*cp2*cp3*m2*p3+c2*cp1*cp2*cp3*m2*p3+c3*cp1*cp2*cp3*m2*p3+c2*m1*m2*p3+c3*m1*m2*p3+cp2*m1*m2*p3+c1*cp2*m1*m2*p3+cp1*cp2*m1*m2*p3+c1*cp1*cp2*m1*m2*p3+c2*cp1*cp2*m1*m2*p3+c3*cp1*cp2*m1*m2*p3+c2*cp3*m1*m2*p3+c3*cp3*m1*m2*p3+c1*c2*m3*p3+c1*cp2*m3*p3+c1*c2*cp2*m3*p3+c1*c3*cp2*m3*p3+c3*cp1*cp2*m3*p3+c1*c2*cp3*m3*p3+c2*m1*m3*p3+c2*cp2*m1*m3*p3+c3*cp2*m1*m3*p3+cp1*cp2*m1*m3*p3+c1*cp1*cp2*m1*m3*p3+c2*cp1*cp2*m1*m3*p3+c3*cp1*cp2*m1*m3*p3+c2*cp3*m1*m3*p3+cp2*cp3*m1*m3*p3+c1*cp2*cp3*m1*m3*p3+c2*cp2*cp3*m1*m3*p3+cp1*cp2*cp3*m1*m3*p3+cp1*cp2*m2*m3*p3+cp2*m1*m2*m3*p3+c1*cp3*m1*m2*m3*p3+c2*cp3*m1*m2*m3*p3+c3*cp3*m1*m2*m3*p3+cp2*cp3*m1*m2*m3*p3+cp1*cp2*cp3*m1*m2*m3*p3+c3*cp2*x1+c3*cp1*cp2*x1+c1*c2*cp3*x1+c2*c3*cp3*x1+c2*cp1*cp3*x1+c1*cp2*cp3*x1+c2*c3*m1*x1+c3*cp2*m1*x1+c2*cp3*m1*x1+c2*cp2*cp3*m1*x1+cp1*cp2*cp3*m1*x1+c3*m2*x1+c2*c3*m2*x1+c1*c3*cp2*m2*x1+c3*cp1*cp2*m2*x1+c1*c3*cp1*cp2*m2*x1+c1*cp3*m2*x1+c1*c2*cp3*m2*x1+c1*c3*cp3*m2*x1+c2*c3*cp3*m2*x1+c2*cp1*cp3*m2*x1+c1*c2*cp1*cp3*m2*x1+c3*cp1*cp3*m2*x1+c1*c3*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c2*c3*cp2*cp3*m2*x1+cp1*cp2*cp3*m2*x1+c1*cp1*cp2*cp3*m2*x1+c3*m1*m2*x1+c3*cp2*m1*m2*x1+cp3*m1*m2*x1+c2*c3*cp3*m1*m2*x1+c1*cp1*cp3*m1*m2*x1+cp2*cp3*m1*m2*x1+c2*c3*cp2*cp3*m1*m2*x1+c2*m3*x1+c1*c2*cp2*m3*x1+c3*cp2*m3*x1+c1*c3*cp2*m3*x1+c2*c3*cp2*m3*x1+c2*cp1*cp2*m3*x1+c1*c2*cp1*cp2*m3*x1+c3*cp1*cp2*m3*x1+c1*c3*cp1*cp2*m3*x1+c1*c2*cp3*m3*x1+c2*c3*cp3*m3*x1+c1*c2*cp1*cp3*m3*x1+c2*cp2*cp3*m3*x1+c1*c3*cp2*cp3*m3*x1+cp1*cp2*cp3*m3*x1+c3*cp1*cp2*cp3*m3*x1+c2*m1*m3*x1+cp2*m1*m3*x1+c1*cp2*m1*m3*x1+c2*c3*cp2*m1*m3*x1+cp1*cp2*m1*m3*x1+c1*cp1*cp2*m1*m3*x1+c2*c3*cp3*m1*m3*x1+c2*cp1*cp3*m1*m3*x1+c1*cp2*cp3*m1*m3*x1+c2*cp2*cp3*m1*m3*x1+c3*cp2*cp3*m1*m3*x1+c2*c3*cp2*cp3*m1*m3*x1+c2*m2*m3*x1+cp1*m2*m3*x1+c1*cp1*m2*m3*x1+c1*cp2*m2*m3*x1+c2*cp2*m2*m3*x1+c2*c3*cp2*m2*m3*x1+cp1*cp2*m2*m3*x1+c1*cp3*m2*m3*x1+c2*cp3*m2*m3*x1+c3*cp3*m2*m3*x1+c2*c3*cp3*m2*m3*x1+cp1*cp3*m2*m3*x1+c2*cp1*cp3*m2*m3*x1+c2*cp2*cp3*m2*m3*x1+c3*cp2*cp3*m2*m3*x1+cp1*cp2*cp3*m2*m3*x1+c1*cp1*cp2*cp3*m2*m3*x1+c2*m1*m2*m3*x1+cp2*m1*m2*m3*x1+c3*cp2*m1*m2*m3*x1+c2*c3*cp2*m1*m2*m3*x1+c3*cp3*m1*m2*m3*x1+c2*c3*cp3*m1*m2*m3*x1+cp2*cp3*m1*m2*m3*x1+c3*cp2*cp3*m1*m2*m3*x1+cp1*cp2*cp3*m1*m2*m3*x1+c3*cp1*cp2*m2*p1*x1+cp1*cp3*m2*p1*x1+c2*cp1*cp3*m2*p1*x1+c3*cp1*cp3*m2*p1*x1+cp1*cp2*cp3*m2*p1*x1+c3*cp2*m1*m2*p1*x1+cp3*m1*m2*p1*x1+c2*cp3*m1*m2*p1*x1+c3*cp3*m1*m2*p1*x1+cp2*cp3*m1*m2*p1*x1+cp2*m3*p1*x1+cp1*cp2*m3*p1*x1+c2*cp1*cp2*m3*p1*x1+c3*cp1*cp2*m3*p1*x1+c2*cp1*cp3*m3*p1*x1+cp2*m1*m3*p1*x1+c2*cp2*m1*m3*p1*x1+c3*cp2*m1*m3*p1*x1+c2*cp3*m1*m3*p1*x1+m2*m3*p1*x1+cp1*m2*m3*p1*x1+cp1*cp3*m2*m3*p1*x1+cp1*cp2*cp3*m2*m3*p1*x1+m1*m2*m3*p1*x1+cp3*m1*m2*m3*p1*x1+cp2*cp3*m1*m2*m3*p1*x1+cp2*cp3*p2*x1+c3*cp1*cp2*m1*p2*x1+cp1*cp3*m1*p2*x1+c1*cp1*cp3*m1*p2*x1+c2*cp1*cp3*m1*p2*x1+c3*cp1*cp3*m1*p2*x1+c3*cp1*cp2*m2*p2*x1+c2*cp3*m2*p2*x1+c3*cp3*m2*p2*x1+cp1*cp3*m2*p2*x1+c1*cp1*cp3*m2*p2*x1+c2*cp1*cp3*m2*p2*x1+c3*cp1*cp3*m2*p2*x1+cp2*cp3*m2*p2*x1+c2*cp2*cp3*m2*p2*x1+c3*cp2*cp3*m2*p2*x1+cp1*cp2*cp3*m2*p2*x1+c3*cp2*m1*m2*p2*x1+cp3*m1*m2*p2*x1+c1*cp3*m1*m2*p2*x1+c2*cp2*cp3*m1*m2*p2*x1+c3*cp2*cp3*m1*m2*p2*x1+cp1*cp2*cp3*m1*m2*p2*x1+cp1*m3*p2*x1+cp2*m3*p2*x1+c2*cp2*m3*p2*x1+c3*cp2*m3*p2*x1+cp1*cp2*m3*p2*x1+c1*cp1*cp2*m3*p2*x1+c2*cp1*cp2*m3*p2*x1+c3*cp1*cp2*m3*p2*x1+c1*cp1*cp3*m3*p2*x1+c2*cp1*cp3*m3*p2*x1+c2*cp2*cp3*m3*p2*x1+m1*m3*p2*x1+cp1*m1*m3*p2*x1+cp2*m1*m3*p2*x1+c1*cp2*m1*m3*p2*x1+cp1*cp2*m1*m3*p2*x1+cp3*m1*m3*p2*x1+c1*cp3*m1*m3*p2*x1+c2*cp3*m1*m3*p2*x1+cp1*cp3*m1*m3*p2*x1+c2*cp2*cp3*m1*m3*p2*x1+c3*cp2*cp3*m1*m3*p2*x1+m2*m3*p2*x1+cp1*m2*m3*p2*x1+c2*cp2*m2*m3*p2*x1+c3*cp2*m2*m3*p2*x1+cp3*m2*m3*p2*x1+c2*cp3*m2*m3*p2*x1+cp1*cp3*m2*m3*p2*x1+cp2*cp3*m2*m3*p2*x1+cp1*cp2*cp3*m2*m3*p2*x1+c2*cp2*m1*m2*m3*p2*x1+c3*cp2*m1*m2*m3*p2*x1+c2*cp3*m1*m2*m3*p2*x1+c3*cp3*m1*m2*m3*p2*x1+c2*p3*x1+c1*cp2*p3*x1+c2*cp3*p3*x1+cp2*m1*p3*x1+c1*cp1*cp2*m1*p3*x1+c2*cp1*cp2*m1*p3*x1+c3*cp1*cp2*m1*p3*x1+c1*cp2*cp3*m1*p3*x1+c2*cp2*cp3*m1*p3*x1+c3*cp2*cp3*m1*p3*x1+cp1*cp2*cp3*m1*p3*x1+m2*p3*x1+c1*m2*p3*x1+cp1*cp2*m2*p3*x1+c1*cp1*cp2*m2*p3*x1+c2*cp1*cp2*m2*p3*x1+c3*cp1*cp2*m2*p3*x1+c1*cp2*cp3*m2*p3*x1+c2*cp2*cp3*m2*p3*x1+c3*cp2*cp3*m2*p3*x1+cp1*cp2*cp3*m2*p3*x1+m1*m2*p3*x1+cp2*m1*m2*p3*x1+c1*cp2*m1*m2*p3*x1+c2*cp2*m1*m2*p3*x1+c3*cp2*m1*m2*p3*x1+cp1*cp2*m1*m2*p3*x1+c1*cp3*m1*m2*p3*x1+c2*cp3*m1*m2*p3*x1+c3*cp3*m1*m2*p3*x1+c2*m3*p3*x1+cp1*cp2*m3*p3*x1+c1*cp1*cp2*m3*p3*x1+c2*cp1*cp2*m3*p3*x1+c3*cp1*cp2*m3*p3*x1+cp2*cp3*m3*p3*x1+c1*cp2*cp3*m3*p3*x1+c2*cp2*cp3*m3*p3*x1+c3*cp2*cp3*m3*p3*x1+c1*cp2*m1*m3*p3*x1+c2*cp2*m1*m3*p3*x1+c3*cp2*m1*m3*p3*x1+cp1*cp2*m1*m3*p3*x1+cp2*cp3*m1*m3*p3*x1+cp1*cp2*cp3*m1*m3*p3*x1+m2*m3*p3*x1+cp3*m2*m3*p3*x1+c1*cp3*m2*m3*p3*x1+c2*cp3*m2*m3*p3*x1+c3*cp3*m2*m3*p3*x1+cp2*cp3*m2*m3*p3*x1+cp1*cp2*cp3*m2*m3*p3*x1+cp3*m1*m2*m3*p3*x1+c3*cp1*x2+c1*c3*cp2*x2+c3*cp1*cp2*x2+c1*c3*cp1*cp2*x2+c1*c3*cp3*x2+c1*cp1*cp3*x2+c2*cp1*cp3*x2+c1*c2*cp1*cp3*x2+c1*c3*cp1*cp3*x2+c1*cp2*cp3*x2+c3*cp2*m1*x2+c1*c3*cp2*m1*x2+c1*c2*cp3*m1*x2+c3*cp3*m1*x2+c1*c3*cp3*m1*x2+c1*cp1*cp3*m1*x2+c3*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c1*cp2*cp3*m1*x2+c2*cp2*cp3*m1*x2+c3*cp2*cp3*m1*x2+c3*cp1*m2*x2+c1*c3*cp2*m2*x2+c1*c3*cp1*cp2*m2*x2+c1*c2*cp3*m2*x2+c1*c3*cp3*m2*x2+cp1*cp3*m2*x2+c1*cp1*cp3*m2*x2+c1*c2*cp1*cp3*m2*x2+c1*c3*cp1*cp3*m2*x2+c1*cp2*cp3*m2*x2+c3*cp1*m1*m2*x2+c1*c3*cp2*m1*m2*x2+cp3*m1*m2*x2+c1*c2*cp3*m1*m2*x2+c1*c3*cp3*m1*m2*x2+c1*cp1*cp3*m1*m2*x2+cp1*cp2*cp3*m1*m2*x2+cp1*m3*x2+c1*cp1*m3*x2+c2*cp1*m3*x2+c3*cp1*m3*x2+c1*c2*cp2*m3*x2+c1*c3*cp2*m3*x2+c1*c2*cp1*cp2*m3*x2+c1*c3*cp1*cp2*m3*x2+c1*c2*cp3*m3*x2+c2*cp1*cp3*m3*x2+c1*c2*cp1*cp3*m3*x2+c3*cp1*cp3*m3*x2+c1*c3*cp2*cp3*m3*x2+cp1*cp2*cp3*m3*x2+c3*cp1*cp2*cp3*m3*x2+c1*cp1*m1*m3*x2+c2*cp1*m1*m3*x2+c3*cp1*m1*m3*x2+c1*cp2*m1*m3*x2+c1*c2*cp2*m1*m3*x2+c1*c3*cp2*m1*m3*x2+cp1*cp2*m1*m3*x2+c1*cp1*cp2*m1*m3*x2+c1*c2*cp3*m1*m3*x2+c3*cp3*m1*m3*x2+cp1*cp3*m1*m3*x2+c2*cp1*cp3*m1*m3*x2+c3*cp1*cp3*m1*m3*x2+cp2*cp3*m1*m3*x2+c1*cp2*cp3*m1*m3*x2+c2*cp2*cp3*m1*m3*x2+c3*cp2*cp3*m1*m3*x2+cp1*cp2*cp3*m1*m3*x2+c3*cp1*cp2*cp3*m1*m3*x2+cp1*m2*m3*x2+c1*cp1*m2*m3*x2+c1*cp2*m2*m3*x2+cp1*cp2*m2*m3*x2+c1*cp3*m2*m3*x2+cp1*cp3*m2*m3*x2+c2*cp1*cp3*m2*m3*x2+c1*cp1*cp2*cp3*m2*m3*x2+m1*m2*m3*x2+c1*m1*m2*m3*x2+cp2*m1*m2*m3*x2+cp1*cp2*m1*m2*m3*x2+c1*cp3*m1*m2*m3*x2+c3*cp3*m1*m2*m3*x2+cp1*cp3*m1*m2*m3*x2+cp2*cp3*m1*m2*m3*x2+c1*cp2*cp3*m1*m2*m3*x2+cp1*cp2*cp3*m1*m2*m3*x2+c3*cp1*cp2*m2*p1*x2+cp1*cp3*m2*p1*x2+c2*cp1*cp3*m2*p1*x2+c3*cp1*cp3*m2*p1*x2+cp1*cp2*cp3*m2*p1*x2+c3*cp2*m1*m2*p1*x2+cp3*m1*m2*p1*x2+c2*cp3*m1*m2*p1*x2+c3*cp3*m1*m2*p1*x2+cp2*cp3*m1*m2*p1*x2+m3*p1*x2+cp1*m3*p1*x2+cp2*m3*p1*x2+cp1*cp2*m3*p1*x2+c2*cp1*cp2*m3*p1*x2+c3*cp1*cp2*m3*p1*x2+c2*cp1*cp3*m3*p1*x2+m1*m3*p1*x2+cp1*m1*m3*p1*x2+c2*cp2*m1*m3*p1*x2+c3*cp2*m1*m3*p1*x2+c2*cp3*m1*m3*p1*x2+m2*m3*p1*x2+cp1*m2*m3*p1*x2+cp1*cp3*m2*m3*p1*x2+cp1*cp2*cp3*m2*m3*p1*x2+cp3*m1*m2*m3*p1*x2+cp2*cp3*m1*m2*m3*p1*x2+c3*cp1*cp2*m1*p2*x2+cp1*cp3*m1*p2*x2+c1*cp1*cp3*m1*p2*x2+c2*cp1*cp3*m1*p2*x2+c3*cp1*cp3*m1*p2*x2+c3*cp1*cp2*m2*p2*x2+cp1*cp3*m2*p2*x2+c1*cp1*cp3*m2*p2*x2+c2*cp1*cp3*m2*p2*x2+c3*cp1*cp3*m2*p2*x2+cp1*cp2*cp3*m2*p2*x2+c3*cp2*m1*m2*p2*x2+c1*cp3*m1*m2*p2*x2+c2*cp3*m1*m2*p2*x2+c3*cp3*m1*m2*p2*x2+cp2*cp3*m1*m2*p2*x2+cp1*cp2*cp3*m1*m2*p2*x2+cp1*m3*p2*x2+cp1*cp2*m3*p2*x2+c1*cp1*cp2*m3*p2*x2+c2*cp1*cp2*m3*p2*x2+c3*cp1*cp2*m3*p2*x2+c1*cp1*cp3*m3*p2*x2+c2*cp1*cp3*m3*p2*x2+m1*m3*p2*x2+cp1*m1*m3*p2*x2+cp2*m1*m3*p2*x2+c1*cp2*m1*m3*p2*x2+c2*cp2*m1*m3*p2*x2+c3*cp2*m1*m3*p2*x2+cp1*cp2*m1*m3*p2*x2+cp3*m1*m3*p2*x2+c1*cp3*m1*m3*p2*x2+c2*cp3*m1*m3*p2*x2+cp1*cp3*m1*m3*p2*x2+cp1*m2*m3*p2*x2+cp1*cp3*m2*m3*p2*x2+cp1*cp2*cp3*m2*m3*p2*x2+cp3*m1*m2*m3*p2*x2+cp2*cp3*m1*m2*m3*p2*x2+c1*cp2*p3*x2+cp2*m1*p3*x2+c1*cp1*cp2*m1*p3*x2+c2*cp1*cp2*m1*p3*x2+c3*cp1*cp2*m1*p3*x2+c1*cp2*cp3*m1*p3*x2+c2*cp2*cp3*m1*p3*x2+c3*cp2*cp3*m1*p3*x2+cp1*cp2*cp3*m1*p3*x2+c1*m2*p3*x2+cp1*cp2*m2*p3*x2+c1*cp1*cp2*m2*p3*x2+c2*cp1*cp2*m2*p3*x2+c3*cp1*cp2*m2*p3*x2+c1*cp2*cp3*m2*p3*x2+cp1*cp2*cp3*m2*p3*x2+m1*m2*p3*x2+cp2*m1*m2*p3*x2+c1*cp2*m1*m2*p3*x2+c2*cp2*m1*m2*p3*x2+c3*cp2*m1*m2*p3*x2+cp1*cp2*m1*m2*p3*x2+c1*cp3*m1*m2*p3*x2+c2*cp3*m1*m2*p3*x2+c3*cp3*m1*m2*p3*x2+cp1*cp2*m3*p3*x2+c1*cp1*cp2*m3*p3*x2+c2*cp1*cp2*m3*p3*x2+c3*cp1*cp2*m3*p3*x2+c1*cp2*cp3*m3*p3*x2+c1*cp2*m1*m3*p3*x2+c2*cp2*m1*m3*p3*x2+c3*cp2*m1*m3*p3*x2+cp1*cp2*m1*m3*p3*x2+cp2*cp3*m1*m3*p3*x2+cp1*cp2*cp3*m1*m3*p3*x2+c1*cp3*m2*m3*p3*x2+cp1*cp2*cp3*m2*m3*p3*x2+cp3*m1*m2*m3*p3*x2+cp3*x1*x2+c3*m2*x1*x2+cp3*m2*x1*x2+m3*x1*x2+c2*m3*x1*x2+c3*m3*x1*x2+cp2*m1*m3*x1*x2+c3*cp3*m1*m3*x1*x2+cp3*m2*m3*x1*x2+m1*m2*m3*x1*x2+c1*c2*x3+c2*cp1*x3+c1*c2*cp1*x3+c1*cp2*x3+c1*c3*cp2*x3+cp1*cp2*x3+c1*c2*cp1*cp2*x3+c3*cp1*cp2*x3+c1*c3*cp1*cp2*x3+c1*c2*cp1*cp3*x3+c2*c3*cp1*cp3*x3+c1*c3*cp2*cp3*x3+cp1*cp2*cp3*x3+c2*m1*x3+c1*c2*m1*x3+c1*cp2*m1*x3+c2*cp2*m1*x3+c1*c2*cp2*m1*x3+c3*cp2*m1*x3+c1*c3*cp2*m1*x3+cp1*cp2*m1*x3+c2*cp1*cp2*m1*x3+c1*c2*cp3*m1*x3+c2*c3*cp3*m1*x3+c2*cp1*cp3*m1*x3+c3*cp2*cp3*m1*x3+c3*cp1*cp2*cp3*m1*x3+c1*c2*m2*x3+c2*cp1*m2*x3+c3*cp1*m2*x3+c1*c2*cp2*m2*x3+c1*c3*cp2*m2*x3+cp1*cp2*m2*x3+c3*cp1*cp2*m2*x3+c1*c2*cp3*m2*x3+c3*cp1*cp3*m2*x3+c1*cp2*cp3*m2*x3+c1*cp1*cp2*cp3*m2*x3+m1*m2*x3+c2*m1*m2*x3+c2*cp1*m1*m2*x3+c3*cp1*m1*m2*x3+c1*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+c1*cp1*cp2*m1*m2*x3+c2*cp1*cp2*m1*m2*x3+c3*cp1*cp2*m1*m2*x3+cp3*m1*m2*x3+c1*cp3*m1*m2*x3+c1*cp1*cp3*m1*m2*x3+c2*cp1*cp3*m1*m2*x3+c3*cp1*cp3*m1*m2*x3+c1*cp2*cp3*m1*m2*x3+c3*cp2*cp3*m1*m2*x3+c1*cp2*m3*x3+c1*c2*cp2*m3*x3+c1*c3*cp2*m3*x3+cp1*cp2*m3*x3+c1*c2*cp1*cp2*m3*x3+c3*cp1*cp2*m3*x3+c1*c3*cp1*cp2*m3*x3+c1*c2*cp3*m3*x3+c2*cp1*cp3*m3*x3+c1*c2*cp1*cp3*m3*x3+c2*c3*cp1*cp3*m3*x3+c1*c3*cp2*cp3*m3*x3+cp1*cp2*cp3*m3*x3+cp2*m1*m3*x3+c2*cp2*m1*m3*x3+c1*c2*cp2*m1*m3*x3+c1*c3*cp2*m1*m3*x3+cp1*cp2*m1*m3*x3+c1*cp1*cp2*m1*m3*x3+c1*c2*cp3*m1*m3*x3+c2*c3*cp3*m1*m3*x3+c2*cp1*cp3*m1*m3*x3+c1*cp2*cp3*m1*m3*x3+c2*cp2*cp3*m1*m3*x3+c3*cp2*cp3*m1*m3*x3+cp1*cp2*cp3*m1*m3*x3+c3*cp1*cp2*cp3*m1*m3*x3+c1*m2*m3*x3+cp1*m2*m3*x3+c1*c2*cp2*m2*m3*x3+c1*c3*cp2*m2*m3*x3+c1*c2*cp3*m2*m3*x3+cp1*cp3*m2*m3*x3+c2*cp1*cp3*m2*m3*x3+c1*cp2*cp3*m2*m3*x3+cp1*cp2*cp3*m2*m3*x3+c1*cp1*cp2*cp3*m2*m3*x3+m1*m2*m3*x3+cp1*m1*m2*m3*x3+c2*cp2*m1*m2*m3*x3+c3*cp2*m1*m2*m3*x3+cp1*cp2*m1*m2*m3*x3+cp3*m1*m2*m3*x3+c1*cp3*m1*m2*m3*x3+c2*cp3*m1*m2*m3*x3+c3*cp3*m1*m2*m3*x3+cp1*cp3*m1*m2*m3*x3+c1*cp2*cp3*m1*m2*m3*x3+c3*cp2*cp3*m1*m2*m3*x3+cp1*cp2*cp3*m1*m2*m3*x3+c2*cp1*p1*x3+c2*m1*p1*x3+cp1*m2*p1*x3+cp1*cp2*m2*p1*x3+c2*cp1*cp2*m2*p1*x3+c3*cp1*cp2*m2*p1*x3+cp1*cp3*m2*p1*x3+c2*cp1*cp3*m2*p1*x3+c3*cp1*cp3*m2*p1*x3+cp1*cp2*cp3*m2*p1*x3+m1*m2*p1*x3+cp2*m1*m2*p1*x3+c2*cp2*m1*m2*p1*x3+c3*cp2*m1*m2*p1*x3+cp3*m1*m2*p1*x3+c2*cp3*m1*m2*p1*x3+c3*cp3*m1*m2*p1*x3+cp2*cp3*m1*m2*p1*x3+cp1*cp2*m3*p1*x3+c2*cp1*cp2*m3*p1*x3+c3*cp1*cp2*m3*p1*x3+c2*cp1*cp3*m3*p1*x3+c3*cp2*cp3*m3*p1*x3+cp2*m1*m3*p1*x3+c2*cp2*m1*m3*p1*x3+c3*cp2*m1*m3*p1*x3+c2*cp3*m1*m3*p1*x3+c3*cp3*m2*m3*p1*x3+cp1*cp3*m2*m3*p1*x3+cp1*cp2*cp3*m2*m3*p1*x3+cp3*m1*m2*m3*p1*x3+cp2*cp3*m1*m2*m3*p1*x3+c1*cp1*p2*x3+c2*cp1*p2*x3+m1*p2*x3+c1*m1*p2*x3+c2*m1*p2*x3+cp1*m1*p2*x3+cp1*cp2*m1*p2*x3+c1*cp1*cp2*m1*p2*x3+c2*cp1*cp2*m1*p2*x3+c3*cp1*cp2*m1*p2*x3+cp1*cp3*m1*p2*x3+c1*cp1*cp3*m1*p2*x3+c2*cp1*cp3*m1*p2*x3+c3*cp1*cp3*m1*p2*x3+cp1*m2*p2*x3+cp1*cp2*m2*p2*x3+c1*cp1*cp2*m2*p2*x3+c2*cp1*cp2*m2*p2*x3+c3*cp1*cp2*m2*p2*x3+cp1*cp3*m2*p2*x3+c1*cp1*cp3*m2*p2*x3+c2*cp1*cp3*m2*p2*x3+c3*cp1*cp3*m2*p2*x3+cp1*cp2*cp3*m2*p2*x3+m1*m2*p2*x3+c1*cp2*m1*m2*p2*x3+c2*cp2*m1*m2*p2*x3+c3*cp2*m1*m2*p2*x3+cp1*cp2*m1*m2*p2*x3+c1*cp3*m1*m2*p2*x3+c2*cp3*m1*m2*p2*x3+c3*cp3*m1*m2*p2*x3+cp2*cp3*m1*m2*p2*x3+cp1*cp2*cp3*m1*m2*p2*x3+cp1*cp2*m3*p2*x3+c1*cp1*cp2*m3*p2*x3+c2*cp1*cp2*m3*p2*x3+c3*cp1*cp2*m3*p2*x3+c1*cp1*cp3*m3*p2*x3+c2*cp1*cp3*m3*p2*x3+c1*cp2*m1*m3*p2*x3+c2*cp2*m1*m3*p2*x3+c3*cp2*m1*m3*p2*x3+cp1*cp2*m1*m3*p2*x3+cp3*m1*m3*p2*x3+c1*cp3*m1*m3*p2*x3+c2*cp3*m1*m3*p2*x3+cp1*cp3*m1*m3*p2*x3+cp1*cp3*m2*m3*p2*x3+cp1*cp2*cp3*m2*m3*p2*x3+cp3*m1*m2*m3*p2*x3+cp2*cp3*m1*m2*m3*p2*x3+c1*cp2*p3*x3+cp2*m1*p3*x3+c1*cp1*cp2*m1*p3*x3+c2*cp1*cp2*m1*p3*x3+c3*cp1*cp2*m1*p3*x3+c1*cp2*cp3*m1*p3*x3+c2*cp2*cp3*m1*p3*x3+c3*cp2*cp3*m1*p3*x3+cp1*cp2*cp3*m1*p3*x3+c1*m2*p3*x3+cp1*cp2*m2*p3*x3+c1*cp1*cp2*m2*p3*x3+c2*cp1*cp2*m2*p3*x3+c3*cp1*cp2*m2*p3*x3+c1*cp2*cp3*m2*p3*x3+cp1*cp2*cp3*m2*p3*x3+m1*m2*p3*x3+cp2*m1*m2*p3*x3+c1*cp2*m1*m2*p3*x3+c2*cp2*m1*m2*p3*x3+c3*cp2*m1*m2*p3*x3+cp1*cp2*m1*m2*p3*x3+c1*cp3*m1*m2*p3*x3+c2*cp3*m1*m2*p3*x3+c3*cp3*m1*m2*p3*x3+cp1*cp2*m3*p3*x3+c1*cp1*cp2*m3*p3*x3+c2*cp1*cp2*m3*p3*x3+c3*cp1*cp2*m3*p3*x3+c1*cp2*cp3*m3*p3*x3+c1*cp2*m1*m3*p3*x3+c2*cp2*m1*m3*p3*x3+c3*cp2*m1*m3*p3*x3+cp1*cp2*m1*m3*p3*x3+cp2*cp3*m1*m3*p3*x3+cp1*cp2*cp3*m1*m3*p3*x3+c1*cp3*m2*m3*p3*x3+cp1*cp2*cp3*m2*m3*p3*x3+cp3*m1*m2*m3*p3*x3+cp2*x1*x3+c2*m1*x1*x3+c3*m2*x1*x3+c2*cp2*m2*x1*x3+c3*cp2*m2*x1*x3+cp3*m2*x1*x3+c2*cp3*m2*x1*x3+c3*cp3*m2*x1*x3+cp2*cp3*m2*x1*x3+m1*m2*x1*x3+cp2*m1*m2*x1*x3+c2*cp2*m1*m2*x1*x3+c3*cp2*m1*m2*x1*x3+cp3*m1*m2*x1*x3+c2*cp3*m1*m2*x1*x3+c3*cp3*m1*m2*x1*x3+cp2*cp3*m1*m2*x1*x3+c2*m3*x1*x3+cp2*m1*m3*x1*x3+cp2*m2*m3*x1*x3+c2*cp2*m2*m3*x1*x3+c3*cp2*m2*m3*x1*x3+c2*cp3*m2*m3*x1*x3+c3*cp3*m2*m3*x1*x3+cp2*cp3*m2*m3*x1*x3+c2*cp2*m1*m2*m3*x1*x3+c3*cp2*m1*m2*m3*x1*x3+cp3*m1*m2*m3*x1*x3+c2*cp3*m1*m2*m3*x1*x3+c3*cp3*m1*m2*m3*x1*x3+cp2*cp3*m1*m2*m3*x1*x3+c2*c3*y1+c1*c2*cp3*y1+c2*c3*cp3*y1+c3*cp2*cp3*y1+c2*c3*m1*y1+c3*cp2*m1*y1+c2*cp3*m1*y1+cp2*cp3*m1*y1+c2*cp2*cp3*m1*y1+c2*c3*m2*y1+c1*c3*cp1*cp2*m2*y1+c2*cp3*m2*y1+c3*cp3*m2*y1+c1*c2*cp1*cp3*m2*y1+c1*c3*cp1*cp3*m2*y1+c1*cp2*cp3*m2*y1+c1*cp1*cp2*cp3*m2*y1+c3*m1*m2*y1+c3*cp2*m1*m2*y1+cp3*m1*m2*y1+c2*c3*cp3*m1*m2*y1+c1*cp1*cp3*m1*m2*y1+cp2*cp3*m1*m2*y1+c2*c3*cp2*cp3*m1*m2*y1+cp2*m3*y1+c2*cp2*m3*y1+c1*c2*cp1*cp2*m3*y1+c1*c3*cp1*cp2*m3*y1+c2*cp3*m3*y1+c2*cp1*cp3*m3*y1+c1*c2*cp1*cp3*m3*y1+cp2*cp3*m3*y1+c2*cp2*cp3*m3*y1+c1*c3*cp2*cp3*m3*y1+c2*c3*cp2*cp3*m3*y1+c2*m1*m3*y1+cp2*m1*m3*y1+c1*cp2*m1*m3*y1+c2*c3*cp2*m1*m3*y1+c1*cp1*cp2*m1*m3*y1+c2*c3*cp3*m1*m3*y1+c2*cp1*cp3*m1*m3*y1+c1*cp2*cp3*m1*m3*y1+c2*cp2*cp3*m1*m3*y1+c3*cp2*cp3*m1*m3*y1+c2*c3*cp2*cp3*m1*m3*y1+c1*m2*m3*y1+cp1*m2*m3*y1+c1*cp1*m2*m3*y1+c1*cp2*m2*m3*y1+c2*cp2*m2*m3*y1+c3*cp2*m2*m3*y1+cp3*m2*m3*y1+c2*cp3*m2*m3*y1+c3*cp3*m2*m3*y1+c2*cp1*cp3*m2*m3*y1+cp2*cp3*m2*m3*y1+c1*cp2*cp3*m2*m3*y1+c2*cp2*cp3*m2*m3*y1+c1*cp1*cp2*cp3*m2*m3*y1+m1*m2*m3*y1+c2*m1*m2*m3*y1+cp2*m1*m2*m3*y1+c3*cp2*m1*m2*m3*y1+c2*c3*cp2*m1*m2*m3*y1+c3*cp3*m1*m2*m3*y1+c2*c3*cp3*m1*m2*m3*y1+cp2*cp3*m1*m2*m3*y1+c3*cp2*cp3*m1*m2*m3*y1+cp1*cp2*cp3*m1*m2*m3*y1+c3*cp1*cp2*m2*p1*y1+cp1*cp3*m2*p1*y1+c2*cp1*cp3*m2*p1*y1+c3*cp1*cp3*m2*p1*y1+cp1*cp2*cp3*m2*p1*y1+c3*cp2*m1*m2*p1*y1+cp3*m1*m2*p1*y1+c2*cp3*m1*m2*p1*y1+c3*cp3*m1*m2*p1*y1+cp2*cp3*m1*m2*p1*y1+cp1*cp2*m3*p1*y1+c2*cp1*cp2*m3*p1*y1+c3*cp1*cp2*m3*p1*y1+c2*cp1*cp3*m3*p1*y1+cp2*m1*m3*p1*y1+c2*cp2*m1*m3*p1*y1+c3*cp2*m1*m3*p1*y1+c2*cp3*m1*m3*p1*y1+cp1*m2*m3*p1*y1+cp1*cp3*m2*m3*p1*y1+cp1*cp2*cp3*m2*m3*p1*y1+m1*m2*m3*p1*y1+cp3*m1*m2*m3*p1*y1+cp2*cp3*m1*m2*m3*p1*y1+cp2*cp3*p2*y1+c3*cp1*cp2*m1*p2*y1+cp1*cp3*m1*p2*y1+c1*cp1*cp3*m1*p2*y1+c2*cp1*cp3*m1*p2*y1+c3*cp1*cp3*m1*p2*y1+c3*cp1*cp2*m2*p2*y1+cp3*m2*p2*y1+cp1*cp3*m2*p2*y1+c1*cp1*cp3*m2*p2*y1+c2*cp1*cp3*m2*p2*y1+c3*cp1*cp3*m2*p2*y1+cp1*cp2*cp3*m2*p2*y1+c3*cp2*m1*m2*p2*y1+cp3*m1*m2*p2*y1+c1*cp3*m1*m2*p2*y1+c2*cp2*cp3*m1*m2*p2*y1+c3*cp2*cp3*m1*m2*p2*y1+cp1*cp2*cp3*m1*m2*p2*y1+cp1*m3*p2*y1+cp2*m3*p2*y1+cp1*cp2*m3*p2*y1+c1*cp1*cp2*m3*p2*y1+c2*cp1*cp2*m3*p2*y1+c3*cp1*cp2*m3*p2*y1+c1*cp1*cp3*m3*p2*y1+c2*cp1*cp3*m3*p2*y1+c3*cp2*cp3*m3*p2*y1+m1*m3*p2*y1+cp1*m1*m3*p2*y1+cp2*m1*m3*p2*y1+c1*cp2*m1*m3*p2*y1+cp1*cp2*m1*m3*p2*y1+cp3*m1*m3*p2*y1+c1*cp3*m1*m3*p2*y1+c2*cp3*m1*m3*p2*y1+cp1*cp3*m1*m3*p2*y1+c2*cp2*cp3*m1*m3*p2*y1+c3*cp2*cp3*m1*m3*p2*y1+m2*m3*p2*y1+cp1*m2*m3*p2*y1+c3*cp3*m2*m3*p2*y1+cp1*cp3*m2*m3*p2*y1+cp1*cp2*cp3*m2*m3*p2*y1+c2*cp2*m1*m2*m3*p2*y1+c3*cp2*m1*m2*m3*p2*y1+c2*cp3*m1*m2*m3*p2*y1+c3*cp3*m1*m2*m3*p2*y1+c2*p3*y1+c1*cp2*p3*y1+c2*cp3*p3*y1+cp2*m1*p3*y1+c1*cp1*cp2*m1*p3*y1+c2*cp1*cp2*m1*p3*y1+c3*cp1*cp2*m1*p3*y1+c1*cp2*cp3*m1*p3*y1+c2*cp2*cp3*m1*p3*y1+c3*cp2*cp3*m1*p3*y1+cp1*cp2*cp3*m1*p3*y1+m2*p3*y1+c1*m2*p3*y1+cp1*cp2*m2*p3*y1+c1*cp1*cp2*m2*p3*y1+c2*cp1*cp2*m2*p3*y1+c3*cp1*cp2*m2*p3*y1+c1*cp2*cp3*m2*p3*y1+c2*cp2*cp3*m2*p3*y1+c3*cp2*cp3*m2*p3*y1+cp1*cp2*cp3*m2*p3*y1+m1*m2*p3*y1+cp2*m1*m2*p3*y1+c1*cp2*m1*m2*p3*y1+c2*cp2*m1*m2*p3*y1+c3*cp2*m1*m2*p3*y1+cp1*cp2*m1*m2*p3*y1+c1*cp3*m1*m2*p3*y1+c2*cp3*m1*m2*p3*y1+c3*cp3*m1*m2*p3*y1+c2*m3*p3*y1+cp1*cp2*m3*p3*y1+c1*cp1*cp2*m3*p3*y1+c2*cp1*cp2*m3*p3*y1+c3*cp1*cp2*m3*p3*y1+cp2*cp3*m3*p3*y1+c1*cp2*cp3*m3*p3*y1+c2*cp2*cp3*m3*p3*y1+c3*cp2*cp3*m3*p3*y1+c1*cp2*m1*m3*p3*y1+c2*cp2*m1*m3*p3*y1+c3*cp2*m1*m3*p3*y1+cp1*cp2*m1*m3*p3*y1+cp2*cp3*m1*m3*p3*y1+cp1*cp2*cp3*m1*m3*p3*y1+m2*m3*p3*y1+cp3*m2*m3*p3*y1+c1*cp3*m2*m3*p3*y1+c2*cp3*m2*m3*p3*y1+c3*cp3*m2*m3*p3*y1+cp2*cp3*m2*m3*p3*y1+cp1*cp2*cp3*m2*m3*p3*y1+cp3*m1*m2*m3*p3*y1+c3*cp2*m2*x1*y1+cp3*m2*x1*y1+c2*cp3*m2*x1*y1+c3*cp3*m2*x1*y1+cp2*cp3*m2*x1*y1+cp2*m3*x1*y1+c2*cp2*m3*x1*y1+c3*cp2*m3*x1*y1+c2*cp3*m3*x1*y1+m2*m3*x1*y1+cp3*m2*m3*x1*y1+cp2*cp3*m2*m3*x1*y1+cp3*x2*y1+c3*m2*x2*y1+cp3*m2*x2*y1+m3*x2*y1+c2*m3*x2*y1+c3*m3*x2*y1+cp2*m3*x2*y1+c3*cp3*m3*x2*y1+cp2*m1*m3*x2*y1+c3*cp3*m1*m3*x2*y1+m2*m3*x2*y1+cp3*m2*m3*x2*y1+m1*m2*m3*x2*y1+c2*x3*y1+cp2*x3*y1+c2*m1*x3*y1+m2*x3*y1+c3*m2*x3*y1+cp2*m2*x3*y1+m1*m2*x3*y1+cp2*m1*m2*x3*y1+c2*cp2*m1*m2*x3*y1+c3*cp2*m1*m2*x3*y1+cp3*m1*m2*x3*y1+c2*cp3*m1*m2*x3*y1+c3*cp3*m1*m2*x3*y1+cp2*cp3*m1*m2*x3*y1+c2*m3*x3*y1+cp2*m3*x3*y1+cp2*m1*m3*x3*y1+cp2*m2*m3*x3*y1+cp3*m2*m3*x3*y1+c2*cp2*m1*m2*m3*x3*y1+c3*cp2*m1*m2*m3*x3*y1+cp3*m1*m2*m3*x3*y1+c2*cp3*m1*m2*m3*x3*y1+c3*cp3*m1*m2*m3*x3*y1+cp2*cp3*m1*m2*m3*x3*y1+c1*c2*cp3*y2+c3*cp1*cp2*m1*y2+c2*cp3*m1*y2+cp1*cp3*m1*y2+c1*cp1*cp3*m1*y2+c2*cp1*cp3*m1*y2+c1*cp2*cp3*m1*y2+c2*cp2*cp3*m1*y2+c3*cp2*cp3*m1*y2+cp1*cp2*cp3*m1*y2+c1*c3*cp1*cp2*m2*y2+c1*c2*cp1*cp3*m2*y2+c1*c3*cp1*cp3*m2*y2+c1*cp2*cp3*m2*y2+c1*cp1*cp2*cp3*m2*y2+c3*cp1*m1*m2*y2+c3*cp2*m1*m2*y2+c1*c3*cp2*m1*m2*y2+cp3*m1*m2*y2+c1*cp3*m1*m2*y2+c2*cp3*m1*m2*y2+c1*c2*cp3*m1*m2*y2+c3*cp3*m1*m2*y2+c1*c3*cp3*m1*m2*y2+cp1*cp3*m1*m2*y2+c1*cp1*cp3*m1*m2*y2+c1*cp2*cp3*m1*m2*y2+cp1*m3*y2+c1*cp1*m3*y2+c1*c2*cp1*cp2*m3*y2+c1*c3*cp1*cp2*m3*y2+c2*cp1*cp3*m3*y2+c1*c2*cp1*cp3*m3*y2+c1*c3*cp2*cp3*m3*y2+m1*m3*y2+c1*m1*m3*y2+cp1*m1*m3*y2+c1*cp1*m1*m3*y2+c2*cp1*m1*m3*y2+c3*cp1*m1*m3*y2+c1*cp2*m1*m3*y2+c2*cp2*m1*m3*y2+c1*c2*cp2*m1*m3*y2+c3*cp2*m1*m3*y2+c1*c3*cp2*m1*m3*y2+c1*cp1*cp2*m1*m3*y2+c2*cp3*m1*m3*y2+c1*c2*cp3*m1*m3*y2+cp1*cp3*m1*m3*y2+c2*cp1*cp3*m1*m3*y2+c3*cp1*cp3*m1*m3*y2+cp2*cp3*m1*m3*y2+c1*cp2*cp3*m1*m3*y2+c2*cp2*cp3*m1*m3*y2+c3*cp2*cp3*m1*m3*y2+cp1*cp2*cp3*m1*m3*y2+c3*cp1*cp2*cp3*m1*m3*y2+c1*m2*m3*y2+cp1*m2*m3*y2+c1*cp1*m2*m3*y2+c1*cp2*m2*m3*y2+c2*cp1*cp3*m2*m3*y2+c1*cp2*cp3*m2*m3*y2+c1*cp1*cp2*cp3*m2*m3*y2+c1*m1*m2*m3*y2+cp2*m1*m2*m3*y2+cp1*cp2*m1*m2*m3*y2+cp3*m1*m2*m3*y2+c1*cp3*m1*m2*m3*y2+c3*cp3*m1*m2*m3*y2+cp1*cp3*m1*m2*m3*y2+c1*cp2*cp3*m1*m2*m3*y2+cp1*cp2*cp3*m1*m2*m3*y2+c3*cp1*cp2*m2*p1*y2+cp1*cp3*m2*p1*y2+c2*cp1*cp3*m2*p1*y2+c3*cp1*cp3*m2*p1*y2+cp1*cp2*cp3*m2*p1*y2+c3*cp2*m1*m2*p1*y2+cp3*m1*m2*p1*y2+c2*cp3*m1*m2*p1*y2+c3*cp3*m1*m2*p1*y2+cp2*cp3*m1*m2*p1*y2+cp1*m3*p1*y2+cp1*cp2*m3*p1*y2+c2*cp1*cp2*m3*p1*y2+c3*cp1*cp2*m3*p1*y2+c2*cp1*cp3*m3*p1*y2+m1*m3*p1*y2+cp1*m1*m3*p1*y2+c2*cp2*m1*m3*p1*y2+c3*cp2*m1*m3*p1*y2+c2*cp3*m1*m3*p1*y2+cp1*m2*m3*p1*y2+cp1*cp3*m2*m3*p1*y2+cp1*cp2*cp3*m2*m3*p1*y2+cp3*m1*m2*m3*p1*y2+cp2*cp3*m1*m2*m3*p1*y2+c3*cp1*cp2*m1*p2*y2+cp1*cp3*m1*p2*y2+c1*cp1*cp3*m1*p2*y2+c2*cp1*cp3*m1*p2*y2+c3*cp1*cp3*m1*p2*y2+c3*cp1*cp2*m2*p2*y2+cp1*cp3*m2*p2*y2+c1*cp1*cp3*m2*p2*y2+c2*cp1*cp3*m2*p2*y2+c3*cp1*cp3*m2*p2*y2+cp1*cp2*cp3*m2*p2*y2+c3*cp2*m1*m2*p2*y2+c1*cp3*m1*m2*p2*y2+c2*cp3*m1*m2*p2*y2+c3*cp3*m1*m2*p2*y2+cp2*cp3*m1*m2*p2*y2+cp1*cp2*cp3*m1*m2*p2*y2+cp1*m3*p2*y2+cp1*cp2*m3*p2*y2+c1*cp1*cp2*m3*p2*y2+c2*cp1*cp2*m3*p2*y2+c3*cp1*cp2*m3*p2*y2+c1*cp1*cp3*m3*p2*y2+c2*cp1*cp3*m3*p2*y2+m1*m3*p2*y2+cp1*m1*m3*p2*y2+cp2*m1*m3*p2*y2+c1*cp2*m1*m3*p2*y2+c2*cp2*m1*m3*p2*y2+c3*cp2*m1*m3*p2*y2+cp1*cp2*m1*m3*p2*y2+cp3*m1*m3*p2*y2+c1*cp3*m1*m3*p2*y2+c2*cp3*m1*m3*p2*y2+cp1*cp3*m1*m3*p2*y2+cp1*m2*m3*p2*y2+cp1*cp3*m2*m3*p2*y2+cp1*cp2*cp3*m2*m3*p2*y2+cp3*m1*m2*m3*p2*y2+cp2*cp3*m1*m2*m3*p2*y2+c1*cp2*p3*y2+cp2*m1*p3*y2+c1*cp1*cp2*m1*p3*y2+c2*cp1*cp2*m1*p3*y2+c3*cp1*cp2*m1*p3*y2+c1*cp2*cp3*m1*p3*y2+c2*cp2*cp3*m1*p3*y2+c3*cp2*cp3*m1*p3*y2+cp1*cp2*cp3*m1*p3*y2+c1*m2*p3*y2+cp1*cp2*m2*p3*y2+c1*cp1*cp2*m2*p3*y2+c2*cp1*cp2*m2*p3*y2+c3*cp1*cp2*m2*p3*y2+c1*cp2*cp3*m2*p3*y2+cp1*cp2*cp3*m2*p3*y2+m1*m2*p3*y2+cp2*m1*m2*p3*y2+c1*cp2*m1*m2*p3*y2+c2*cp2*m1*m2*p3*y2+c3*cp2*m1*m2*p3*y2+cp1*cp2*m1*m2*p3*y2+c1*cp3*m1*m2*p3*y2+c2*cp3*m1*m2*p3*y2+c3*cp3*m1*m2*p3*y2+cp1*cp2*m3*p3*y2+c1*cp1*cp2*m3*p3*y2+c2*cp1*cp2*m3*p3*y2+c3*cp1*cp2*m3*p3*y2+c1*cp2*cp3*m3*p3*y2+c1*cp2*m1*m3*p3*y2+c2*cp2*m1*m3*p3*y2+c3*cp2*m1*m3*p3*y2+cp1*cp2*m1*m3*p3*y2+cp2*cp3*m1*m3*p3*y2+cp1*cp2*cp3*m1*m3*p3*y2+c1*cp3*m2*m3*p3*y2+cp1*cp2*cp3*m2*m3*p3*y2+cp3*m1*m2*m3*p3*y2+c3*m2*x1*y2+c3*cp2*m2*x1*y2+c2*cp3*m2*x1*y2+c3*cp3*m2*x1*y2+cp2*cp3*m2*x1*y2+c3*cp2*m1*m2*x1*y2+cp3*m1*m2*x1*y2+c2*cp3*m1*m2*x1*y2+c3*cp3*m1*m2*x1*y2+cp2*cp3*m1*m2*x1*y2+c2*m3*x1*y2+c3*m3*x1*y2+cp2*m3*x1*y2+c2*cp2*m3*x1*y2+c3*cp2*m3*x1*y2+c2*cp3*m3*x1*y2+m1*m3*x1*y2+cp2*m1*m3*x1*y2+c2*cp2*m1*m3*x1*y2+c3*cp2*m1*m3*x1*y2+c2*cp3*m1*m3*x1*y2+m2*m3*x1*y2+cp2*cp3*m2*m3*x1*y2+m1*m2*m3*x1*y2+cp3*m1*m2*m3*x1*y2+cp2*cp3*m1*m2*m3*x1*y2+c3*m2*y1*y2+cp3*m2*y1*y2+c3*cp2*m1*m2*y1*y2+cp3*m1*m2*y1*y2+c2*cp3*m1*m2*y1*y2+c3*cp3*m1*m2*y1*y2+cp2*cp3*m1*m2*y1*y2+m3*y1*y2+c2*m3*y1*y2+c3*m3*y1*y2+m1*m3*y1*y2+cp2*m1*m3*y1*y2+c2*cp2*m1*m3*y1*y2+c3*cp2*m1*m3*y1*y2+c2*cp3*m1*m3*y1*y2+cp3*m2*m3*y1*y2+m1*m2*m3*y1*y2+cp3*m1*m2*m3*y1*y2+cp2*cp3*m1*m2*m3*y1*y2+c2*cp1*y3+c1*c2*cp1*y3+c1*c2*cp2*y3+c1*c2*cp3*y3+c2*m1*y3+c1*c2*m1*y3+c2*cp1*m1*y3+c2*cp2*m1*y3+c3*cp1*cp2*m1*y3+c2*cp3*m1*y3+c3*cp2*cp3*m1*y3+c1*m2*y3+c1*c2*m2*y3+c2*cp1*m2*y3+c3*cp1*cp2*m2*y3+c1*cp1*cp3*m2*y3+c1*cp2*cp3*m2*y3+m1*m2*y3+c2*m1*m2*y3+cp1*m1*m2*y3+c2*cp1*m1*m2*y3+c3*cp1*m1*m2*y3+cp2*m1*m2*y3+c1*cp2*m1*m2*y3+c2*cp2*m1*m2*y3+c3*cp2*m1*m2*y3+c1*cp1*cp2*m1*m2*y3+c2*cp1*cp2*m1*m2*y3+c3*cp1*cp2*m1*m2*y3+cp3*m1*m2*y3+c2*cp3*m1*m2*y3+c3*cp3*m1*m2*y3+cp1*cp3*m1*m2*y3+c1*cp1*cp3*m1*m2*y3+c2*cp1*cp3*m1*m2*y3+c3*cp1*cp3*m1*m2*y3+cp1*cp2*cp3*m1*m2*y3+c1*cp2*m3*y3+cp1*cp2*m3*y3+c1*c2*cp1*cp2*m3*y3+c3*cp1*cp2*m3*y3+c1*c3*cp1*cp2*m3*y3+c2*cp1*cp3*m3*y3+c1*c2*cp1*cp3*m3*y3+c1*c3*cp2*cp3*m3*y3+cp2*m1*m3*y3+c1*c2*cp2*m1*m3*y3+c3*cp2*m1*m3*y3+c1*c3*cp2*m1*m3*y3+c1*cp1*cp2*m1*m3*y3+c2*cp3*m1*m3*y3+c1*c2*cp3*m1*m3*y3+c2*cp1*cp3*m1*m3*y3+c1*cp2*cp3*m1*m3*y3+c2*cp2*cp3*m1*m3*y3+cp1*cp2*cp3*m1*m3*y3+c3*cp1*cp2*cp3*m1*m3*y3+c1*m2*m3*y3+c1*c2*cp2*m2*m3*y3+c1*c3*cp2*m2*m3*y3+c1*cp3*m2*m3*y3+c1*c2*cp3*m2*m3*y3+c2*cp1*cp3*m2*m3*y3+cp1*cp2*cp3*m2*m3*y3+c1*cp1*cp2*cp3*m2*m3*y3+c3*cp1*cp2*cp3*m2*m3*y3+m1*m2*m3*y3+cp1*m1*m2*m3*y3+c2*cp2*m1*m2*m3*y3+c3*cp2*m1*m2*m3*y3+cp1*cp2*m1*m2*m3*y3+c1*cp3*m1*m2*m3*y3+c2*cp3*m1*m2*m3*y3+cp1*cp3*m1*m2*m3*y3+cp2*cp3*m1*m2*m3*y3+c1*cp2*cp3*m1*m2*m3*y3+cp1*cp2*cp3*m1*m2*m3*y3+c2*cp1*p1*y3+c2*m1*p1*y3+cp1*m2*p1*y3+cp1*cp2*m2*p1*y3+c2*cp1*cp2*m2*p1*y3+c3*cp1*cp2*m2*p1*y3+cp1*cp3*m2*p1*y3+c2*cp1*cp3*m2*p1*y3+c3*cp1*cp3*m2*p1*y3+cp1*cp2*cp3*m2*p1*y3+m1*m2*p1*y3+cp2*m1*m2*p1*y3+c2*cp2*m1*m2*p1*y3+c3*cp2*m1*m2*p1*y3+cp3*m1*m2*p1*y3+c2*cp3*m1*m2*p1*y3+c3*cp3*m1*m2*p1*y3+cp2*cp3*m1*m2*p1*y3+cp1*cp2*m3*p1*y3+c2*cp1*cp2*m3*p1*y3+c3*cp1*cp2*m3*p1*y3+c2*cp1*cp3*m3*p1*y3+cp2*m1*m3*p1*y3+c2*cp2*m1*m3*p1*y3+c3*cp2*m1*m3*p1*y3+c2*cp3*m1*m3*p1*y3+cp1*cp3*m2*m3*p1*y3+cp1*cp2*cp3*m2*m3*p1*y3+cp3*m1*m2*m3*p1*y3+cp2*cp3*m1*m2*m3*p1*y3+c1*cp1*p2*y3+c2*cp1*p2*y3+m1*p2*y3+c1*m1*p2*y3+c2*m1*p2*y3+cp1*m1*p2*y3+cp1*cp2*m1*p2*y3+c1*cp1*cp2*m1*p2*y3+c2*cp1*cp2*m1*p2*y3+c3*cp1*cp2*m1*p2*y3+cp1*cp3*m1*p2*y3+c1*cp1*cp3*m1*p2*y3+c2*cp1*cp3*m1*p2*y3+c3*cp1*cp3*m1*p2*y3+cp1*m2*p2*y3+cp1*cp2*m2*p2*y3+c1*cp1*cp2*m2*p2*y3+c2*cp1*cp2*m2*p2*y3+c3*cp1*cp2*m2*p2*y3+cp1*cp3*m2*p2*y3+c1*cp1*cp3*m2*p2*y3+c2*cp1*cp3*m2*p2*y3+c3*cp1*cp3*m2*p2*y3+cp1*cp2*cp3*m2*p2*y3+m1*m2*p2*y3+c1*cp2*m1*m2*p2*y3+c2*cp2*m1*m2*p2*y3+c3*cp2*m1*m2*p2*y3+cp1*cp2*m1*m2*p2*y3+c1*cp3*m1*m2*p2*y3+c2*cp3*m1*m2*p2*y3+c3*cp3*m1*m2*p2*y3+cp2*cp3*m1*m2*p2*y3+cp1*cp2*cp3*m1*m2*p2*y3+cp1*cp2*m3*p2*y3+c1*cp1*cp2*m3*p2*y3+c2*cp1*cp2*m3*p2*y3+c3*cp1*cp2*m3*p2*y3+c1*cp1*cp3*m3*p2*y3+c2*cp1*cp3*m3*p2*y3+c1*cp2*m1*m3*p2*y3+c2*cp2*m1*m3*p2*y3+c3*cp2*m1*m3*p2*y3+cp1*cp2*m1*m3*p2*y3+cp3*m1*m3*p2*y3+c1*cp3*m1*m3*p2*y3+c2*cp3*m1*m3*p2*y3+cp1*cp3*m1*m3*p2*y3+cp1*cp3*m2*m3*p2*y3+cp1*cp2*cp3*m2*m3*p2*y3+cp3*m1*m2*m3*p2*y3+cp2*cp3*m1*m2*m3*p2*y3+c1*cp2*p3*y3+cp2*m1*p3*y3+c1*cp1*cp2*m1*p3*y3+c2*cp1*cp2*m1*p3*y3+c3*cp1*cp2*m1*p3*y3+c1*cp2*cp3*m1*p3*y3+c2*cp2*cp3*m1*p3*y3+c3*cp2*cp3*m1*p3*y3+cp1*cp2*cp3*m1*p3*y3+c1*m2*p3*y3+cp1*cp2*m2*p3*y3+c1*cp1*cp2*m2*p3*y3+c2*cp1*cp2*m2*p3*y3+c3*cp1*cp2*m2*p3*y3+c1*cp2*cp3*m2*p3*y3+cp1*cp2*cp3*m2*p3*y3+m1*m2*p3*y3+cp2*m1*m2*p3*y3+c1*cp2*m1*m2*p3*y3+c2*cp2*m1*m2*p3*y3+c3*cp2*m1*m2*p3*y3+cp1*cp2*m1*m2*p3*y3+c1*cp3*m1*m2*p3*y3+c2*cp3*m1*m2*p3*y3+c3*cp3*m1*m2*p3*y3+cp1*cp2*m3*p3*y3+c1*cp1*cp2*m3*p3*y3+c2*cp1*cp2*m3*p3*y3+c3*cp1*cp2*m3*p3*y3+c1*cp2*cp3*m3*p3*y3+c1*cp2*m1*m3*p3*y3+c2*cp2*m1*m3*p3*y3+c3*cp2*m1*m3*p3*y3+cp1*cp2*m1*m3*p3*y3+cp2*cp3*m1*m3*p3*y3+cp1*cp2*cp3*m1*m3*p3*y3+c1*cp3*m2*m3*p3*y3+cp1*cp2*cp3*m2*m3*p3*y3+cp3*m1*m2*m3*p3*y3+c2*x1*y3+c2*m1*x1*y3+m2*x1*y3+c3*m2*x1*y3+cp2*m2*x1*y3+m1*m2*x1*y3+cp2*m1*m2*x1*y3+c2*m3*x1*y3+cp2*m3*x1*y3+c2*cp2*m3*x1*y3+c3*cp2*m3*x1*y3+c2*cp3*m3*x1*y3+cp2*m1*m3*x1*y3+c2*cp2*m1*m3*x1*y3+c3*cp2*m1*m3*x1*y3+c2*cp3*m1*m3*x1*y3+cp2*m2*m3*x1*y3+c2*cp2*m2*m3*x1*y3+c3*cp2*m2*m3*x1*y3+cp3*m2*m3*x1*y3+c2*cp3*m2*m3*x1*y3+c2*cp2*m1*m2*m3*x1*y3+c3*cp2*m1*m2*m3*x1*y3+c2*cp3*m1*m2*m3*x1*y3+c3*cp3*m1*m2*m3*x1*y3+c2*m1*y1*y3+c3*m2*y1*y3+m1*m2*y1*y3+cp2*m1*m2*y1*y3+c2*m3*y1*y3+cp2*m1*m3*y1*y3+c2*cp2*m1*m3*y1*y3+c3*cp2*m1*m3*y1*y3+c2*cp3*m1*m3*y1*y3+cp2*m2*m3*y1*y3+cp3*m2*m3*y1*y3+c3*cp3*m2*m3*y1*y3+c2*cp2*m1*m2*m3*y1*y3+c3*cp2*m1*m2*m3*y1*y3+c2*cp3*m1*m2*m3*y1*y3+c3*cp3*m1*m2*m3*y1*y3;
end;
#####################################################################
#Space Group No. 128 (P4/mnc)
#####################################################################
Aiin128:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin128:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin128:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Bdeltain128:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bcxyin128:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c2*cp1+c1*cp2+c2*cp1*cp2+c2*m1+c1*cp2*m1+c2*p1+cp1*cp2*p1+c1*p2+cp1*cp2*p2+c2*x1+cp2*x1+cp2*m1*x1+p2*x1+c2*y1+cp2*m1*y1+p2*y1;
end;
#####################################################################
Bcxyzin128:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c2*cp1+c1*cp2+c2*cp1*cp2+c2*m1+c2*cp2*m1+c2*x1+cp2*x1+cp2*m1*x1+c2*y1+cp2*m1*y1+cp2*z1;
end;
#####################################################################
C1GAPin128:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2, x3, y3, z3, c3, cp3, m3, p3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];p3:=g3[7];
return p1*p2*m3+c1*c3*cp1*cp2+c1*c2*cp1*cp3+c1*cp2*cp3+c1*c3*cp2*cp3+c1*c2*cp3*m1+c1*cp3*m2+c1*c2*cp3*m2+c3*cp1*cp3*m2+c1*cp2*cp3*m2+c1*c2*cp2*cp3*m2+c1*c3*cp2*cp3*m2+c3*m1*m2+c3*cp2*m1*m2+c1*c3*cp2*m1*m2+c3*cp1*cp2*m1*m2+c2*cp3*m1*m2+c2*cp1*cp3*m1*m2+c3*cp1*cp3*m1*m2+cp2*cp3*m1*m2+c1*cp2*cp3*m1*m2+c2*cp2*cp3*m1*m2+c3*cp2*cp3*m1*m2+c1*cp1*cp2*m3+c2*cp1*cp2*m3+c3*cp1*cp2*m3+c1*cp2*cp3*m3+c3*cp1*cp2*p1+c2*cp1*cp3*p1+c1*c2*cp1*cp3*p1+c1*c3*cp2*cp3*p1+c3*cp2*m1*p1+c2*cp3*m1*p1+c1*c2*cp3*m1*p1+c1*cp2*cp3*m1*p1+c1*c3*cp3*m2*p1+cp1*cp3*m2*p1+c2*cp1*cp3*m2*p1+c3*cp1*cp2*m1*m2*p1+cp3*m1*m2*p1+cp1*cp3*m1*m2*p1+c2*cp1*cp3*m1*m2*p1+c3*cp1*cp3*m1*m2*p1+c2*cp2*cp3*m1*m2*p1+c1*c3*p2+c1*c3*cp2*p2+c3*cp1*cp3*p2+c1*c3*cp1*cp3*p2+c1*cp2*cp3*p2+c1*c3*cp2*cp3*p2+c3*cp2*m1*p2+c3*cp1*cp2*m1*p2+c1*c3*cp1*cp2*m1*p2+c2*cp3*m1*p2+c1*c3*cp3*m1*p2+cp1*cp3*m1*p2+c2*cp2*cp3*m1*p2+c1*c3*cp2*cp3*m1*p2+c1*c3*m2*p2+c3*cp1*m2*p2+c1*c3*cp1*m2*p2+c3*cp1*cp2*m2*p2+c1*cp3*m2*p2+c1*c3*cp3*m2*p2+cp1*cp3*m2*p2+c2*cp1*cp3*m2*p2+c1*cp2*cp3*m2*p2+c1*c3*cp1*m1*m2*p2+c1*c3*cp2*m1*m2*p2+c1*cp3*m1*m2*p2+c2*cp3*m1*m2*p2+c1*c3*cp3*m1*m2*p2+cp1*cp3*m1*m2*p2+c1*cp1*cp3*m1*m2*p2+c2*cp1*cp3*m1*m2*p2+c3*cp1*cp3*m1*m2*p2+cp2*cp3*m1*m2*p2+c1*cp2*cp3*m1*m2*p2+c2*cp2*cp3*m1*m2*p2+c1*cp2*p3+c1*c3*cp2*p3+c1*cp1*cp2*p3+c2*cp1*cp2*p3+c1*c2*cp1*cp2*p3+c1*cp2*cp3*p3+c1*c2*m1*p3+c1*c2*cp1*m1*p3+c1*cp2*m1*p3+c1*c2*cp2*m1*p3+c3*cp1*cp2*m1*p3+c1*c3*cp1*cp2*m1*p3+c2*cp1*cp3*m1*p3+c2*cp2*cp3*m1*p3+c1*c3*cp2*cp3*m1*p3+c1*m2*p3+c1*c3*m2*p3+c1*cp1*m2*p3+c2*cp1*m2*p3+c3*cp1*m2*p3+c1*c3*cp1*m2*p3+c1*cp2*m2*p3+c1*cp1*cp2*m2*p3+c2*cp1*cp2*m2*p3+c3*cp1*cp2*m2*p3+c1*cp3*m2*p3+c1*cp2*cp3*m2*p3+c1*c3*cp1*m1*m2*p3+c1*cp2*m1*m2*p3+c1*c3*cp2*m1*m2*p3+cp1*cp2*m1*m2*p3+c2*cp1*cp2*m1*m2*p3+c1*cp3*m1*m2*p3+c1*c3*cp3*m1*m2*p3+cp1*cp3*m1*m2*p3+c1*cp1*cp3*m1*m2*p3+c2*cp1*cp3*m1*m2*p3+c3*cp1*cp3*m1*m2*p3+c1*cp2*cp3*m1*m2*p3+c2*cp2*cp3*m1*m2*p3+c3*cp2*cp3*m1*m2*p3+c1*c3*cp2*x1+c3*cp1*cp2*x1+c2*cp3*x1+cp2*cp3*x1+c2*cp2*cp3*x1+c3*cp2*cp3*x1+c3*cp1*cp2*m1*x1+c2*cp3*m1*x1+c2*cp1*cp3*m1*x1+cp2*cp3*m1*x1+c2*cp2*cp3*m1*x1+c3*m2*x1+c1*c3*m2*x1+c1*cp3*m2*x1+cp1*cp3*m2*x1+c1*cp1*cp3*m2*x1+c3*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c2*cp2*cp3*m2*x1+c3*cp2*cp3*m2*x1+cp3*m1*m2*x1+c1*cp3*m1*m2*x1+c2*cp3*m1*m2*x1+c3*cp3*m1*m2*x1+cp1*cp2*m3*x1+cp2*cp3*m3*x1+c3*cp1*cp2*p1*x1+c2*cp1*cp3*p1*x1+cp2*cp3*p1*x1+c3*cp2*cp3*p1*x1+c2*cp1*cp3*m1*p1*x1+c3*cp2*cp3*m1*p1*x1+c3*m2*p1*x1+c3*cp2*m2*p1*x1+cp3*m2*p1*x1+c1*cp3*m2*p1*x1+c2*cp3*m2*p1*x1+cp1*cp3*m2*p1*x1+c2*cp1*cp3*m2*p1*x1+c3*m1*m2*p1*x1+c3*cp2*m1*m2*p1*x1+cp3*m1*m2*p1*x1+c2*cp3*m1*m2*p1*x1+c3*cp3*m1*m2*p1*x1+cp1*cp3*m1*m2*p1*x1+cp2*cp3*m1*m2*p1*x1+c3*cp2*p2*x1+c1*c3*cp2*p2*x1+c3*cp1*cp2*p2*x1+c2*cp3*p2*x1+c3*cp3*p2*x1+c2*cp1*cp3*p2*x1+cp2*cp3*p2*x1+c1*cp2*cp3*p2*x1+c3*cp2*cp3*p2*x1+c3*cp2*m1*p2*x1+c3*cp1*cp2*m1*p2*x1+cp3*m1*p2*x1+cp1*cp3*m1*p2*x1+c2*cp1*cp3*m1*p2*x1+c1*cp2*cp3*m1*p2*x1+c3*cp2*cp3*m1*p2*x1+c1*c3*m2*p2*x1+cp3*m2*p2*x1+c2*cp3*m2*p2*x1+cp1*cp3*m2*p2*x1+c2*cp1*cp3*m2*p2*x1+c1*cp2*cp3*m2*p2*x1+c3*cp1*m1*m2*p2*x1+c3*cp2*m1*m2*p2*x1+cp3*m1*m2*p2*x1+c1*cp3*m1*m2*p2*x1+c2*cp3*m1*m2*p2*x1+c3*cp3*m1*m2*p2*x1+cp2*cp3*m1*m2*p2*x1+c2*p3*x1+c2*cp1*p3*x1+c1*c2*cp1*p3*x1+c2*cp2*p3*x1+c3*cp2*p3*x1+c1*c3*cp2*p3*x1+cp1*cp2*p3*x1+c1*cp1*cp2*p3*x1+c3*cp1*cp2*p3*x1+c2*cp3*p3*x1+c2*cp1*cp3*p3*x1+cp2*cp3*p3*x1+c1*cp2*cp3*p3*x1+c3*cp2*cp3*p3*x1+c1*c2*m1*p3*x1+c2*cp2*m1*p3*x1+c3*cp2*m1*p3*x1+c1*cp1*cp2*m1*p3*x1+c2*cp1*cp2*m1*p3*x1+c3*cp1*cp2*m1*p3*x1+c2*cp1*cp3*m1*p3*x1+cp2*cp3*m1*p3*x1+c1*cp2*cp3*m1*p3*x1+c3*cp2*cp3*m1*p3*x1+c1*m2*p3*x1+c2*m2*p3*x1+c1*c3*m2*p3*x1+c2*cp1*m2*p3*x1+c2*cp1*cp2*m2*p3*x1+c2*cp3*m2*p3*x1+c2*cp1*cp3*m2*p3*x1+cp2*cp3*m2*p3*x1+c1*cp2*cp3*m2*p3*x1+c2*cp1*m1*m2*p3*x1+c3*cp1*m1*m2*p3*x1+c2*cp2*m1*m2*p3*x1+c3*cp2*m1*m2*p3*x1+cp1*cp2*m1*m2*p3*x1+cp3*m1*m2*p3*x1+c1*cp3*m1*m2*p3*x1+c2*cp3*m1*m2*p3*x1+c3*cp3*m1*m2*p3*x1+cp2*cp3*m1*m2*p3*x1+c1*c3*x2+c3*cp1*x2+c3*cp1*cp2*x2+c1*cp3*x2+c1*c2*cp3*x2+c1*c3*cp3*x2+c3*cp1*m1*x2+c1*c3*cp2*m1*x2+c3*cp1*cp2*m1*x2+cp3*m1*x2+c1*cp3*m1*x2+c2*cp3*m1*x2+c3*cp3*m1*x2+c1*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c2*cp2*cp3*m1*x2+c3*cp2*cp3*m1*x2+c1*c3*m2*x2+c1*cp3*m2*x2+c1*cp1*cp3*m2*x2+c3*cp1*cp3*m2*x2+c1*cp2*cp3*m2*x2+c3*m1*m2*x2+c1*c3*m1*m2*x2+c3*cp2*m1*m2*x2+c1*cp3*m1*m2*x2+c2*cp3*m1*m2*x2+cp1*cp3*m1*m2*x2+c1*cp2*cp3*m1*m2*x2+cp1*cp2*m3*x2+c3*p1*x2+c3*cp1*p1*x2+c3*cp2*p1*x2+c1*c3*cp2*p1*x2+c3*cp1*cp2*p1*x2+c1*cp3*p1*x2+c2*cp3*p1*x2+c3*cp3*p1*x2+cp1*cp3*p1*x2+c2*cp1*cp3*p1*x2+cp2*cp3*p1*x2+c1*cp2*cp3*p1*x2+c3*cp2*cp3*p1*x2+c3*cp1*m1*p1*x2+cp3*m1*p1*x2+c3*cp3*m1*p1*x2+c3*cp2*cp3*m1*p1*x2+c3*m2*p1*x2+c1*c3*m2*p1*x2+c3*cp2*m2*p1*x2+cp3*m2*p1*x2+c2*cp3*m2*p1*x2+c2*cp1*cp3*m2*p1*x2+cp2*cp3*m2*p1*x2+c1*cp2*cp3*m2*p1*x2+c3*cp2*m1*m2*p1*x2+cp3*m1*m2*p1*x2+c2*cp3*m1*m2*p1*x2+c3*cp3*m1*m2*p1*x2+cp1*cp3*m1*m2*p1*x2+cp2*cp3*m1*m2*p1*x2+c3*cp1*p2*x2+c1*c3*cp2*p2*x2+c3*cp1*cp2*p2*x2+c1*cp3*p2*x2+cp1*cp3*p2*x2+c1*cp1*cp3*p2*x2+c2*cp1*cp3*p2*x2+c1*cp2*cp3*p2*x2+c3*cp1*m1*p2*x2+cp3*m1*p2*x2+c3*cp3*m1*p2*x2+c1*cp1*cp3*m1*p2*x2+c3*cp2*cp3*m1*p2*x2+c1*c3*m2*p2*x2+c2*cp1*cp3*m2*p2*x2+c1*cp2*cp3*m2*p2*x2+c3*cp2*m1*m2*p2*x2+cp3*m1*m2*p2*x2+c2*cp3*m1*m2*p2*x2+c3*cp3*m1*m2*p2*x2+cp1*cp3*m1*m2*p2*x2+cp2*cp3*m1*m2*p2*x2+c1*c2*cp1*p3*x2+c3*cp1*p3*x2+c1*cp2*p3*x2+c1*c3*cp2*p3*x2+c3*cp1*cp2*p3*x2+c1*cp3*p3*x2+cp1*cp3*p3*x2+c1*cp1*cp3*p3*x2+c2*cp1*cp3*p3*x2+c1*cp2*cp3*p3*x2+c1*c2*m1*p3*x2+c2*cp1*m1*p3*x2+c3*cp1*m1*p3*x2+c1*cp2*m1*p3*x2+c1*cp1*cp2*m1*p3*x2+c2*cp1*cp2*m1*p3*x2+cp3*m1*p3*x2+cp1*cp3*m1*p3*x2+c1*cp1*cp3*m1*p3*x2+cp2*cp3*m1*p3*x2+c3*cp2*cp3*m1*p3*x2+c1*m2*p3*x2+c1*c3*m2*p3*x2+c2*cp1*m2*p3*x2+c2*cp1*cp2*m2*p3*x2+cp1*cp3*m2*p3*x2+c2*cp1*cp3*m2*p3*x2+c1*cp2*cp3*m2*p3*x2+cp1*m1*m2*p3*x2+c2*cp1*m1*m2*p3*x2+c2*cp2*m1*m2*p3*x2+c3*cp2*m1*m2*p3*x2+c2*cp3*m1*m2*p3*x2+c3*cp3*m1*m2*p3*x2+cp1*cp3*m1*m2*p3*x2+cp2*cp3*m1*m2*p3*x2+cp1*cp3*m1*x1*x2+cp3*m1*m2*x1*x2+cp3*m1*p1*x1*x2+cp1*cp3*m1*p1*x1*x2+cp3*m1*m2*p1*x1*x2+cp3*p2*x1*x2+cp3*m1*p2*x1*x2+cp3*m1*m2*p2*x1*x2+cp2*p3*x1*x2+cp3*p3*x1*x2+c2*m1*p3*x1*x2+cp3*m1*p3*x1*x2+cp1*m1*m2*p3*x1*x2+cp2*m1*m2*p3*x1*x2+cp3*m1*m2*p3*x1*x2+c1*c2*cp1*x3+c1*c2*cp2*x3+c3*cp1*cp2*x3+c1*c2*cp3*x3+c2*m1*x3+c1*c2*m1*x3+c1*cp2*m1*x3+c1*c3*cp2*m1*x3+cp1*cp2*m1*x3+c3*cp1*cp2*m1*x3+c2*cp1*cp3*m1*x3+c1*cp2*cp3*m1*x3+c1*m2*x3+c1*c3*m2*x3+cp1*m2*x3+c1*cp1*m2*x3+c3*cp1*m2*x3+c1*cp2*m2*x3+cp1*cp2*m2*x3+c1*cp1*cp2*m2*x3+c2*cp1*cp2*m2*x3+c3*cp1*cp2*m2*x3+c3*cp1*cp3*m2*x3+c1*cp2*cp3*m2*x3+m1*m2*x3+c2*m1*m2*x3+c3*m1*m2*x3+c1*c3*m1*m2*x3+cp1*m1*m2*x3+c1*cp1*m1*m2*x3+c2*cp2*m1*m2*x3+c3*cp2*m1*m2*x3+cp3*m1*m2*x3+c1*cp3*m1*m2*x3+cp1*cp3*m1*m2*x3+cp2*cp3*m1*m2*x3+cp1*cp2*m3*x3+c2*p1*x3+c2*cp1*p1*x3+cp2*p1*x3+c1*c3*cp2*p1*x3+c2*cp1*cp2*p1*x3+c3*cp1*cp2*p1*x3+c2*cp1*cp3*p1*x3+c1*cp2*cp3*p1*x3+c3*cp2*cp3*p1*x3+cp2*m1*p1*x3+c3*cp2*m1*p1*x3+cp1*cp2*m1*p1*x3+c2*cp3*m1*p1*x3+c2*cp1*cp3*m1*p1*x3+cp2*cp3*m1*p1*x3+c3*cp2*cp3*m1*p1*x3+c1*m2*p1*x3+c3*m2*p1*x3+c1*c3*m2*p1*x3+c1*cp1*m2*p1*x3+c3*cp1*m2*p1*x3+cp2*m2*p1*x3+c3*cp1*cp2*m2*p1*x3+c3*cp3*m2*p1*x3+c2*cp1*cp3*m2*p1*x3+c3*cp2*cp3*m2*p1*x3+c1*m1*m2*p1*x3+c3*cp2*m1*m2*p1*x3+cp3*m1*m2*p1*x3+c2*cp3*m1*m2*p1*x3+c3*cp3*m1*m2*p1*x3+cp1*cp3*m1*m2*p1*x3+cp2*cp3*m1*m2*p1*x3+c2*cp1*p2*x3+c1*cp2*p2*x3+c1*c3*cp2*p2*x3+c1*cp1*cp2*p2*x3+c2*cp1*cp2*p2*x3+c3*cp1*cp2*p2*x3+c1*cp1*cp3*p2*x3+c2*cp1*cp3*p2*x3+c1*cp2*cp3*p2*x3+c1*m1*p2*x3+cp1*m1*p2*x3+c1*cp1*m1*p2*x3+c3*cp2*m1*p2*x3+cp1*cp2*m1*p2*x3+c1*cp1*cp2*m1*p2*x3+c2*cp3*m1*p2*x3+c1*cp1*cp3*m1*p2*x3+c2*cp1*cp3*m1*p2*x3+c3*cp2*cp3*m1*p2*x3+c1*c3*m2*p2*x3+c1*cp1*m2*p2*x3+c3*cp1*m2*p2*x3+c3*cp1*cp2*m2*p2*x3+c2*cp1*cp3*m2*p2*x3+c1*cp1*m1*m2*p2*x3+cp2*m1*m2*p2*x3+c1*cp2*m1*m2*p2*x3+c3*cp2*m1*m2*p2*x3+c1*cp3*m1*m2*p2*x3+c2*cp3*m1*m2*p2*x3+c3*cp3*m1*m2*p2*x3+cp1*cp3*m1*m2*p2*x3+cp2*cp3*m1*m2*p2*x3+c1*c2*cp1*p3*x3+c1*cp2*p3*x3+c1*c3*cp2*p3*x3+c3*cp1*cp2*p3*x3+c2*cp1*cp3*p3*x3+c1*c2*m1*p3*x3+c2*cp1*m1*p3*x3+c1*cp2*m1*p3*x3+c3*cp2*m1*p3*x3+c1*cp1*cp2*m1*p3*x3+c2*cp1*cp2*m1*p3*x3+cp2*cp3*m1*p3*x3+c1*cp2*cp3*m1*p3*x3+c2*cp2*cp3*m1*p3*x3+c3*cp2*cp3*m1*p3*x3+c1*m2*p3*x3+c1*c3*m2*p3*x3+cp1*m2*p3*x3+c2*cp1*m2*p3*x3+c3*cp1*m2*p3*x3+c1*cp2*m2*p3*x3+c1*cp1*cp2*m2*p3*x3+c2*cp1*cp2*m2*p3*x3+c3*cp1*cp2*m2*p3*x3+c1*cp1*cp3*m2*p3*x3+c1*cp2*cp3*m2*p3*x3+c1*cp1*m1*m2*p3*x3+cp2*m1*m2*p3*x3+c2*cp2*m1*m2*p3*x3+c3*cp2*m1*m2*p3*x3+cp1*cp2*m1*m2*p3*x3+c1*cp3*m1*m2*p3*x3+c2*cp3*m1*m2*p3*x3+c3*cp3*m1*m2*p3*x3+cp1*cp3*m1*m2*p3*x3+cp2*cp3*m1*m2*p3*x3+c2*m1*x1*x3+cp1*cp2*m1*x1*x3+cp2*cp3*m1*x1*x3+c2*m2*x1*x3+cp3*m2*x1*x3+cp1*cp3*m2*x1*x3+cp2*cp3*m2*x1*x3+cp3*m1*m2*x1*x3+cp1*cp2*m1*p1*x1*x3+cp2*cp3*m1*p1*x1*x3+cp1*cp3*m2*p1*x1*x3+cp2*cp3*m2*p1*x1*x3+cp2*m1*m2*p1*x1*x3+cp3*m1*m2*p1*x1*x3+cp2*p2*x1*x3+cp3*p2*x1*x3+c1*m1*p2*x1*x3+cp1*m1*p2*x1*x3+cp1*cp3*m1*p2*x1*x3+cp2*cp3*m1*p2*x1*x3+c1*m2*p2*x1*x3+cp1*cp3*m2*p2*x1*x3+cp2*cp3*m2*p2*x1*x3+cp1*m1*m2*p2*x1*x3+cp2*m1*m2*p2*x1*x3+cp3*m1*m2*p2*x1*x3+cp2*p3*x1*x3+c2*m1*p3*x1*x3+c2*m2*p3*x1*x3+cp1*m2*p3*x1*x3+cp2*m2*p3*x1*x3+cp1*m1*m2*p3*x1*x3+cp3*m1*m2*p3*x1*x3+cp1*m1*x2*x3+cp2*m1*x2*x3+cp1*cp3*m1*x2*x3+cp2*cp3*m1*x2*x3+cp1*cp3*m2*x2*x3+m1*m2*x2*x3+c1*m1*m2*x2*x3+cp2*m1*m2*x2*x3+cp1*m1*p1*x2*x3+cp2*m1*p1*x2*x3+cp1*cp3*m1*p1*x2*x3+cp2*cp3*m1*p1*x2*x3+c1*m2*p1*x2*x3+cp1*cp3*m2*p1*x2*x3+cp2*cp3*m2*p1*x2*x3+cp2*m1*m2*p1*x2*x3+cp1*m1*p2*x2*x3+cp2*m1*p2*x2*x3+cp1*cp3*m1*p2*x2*x3+cp2*cp3*m1*p2*x2*x3+c1*m2*p2*x2*x3+cp1*cp3*m2*p2*x2*x3+cp2*m1*m2*p2*x2*x3+cp3*m1*p3*x2*x3+cp1*m2*p3*x2*x3+c3*cp2*y1+c1*c3*cp2*y1+c2*cp3*y1+c2*cp1*cp3*y1+c1*cp2*cp3*y1+c2*cp2*cp3*y1+c3*cp2*m1*y1+c3*cp1*cp2*m1*y1+c2*cp1*cp3*m1*y1+cp2*cp3*m1*y1+c2*cp2*cp3*m1*y1+c1*c3*m2*y1+c3*cp1*m2*y1+c3*cp2*m2*y1+c3*cp3*m2*y1+c1*cp1*cp3*m2*y1+c3*cp1*cp3*m2*y1+c2*cp2*cp3*m2*y1+c3*cp2*cp3*m2*y1+c3*m1*m2*y1+c1*cp3*m1*m2*y1+c2*cp3*m1*m2*y1+c3*cp3*m1*m2*y1+cp2*cp3*m1*m2*y1+cp1*cp2*m3*y1+cp2*cp3*m3*y1+c2*cp3*m1*p1*y1+c2*cp1*cp3*m1*p1*y1+cp2*cp3*m1*p1*y1+c3*cp2*cp3*m1*p1*y1+c3*cp1*m2*p1*y1+c1*cp3*m2*p1*y1+c2*cp3*m2*p1*y1+c3*cp3*m2*p1*y1+cp1*cp3*m2*p1*y1+c2*cp1*cp3*m2*p1*y1+c3*m1*m2*p1*y1+c3*cp2*m1*m2*p1*y1+c2*cp3*m1*m2*p1*y1+c3*cp3*m1*m2*p1*y1+cp1*cp3*m1*m2*p1*y1+cp2*cp3*m1*m2*p1*y1+c3*cp2*p2*y1+c1*c3*cp2*p2*y1+c3*cp2*m1*p2*y1+c3*cp1*cp2*m1*p2*y1+c2*cp3*m1*p2*y1+cp1*cp3*m1*p2*y1+c2*cp1*cp3*m1*p2*y1+cp2*cp3*m1*p2*y1+c1*cp2*cp3*m1*p2*y1+c3*cp2*cp3*m1*p2*y1+c1*c3*m2*p2*y1+c3*cp1*m2*p2*y1+c3*cp2*m2*p2*y1+c1*cp3*m2*p2*y1+c2*cp3*m2*p2*y1+c3*cp3*m2*p2*y1+cp1*cp3*m2*p2*y1+c2*cp1*cp3*m2*p2*y1+c1*cp2*cp3*m2*p2*y1+c3*cp1*m1*m2*p2*y1+c3*cp2*m1*m2*p2*y1+c1*cp3*m1*m2*p2*y1+c2*cp3*m1*m2*p2*y1+c3*cp3*m1*m2*p2*y1+cp2*cp3*m1*m2*p2*y1+c2*p3*y1+c1*c2*cp1*p3*y1+c3*cp2*p3*y1+c1*c3*cp2*p3*y1+c1*c2*m1*p3*y1+c2*cp1*m1*p3*y1+cp2*m1*p3*y1+c1*cp2*m1*p3*y1+c2*cp2*m1*p3*y1+c3*cp2*m1*p3*y1+c1*cp1*cp2*m1*p3*y1+c2*cp1*cp2*m1*p3*y1+c3*cp1*cp2*m1*p3*y1+c2*cp3*m1*p3*y1+c2*cp1*cp3*m1*p3*y1+c1*cp2*cp3*m1*p3*y1+c3*cp2*cp3*m1*p3*y1+c1*m2*p3*y1+c2*m2*p3*y1+c1*c3*m2*p3*y1+cp1*m2*p3*y1+c2*cp1*m2*p3*y1+c3*cp1*m2*p3*y1+cp2*m2*p3*y1+c3*cp2*m2*p3*y1+c2*cp1*cp2*m2*p3*y1+c1*cp3*m2*p3*y1+c2*cp3*m2*p3*y1+c3*cp3*m2*p3*y1+c2*cp1*cp3*m2*p3*y1+cp2*cp3*m2*p3*y1+c1*cp2*cp3*m2*p3*y1+c2*cp1*m1*m2*p3*y1+c3*cp1*m1*m2*p3*y1+cp2*m1*m2*p3*y1+c2*cp2*m1*m2*p3*y1+c3*cp2*m1*m2*p3*y1+c1*cp3*m1*m2*p3*y1+c2*cp3*m1*m2*p3*y1+c3*cp3*m1*m2*p3*y1+cp2*cp3*m1*m2*p3*y1+cp3*m2*x1*y1+cp3*m2*p1*x1*y1+cp3*m2*p2*x1*y1+c2*p3*x1*y1+cp2*m1*p3*x1*y1+cp1*m2*p3*x1*y1+cp2*m2*p3*x1*y1+cp3*m2*p3*x1*y1+cp1*cp3*m1*x2*y1+cp3*m2*x2*y1+cp3*m1*m2*x2*y1+cp1*cp3*m1*p1*x2*y1+cp3*m2*p1*x2*y1+cp3*m1*m2*p1*x2*y1+cp3*m2*p2*x2*y1+cp3*m1*m2*p2*x2*y1+c2*p3*x2*y1+c2*m1*p3*x2*y1+cp1*m2*p3*x2*y1+cp2*m2*p3*x2*y1+cp3*m2*p3*x2*y1+cp1*m1*m2*p3*x2*y1+cp2*m1*m2*p3*x2*y1+cp3*m1*m2*p3*x2*y1+c2*x3*y1+c2*m1*x3*y1+cp2*m1*x3*y1+cp1*cp2*m1*x3*y1+cp2*cp3*m1*x3*y1+c2*m2*x3*y1+cp1*m2*x3*y1+cp2*m2*x3*y1+cp1*cp3*m2*x3*y1+cp2*cp3*m2*x3*y1+cp3*m1*m2*x3*y1+cp2*m1*p1*x3*y1+cp1*cp2*m1*p1*x3*y1+cp2*cp3*m1*p1*x3*y1+cp1*m2*p1*x3*y1+cp2*m2*p1*x3*y1+cp1*cp3*m2*p1*x3*y1+cp2*cp3*m2*p1*x3*y1+cp2*m1*m2*p1*x3*y1+cp3*m1*m2*p1*x3*y1+c1*p2*x3*y1+c1*m1*p2*x3*y1+cp1*m1*p2*x3*y1+cp2*m1*p2*x3*y1+cp1*cp3*m1*p2*x3*y1+cp2*cp3*m1*p2*x3*y1+c1*m2*p2*x3*y1+cp1*m2*p2*x3*y1+cp2*m2*p2*x3*y1+cp1*cp3*m2*p2*x3*y1+cp2*cp3*m2*p2*x3*y1+cp1*m1*m2*p2*x3*y1+cp2*m1*m2*p2*x3*y1+cp3*m1*m2*p2*x3*y1+c2*p3*x3*y1+c2*m1*p3*x3*y1+c2*m2*p3*x3*y1+cp1*m1*m2*p3*x3*y1+cp3*m1*m2*p3*x3*y1+c1*c3*y2+c1*c2*cp3*y2+c1*c3*cp3*y2+c2*cp1*cp3*y2+c1*cp2*cp3*y2+c3*cp1*m1*y2+c1*c3*cp2*m1*y2+c3*cp1*cp2*m1*y2+c3*cp3*m1*y2+c1*cp1*cp3*m1*y2+c1*cp2*cp3*m1*y2+c2*cp2*cp3*m1*y2+c3*cp2*cp3*m1*y2+c1*c3*m2*y2+c3*cp1*m2*y2+c1*cp1*cp3*m2*y2+c3*cp1*cp3*m2*y2+c1*cp2*cp3*m2*y2+c3*m1*m2*y2+c1*c3*m1*m2*y2+c3*cp2*m1*m2*y2+c2*cp3*m1*m2*y2+cp1*cp3*m1*m2*y2+c1*cp2*cp3*m1*m2*y2+cp1*cp2*m3*y2+c1*c3*cp2*p1*y2+c3*cp1*m1*p1*y2+cp3*m1*p1*y2+c2*cp3*m1*p1*y2+c3*cp3*m1*p1*y2+cp2*cp3*m1*p1*y2+c3*cp2*cp3*m1*p1*y2+c1*c3*m2*p1*y2+c3*cp1*m2*p1*y2+c1*cp3*m2*p1*y2+c2*cp3*m2*p1*y2+c3*cp3*m2*p1*y2+cp1*cp3*m2*p1*y2+c2*cp1*cp3*m2*p1*y2+c1*cp2*cp3*m2*p1*y2+c3*cp2*m1*m2*p1*y2+c2*cp3*m1*m2*p1*y2+c3*cp3*m1*m2*p1*y2+cp1*cp3*m1*m2*p1*y2+cp2*cp3*m1*m2*p1*y2+c1*c3*cp2*p2*y2+c1*cp1*cp3*p2*y2+c3*cp1*m1*p2*y2+cp3*m1*p2*y2+c1*cp3*m1*p2*y2+c2*cp3*m1*p2*y2+c3*cp3*m1*p2*y2+c1*cp1*cp3*m1*p2*y2+cp2*cp3*m1*p2*y2+c3*cp2*cp3*m1*p2*y2+c1*c3*m2*p2*y2+c3*cp1*m2*p2*y2+c1*cp3*m2*p2*y2+cp1*cp3*m2*p2*y2+c2*cp1*cp3*m2*p2*y2+c1*cp2*cp3*m2*p2*y2+c3*cp2*m1*m2*p2*y2+c2*cp3*m1*m2*p2*y2+c3*cp3*m1*m2*p2*y2+cp1*cp3*m1*m2*p2*y2+cp2*cp3*m1*m2*p2*y2+c1*c2*cp1*p3*y2+c1*c3*cp2*p3*y2+c1*cp1*cp2*p3*y2+c1*cp1*cp3*p3*y2+c1*c2*m1*p3*y2+cp1*m1*p3*y2+c1*cp1*m1*p3*y2+c3*cp1*m1*p3*y2+c1*cp2*m1*p3*y2+c1*cp1*cp2*m1*p3*y2+c2*cp1*cp2*m1*p3*y2+c1*cp3*m1*p3*y2+c2*cp3*m1*p3*y2+cp1*cp3*m1*p3*y2+c1*cp1*cp3*m1*p3*y2+c3*cp2*cp3*m1*p3*y2+c1*m2*p3*y2+c1*c3*m2*p3*y2+cp1*m2*p3*y2+c2*cp1*m2*p3*y2+c3*cp1*m2*p3*y2+c2*cp1*cp2*m2*p3*y2+c1*cp3*m2*p3*y2+c2*cp1*cp3*m2*p3*y2+c1*cp2*cp3*m2*p3*y2+cp1*m1*m2*p3*y2+c2*cp1*m1*m2*p3*y2+cp2*m1*m2*p3*y2+c2*cp2*m1*m2*p3*y2+c3*cp2*m1*m2*p3*y2+cp1*cp2*m1*m2*p3*y2+cp3*m1*m2*p3*y2+c2*cp3*m1*m2*p3*y2+c3*cp3*m1*m2*p3*y2+cp1*cp3*m1*m2*p3*y2+cp2*cp3*m1*m2*p3*y2+cp1*cp3*m1*x1*y2+cp3*m2*x1*y2+cp3*m1*m2*x1*y2+cp3*m1*p1*x1*y2+cp1*cp3*m1*p1*x1*y2+cp3*m2*p1*x1*y2+cp3*m1*m2*p1*x1*y2+cp3*p2*x1*y2+cp3*m1*p2*x1*y2+cp3*m2*p2*x1*y2+cp3*m1*m2*p2*x1*y2+c2*p3*x1*y2+cp2*p3*x1*y2+cp3*p3*x1*y2+c2*m1*p3*x1*y2+cp2*m1*p3*x1*y2+cp3*m1*p3*x1*y2+cp1*m2*p3*x1*y2+cp2*m2*p3*x1*y2+cp3*m2*p3*x1*y2+cp1*m1*m2*p3*x1*y2+cp2*m1*m2*p3*x1*y2+cp3*m1*m2*p3*x1*y2+cp3*m1*p1*x2*y2+cp3*m2*p1*x2*y2+cp3*m1*p2*x2*y2+cp3*m1*p3*x2*y2+cp1*m2*p3*x2*y2+c1*m1*x3*y2+cp1*m1*x3*y2+cp1*cp3*m1*x3*y2+cp2*cp3*m1*x3*y2+cp1*m2*x3*y2+cp1*cp3*m2*x3*y2+c1*m1*m2*x3*y2+cp2*m1*m2*x3*y2+c1*p1*x3*y2+cp1*m1*p1*x3*y2+cp1*cp3*m1*p1*x3*y2+cp2*cp3*m1*p1*x3*y2+c1*m2*p1*x3*y2+cp1*m2*p1*x3*y2+cp2*m2*p1*x3*y2+cp1*cp3*m2*p1*x3*y2+cp2*cp3*m2*p1*x3*y2+cp2*m1*m2*p1*x3*y2+c1*p2*x3*y2+cp1*m1*p2*x3*y2+cp1*cp3*m1*p2*x3*y2+cp2*cp3*m1*p2*x3*y2+c1*m2*p2*x3*y2+cp1*m2*p2*x3*y2+cp1*cp3*m2*p2*x3*y2+cp2*m1*m2*p2*x3*y2+cp3*m1*p3*x3*y2+cp1*cp3*m1*y1*y2+cp3*m1*m2*y1*y2+cp1*cp3*m1*p1*y1*y2+cp3*m1*m2*p1*y1*y2+cp3*m1*m2*p2*y1*y2+c2*m1*p3*y1*y2+cp2*m1*p3*y1*y2+cp1*m1*m2*p3*y1*y2+cp2*m1*m2*p3*y1*y2+cp3*m1*m2*p3*y1*y2+c1*c2*cp1*y3+c1*c2*cp2*y3+c1*cp1*cp2*y3+c1*c2*cp3*y3+c2*cp1*cp3*y3+c1*cp2*cp3*y3+c1*c2*m1*y3+c1*cp2*m1*y3+c1*c3*cp2*m1*y3+c3*cp1*cp2*m1*y3+c2*cp1*cp3*m1*y3+c1*c3*m2*y3+c2*cp1*m2*y3+cp1*cp2*m2*y3+c1*cp1*cp2*m2*y3+c2*cp1*cp2*m2*y3+c3*cp1*cp2*m2*y3+c3*cp1*cp3*m2*y3+c1*cp2*cp3*m2*y3+c1*m1*m2*y3+c3*m1*m2*y3+c1*c3*m1*m2*y3+cp1*m1*m2*y3+c1*cp1*m1*m2*y3+c2*cp2*m1*m2*y3+c3*cp2*m1*m2*y3+cp1*cp2*m1*m2*y3+cp3*m1*m2*y3+cp1*cp3*m1*m2*y3+cp2*cp3*m1*m2*y3+cp1*cp2*m3*y3+c2*cp1*p1*y3+cp2*p1*y3+c1*c3*cp2*p1*y3+c2*m1*p1*y3+c2*cp1*m1*p1*y3+cp2*m1*p1*y3+c2*cp2*m1*p1*y3+c3*cp2*m1*p1*y3+cp1*cp2*m1*p1*y3+c2*cp1*cp3*m1*p1*y3+c3*cp2*cp3*m1*p1*y3+c1*m2*p1*y3+c1*c3*m2*p1*y3+c1*cp1*m2*p1*y3+c3*cp2*m2*p1*y3+c3*cp1*cp2*m2*p1*y3+c1*cp3*m2*p1*y3+cp1*cp3*m2*p1*y3+c2*cp1*cp3*m2*p1*y3+c3*cp2*cp3*m2*p1*y3+m1*m2*p1*y3+c1*m1*m2*p1*y3+c3*cp2*m1*m2*p1*y3+cp3*m1*m2*p1*y3+c2*cp3*m1*m2*p1*y3+c3*cp3*m1*m2*p1*y3+cp1*cp3*m1*m2*p1*y3+cp2*cp3*m1*m2*p1*y3+c2*cp1*p2*y3+c1*c3*cp2*p2*y3+c1*cp1*cp2*p2*y3+c1*cp1*cp3*p2*y3+c2*m1*p2*y3+cp1*m1*p2*y3+c2*cp1*m1*p2*y3+c1*cp2*m1*p2*y3+c2*cp2*m1*p2*y3+c3*cp2*m1*p2*y3+cp1*cp2*m1*p2*y3+c1*cp1*cp2*m1*p2*y3+c1*cp3*m1*p2*y3+c1*cp1*cp3*m1*p2*y3+c2*cp1*cp3*m1*p2*y3+c3*cp2*cp3*m1*p2*y3+c1*m2*p2*y3+c1*c3*m2*p2*y3+c1*cp1*m2*p2*y3+c3*cp1*cp2*m2*p2*y3+c1*cp3*m2*p2*y3+cp1*cp3*m2*p2*y3+c2*cp1*cp3*m2*p2*y3+c1*cp1*m1*m2*p2*y3+c1*cp2*m1*m2*p2*y3+c3*cp2*m1*m2*p2*y3+cp3*m1*m2*p2*y3+c1*cp3*m1*m2*p2*y3+c2*cp3*m1*m2*p2*y3+c3*cp3*m1*m2*p2*y3+cp1*cp3*m1*m2*p2*y3+cp2*cp3*m1*m2*p2*y3+c1*c2*cp1*p3*y3+c1*c3*cp2*p3*y3+c1*cp1*cp2*p3*y3+c1*cp2*cp3*p3*y3+c1*c2*m1*p3*y3+c2*cp1*m1*p3*y3+c2*cp2*m1*p3*y3+c3*cp2*m1*p3*y3+cp1*cp2*m1*p3*y3+c1*cp1*cp2*m1*p3*y3+c2*cp1*cp2*m1*p3*y3+c1*cp2*cp3*m1*p3*y3+c2*cp2*cp3*m1*p3*y3+c3*cp2*cp3*m1*p3*y3+c1*m2*p3*y3+c1*c3*m2*p3*y3+cp1*m2*p3*y3+c1*cp1*m2*p3*y3+c1*cp1*cp2*m2*p3*y3+c2*cp1*cp2*m2*p3*y3+c3*cp1*cp2*m2*p3*y3+cp1*cp3*m2*p3*y3+c1*cp1*cp3*m2*p3*y3+c1*cp2*cp3*m2*p3*y3+c1*cp1*m1*m2*p3*y3+cp2*m1*m2*p3*y3+c2*cp2*m1*m2*p3*y3+c3*cp2*m1*m2*p3*y3+cp1*cp2*m1*m2*p3*y3+cp3*m1*m2*p3*y3+c1*cp3*m1*m2*p3*y3+c2*cp3*m1*m2*p3*y3+c3*cp3*m1*m2*p3*y3+cp1*cp3*m1*m2*p3*y3+c2*x1*y3+c2*m1*x1*y3+cp1*cp2*m1*x1*y3+cp2*cp3*m1*x1*y3+c2*m2*x1*y3+cp1*cp3*m2*x1*y3+cp2*cp3*m2*x1*y3+cp3*m1*m2*x1*y3+cp2*m1*p1*x1*y3+cp1*cp2*m1*p1*x1*y3+cp2*cp3*m1*p1*x1*y3+cp3*m2*p1*x1*y3+cp1*cp3*m2*p1*x1*y3+cp2*cp3*m2*p1*x1*y3+cp2*m1*m2*p1*x1*y3+cp3*m1*m2*p1*x1*y3+c1*p2*x1*y3+cp2*p2*x1*y3+cp3*p2*x1*y3+c1*m1*p2*x1*y3+cp2*m1*p2*x1*y3+cp1*cp3*m1*p2*x1*y3+cp2*cp3*m1*p2*x1*y3+c1*m2*p2*x1*y3+cp3*m2*p2*x1*y3+cp1*cp3*m2*p2*x1*y3+cp2*cp3*m2*p2*x1*y3+cp1*m1*m2*p2*x1*y3+cp2*m1*m2*p2*x1*y3+cp3*m1*m2*p2*x1*y3+c2*p3*x1*y3+cp2*p3*x1*y3+c2*m1*p3*x1*y3+cp2*m1*p3*x1*y3+c2*m2*p3*x1*y3+cp3*m2*p3*x1*y3+cp1*m1*m2*p3*x1*y3+cp3*m1*m2*p3*x1*y3+m1*x2*y3+c1*m1*x2*y3+cp2*m1*x2*y3+cp1*cp3*m1*x2*y3+cp2*cp3*m1*x2*y3+cp1*cp3*m2*x2*y3+m1*m2*x2*y3+c1*m1*m2*x2*y3+cp2*m1*m2*x2*y3+c1*p1*x2*y3+cp2*m1*p1*x2*y3+cp3*m1*p1*x2*y3+cp1*cp3*m1*p1*x2*y3+cp2*cp3*m1*p1*x2*y3+c1*m2*p1*x2*y3+cp3*m2*p1*x2*y3+cp1*cp3*m2*p1*x2*y3+cp2*cp3*m2*p1*x2*y3+cp2*m1*m2*p1*x2*y3+c1*p2*x2*y3+cp2*m1*p2*x2*y3+cp3*m1*p2*x2*y3+cp1*cp3*m1*p2*x2*y3+cp2*cp3*m1*p2*x2*y3+c1*m2*p2*x2*y3+cp1*cp3*m2*p2*x2*y3+cp2*m1*m2*p2*x2*y3+c2*m1*x3*y3+c1*m2*x3*y3+cp1*m2*x3*y3+m1*m2*x3*y3+cp2*m1*m2*x3*y3+c2*p1*x3*y3+cp1*m2*p1*x3*y3+cp2*m2*p1*x3*y3+cp1*m2*p2*x3*y3+cp1*m2*p3*x3*y3+c2*m1*y1*y3+cp2*m1*y1*y3+cp1*cp2*m1*y1*y3+cp2*cp3*m1*y1*y3+c2*m2*y1*y3+cp1*m2*y1*y3+cp2*m2*y1*y3+cp3*m2*y1*y3+cp1*cp3*m2*y1*y3+cp2*cp3*m2*y1*y3+cp3*m1*m2*y1*y3+cp1*cp2*m1*p1*y1*y3+cp2*cp3*m1*p1*y1*y3+cp1*m2*p1*y1*y3+cp2*m2*p1*y1*y3+cp3*m2*p1*y1*y3+cp1*cp3*m2*p1*y1*y3+cp2*cp3*m2*p1*y1*y3+cp2*m1*m2*p1*y1*y3+cp3*m1*m2*p1*y1*y3+c1*m1*p2*y1*y3+cp1*cp3*m1*p2*y1*y3+cp2*cp3*m1*p2*y1*y3+c1*m2*p2*y1*y3+cp1*m2*p2*y1*y3+cp2*m2*p2*y1*y3+cp3*m2*p2*y1*y3+cp1*cp3*m2*p2*y1*y3+cp2*cp3*m2*p2*y1*y3+cp1*m1*m2*p2*y1*y3+cp2*m1*m2*p2*y1*y3+cp3*m1*m2*p2*y1*y3+c2*m1*p3*y1*y3+cp2*m1*p3*y1*y3+c2*m2*p3*y1*y3+cp1*m2*p3*y1*y3+cp2*m2*p3*y1*y3+cp3*m2*p3*y1*y3+cp1*m1*m2*p3*y1*y3+cp3*m1*m2*p3*y1*y3+cp1*cp3*m1*y2*y3+cp2*cp3*m1*y2*y3+cp1*m2*y2*y3+cp1*cp3*m2*y2*y3+c1*m1*m2*y2*y3+cp2*m1*m2*y2*y3+cp3*m1*p1*y2*y3+cp1*cp3*m1*p1*y2*y3+cp2*cp3*m1*p1*y2*y3+c1*m2*p1*y2*y3+cp1*m2*p1*y2*y3+cp2*m2*p1*y2*y3+cp3*m2*p1*y2*y3+cp1*cp3*m2*p1*y2*y3+cp2*cp3*m2*p1*y2*y3+cp2*m1*m2*p1*y2*y3+cp3*m1*p2*y2*y3+cp1*cp3*m1*p2*y2*y3+cp2*cp3*m1*p2*y2*y3+c1*m2*p2*y2*y3+cp1*m2*p2*y2*y3+cp1*cp3*m2*p2*y2*y3+cp2*m1*m2*p2*y2*y3+cp1*m2*p3*y2*y3+c2*cp3*z1+c2*cp1*cp3*z1+c1*cp2*cp3*z1+c2*cp2*cp3*z1+c3*cp2*m1*z1+c3*cp1*cp2*m1*z1+c3*cp2*cp3*m1*z1+c3*m2*z1+c3*cp1*m2*z1+c3*cp2*m2*z1+c3*cp1*cp2*m2*z1+c3*cp3*m2*z1+cp1*cp3*m2*z1+c1*cp1*cp3*m2*z1+cp2*cp3*m2*z1+c1*cp2*cp3*m2*z1+c2*cp2*cp3*m2*z1+c3*cp2*m1*m2*z1+c1*cp3*m1*m2*z1+c3*cp3*m1*m2*z1+cp2*cp3*m1*m2*z1+c3*cp1*cp2*p1*z1+c2*cp1*cp3*p1*z1+cp2*cp3*p1*z1+c3*cp2*cp3*p1*z1+c2*cp3*m1*p1*z1+cp2*cp3*m1*p1*z1+c3*m2*p1*z1+c3*cp1*m2*p1*z1+c3*cp2*m2*p1*z1+c3*cp3*m2*p1*z1+cp3*m1*m2*p1*z1+c3*cp1*cp2*p2*z1+c2*cp3*p2*z1+c3*cp3*p2*z1+c2*cp1*cp3*p2*z1+cp2*cp3*p2*z1+c1*cp2*cp3*p2*z1+c3*cp2*cp3*p2*z1+cp3*m1*p2*z1+c2*cp3*m1*p2*z1+cp2*cp3*m1*p2*z1+c3*cp1*m2*p2*z1+c3*cp2*m2*p2*z1+c1*cp3*m2*p2*z1+c3*cp3*m2*p2*z1+cp3*m1*m2*p2*z1+c2*p3*z1+c2*cp1*p3*z1+c2*cp2*p3*z1+cp1*cp2*p3*z1+c1*cp1*cp2*p3*z1+c3*cp1*cp2*p3*z1+c2*cp3*p3*z1+c2*cp1*cp3*p3*z1+cp2*cp3*p3*z1+c1*cp2*cp3*p3*z1+c3*cp2*cp3*p3*z1+c2*cp1*m1*p3*z1+c1*cp2*m1*p3*z1+c2*cp3*m1*p3*z1+cp2*cp3*m1*p3*z1+c3*cp1*m2*p3*z1+c3*cp2*m2*p3*z1+cp3*m2*p3*z1+c1*cp3*m2*p3*z1+c3*cp3*m2*p3*z1+cp2*m1*m2*p3*z1+cp1*cp2*m1*m2*p3*z1+cp3*m1*m2*p3*z1+c3*m2*x1*z1+cp3*m2*x1*z1+cp3*m1*m2*x1*z1+cp3*m2*p1*x1*z1+cp3*m2*p2*x1*z1+c2*p3*x1*z1+cp2*m1*p3*x1*z1+cp1*m2*p3*x1*z1+cp2*m2*p3*x1*z1+cp3*m2*p3*x1*z1+cp3*m1*x2*z1+c3*m2*x2*z1+cp3*m2*x2*z1+cp3*m1*p1*x2*z1+cp3*m2*p1*x2*z1+cp3*p2*x2*z1+cp3*m1*p2*x2*z1+cp3*m2*p2*x2*z1+c2*p3*x2*z1+cp2*p3*x2*z1+cp3*p3*x2*z1+cp3*m1*p3*x2*z1+cp1*m2*p3*x2*z1+cp2*m2*p3*x2*z1+cp3*m2*p3*x2*z1+cp2*m1*x3*z1+m2*x3*z1+c1*m2*x3*z1+c2*m2*x3*z1+c3*m2*x3*z1+cp1*m2*x3*z1+cp2*m2*x3*z1+cp3*m2*x3*z1+m1*m2*x3*z1+cp2*m1*m2*x3*z1+cp3*m1*m2*x3*z1+cp2*m1*p1*x3*z1+cp1*m2*p1*x3*z1+cp2*m2*p1*x3*z1+c1*p2*x3*z1+cp2*p2*x3*z1+cp3*p2*x3*z1+cp2*m1*p2*x3*z1+cp1*m2*p2*x3*z1+cp2*m2*p2*x3*z1+c2*p3*x3*z1+cp2*p3*x3*z1+cp1*m2*p3*x3*z1+cp2*m2*p3*x3*z1+c3*m2*y1*z1+cp3*m1*m2*y1*z1+cp3*m2*p1*y1*z1+cp3*m2*p2*y1*z1+c2*p3*y1*z1+cp2*m1*p3*y1*z1+cp1*m2*p3*y1*z1+cp2*m2*p3*y1*z1+cp3*m2*p3*y1*z1+c3*m2*y2*z1+cp3*m1*p1*y2*z1+cp3*m2*p1*y2*z1+cp3*p2*y2*z1+cp3*m1*p2*y2*z1+cp3*m2*p2*y2*z1+c2*p3*y2*z1+cp2*p3*y2*z1+cp3*p3*y2*z1+cp3*m1*p3*y2*z1+cp1*m2*p3*y2*z1+cp2*m2*p3*y2*z1+cp3*m2*p3*y2*z1+cp2*m1*y3*z1+c1*m2*y3*z1+c2*m2*y3*z1+c3*m2*y3*z1+cp1*m2*y3*z1+cp2*m2*y3*z1+cp3*m2*y3*z1+m1*m2*y3*z1+cp2*m1*m2*y3*z1+cp3*m1*m2*y3*z1+cp2*m1*p1*y3*z1+cp1*m2*p1*y3*z1+cp2*m2*p1*y3*z1+c1*p2*y3*z1+cp2*p2*y3*z1+cp3*p2*y3*z1+cp2*m1*p2*y3*z1+cp1*m2*p2*y3*z1+cp2*m2*p2*y3*z1+c2*p3*y3*z1+cp2*p3*y3*z1+cp1*m2*p3*y3*z1+cp2*m2*p3*y3*z1+c1*c3*cp1*z2+c1*c3*cp2*z2+c2*cp1*cp3*z2+c1*cp2*cp3*z2+c1*c3*m1*z2+c3*cp1*cp2*m1*z2+cp1*cp3*m1*z2+c1*cp2*cp3*m1*z2+c1*c3*m2*z2+c3*cp1*m2*z2+c3*cp1*cp2*m2*z2+cp1*cp3*m2*z2+c1*cp3*m1*m2*z2+cp2*cp3*m1*m2*z2+c3*p1*z2+c3*cp1*p1*z2+c3*cp2*p1*z2+c3*cp1*cp2*p1*z2+c1*cp3*p1*z2+c2*cp3*p1*z2+c3*cp3*p1*z2+cp1*cp3*p1*z2+c2*cp1*cp3*p1*z2+cp2*cp3*p1*z2+c1*cp2*cp3*p1*z2+c3*cp2*cp3*p1*z2+cp3*m1*p1*z2+c2*cp3*m1*p1*z2+cp2*cp3*m1*p1*z2+c3*m2*p1*z2+c3*cp1*m2*p1*z2+c3*cp2*m2*p1*z2+c1*cp3*m2*p1*z2+c3*cp3*m2*p1*z2+cp1*cp3*m2*p1*z2+cp2*cp3*m2*p1*z2+cp3*m1*m2*p1*z2+c3*cp1*p2*z2+c3*cp1*cp2*p2*z2+c1*cp3*p2*z2+cp1*cp3*p2*z2+c2*cp1*cp3*p2*z2+c1*cp2*cp3*p2*z2+cp3*m1*p2*z2+c1*cp3*m1*p2*z2+c2*cp3*m1*p2*z2+cp2*cp3*m1*p2*z2+c3*cp1*m2*p2*z2+c1*cp3*m2*p2*z2+cp1*cp3*m2*p2*z2+cp3*m1*m2*p2*z2+c3*cp1*p3*z2+c1*cp2*p3*z2+c1*cp1*cp2*p3*z2+c3*cp1*cp2*p3*z2+c1*cp3*p3*z2+cp1*cp3*p3*z2+c2*cp1*cp3*p3*z2+c1*cp2*cp3*p3*z2+cp1*m1*p3*z2+c1*cp1*m1*p3*z2+c2*cp1*m1*p3*z2+c1*cp3*m1*p3*z2+c2*cp3*m1*p3*z2+cp2*cp3*m1*p3*z2+c3*cp1*m2*p3*z2+c1*cp3*m2*p3*z2+cp1*cp3*m2*p3*z2+cp2*m1*m2*p3*z2+cp1*cp2*m1*m2*p3*z2+cp3*m1*m2*p3*z2+c3*m1*x1*z2+c3*m2*x1*z2+cp3*m2*x1*z2+cp3*m2*p1*x1*z2+cp3*m2*p2*x1*z2+c2*p3*x1*z2+cp2*m1*p3*x1*z2+cp1*m2*p3*x1*z2+cp2*m2*p3*x1*z2+cp3*m2*p3*x1*z2+cp3*m1*p1*x2*z2+cp3*m2*p1*x2*z2+cp3*m1*p2*x2*z2+cp3*m1*p3*x2*z2+cp1*m2*p3*x2*z2+c1*x3*z2+c1*m1*x3*z2+cp3*m1*x3*z2+cp1*m2*x3*z2+m1*m2*x3*z2+c1*p1*x3*z2+cp2*m1*p1*x3*z2+cp1*m2*p1*x3*z2+cp2*m2*p1*x3*z2+c1*p2*x3*z2+cp2*m1*p2*x3*z2+cp1*m2*p2*x3*z2+cp1*m2*p3*x3*z2+c3*y1*z2+c3*m1*y1*z2+c3*m2*y1*z2+cp3*m2*y1*z2+cp3*m2*p1*y1*z2+cp3*m2*p2*y1*z2+c2*p3*y1*z2+cp2*m1*p3*y1*z2+cp1*m2*p3*y1*z2+cp2*m2*p3*y1*z2+cp3*m2*p3*y1*z2+cp3*m1*p1*y2*z2+cp3*m2*p1*y2*z2+cp3*m1*p2*y2*z2+cp3*m1*p3*y2*z2+cp1*m2*p3*y2*z2+c1*m1*y3*z2+cp2*m1*y3*z2+cp1*m2*y3*z2+m1*m2*y3*z2+c1*p1*y3*z2+cp2*m1*p1*y3*z2+cp1*m2*p1*y3*z2+cp2*m2*p1*y3*z2+c1*p2*y3*z2+cp2*m1*p2*y3*z2+cp1*m2*p2*y3*z2+cp1*m2*p3*y3*z2+c3*z1*z2+cp3*m1*z1*z2+cp3*m2*z1*z2+c1*cp1*cp2*z3+c3*cp1*cp2*z3+c2*cp1*cp3*z3+c1*cp2*cp3*z3+cp1*cp2*m1*z3+c1*cp2*cp3*m1*z3+c1*cp1*m2*z3+c2*cp1*m2*z3+c3*cp1*m2*z3+c1*cp2*m2*z3+c1*m1*m2*z3+c2*m1*m2*z3+cp2*m1*m2*z3+cp1*cp2*m1*m2*z3+c1*cp3*m1*m2*z3+c2*cp1*cp2*p1*z3+c3*cp1*cp2*p1*z3+c2*cp1*cp3*p1*z3+c1*cp2*cp3*p1*z3+c3*cp2*cp3*p1*z3+c2*m1*p1*z3+c2*cp1*m1*p1*z3+c2*cp2*m1*p1*z3+c2*cp3*m1*p1*z3+cp2*cp3*m1*p1*z3+c3*m2*p1*z3+cp1*m2*p1*z3+c3*cp1*m2*p1*z3+c3*cp2*m2*p1*z3+c1*cp3*m2*p1*z3+c3*cp3*m2*p1*z3+cp1*cp3*m2*p1*z3+m1*m2*p1*z3+c1*cp2*p2*z3+c2*cp1*cp2*p2*z3+c3*cp1*cp2*p2*z3+c2*cp1*cp3*p2*z3+c1*cp2*cp3*p2*z3+c1*m1*p2*z3+c2*m1*p2*z3+c1*cp1*m1*p2*z3+c2*cp1*m1*p2*z3+c1*cp2*m1*p2*z3+c2*cp2*m1*p2*z3+c1*cp3*m1*p2*z3+c2*cp3*m1*p2*z3+c1*m2*p2*z3+cp1*m2*p2*z3+c3*cp1*m2*p2*z3+c1*cp3*m2*p2*z3+cp1*cp3*m2*p2*z3+cp2*m1*m2*p2*z3+cp3*m1*m2*p2*z3+c1*cp2*p3*z3+c1*cp1*cp2*p3*z3+c3*cp1*cp2*p3*z3+c2*cp1*cp3*p3*z3+c1*cp2*cp3*p3*z3+c1*cp2*m1*p3*z3+c2*cp2*m1*p3*z3+cp1*cp2*m1*p3*z3+cp2*cp3*m1*p3*z3+cp1*m2*p3*z3+c1*cp1*m2*p3*z3+c2*cp1*m2*p3*z3+c3*cp1*m2*p3*z3+c1*cp2*m2*p3*z3+cp1*cp3*m2*p3*z3+cp3*m1*m2*p3*z3+cp2*cp3*m1*m2*p3*z3+c2*x1*z3+cp3*m2*x1*z3+cp2*m1*p1*x1*z3+cp3*m2*p1*x1*z3+c1*p2*x1*z3+cp1*m1*p2*x1*z3+cp2*m1*p2*x1*z3+cp3*m2*p2*x1*z3+c2*p3*x1*z3+cp2*m1*p3*x1*z3+cp1*m2*p3*x1*z3+cp2*m2*p3*x1*z3+cp3*m2*p3*x1*z3+m1*x2*z3+c1*m1*x2*z3+cp1*m1*x2*z3+c1*p1*x2*z3+cp1*m1*p1*x2*z3+cp3*m1*p1*x2*z3+cp3*m2*p1*x2*z3+c1*p2*x2*z3+cp1*m1*p2*x2*z3+cp3*m1*p2*x2*z3+cp3*m1*p3*x2*z3+cp1*m2*p3*x2*z3+c2*m1*x3*z3+c1*m2*x3*z3+cp1*m2*x3*z3+m1*m2*x3*z3+cp2*m1*m2*x3*z3+c2*p1*x3*z3+cp1*m2*p1*x3*z3+cp2*m2*p1*x3*z3+cp1*m2*p2*x3*z3+cp1*m2*p3*x3*z3+c2*y1*z3+cp3*m2*y1*z3+cp2*m1*p1*y1*z3+cp3*m2*p1*y1*z3+c1*p2*y1*z3+cp1*m1*p2*y1*z3+cp2*m1*p2*y1*z3+cp3*m2*p2*y1*z3+c2*p3*y1*z3+cp2*m1*p3*y1*z3+cp1*m2*p3*y1*z3+cp2*m2*p3*y1*z3+cp3*m2*p3*y1*z3+c1*m1*y2*z3+cp1*m1*y2*z3+c1*p1*y2*z3+cp1*m1*p1*y2*z3+cp3*m1*p1*y2*z3+cp3*m2*p1*y2*z3+c1*p2*y2*z3+cp1*m1*p2*y2*z3+cp3*m1*p2*y2*z3+cp3*m1*p3*y2*z3+cp1*m2*p3*y2*z3+c2*m1*y3*z3+c1*m2*y3*z3+cp1*m2*y3*z3+m1*m2*y3*z3+cp2*m1*m2*y3*z3+c2*p1*y3*z3+cp1*m2*p1*y3*z3+cp2*m2*p1*y3*z3+cp1*m2*p2*y3*z3+cp1*m2*p3*y3*z3+m2*z1*z3+c1*z2*z3+cp2*m1*z2*z3+cp3*m1*z2*z3;
end;
#####################################################################
C2GAPin128:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2, x3, y3, z3, c3, cp3, m3, p3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];p3:=g3[7];
return c2*cp1*cp3+c1*c2*cp1*cp3+c1*cp2*cp3+c1*c3*cp2*cp3+c1*c3*cp1*cp2*m1+c1*c2*cp1*cp3*m1+c1*cp2*cp3*m1+c2*cp2*cp3*m1+c1*c3*cp2*cp3*m1+c3*cp1*cp2*m2+c1*cp3*m2+c1*c3*cp3*m2+c1*cp1*cp3*m2+c2*cp1*cp3*m2+c1*c2*cp1*cp3*m2+c1*c3*m1*m2+c1*c3*cp1*m1*m2+c3*cp2*m1*m2+c1*c3*cp2*m1*m2+c3*cp1*cp2*m1*m2+c1*cp3*m1*m2+c2*cp3*m1*m2+c1*c2*cp3*m1*m2+c3*cp3*m1*m2+c1*c3*cp3*m1*m2+c3*cp1*cp3*m1*m2+c3*cp2*cp3*m1*m2+c3*cp2*cp3*p1+c3*cp1*cp2*m1*p1+cp2*cp3*m1*p1+c1*cp2*cp3*m1*p1+c2*cp2*cp3*m1*p1+cp1*cp3*m2*p1+c2*cp1*cp3*m2*p1+c1*cp2*cp3*m2*p1+c2*cp2*cp3*m2*p1+cp3*m1*m2*p1+c1*cp3*m1*m2*p1+c1*c3*cp2*p2+c3*cp1*cp2*p2+c2*cp1*cp3*p2+c1*c2*cp1*cp3*p2+c3*cp1*cp3*p2+c1*c3*cp1*cp3*p2+c3*cp1*cp2*m1*p2+c1*c2*cp3*m1*p2+c1*c3*cp3*m1*p2+c2*cp1*cp3*m1*p2+c3*cp1*cp3*m1*p2+c1*cp2*cp3*m1*p2+c2*cp2*cp3*m1*p2+c1*c3*m2*p2+c3*cp1*m2*p2+c1*c3*cp1*m2*p2+c3*cp1*cp2*m2*p2+cp1*cp3*m2*p2+c1*cp1*cp3*m2*p2+c2*cp1*cp3*m2*p2+c1*cp2*cp3*m2*p2+c1*c3*m1*m2*p2+c3*cp1*m1*m2*p2+cp3*m1*m2*p2+cp1*cp3*m1*m2*p2+cp2*cp3*m1*m2*p2+c1*c3*cp2*p3+c3*cp1*cp2*p3+c2*cp1*cp3*p3+c1*c2*cp1*cp3*p3+c1*c3*cp2*cp3*p3+c1*cp2*m1*p3+c2*cp1*cp2*m1*p3+c3*cp1*cp2*m1*p3+c1*c2*cp3*m1*p3+c2*cp1*cp3*m1*p3+c1*cp2*cp3*m1*p3+c2*cp2*cp3*m1*p3+c3*cp2*cp3*m1*p3+c1*m2*p3+c1*c3*m2*p3+c1*cp1*m2*p3+c2*cp1*m2*p3+c1*c2*cp1*m2*p3+c3*cp1*m2*p3+c1*c3*cp1*m2*p3+c1*cp2*m2*p3+c1*cp1*cp2*m2*p3+c3*cp1*cp2*m2*p3+c1*c3*cp3*m2*p3+cp1*cp3*m2*p3+c1*cp1*cp3*m2*p3+c2*cp1*cp3*m2*p3+c3*cp1*cp3*m2*p3+c1*cp2*cp3*m2*p3+m1*m2*p3+c1*c2*m1*m2*p3+c1*c3*m1*m2*p3+c3*cp1*m1*m2*p3+cp2*m1*m2*p3+c2*cp1*cp2*m1*m2*p3+cp3*m1*m2*p3+cp1*cp3*m1*m2*p3+cp2*cp3*m1*m2*p3+c3*cp2*cp3*m1*m2*p3+c3*cp2*x1+c3*cp1*cp2*x1+c2*cp3*x1+c2*cp1*cp3*x1+c3*cp2*cp3*x1+c3*cp1*cp2*m1*x1+c2*cp1*cp3*m1*x1+c3*cp2*cp3*m1*x1+c3*m2*x1+cp3*m2*x1+c1*cp3*m2*x1+c2*cp3*m2*x1+cp1*cp3*m2*x1+c2*cp1*cp3*m2*x1+cp2*cp3*m2*x1+c3*m1*m2*x1+c3*cp1*m1*m2*x1+c3*cp2*m1*m2*x1+cp3*m1*m2*x1+c2*cp3*m1*m2*x1+c3*cp3*m1*m2*x1+c2*cp3*p1*x1+cp2*cp3*p1*x1+c3*m2*p1*x1+cp3*m2*p1*x1+cp1*cp3*m2*p1*x1+cp3*m1*m2*p1*x1+c3*cp3*p2*x1+cp2*cp3*p2*x1+c3*cp2*m1*p2*x1+cp1*cp3*m2*p2*x1+cp2*cp3*m2*p2*x1+c3*m1*m2*p2*x1+cp3*m1*m2*p2*x1+cp2*cp3*m1*m2*p2*x1+c1*cp2*p3*x1+c2*cp2*p3*x1+cp1*cp2*p3*x1+cp2*cp3*p3*x1+c1*cp2*m1*p3*x1+c2*cp2*m1*p3*x1+c3*cp2*m1*p3*x1+cp1*m2*p3*x1+c1*cp1*m2*p3*x1+cp2*m2*p3*x1+c1*cp2*m2*p3*x1+c2*cp2*m2*p3*x1+cp1*cp2*m2*p3*x1+cp1*cp3*m2*p3*x1+cp2*cp3*m2*p3*x1+c2*m1*m2*p3*x1+c3*m1*m2*p3*x1+cp3*m1*m2*p3*x1+cp2*cp3*m1*m2*p3*x1+c1*c3*x2+c3*cp1*x2+c3*cp1*cp2*x2+c2*cp1*cp3*x2+c3*cp1*m1*x2+cp3*m1*x2+cp1*cp3*m1*x2+c2*cp1*cp3*m2*x2+cp3*m1*m2*x2+c1*cp3*m1*m2*x2+cp3*p1*x2+c3*cp3*p1*x2+cp1*cp3*p1*x2+cp3*m2*p1*x2+cp1*cp3*m2*p1*x2+cp1*cp3*p2*x2+cp1*cp3*m2*p2*x2+c1*cp2*p3*x2+cp1*cp3*p3*x2+cp1*m1*p3*x2+cp1*cp2*m1*p3*x2+c3*cp3*m1*p3*x2+cp1*m2*p3*x2+c1*cp1*m2*p3*x2+c1*cp2*m2*p3*x2+cp1*cp2*m2*p3*x2+cp1*cp3*m2*p3*x2+c1*m1*m2*p3*x2+cp1*cp2*m1*m2*p3*x2+cp3*m1*m2*x1*x2+p3*x1*x2+m1*m2*p3*x1*x2+c2*cp1*cp2*x3+c3*cp1*cp2*x3+c2*cp1*cp3*x3+cp1*m2*x3+c1*cp1*m2*x3+c3*cp1*m2*x3+c1*cp2*m2*x3+c3*cp1*cp2*m2*x3+c1*cp3*m2*x3+cp1*cp3*m2*x3+cp1*m1*m2*x3+c1*cp1*m1*m2*x3+c1*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+c1*cp3*m1*m2*x3+cp1*cp3*m1*m2*x3+c2*cp1*p1*x3+cp2*p1*x3+cp1*cp2*p1*x3+c2*m1*p1*x3+cp2*m1*p1*x3+cp1*cp2*m1*p1*x3+c1*cp1*p2*x3+c2*cp1*p2*x3+cp1*cp2*p2*x3+c1*m1*p2*x3+c2*m1*p2*x3+cp2*m1*p2*x3+cp1*cp2*m1*p2*x3+c1*cp1*m2*p2*x3+c1*m1*m2*p2*x3+cp1*m1*m2*p2*x3+c1*cp2*p3*x3+cp1*cp2*p3*x3+cp1*cp2*m1*p3*x3+c1*m2*p3*x3+c1*cp1*m2*p3*x3+cp1*cp2*m2*p3*x3+c1*m1*m2*p3*x3+cp1*m1*m2*p3*x3+cp1*m2*x1*x3+cp2*m2*x1*x3+cp3*m2*x1*x3+cp1*m1*m2*x1*x3+cp2*m1*m2*x1*x3+cp3*m1*m2*x1*x3+m2*p1*x1*x3+m1*p2*x1*x3+m2*p2*x1*x3+m1*m2*p2*x1*x3+m1*m2*p3*x1*x3+cp1*m2*x2*x3+m1*p1*x2*x3+m1*p2*x2*x3+c3*cp2*y1+c2*cp3*y1+c3*cp1*cp2*m1*y1+c2*cp1*cp3*m1*y1+c3*cp2*cp3*m1*y1+c3*cp1*m2*y1+c3*cp2*m2*y1+c3*cp3*m2*y1+c2*cp1*cp3*m2*y1+cp2*cp3*m2*y1+c3*m1*m2*y1+c3*cp1*m1*m2*y1+c3*cp2*m1*m2*y1+c2*cp3*m1*m2*y1+c3*cp3*m1*m2*y1+c3*cp2*p1*y1+c2*cp3*p1*y1+cp2*cp3*p1*y1+cp1*cp3*m2*p1*y1+cp2*cp3*m2*p1*y1+cp3*m1*m2*p1*y1+c2*cp3*p2*y1+cp2*cp3*p2*y1+c3*cp2*m1*p2*y1+c3*m2*p2*y1+cp1*cp3*m2*p2*y1+cp2*cp3*m2*p2*y1+c3*m1*m2*p2*y1+cp3*m1*m2*p2*y1+cp2*cp3*m1*m2*p2*y1+c2*cp2*p3*y1+cp1*cp2*p3*y1+c2*cp3*p3*y1+cp2*cp3*p3*y1+c1*cp2*m1*p3*y1+c2*cp2*m1*p3*y1+c3*cp2*m1*p3*y1+cp1*cp2*m1*p3*y1+c1*m2*p3*y1+c2*m2*p3*y1+c3*m2*p3*y1+cp1*m2*p3*y1+c1*cp1*m2*p3*y1+cp2*m2*p3*y1+c1*cp2*m2*p3*y1+c2*cp2*m2*p3*y1+cp1*cp3*m2*p3*y1+cp2*cp3*m2*p3*y1+c2*m1*m2*p3*y1+c3*m1*m2*p3*y1+cp3*m1*m2*p3*y1+cp2*cp3*m1*m2*p3*y1+cp3*m2*x1*y1+m2*p3*x1*y1+cp3*m2*x2*y1+cp3*m1*m2*x2*y1+p3*x2*y1+m2*p3*x2*y1+m1*m2*p3*x2*y1+cp1*m1*m2*x3*y1+cp2*m1*m2*x3*y1+cp3*m1*m2*x3*y1+m1*p2*x3*y1+m1*m2*p2*x3*y1+m2*p3*x3*y1+m1*m2*p3*x3*y1+c1*c3*y2+c3*cp1*m1*y2+c3*cp1*m2*y2+c1*cp3*m2*y2+c2*cp1*cp3*m2*y2+c1*cp3*m1*m2*y2+c3*cp3*p1*y2+cp1*cp3*m2*p1*y2+cp1*cp3*m2*p2*y2+cp1*cp2*p3*y2+c3*cp3*m1*p3*y2+c1*m2*p3*y2+cp1*m2*p3*y2+c1*cp1*m2*p3*y2+c1*cp2*m2*p3*y2+cp1*cp3*m2*p3*y2+c1*m1*m2*p3*y2+cp1*cp2*m1*m2*p3*y2+cp3*m2*x1*y2+cp3*m1*m2*x1*y2+m2*p3*x1*y2+m1*m2*p3*x1*y2+p1*x3*y2+m1*p1*x3*y2+m1*p2*x3*y2+cp3*m1*m2*y1*y2+m1*m2*p3*y1*y2+c2*cp1*m2*y3+c3*cp1*cp2*m2*y3+cp1*m1*m2*y3+c1*cp1*m1*m2*y3+c1*cp2*m1*m2*y3+cp1*cp2*m1*m2*y3+c1*cp3*m1*m2*y3+cp1*cp3*m1*m2*y3+cp2*p1*y3+cp1*cp2*p1*y3+cp2*m1*p1*y3+cp1*cp2*p2*y3+cp1*m1*p2*y3+cp2*m1*p2*y3+c1*cp1*m2*p2*y3+c1*m1*m2*p2*y3+cp1*m1*m2*p2*y3+cp1*cp2*p3*y3+cp1*m2*p3*y3+c1*cp1*m2*p3*y3+c1*m1*m2*p3*y3+cp1*m1*m2*p3*y3+cp1*m1*m2*x1*y3+cp2*m1*m2*x1*y3+cp3*m1*m2*x1*y3+m2*p1*x1*y3+m2*p2*x1*y3+m1*m2*p2*x1*y3+m2*p3*x1*y3+m1*m2*p3*x1*y3+p1*x2*y3+cp1*m2*x3*y3+cp1*m2*y1*y3+cp2*m2*y1*y3+cp3*m2*y1*y3+cp1*m1*m2*y1*y3+cp2*m1*m2*y1*y3+cp3*m1*m2*y1*y3+m1*m2*p2*y1*y3+m1*m2*p3*y1*y3+cp1*m2*y2*y3+p1*y2*y3+c2*cp1*cp3*z1+c3*m2*z1+c3*cp1*m2*z1+c3*cp2*m2*z1+c3*cp3*m2*z1+cp1*cp3*m2*z1+cp2*cp3*m2*z1+c3*cp2*p1*z1+cp2*cp3*p1*z1+c3*m2*p1*z1+cp2*cp3*m2*p1*z1+c2*cp3*p2*z1+c3*cp3*p2*z1+c3*m2*p2*z1+c1*cp2*p3*z1+c2*cp3*p3*z1+cp1*cp2*m1*p3*z1+m2*p3*z1+c1*m2*p3*z1+c2*m2*p3*z1+c3*m2*p3*z1+cp1*cp2*m2*p3*z1+m2*p3*x1*z1+cp3*x2*z1+m2*p3*x2*z1+cp1*m2*x3*z1+cp2*m2*x3*z1+cp3*m2*x3*z1+m2*p1*x3*z1+m2*p2*x3*z1+m2*p3*x3*z1+m2*p3*y1*z1+m2*p3*y2*z1+cp1*m2*y3*z1+cp2*m2*y3*z1+cp3*m2*y3*z1+m2*p1*y3*z1+m2*p2*y3*z1+m2*p3*y3*z1+c1*c3*z2+c2*cp1*cp3*z2+c3*cp1*m2*z2+c1*cp3*m2*z2+cp1*cp3*m2*z2+cp1*cp3*p1*z2+cp2*cp3*p1*z2+cp1*cp3*p2*z2+c1*cp2*p3*z2+cp1*cp2*p3*z2+cp1*cp3*p3*z2+cp1*m1*p3*z2+cp1*cp2*m1*p3*z2+c1*m2*p3*z2+cp1*cp2*m2*p3*z2+c3*x1*z2+cp3*m2*x1*z2+p3*x1*z2+m2*p3*x1*z2+cp1*m2*x3*z2+p1*x3*z2+c3*y1*z2+cp3*m2*y1*z2+p3*y1*z2+m2*p3*y1*z2+cp1*m2*y3*z2+c2*cp1*cp2*z3+c3*cp1*cp2*z3+c2*cp1*cp3*z3+c1*cp1*m2*z3+c2*cp1*m2*z3+c3*cp1*m2*z3+c1*cp2*m2*z3+c1*cp3*m2*z3+cp1*cp3*m2*z3+c2*cp1*p1*z3+c2*m1*p1*z3+cp1*cp2*m1*p1*z3+c1*cp1*p2*z3+c2*cp1*p2*z3+c1*m1*p2*z3+c2*m1*p2*z3+cp1*m1*p2*z3+cp1*cp2*m1*p2*z3+c1*cp2*p3*z3+cp1*cp2*m1*p3*z3+c1*m2*p3*z3+cp1*m2*p3*z3+cp1*cp2*m2*p3*z3+cp1*m2*x1*z3+cp2*m2*x1*z3+cp3*m2*x1*z3+m1*p2*x1*z3+m2*p3*x1*z3+cp1*m2*x2*z3+p1*x2*z3+m1*p1*x2*z3+m1*p2*x2*z3+cp1*m2*x3*z3+cp1*m2*y1*z3+cp2*m2*y1*z3+cp3*m2*y1*z3+m1*p2*y1*z3+m2*p3*y1*z3+cp1*m2*y2*z3+m1*p1*y2*z3+m1*p2*y2*z3+cp1*m2*y3*z3+p1*z2*z3;
end;
#####################################################################
#Space Group No. 129 (P4/nmm)
#####################################################################
Aiin129:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin129:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin129:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Azin129:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return z1;
end;
#####################################################################
Bdeltain129:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bcxyin129:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c2*cp1+c2*cp1*cp2+c2*p1+c2*cp2*p1+c2*x1+cp2*x1+cp2*m1*x1+c2*y1+cp2*m1*y1;
end;
#####################################################################
#Space Group No. 130 (P4/ncc)
#####################################################################
Aiin130:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin130:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin130:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Bdeltain130:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bcxyin130:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c2*cp1+c2*cp1*cp2+c2*p1+c2*cp2*p1+c2*x1+cp2*x1+cp2*m1*x1+c2*y1+cp2*m1*y1;
end;
#####################################################################
#Space Group No. 131 (Subscript[P4,2]/mmc)
#####################################################################
Aiin131:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin131:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin131:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Axyin131:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return x1+y1;
end;
#####################################################################
Bdeltain131:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bczin131:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*cp2+c2*m1+cp2*m1*p1+c1*p2+cp2*m1*p2+cp2*z1;
end;
#####################################################################
Bxyin131:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return (1-m1)*y1*x2+m1*y2*(x2+y1);
end;
#####################################################################
Bzxyin131:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return m1*p2*x1+m2*(1+m1+p2)*x1+p2*y1+m1*p2*y1+m2*(m1+p2)*y1+c2*(x1+y1)+x1*z2+y1*z2;
end;
#####################################################################
#Space Group No. 132 (Subscript[P4,2]/mcm)
#####################################################################
Aiin132:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin132:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin132:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Axyin132:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return x1+y1;
end;
#####################################################################
Bdeltain132:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bmzin132:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return m2*z1+c2*p1+cp2*m2*p1;
end;
#####################################################################
Bxyin132:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return (1-m1)*y1*x2+m1*y2*(x2+y1);
end;
#####################################################################
#Space Group No. 134 (Subscript[P4,2]/nnm)
#####################################################################
Aiin134:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin134:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin134:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Axyzin134:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return x1+y1+z1+c1+p1;
end;
#####################################################################
Bdeltain134:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
#Space Group No. 135 (Subscript[P4,2]/mbc)
#####################################################################
Aiin135:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin135:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin135:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Bdeltain135:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bcxyin135:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return (c2+p2+m1*cp2)*(x1+y1)+cp2*x1+c2*(cp1+cp1*cp2+m1+p1)+c1*(c2+cp2+cp2*m1+p2)+cp1*cp2*(p1+p2);
end;
#####################################################################
Bczin135:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*cp2+c2*m1+c2*p1+cp2*z1;
end;
#####################################################################
CGAPin135:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2, x3, y3, z3, c3, cp3, m3, p3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];p3:=g3[7];
return (c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1)*(p3+m3)+c2*cp1*cp2*cp3+c3*cp1*cp2*m1+c2*cp1*cp3*m1+c1*cp2*cp3*m1+c2*cp2*cp3*m1+c3*cp1*m2+c2*cp1*cp3*m2+c3*cp1*cp3*m2+c1*cp1*cp2*cp3*m2+c3*cp1*cp2*cp3*m2+c3*cp2*m1*m2+c2*cp1*cp3*m1*m2+c2*cp2*cp3*m1*m2+c3*cp2*cp3*m1*m2+c2*cp1*cp2*cp3*m1*m2+c3*cp1*cp2*cp3*m1*m2+c2*cp1*cp2*m3+c2*cp1*cp3*m3+cp1*cp2*m1*m3+c3*cp1*cp2*m1*m3+cp1*cp2*cp3*m1*m3+c2*cp1*cp2*cp3*m1*m3+cp1*cp2*m2*m3+c2*cp1*cp2*m2*m3+c3*cp1*cp2*m2*m3+c2*cp1*cp2*cp3*m2*m3+c3*m1*m2*m3+c2*cp1*m1*m2*m3+c3*cp1*m1*m2*m3+c2*cp2*m1*m2*m3+cp3*m1*m2*m3+cp1*cp3*m1*m2*m3+c2*cp1*cp3*m1*m2*m3+c3*cp1*cp3*m1*m2*m3+c2*cp1*cp2*cp3*m1*m2*m3+c3*cp1*cp2*p1+c2*cp1*cp2*cp3*p1+c3*cp1*cp2*cp3*p1+c3*cp1*cp2*m1*p1+cp2*cp3*m1*p1+c2*cp2*cp3*m1*p1+c3*cp1*cp2*cp3*m1*p1+c3*cp1*cp2*m2*p1+c2*cp1*cp3*m2*p1+cp1*cp2*cp3*m2*p1+c3*cp1*cp2*cp3*m2*p1+c3*m1*m2*p1+c3*cp1*m1*m2*p1+c3*cp2*m1*m2*p1+c2*cp3*m1*m2*p1+c3*cp3*m1*m2*p1+c3*cp1*cp3*m1*m2*p1+cp2*cp3*m1*m2*p1+c3*cp2*cp3*m1*m2*p1+cp1*cp2*cp3*m1*m2*p1+cp1*cp2*m3*p1+c2*cp1*cp2*m3*p1+c3*cp1*cp2*m3*p1+c3*cp1*cp2*cp3*m3*p1+c2*cp2*m1*m3*p1+c3*cp1*cp2*m1*m3*p1+c3*cp2*cp3*m1*m3*p1+c2*cp1*m2*m3*p1+c3*cp1*cp2*m2*m3*p1+cp1*cp3*m2*m3*p1+c3*cp1*cp3*m2*m3*p1+cp1*cp2*cp3*m2*m3*p1+c3*m1*m2*m3*p1+c2*cp1*m1*m2*m3*p1+c3*cp1*m1*m2*m3*p1+cp2*m1*m2*m3*p1+c2*cp2*m1*m2*m3*p1+c3*cp2*m1*m2*m3*p1+cp1*cp2*m1*m2*m3*p1+c2*cp1*cp2*m1*m2*m3*p1+c2*cp3*m1*m2*m3*p1+c3*cp3*m1*m2*m3*p1+c2*cp1*cp3*m1*m2*m3*p1+cp2*cp3*m1*m2*m3*p1+c2*cp2*cp3*m1*m2*m3*p1+cp1*cp2*cp3*m1*m2*m3*p1+c2*cp1*cp2*cp3*m1*m2*m3*p1+c3*cp1*cp2*p2+cp1*cp2*cp3*p2+c2*cp1*cp2*cp3*p2+c3*cp1*cp2*cp3*p2+c3*cp1*cp2*m1*p2+cp2*cp3*m1*p2+c2*cp1*cp2*cp3*m1*p2+c3*cp1*cp2*cp3*m1*p2+c1*cp3*m2*p2+c2*cp1*cp3*m2*p2+c3*cp1*cp3*m2*p2+c2*cp1*cp2*cp3*m2*p2+c3*cp1*cp2*cp3*m2*p2+c3*m1*m2*p2+c3*cp1*m1*m2*p2+c3*cp2*m1*m2*p2+c2*cp3*m1*m2*p2+c3*cp3*m1*m2*p2+cp1*cp3*m1*m2*p2+c2*cp1*cp3*m1*m2*p2+c3*cp1*cp3*m1*m2*p2+cp2*cp3*m1*m2*p2+c2*cp2*cp3*m1*m2*p2+c3*cp2*cp3*m1*m2*p2+cp1*cp2*cp3*m1*m2*p2+c2*cp1*cp2*m3*p2+c3*cp1*cp2*m3*p2+cp1*cp2*cp3*m3*p2+c2*cp1*cp2*cp3*m3*p2+c3*cp1*cp2*cp3*m3*p2+cp1*cp2*m1*m3*p2+c2*cp1*cp2*m1*m3*p2+c3*cp1*cp2*m1*m3*p2+cp2*cp3*m1*m3*p2+c2*cp2*cp3*m1*m3*p2+c3*cp2*cp3*m1*m3*p2+cp1*cp2*cp3*m1*m3*p2+cp1*m2*m3*p2+cp1*cp2*m2*m3*p2+cp1*cp2*cp3*m2*m3*p2+m1*m2*m3*p2+c2*m1*m2*m3*p2+c3*m1*m2*m3*p2+c2*cp1*m1*m2*m3*p2+c3*cp1*m1*m2*m3*p2+c2*cp2*m1*m2*m3*p2+c3*cp2*m1*m2*m3*p2+c2*cp3*m1*m2*m3*p2+c3*cp3*m1*m2*m3*p2+cp1*cp3*m1*m2*m3*p2+c1*cp1*cp2*p3+c3*cp1*cp2*p3+c2*cp1*cp3*p3+c2*cp1*m1*p3+cp1*cp2*m1*p3+c2*cp1*cp2*m1*p3+c3*cp1*cp2*m1*p3+c2*cp1*cp3*m1*p3+c3*cp2*cp3*m1*p3+c2*cp1*m2*p3+c1*cp3*m2*p3+c3*cp1*cp3*m2*p3+c2*m1*m2*p3+c3*m1*m2*p3+c2*cp1*m1*m2*p3+c3*cp1*m1*m2*p3+c2*cp2*m1*m2*p3+c3*cp2*m1*m2*p3+c2*cp3*m1*m2*p3+c3*cp3*m1*m2*p3+cp2*cp3*m1*m2*p3+cp1*cp2*cp3*m1*m2*p3+c2*cp1*m3*p3+c2*m1*m3*p3+c2*cp1*m1*m3*p3+c2*cp2*m1*m3*p3+c2*cp3*m1*m3*p3+c3*cp1*m2*m3*p3+cp1*cp3*m2*m3*p3+cp1*cp3*m1*m2*m3*p3+cp2*cp3*m1*m2*m3*p3+c3*cp1*cp2*x1+cp1*cp2*cp3*x1+c3*cp1*cp2*cp3*x1+c2*cp3*m1*x1+cp2*cp3*m1*x1+c3*cp2*cp3*m1*x1+cp1*cp2*cp3*m1*x1+c3*cp1*cp2*m2*x1+c2*cp3*m2*x1+cp1*cp2*cp3*m2*x1+c3*cp1*cp2*cp3*m2*x1+c3*m1*m2*x1+cp3*m1*m2*x1+c2*cp3*m1*m2*x1+c3*cp3*m1*m2*x1+c3*cp2*cp3*m1*m2*x1+c2*cp2*m3*x1+c2*cp1*cp2*m3*x1+c3*cp1*cp2*m3*x1+c2*cp3*m3*x1+c2*cp1*cp3*m3*x1+c3*cp1*cp2*cp3*m3*x1+c2*m1*m3*x1+c3*cp2*cp3*m1*m3*x1+cp1*cp2*cp3*m1*m3*x1+c2*cp1*m2*m3*x1+c3*cp1*cp2*m2*m3*x1+cp3*m2*m3*x1+c3*cp3*m2*m3*x1+c3*cp1*cp3*m2*m3*x1+cp1*cp2*cp3*m2*m3*x1+m1*m2*m3*x1+c2*m1*m2*m3*x1+cp2*m1*m2*m3*x1+c3*cp2*m1*m2*m3*x1+cp3*m1*m2*m3*x1+c3*cp3*m1*m2*m3*x1+cp1*cp3*m1*m2*m3*x1+cp2*cp3*m1*m2*m3*x1+cp1*cp2*cp3*m1*m2*m3*x1+cp2*cp3*p1*x1+cp3*m2*p1*x1+cp1*cp3*m2*p1*x1+cp3*m1*m2*p1*x1+cp2*m3*p1*x1+m2*m3*p1*x1+cp1*m2*m3*p1*x1+cp1*m1*m2*m3*p1*x1+cp2*m1*m2*m3*p1*x1+cp3*m1*m2*m3*p1*x1+cp1*cp3*m1*m2*m3*p1*x1+cp2*cp3*m1*m2*m3*p1*x1+cp2*cp3*p2*x1+cp1*cp2*cp3*p2*x1+cp2*cp3*m1*p2*x1+cp3*m2*p2*x1+cp1*cp3*m2*p2*x1+cp1*cp2*cp3*m2*p2*x1+cp3*m1*m2*p2*x1+cp2*cp3*m1*m2*p2*x1+cp2*cp3*m3*p2*x1+cp1*cp2*cp3*m3*p2*x1+cp2*cp3*m1*m3*p2*x1+m2*m3*p2*x1+cp1*cp2*m2*m3*p2*x1+cp3*m2*m3*p2*x1+cp1*cp3*m2*m3*p2*x1+cp2*m1*m2*m3*p2*x1+cp3*m1*m2*m3*p2*x1+c2*p3*x1+cp3*m2*p3*x1+c3*cp1*x2+c3*cp1*cp2*x2+c1*cp1*cp3*x2+c2*cp1*cp3*x2+c3*cp1*cp3*x2+c1*cp2*cp3*x2+c3*cp1*cp2*cp3*x2+c3*m1*x2+c3*cp1*m1*x2+c3*cp2*m1*x2+c3*cp1*cp2*m1*x2+c2*cp3*m1*x2+c2*cp1*cp3*m1*x2+cp2*cp3*m1*x2+c3*cp2*cp3*m1*x2+cp1*cp2*cp3*m1*x2+c3*cp1*m2*x2+c1*cp3*m2*x2+c3*cp1*cp3*m2*x2+cp1*cp2*cp3*m2*x2+c3*cp1*m1*m2*x2+c3*cp2*m1*m2*x2+cp3*m1*m2*x2+c3*cp3*m1*m2*x2+cp1*cp3*m1*m2*x2+c2*cp1*cp3*m1*m2*x2+cp2*cp3*m1*m2*x2+c2*cp1*m3*x2+c3*cp1*m3*x2+cp1*cp2*m3*x2+c2*cp1*cp2*m3*x2+c3*cp1*cp2*m3*x2+cp1*cp3*m3*x2+c2*cp1*cp3*m3*x2+c2*m1*m3*x2+cp1*m1*m3*x2+c2*cp1*m1*m3*x2+c2*cp2*m1*m3*x2+c2*cp1*cp2*m1*m3*x2+c2*cp3*m1*m3*x2+c3*cp3*m1*m3*x2+cp1*cp3*m1*m3*x2+c2*cp1*cp3*m1*m3*x2+cp1*cp2*cp3*m1*m3*x2+cp1*m2*m3*x2+c2*cp1*m2*m3*x2+c3*cp1*m2*m3*x2+m1*m2*m3*x2+c2*m1*m2*m3*x2+cp1*m1*m2*m3*x2+cp3*m1*m2*m3*x2+cp1*cp3*m1*m2*m3*x2+cp2*cp3*m1*m2*m3*x2+cp3*p1*x2+cp1*cp3*p1*x2+cp2*cp3*p1*x2+cp3*m1*p1*x2+cp1*cp3*m1*p1*x2+cp2*cp3*m1*p1*x2+cp3*m2*p1*x2+cp1*cp3*m2*p1*x2+cp3*m1*m2*p1*x2+cp1*cp3*m1*m2*p1*x2+m3*p1*x2+cp2*m3*p1*x2+cp1*cp2*m1*m3*p1*x2+cp3*m1*m3*p1*x2+cp1*cp3*m1*m3*p1*x2+m2*m3*p1*x2+cp1*m2*m3*p1*x2+cp1*cp3*p2*x2+cp1*cp2*cp3*p2*x2+cp3*m1*p2*x2+cp1*cp3*m1*p2*x2+cp2*cp3*m1*p2*x2+cp1*cp3*m2*p2*x2+cp1*cp3*m1*m2*p2*x2+cp2*cp3*m1*m2*p2*x2+cp3*m1*m3*p2*x2+cp1*cp3*m1*m3*p2*x2+cp2*cp3*m1*m3*p2*x2+cp1*m2*m3*p2*x2+cp1*cp2*m2*m3*p2*x2+cp1*cp3*m2*m3*p2*x2+m1*m2*m3*p2*x2+cp1*m1*m2*m3*p2*x2+cp2*m1*m2*m3*p2*x2+cp3*m1*m2*m3*p2*x2+c1*p3*x2+cp1*m1*p3*x2+cp3*x1*x2+cp1*cp3*x1*x2+cp3*m2*x1*x2+cp1*cp3*m2*x1*x2+cp3*m1*m2*x1*x2+cp1*m3*x1*x2+cp2*m3*x1*x2+cp1*cp2*m3*x1*x2+cp3*m3*x1*x2+cp1*cp3*m3*x1*x2+m1*m3*x1*x2+cp1*m1*m3*x1*x2+m1*m2*m3*x1*x2+c1*cp1*cp2*x3+c3*cp1*cp2*x3+c2*cp1*cp2*cp3*x3+c3*cp1*cp2*cp3*x3+c2*m1*x3+c2*cp2*m1*x3+c3*cp1*cp2*m1*x3+cp2*cp3*m1*x3+c3*cp2*cp3*m1*x3+cp1*cp2*cp3*m1*x3+c2*cp1*cp2*cp3*m1*x3+cp1*m2*x3+c2*cp1*m2*x3+c1*cp3*m2*x3+cp1*cp3*m2*x3+c3*cp1*cp3*m2*x3+cp1*cp2*cp3*m2*x3+c2*cp1*cp2*cp3*m2*x3+m1*m2*x3+c2*m1*m2*x3+c2*cp1*m1*m2*x3+c3*cp1*m1*m2*x3+c2*cp2*m1*m2*x3+c3*cp2*m1*m2*x3+cp1*cp2*m1*m2*x3+c3*cp1*cp2*m1*m2*x3+cp3*m1*m2*x3+c3*cp3*m1*m2*x3+c2*cp1*cp3*m1*m2*x3+cp2*cp3*m1*m2*x3+c2*cp2*cp3*m1*m2*x3+c3*cp2*cp3*m1*m2*x3+cp1*cp2*cp3*m1*m2*x3+cp1*cp2*m3*x3+c3*cp1*cp2*m3*x3+c2*cp1*cp3*m3*x3+c2*cp1*cp2*cp3*m3*x3+c2*cp1*m1*m3*x3+c2*cp1*cp2*m1*m3*x3+c2*cp3*m1*m3*x3+c2*cp1*cp3*m1*m3*x3+c2*cp2*cp3*m1*m3*x3+cp1*m2*m3*x3+c2*cp1*m2*m3*x3+c3*cp1*m2*m3*x3+c2*cp1*cp2*m2*m3*x3+c3*cp1*cp2*m2*m3*x3+m1*m2*m3*x3+cp1*m1*m2*m3*x3+c2*cp1*m1*m2*m3*x3+cp2*m1*m2*m3*x3+c2*cp2*m1*m2*m3*x3+cp2*cp3*m1*m2*m3*x3+cp1*cp2*cp3*m1*m2*m3*x3+cp1*cp2*p1*x3+cp1*cp2*cp3*p1*x3+cp2*m1*p1*x3+cp1*cp2*m1*p1*x3+cp2*cp3*m1*p1*x3+cp1*cp2*cp3*m1*p1*x3+cp1*m2*p1*x3+cp1*cp2*m2*p1*x3+cp3*m2*p1*x3+cp1*cp3*m2*p1*x3+cp1*cp2*cp3*m2*p1*x3+m1*m2*p1*x3+cp1*m1*m2*p1*x3+cp2*m1*m2*p1*x3+cp1*cp2*m1*m2*p1*x3+cp3*m1*m2*p1*x3+cp1*cp3*m1*m2*p1*x3+cp1*cp2*m3*p1*x3+cp1*cp2*cp3*m3*p1*x3+cp2*m1*m3*p1*x3+cp1*cp2*m1*m3*p1*x3+m2*m3*p1*x3+cp1*m2*m3*p1*x3+cp3*m2*m3*p1*x3+cp1*cp3*m2*m3*p1*x3+m1*m2*m3*p1*x3+cp1*m1*m2*m3*p1*x3+cp2*m1*m2*m3*p1*x3+cp3*m1*m2*m3*p1*x3+cp1*cp3*m1*m2*m3*p1*x3+cp2*cp3*m1*m2*m3*p1*x3+cp1*cp2*cp3*p2*x3+cp1*m2*p2*x3+cp1*cp3*m1*m2*p2*x3+cp2*cp3*m1*m2*p2*x3+cp1*m2*m3*p2*x3+cp1*cp2*m2*m3*p2*x3+m1*m2*m3*p2*x3+cp1*m1*m2*m3*p2*x3+cp2*m1*m2*m3*p2*x3+cp3*m1*m2*m3*p2*x3+cp1*m2*p3*x3+cp1*cp2*x1*x3+cp2*cp3*x1*x3+cp2*m1*x1*x3+m2*x1*x3+cp1*cp2*m2*x1*x3+cp3*m2*x1*x3+cp1*cp3*m2*x1*x3+m1*m2*x1*x3+cp2*m1*m2*x1*x3+cp3*m1*m2*x1*x3+cp1*cp2*m3*x1*x3+cp2*cp3*m3*x1*x3+cp2*m1*m3*x1*x3+cp1*cp2*m2*m3*x1*x3+cp3*m2*m3*x1*x3+cp1*cp3*m2*m3*x1*x3+cp2*m1*m2*m3*x1*x3+cp3*m1*m2*m3*x1*x3+c1*x2*x3+cp1*cp3*x2*x3+cp2*m1*x2*x3+cp3*m1*x2*x3+cp1*m2*x2*x3+cp1*cp2*m2*x2*x3+cp1*cp3*m2*x2*x3+m1*m2*x2*x3+cp3*m1*m2*x2*x3+cp1*cp3*m1*m2*x2*x3+cp2*cp3*m1*m2*x2*x3+cp1*m3*x2*x3+cp1*cp3*m3*x2*x3+cp1*cp3*m1*m3*x2*x3+cp2*cp3*m1*m3*x2*x3+cp1*m2*m3*x2*x3+cp1*m1*m2*m3*x2*x3+cp2*m1*m2*m3*x2*x3+c3*cp1*cp2*m1*y1+c2*cp3*m1*y1+c2*cp1*cp3*m1*y1+cp2*cp3*m1*y1+cp1*cp2*cp3*m1*y1+c3*cp1*cp2*cp3*m1*y1+c2*cp1*cp3*m2*y1+c3*cp1*m1*m2*y1+c3*cp2*m1*m2*y1+c3*cp1*cp3*m1*m2*y1+cp2*cp3*m1*m2*y1+c3*cp2*cp3*m1*m2*y1+cp1*cp2*cp3*m1*m2*y1+c2*m1*m3*y1+c2*cp1*m1*m3*y1+c2*cp2*m1*m3*y1+cp1*cp2*m1*m3*y1+c3*cp1*cp2*m1*m3*y1+c2*cp3*m1*m3*y1+c3*cp2*cp3*m1*m3*y1+c2*cp1*m2*m3*y1+c3*cp3*m2*m3*y1+m1*m2*m3*y1+c2*m1*m2*m3*y1+c3*cp1*m1*m2*m3*y1+cp2*m1*m2*m3*y1+c3*cp2*m1*m2*m3*y1+c3*cp3*m1*m2*m3*y1+cp1*cp2*cp3*m1*m2*m3*y1+cp1*cp3*m2*p1*y1+cp3*m1*m2*p1*y1+cp1*m2*m3*p1*y1+m1*m2*m3*p1*y1+cp2*cp3*m1*p2*y1+cp1*cp2*cp3*m1*p2*y1+cp3*m2*p2*y1+cp1*cp3*m2*p2*y1+cp2*cp3*m2*p2*y1+cp3*m1*m2*p2*y1+cp1*cp3*m1*m2*p2*y1+cp2*cp3*m1*m2*p2*y1+cp1*cp2*m1*m3*p2*y1+cp2*cp3*m1*m3*p2*y1+cp1*m2*m3*p2*y1+cp2*m2*m3*p2*y1+cp1*m1*m2*m3*p2*y1+cp2*m1*m2*m3*p2*y1+cp3*m1*m2*m3*p2*y1+c2*p3*y1+cp3*m2*p3*y1+cp3*m2*x1*y1+m2*m3*x1*y1+cp1*cp3*m1*x2*y1+cp3*m2*x2*y1+cp1*m1*m3*x2*y1+cp2*m1*m3*x2*y1+cp3*m1*m3*x2*y1+m2*m3*x2*y1+m1*m2*m3*x2*y1+cp1*cp2*m1*x3*y1+cp2*cp3*m1*x3*y1+cp1*cp3*m2*x3*y1+cp2*cp3*m2*x3*y1+cp1*cp2*m1*m2*x3*y1+cp1*cp3*m1*m2*x3*y1+cp1*m2*m3*x3*y1+cp2*m2*m3*x3*y1+cp3*m2*m3*x3*y1+cp1*m1*m2*m3*x3*y1+cp2*m1*m2*m3*x3*y1+cp3*m1*m2*m3*x3*y1+c1*cp1*cp3*y2+c2*cp1*cp3*y2+c3*cp1*cp3*y2+c1*cp2*cp3*y2+c3*cp1*cp2*cp3*y2+c3*cp3*m1*y2+cp2*cp3*m1*y2+cp1*cp2*cp3*m1*y2+c3*cp1*cp2*m2*y2+c1*cp3*m2*y2+cp1*cp3*m2*y2+c2*cp1*cp3*m2*y2+c3*cp1*cp3*m2*y2+cp1*cp2*cp3*m2*y2+c3*m1*m2*y2+c2*cp3*m1*m2*y2+cp1*cp3*m1*m2*y2+c2*cp1*cp3*m1*m2*y2+cp2*cp3*m1*m2*y2+c2*m1*m3*y2+cp1*cp2*m1*m3*y2+c2*cp1*cp2*m1*m3*y2+c3*cp3*m1*m3*y2+cp1*cp3*m1*m3*y2+c2*cp1*cp3*m1*m3*y2+c2*cp1*m2*m3*y2+cp1*cp2*m2*m3*y2+cp1*cp2*cp3*m2*m3*y2+m1*m2*m3*y2+c2*m1*m2*m3*y2+cp1*cp2*m1*m2*m3*y2+cp1*cp2*cp3*m1*m2*m3*y2+cp1*cp3*p1*y2+cp3*m1*p1*y2+cp1*cp3*m1*p1*y2+cp2*cp3*m1*p1*y2+cp1*cp3*m2*p1*y2+cp3*m1*m2*p1*y2+cp1*cp3*m1*m2*p1*y2+cp1*cp2*m1*m3*p1*y2+cp3*m1*m3*p1*y2+cp1*cp3*m1*m3*p1*y2+cp1*m2*m3*p1*y2+m1*m2*m3*p1*y2+cp1*m1*m2*m3*p1*y2+cp2*m1*m2*m3*p1*y2+cp3*m1*m2*m3*p1*y2+cp1*cp3*m1*m2*m3*p1*y2+cp2*cp3*m1*m2*m3*p1*y2+cp1*cp3*p2*y2+cp1*cp2*cp3*p2*y2+cp3*m1*p2*y2+cp1*cp3*m1*p2*y2+cp2*cp3*m1*p2*y2+cp1*cp3*m2*p2*y2+cp1*cp3*m1*m2*p2*y2+cp2*cp3*m1*m2*p2*y2+cp3*m1*m3*p2*y2+cp1*cp3*m1*m3*p2*y2+cp2*cp3*m1*m3*p2*y2+cp1*m2*m3*p2*y2+cp1*cp2*m2*m3*p2*y2+cp1*cp3*m2*m3*p2*y2+m1*m2*m3*p2*y2+cp1*m1*m2*m3*p2*y2+cp2*m1*m2*m3*p2*y2+cp3*m1*m2*m3*p2*y2+c1*p3*y2+cp1*m1*p3*y2+cp3*x1*y2+cp3*m1*x1*y2+cp3*m2*x1*y2+cp1*m1*m3*x1*y2+cp2*m1*m3*x1*y2+cp3*m1*m3*x1*y2+m2*m3*x1*y2+m1*m2*m3*x1*y2+cp1*cp3*x2*y2+cp3*m1*m2*x2*y2+m1*m3*x2*y2+cp1*m1*m3*x2*y2+cp2*m1*m3*x2*y2+cp3*m1*m3*x2*y2+c1*x3*y2+cp1*cp2*x3*y2+cp1*cp3*x3*y2+cp1*m1*x3*y2+cp3*m1*x3*y2+cp1*cp3*m1*x3*y2+cp2*cp3*m1*x3*y2+cp1*cp2*m2*x3*y2+cp1*m1*m2*x3*y2+cp2*m1*m2*x3*y2+cp1*cp3*m1*m2*x3*y2+cp2*cp3*m1*m2*x3*y2+cp1*m1*m3*x3*y2+cp2*m1*m3*x3*y2+cp1*cp3*m1*m3*x3*y2+cp2*cp3*m1*m3*x3*y2+cp1*m2*m3*x3*y2+cp1*m1*m2*m3*x3*y2+cp2*m1*m2*m3*x3*y2+cp3*m1*y1*y2+cp3*m1*m2*y1*y2+m1*m3*y1*y2+m1*m2*m3*y1*y2+c1*cp1*cp2*y3+c2*cp1*cp3*y3+c3*cp1*cp2*cp3*y3+c2*cp1*m1*y3+c2*cp2*m1*y3+cp1*cp2*m1*y3+c2*cp3*m1*y3+cp1*cp2*m2*y3+c3*cp1*cp2*m2*y3+c1*cp3*m2*y3+c3*cp1*cp3*m2*y3+c3*m1*m2*y3+cp1*m1*m2*y3+c2*cp1*m1*m2*y3+c2*cp2*m1*m2*y3+c3*cp1*cp2*m1*m2*y3+c2*cp3*m1*m2*y3+cp1*cp3*m1*m2*y3+c3*cp2*cp3*m1*m2*y3+c2*cp1*m1*m3*y3+c2*cp2*m1*m3*y3+c2*cp3*m1*m3*y3+cp1*cp2*cp3*m1*m3*y3+cp1*m2*m3*y3+c3*cp1*cp2*m2*m3*y3+cp2*m1*m2*m3*y3+cp1*cp2*m1*m2*m3*y3+cp3*m1*m2*m3*y3+cp1*cp3*m1*m2*m3*y3+m2*p1*y3+m1*m2*p1*y3+cp1*m1*m2*p1*y3+cp2*m1*m2*p1*y3+cp1*cp2*m1*m2*p1*y3+cp3*m1*m2*p1*y3+cp1*cp3*m1*m2*p1*y3+cp1*cp2*m2*m3*p1*y3+cp1*cp3*m2*m3*p1*y3+m1*m2*m3*p1*y3+cp1*m1*m2*m3*p1*y3+cp2*m1*m2*m3*p1*y3+cp3*m1*m2*m3*p1*y3+cp1*cp2*cp3*p2*y3+cp1*m2*p2*y3+cp1*cp3*m1*m2*p2*y3+cp2*cp3*m1*m2*p2*y3+cp1*m2*m3*p2*y3+cp1*cp2*m2*m3*p2*y3+m1*m2*m3*p2*y3+cp1*m1*m2*m3*p2*y3+cp2*m1*m2*m3*p2*y3+cp3*m1*m2*m3*p2*y3+cp1*m2*p3*y3+m1*m2*x1*y3+cp1*cp2*m2*m3*x1*y3+cp1*cp3*m2*m3*x1*y3+cp2*m1*m2*m3*x1*y3+cp3*m1*m2*m3*x1*y3+c1*x2*y3+cp1*x2*y3+cp1*cp2*x2*y3+cp1*cp3*x2*y3+cp1*m1*x2*y3+cp1*cp2*m2*x2*y3+cp1*cp3*m2*x2*y3+cp1*m1*m3*x2*y3+cp2*m1*m3*x2*y3+cp3*m1*m3*x2*y3+cp1*m2*m3*x2*y3+cp1*cp2*x3*y3+m1*m2*x3*y3+cp1*m1*m2*x3*y3+cp2*m1*m2*x3*y3+cp3*m1*m2*x3*y3+cp1*m2*m3*x3*y3+cp1*m1*m2*y1*y3+cp2*m1*m2*y1*y3+cp1*cp2*m1*m2*y1*y3+cp3*m1*m2*y1*y3+cp1*cp3*m1*m2*y1*y3+cp1*m1*m2*m3*y1*y3+cp2*m1*m2*m3*y1*y3+cp3*m1*m2*m3*y1*y3+c1*y2*y3+cp1*m1*y2*y3+cp1*cp2*m2*y2*y3+cp1*cp3*m2*y2*y3+m1*m2*y2*y3+cp1*m1*m2*y2*y3+cp2*m1*m2*y2*y3+cp3*m1*m2*y2*y3+cp1*m1*m3*y2*y3+cp2*m1*m3*y2*y3+cp3*m1*m3*y2*y3+c3*cp1*cp2*cp3*m1*z1+cp3*m1*m2*z1+c3*cp1*cp2*cp3*m1*m2*z1+cp1*cp2*m3*z1+c2*cp1*cp2*m3*z1+c2*cp1*cp2*cp3*m3*z1+c2*cp1*cp2*m1*m3*z1+c2*cp1*cp2*cp3*m1*m3*z1+c3*cp1*cp2*cp3*m1*m3*z1+c2*cp1*cp2*m2*m3*z1+cp3*m2*m3*z1+c2*cp1*cp2*cp3*m2*m3*z1+m1*m2*m3*z1+c2*m1*m2*m3*z1+c2*cp1*m1*m2*m3*z1+c3*cp1*m1*m2*m3*z1+cp2*m1*m2*m3*z1+c2*cp2*m1*m2*m3*z1+cp1*cp2*m1*m2*m3*z1+c3*cp1*cp2*m1*m2*m3*z1+cp3*m1*m2*m3*z1+c2*cp3*m1*m2*m3*z1+c2*cp1*cp3*m1*m2*m3*z1+c3*cp1*cp3*m1*m2*m3*z1+cp2*cp3*m1*m2*m3*z1+c2*cp2*cp3*m1*m2*m3*z1+cp1*cp2*m3*p1*z1+cp1*cp2*cp3*m3*p1*z1+cp1*cp2*m1*m3*p1*z1+cp1*cp2*cp3*m1*m3*p1*z1+cp1*cp2*m2*m3*p1*z1+cp1*cp2*cp3*m2*m3*p1*z1+m1*m2*m3*p1*z1+cp1*m1*m2*m3*p1*z1+cp2*m1*m2*m3*p1*z1+cp3*m1*m2*m3*p1*z1+cp1*cp3*m1*m2*m3*p1*z1+cp2*cp3*m1*m2*m3*p1*z1+cp1*cp2*cp3*m1*p2*z1+cp1*cp2*cp3*m1*m2*p2*z1+cp1*cp2*cp3*m1*m3*p2*z1+cp1*m1*m2*m3*p2*z1+cp1*cp2*m1*m2*m3*p2*z1+cp1*cp3*m1*m2*m3*p2*z1+cp3*m2*x1*z1+cp1*cp3*m2*x1*z1+cp3*m1*m2*x1*z1+cp1*cp3*m1*m2*x1*z1+cp1*cp2*m3*x1*z1+cp2*cp3*m3*x1*z1+cp1*cp2*m1*m3*x1*z1+cp2*cp3*m1*m3*x1*z1+m2*m3*x1*z1+cp1*m2*m3*x1*z1+cp2*m2*m3*x1*z1+cp3*m2*m3*x1*z1+cp1*cp3*m2*m3*x1*z1+cp2*cp3*m2*m3*x1*z1+cp1*cp3*m1*x2*z1+cp1*cp3*m1*m2*x2*z1+cp1*m3*x2*z1+cp2*m3*x2*z1+cp3*m3*x2*z1+cp1*cp3*m3*x2*z1+cp2*cp3*m3*x2*z1+m1*m3*x2*z1+cp2*m1*m3*x2*z1+cp1*cp2*m1*m3*x2*z1+cp3*m1*m3*x2*z1+cp2*cp3*m1*m3*x2*z1+m2*m3*x2*z1+cp1*m2*m3*x2*z1+cp2*m2*m3*x2*z1+cp3*m2*m3*x2*z1+cp1*cp3*m2*m3*x2*z1+cp2*cp3*m2*m3*x2*z1+m1*m2*m3*x2*z1+cp1*m1*m2*m3*x2*z1+cp2*m1*m2*m3*x2*z1+cp3*m1*m2*m3*x2*z1+cp1*cp3*m1*m2*m3*x2*z1+cp2*cp3*m1*m2*m3*x2*z1+cp2*m1*x3*z1+cp1*cp2*m1*x3*z1+cp2*cp3*m1*x3*z1+cp1*m2*x3*z1+cp2*m2*x3*z1+cp1*cp3*m2*x3*z1+cp2*cp3*m2*x3*z1+cp1*m1*m2*x3*z1+cp1*cp2*m1*m2*x3*z1+cp1*cp3*m1*m2*x3*z1+cp2*m1*m3*x3*z1+cp1*cp2*m1*m3*x3*z1+cp2*cp3*m1*m3*x3*z1+cp1*m2*m3*x3*z1+cp2*m2*m3*x3*z1+cp1*cp3*m2*m3*x3*z1+cp2*cp3*m2*m3*x3*z1+cp1*m1*m2*m3*x3*z1+cp1*cp2*m1*m2*m3*x3*z1+cp1*cp3*m1*m2*m3*x3*z1+m3*y2*z1+m1*m2*m3*y2*z1+cp1*m1*m2*m3*y2*z1+cp2*m1*m2*m3*y2*z1+cp3*m1*m2*m3*y2*z1+cp1*cp3*m1*m2*m3*y2*z1+cp2*cp3*m1*m2*m3*y2*z1+cp1*m1*m2*m3*y3*z1+cp1*cp2*m1*m2*m3*y3*z1+cp1*cp3*m1*m2*m3*y3*z1+c1*cp3*z2+cp3*m1*z2+cp1*cp3*m1*z2+c3*cp1*cp2*m2*z2+c2*cp1*cp3*m2*z2+c3*cp1*cp3*m2*z2+cp3*m1*m2*z2+cp1*cp2*m3*z2+c3*cp1*cp2*m3*z2+c2*cp1*cp3*m3*z2+c3*cp1*cp3*m3*z2+c2*cp1*cp2*cp3*m3*z2+cp1*m1*m3*z2+c2*cp1*cp2*m1*m3*z2+c2*cp1*cp2*cp3*m1*m3*z2+c2*cp1*cp2*m2*m3*z2+c2*cp1*cp2*cp3*m2*m3*z2+m1*m2*m3*z2+c2*m1*m2*m3*z2+cp1*m1*m2*m3*z2+c2*cp1*m1*m2*m3*z2+cp2*m1*m2*m3*z2+c2*cp2*m1*m2*m3*z2+cp3*m1*m2*m3*z2+c2*cp3*m1*m2*m3*z2+cp1*cp3*m1*m2*m3*z2+c2*cp1*cp3*m1*m2*m3*z2+cp2*cp3*m1*m2*m3*z2+c2*cp2*cp3*m1*m2*m3*z2+cp1*cp2*m3*p1*z2+cp1*cp2*cp3*m3*p1*z2+cp1*cp2*m1*m3*p1*z2+cp1*cp2*cp3*m1*m3*p1*z2+cp1*cp2*m2*m3*p1*z2+cp1*cp2*cp3*m2*m3*p1*z2+m1*m2*m3*p1*z2+cp1*m1*m2*m3*p1*z2+cp2*m1*m2*m3*p1*z2+cp3*m1*m2*m3*p1*z2+cp1*cp3*m1*m2*m3*p1*z2+cp2*cp3*m1*m2*m3*p1*z2+cp1*m3*x1*z2+cp2*m3*x1*z2+cp3*m3*x1*z2+cp1*cp3*m3*x1*z2+cp2*cp3*m3*x1*z2+m1*m3*x1*z2+cp1*m1*m3*x1*z2+cp2*m1*m3*x1*z2+cp3*m1*m3*x1*z2+cp1*cp3*m1*m3*x1*z2+cp2*cp3*m1*m3*x1*z2+m2*m3*x1*z2+cp1*m2*m3*x1*z2+cp2*m2*m3*x1*z2+cp3*m2*m3*x1*z2+cp1*cp3*m2*m3*x1*z2+cp2*cp3*m2*m3*x1*z2+cp1*cp3*m2*x2*z2+cp1*m3*x2*z2+cp1*cp2*m3*x2*z2+m1*m3*x2*z2+cp1*m1*m3*x2*z2+cp2*m1*m3*x2*z2+cp3*m1*m3*x2*z2+cp1*cp3*m1*m3*x2*z2+cp2*cp3*m1*m3*x2*z2+cp1*m2*m3*x2*z2+cp1*cp3*m2*m3*x2*z2+m1*m2*m3*x2*z2+cp1*m1*m2*m3*x2*z2+cp2*m1*m2*m3*x2*z2+cp3*m1*m2*m3*x2*z2+cp1*cp3*m1*m2*m3*x2*z2+cp2*cp3*m1*m2*m3*x2*z2+cp1*m1*x3*z2+cp2*m1*x3*z2+cp1*cp3*m1*x3*z2+cp2*cp3*m1*x3*z2+cp1*m2*x3*z2+cp1*cp2*m2*x3*z2+cp1*cp2*m3*x3*z2+cp1*cp3*m3*x3*z2+cp1*m1*m3*x3*z2+cp2*m1*m3*x3*z2+cp1*cp3*m1*m3*x3*z2+cp2*cp3*m1*m3*x3*z2+cp1*m2*m3*x3*z2+cp1*cp3*m2*m3*x3*z2+m3*y1*z2+cp1*cp3*m2*y2*z2+cp1*cp2*m3*y2*z2+cp1*cp3*m3*y2*z2+m1*m2*m3*y2*z2+cp1*m1*m2*m3*y2*z2+cp2*m1*m2*m3*y2*z2+cp3*m1*m2*m3*y2*z2+cp1*cp3*m1*m2*m3*y2*z2+cp2*cp3*m1*m2*m3*y2*z2+cp1*cp2*m2*y3*z2+cp1*cp3*m2*y3*z2+cp1*cp2*m3*y3*z2+cp1*cp3*m3*y3*z2+c2*cp1*z3+c2*cp1*cp2*m2*z3+c3*cp1*cp2*m2*z3+cp1*cp3*m2*z3+c2*cp1*cp3*m2*z3+c3*cp1*cp3*m2*z3+cp1*m1*m2*z3+cp2*m1*m2*z3+cp3*m1*m2*z3+c2*cp1*cp2*m3*z3+c3*cp1*cp2*m3*z3+c2*cp1*cp3*m3*z3+cp1*m2*m3*z3+cp1*cp2*m2*x2*z3+cp1*cp3*m2*x2*z3+cp1*cp2*m3*x2*z3+cp1*cp3*m3*x2*z3+cp1*cp2*m2*x3*z3+cp1*cp3*m2*x3*z3+cp1*cp2*m3*x3*z3+cp1*cp2*m2*y2*z3+cp1*cp3*m2*y2*z3+cp1*cp2*m3*y2*z3+cp1*cp3*m3*y2*z3+cp1*cp2*m2*y3*z3+cp1*cp3*m2*y3*z3+cp1*cp2*m3*y3*z3;
end;
#####################################################################
#Space Group No. 136 (Subscript[P4,2]/mnm)
#####################################################################
Aiin136:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin136:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin136:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Bdeltain136:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bcxyin136:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return (c2+cp2*m1+p2)*(x1+y1)+cp2*x1+c2*cp1*(1+cp2)+cp2*(c1+cp1*(p1+p2));
end;
#####################################################################
Bpxyzin136:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return cp1*cp2*p1+cp1*cp2*p2+p2*x1+p2*y1+cp2*z1;
end;
#####################################################################
Bmzin136:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c2*p1+cp2*m2*p1+m2*z1;
end;
#####################################################################
CGAP1in136:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2, x3, y3, z3, c3, cp3, m3, p3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];p3:=g3[7];
return (c2*p1+cp2*m2*p1+m2*z1+m1*m2)*p3+c1*c2*c3+c1*c3*cp2+c3*cp1*cp2+c2*c3*cp1*cp2+c3*cp1*cp2*cp3+c2*c3*cp1*m1+c3*cp2*m1+c1*c3*m2+c2*c3*cp1*m2+c3*cp1*cp2*m2+c2*c3*cp1*cp2*m2+c1*c2*cp3*m2+c1*c3*cp3*m2+c1*cp2*cp3*m2+c2*cp1*cp2*cp3*m2+c3*cp1*cp2*cp3*m2+c2*cp1*cp3*m1*m2+c3*cp1*cp3*m1*m2+cp1*cp2*cp3*m1*m2+c3*cp1*cp2*m1*m3+c2*cp1*cp2*cp3*m2*m3+cp1*cp3*m1*m2*m3+c3*cp2*p1+c1*c3*cp2*p1+c2*c3*cp2*p1+c1*cp2*cp3*p1+c2*cp2*cp3*p1+c3*cp2*cp3*p1+cp2*cp3*m1*p1+cp1*cp2*cp3*m1*p1+c3*m2*p1+c3*cp1*cp2*m2*p1+c2*cp1*cp3*m2*p1+c3*cp1*cp3*m2*p1+cp2*cp3*m2*p1+c1*cp2*cp3*m2*p1+c2*cp2*cp3*m2*p1+c3*cp2*cp3*m2*p1+cp1*cp2*cp3*m2*p1+c1*cp2*m3*p1+c2*cp2*m3*p1+cp1*cp2*m3*p1+c2*cp1*cp2*m3*p1+c3*cp1*cp2*m3*p1+cp1*cp2*cp3*m3*p1+cp2*m1*m3*p1+cp1*cp2*m1*m3*p1+cp1*cp2*m2*m3*p1+cp3*m2*m3*p1+cp1*cp3*m2*m3*p1+c1*c3*cp2*p2+c3*cp1*cp2*p2+c1*cp2*cp3*p2+cp1*cp2*cp3*p2+cp1*cp2*cp3*m1*p2+c2*cp1*cp3*m2*p2+c3*cp1*cp3*m2*p2+c1*cp2*cp3*m2*p2+cp1*cp2*cp3*m2*p2+c1*cp2*m3*p2+cp1*cp2*m3*p2+cp1*cp2*cp3*m3*p2+cp1*cp3*m2*m3*p2+cp1*cp2*cp3*m2*m3*p2+c1*c3*cp2*p3+c2*cp1*cp2*p3+c3*cp1*cp2*p3+c1*cp2*cp3*p3+cp1*cp2*cp3*p3+c2*cp1*cp2*cp3*p3+c3*cp1*cp2*cp3*p3+cp2*cp3*m1*p3+cp1*cp2*cp3*m1*p3+c1*cp2*m2*p3+cp1*cp2*m2*p3+c1*cp2*cp3*m2*p3+cp1*cp2*cp3*m2*p3+c1*cp2*m3*p3+cp1*cp2*m3*p3+cp2*cp3*m1*m3*p3+c2*c3*x1+c3*cp2*m1*x1+c3*m2*x1+c3*cp1*m2*x1+c3*cp2*m2*x1+c2*cp3*m2*x1+c3*cp3*m2*x1+cp2*cp3*m2*x1+c3*cp1*m1*m2*x1+c3*cp2*m1*m2*x1+cp1*cp2*m3*x1+cp2*cp3*m3*x1+cp2*cp3*m1*m3*x1+c2*cp1*m2*m3*x1+c3*cp1*m2*m3*x1+c3*cp2*m2*m3*x1+cp1*cp2*m2*m3*x1+cp3*m2*m3*x1+cp2*m1*m2*m3*x1+cp1*cp2*m1*m2*m3*x1+cp3*m1*m2*m3*x1+cp1*cp3*m1*m2*m3*x1+cp2*cp3*m1*m2*m3*x1+c3*cp2*p1*x1+cp2*cp3*m1*p1*x1+cp3*m2*p1*x1+cp2*cp3*m2*p1*x1+cp3*m1*m2*p1*x1+cp2*m1*m3*p1*x1+cp3*m2*m3*p1*x1+cp2*cp3*m1*p2*x1+cp3*m2*p2*x1+cp3*m1*m2*p2*x1+cp3*m2*m3*p2*x1+cp1*cp2*p3*x1+cp2*cp3*p3*x1+cp1*cp3*x2+c3*cp1*m2*x2+cp1*cp2*m3*x2+cp1*m1*m3*x2+c2*cp1*m2*m3*x2+c3*cp1*m2*m3*x2+cp1*cp2*m2*m3*x2+cp1*m1*m2*m3*x2+c3*p1*x2+c3*cp2*p1*x2+cp2*cp3*m1*p1*x2+cp2*cp3*m2*p1*x2+cp3*m2*m3*p1*x2+cp2*cp3*m1*p2*x2+cp1*cp2*p3*x2+cp1*cp2*m1*p3*x2+cp2*cp3*m1*p3*x2+m1*m3*x1*x2+m1*m2*m3*x1*x2+cp1*cp2*m2*x3+cp1*cp3*m2*x3+c2*cp1*m3*x3+c2*cp1*m2*m3*x3+c3*cp1*m2*m3*x3+cp1*cp2*m2*m3*x3+cp1*cp3*m2*m3*x3+cp1*cp2*p1*x3+cp1*cp2*m1*p1*x3+cp2*cp3*m1*p1*x3+c1*m2*p1*x3+c2*m2*p1*x3+c3*m2*p1*x3+cp1*m2*p1*x3+cp2*m2*p1*x3+cp1*cp2*m2*p1*x3+cp2*cp3*m2*p1*x3+cp2*m3*p1*x3+cp2*m2*m3*p1*x3+cp3*m2*m3*p1*x3+cp1*cp2*p2*x3+cp1*cp2*m1*p2*x3+cp2*cp3*m1*p2*x3+c1*m2*p2*x3+cp1*m2*p2*x3+cp1*cp2*m2*p2*x3+cp1*cp2*p3*x3+cp1*cp2*m1*p3*x3+cp2*cp3*m1*p3*x3+c1*m2*p3*x3+cp1*m2*p3*x3+cp1*cp2*m2*p3*x3+m1*m2*x1*x3+m1*m2*m3*x1*x3+c2*c3*y1+c3*cp2*y1+c3*cp2*m1*y1+c3*m2*y1+c2*cp3*m2*y1+c3*cp3*m2*y1+cp2*cp3*m2*y1+c3*cp1*m1*m2*y1+c3*cp2*m1*m2*y1+cp1*cp2*m3*y1+cp2*cp3*m1*m3*y1+cp1*m2*m3*y1+c2*cp1*m2*m3*y1+c3*cp1*m2*m3*y1+cp2*m2*m3*y1+c3*cp2*m2*m3*y1+cp1*cp3*m2*m3*y1+cp2*cp3*m2*m3*y1+cp2*m1*m2*m3*y1+cp1*cp2*m1*m2*m3*y1+cp3*m1*m2*m3*y1+cp1*cp3*m1*m2*m3*y1+cp2*cp3*m1*m2*m3*y1+c3*cp2*p1*y1+cp2*cp3*m1*p1*y1+cp2*cp3*m2*p1*y1+cp3*m1*m2*p1*y1+cp2*m3*p1*y1+cp2*m1*m3*p1*y1+cp3*m2*m3*p1*y1+cp2*cp3*m1*p2*y1+cp3*m1*m2*p2*y1+cp3*m2*m3*p2*y1+m2*m3*x1*y1+m3*x2*y1+m1*m3*x2*y1+m2*m3*x2*y1+m1*m2*m3*x2*y1+m2*x3*y1+m1*m2*x3*y1+m2*m3*x3*y1+m1*m2*m3*x3*y1+cp1*cp2*m3*y2+cp1*m2*m3*y2+c2*cp1*m2*m3*y2+c3*cp1*m2*m3*y2+cp1*cp3*m2*m3*y2+cp1*m1*m2*m3*y2+c3*cp2*p1*y2+cp2*cp3*m1*p1*y2+cp2*cp3*m2*p1*y2+cp2*m3*p1*y2+cp3*m2*m3*p1*y2+cp2*cp3*m1*p2*y2+c1*p3*y2+cp1*p3*y2+cp1*cp2*m1*p3*y2+cp2*cp3*m1*p3*y2+m1*m3*x1*y2+m2*m3*x1*y2+m1*m2*m3*x1*y2+m3*y1*y2+m1*m3*y1*y2+m1*m2*m3*y1*y2+c2*cp1*m2*y3+c3*cp1*m2*y3+cp1*cp3*m2*y3+c2*cp1*m3*y3+cp2*m1*m3*y3+c2*cp1*m2*m3*y3+c3*cp1*m2*m3*y3+cp2*m1*p1*y3+cp1*cp2*m1*p1*y3+cp2*cp3*m1*p1*y3+c1*m2*p1*y3+c2*m2*p1*y3+c3*m2*p1*y3+cp1*m2*p1*y3+cp1*cp2*m2*p1*y3+cp2*cp3*m2*p1*y3+cp2*m2*m3*p1*y3+cp3*m2*m3*p1*y3+cp2*m1*p2*y3+cp1*cp2*m1*p2*y3+cp2*cp3*m1*p2*y3+c1*m2*p2*y3+cp1*m2*p2*y3+cp1*cp2*m2*p2*y3+cp2*m1*p3*y3+cp1*cp2*m1*p3*y3+cp2*cp3*m1*p3*y3+c1*m2*p3*y3+cp1*m2*p3*y3+cp1*cp2*m2*p3*y3+m2*m3*x1*y3+m1*m2*m3*x1*y3+m1*m2*m3*y1*y3+cp2*cp3*m1*z1+c3*cp1*m2*z1+c3*cp2*m2*z1+cp2*cp3*m2*z1+cp2*m3*z1+cp2*m1*m3*z1+cp1*cp2*m2*m3*z1+cp3*m2*m3*z1+cp1*cp3*m2*m3*z1+cp2*cp3*m2*m3*z1+cp3*m2*p1*z1+cp2*m3*p1*z1+cp3*m2*p2*z1+cp1*cp2*p3*z1+cp2*cp3*p3*z1+m2*m3*x1*z1+c3*x2*z1+cp3*m2*x2*z1+m2*m3*x2*z1+cp2*x3*z1+m2*x3*z1+cp2*m2*x3*z1+cp3*m2*x3*z1+m2*m3*x3*z1+m2*m3*y1*z1+c3*y2*z1+cp3*m2*y2*z1+m2*m3*y2*z1+cp2*m2*y3*z1+cp3*m2*y3*z1+m2*m3*y3*z1+c3*cp1*z2+cp2*cp3*m1*z2+c2*cp1*m3*z2+c3*cp1*m3*z2+cp2*m1*m3*z2+cp1*cp2*m2*m3*z2+c3*p1*z2+cp2*m3*p1*z2+c1*p3*z2+cp1*p3*z2+cp1*cp2*p3*z2+c3*x1*z2+cp3*m2*x1*z2+m1*m3*x1*z2+m2*m3*x1*z2+c3*y1*z2+cp3*m2*y1*z2+m3*y1*z2+m1*m3*y1*z2+m2*m3*y1*z2+m3*z1*z2+c2*cp1*cp2*z3+c3*cp1*cp2*z3+cp2*cp3*m1*z3+cp1*cp2*m2*z3+cp1*cp2*m3*z3+cp1*cp2*p1*z3+cp2*m1*p1*z3+cp2*m2*p1*z3+cp2*m3*p1*z3+cp1*cp2*p2*z3+cp2*m1*p2*z3+cp1*cp2*p3*z3+cp2*m1*p3*z3+cp2*x1*z3+cp2*m1*x1*z3+cp3*m2*x1*z3+cp2*m1*y1*z3+cp3*m2*y1*z3;
end;
#####################################################################
CGAP2in136:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2, x3, y3, z3, c3, cp3, m3, p3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];p3:=g3[7];
return c1*cp2*cp3*p1+c2*cp2*cp3*p1+cp2*cp3*m1*p1+c3*m2*p1+c3*cp2*m2*p1+c1*cp2*cp3*m2*p1+c2*cp2*cp3*m2*p1+cp1*cp2*m3*p1+c1*c3*cp2*p2+c3*cp2*m1*p2+c1*cp2*cp3*m2*p2+cp1*cp2*m3*p2+c1*c2*cp1*p3+c1*c3*cp2*p3+c1*cp1*cp2*p3+c1*cp2*cp3*p3+c2*m1*p3+c3*cp2*m1*p3+c1*cp1*cp2*m1*p3+cp1*cp2*m2*p3+c1*cp2*cp3*m2*p3+cp1*cp2*m3*p3+c3*cp2*p1*x1+cp2*cp3*p1*x1+cp3*m2*p1*x1+cp2*cp3*m2*p1*x1+cp3*p2*x1+c1*cp3*p2*x1+c2*cp3*p2*x1+c3*cp3*p2*x1+cp1*cp3*p2*x1+c1*cp1*cp3*p2*x1+c3*cp2*cp3*p2*x1+cp2*cp3*m2*p2*x1+c1*cp2*p3*x1+c2*cp2*p3*x1+cp1*cp2*p3*x1+cp2*cp3*p3*x1+cp2*cp3*m1*p3*x1+c3*p1*x2+c3*cp2*p1*x2+c1*cp3*p1*x2+c2*cp3*p1*x2+c3*cp3*p1*x2+c1*cp1*cp3*p1*x2+cp2*cp3*p1*x2+c3*cp2*cp3*p1*x2+cp2*cp3*m2*p1*x2+c1*cp3*p2*x2+c1*cp1*p3*x2+c1*cp2*p3*x2+cp1*cp2*p3*x2+c1*m1*p3*x2+c2*m1*p3*x2+cp2*m1*p3*x2+cp1*cp2*m1*p3*x2+cp3*p1*x1*x2+cp3*m1*p2*x1*x2+p3*x1*x2+c3*cp2*p1*x3+cp1*cp2*p1*x3+c1*cp1*cp2*p1*x3+c2*cp1*cp2*p1*x3+cp2*cp3*p1*x3+c1*cp2*cp3*p1*x3+c2*cp2*cp3*p1*x3+cp2*cp3*m1*p1*x3+c1*m2*p1*x3+c2*m2*p1*x3+c3*m2*p1*x3+c3*cp2*m2*p1*x3+cp1*cp2*m2*p1*x3+cp2*cp3*m2*p1*x3+c1*cp1*cp3*p2*x3+c1*cp2*cp3*p2*x3+cp2*cp3*m1*p2*x3+c1*m2*p2*x3+c2*cp1*p3*x3+cp2*m1*p3*x3+c1*m2*p3*x3+cp1*cp2*m2*p3*x3+cp2*p1*x1*x3+cp2*m1*p1*x1*x3+m2*p1*x1*x3+cp2*m2*p1*x1*x3+p2*x1*x3+cp3*p2*x1*x3+m1*p2*x1*x3+cp3*m1*p2*x1*x3+cp3*m2*p2*x1*x3+m2*p3*x1*x3+cp3*p1*x2*x3+cp3*m1*p1*x2*x3+m2*p1*x2*x3+cp3*m2*p1*x2*x3+cp3*m1*p2*x2*x3+cp3*p2*y1+c1*cp3*p2*y1+c2*cp3*p2*y1+c3*cp3*p2*y1+c1*cp1*cp3*p2*y1+c3*cp2*cp3*p2*y1+cp2*cp3*m2*p2*y1+c2*p3*y1+c1*cp2*p3*y1+c2*cp2*p3*y1+cp2*m1*p3*y1+cp2*cp3*m1*p3*y1+cp3*p2*x1*y1+cp3*p2*x2*y1+cp3*m1*p2*x2*y1+p3*x2*y1+cp2*p1*x3*y1+cp2*m1*p1*x3*y1+cp2*m2*p1*x3*y1+cp3*p2*x3*y1+m1*p2*x3*y1+cp3*m1*p2*x3*y1+cp3*m2*p2*x3*y1+m2*p3*x3*y1+c1*cp3*p1*y2+c2*cp3*p1*y2+c3*cp3*p1*y2+c1*cp1*cp3*p1*y2+c3*cp2*cp3*p1*y2+c1*cp3*p2*y2+c1*cp1*p3*y2+c1*cp2*p3*y2+c1*m1*p3*y2+c2*m1*p3*y2+cp1*cp2*m1*p3*y2+cp3*p1*x1*y2+cp3*p2*x1*y2+cp3*m1*p2*x1*y2+cp3*p1*x2*y2+cp3*p1*x3*y2+cp3*m1*p1*x3*y2+cp3*m2*p1*x3*y2+cp3*m1*p2*x3*y2+cp3*m1*p2*y1*y2+c2*cp1*p1*y3+c1*cp1*cp2*p1*y3+c2*cp1*cp2*p1*y3+c1*cp2*cp3*p1*y3+c2*cp2*cp3*p1*y3+cp1*cp2*m1*p1*y3+cp2*cp3*m1*p1*y3+c1*m2*p1*y3+c2*m2*p1*y3+c3*m2*p1*y3+c3*cp2*m2*p1*y3+cp1*cp2*m2*p1*y3+c2*cp1*p2*y3+c1*cp1*cp3*p2*y3+c1*cp2*cp3*p2*y3+cp1*cp2*m1*p2*y3+cp2*cp3*m1*p2*y3+c1*m2*p2*y3+c2*cp1*p3*y3+c1*m2*p3*y3+cp1*cp2*m2*p3*y3+cp2*m1*p1*x1*y3+m2*p1*x1*y3+cp2*m2*p1*x1*y3+m1*p2*x1*y3+cp3*m1*p2*x1*y3+cp3*m2*p2*x1*y3+m2*p3*x1*y3+m1*p1*x2*y3+cp3*m1*p1*x2*y3+m2*p1*x2*y3+cp3*m2*p1*x2*y3+m1*p2*x2*y3+cp3*m1*p2*x2*y3+m2*p1*x3*y3+cp2*m1*p1*y1*y3+cp2*m2*p1*y1*y3+m1*p2*y1*y3+cp3*m1*p2*y1*y3+cp3*m2*p2*y1*y3+m2*p3*y1*y3+m1*p1*y2*y3+cp3*m1*p1*y2*y3+cp3*m2*p1*y2*y3+m1*p2*y2*y3+cp3*m1*p2*y2*y3+c2*cp3*z1+c1*cp2*cp3*z1+c2*cp2*cp3*z1+c3*cp2*m1*z1+cp2*cp3*m1*z1+c3*m2*z1+c1*cp3*m2*z1+c2*cp3*m2*z1+c3*cp3*m2*z1+cp2*cp3*m2*z1+cp1*cp2*m3*z1+cp2*cp3*m3*z1+c3*cp2*p1*z1+cp2*cp3*m1*p1*z1+cp3*m2*p1*z1+cp2*m3*p1*z1+cp1*cp2*m3*p1*z1+cp2*cp3*m3*p1*z1+cp3*p2*z1+c2*cp3*p2*z1+c3*cp3*p2*z1+c2*cp1*cp3*p2*z1+c3*cp1*cp3*p2*z1+cp2*cp3*p2*z1+c2*cp2*cp3*p2*z1+c3*cp2*cp3*p2*z1+cp3*m1*p2*z1+cp1*cp3*m1*p2*z1+cp2*cp3*m1*p2*z1+cp3*m2*p2*z1+cp2*cp3*m2*p2*z1+cp1*cp3*m3*p2*z1+c2*p3*z1+cp1*cp2*p3*z1+cp2*cp3*p3*z1+cp2*m1*p3*z1+c3*cp2*x1*z1+cp2*cp3*x1*z1+cp2*cp3*m1*x1*z1+cp3*m2*x1*z1+cp2*cp3*m2*x1*z1+cp3*p2*x1*z1+c2*cp3*x2*z1+c3*cp3*x2*z1+cp2*cp3*x2*z1+cp3*p1*x2*z1+cp3*p2*x2*z1+c2*cp1*x3*z1+cp2*x3*z1+c2*cp2*x3*z1+cp1*cp2*x3*z1+c2*cp3*x3*z1+cp2*cp3*x3*z1+cp2*m2*x3*z1+cp1*cp2*m2*x3*z1+cp2*cp3*m2*x3*z1+m2*p1*x3*z1+p2*x3*z1+c3*cp2*y1*z1+cp2*cp3*m1*y1*z1+cp3*m2*y1*z1+cp2*cp3*m2*y1*z1+cp3*p2*y1*z1+c2*cp3*y2*z1+c3*cp3*y2*z1+cp3*p1*y2*z1+cp3*p2*y2*z1+c2*cp1*y3*z1+c2*cp2*y3*z1+c2*cp3*y3*z1+cp2*m2*y3*z1+cp1*cp2*m2*y3*z1+cp2*cp3*m2*y3*z1+m2*p1*y3*z1+c1*c3*z2+c1*cp2*cp3*z2+c3*cp2*m1*z2+cp1*cp3*m1*z2+cp2*cp3*m1*z2+cp1*cp3*m2*z2+cp1*cp3*m3*z2+c3*p1*z2+c3*cp2*p1*z2+cp3*m1*p1*z2+cp2*cp3*m1*p1*z2+cp3*m2*p1*z2+cp1*m3*p1*z2+cp1*cp2*m3*p1*z2+cp3*m3*p1*z2+cp2*cp3*m3*p1*z2+cp3*m1*p2*z2+cp1*cp3*m1*p2*z2+cp2*cp3*m1*p2*z2+cp1*cp3*m2*p2*z2+cp1*cp3*m3*p2*z2+cp1*cp2*p3*z2+cp2*m1*p3*z2+c3*x1*z2+c3*cp2*x1*z2+cp2*cp3*x1*z2+cp2*cp3*m1*x1*z2+cp2*cp3*m2*x1*z2+cp3*p2*x1*z2+p3*x1*z2+cp3*p1*x2*z2+c2*cp1*x3*z2+cp1*cp2*x3*z2+cp1*cp2*m2*x3*z2+m2*p1*x3*z2+c3*y1*z2+c3*cp2*y1*z2+cp2*cp3*m1*y1*z2+cp2*cp3*m2*y1*z2+cp3*p2*y1*z2+p3*y1*z2+cp3*p1*y2*z2+c2*cp1*y3*z2+cp1*cp2*m2*y3*z2+m2*p1*y3*z2+c3*cp1*z1*z2+c3*cp2*z1*z2+c2*cp3*z1*z2+c3*cp3*z1*z2+cp1*cp3*m2*z1*z2+cp2*cp3*m2*z1*z2+cp2*m3*z1*z2+cp3*m3*z1*z2+c1*cp1*cp2*z3+c2*cp1*cp2*z3+c3*cp1*cp2*z3+c1*cp2*cp3*z3+cp1*cp2*m1*z3+c2*cp1*p1*z3+c3*cp1*cp2*p1*z3+c3*cp2*cp3*p1*z3+cp2*m1*p1*z3+cp2*cp3*m1*p1*z3+m2*p1*z3+cp2*m2*p1*z3+cp1*cp2*m2*p1*z3+cp2*m3*p1*z3+cp1*cp2*m3*p1*z3+c2*cp1*p2*z3+cp1*m1*p2*z3+cp2*m1*p2*z3+cp1*cp2*m1*p2*z3+cp1*cp3*m1*p2*z3+cp2*cp3*m1*p2*z3+cp1*m2*p2*z3+cp1*cp3*m2*p2*z3+cp1*m3*p2*z3+cp1*cp3*m3*p2*z3+cp2*m1*p3*z3+cp2*x1*z3+c1*cp2*x1*z3+c2*cp2*x1*z3+c3*cp2*x1*z3+cp1*cp2*x1*z3+cp2*cp3*x1*z3+cp2*m1*x1*z3+cp2*cp3*m1*x1*z3+cp2*cp3*m2*x1*z3+cp2*p1*x1*z3+p2*x1*z3+cp3*p2*x1*z3+cp1*x2*z3+c1*cp1*x2*z3+c1*cp2*x2*z3+cp1*cp2*x2*z3+cp1*m1*x2*z3+cp1*cp2*m1*x2*z3+cp3*p1*x2*z3+m1*p1*x2*z3+m1*p2*x2*z3+c2*cp1*x3*z3+cp1*cp2*x3*z3+cp1*cp2*m2*x3*z3+m2*p1*x3*z3+c1*cp2*y1*z3+c2*cp2*y1*z3+c3*cp2*y1*z3+cp2*m1*y1*z3+cp2*cp3*m1*y1*z3+cp2*cp3*m2*y1*z3+cp2*p1*y1*z3+cp3*p2*y1*z3+c1*cp1*y2*z3+c1*cp2*y2*z3+cp1*m1*y2*z3+cp1*cp2*m1*y2*z3+cp3*p1*y2*z3+m1*p1*y2*z3+m1*p2*y2*z3+c2*cp1*y3*z3+cp1*cp2*m2*y3*z3+m2*p1*y3*z3+c2*cp1*z1*z3+c2*cp2*z1*z3+c2*cp3*z1*z3+cp2*m2*z1*z3+cp1*cp3*m2*z1*z3+cp2*cp3*m2*z1*z3+cp2*m3*z1*z3+p2*z1*z3+c3*cp1*z2*z3;
end;
#####################################################################
#Space Group No. 138 (Subscript[P4,2]/ncm)
#####################################################################
Aiin138:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin138:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin138:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Bdeltain138:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bmzin138:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return m2*z1+cp2*m2*p1+c2*p1;
end;
#####################################################################
Bcxyin138:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c2*cp1+c2*cp1*cp2+c2*p1+c2*cp2*p1+c2*x1+cp2*x1+cp2*m1*x1+c2*y1+cp2*m1*y1;
end;
#####################################################################
Bpxyzin138:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return cp1*cp2*p1+cp1*cp2*p2+p2*x1+p2*y1+cp2*z1+p2*z1;
end;
#####################################################################
#Space Group No. 139 (I4/mmm)
#####################################################################
Aiin139:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Amin139:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Acpin139:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Axyzin139:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return x1+y1+z1;
end;
#####################################################################
Bdeltain139:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bphiin139:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return (c2+c2*cp1+c1*cp2+c2*cp2+cp1*cp2*m1)*(x1+y1+z1)+(c2+cp2*m1)*(x1+y1)+cp2*y1;
end;
#####################################################################
Bxyzin139:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return (x1+y1)*z2+cp1*((x1+y1)*(x2+y2)+(x1+x2+y1+y2)*z2);
end;
#####################################################################
CGAPin139:=function(g1,g2,g3)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2, x3, y3, z3, c3, cp3, m3, p3;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
x3:=g3[1];y3:=g3[2];z3:=g3[3];c3:=g3[4];cp3:=g3[5];m3:=g3[6];p3:=g3[7];
return m1*m2*(x3+y3+z3)+m2*p3*x1+c1*c3*cp1*x2+c3*cp1*m1*x2+c3*p1*x2+c3*cp1*p1*x2+cp3*m1*p1*x2+cp3*m2*p1*x2+cp1*m3*p1*x2+cp3*m1*p2*x2+3*c1*p3*x2+c1*m1*p3*x2+cp1*m1*p3*x2+cp2*m1*p3*x2+cp3*m1*p3*x2+cp1*m2*p3*x2+m3*p1*x1*x2+cp1*m3*p1*x1*x2+cp3*p2*x1*x2+p3*x1*x2+cp2*p3*x1*x2+cp3*p3*x1*x2+m1*p3*x1*x2+(1/2)*c3*cp1*x2*(1+x2)+(1/2)*cp1*m3*x2*(1+x2)+(1/2)*cp3*x1*x2*(1+x2)+(1/2)*m3*x1*x2*(1+x2)+(1/2)*cp1*m3*x1*x2*(1+x2)+c2*p1*x3+c2*cp1*p1*x3+c2*cp2*p1*x3+cp1*m2*p1*x3+2*cp2*m2*p1*x3+cp2*m3*p1*x3+c2*cp1*p2*x3+cp1*m2*p2*x3+c1*c2*p3*x3+c1*cp2*p3*x3+c2*m1*p3*x3+c1*cp2*m1*p3*x3+c2*cp2*m1*p3*x3+c2*x1*x3+c1*c2*x1*x3+c1*cp2*x1*x3+c2*m1*x1*x3+c1*cp2*m1*x1*x3+c2*cp2*m1*x1*x3+c2*m2*x1*x3+c2*p1*x1*x3+2*cp2*p1*x1*x3+cp2*m2*p1*x1*x3+cp2*m3*p1*x1*x3+c2*p2*x1*x3+2*cp2*p2*x1*x3+cp2*m2*p2*x1*x3+cp2*m3*p2*x1*x3+c2*p3*x1*x3+2*cp2*p3*x1*x3+(3/2)*c2*x1*(1+x1)*x3+(1/2)*c2*cp2*x1*(1+x1)*x3+cp2*m2*x1*(1+x1)*x3+(3/2)*cp2*m3*x1*(1+x1)*x3+c1*c2*x2*x3+c1*cp2*x2*x3+c2*m1*x2*x3+c1*cp2*m1*x2*x3+c2*cp2*m1*x2*x3+3*p1*x2*x3+2*c1*p1*x2*x3+c2*p1*x2*x3+3*cp2*p1*x2*x3+c1*cp2*p1*x2*x3+c2*cp2*p1*x2*x3+c1*cp3*p1*x2*x3+3*m1*p1*x2*x3+cp3*m1*p1*x2*x3+2*cp2*m2*p1*x2*x3+m3*p1*x2*x3+cp2*m3*p1*x2*x3+2*c1*p2*x2*x3+c1*cp2*p2*x2*x3+c1*cp3*p2*x2*x3+3*m1*p2*x2*x3+cp3*m1*p2*x2*x3+c1*cp2*p3*x2*x3+c1*cp3*p3*x2*x3+m1*p3*x2*x3+cp3*m1*p3*x2*x3+x1*x2*x3+2*c2*x1*x2*x3+2*cp2*x1*x2*x3+c2*cp2*x1*x2*x3+cp3*x1*x2*x3+3*cp2*m2*x1*x2*x3+m3*x1*x2*x3+2*cp2*m3*x1*x2*x3+(1/2)*c1*c2*x3*(1+x3)+(1/2)*c2*cp1*x3*(1+x3)+(1/2)*c1*cp2*x3*(1+x3)+(1/2)*c2*m1*x3*(1+x3)+(1/2)*c1*cp2*m1*x3*(1+x3)+(1/2)*c2*cp2*m1*x3*(1+x3)+(1/2)*cp1*m2*x3*(1+x3)+c2*x1*x3*(1+x3)+cp2*x1*x3*(1+x3)+(1/2)*cp2*m2*x1*x3*(1+x3)+(1/2)*cp2*m3*x1*x3*(1+x3)+c1*x2*x3*(1+x3)+m1*x2*x3*(1+x3)+m2*p3*y1+cp3*p1*x2*y1+m3*p1*x2*y1+cp1*m3*p1*x2*y1+c1*p3*x2*y1+(1/2)*cp3*x2*(1+x2)*y1+(1/2)*m3*x2*(1+x2)*y1+(1/2)*cp1*m3*x2*(1+x2)*y1+c2*x3*y1+c1*c2*x3*y1+c1*cp2*x3*y1+3*c2*cp2*x3*y1+c2*m1*x3*y1+c1*cp2*m1*x3*y1+c2*cp2*m1*x3*y1+c2*m2*x3*y1+3*cp2*m2*x3*y1+2*c2*p1*x3*y1+m2*p1*x3*y1+cp2*m2*p1*x3*y1+cp2*m3*p1*x3*y1+2*c2*p2*x3*y1+m2*p2*x3*y1+cp2*m2*p2*x3*y1+cp2*m3*p2*x3*y1+c2*p3*x3*y1+3*c2*x1*x3*y1+cp2*x1*x3*y1+c2*cp2*x1*x3*y1+2*cp2*m2*x1*x3*y1+3*cp2*m3*x1*x3*y1+3*x2*x3*y1+4*c2*x2*x3*y1+4*cp2*x2*x3*y1+c2*cp2*x2*x3*y1+cp3*x2*x3*y1+2*m2*x2*x3*y1+3*cp2*m2*x2*x3*y1+m3*x2*x3*y1+2*cp2*m3*x2*x3*y1+(3/2)*c2*x3*(1+x3)*y1+(1/2)*m2*x3*(1+x3)*y1+(1/2)*cp2*m2*x3*(1+x3)*y1+(1/2)*cp2*m3*x3*(1+x3)*y1+(3/2)*c2*x3*y1*(1+y1)+(1/2)*c2*cp2*x3*y1*(1+y1)+cp2*m2*x3*y1*(1+y1)+(3/2)*cp2*m3*x3*y1*(1+y1)+c3*cp1*y2+c1*c3*cp1*y2+c3*cp1*m1*y2+c3*p1*y2+c3*cp1*p1*y2+cp3*m1*p1*y2+cp3*m2*p1*y2+cp1*m3*p1*y2+cp3*m1*p2*y2+2*c1*p3*y2+c1*m1*p3*y2+cp1*m1*p3*y2+cp2*m1*p3*y2+cp3*m1*p3*y2+cp1*m2*p3*y2+m3*p1*x1*y2+cp1*m3*p1*x1*y2+cp3*p2*x1*y2+cp2*p3*x1*y2+cp3*p3*x1*y2+m1*p3*x1*y2+c3*cp1*x2*y2+cp1*m3*x2*y2+c1*p3*x2*y2+m1*p3*x2*y2+cp3*x1*x2*y2+m3*x1*x2*y2+cp1*m3*x1*x2*y2+c1*c2*x3*y2+c2*cp1*x3*y2+c1*cp2*x3*y2+c2*m1*x3*y2+c1*cp2*m1*x3*y2+c2*cp2*m1*x3*y2+cp1*m2*x3*y2+2*p1*x3*y2+2*c1*p1*x3*y2+c2*p1*x3*y2+3*cp2*p1*x3*y2+c1*cp2*p1*x3*y2+c2*cp2*p1*x3*y2+cp3*p1*x3*y2+c1*cp3*p1*x3*y2+3*m1*p1*x3*y2+cp3*m1*p1*x3*y2+2*cp2*m2*p1*x3*y2+m3*p1*x3*y2+cp2*m3*p1*x3*y2+2*c1*p2*x3*y2+c1*cp2*p2*x3*y2+c1*cp3*p2*x3*y2+3*m1*p2*x3*y2+cp3*m1*p2*x3*y2+c1*cp2*p3*x3*y2+c1*cp3*p3*x3*y2+m1*p3*x3*y2+cp3*m1*p3*x3*y2+x1*x3*y2+2*c2*x1*x3*y2+2*cp2*x1*x3*y2+c2*cp2*x1*x3*y2+cp3*x1*x3*y2+3*cp2*m2*x1*x3*y2+m3*x1*x3*y2+2*cp2*m3*x1*x3*y2+c1*x3*(1+x3)*y2+m1*x3*(1+x3)*y2+cp3*p1*y1*y2+m3*p1*y1*y2+cp1*m3*p1*y1*y2+c1*p3*y1*y2+cp3*x2*y1*y2+m3*x2*y1*y2+cp1*m3*x2*y1*y2+x3*y1*y2+3*c2*x3*y1*y2+2*cp2*x3*y1*y2+c2*cp2*x3*y1*y2+cp3*x3*y1*y2+m2*x3*y1*y2+3*cp2*m2*x3*y1*y2+m3*x3*y1*y2+2*cp2*m3*x3*y1*y2+(1/2)*c3*cp1*y2*(1+y2)+(1/2)*cp1*m3*y2*(1+y2)+(1/2)*cp3*x1*y2*(1+y2)+(1/2)*m3*x1*y2*(1+y2)+(1/2)*cp1*m3*x1*y2*(1+y2)+(1/2)*cp3*y1*y2*(1+y2)+(1/2)*m3*y1*y2*(1+y2)+(1/2)*cp1*m3*y1*y2*(1+y2)+c2*p1*y3+c2*cp1*p1*y3+c2*cp2*p1*y3+cp1*m2*p1*y3+2*cp2*m2*p1*y3+cp2*m3*p1*y3+c2*cp1*p2*y3+cp1*m2*p2*y3+c1*c2*p3*y3+c1*cp2*p3*y3+c2*m1*p3*y3+c1*cp2*m1*p3*y3+c2*cp2*m1*p3*y3+c1*c2*x1*y3+c1*cp2*x1*y3+c2*m1*x1*y3+c1*cp2*m1*x1*y3+c2*cp2*m1*x1*y3+c2*m2*x1*y3+c2*p1*x1*y3+2*cp2*p1*x1*y3+cp2*m2*p1*x1*y3+cp2*m3*p1*x1*y3+c2*p2*x1*y3+2*cp2*p2*x1*y3+cp2*m2*p2*x1*y3+cp2*m3*p2*x1*y3+c2*p3*x1*y3+2*cp2*p3*x1*y3+(3/2)*c2*x1*(1+x1)*y3+(1/2)*cp2*x1*(1+x1)*y3+(1/2)*c2*cp2*x1*(1+x1)*y3+cp2*m2*x1*(1+x1)*y3+(3/2)*cp2*m3*x1*(1+x1)*y3+c1*c2*x2*y3+c1*cp2*x2*y3+c2*m1*x2*y3+c1*cp2*m1*x2*y3+c2*cp2*m1*x2*y3+2*p1*x2*y3+c1*p1*x2*y3+c2*p1*x2*y3+2*cp2*p1*x2*y3+c1*cp2*p1*x2*y3+c2*cp2*p1*x2*y3+c1*cp3*p1*x2*y3+2*m1*p1*x2*y3+cp3*m1*p1*x2*y3+2*cp2*m2*p1*x2*y3+m3*p1*x2*y3+cp2*m3*p1*x2*y3+c1*p2*x2*y3+c1*cp2*p2*x2*y3+c1*cp3*p2*x2*y3+2*m1*p2*x2*y3+cp3*m1*p2*x2*y3+c1*cp2*p3*x2*y3+c1*cp3*p3*x2*y3+m1*p3*x2*y3+cp3*m1*p3*x2*y3+2*c2*x1*x2*y3+cp2*x1*x2*y3+c2*cp2*x1*x2*y3+cp3*x1*x2*y3+3*cp2*m2*x1*x2*y3+m3*x1*x2*y3+2*cp2*m3*x1*x2*y3+c1*c2*x3*y3+c1*cp2*x3*y3+c2*m1*x3*y3+c1*cp2*m1*x3*y3+c2*cp2*m1*x3*y3+2*cp2*p1*x3*y3+2*c2*x1*x3*y3+2*cp2*x1*x3*y3+cp2*m2*x1*x3*y3+cp2*m3*x1*x3*y3+c1*c2*y1*y3+3*cp2*y1*y3+c1*cp2*y1*y3+3*c2*cp2*y1*y3+c2*m1*y1*y3+c1*cp2*m1*y1*y3+c2*cp2*m1*y1*y3+c2*m2*y1*y3+3*cp2*m2*y1*y3+2*c2*p1*y1*y3+m2*p1*y1*y3+cp2*m2*p1*y1*y3+cp2*m3*p1*y1*y3+2*c2*p2*y1*y3+m2*p2*y1*y3+cp2*m2*p2*y1*y3+cp2*m3*p2*y1*y3+c2*p3*y1*y3+3*c2*x1*y1*y3+c2*cp2*x1*y1*y3+2*cp2*m2*x1*y1*y3+3*cp2*m3*x1*y1*y3+4*c2*x2*y1*y3+3*cp2*x2*y1*y3+c2*cp2*x2*y1*y3+cp3*x2*y1*y3+2*m2*x2*y1*y3+3*cp2*m2*x2*y1*y3+m3*x2*y1*y3+2*cp2*m3*x2*y1*y3+2*c2*x3*y1*y3+4*cp2*x3*y1*y3+cp2*m2*x3*y1*y3+cp2*m3*x3*y1*y3+(3/2)*c2*y1*(1+y1)*y3+(1/2)*cp2*y1*(1+y1)*y3+(1/2)*c2*cp2*y1*(1+y1)*y3+cp2*m2*y1*(1+y1)*y3+(3/2)*cp2*m3*y1*(1+y1)*y3+c1*c2*y2*y3+cp1*y2*y3+c2*cp1*y2*y3+c1*cp2*y2*y3+c2*m1*y2*y3+c1*cp2*m1*y2*y3+c2*cp2*m1*y2*y3+cp1*m2*y2*y3+c1*p1*y2*y3+c2*p1*y2*y3+4*cp2*p1*y2*y3+c1*cp2*p1*y2*y3+c2*cp2*p1*y2*y3+cp3*p1*y2*y3+c1*cp3*p1*y2*y3+2*m1*p1*y2*y3+cp3*m1*p1*y2*y3+2*cp2*m2*p1*y2*y3+m3*p1*y2*y3+cp2*m3*p1*y2*y3+c1*p2*y2*y3+c1*cp2*p2*y2*y3+c1*cp3*p2*y2*y3+2*m1*p2*y2*y3+cp3*m1*p2*y2*y3+c1*cp2*p3*y2*y3+c1*cp3*p3*y2*y3+m1*p3*y2*y3+cp3*m1*p3*y2*y3+2*c2*x1*y2*y3+3*cp2*x1*y2*y3+c2*cp2*x1*y2*y3+cp3*x1*y2*y3+3*cp2*m2*x1*y2*y3+m3*x1*y2*y3+2*cp2*m3*x1*y2*y3+y1*y2*y3+3*c2*y1*y2*y3+3*cp2*y1*y2*y3+c2*cp2*y1*y2*y3+cp3*y1*y2*y3+m2*y1*y2*y3+3*cp2*m2*y1*y2*y3+m3*y1*y2*y3+2*cp2*m3*y1*y2*y3+(1/2)*c1*c2*y3*(1+y3)+(1/2)*c2*cp1*y3*(1+y3)+(1/2)*c1*cp2*y3*(1+y3)+(1/2)*c2*m1*y3*(1+y3)+(1/2)*c1*cp2*m1*y3*(1+y3)+(1/2)*c2*cp2*m1*y3*(1+y3)+(1/2)*cp1*m2*y3*(1+y3)+c2*x1*y3*(1+y3)+cp2*x1*y3*(1+y3)+(1/2)*cp2*m2*x1*y3*(1+y3)+(1/2)*cp2*m3*x1*y3*(1+y3)+(1/2)*c1*x2*y3*(1+y3)+(1/2)*m1*x2*y3*(1+y3)+(3/2)*c2*y1*y3*(1+y3)+(1/2)*m2*y1*y3*(1+y3)+(1/2)*cp2*m2*y1*y3*(1+y3)+(1/2)*cp2*m3*y1*y3*(1+y3)+(1/2)*c1*y2*y3*(1+y3)+(1/2)*m1*y2*y3*(1+y3)+c3*cp1*x2*z1+m3*x2*z1+2*m3*p1*x2*z1+cp1*m3*p1*x2*z1+cp3*p2*x2*z1+p3*x2*z1+cp2*p3*x2*z1+cp3*p3*x2*z1+m1*p3*x2*z1+m3*x1*x2*z1+(1/2)*cp3*x2*(1+x2)*z1+m3*x2*(1+x2)*z1+(1/2)*cp1*m3*x2*(1+x2)*z1+c2*x3*z1+c1*c2*x3*z1+c1*cp2*x3*z1+c2*m1*x3*z1+c1*cp2*m1*x3*z1+c2*cp2*m1*x3*z1+c2*m2*x3*z1+c2*p1*x3*z1+2*cp2*p1*x3*z1+2*cp2*m2*p1*x3*z1+2*cp2*m3*p1*x3*z1+c2*p2*x3*z1+2*cp2*p2*x3*z1+2*cp2*m2*p2*x3*z1+2*cp2*m3*p2*x3*z1+c2*p3*x3*z1+2*cp2*p3*x3*z1+cp2*m2*p3*x3*z1+cp2*m3*p3*x3*z1+3*c2*x1*x3*z1+c2*cp2*x1*x3*z1+cp2*m1*x1*x3*z1+3*cp2*m2*x1*x3*z1+2*cp2*m3*x1*x3*z1+x2*x3*z1+2*c2*x2*x3*z1+2*cp2*x2*x3*z1+c2*cp2*x2*x3*z1+cp3*x2*x3*z1+3*cp2*m2*x2*x3*z1+m3*x2*x3*z1+2*cp2*m3*x2*x3*z1+c2*x3*(1+x3)*z1+cp2*x3*(1+x3)*z1+(1/2)*cp2*m2*x3*(1+x3)*z1+(1/2)*cp2*m3*x3*(1+x3)*z1+m3*x2*y1*z1+3*c2*x3*y1*z1+cp2*x3*y1*z1+c2*cp2*x3*y1*z1+cp2*m1*x3*y1*z1+3*cp2*m2*x3*y1*z1+2*cp2*m3*x3*y1*z1+c3*cp1*y2*z1+m3*y2*z1+2*m3*p1*y2*z1+cp1*m3*p1*y2*z1+cp3*p2*y2*z1+cp2*p3*y2*z1+cp3*p3*y2*z1+m1*p3*y2*z1+m3*x1*y2*z1+cp3*x2*y2*z1+2*m3*x2*y2*z1+cp1*m3*x2*y2*z1+x3*y2*z1+2*c2*x3*y2*z1+2*cp2*x3*y2*z1+c2*cp2*x3*y2*z1+cp3*x3*y2*z1+3*cp2*m2*x3*y2*z1+m3*x3*y2*z1+2*cp2*m3*x3*y2*z1+m3*y1*y2*z1+(1/2)*cp3*y2*(1+y2)*z1+m3*y2*(1+y2)*z1+(1/2)*cp1*m3*y2*(1+y2)*z1+c1*c2*y3*z1+c1*cp2*y3*z1+c2*m1*y3*z1+c1*cp2*m1*y3*z1+c2*cp2*m1*y3*z1+c2*m2*y3*z1+c2*p1*y3*z1+2*cp2*p1*y3*z1+2*cp2*m2*p1*y3*z1+2*cp2*m3*p1*y3*z1+c2*p2*y3*z1+2*cp2*p2*y3*z1+2*cp2*m2*p2*y3*z1+2*cp2*m3*p2*y3*z1+c2*p3*y3*z1+2*cp2*p3*y3*z1+cp2*m2*p3*y3*z1+cp2*m3*p3*y3*z1+3*c2*x1*y3*z1+cp2*x1*y3*z1+c2*cp2*x1*y3*z1+cp2*m1*x1*y3*z1+3*cp2*m2*x1*y3*z1+2*cp2*m3*x1*y3*z1+2*c2*x2*y3*z1+cp2*x2*y3*z1+c2*cp2*x2*y3*z1+cp3*x2*y3*z1+3*cp2*m2*x2*y3*z1+m3*x2*y3*z1+2*cp2*m3*x2*y3*z1+2*c2*x3*y3*z1+2*cp2*x3*y3*z1+cp2*m2*x3*y3*z1+cp2*m3*x3*y3*z1+3*c2*y1*y3*z1+c2*cp2*y1*y3*z1+cp2*m1*y1*y3*z1+3*cp2*m2*y1*y3*z1+2*cp2*m3*y1*y3*z1+2*c2*y2*y3*z1+3*cp2*y2*y3*z1+c2*cp2*y2*y3*z1+cp3*y2*y3*z1+3*cp2*m2*y2*y3*z1+m3*y2*y3*z1+2*cp2*m3*y2*y3*z1+c2*y3*(1+y3)*z1+cp2*y3*(1+y3)*z1+(1/2)*cp2*m2*y3*(1+y3)*z1+(1/2)*cp2*m3*y3*(1+y3)*z1+(1/2)*cp3*m2*z1*(1+z1)+(3/2)*c2*x3*z1*(1+z1)+(1/2)*c2*cp2*x3*z1*(1+z1)+cp2*m2*x3*z1*(1+z1)+(3/2)*cp2*m3*x3*z1*(1+z1)+(3/2)*c2*y3*z1*(1+z1)+(1/2)*cp2*y3*z1*(1+z1)+(1/2)*c2*cp2*y3*z1*(1+z1)+cp2*m2*y3*z1*(1+z1)+(3/2)*cp2*m3*y3*z1*(1+z1)+c1*c3*z2+c1*c3*cp1*z2+c3*cp1*p1*z2+cp3*m1*p1*z2+cp3*m2*p1*z2+cp1*m3*p1*z2+cp3*m1*p2*z2+2*c1*p3*z2+cp1*m1*p3*z2+cp2*m1*p3*z2+cp3*m1*p3*z2+cp1*m2*p3*z2+m3*p1*x1*z2+cp1*m3*p1*x1*z2+cp3*p2*x1*z2+cp2*p3*x1*z2+cp3*p3*x1*z2+m1*p3*x1*z2+(3/2)*m3*x1*(1+x1)*z2+cp1*m3*x2*z2+2*m3*p1*x2*z2+c1*p3*x2*z2+m1*p3*x2*z2+c1*m1*p3*x2*z2+cp3*x1*x2*z2+m3*x1*x2*z2+cp1*m3*x1*x2*z2+c1*c2*x3*z2+c1*cp2*x3*z2+c2*m1*x3*z2+c1*cp2*m1*x3*z2+c2*cp2*m1*x3*z2+3*c1*p1*x3*z2+2*c2*p1*x3*z2+3*cp2*p1*x3*z2+c1*cp2*p1*x3*z2+c2*cp2*p1*x3*z2+c1*cp3*p1*x3*z2+cp2*m1*p1*x3*z2+2*cp2*m2*p1*x3*z2+cp2*m3*p1*x3*z2+3*c1*p2*x3*z2+c1*cp2*p2*x3*z2+c1*cp3*p2*x3*z2+cp2*m1*p2*x3*z2+c1*p3*x3*z2+c1*cp2*p3*x3*z2+c1*cp3*p3*x3*z2+cp2*m1*p3*x3*z2+3*c2*x1*x3*z2+cp2*x1*x3*z2+c2*cp2*x1*x3*z2+cp3*x1*x3*z2+3*cp2*m2*x1*x3*z2+2*cp2*m3*x1*x3*z2+c1*x3*(1+x3)*z2+cp3*p1*y1*z2+m3*p1*y1*z2+cp1*m3*p1*y1*z2+c1*p3*y1*z2+m1*p3*y1*z2+3*m3*x1*y1*z2+cp3*x2*y1*z2+m3*x2*y1*z2+cp1*m3*x2*y1*z2+3*c2*x3*y1*z2+3*cp2*x3*y1*z2+c2*cp2*x3*y1*z2+cp3*x3*y1*z2+3*cp2*m2*x3*y1*z2+2*cp2*m3*x3*y1*z2+(3/2)*m3*y1*(1+y1)*z2+cp1*m3*y2*z2+2*m3*p1*y2*z2+m1*p3*y2*z2+c1*m1*p3*y2*z2+cp3*x1*y2*z2+m3*x1*y2*z2+cp1*m3*x1*y2*z2+cp3*y1*y2*z2+m3*y1*y2*z2+cp1*m3*y1*y2*z2+c1*c2*y3*z2+c1*cp2*y3*z2+c2*m1*y3*z2+c1*cp2*m1*y3*z2+c2*cp2*m1*y3*z2+2*c1*p1*y3*z2+2*c2*p1*y3*z2+2*cp2*p1*y3*z2+c1*cp2*p1*y3*z2+c2*cp2*p1*y3*z2+c1*cp3*p1*y3*z2+cp2*m1*p1*y3*z2+2*cp2*m2*p1*y3*z2+cp2*m3*p1*y3*z2+2*c1*p2*y3*z2+c1*cp2*p2*y3*z2+c1*cp3*p2*y3*z2+cp2*m1*p2*y3*z2+c1*p3*y3*z2+c1*cp2*p3*y3*z2+c1*cp3*p3*y3*z2+cp2*m1*p3*y3*z2+3*c2*x1*y3*z2+2*cp2*x1*y3*z2+c2*cp2*x1*y3*z2+cp3*x1*y3*z2+3*cp2*m2*x1*y3*z2+2*cp2*m3*x1*y3*z2+3*c2*y1*y3*z2+4*cp2*y1*y3*z2+c2*cp2*y1*y3*z2+cp3*y1*y3*z2+3*cp2*m2*y1*y3*z2+2*cp2*m3*y1*y3*z2+(1/2)*c1*y3*(1+y3)*z2+c3*z1*z2+c3*cp1*z1*z2+m3*z1*z2+3*m3*p1*z1*z2+cp1*m3*p1*z1*z2+cp3*p2*z1*z2+m3*p2*z1*z2+cp2*p3*z1*z2+cp3*p3*z1*z2+m1*p3*z1*z2+m2*p3*z1*z2+m3*p3*z1*z2+m3*x1*z1*z2+cp3*x2*z1*z2+cp1*m3*x2*z1*z2+3*c2*x3*z1*z2+cp2*x3*z1*z2+c2*cp2*x3*z1*z2+cp3*x3*z1*z2+3*cp2*m2*x3*z1*z2+2*cp2*m3*x3*z1*z2+m3*y1*z1*z2+cp3*y2*z1*z2+cp1*m3*y2*z1*z2+3*c2*y3*z1*z2+2*cp2*y3*z1*z2+c2*cp2*y3*z1*z2+cp3*y3*z1*z2+3*cp2*m2*y3*z1*z2+2*cp2*m3*y3*z1*z2+(3/2)*m3*z1*(1+z1)*z2+(1/2)*c3*cp1*z2*(1+z2)+(1/2)*cp1*m3*z2*(1+z2)+(1/2)*cp3*x1*z2*(1+z2)+(1/2)*m3*x1*z2*(1+z2)+(1/2)*cp1*m3*x1*z2*(1+z2)+(1/2)*cp3*y1*z2*(1+z2)+(1/2)*m3*y1*z2*(1+z2)+(1/2)*cp1*m3*y1*z2*(1+z2)+(1/2)*cp3*z1*z2*(1+z2)+m3*z1*z2*(1+z2)+(1/2)*cp1*m3*z1*z2*(1+z2)+2*c2*p1*z3+c2*cp1*p1*z3+c2*cp2*p1*z3+cp2*m2*p1*z3+cp2*m3*p1*z3+c2*cp1*p2*z3+c1*c2*p3*z3+c1*cp2*p3*z3+c2*m1*p3*z3+c1*cp2*m1*p3*z3+c2*cp2*m1*p3*z3+c1*c2*x1*z3+c1*cp2*x1*z3+c2*m1*x1*z3+c1*cp2*m1*x1*z3+c2*cp2*m1*x1*z3+c2*p1*x1*z3+2*cp2*p1*x1*z3+cp2*m2*p1*x1*z3+cp2*m3*p1*x1*z3+c2*p2*x1*z3+2*cp2*p2*x1*z3+cp2*m2*p2*x1*z3+cp2*m3*p2*x1*z3+c2*p3*x1*z3+2*cp2*p3*x1*z3+m2*p3*x1*z3+c2*x1*(1+x1)*z3+(1/2)*c2*cp2*x1*(1+x1)*z3+(3/2)*cp2*m2*x1*(1+x1)*z3+(3/2)*cp2*m3*x1*(1+x1)*z3+c1*c2*x2*z3+c1*cp2*x2*z3+c2*m1*x2*z3+c1*cp2*m1*x2*z3+c2*cp2*m1*x2*z3+4*p1*x2*z3+4*c1*p1*x2*z3+3*cp2*p1*x2*z3+c1*cp2*p1*x2*z3+c2*cp2*p1*x2*z3+c1*cp3*p1*x2*z3+4*m1*p1*x2*z3+cp3*m1*p1*x2*z3+2*m2*p1*x2*z3+cp2*m2*p1*x2*z3+2*m3*p1*x2*z3+cp1*m3*p1*x2*z3+cp2*m3*p1*x2*z3+4*c1*p2*x2*z3+c1*cp2*p2*x2*z3+c1*cp3*p2*x2*z3+4*m1*p2*x2*z3+cp3*m1*p2*x2*z3+cp1*m3*p2*x2*z3+c1*cp2*p3*x2*z3+c1*cp3*p3*x2*z3+cp3*m1*p3*x2*z3+cp1*m3*p3*x2*z3+2*x1*x2*z3+c1*x1*x2*z3+c2*x1*x2*z3+2*cp2*x1*x2*z3+c2*cp2*x1*x2*z3+cp3*x1*x2*z3+m1*x1*x2*z3+cp1*m1*x1*x2*z3+2*m2*x1*x2*z3+cp1*m2*x1*x2*z3+2*cp2*m2*x1*x2*z3+2*m3*x1*x2*z3+cp1*m3*x1*x2*z3+2*cp2*m3*x1*x2*z3+c1*c2*x3*z3+c2*cp1*x3*z3+c1*cp2*x3*z3+c2*m1*x3*z3+c1*cp2*m1*x3*z3+c2*cp2*m1*x3*z3+c2*cp1*m2*x3*z3+2*c2*p1*x3*z3+4*cp2*p1*x3*z3+2*cp2*m2*p1*x3*z3+3*c2*x1*x3*z3+3*cp2*x1*x3*z3+3*cp2*m2*x1*x3*z3+cp2*m3*x1*x3*z3+3*c2*y1*z3+c1*c2*y1*z3+c1*cp2*y1*z3+3*c2*cp2*y1*z3+c2*m1*y1*z3+c1*cp2*m1*y1*z3+c2*cp2*m1*y1*z3+2*c2*p1*y1*z3+cp2*m2*p1*y1*z3+cp2*m3*p1*y1*z3+2*c2*p2*y1*z3+cp2*m2*p2*y1*z3+cp2*m3*p2*y1*z3+c2*p3*y1*z3+m2*p3*y1*z3+2*c2*x1*y1*z3+cp2*x1*y1*z3+c2*cp2*x1*y1*z3+3*cp2*m2*x1*y1*z3+3*cp2*m3*x1*y1*z3+x2*y1*z3+c1*x2*y1*z3+3*c2*x2*y1*z3+4*cp2*x2*y1*z3+c2*cp2*x2*y1*z3+cp3*x2*y1*z3+m1*x2*y1*z3+cp1*m1*x2*y1*z3+2*m2*x2*y1*z3+cp1*m2*x2*y1*z3+2*cp2*m2*x2*y1*z3+2*m3*x2*y1*z3+cp1*m3*x2*y1*z3+2*cp2*m3*x2*y1*z3+4*c2*x3*y1*z3+3*cp2*x3*y1*z3+c2*m2*x3*y1*z3+5*cp2*m2*x3*y1*z3+cp2*m3*x3*y1*z3+c2*y1*(1+y1)*z3+(1/2)*c2*cp2*y1*(1+y1)*z3+(3/2)*cp2*m2*y1*(1+y1)*z3+(3/2)*cp2*m3*y1*(1+y1)*z3+c1*c2*y2*z3+c2*cp1*y2*z3+c1*cp2*y2*z3+c2*m1*y2*z3+c1*cp2*m1*y2*z3+c2*cp2*m1*y2*z3+4*c1*p1*y2*z3+3*cp2*p1*y2*z3+c1*cp2*p1*y2*z3+c2*cp2*p1*y2*z3+cp3*p1*y2*z3+c1*cp3*p1*y2*z3+4*m1*p1*y2*z3+cp3*m1*p1*y2*z3+2*m2*p1*y2*z3+cp2*m2*p1*y2*z3+2*m3*p1*y2*z3+cp1*m3*p1*y2*z3+cp2*m3*p1*y2*z3+4*c1*p2*y2*z3+c1*cp2*p2*y2*z3+c1*cp3*p2*y2*z3+4*m1*p2*y2*z3+cp3*m1*p2*y2*z3+cp1*m3*p2*y2*z3+c1*cp2*p3*y2*z3+c1*cp3*p3*y2*z3+cp3*m1*p3*y2*z3+cp1*m3*p3*y2*z3+x1*y2*z3+c1*x1*y2*z3+c2*x1*y2*z3+2*cp2*x1*y2*z3+c2*cp2*x1*y2*z3+cp3*x1*y2*z3+m1*x1*y2*z3+cp1*m1*x1*y2*z3+2*m2*x1*y2*z3+cp1*m2*x1*y2*z3+2*cp2*m2*x1*y2*z3+2*m3*x1*y2*z3+cp1*m3*x1*y2*z3+2*cp2*m3*x1*y2*z3+c1*y1*y2*z3+2*c2*y1*y2*z3+2*cp2*y1*y2*z3+c2*cp2*y1*y2*z3+cp3*y1*y2*z3+m1*y1*y2*z3+cp1*m1*y1*y2*z3+2*m2*y1*y2*z3+cp1*m2*y1*y2*z3+2*cp2*m2*y1*y2*z3+2*m3*y1*y2*z3+cp1*m3*y1*y2*z3+2*cp2*m3*y1*y2*z3+c1*c2*y3*z3+c1*cp2*y3*z3+c2*m1*y3*z3+c1*cp2*m1*y3*z3+c2*cp2*m1*y3*z3+c2*cp1*m2*y3*z3+2*c2*p1*y3*z3+4*cp2*p1*y3*z3+2*cp2*m2*p1*y3*z3+3*c2*x1*y3*z3+cp2*x1*y3*z3+3*cp2*m2*x1*y3*z3+cp2*m3*x1*y3*z3+5*c2*y1*y3*z3+3*cp2*y1*y3*z3+c2*m2*y1*y3*z3+5*cp2*m2*y1*y3*z3+cp2*m3*y1*y3*z3+c1*c2*z1*z3+c1*cp2*z1*z3+c2*m1*z1*z3+c1*cp2*m1*z1*z3+c2*cp2*m1*z1*z3+c2*p1*z1*z3+2*cp2*p1*z1*z3+m2*p1*z1*z3+2*cp2*m2*p1*z1*z3+2*cp2*m3*p1*z1*z3+c2*p2*z1*z3+2*cp2*p2*z1*z3+m2*p2*z1*z3+2*cp2*m2*p2*z1*z3+2*cp2*m3*p2*z1*z3+c2*p3*z1*z3+2*cp2*p3*z1*z3+cp2*m2*p3*z1*z3+cp2*m3*p3*z1*z3+2*c2*x1*z1*z3+c2*cp2*x1*z1*z3+cp2*m1*x1*z1*z3+2*cp2*m2*x1*z1*z3+2*cp2*m3*x1*z1*z3+2*x2*z1*z3+c1*x2*z1*z3+c2*x2*z1*z3+2*cp2*x2*z1*z3+c2*cp2*x2*z1*z3+cp3*x2*z1*z3+cp1*m1*x2*z1*z3+m2*x2*z1*z3+cp1*m2*x2*z1*z3+2*cp2*m2*x2*z1*z3+m3*x2*z1*z3+cp1*m3*x2*z1*z3+2*cp2*m3*x2*z1*z3+3*c2*x3*z1*z3+3*cp2*x3*z1*z3+3*cp2*m2*x3*z1*z3+cp2*m3*x3*z1*z3+2*c2*y1*z1*z3+cp2*y1*z1*z3+c2*cp2*y1*z1*z3+cp2*m1*y1*z1*z3+2*cp2*m2*y1*z1*z3+2*cp2*m3*y1*z1*z3+y2*z1*z3+c1*y2*z1*z3+c2*y2*z1*z3+2*cp2*y2*z1*z3+c2*cp2*y2*z1*z3+cp3*y2*z1*z3+cp1*m1*y2*z1*z3+m2*y2*z1*z3+cp1*m2*y2*z1*z3+2*cp2*m2*y2*z1*z3+m3*y2*z1*z3+cp1*m3*y2*z1*z3+2*cp2*m3*y2*z1*z3+3*c2*y3*z1*z3+cp2*y3*z1*z3+3*cp2*m2*y3*z1*z3+cp2*m3*y3*z1*z3+c2*z1*(1+z1)*z3+(1/2)*c2*cp2*z1*(1+z1)*z3+(3/2)*cp2*m2*z1*(1+z1)*z3+(3/2)*cp2*m3*z1*(1+z1)*z3+c1*c2*z2*z3+c1*cp2*z2*z3+c2*m1*z2*z3+c1*cp2*m1*z2*z3+c2*cp2*m1*z2*z3+p1*z2*z3+5*c1*p1*z2*z3+c2*p1*z2*z3+3*cp2*p1*z2*z3+c1*cp2*p1*z2*z3+c2*cp2*p1*z2*z3+c1*cp3*p1*z2*z3+m1*p1*z2*z3+cp2*m1*p1*z2*z3+m2*p1*z2*z3+cp2*m2*p1*z2*z3+cp1*m3*p1*z2*z3+cp2*m3*p1*z2*z3+5*c1*p2*z2*z3+c1*cp2*p2*z2*z3+c1*cp3*p2*z2*z3+m1*p2*z2*z3+cp2*m1*p2*z2*z3+cp1*m3*p2*z2*z3+c1*p3*z2*z3+c1*cp2*p3*z2*z3+c1*cp3*p3*z2*z3+m1*p3*z2*z3+cp2*m1*p3*z2*z3+cp1*m3*p3*z2*z3+c1*x1*z2*z3+2*c2*x1*z2*z3+cp2*x1*z2*z3+c2*cp2*x1*z2*z3+cp3*x1*z2*z3+m1*x1*z2*z3+cp1*m1*x1*z2*z3+cp1*m2*x1*z2*z3+2*cp2*m2*x1*z2*z3+cp1*m3*x1*z2*z3+2*cp2*m3*x1*z2*z3+5*y1*z2*z3+c1*y1*z2*z3+2*c2*y1*z2*z3+3*cp2*y1*z2*z3+c2*cp2*y1*z2*z3+cp3*y1*z2*z3+m1*y1*z2*z3+cp1*m1*y1*z2*z3+cp1*m2*y1*z2*z3+2*cp2*m2*y1*z2*z3+cp1*m3*y1*z2*z3+2*cp2*m3*y1*z2*z3+c1*z1*z2*z3+2*c2*z1*z2*z3+cp2*z1*z2*z3+c2*cp2*z1*z2*z3+cp3*z1*z2*z3+cp1*m1*z1*z2*z3+m2*z1*z2*z3+cp1*m2*z1*z2*z3+2*cp2*m2*z1*z2*z3+m3*z1*z2*z3+cp1*m3*z1*z2*z3+2*cp2*m3*z1*z2*z3+(1/2)*c1*c2*z3*(1+z3)+(1/2)*c2*cp1*z3*(1+z3)+(1/2)*c1*cp2*z3*(1+z3)+(1/2)*c2*m1*z3*(1+z3)+(1/2)*c1*cp2*m1*z3*(1+z3)+(1/2)*c2*cp2*m1*z3*(1+z3)+c2*x1*z3*(1+z3)+cp2*x1*z3*(1+z3)+(1/2)*m2*x1*z3*(1+z3)+(1/2)*cp2*m2*x1*z3*(1+z3)+(1/2)*cp2*m3*x1*z3*(1+z3)+2*c1*x2*z3*(1+z3)+2*m1*x2*z3*(1+z3)+(3/2)*c2*y1*z3*(1+z3)+(1/2)*m2*y1*z3*(1+z3)+(1/2)*cp2*m2*y1*z3*(1+z3)+(1/2)*cp2*m3*y1*z3*(1+z3)+2*c1*y2*z3*(1+z3)+2*m1*y2*z3*(1+z3)+c2*z1*z3*(1+z3)+cp2*z1*z3*(1+z3)+(1/2)*m2*z1*z3*(1+z3)+(1/2)*cp2*m2*z1*z3*(1+z3)+(1/2)*cp2*m3*z1*z3*(1+z3)+2*c1*z2*z3*(1+z3);
end;
#####################################################################
#Space Group No. 140 (I4/mcm)
#####################################################################
Aiin140:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin140:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin140:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Axyzin140:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return x1+y1+z1;
end;
#####################################################################
Bdeltain140:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################
Bcxyin140:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return (x1+y1)*z2+cp1*(x1+y1)*(x2+y2)+cp1*(x1+x2+y1+y2)*z2;
end;
#####################################################################
#Space Group No. 142 (Subscript[I4,1]/acd)
#####################################################################
Aiin142:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return p1;
end;
#####################################################################
Acpin142:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return cp1;
end;
#####################################################################
Amin142:=function(g)
local x1, y1, z1, c1, cp1, m1, p1;
x1:=g[1];y1:=g[2];z1:=g[3];c1:=g[4];cp1:=g[5];m1:=g[6];p1:=g[7];
return m1;
end;
#####################################################################
Bdeltain142:=function(g1,g2)
local x1, y1, z1, c1, cp1, m1, p1, x2, y2, z2, c2, cp2, m2, p2;
x1:=g1[1];y1:=g1[2];z1:=g1[3];c1:=g1[4];cp1:=g1[5];m1:=g1[6];p1:=g1[7];
x2:=g2[1];y2:=g2[2];z2:=g2[3];c2:=g2[4];cp2:=g2[5];m2:=g2[6];p2:=g2[7];
return c1*c2+c1*cp2+cp1*cp2+c2*m1+c1*cp2*m1+c2*cp2*m1;
end;
#####################################################################


